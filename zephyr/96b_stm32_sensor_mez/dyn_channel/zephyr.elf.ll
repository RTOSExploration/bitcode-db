; ModuleID = 'build/96b_stm32_sensor_mez/dyn_channel/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.zbus_observer.17 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.16*)* }
%struct.zbus_channel.16 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.17** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.external_data_msg = type { i8*, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.zbus_channel.155 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.154** }
%struct.zbus_observer.154 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.155*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238641 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238621 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238611 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238711 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238701 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238691 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238681 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238671 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238661 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238651 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240160 to i8*), void (i8*)* inttoptr (i32 134238631 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [65 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_consumer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_consumer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub, i32 0, i32 0), i8* bitcast (%struct.k_mutex* @_zbus_mutex_ack to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_data_ready_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_pkt_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.zbus_channel.16* @ack to i8*), i8* bitcast (%struct.zbus_channel.16* @data_ready_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer.17, %struct.zbus_observer.17* @filter_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel.16* @pkt_chan to i8*), i8* bitcast (%struct.zbus_channel.16* @version_chan to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_producer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_consumer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_consumer_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_consumer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.0", align 4, !dbg !330
@_k_thread_obj_consumer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !340
@_k_thread_stack_consumer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.1", align 64, !dbg !335
@.str = private unnamed_addr constant [19 x i8] c"consumer_thread_id\00", align 1
@_k_thread_data_consumer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_consumer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_consumer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @consumer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 4, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_consumer_thread_id", align 4, !dbg !295
@consumer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_consumer_thread_id, align 4, !dbg !326
@.str.1 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"chan == &data_ready_chan\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/consumer.c\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"%c: size=%02d\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Content\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@_zbus_mutex_pkt_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_pkt_chan", align 4, !dbg !342
@.str.7 = private unnamed_addr constant [9 x i8] c"pkt_chan\00", align 1
@_zbus_message_pkt_chan = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !512
@_zbus_observers_pkt_chan = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* @filter_lis, %struct.zbus_observer.17* null], align 4, !dbg !519
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !498
@.str.1.15 = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 1 }, align 2, !dbg !522
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer.17*] zeroinitializer, align 4, !dbg !529
@version_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.15, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer.17** getelementptr inbounds ([1 x %struct.zbus_observer.17*], [1 x %struct.zbus_observer.17*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !500
@_zbus_mutex_data_ready_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_data_ready_chan", align 4, !dbg !502
@.str.2.13 = private unnamed_addr constant [16 x i8] c"data_ready_chan\00", align 1
@_zbus_message_data_ready_chan = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !534
@_zbus_observers_data_ready_chan = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.17*), %struct.zbus_observer.17* null], align 4, !dbg !539
@data_ready_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.13, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_data_ready_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_data_ready_chan, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_data_ready_chan, i32 0, i32 0) }, section "._zbus_channel.static.data_ready_chan", align 4, !dbg !504
@_zbus_mutex_ack = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_ack", align 4, !dbg !506
@.str.3.18 = private unnamed_addr constant [4 x i8] c"ack\00", align 1
@_zbus_message_ack = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !541
@_zbus_observers_ack = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer.17*), %struct.zbus_observer.17* null], align 4, !dbg !543
@ack = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.18, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_ack, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_ack, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_ack, i32 0, i32 0) }, section "._zbus_channel.static.ack", align 4, !dbg !508
@filter_lis = dso_local global %struct.zbus_observer.17 { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel.16*)* @filter_cb }, section "._zbus_observer.static.filter_lis", align 4, !dbg !510
@consumer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.consumer_sub", align 4, !dbg !115
@.str.4.8 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.9 = private unnamed_addr constant [18 x i8] c"chan == &pkt_chan\00", align 1
@.str.6.10 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7.14 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@_zbus_observer_queue_producer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_producer_sub", align 4, !dbg !545
@_k_fifo_buf__zbus_observer_queue_producer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.0", align 4, !dbg !727
@producer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_producer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.producer_sub", align 4, !dbg !552
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !732
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.1", align 64, !dbg !729
@.str.22 = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !702
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !723
@.str.1.23 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.24 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.3.25 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/producer.c\00", align 1
@pkt_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_pkt_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_pkt_chan, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_pkt_chan, i32 0, i32 0) }, section "._zbus_channel.static.pkt_chan", align 4, !dbg !348
@.str.4.26 = private unnamed_addr constant [23 x i8] c"%c: Ack not received!\0A\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !734
@.str.1.30 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.32 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.33 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.34 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.35 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.36 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.37 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.38 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !757
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.41 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.42 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.44 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.46 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.47 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.48 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.49 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.50 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.51 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !766
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !816
@.str.65 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.67 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.68 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.66 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.70 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.71 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.69 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.72 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.75 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.76 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.78 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.79 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.83 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.84 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.85 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.97 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.89 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.90 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.91 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.92 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.93 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.94 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.95 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.96 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.88 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28.86 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !845
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !976
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !851
@.str.109 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.110 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.111 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.112 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.117 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.118 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !985
@.str.6.119 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.120 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.113 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.114 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1021
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.132, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !1031
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !1036
@.str.131 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.132 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0), i8 2 }, section ".log_const_zbus", align 4, !dbg !1056
@.str.1.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.138 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.139 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.140 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.141 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.142 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.143 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.144 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.154 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.155 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.145 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.146 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.147 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.158 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.159 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.160 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !1068
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1269
@.str.4.156 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1231
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1214
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.156, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1187
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1203
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1233
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1246
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1248
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1250
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1252
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1254
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1256
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1258
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1260
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1262
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1264
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1274
@.str.161 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1307
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1405
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1394
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1446
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1294
@.str.170 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1512
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1790
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1760
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1746
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1691
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1292
@.str.1.178 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1792
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1764
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1762
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1705
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1290
@.str.2.179 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1805
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1768
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1766
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1711
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1288
@.str.3.180 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1807
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1772
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1770
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1720
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1286
@.str.4.181 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1809
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1776
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1774
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1726
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1284
@.str.5.182 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1811
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1780
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1778
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1732
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1282
@.str.6.183 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1813
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1784
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1782
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1738
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1280
@.str.7.184 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1815
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1788
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1786
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1744
@.str.8.171 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.177 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.173 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.176 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.172 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.174 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.175 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.188 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.188, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1817
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1302
@.str.1.189 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1997
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !2052
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1989
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2054
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.189, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1962
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1964
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1300
@.str.2.196 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !2060
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1991
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2070
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.196, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1973
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1975
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1298
@.str.3.197 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !2072
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1993
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2082
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.197, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1979
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1981
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1296
@.str.4.200 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !2084
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1995
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2094
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.200, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1985
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1987
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !2041
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !2044
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2046
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !2049
@.str.5.191 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.192 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.193 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.194 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.195 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.203 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.205 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.206 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1378
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !2062
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !2064
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2066
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !2068
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !2074
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !2076
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2078
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !2080
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !2086
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !2088
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2090
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !2092
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !2101
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2212
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2214
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2210
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2205
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2179
@.str.210 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.211 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.212 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.213 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.214 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.215 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2216
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1689
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.178, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1703
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.179, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1709
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.180, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1718
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.181, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1724
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.182, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1730
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.183, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1736
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.184, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1742
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2306
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2350
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2353
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2358
@.str.247 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.251 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.252 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.253 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.254 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.255 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.256 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.257 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.261 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.262 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.263 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.264 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.265 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.260 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.259 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.261, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.262, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.263, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.264, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.265, i32 0, i32 0)], align 4
@.str.267 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.267, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2365
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2588
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2577
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2583
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2595
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2600
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.276 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.284, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.285, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.286, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.287, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.288, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.289, i32 0, i32 0)], align 4, !dbg !2630
@.str.283 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.284 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.285 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.286 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.287 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.288 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.282 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.289 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2744
@.str.8.281 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.292 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.293 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.294 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.295 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.297 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.298 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.301 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.302 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.312 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.313 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.314 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.319 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.320 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.321 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.322 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.323 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.324 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.325 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.326 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.327 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.334 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.335 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.336 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.337 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.338 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2757
@.str.4.349 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.339 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.340 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.341 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.342 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.343 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2867
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2977
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2980
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2982
@.str.350 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.372 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.357 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.379 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.391 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.360 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.386 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.356 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.396 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.397 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.403 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.404 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.405 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.406 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.351 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.352 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.353 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.354 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.355 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.359 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.376 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.387 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.388 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2585
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2593
@.str.23.398 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.412 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.413 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.414 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.415 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2984
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !3014
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !3019
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !3017
@.str.4.416 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.417 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.418 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.422 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.423 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !3025
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !3031
@.str.446 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.447 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.448 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.449 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.450 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.451 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2452
@.str.6.452 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.453 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !3068
@.str.464 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.475 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.466 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.476 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.465 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.467 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.472 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.473 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.474 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.477 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.478 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3803 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3805, !srcloc !3806
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3807, !srcloc !3808
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3809, !srcloc !3810
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3811, !srcloc !3812
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3813, !srcloc !3814
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3815, !srcloc !3816
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3817, !srcloc !3818
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3819, !srcloc !3820
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3821, !srcloc !3822
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3823, !srcloc !3824
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3825, !srcloc !3826
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3827, !srcloc !3828
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3829, !srcloc !3830
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3831, !srcloc !3832
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3833, !srcloc !3834
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3835, !srcloc !3836
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3837, !srcloc !3838
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3839, !srcloc !3840
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3841, !srcloc !3842
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3843, !srcloc !3844
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3845, !srcloc !3846
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3847, !srcloc !3848
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3849, !srcloc !3850
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3851, !srcloc !3852
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3853, !srcloc !3854
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3855, !srcloc !3856
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3857, !srcloc !3858
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3859, !srcloc !3862
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3863, !srcloc !3864
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3865, !srcloc !3866
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3867, !srcloc !3868
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3869, !srcloc !3870
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3871, !srcloc !3872
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3873, !srcloc !3874
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3875, !srcloc !3876
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3877, !srcloc !3878
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3879, !srcloc !3880
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3881, !srcloc !3882
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3883, !srcloc !3884
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3885, !srcloc !3886
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3887, !srcloc !3888
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3889, !srcloc !3890
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3891, !srcloc !3892
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3893, !srcloc !3894
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3895, !srcloc !3896
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3897, !srcloc !3898
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3899, !srcloc !3900
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3901, !srcloc !3902
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3903, !srcloc !3904
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3905, !srcloc !3906
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3907, !srcloc !3908
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3909, !srcloc !3910
  ret void, !dbg !3911
}

; Function Attrs: noinline nounwind optsize
define internal void @consumer_thread() #1 !dbg !3914 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca i8, align 1
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3934
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3934
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3922, metadata !DIExpression(DW_OP_deref)), !dbg !3935
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.154*, %struct.zbus_channel.155**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !3936
  %5 = icmp eq i32 %4, 0, !dbg !3937
  br i1 %5, label %6, label %31, !dbg !3938

6:                                                ; preds = %0, %25
  %7 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3939
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %7, metadata !3922, metadata !DIExpression()), !dbg !3935
  %8 = icmp eq %struct.zbus_channel* %7, bitcast (%struct.zbus_channel.16* @data_ready_chan to %struct.zbus_channel*), !dbg !3939
  br i1 %8, label %10, label %9, !dbg !3942

9:                                                ; preds = %6
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #26, !dbg !3943
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #26, !dbg !3943
  unreachable, !dbg !3943

10:                                               ; preds = %6
  %11 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 100) #27, !dbg !3945
  %12 = insertvalue [1 x i64] poison, i64 %11, 0, !dbg !3946
  %13 = call i32 bitcast (i32 (%struct.zbus_channel.155*, [1 x i64])* @zbus_chan_claim to i32 (%struct.zbus_channel*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), [1 x i64] %12) #26, !dbg !3946
  %14 = icmp eq i32 %13, 0, !dbg !3946
  br i1 %14, label %15, label %25, !dbg !3947

15:                                               ; preds = %10
  %16 = tail call fastcc i8* @zbus_chan_msg() #27, !dbg !3948
  call void @llvm.dbg.value(metadata i8* %16, metadata !3916, metadata !DIExpression()), !dbg !3935
  %17 = getelementptr inbounds i8, i8* %16, i32 4, !dbg !3949
  %18 = bitcast i8* %17 to i32*, !dbg !3949
  %19 = load i32, i32* %18, align 4, !dbg !3949
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i32 noundef 87, i32 noundef %19) #26, !dbg !3949
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), metadata !3923, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i1 false, metadata !3928, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3954
  call void @llvm.dbg.value(metadata i32 0, metadata !3929, metadata !DIExpression()), !dbg !3954
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 noundef 87, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0)) #26, !dbg !3955
  %20 = bitcast i8* %16 to i8**, !dbg !3959
  %21 = load i8*, i8** %20, align 4, !dbg !3959
  %22 = load i32, i32* %18, align 4, !dbg !3959
  call void @z_log_minimal_hexdump_print(i32 noundef 2, i8* noundef %21, i32 noundef %22) #26, !dbg !3959
  %23 = load i8*, i8** %20, align 4, !dbg !3960
  call void @k_free(i8* noundef %23) #26, !dbg !3961
  store i8* null, i8** %20, align 4, !dbg !3962
  store i32 0, i32* %18, align 4, !dbg !3963
  %24 = call i32 bitcast (i32 (%struct.zbus_channel.155*)* @zbus_chan_finish to i32 (%struct.zbus_channel*)*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*)) #26, !dbg !3964
  br label %25, !dbg !3965

25:                                               ; preds = %15, %10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3966
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !3930, metadata !DIExpression()), !dbg !3967
  store i8 1, i8* %2, align 1, !dbg !3967
  %26 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 250) #27, !dbg !3968
  %27 = insertvalue [1 x i64] poison, i64 %26, 0, !dbg !3969
  %28 = call i32 bitcast (i32 (%struct.zbus_channel.155*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @ack to %struct.zbus_channel*), i8* noundef nonnull %2, [1 x i64] %27) #26, !dbg !3969
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3970
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3922, metadata !DIExpression(DW_OP_deref)), !dbg !3935
  %29 = call i32 bitcast (i32 (%struct.zbus_observer.154*, %struct.zbus_channel.155**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !3936
  %30 = icmp eq i32 %29, 0, !dbg !3937
  br i1 %30, label %6, label %31, !dbg !3938, !llvm.loop !3971

31:                                               ; preds = %25, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3972
  ret void, !dbg !3972
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3973 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3978, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i64 %0, metadata !3980, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 1000, metadata !3985, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 10000, metadata !3986, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 1, metadata !3987, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 0, metadata !3988, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 1, metadata !3989, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 0, metadata !3990, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 1, metadata !3991, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8 0, metadata !3992, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i64 0, metadata !3993, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i64 0, metadata !3993, metadata !DIExpression()), !dbg !3997
  %2 = mul i64 %0, 10, !dbg !3999
  ret i64 %2, !dbg !4005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @zbus_chan_msg() unnamed_addr #4 !dbg !4006 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), metadata !4010, metadata !DIExpression()), !dbg !4011
  %1 = load i8*, i8** getelementptr inbounds (%struct.zbus_channel, %struct.zbus_channel* bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), i32 0, i32 3), align 4, !dbg !4012
  ret i8* %1, !dbg !4013
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define internal void @filter_cb(%struct.zbus_channel.16* noundef readnone %0) #1 !dbg !4014 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel.16* %0, metadata !4016, metadata !DIExpression()), !dbg !4021
  %3 = icmp eq %struct.zbus_channel.16* %0, @pkt_chan, !dbg !4022
  br i1 %3, label %5, label %4, !dbg !4025

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #26, !dbg !4026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #26, !dbg !4026
  unreachable, !dbg !4026

5:                                                ; preds = %1
  %6 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef nonnull @pkt_chan) #27, !dbg !4028
  call void @llvm.dbg.value(metadata i8* %6, metadata !4017, metadata !DIExpression()), !dbg !4021
  %7 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !4029
  %8 = bitcast i8* %7 to i32*, !dbg !4029
  %9 = load i32, i32* %8, align 4, !dbg !4029
  %10 = and i32 %9, 1, !dbg !4031
  %11 = icmp eq i32 %10, 0, !dbg !4031
  br i1 %11, label %16, label %12, !dbg !4032

12:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %6, metadata !4017, metadata !DIExpression()), !dbg !4021
  %13 = bitcast i8* %6 to i8**, !dbg !4033
  %14 = load i8*, i8** %13, align 4, !dbg !4033
  %15 = tail call i8* @memset(i8* noundef %14, i32 noundef 0, i32 noundef %9) #26, !dbg !4035
  br label %16, !dbg !4036

16:                                               ; preds = %12, %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !4037
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !4020, metadata !DIExpression()), !dbg !4038
  store i8 1, i8* %2, align 1, !dbg !4038
  %17 = call i32 bitcast (i32 (%struct.zbus_channel.155*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel.16*, i8*, [1 x i64])*)(%struct.zbus_channel.16* noundef nonnull @data_ready_chan, i8* noundef nonnull %2, [1 x i64] zeroinitializer) #26, !dbg !4039
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !4040
  ret void, !dbg !4040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef readonly %0) unnamed_addr #1 !dbg !4041 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.16* %0, metadata !4045, metadata !DIExpression()), !dbg !4046
  %2 = icmp eq %struct.zbus_channel.16* %0, null, !dbg !4047
  br i1 %2, label %3, label %4, !dbg !4050

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !4051
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0)) #26, !dbg !4051
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !4051
  unreachable, !dbg !4051

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.16, %struct.zbus_channel.16* %0, i32 0, i32 3, !dbg !4053
  %6 = load i8*, i8** %5, align 4, !dbg !4053
  ret i8* %6, !dbg !4054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4055 {
  %1 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef nonnull @version_chan) #27, !dbg !4060
  call void @llvm.dbg.value(metadata i8* %1, metadata !4057, metadata !DIExpression()), !dbg !4061
  ret void, !dbg !4062
}

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !4063 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.external_data_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !4078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4078
  call void @llvm.dbg.value(metadata i8 0, metadata !4067, metadata !DIExpression()), !dbg !4079
  %4 = bitcast %struct.external_data_msg* %2 to i8*
  %5 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 0
  %6 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 1
  br label %8, !dbg !4080

7:                                                ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4081
  ret void, !dbg !4081

8:                                                ; preds = %0, %30
  %9 = phi i32 [ 0, %0 ], [ %10, %30 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4067, metadata !DIExpression()), !dbg !4079
  %10 = add nuw nsw i32 %9, 1, !dbg !4082
  %11 = call i8* @k_malloc(i32 noundef %10) #26, !dbg !4083
  call void @llvm.dbg.value(metadata i8* %11, metadata !4066, metadata !DIExpression()), !dbg !4084
  %12 = icmp eq i8* %11, null, !dbg !4085
  br i1 %12, label %13, label %14, !dbg !4088

13:                                               ; preds = %8
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #26, !dbg !4089
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #26, !dbg !4089
  unreachable, !dbg !4089

14:                                               ; preds = %8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !4091
  call void @llvm.dbg.declare(metadata %struct.external_data_msg* %2, metadata !4069, metadata !DIExpression()), !dbg !4092
  store i8* %11, i8** %5, align 4, !dbg !4093
  store i32 %10, i32* %6, align 4, !dbg !4093
  call void @llvm.dbg.value(metadata i32 0, metadata !4076, metadata !DIExpression()), !dbg !4094
  %15 = trunc i32 %9 to i8
  call void @llvm.dbg.value(metadata i32 0, metadata !4076, metadata !DIExpression()), !dbg !4094
  store i8 %15, i8* %11, align 1, !dbg !4095
  call void @llvm.dbg.value(metadata i32 1, metadata !4076, metadata !DIExpression()), !dbg !4094
  %16 = load i32, i32* %6, align 4, !dbg !4098
  %17 = icmp ugt i32 %16, 1, !dbg !4099
  br i1 %17, label %22, label %18, !dbg !4100, !llvm.loop !4101

18:                                               ; preds = %22, %14
  %19 = call i32 bitcast (i32 (%struct.zbus_channel.155*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), i8* noundef nonnull %4, [1 x i64] [i64 2500]) #26, !dbg !4103
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !4065, metadata !DIExpression(DW_OP_deref)), !dbg !4084
  %20 = call i32 bitcast (i32 (%struct.zbus_observer.154*, %struct.zbus_channel.155**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4104
  %21 = icmp eq i32 %20, 0, !dbg !4104
  br i1 %21, label %30, label %29, !dbg !4106

22:                                               ; preds = %14, %22
  %23 = phi i32 [ %26, %22 ], [ 1, %14 ]
  %24 = load i8*, i8** %5, align 4, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %23, metadata !4076, metadata !DIExpression()), !dbg !4094
  %25 = getelementptr inbounds i8, i8* %24, i32 %23, !dbg !4108
  store i8 %15, i8* %25, align 1, !dbg !4095
  %26 = add nuw nsw i32 %23, 1, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %26, metadata !4076, metadata !DIExpression()), !dbg !4094
  %27 = load i32, i32* %6, align 4, !dbg !4098
  %28 = icmp ult i32 %26, %27, !dbg !4099
  br i1 %28, label %22, label %18, !dbg !4100, !llvm.loop !4101

29:                                               ; preds = %18
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !4110
  br label %30, !dbg !4116

30:                                               ; preds = %29, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %10, metadata !4067, metadata !DIExpression()), !dbg !4079
  %31 = icmp eq i32 %10, 16, !dbg !4118
  br i1 %31, label %7, label %8, !dbg !4080, !llvm.loop !4119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4121 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %0, metadata !4132, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %1, metadata !4133, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %2, metadata !4134, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %3, metadata !4135, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %0, metadata !4137, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %0, metadata !4138, metadata !DIExpression()), !dbg !4199
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4200
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4200
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4141, metadata !DIExpression()), !dbg !4201
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4202
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4202
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4143, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i32 0, metadata !4144, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 0, metadata !4145, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 0, metadata !4146, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 -1, metadata !4147, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 0, metadata !4150, metadata !DIExpression()), !dbg !4199
  %12 = and i32 %2, 4, !dbg !4204
  %13 = icmp eq i32 %12, 0, !dbg !4205
  call void @llvm.dbg.value(metadata i1 %13, metadata !4151, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4199
  %14 = lshr i32 %2, 3, !dbg !4206
  %15 = and i32 %14, 7, !dbg !4206
  %16 = add nuw nsw i32 %15, 1, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %16, metadata !4152, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 0, metadata !4153, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %0, metadata !4154, metadata !DIExpression()), !dbg !4199
  %17 = ptrtoint i8* %0 to i32, !dbg !4208
  %18 = and i32 %17, 3, !dbg !4210
  %19 = icmp eq i32 %18, 0, !dbg !4210
  br i1 %19, label %20, label %320, !dbg !4211

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4212
  call void @llvm.dbg.value(metadata i8* %21, metadata !4138, metadata !DIExpression()), !dbg !4199
  %22 = icmp eq i8* %0, null, !dbg !4213
  %23 = and i32 %1, 7, !dbg !4215
  %24 = sub nuw nsw i32 8, %23, !dbg !4215
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4215
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4215
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4215
  call void @llvm.dbg.value(metadata i32 %27, metadata !4133, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %26, metadata !4138, metadata !DIExpression()), !dbg !4199
  br i1 %22, label %33, label %28, !dbg !4216

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4218
  %30 = sub i32 4, %17, !dbg !4218
  %31 = add i32 %30, %29, !dbg !4219
  %32 = icmp ugt i32 %31, %27, !dbg !4220
  br i1 %32, label %320, label %33, !dbg !4221

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4222
  call void @llvm.dbg.value(metadata i8* %34, metadata !4135, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %3, metadata !4149, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 4, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 4, metadata !4139, metadata !DIExpression()), !dbg !4199
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4223

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %42, metadata !4135, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %43, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %44, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %45, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %72, metadata !4147, metadata !DIExpression()), !dbg !4199
  br i1 %46, label %73, label %47, !dbg !4224

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4225
  %49 = zext i1 %48 to i32, !dbg !4229
  %50 = add nsw i32 %72, %49, !dbg !4229
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4229
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %52, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %51, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4150, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %50, metadata !4147, metadata !DIExpression()), !dbg !4199
  br label %53, !dbg !4230

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %40, metadata !4135, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %58, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %57, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %56, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4150, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %54, metadata !4147, metadata !DIExpression()), !dbg !4199
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4231
  call void @llvm.dbg.value(metadata i8* %60, metadata !4135, metadata !DIExpression()), !dbg !4199
  %61 = load i8, i8* %60, align 1, !dbg !4233
  %62 = icmp eq i8 %61, 0, !dbg !4234
  br i1 %62, label %226, label %63, !dbg !4235, !llvm.loop !4236

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4224

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4239

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4150, metadata !DIExpression()), !dbg !4199
  %75 = add nsw i32 %72, -1, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %75, metadata !4147, metadata !DIExpression()), !dbg !4199
  br label %53, !dbg !4241

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4242

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 4, metadata !4139, metadata !DIExpression()), !dbg !4199
  br label %53, !dbg !4243

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 4, metadata !4139, metadata !DIExpression()), !dbg !4199
  br label %53, !dbg !4244

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4245
  %81 = icmp eq i8 %80, 108, !dbg !4247
  br i1 %81, label %82, label %109, !dbg !4248

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4249
  %84 = load i8, i8* %83, align 1, !dbg !4249
  %85 = icmp eq i8 %84, 108, !dbg !4252
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4253
  %89 = add i32 %88, 7, !dbg !4253
  %90 = and i32 %89, -8, !dbg !4253
  %91 = inttoptr i32 %90 to i8*, !dbg !4253
  %92 = inttoptr i32 %90 to double*, !dbg !4253
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4253
  %94 = load double, double* %92, align 8, !dbg !4253
  call void @llvm.dbg.value(metadata i8* %93, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 8, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 8, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata double %94, metadata !4167, metadata !DIExpression()), !dbg !4255
  %95 = ptrtoint i8* %43 to i32, !dbg !4256
  %96 = add i32 %95, 7, !dbg !4256
  %97 = and i32 %96, -8, !dbg !4256
  %98 = inttoptr i32 %97 to i8*, !dbg !4257
  call void @llvm.dbg.value(metadata i8* %98, metadata !4138, metadata !DIExpression()), !dbg !4199
  br i1 %22, label %104, label %99, !dbg !4258

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4259
  %101 = icmp ugt i32 %100, %196, !dbg !4263
  br i1 %101, label %320, label %102, !dbg !4264

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4265
  store double %94, double* %103, align 8, !dbg !4265
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4268
  call void @llvm.dbg.value(metadata i8* %105, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4150, metadata !DIExpression()), !dbg !4199
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4150, metadata !DIExpression()), !dbg !4199
  br label %53, !dbg !4269

107:                                              ; preds = %73, %73
  br label %109, !dbg !4270

108:                                              ; preds = %73
  br label %109, !dbg !4270

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4199
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4199
  call void @llvm.dbg.value(metadata i32 %113, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %112, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4153, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4150, metadata !DIExpression()), !dbg !4199
  %114 = ptrtoint i8* %43 to i32, !dbg !4270
  %115 = add i32 %114, -1, !dbg !4270
  %116 = add i32 %115, %112, !dbg !4270
  %117 = sub i32 0, %112, !dbg !4270
  %118 = and i32 %116, %117, !dbg !4270
  %119 = inttoptr i32 %118 to i8*, !dbg !4271
  call void @llvm.dbg.value(metadata i8* %119, metadata !4138, metadata !DIExpression()), !dbg !4199
  br i1 %22, label %124, label %120, !dbg !4272

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4274
  %122 = add i32 %121, %118, !dbg !4275
  %123 = icmp ugt i32 %122, %196, !dbg !4276
  br i1 %123, label %320, label %124, !dbg !4277

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4278

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4271
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4279
  call void @llvm.dbg.value(metadata i8* %127, metadata !4136, metadata !DIExpression()), !dbg !4199
  %128 = bitcast i8* %41 to i8**, !dbg !4279
  %129 = load i8*, i8** %128, align 4, !dbg !4279
  call void @llvm.dbg.value(metadata i8* %129, metadata !4149, metadata !DIExpression()), !dbg !4199
  br label %130, !dbg !4280

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4199
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4281
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4199
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4282
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4199
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4199
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4199
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4199
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4199
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4199
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4283
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %142, metadata !4133, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %141, metadata !4135, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %140, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %139, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %138, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %137, metadata !4144, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %136, metadata !4152, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %135, metadata !4145, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4150, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %133, metadata !4149, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %132, metadata !4147, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %131, metadata !4146, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.label(metadata !4198), !dbg !4285
  br i1 %22, label %146, label %144, !dbg !4286

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4287
  store i8* %133, i8** %145, align 4, !dbg !4290
  br label %146, !dbg !4291

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %147, metadata !4152, metadata !DIExpression()), !dbg !4199
  %148 = icmp sgt i32 %136, 0, !dbg !4293
  br i1 %148, label %152, label %149, !dbg !4294

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !4295
  %151 = zext i1 %150 to i32, !dbg !4295
  br label %152, !dbg !4294

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4294
  %154 = icmp eq i32 %153, 0, !dbg !4294
  call void @llvm.dbg.value(metadata i1 %154, metadata !4176, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4296
  call void @llvm.dbg.value(metadata i1 %36, metadata !4179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4296
  %155 = or i1 %36, %154, !dbg !4297
  br i1 %155, label %156, label %192, !dbg !4297

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4298
  %158 = sub i32 %157, %17, !dbg !4298
  %159 = lshr i32 %158, 2, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %159, metadata !4180, metadata !DIExpression()), !dbg !4300
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4301
  br i1 %161, label %162, label %163, !dbg !4301

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #26, !dbg !4303
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.33, i32 0, i32 0)) #26, !dbg !4303
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #26, !dbg !4303
  unreachable, !dbg !4303

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4308
  br i1 %164, label %165, label %166, !dbg !4310

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #26, !dbg !4311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.34, i32 0, i32 0)) #26, !dbg !4311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #26, !dbg !4311
  unreachable, !dbg !4311

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4316

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4317
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4320
  store i8 %168, i8* %169, align 1, !dbg !4321
  %170 = trunc i32 %132 to i8, !dbg !4322
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4323
  store i8 %170, i8* %171, align 1, !dbg !4324
  br i1 %154, label %175, label %172, !dbg !4325

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4326
  store i8 %173, i8* %169, align 1, !dbg !4326
  %174 = add i32 %131, 1, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %174, metadata !4146, metadata !DIExpression()), !dbg !4199
  br label %187, !dbg !4330

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4331
  call void @llvm.dbg.value(metadata i32 %176, metadata !4145, metadata !DIExpression()), !dbg !4199
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4333

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %179, metadata !4133, metadata !DIExpression()), !dbg !4199
  br label %187, !dbg !4337

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4338

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %182, metadata !4133, metadata !DIExpression()), !dbg !4199
  br label %187, !dbg !4342

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #26, !dbg !4343
  %185 = add i32 %142, 2, !dbg !4345
  %186 = add i32 %185, %184, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %186, metadata !4133, metadata !DIExpression()), !dbg !4199
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4199
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4199
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4199
  call void @llvm.dbg.value(metadata i32 %190, metadata !4133, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %189, metadata !4145, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %188, metadata !4146, metadata !DIExpression()), !dbg !4199
  %191 = add nuw nsw i32 %137, 1, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %191, metadata !4144, metadata !DIExpression()), !dbg !4199
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4199
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4282
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4199
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4283
  call void @llvm.dbg.value(metadata i32 %196, metadata !4133, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %195, metadata !4144, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %194, metadata !4145, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %193, metadata !4146, metadata !DIExpression()), !dbg !4199
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %197, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %143, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %141, metadata !4135, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %139, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %138, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4153, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4150, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %132, metadata !4147, metadata !DIExpression()), !dbg !4199
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4231
  call void @llvm.dbg.value(metadata i8* %198, metadata !4135, metadata !DIExpression()), !dbg !4199
  %199 = load i8, i8* %198, align 1, !dbg !4233
  %200 = icmp eq i8 %199, 0, !dbg !4234
  br i1 %200, label %226, label %63, !dbg !4235

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4349

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4350
  call void @llvm.dbg.value(metadata i8* %203, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 undef, metadata !4183, metadata !DIExpression()), !dbg !4351
  br i1 %22, label %219, label %204, !dbg !4352

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4350
  %206 = load i32, i32* %205, align 4, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %206, metadata !4183, metadata !DIExpression()), !dbg !4351
  %207 = inttoptr i32 %118 to i32*, !dbg !4353
  store i32 %206, i32* %207, align 4, !dbg !4356
  br label %219, !dbg !4357

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4358
  %210 = add i32 %209, 7, !dbg !4358
  %211 = and i32 %210, -8, !dbg !4358
  %212 = inttoptr i32 %211 to i8*, !dbg !4358
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4358
  call void @llvm.dbg.value(metadata i8* %213, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i64 undef, metadata !4189, metadata !DIExpression()), !dbg !4359
  br i1 %22, label %219, label %214, !dbg !4360

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4358
  %216 = load i64, i64* %215, align 8, !dbg !4358
  call void @llvm.dbg.value(metadata i64 %216, metadata !4189, metadata !DIExpression()), !dbg !4359
  %217 = inttoptr i32 %118 to i64*, !dbg !4361
  store i64 %216, i64* %217, align 8, !dbg !4366
  br label %219, !dbg !4367

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #26, !dbg !4368
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.35, i32 0, i32 0), i32 noundef %113) #26, !dbg !4368
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #26, !dbg !4368
  unreachable, !dbg !4368

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4373
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %221, metadata !4136, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %40, metadata !4135, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %222, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %113, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %112, metadata !4140, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4153, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8 poison, metadata !4150, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %72, metadata !4147, metadata !DIExpression()), !dbg !4199
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4231
  call void @llvm.dbg.value(metadata i8* %223, metadata !4135, metadata !DIExpression()), !dbg !4199
  %224 = load i8, i8* %223, align 1, !dbg !4233
  %225 = icmp eq i8 %224, 0, !dbg !4234
  br i1 %225, label %226, label %38, !dbg !4235

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4374
  %228 = ptrtoint i8* %227 to i32, !dbg !4375
  %229 = sub i32 %228, %17, !dbg !4375
  %230 = lshr i32 %229, 2, !dbg !4377
  %231 = icmp ugt i32 %229, 1023, !dbg !4378
  br i1 %231, label %232, label %233, !dbg !4379

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #26, !dbg !4380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.36, i32 0, i32 0)) #26, !dbg !4380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #26, !dbg !4380
  unreachable, !dbg !4380

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4385

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4386
  %236 = add i32 %235, %229, !dbg !4389
  br label %320, !dbg !4390

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4391
  store i8 %238, i8* %0, align 1, !dbg !4392
  %239 = trunc i32 %194 to i8, !dbg !4393
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4395
  store i8 %240, i8* %242, align 1, !dbg !4397
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4398
  store i8 %241, i8* %243, align 1, !dbg !4399
  %244 = trunc i32 %193 to i8, !dbg !4400
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4401
  store i8 %244, i8* %245, align 1, !dbg !4402
  %246 = icmp eq i32 %193, 0, !dbg !4403
  %247 = xor i1 %246, true, !dbg !4404
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4404
  call void @llvm.dbg.value(metadata i8* %227, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 0, metadata !4148, metadata !DIExpression()), !dbg !4199
  br i1 %249, label %250, label %269, !dbg !4404

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4405

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %254, metadata !4148, metadata !DIExpression()), !dbg !4199
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4406
  %256 = load i8, i8* %255, align 1, !dbg !4406
  %257 = icmp sgt i8 %256, -1, !dbg !4408
  br i1 %257, label %265, label %258, !dbg !4409

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4192, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4410
  %259 = ptrtoint i8* %253 to i32, !dbg !4411
  %260 = add i32 %251, %259, !dbg !4413
  %261 = icmp ugt i32 %260, %196, !dbg !4414
  br i1 %261, label %320, label %262, !dbg !4415

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4416
  call void @llvm.dbg.value(metadata i8 %263, metadata !4192, metadata !DIExpression()), !dbg !4410
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4417
  call void @llvm.dbg.value(metadata i8* %264, metadata !4138, metadata !DIExpression()), !dbg !4199
  store i8 %263, i8* %253, align 1, !dbg !4418
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4348
  call void @llvm.dbg.value(metadata i8* %266, metadata !4138, metadata !DIExpression()), !dbg !4199
  %267 = add nuw i32 %254, 1, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %267, metadata !4148, metadata !DIExpression()), !dbg !4199
  %268 = icmp eq i32 %267, %195, !dbg !4420
  br i1 %268, label %269, label %252, !dbg !4405, !llvm.loop !4421

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4348
  call void @llvm.dbg.value(metadata i8* %270, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 0, metadata !4148, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %133, metadata !4149, metadata !DIExpression()), !dbg !4199
  %271 = icmp eq i32 %195, 0, !dbg !4423
  br i1 %271, label %316, label %272, !dbg !4426

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4426

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %276, metadata !4149, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %277, metadata !4148, metadata !DIExpression()), !dbg !4199
  br i1 %246, label %282, label %278, !dbg !4427

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4430
  %280 = load i8, i8* %279, align 1, !dbg !4430
  %281 = icmp sgt i8 %280, -1, !dbg !4431
  br i1 %281, label %282, label %311, !dbg !4432

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4433

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4139, metadata !DIExpression()), !dbg !4199
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4434
  %285 = load i8, i8* %284, align 1, !dbg !4434
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4437
  call void @llvm.dbg.value(metadata i8* %286, metadata !4138, metadata !DIExpression()), !dbg !4199
  store i8 %285, i8* %275, align 1, !dbg !4438
  br label %297, !dbg !4439

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4440
  %289 = load i8, i8* %288, align 1, !dbg !4440
  %290 = zext i8 %289 to i32, !dbg !4440
  %291 = shl nuw nsw i32 %290, 2, !dbg !4442
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4443
  %293 = bitcast i8* %292 to i8**, !dbg !4444
  %294 = load i8*, i8** %293, align 4, !dbg !4444
  call void @llvm.dbg.value(metadata i8* %294, metadata !4149, metadata !DIExpression()), !dbg !4199
  store i8* null, i8** %293, align 4, !dbg !4445
  %295 = tail call i32 @strlen(i8* noundef %294) #26, !dbg !4446
  %296 = add i32 %295, 1, !dbg !4447
  call void @llvm.dbg.value(metadata i32 %296, metadata !4139, metadata !DIExpression()), !dbg !4199
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4199
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4448
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4199
  call void @llvm.dbg.value(metadata i8* %300, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %299, metadata !4139, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %298, metadata !4149, metadata !DIExpression()), !dbg !4199
  %301 = ptrtoint i8* %300 to i32, !dbg !4449
  %302 = add i32 %273, %299, !dbg !4451
  %303 = add i32 %302, %301, !dbg !4452
  %304 = icmp ugt i32 %303, %196, !dbg !4453
  br i1 %304, label %320, label %305, !dbg !4454

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4455
  %307 = load i8, i8* %306, align 1, !dbg !4455
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4456
  call void @llvm.dbg.value(metadata i8* %308, metadata !4138, metadata !DIExpression()), !dbg !4199
  store i8 %307, i8* %300, align 1, !dbg !4457
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #26, !dbg !4458
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %310, metadata !4138, metadata !DIExpression()), !dbg !4199
  br label %311, !dbg !4460

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4461
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4199
  call void @llvm.dbg.value(metadata i8* %313, metadata !4138, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %312, metadata !4149, metadata !DIExpression()), !dbg !4199
  %314 = add nuw i32 %277, 1, !dbg !4462
  call void @llvm.dbg.value(metadata i32 %314, metadata !4148, metadata !DIExpression()), !dbg !4199
  %315 = icmp eq i32 %314, %195, !dbg !4423
  br i1 %315, label %316, label %274, !dbg !4426, !llvm.loop !4463

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4348
  %318 = ptrtoint i8* %317 to i32, !dbg !4465
  %319 = sub i32 %318, %17, !dbg !4465
  br label %320, !dbg !4466

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4467
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4467
  ret i32 %321, !dbg !4467
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4468 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4472, metadata !DIExpression()), !dbg !4473
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4474
  ret i1 %2, !dbg !4475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4476 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4481, metadata !DIExpression()), !dbg !4482
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4483
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4484
  %4 = and i1 %2, %3, !dbg !4484
  ret i1 %4, !dbg !4485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4486 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4490, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i32 %1, metadata !4491, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i32 %2, metadata !4492, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i8* %3, metadata !4493, metadata !DIExpression()), !dbg !4496
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4497
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4497
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4494, metadata !DIExpression()), !dbg !4498
  call void @llvm.va_start(i8* nonnull %6), !dbg !4499
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4500
  %8 = load i32, i32* %7, align 4, !dbg !4500
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4500
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4500
  call void @llvm.dbg.value(metadata i32 %10, metadata !4495, metadata !DIExpression()), !dbg !4496
  call void @llvm.va_end(i8* nonnull %6), !dbg !4501
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4502
  ret i32 %10, !dbg !4503
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4504 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4516, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4517, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata i8* %2, metadata !4518, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata i8* %3, metadata !4519, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata i8* %3, metadata !4520, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata i8* %3, metadata !4521, metadata !DIExpression()), !dbg !4535
  %5 = icmp eq i8* %3, null, !dbg !4536
  br i1 %5, label %45, label %6, !dbg !4538

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4530, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4535
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4539
  %8 = load i8, i8* %7, align 1, !dbg !4539
  %9 = zext i8 %8 to i32, !dbg !4540
  call void @llvm.dbg.value(metadata i32 %9, metadata !4531, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata i8 undef, metadata !4532, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4535
  call void @llvm.dbg.value(metadata i8 undef, metadata !4533, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  call void @llvm.dbg.value(metadata i32 0, metadata !4529, metadata !DIExpression()), !dbg !4535
  %10 = icmp eq i8 %8, 0, !dbg !4541
  br i1 %10, label %39, label %11, !dbg !4544

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4545
  call void @llvm.dbg.value(metadata i8 %12, metadata !4530, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %13 = zext i8 %12 to i32, !dbg !4546
  call void @llvm.dbg.value(metadata i32 %13, metadata !4530, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %14 = shl nuw nsw i32 %13, 2, !dbg !4547
  call void @llvm.dbg.value(metadata i32 %14, metadata !4530, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4548
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4549
  %17 = load i8, i8* %16, align 1, !dbg !4549
  call void @llvm.dbg.value(metadata i8 %17, metadata !4532, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %18 = zext i8 %17 to i32, !dbg !4550
  call void @llvm.dbg.value(metadata i32 %18, metadata !4532, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4551
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4552
  %21 = load i8, i8* %20, align 1, !dbg !4552
  call void @llvm.dbg.value(metadata i8 %21, metadata !4533, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %22 = zext i8 %21 to i32, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %22, metadata !4533, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %23 = shl nuw nsw i32 %22, 1, !dbg !4554
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4535
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4555
  call void @llvm.dbg.value(metadata i8* %24, metadata !4527, metadata !DIExpression()), !dbg !4535
  br label %25, !dbg !4544

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4527, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.value(metadata i32 %27, metadata !4529, metadata !DIExpression()), !dbg !4535
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4556
  call void @llvm.dbg.value(metadata i8* %28, metadata !4527, metadata !DIExpression()), !dbg !4535
  %29 = load i8, i8* %26, align 1, !dbg !4558
  %30 = zext i8 %29 to i32, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %30, metadata !4534, metadata !DIExpression()), !dbg !4535
  %31 = shl nuw nsw i32 %30, 2, !dbg !4559
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4560
  %33 = bitcast i8* %32 to i8**, !dbg !4561
  call void @llvm.dbg.value(metadata i8** %33, metadata !4528, metadata !DIExpression()), !dbg !4535
  store i8* %28, i8** %33, align 4, !dbg !4562
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #26, !dbg !4563
  %35 = add i32 %34, 1, !dbg !4564
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4565
  call void @llvm.dbg.value(metadata i8* %36, metadata !4527, metadata !DIExpression()), !dbg !4535
  %37 = add nuw nsw i32 %27, 1, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %37, metadata !4529, metadata !DIExpression()), !dbg !4535
  %38 = icmp eq i32 %37, %9, !dbg !4541
  br i1 %38, label %39, label %25, !dbg !4544, !llvm.loop !4567

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4569
  call void @llvm.dbg.value(metadata i8* %40, metadata !4520, metadata !DIExpression()), !dbg !4535
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4570
  %42 = bitcast i8* %41 to i8**, !dbg !4570
  %43 = load i8*, i8** %42, align 1, !dbg !4570
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4571
  br label %45, !dbg !4572

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4535
  ret i32 %46, !dbg !4573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4574 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4578, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4579, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata i8* %2, metadata !4580, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata i8* %3, metadata !4581, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata i8* %4, metadata !4582, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata i8* %4, metadata !4583, metadata !DIExpression()), !dbg !4588
  %6 = ptrtoint i8* %4 to i32, !dbg !4589
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4589
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #26, !dbg !4589
  ret i32 %8, !dbg !4590
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !4591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4595, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 %1, metadata !4596, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 0, metadata !4598, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i32 0, metadata !4599, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 poison, metadata !4598, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %0, metadata !4595, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4600
  %3 = load i8, i8* %0, align 1, !dbg !4601
  call void @llvm.dbg.value(metadata i8 %3, metadata !4597, metadata !DIExpression()), !dbg !4600
  %4 = icmp eq i8 %3, 0, !dbg !4602
  br i1 %4, label %29, label %5, !dbg !4603

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4604
  call void @llvm.dbg.value(metadata i32 %8, metadata !4599, metadata !DIExpression()), !dbg !4600
  br i1 %9, label %11, label %22, !dbg !4605

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4607
  br i1 %12, label %13, label %17, !dbg !4611

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4612
  br i1 %14, label %29, label %15, !dbg !4615

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4616
  br i1 %16, label %29, label %22, !dbg !4618

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4619
  %19 = xor i1 %18, true, !dbg !4621
  %20 = zext i1 %18 to i32, !dbg !4621
  %21 = add nsw i32 %8, %20, !dbg !4621
  br label %22, !dbg !4621

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4600
  call void @llvm.dbg.value(metadata i32 %24, metadata !4599, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8 poison, metadata !4598, metadata !DIExpression()), !dbg !4600
  %25 = icmp eq i8 %6, 37, !dbg !4622
  %26 = xor i1 %25, %23, !dbg !4624
  call void @llvm.dbg.value(metadata i8* %10, metadata !4595, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.value(metadata i8* %10, metadata !4595, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4600
  %27 = load i8, i8* %10, align 1, !dbg !4601
  call void @llvm.dbg.value(metadata i8 %27, metadata !4597, metadata !DIExpression()), !dbg !4600
  %28 = icmp eq i8 %27, 0, !dbg !4602
  br i1 %28, label %29, label %5, !dbg !4603, !llvm.loop !4625

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4600
  ret i1 %30, !dbg !4627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4628 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4632, metadata !DIExpression()), !dbg !4633
  %2 = add i8 %0, -64, !dbg !4634
  %3 = icmp ult i8 %2, 59, !dbg !4634
  ret i1 %3, !dbg !4635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4636 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4644, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %1, metadata !4645, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4646, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %3, metadata !4647, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %4, metadata !4648, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i16* %5, metadata !4649, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %6, metadata !4650, metadata !DIExpression()), !dbg !4713
  %11 = icmp eq i8* %0, null, !dbg !4714
  br i1 %11, label %12, label %13, !dbg !4717

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #26, !dbg !4718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #26, !dbg !4718
  unreachable, !dbg !4718

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4651, metadata !DIExpression()), !dbg !4713
  %14 = bitcast i8* %0 to i32*, !dbg !4720
  call void @llvm.dbg.value(metadata i32* %14, metadata !4652, metadata !DIExpression()), !dbg !4713
  %15 = and i32 %4, 8, !dbg !4721
  %16 = icmp eq i32 %15, 0, !dbg !4722
  call void @llvm.dbg.value(metadata i1 %16, metadata !4656, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %0, metadata !4659, metadata !DIExpression()), !dbg !4713
  %17 = icmp eq i32 %1, 0, !dbg !4723
  br i1 %17, label %18, label %20, !dbg !4724

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #27, !dbg !4725
  br label %20, !dbg !4724

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4724
  call void @llvm.dbg.value(metadata i32 %21, metadata !4645, metadata !DIExpression()), !dbg !4713
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4726
  %23 = load i8, i8* %22, align 1, !dbg !4726
  %24 = zext i8 %23 to i32, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %24, metadata !4654, metadata !DIExpression()), !dbg !4713
  %25 = icmp ne i8 %23, 0, !dbg !4728
  %26 = and i32 %4, 1, !dbg !4729
  %27 = icmp ne i32 %26, 0, !dbg !4729
  %28 = and i1 %27, %25, !dbg !4729
  call void @llvm.dbg.value(metadata i1 %28, metadata !4658, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4713
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4730
  %30 = load i8, i8* %29, align 1, !dbg !4730
  %31 = zext i8 %30 to i32, !dbg !4731
  call void @llvm.dbg.value(metadata i32 %31, metadata !4655, metadata !DIExpression()), !dbg !4713
  %32 = icmp ne i8 %30, 0, !dbg !4732
  %33 = and i32 %4, 2, !dbg !4733
  %34 = icmp ne i32 %33, 0, !dbg !4733
  %35 = and i1 %34, %32, !dbg !4733
  call void @llvm.dbg.value(metadata i1 %35, metadata !4657, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4713
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4734
  br i1 %36, label %41, label %37, !dbg !4734

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4736
  br i1 %38, label %287, label %39, !dbg !4739

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #26, !dbg !4740
  br label %287, !dbg !4742

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4743
  %43 = zext i8 %42 to i32, !dbg !4744
  %44 = shl nuw nsw i32 %43, 2, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %44, metadata !4653, metadata !DIExpression()), !dbg !4713
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4746
  %46 = bitcast i8* %45 to i8**, !dbg !4747
  %47 = load i8*, i8** %46, align 4, !dbg !4747
  call void @llvm.dbg.value(metadata i8* %47, metadata !4662, metadata !DIExpression()), !dbg !4713
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4748
  call void @llvm.dbg.value(metadata i8* %48, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 0, metadata !4664, metadata !DIExpression()), !dbg !4713
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4749
  br i1 %49, label %50, label %135, !dbg !4750

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4661, metadata !DIExpression()), !dbg !4713
  br i1 %28, label %51, label %76, !dbg !4751

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %48, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 0, metadata !4664, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 0, metadata !4665, metadata !DIExpression()), !dbg !4752
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4753

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %55, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %56, metadata !4664, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %57, metadata !4665, metadata !DIExpression()), !dbg !4752
  %58 = load i8, i8* %55, align 1, !dbg !4754
  %59 = zext i8 %58 to i32, !dbg !4755
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4755
  %61 = bitcast i32* %60 to i8**, !dbg !4756
  %62 = load i8*, i8** %61, align 4, !dbg !4756
  call void @llvm.dbg.value(metadata i8* %62, metadata !4671, metadata !DIExpression()), !dbg !4757
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #27, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %63, metadata !4674, metadata !DIExpression()), !dbg !4757
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4759
  br i1 %65, label %66, label %70, !dbg !4759

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4761
  %68 = add nuw i32 %56, 1, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %68, metadata !4664, metadata !DIExpression()), !dbg !4713
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4764
  store i16 %67, i16* %69, align 2, !dbg !4765
  br label %70, !dbg !4766

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4713
  call void @llvm.dbg.value(metadata i32 %71, metadata !4664, metadata !DIExpression()), !dbg !4713
  %72 = add nsw i32 %63, %54, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %72, metadata !4661, metadata !DIExpression()), !dbg !4713
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4768
  call void @llvm.dbg.value(metadata i8* %73, metadata !4663, metadata !DIExpression()), !dbg !4713
  %74 = add nuw nsw i32 %57, 1, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %74, metadata !4665, metadata !DIExpression()), !dbg !4752
  %75 = icmp eq i32 %74, %24, !dbg !4770
  br i1 %75, label %82, label %53, !dbg !4753, !llvm.loop !4771

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4773
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4773
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4773
  br label %82, !dbg !4773

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4776
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4713
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4777
  call void @llvm.dbg.value(metadata i1 undef, metadata !4675, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4778
  call void @llvm.dbg.value(metadata i32 0, metadata !4676, metadata !DIExpression()), !dbg !4779
  call void @llvm.dbg.value(metadata i32 %85, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %84, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %83, metadata !4664, metadata !DIExpression()), !dbg !4713
  %86 = icmp eq i8 %30, 0, !dbg !4780
  br i1 %86, label %287, label %87, !dbg !4781

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4782
  %89 = icmp eq i32 %88, 0, !dbg !4783
  call void @llvm.dbg.value(metadata i1 %89, metadata !4675, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4778
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4781

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %96, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %97, metadata !4664, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %98, metadata !4676, metadata !DIExpression()), !dbg !4779
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4784
  call void @llvm.dbg.value(metadata i8* %99, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8 undef, metadata !4678, metadata !DIExpression()), !dbg !4785
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %100, metadata !4663, metadata !DIExpression()), !dbg !4713
  %101 = load i8, i8* %99, align 1, !dbg !4787
  call void @llvm.dbg.value(metadata i8 %101, metadata !4681, metadata !DIExpression()), !dbg !4785
  %102 = zext i8 %101 to i32, !dbg !4788
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4788
  %104 = bitcast i32* %103 to i8**, !dbg !4789
  %105 = load i8*, i8** %104, align 4, !dbg !4789
  call void @llvm.dbg.value(metadata i8* %105, metadata !4682, metadata !DIExpression()), !dbg !4785
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #27, !dbg !4790
  call void @llvm.dbg.value(metadata i1 %106, metadata !4683, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4785
  br i1 %16, label %113, label %107, !dbg !4791

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4793
  call void @llvm.dbg.value(metadata i8 %108, metadata !4678, metadata !DIExpression()), !dbg !4785
  %109 = zext i8 %108 to i32, !dbg !4794
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #27, !dbg !4795
  br i1 %110, label %111, label %113, !dbg !4796

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.38, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #26, !dbg !4797
  %112 = add nsw i32 %95, -2, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %112, metadata !4661, metadata !DIExpression()), !dbg !4713
  br label %130, !dbg !4804

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4805

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4806

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %116, metadata !4661, metadata !DIExpression()), !dbg !4713
  br label %130, !dbg !4811

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4812

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4709), !dbg !4813
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #27, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %119, metadata !4684, metadata !DIExpression()), !dbg !4785
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4815
  br i1 %121, label %122, label %126, !dbg !4815

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4817
  %124 = add nuw i32 %97, 1, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %124, metadata !4664, metadata !DIExpression()), !dbg !4713
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4820
  store i16 %123, i16* %125, align 2, !dbg !4821
  br label %126, !dbg !4822

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4713
  call void @llvm.dbg.value(metadata i32 %127, metadata !4664, metadata !DIExpression()), !dbg !4713
  %128 = add i32 %95, -1, !dbg !4823
  %129 = add i32 %128, %119, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %129, metadata !4661, metadata !DIExpression()), !dbg !4713
  br label %130, !dbg !4825

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4713
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4785
  call void @llvm.dbg.value(metadata i32 %132, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %131, metadata !4664, metadata !DIExpression()), !dbg !4713
  %133 = add nuw nsw i32 %98, 1, !dbg !4826
  call void @llvm.dbg.value(metadata i8* %100, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %133, metadata !4676, metadata !DIExpression()), !dbg !4779
  %134 = icmp eq i32 %133, %31, !dbg !4780
  br i1 %134, label %287, label %94, !dbg !4781, !llvm.loop !4827

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4686, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4687, metadata !DIExpression()), !dbg !4830
  br i1 %28, label %136, label %138, !dbg !4831

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4688, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8 0, metadata !4689, metadata !DIExpression()), !dbg !4713
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %137, metadata !4690, metadata !DIExpression()), !dbg !4713
  br label %143, !dbg !4835

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4836
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4836

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4690, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8 undef, metadata !4689, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8 0, metadata !4688, metadata !DIExpression()), !dbg !4713
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #26, !dbg !4838
  br label %148, !dbg !4841

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4842
  call void @llvm.dbg.value(metadata i8* %151, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 0, metadata !4692, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i8 %149, metadata !4689, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8 %150, metadata !4688, metadata !DIExpression()), !dbg !4713
  %152 = icmp eq i8 %30, 0, !dbg !4844
  br i1 %152, label %153, label %155, !dbg !4845

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4846
  br label %160, !dbg !4845

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4845

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4846
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4847
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4848
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4713
  call void @llvm.dbg.value(metadata i8 undef, metadata !4685, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4713
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4849
  %166 = load i8, i8* %165, align 1, !dbg !4849
  %167 = zext i8 %162 to i32, !dbg !4850
  %168 = add i8 %166, %162, !dbg !4851
  call void @llvm.dbg.value(metadata i8 %168, metadata !4685, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4713
  %169 = icmp eq i32 %33, 0, !dbg !4852
  %170 = lshr i8 %163, 1, !dbg !4853
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4853
  call void @llvm.dbg.value(metadata i8 %171, metadata !4685, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4713
  %172 = icmp eq i32 %26, 0, !dbg !4854
  %173 = icmp eq i32 %161, 0, !dbg !4846
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4846
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4846
  call void @llvm.dbg.value(metadata i8 %175, metadata !4685, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4713
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4700, metadata !DIExpression()), !dbg !4855
  %176 = load i32, i32* %14, align 1, !dbg !4856
  store i8 %168, i8* %165, align 1, !dbg !4857
  store i8 %175, i8* %22, align 1, !dbg !4857
  store i8 %171, i8* %29, align 1, !dbg !4857
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #26, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %177, metadata !4691, metadata !DIExpression()), !dbg !4713
  %178 = icmp slt i32 %177, 0, !dbg !4859
  br i1 %178, label %287, label %240, !dbg !4861

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %181, metadata !4692, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i8 %182, metadata !4689, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8 %183, metadata !4688, metadata !DIExpression()), !dbg !4713
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %184, metadata !4663, metadata !DIExpression()), !dbg !4713
  %185 = load i8, i8* %180, align 1, !dbg !4863
  call void @llvm.dbg.value(metadata i8 %185, metadata !4694, metadata !DIExpression()), !dbg !4864
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %186, metadata !4663, metadata !DIExpression()), !dbg !4713
  %187 = load i8, i8* %184, align 1, !dbg !4866
  call void @llvm.dbg.value(metadata i8 %187, metadata !4697, metadata !DIExpression()), !dbg !4864
  %188 = zext i8 %187 to i32, !dbg !4867
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4867
  %190 = bitcast i32* %189 to i8**, !dbg !4868
  %191 = load i8*, i8** %190, align 4, !dbg !4868
  call void @llvm.dbg.value(metadata i8* %191, metadata !4698, metadata !DIExpression()), !dbg !4864
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #27, !dbg !4869
  call void @llvm.dbg.value(metadata i1 %192, metadata !4699, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4864
  br i1 %16, label %196, label %193, !dbg !4870

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4872
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #27, !dbg !4873
  br i1 %195, label %235, label %196, !dbg !4874

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4875

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4876

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4879
  br i1 %199, label %201, label %200, !dbg !4884

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #26, !dbg !4885
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #26, !dbg !4885
  unreachable, !dbg !4885

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4879
  %203 = add nuw nsw i8 %183, 1, !dbg !4887
  call void @llvm.dbg.value(metadata i8 %203, metadata !4688, metadata !DIExpression()), !dbg !4713
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4888
  br label %231, !dbg !4889

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4890

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4891
  br i1 %207, label %209, label %208, !dbg !4896

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #26, !dbg !4897
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #26, !dbg !4897
  unreachable, !dbg !4897

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4891
  %211 = add nuw nsw i8 %182, 1, !dbg !4899
  call void @llvm.dbg.value(metadata i8 %211, metadata !4689, metadata !DIExpression()), !dbg !4713
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4900
  br label %231, !dbg !4901

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4902

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4904
  br i1 %215, label %217, label %216, !dbg !4909

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #26, !dbg !4910
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #26, !dbg !4910
  unreachable, !dbg !4910

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4904
  %219 = add nuw nsw i8 %183, 1, !dbg !4912
  call void @llvm.dbg.value(metadata i8 %219, metadata !4688, metadata !DIExpression()), !dbg !4713
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4913
  br label %231, !dbg !4914

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4915
  br i1 %222, label %224, label %223, !dbg !4919

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #26, !dbg !4920
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #26, !dbg !4920
  unreachable, !dbg !4920

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4915
  %226 = add nuw nsw i8 %182, 1, !dbg !4922
  call void @llvm.dbg.value(metadata i8 %226, metadata !4689, metadata !DIExpression()), !dbg !4713
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4923
  store i8 %185, i8* %227, align 1, !dbg !4924
  %228 = add nuw nsw i8 %182, 2, !dbg !4925
  call void @llvm.dbg.value(metadata i8 %228, metadata !4689, metadata !DIExpression()), !dbg !4713
  %229 = zext i8 %226 to i32, !dbg !4926
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4926
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4927
  br label %235, !dbg !4928

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4713
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4848
  call void @llvm.dbg.value(metadata i8 %237, metadata !4689, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8 %236, metadata !4688, metadata !DIExpression()), !dbg !4713
  %238 = add nuw nsw i32 %181, 1, !dbg !4928
  call void @llvm.dbg.value(metadata i8* %186, metadata !4663, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 %238, metadata !4692, metadata !DIExpression()), !dbg !4843
  %239 = icmp eq i32 %238, %31, !dbg !4844
  br i1 %239, label %160, label %179, !dbg !4845, !llvm.loop !4929

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %177, metadata !4661, metadata !DIExpression()), !dbg !4713
  store i32 %176, i32* %14, align 1, !dbg !4931
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4932
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #26, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %243, metadata !4691, metadata !DIExpression()), !dbg !4713
  %244 = icmp slt i32 %243, 0, !dbg !4934
  br i1 %244, label %287, label %245, !dbg !4936

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4713
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4937
  %248 = add nuw nsw i32 %44, %24, !dbg !4937
  %249 = sub i32 %247, %248, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %249, metadata !4701, metadata !DIExpression()), !dbg !4713
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #26, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %250, metadata !4691, metadata !DIExpression()), !dbg !4713
  %251 = icmp slt i32 %250, 0, !dbg !4939
  br i1 %251, label %287, label %252, !dbg !4941

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4942
  call void @llvm.dbg.value(metadata i32 %253, metadata !4661, metadata !DIExpression()), !dbg !4713
  %254 = add nuw nsw i32 %253, %250, !dbg !4943
  call void @llvm.dbg.value(metadata i32 %254, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i32 0, metadata !4702, metadata !DIExpression()), !dbg !4944
  %255 = icmp eq i8 %162, 0, !dbg !4945
  br i1 %255, label %284, label %256, !dbg !4946

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4946

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4702, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i32 %260, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4947
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4948
  %262 = load i8, i8* %261, align 1, !dbg !4948
  call void @llvm.dbg.value(metadata i8 %262, metadata !4704, metadata !DIExpression()), !dbg !4949
  store i8 %262, i8* %10, align 1, !dbg !4950
  %263 = zext i8 %262 to i32, !dbg !4951
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4951
  %265 = bitcast i32* %264 to i8**, !dbg !4952
  %266 = load i8*, i8** %265, align 4, !dbg !4952
  call void @llvm.dbg.value(metadata i8* %266, metadata !4707, metadata !DIExpression()), !dbg !4949
  br i1 %257, label %270, label %267, !dbg !4953

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4954
  %269 = load i16, i16* %268, align 2, !dbg !4954
  br label %270, !dbg !4953

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4953
  call void @llvm.dbg.value(metadata i32 undef, metadata !4708, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4949
  call void @llvm.dbg.value(metadata i8* %10, metadata !4704, metadata !DIExpression(DW_OP_deref)), !dbg !4949
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #26, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %272, metadata !4691, metadata !DIExpression()), !dbg !4713
  %273 = icmp slt i32 %272, 0, !dbg !4956
  br i1 %273, label %277, label %274, !dbg !4958

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4708, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4713
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #27, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %275, metadata !4691, metadata !DIExpression()), !dbg !4713
  %276 = icmp slt i32 %275, 0, !dbg !4960
  br i1 %276, label %277, label %279, !dbg !4962

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4963
  call void @llvm.dbg.value(metadata i32 undef, metadata !4661, metadata !DIExpression()), !dbg !4713
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %280, metadata !4661, metadata !DIExpression()), !dbg !4713
  %281 = add nsw i32 %280, %275, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %281, metadata !4661, metadata !DIExpression()), !dbg !4713
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4963
  %282 = add nuw nsw i32 %259, 1, !dbg !4966
  call void @llvm.dbg.value(metadata i32 %282, metadata !4702, metadata !DIExpression()), !dbg !4944
  %283 = icmp eq i32 %282, %167, !dbg !4945
  br i1 %283, label %284, label %258, !dbg !4946, !llvm.loop !4967

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4943
  call void @llvm.dbg.value(metadata i32 %285, metadata !4661, metadata !DIExpression()), !dbg !4713
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #26, !dbg !4969
  br label %287, !dbg !4970

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4713
  ret i32 %288, !dbg !4971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4976, metadata !DIExpression()), !dbg !4984
  %2 = icmp eq i8* %0, null, !dbg !4985
  br i1 %2, label %3, label %4, !dbg !4988

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #26, !dbg !4989
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #26, !dbg !4989
  unreachable, !dbg !4989

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4977, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i8* %0, metadata !4978, metadata !DIExpression()), !dbg !4984
  %5 = load i8, i8* %0, align 1, !dbg !4991
  %6 = zext i8 %5 to i32, !dbg !4991
  %7 = shl nuw nsw i32 %6, 2, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %7, metadata !4979, metadata !DIExpression()), !dbg !4984
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4993
  %9 = load i8, i8* %8, align 1, !dbg !4993
  %10 = zext i8 %9 to i32, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %10, metadata !4980, metadata !DIExpression()), !dbg !4984
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4994
  %12 = load i8, i8* %11, align 1, !dbg !4994
  %13 = zext i8 %12 to i32, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %13, metadata !4981, metadata !DIExpression()), !dbg !4984
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4995
  call void @llvm.dbg.value(metadata i8* %14, metadata !4977, metadata !DIExpression()), !dbg !4984
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4996
  call void @llvm.dbg.value(metadata i8* %15, metadata !4977, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4997
  %16 = icmp eq i8 %9, 0, !dbg !4998
  br i1 %16, label %17, label %22, !dbg !5000

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4984
  %19 = ptrtoint i8* %18 to i32, !dbg !5001
  %20 = ptrtoint i8* %0 to i32, !dbg !5001
  %21 = sub i32 %19, %20, !dbg !5001
  ret i32 %21, !dbg !5002

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4982, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i8* %24, metadata !4977, metadata !DIExpression()), !dbg !4984
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !5003
  call void @llvm.dbg.value(metadata i8* %25, metadata !4977, metadata !DIExpression()), !dbg !4984
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #26, !dbg !5005
  %27 = add i32 %26, 1, !dbg !5006
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !5007
  call void @llvm.dbg.value(metadata i8* %28, metadata !4977, metadata !DIExpression()), !dbg !4984
  %29 = add nuw nsw i32 %23, 1, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %29, metadata !4982, metadata !DIExpression()), !dbg !4997
  %30 = icmp eq i32 %29, %10, !dbg !4998
  br i1 %30, label %17, label %22, !dbg !5000, !llvm.loop !5009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5011 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5015, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8* %1, metadata !5016, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8* %2, metadata !5017, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i16 %3, metadata !5018, metadata !DIExpression()), !dbg !5019
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5020
  br i1 %5, label %6, label %9, !dbg !5022

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5023
  %8 = add i32 %7, 1, !dbg !5025
  br label %20, !dbg !5026

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5027
  br i1 %10, label %13, label %11, !dbg !5028

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5028
  br label %16, !dbg !5028

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5029
  %15 = add i32 %14, 1, !dbg !5030
  br label %16, !dbg !5028

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5028
  %18 = and i32 %17, 65535, !dbg !5031
  call void @llvm.dbg.value(metadata i32 %17, metadata !5018, metadata !DIExpression()), !dbg !5019
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #26, !dbg !5032
  br label %20, !dbg !5033

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5019
  ret i32 %21, !dbg !5034
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5037, metadata !DIExpression()), !dbg !5038
  ret i32 0, !dbg !5039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !5040 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5044, metadata !DIExpression()), !dbg !5045
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5046
  ret void, !dbg !5047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !5048 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5051
  ret i8* %1, !dbg !5052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5053 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5064, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %0, metadata !5063, metadata !DIExpression()), !dbg !5073
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !5074
  ret void, !dbg !5076
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5081, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i8* %1, metadata !5082, metadata !DIExpression()), !dbg !5083
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5084
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !5084
  ret i32 %4, !dbg !5085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5086 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5093, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5090, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i8* %1, metadata !5091, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i8* %2, metadata !5092, metadata !DIExpression()), !dbg !5094
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !5095
  ret void, !dbg !5096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5097 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5101, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i32 %1, metadata !5102, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i32 0, metadata !5103, metadata !DIExpression()), !dbg !5104
  %3 = icmp eq i32 %1, 0, !dbg !5105
  br i1 %3, label %13, label %4, !dbg !5108

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5103, metadata !DIExpression()), !dbg !5104
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5109
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5111
  %8 = load i8, i8* %7, align 1, !dbg !5111
  %9 = zext i8 %8 to i32, !dbg !5111
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !5109
  %11 = add nuw i32 %5, 1, !dbg !5112
  call void @llvm.dbg.value(metadata i32 %11, metadata !5103, metadata !DIExpression()), !dbg !5104
  %12 = icmp eq i32 %11, %1, !dbg !5105
  br i1 %12, label %13, label %4, !dbg !5108, !llvm.loop !5113

13:                                               ; preds = %4, %2
  ret void, !dbg !5115
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5116 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5120, metadata !DIExpression()), !dbg !5122
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5123
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5123
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5121, metadata !DIExpression()), !dbg !5124
  call void @llvm.va_start(i8* nonnull %3), !dbg !5125
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5126
  %5 = load i32, i32* %4, align 4, !dbg !5126
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5126
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5126
  call void @llvm.va_end(i8* nonnull %3), !dbg !5127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5128
  ret void, !dbg !5128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5129 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5133, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %1, metadata !5134, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i8* %2, metadata !5135, metadata !DIExpression()), !dbg !5138
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5139
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5136, metadata !DIExpression()), !dbg !5140
  call void @llvm.va_start(i8* nonnull %5), !dbg !5141
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5142
  %7 = load i32, i32* %6, align 4, !dbg !5142
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5142
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !5142
  call void @llvm.dbg.value(metadata i32 %9, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.va_end(i8* nonnull %5), !dbg !5143
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5144
  ret i32 %9, !dbg !5145
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5146 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5153, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata i8* %0, metadata !5150, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata i32 %1, metadata !5151, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata i8* %2, metadata !5152, metadata !DIExpression()), !dbg !5160
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5161
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5161
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5154, metadata !DIExpression()), !dbg !5162
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5163
  store i8* %0, i8** %7, align 4, !dbg !5163
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5163
  store i32 %1, i32* %8, align 4, !dbg !5163
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5163
  store i32 0, i32* %9, align 4, !dbg !5163
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !5164
  %10 = load i32, i32* %9, align 4, !dbg !5165
  %11 = load i32, i32* %8, align 4, !dbg !5167
  %12 = icmp slt i32 %10, %11, !dbg !5168
  br i1 %12, label %13, label %15, !dbg !5169

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5170
  store i8 0, i8* %14, align 1, !dbg !5172
  br label %15, !dbg !5173

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5174
  ret i32 %10, !dbg !5175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !5176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5181, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5182, metadata !DIExpression()), !dbg !5183
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5184
  %4 = load i8*, i8** %3, align 4, !dbg !5184
  %5 = icmp eq i8* %4, null, !dbg !5186
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5187
  br i1 %5, label %12, label %8, !dbg !5188

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5189
  %10 = load i32, i32* %9, align 4, !dbg !5189
  %11 = icmp slt i32 %7, %10, !dbg !5190
  br i1 %11, label %15, label %12, !dbg !5191

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5192
  %14 = add nsw i32 %7, 1, !dbg !5194
  store i32 %14, i32* %13, align 4, !dbg !5194
  br label %25, !dbg !5195

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5196
  %17 = icmp eq i32 %7, %16, !dbg !5198
  br i1 %17, label %18, label %21, !dbg !5199

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5200
  store i32 %19, i32* %6, align 4, !dbg !5200
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5202
  store i8 0, i8* %20, align 1, !dbg !5203
  br label %25, !dbg !5204

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5205
  %23 = add nsw i32 %7, 1, !dbg !5207
  store i32 %23, i32* %6, align 4, !dbg !5207
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5208
  store i8 %22, i8* %24, align 1, !dbg !5209
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5210
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !5211 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5216, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i8* %1, metadata !5217, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i8* %2, metadata !5218, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i8* %3, metadata !5219, metadata !DIExpression()), !dbg !5220
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !5221
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5222
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !5223
  unreachable, !dbg !5224
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !5225 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5331
  ret %struct.k_thread* %1, !dbg !5332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5333 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5338, metadata !DIExpression()), !dbg !5339
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5340, !srcloc !5342
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !5343
  ret void, !dbg !5344
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !5345 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5346, !srcloc !5348
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !5349
  ret %struct.k_thread* %1, !dbg !5350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5351 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5362, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i8* %1, metadata !5363, metadata !DIExpression()), !dbg !5366
  %3 = icmp eq i8* %1, null, !dbg !5367
  br i1 %3, label %16, label %4, !dbg !5369

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5370
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5370
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5364, metadata !DIExpression()), !dbg !5366
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5371, !range !5372
  call void @llvm.dbg.value(metadata i32 %7, metadata !5365, metadata !DIExpression()), !dbg !5366
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5373
  br i1 %8, label %10, label %9, !dbg !5376

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #26, !dbg !5377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.42, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #26, !dbg !5377
  unreachable, !dbg !5377

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5379
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #27, !dbg !5379
  %13 = icmp eq i32 %12, %7, !dbg !5379
  br i1 %13, label %15, label %14, !dbg !5382

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #26, !dbg !5383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.44, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #26, !dbg !5383
  unreachable, !dbg !5383

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !5385
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5386
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !5388 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5392, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata i8* %1, metadata !5393, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata i8* %1, metadata !5394, metadata !DIExpression()), !dbg !5396
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5397
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5395, metadata !DIExpression()), !dbg !5396
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5398
  %5 = ptrtoint i8* %4 to i32, !dbg !5399
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5399
  %7 = sub i32 %5, %6, !dbg !5399
  %8 = lshr i32 %7, 3, !dbg !5400
  ret i32 %8, !dbg !5401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5402 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5406, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.value(metadata i32 %1, metadata !5407, metadata !DIExpression()), !dbg !5408
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5409
  %4 = and i32 %3, 1, !dbg !5410
  %5 = icmp ne i32 %4, 0, !dbg !5409
  ret i1 %5, !dbg !5411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5412 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5416, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.value(metadata i32 %1, metadata !5417, metadata !DIExpression()), !dbg !5418
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5419
  %4 = add i32 %3, %1, !dbg !5420
  ret i32 %4, !dbg !5421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5422 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5424, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i32 %1, metadata !5425, metadata !DIExpression()), !dbg !5426
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5427
  %4 = sub i32 %1, %3, !dbg !5428
  ret i32 %4, !dbg !5429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !5430 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5434, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i32 %1, metadata !5435, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i1 %2, metadata !5436, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5439
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5440
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5437, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5438, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5439
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5441
  %6 = bitcast i8* %5 to i16*, !dbg !5441
  %7 = load i16, i16* %6, align 2, !dbg !5441
  %8 = and i16 %7, -2, !dbg !5445
  %9 = zext i1 %2 to i16, !dbg !5445
  %10 = or i16 %8, %9, !dbg !5445
  store i16 %10, i16* %6, align 2, !dbg !5441
  ret void, !dbg !5446
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5447 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5451, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.value(metadata i32 %1, metadata !5452, metadata !DIExpression()), !dbg !5453
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5454
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5456
  br i1 %4, label %7, label %5, !dbg !5457

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5458
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5460
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5461
  br label %7, !dbg !5462

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5463
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5465
  br i1 %9, label %13, label %10, !dbg !5466

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5467
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5469
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !5470
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %12, metadata !5452, metadata !DIExpression()), !dbg !5453
  br label %13, !dbg !5472

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5452, metadata !DIExpression()), !dbg !5453
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !5473
  ret void, !dbg !5474
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5475 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5477, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %1, metadata !5478, metadata !DIExpression()), !dbg !5482
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5483, !range !5484
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5485
  call void @llvm.dbg.value(metadata i32 %4, metadata !5479, metadata !DIExpression()), !dbg !5486
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5487
  ret void, !dbg !5488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5489 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5493, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata i32 %1, metadata !5494, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata i32 %2, metadata !5495, metadata !DIExpression()), !dbg !5498
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5499
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5500
  %6 = add i32 %5, %4, !dbg !5501
  call void @llvm.dbg.value(metadata i32 %6, metadata !5496, metadata !DIExpression()), !dbg !5498
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5502
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5503
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5504
  ret void, !dbg !5505
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5506 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5508, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i32 %1, metadata !5509, metadata !DIExpression()), !dbg !5513
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5514, !range !5484
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5515
  call void @llvm.dbg.value(metadata i32 %4, metadata !5510, metadata !DIExpression()), !dbg !5516
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5517
  ret void, !dbg !5518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5519 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5523, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %1, metadata !5524, metadata !DIExpression()), !dbg !5525
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5526
  %4 = lshr i32 %3, 1, !dbg !5527
  ret i32 %4, !dbg !5528
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5529 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5533, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i32 %1, metadata !5534, metadata !DIExpression()), !dbg !5536
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5537
  %4 = add i32 %1, 1, !dbg !5538
  %5 = sub i32 %4, %3, !dbg !5539
  call void @llvm.dbg.value(metadata i32 %5, metadata !5535, metadata !DIExpression()), !dbg !5536
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5540, !range !5541
  %7 = sub nsw i32 31, %6, !dbg !5542
  ret i32 %7, !dbg !5543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5544 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5548, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i32 %1, metadata !5549, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i32 %2, metadata !5550, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5557
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5558
  %5 = load i32, i32* %4, align 4, !dbg !5558
  %6 = icmp eq i32 %5, 0, !dbg !5559
  br i1 %6, label %7, label %12, !dbg !5560

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5561
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5563
  %10 = load i32, i32* %9, align 4, !dbg !5564
  %11 = or i32 %10, %8, !dbg !5564
  store i32 %11, i32* %9, align 4, !dbg !5564
  store i32 %1, i32* %4, align 4, !dbg !5565
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5566
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5567
  br label %14, !dbg !5568

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5553, metadata !DIExpression()), !dbg !5569
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5570, !range !5571
  call void @llvm.dbg.value(metadata i32 %13, metadata !5556, metadata !DIExpression()), !dbg !5569
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5572
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5573
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5574
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5575
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5577 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5579, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.value(metadata i32 %1, metadata !5580, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.value(metadata i32 %2, metadata !5581, metadata !DIExpression()), !dbg !5582
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5583
  ret void, !dbg !5584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5585 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5587, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.value(metadata i32 %1, metadata !5588, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.value(metadata i32 %2, metadata !5589, metadata !DIExpression()), !dbg !5590
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5591
  ret void, !dbg !5592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5593 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5595, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata i32 %1, metadata !5596, metadata !DIExpression()), !dbg !5597
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5598
  ret i32 %3, !dbg !5599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5600 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5604, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32 %1, metadata !5605, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32 %2, metadata !5606, metadata !DIExpression()), !dbg !5609
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5610
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5607, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5608, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5609
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5608, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5609
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5611
  call void @llvm.dbg.value(metadata i8* %5, metadata !5608, metadata !DIExpression()), !dbg !5609
  %6 = bitcast i8* %5 to i16*, !dbg !5612
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5615
  %8 = load i16, i16* %7, align 2, !dbg !5615
  %9 = zext i16 %8 to i32, !dbg !5615
  ret i32 %9, !dbg !5616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !5617 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5621, metadata !DIExpression()), !dbg !5622
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5623
  ret %struct.chunk_unit_t* %2, !dbg !5624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #7 !dbg !5625 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5629, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata i32 %1, metadata !5630, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata i32 %2, metadata !5631, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata i32 %3, metadata !5632, metadata !DIExpression()), !dbg !5635
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5636
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5633, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5635
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5637
  call void @llvm.dbg.value(metadata i8* %6, metadata !5634, metadata !DIExpression()), !dbg !5635
  %7 = trunc i32 %3 to i16, !dbg !5638
  %8 = bitcast i8* %6 to i16*, !dbg !5641
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5642
  store i16 %7, i16* %9, align 2, !dbg !5643
  ret void, !dbg !5644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !5645 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5649, metadata !DIExpression()), !dbg !5650
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !5651
  ret i32 %2, !dbg !5652
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5653 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5657, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.value(metadata i32 %1, metadata !5658, metadata !DIExpression()), !dbg !5659
  %3 = add i32 %1, 4, !dbg !5660
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !5661
  ret i32 %4, !dbg !5662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !5663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5667, metadata !DIExpression()), !dbg !5668
  %2 = add i32 %0, 7, !dbg !5669
  %3 = lshr i32 %2, 3, !dbg !5670
  ret i32 %3, !dbg !5671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5672 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5676, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.value(metadata i32 %1, metadata !5677, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.value(metadata i32 %2, metadata !5678, metadata !DIExpression()), !dbg !5679
  %4 = shl i32 %2, 1, !dbg !5680
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !5681
  ret void, !dbg !5682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5683 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5685, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i32 %1, metadata !5686, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i32 %2, metadata !5687, metadata !DIExpression()), !dbg !5688
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !5689
  ret void, !dbg !5690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5691 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5693, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %1, metadata !5694, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %2, metadata !5695, metadata !DIExpression()), !dbg !5701
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5696, metadata !DIExpression()), !dbg !5701
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5703
  %6 = icmp eq i32 %5, %1, !dbg !5704
  br i1 %6, label %7, label %14, !dbg !5705

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5706
  %9 = xor i32 %8, -1, !dbg !5708
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5709
  %11 = load i32, i32* %10, align 4, !dbg !5710
  %12 = and i32 %11, %9, !dbg !5710
  store i32 %12, i32* %10, align 4, !dbg !5710
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5711
  store i32 0, i32* %13, align 4, !dbg !5712
  br label %17, !dbg !5713

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %15, metadata !5697, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 %5, metadata !5700, metadata !DIExpression()), !dbg !5715
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5716
  store i32 %5, i32* %16, align 4, !dbg !5717
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !5718
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !5719
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5721 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5723, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i32 %1, metadata !5724, metadata !DIExpression()), !dbg !5725
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !5726
  ret i32 %3, !dbg !5727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #8 !dbg !5728 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5732, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8* %1, metadata !5733, metadata !DIExpression()), !dbg !5739
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5740
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5740
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5734, metadata !DIExpression()), !dbg !5739
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %5, metadata !5735, metadata !DIExpression()), !dbg !5739
  %6 = ptrtoint i8* %1 to i32, !dbg !5742
  call void @llvm.dbg.value(metadata i32 %6, metadata !5736, metadata !DIExpression()), !dbg !5739
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !5743
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5743
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5744
  call void @llvm.dbg.value(metadata i32 %9, metadata !5737, metadata !DIExpression()), !dbg !5739
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !5745
  %11 = shl i32 %10, 3, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %11, metadata !5738, metadata !DIExpression()), !dbg !5739
  %12 = sub i32 %9, %6, !dbg !5747
  %13 = add i32 %12, %11, !dbg !5748
  ret i32 %13, !dbg !5749
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5750 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5754, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.value(metadata i32 %1, metadata !5755, metadata !DIExpression()), !dbg !5760
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5761
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5761
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5756, metadata !DIExpression()), !dbg !5760
  %5 = icmp eq i32 %1, 0, !dbg !5762
  br i1 %5, label %19, label %6, !dbg !5764

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5765
  br i1 %7, label %19, label %8, !dbg !5766

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5767, !range !5372
  call void @llvm.dbg.value(metadata i32 %9, metadata !5758, metadata !DIExpression()), !dbg !5760
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !5768
  call void @llvm.dbg.value(metadata i32 %10, metadata !5759, metadata !DIExpression()), !dbg !5760
  %11 = icmp eq i32 %10, 0, !dbg !5769
  br i1 %11, label %19, label %12, !dbg !5771

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5772
  %14 = icmp ugt i32 %13, %9, !dbg !5774
  br i1 %14, label %15, label %17, !dbg !5775

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5776
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !5778
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !5779
  br label %17, !dbg !5780

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !5781
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5782
  call void @llvm.dbg.value(metadata i8* %18, metadata !5757, metadata !DIExpression()), !dbg !5760
  br label %19, !dbg !5783

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5760
  ret i8* %20, !dbg !5784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5785 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5789, metadata !DIExpression()), !dbg !5791
  call void @llvm.dbg.value(metadata i32 %1, metadata !5790, metadata !DIExpression()), !dbg !5791
  %3 = lshr i32 %1, 3, !dbg !5792
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5793
  %5 = load i32, i32* %4, align 4, !dbg !5793
  %6 = icmp uge i32 %3, %5, !dbg !5794
  ret i1 %6, !dbg !5795
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5796 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5800, metadata !DIExpression()), !dbg !5815
  call void @llvm.dbg.value(metadata i32 %1, metadata !5801, metadata !DIExpression()), !dbg !5815
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %3, metadata !5802, metadata !DIExpression()), !dbg !5815
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5803, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5815
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5817
  %5 = load i32, i32* %4, align 4, !dbg !5817
  %6 = icmp eq i32 %5, 0, !dbg !5818
  br i1 %6, label %19, label %7, !dbg !5819

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5820
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5821
  call void @llvm.dbg.value(metadata i32 %9, metadata !5807, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.value(metadata i32 %8, metadata !5808, metadata !DIExpression()), !dbg !5822
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5823
  %11 = icmp ult i32 %10, %1, !dbg !5825
  br i1 %11, label %13, label %12, !dbg !5826

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !5827
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5829
  store i32 %14, i32* %4, align 4, !dbg !5830
  %15 = add nsw i32 %9, -1, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %15, metadata !5807, metadata !DIExpression()), !dbg !5821
  %16 = icmp eq i32 %15, 0, !dbg !5831
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5832
  br i1 %18, label %19, label %7, !dbg !5832, !llvm.loop !5833

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5836
  %21 = load i32, i32* %20, align 4, !dbg !5836
  %22 = add nsw i32 %3, 1, !dbg !5837
  %23 = shl nsw i32 -1, %22, !dbg !5837
  %24 = and i32 %21, %23, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %24, metadata !5810, metadata !DIExpression()), !dbg !5815
  %25 = icmp eq i32 %24, 0, !dbg !5839
  br i1 %25, label %30, label %26, !dbg !5840

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5841, !range !5541
  call void @llvm.dbg.value(metadata i32 %27, metadata !5811, metadata !DIExpression()), !dbg !5842
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5843
  %29 = load i32, i32* %28, align 4, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %29, metadata !5814, metadata !DIExpression()), !dbg !5842
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !5844
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5815
  ret i32 %31, !dbg !5845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5846 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %1, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5850, metadata !DIExpression()), !dbg !5854
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5855
  call void @llvm.dbg.value(metadata i32 %4, metadata !5851, metadata !DIExpression()), !dbg !5854
  %5 = sub i32 %2, %1, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %5, metadata !5852, metadata !DIExpression()), !dbg !5854
  %6 = sub i32 %4, %5, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %6, metadata !5853, metadata !DIExpression()), !dbg !5854
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5858
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !5859
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !5860
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5861
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5862
  ret void, !dbg !5863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5864 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5868, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata i32 %1, metadata !5869, metadata !DIExpression()), !dbg !5872
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5873
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5870, metadata !DIExpression()), !dbg !5872
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5874
  call void @llvm.dbg.value(metadata i8* %4, metadata !5871, metadata !DIExpression()), !dbg !5872
  ret i8* %4, !dbg !5875
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5876 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5880, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i32 %1, metadata !5881, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i32 %2, metadata !5882, metadata !DIExpression()), !dbg !5892
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5893
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5893
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5883, metadata !DIExpression()), !dbg !5892
  %6 = sub i32 0, %1, !dbg !5894
  %7 = and i32 %6, %1, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %7, metadata !5885, metadata !DIExpression()), !dbg !5892
  %8 = icmp eq i32 %7, %1, !dbg !5896
  br i1 %8, label %13, label %9, !dbg !5898

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5899
  call void @llvm.dbg.value(metadata i32 %10, metadata !5881, metadata !DIExpression()), !dbg !5892
  %11 = icmp ult i32 %7, 4, !dbg !5901
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5901
  br label %17, !dbg !5901

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5902
  br i1 %14, label %15, label %17, !dbg !5905

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !5906
  br label %61, !dbg !5908

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5892
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5909
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5881, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i32 %19, metadata !5884, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i32 %18, metadata !5885, metadata !DIExpression()), !dbg !5892
  %21 = add i32 %20, -1, !dbg !5910
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5910, !range !5541
  %23 = icmp ult i32 %22, 2, !dbg !5910
  br i1 %23, label %25, label %24, !dbg !5913

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #26, !dbg !5914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #26, !dbg !5914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #26, !dbg !5914
  unreachable, !dbg !5914

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5916
  br i1 %26, label %61, label %27, !dbg !5918

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !5919
  br i1 %28, label %61, label %29, !dbg !5920

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5921
  %31 = add i32 %30, %20, !dbg !5922
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #27, !dbg !5923, !range !5372
  call void @llvm.dbg.value(metadata i32 %32, metadata !5886, metadata !DIExpression()), !dbg !5892
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #27, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %33, metadata !5887, metadata !DIExpression()), !dbg !5892
  %34 = icmp eq i32 %33, 0, !dbg !5925
  br i1 %34, label %61, label %35, !dbg !5927

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !5928
  call void @llvm.dbg.value(metadata i8* %36, metadata !5888, metadata !DIExpression()), !dbg !5892
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5929
  %38 = ptrtoint i8* %37 to i32, !dbg !5929
  %39 = add i32 %21, %38, !dbg !5929
  %40 = sub i32 0, %20, !dbg !5929
  %41 = and i32 %39, %40, !dbg !5929
  %42 = inttoptr i32 %41 to i8*, !dbg !5930
  %43 = sub i32 0, %18, !dbg !5931
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5931
  call void @llvm.dbg.value(metadata i8* %44, metadata !5888, metadata !DIExpression()), !dbg !5892
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5932
  %46 = ptrtoint i8* %45 to i32, !dbg !5932
  %47 = add i32 %46, 7, !dbg !5932
  %48 = and i32 %47, -8, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %48, metadata !5889, metadata !DIExpression()), !dbg !5892
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #27, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %49, metadata !5890, metadata !DIExpression()), !dbg !5892
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !5934
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5935
  %52 = sub i32 %48, %51, !dbg !5935
  %53 = ashr exact i32 %52, 3, !dbg !5935
  call void @llvm.dbg.value(metadata i32 %53, metadata !5891, metadata !DIExpression()), !dbg !5892
  %54 = icmp ugt i32 %49, %33, !dbg !5936
  br i1 %54, label %55, label %56, !dbg !5938

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #27, !dbg !5939
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !5941
  br label %56, !dbg !5942

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !5943
  %58 = icmp ugt i32 %57, %53, !dbg !5945
  br i1 %58, label %59, label %60, !dbg !5946

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #27, !dbg !5947
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #27, !dbg !5949
  br label %60, !dbg !5950

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #27, !dbg !5951
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5892
  ret i8* %62, !dbg !5952
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5953 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5957, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i8* %1, metadata !5958, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i32 %2, metadata !5959, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i32 %3, metadata !5960, metadata !DIExpression()), !dbg !5976
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5977
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5977
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5961, metadata !DIExpression()), !dbg !5976
  %7 = icmp eq i8* %1, null, !dbg !5978
  br i1 %7, label %8, label %10, !dbg !5980

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5981
  br label %63, !dbg !5983

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5984
  br i1 %11, label %12, label %13, !dbg !5986

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5987
  br label %63, !dbg !5989

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5990
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5990, !range !5541
  %16 = icmp ult i32 %15, 2, !dbg !5990
  br i1 %16, label %18, label %17, !dbg !5993

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #26, !dbg !5994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #26, !dbg !5994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #26, !dbg !5994
  unreachable, !dbg !5994

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !5996
  br i1 %19, label %63, label %20, !dbg !5998

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5999, !range !5372
  call void @llvm.dbg.value(metadata i32 %21, metadata !5962, metadata !DIExpression()), !dbg !5976
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %22, metadata !5963, metadata !DIExpression()), !dbg !5976
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6001
  %24 = ptrtoint i8* %1 to i32, !dbg !6002
  %25 = ptrtoint i8* %23 to i32, !dbg !6002
  %26 = sub i32 %24, %25, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %26, metadata !5964, metadata !DIExpression()), !dbg !5976
  %27 = add i32 %26, %3, !dbg !6003
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #27, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %28, metadata !5965, metadata !DIExpression()), !dbg !5976
  %29 = icmp eq i32 %2, 0, !dbg !6005
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !6006
  br i1 %32, label %33, label %53, !dbg !6006

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6007
  %35 = icmp eq i32 %28, %34, !dbg !6008
  br i1 %35, label %63, label %36, !dbg !6009

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !6010
  br i1 %37, label %38, label %40, !dbg !6011

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !6012
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #27, !dbg !6014
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !6015
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #27, !dbg !6016
  br label %63, !dbg !6017

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6018
  br i1 %41, label %53, label %42, !dbg !6019

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6020
  %44 = add i32 %43, %34, !dbg !6021
  %45 = icmp ult i32 %44, %28, !dbg !6022
  br i1 %45, label %53, label %46, !dbg !6023

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !6024
  call void @llvm.dbg.value(metadata i32 %47, metadata !5966, metadata !DIExpression()), !dbg !6025
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6026
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6027
  %49 = icmp ult i32 %47, %48, !dbg !6029
  br i1 %49, label %50, label %52, !dbg !6030

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !6031
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #27, !dbg !6033
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #27, !dbg !6034
  br label %52, !dbg !6035

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #27, !dbg !6036
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !6037
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !6038
  call void @llvm.dbg.value(metadata i8* %54, metadata !5972, metadata !DIExpression()), !dbg !5976
  %55 = icmp eq i8* %54, null, !dbg !6039
  br i1 %55, label %63, label %56, !dbg !6040

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6041, !range !5484
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #27, !dbg !6042
  %59 = sub i32 %58, %26, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %59, metadata !5973, metadata !DIExpression()), !dbg !6044
  %60 = icmp ult i32 %59, %3, !dbg !6045
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !6045
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #26, !dbg !6046
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !6047
  br label %63, !dbg !6048

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5976
  ret i8* %64, !dbg !6049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !6050 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6054, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.value(metadata i32 %1, metadata !6055, metadata !DIExpression()), !dbg !6056
  %3 = shl i32 %1, 3, !dbg !6057
  %4 = add i32 %3, -4, !dbg !6058
  ret i32 %4, !dbg !6059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6060 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6064, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata i8* %1, metadata !6065, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.value(metadata i32 %2, metadata !6066, metadata !DIExpression()), !dbg !6075
  %4 = icmp ult i32 %2, 262144, !dbg !6076
  br i1 %4, label %6, label %5, !dbg !6081

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #26, !dbg !6082
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.48, i32 0, i32 0)) #26, !dbg !6082
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #26, !dbg !6082
  unreachable, !dbg !6082

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !6084
  br i1 %7, label %9, label %8, !dbg !6087

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #26, !dbg !6088
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6088
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #26, !dbg !6088
  unreachable, !dbg !6088

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !6090
  call void @llvm.dbg.value(metadata i32 %10, metadata !6066, metadata !DIExpression()), !dbg !6075
  %11 = ptrtoint i8* %1 to i32, !dbg !6091
  %12 = add i32 %11, 7, !dbg !6091
  %13 = and i32 %12, -8, !dbg !6091
  call void @llvm.dbg.value(metadata i32 %13, metadata !6067, metadata !DIExpression()), !dbg !6075
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6092
  %15 = ptrtoint i8* %14 to i32, !dbg !6092
  %16 = and i32 %15, -8, !dbg !6092
  call void @llvm.dbg.value(metadata i32 %16, metadata !6068, metadata !DIExpression()), !dbg !6075
  %17 = sub i32 %16, %13, !dbg !6093
  %18 = lshr exact i32 %17, 3, !dbg !6094
  call void @llvm.dbg.value(metadata i32 %18, metadata !6069, metadata !DIExpression()), !dbg !6075
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #27, !dbg !6095
  %20 = icmp ugt i32 %18, %19, !dbg !6095
  br i1 %20, label %22, label %21, !dbg !6098

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #26, !dbg !6099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #26, !dbg !6099
  unreachable, !dbg !6099

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6101
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !6070, metadata !DIExpression()), !dbg !6075
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6102
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6103
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6104
  store i32 %18, i32* %25, align 8, !dbg !6105
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6106
  store i32 0, i32* %26, align 4, !dbg !6107
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #27, !dbg !6108
  call void @llvm.dbg.value(metadata i32 %27, metadata !6071, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6075
  %28 = shl i32 %27, 2, !dbg !6109
  %29 = add i32 %28, 20, !dbg !6110
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #27, !dbg !6111
  call void @llvm.dbg.value(metadata i32 %30, metadata !6072, metadata !DIExpression()), !dbg !6075
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #27, !dbg !6112
  %32 = add i32 %31, %30, !dbg !6112
  %33 = icmp ugt i32 %32, %18, !dbg !6112
  br i1 %33, label %36, label %34, !dbg !6115

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !6073, metadata !DIExpression()), !dbg !6116
  %35 = icmp slt i32 %27, 0, !dbg !6117
  br i1 %35, label %37, label %39, !dbg !6119

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #26, !dbg !6120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #26, !dbg !6120
  unreachable, !dbg !6120

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #27, !dbg !6122
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #27, !dbg !6123
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !6124
  %38 = sub i32 %18, %30, !dbg !6125
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #27, !dbg !6126
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #27, !dbg !6127
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #27, !dbg !6128
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #27, !dbg !6129
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #27, !dbg !6130
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #27, !dbg !6131
  ret void, !dbg !6132

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !6073, metadata !DIExpression()), !dbg !6116
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6133
  store i32 0, i32* %41, align 4, !dbg !6135
  %42 = add nuw i32 %40, 1, !dbg !6136
  call void @llvm.dbg.value(metadata i32 %42, metadata !6073, metadata !DIExpression()), !dbg !6116
  %43 = icmp eq i32 %40, %27, !dbg !6117
  br i1 %43, label %37, label %39, !dbg !6119, !llvm.loop !6137
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6139 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6152, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6149, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %1, metadata !6150, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %2, metadata !6151, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %4, metadata !6153, metadata !DIExpression()), !dbg !6278
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6279
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6279
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6154, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata i32 0, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i1 undef, metadata !6160, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6278
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6281

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6281

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6282
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6152, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %30, metadata !6151, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %29, metadata !6158, metadata !DIExpression()), !dbg !6278
  %31 = load i8, i8* %30, align 1, !dbg !6283
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6281

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6283
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6284
  call void @llvm.dbg.value(metadata i8* %34, metadata !6151, metadata !DIExpression()), !dbg !6278
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !6284
  call void @llvm.dbg.value(metadata i32 %35, metadata !6162, metadata !DIExpression()), !dbg !6285
  %36 = icmp slt i32 %35, 0, !dbg !6286
  %37 = add i32 %29, 1, !dbg !6284
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %36, label %365, label %28, !llvm.loop !6288

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6290
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6167, metadata !DIExpression()), !dbg !6291
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6291
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6210, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6213, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %30, metadata !6216, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i32 -1, metadata !6217, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i32 -1, metadata !6218, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* null, metadata !6219, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %14, metadata !6220, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8 0, metadata !6221, metadata !DIExpression()), !dbg !6292
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !6293
  call void @llvm.dbg.value(metadata i8* %39, metadata !6151, metadata !DIExpression()), !dbg !6278
  %40 = load i24, i24* %15, align 8, !dbg !6294
  %41 = and i24 %40, 256, !dbg !6294
  %42 = icmp eq i24 %41, 0, !dbg !6294
  br i1 %42, label %51, label %43, !dbg !6296

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6297
  call void @llvm.dbg.value(metadata i8* %44, metadata !6152, metadata !DIExpression()), !dbg !6278
  %45 = bitcast i8* %27 to i32*, !dbg !6297
  %46 = load i32, i32* %45, align 4, !dbg !6297
  call void @llvm.dbg.value(metadata i32 %46, metadata !6217, metadata !DIExpression()), !dbg !6292
  %47 = icmp slt i32 %46, 0, !dbg !6299
  br i1 %47, label %48, label %56, !dbg !6301

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6302
  store i24 %49, i24* %15, align 8, !dbg !6302
  %50 = sub nsw i32 0, %46, !dbg !6304
  call void @llvm.dbg.value(metadata i32 %50, metadata !6217, metadata !DIExpression()), !dbg !6292
  br label %56, !dbg !6305

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6306
  %53 = icmp eq i24 %52, 0, !dbg !6306
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6308
  br label %56, !dbg !6308

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6309
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6292
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6152, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %58, metadata !6217, metadata !DIExpression()), !dbg !6292
  %60 = and i24 %57, 1024, !dbg !6309
  %61 = icmp eq i24 %60, 0, !dbg !6309
  br i1 %61, label %69, label %62, !dbg !6310

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6311
  call void @llvm.dbg.value(metadata i8* %63, metadata !6152, metadata !DIExpression()), !dbg !6278
  %64 = bitcast i8* %59 to i32*, !dbg !6311
  %65 = load i32, i32* %64, align 4, !dbg !6311
  call void @llvm.dbg.value(metadata i32 %65, metadata !6222, metadata !DIExpression()), !dbg !6312
  %66 = icmp slt i32 %65, 0, !dbg !6313
  br i1 %66, label %67, label %74, !dbg !6315

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6316
  store i24 %68, i24* %15, align 8, !dbg !6316
  br label %74, !dbg !6318

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6319
  %71 = icmp eq i24 %70, 0, !dbg !6319
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6321
  br label %74, !dbg !6321

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6322
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6292
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6292
  call void @llvm.dbg.value(metadata i8* %77, metadata !6152, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %76, metadata !6218, metadata !DIExpression()), !dbg !6292
  store i32 0, i32* %16, align 4, !dbg !6323
  store i32 0, i32* %17, align 8, !dbg !6324
  %78 = lshr i24 %75, 16, !dbg !6322
  call void @llvm.dbg.value(metadata i24 %78, metadata !6225, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6292
  %79 = lshr i24 %75, 11, !dbg !6325
  %80 = and i24 %79, 15, !dbg !6325
  %81 = zext i24 %80 to i32, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %81, metadata !6226, metadata !DIExpression()), !dbg !6292
  %82 = trunc i24 %78 to i3, !dbg !6326
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6326

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6327

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6330
  call void @llvm.dbg.value(metadata i8* %85, metadata !6152, metadata !DIExpression()), !dbg !6278
  %86 = bitcast i8* %77 to i32*, !dbg !6330
  %87 = load i32, i32* %86, align 4, !dbg !6330
  %88 = sext i32 %87 to i64, !dbg !6330
  store i64 %88, i64* %20, align 8, !dbg !6332
  br label %115, !dbg !6333

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6334
  call void @llvm.dbg.value(metadata i8* %90, metadata !6152, metadata !DIExpression()), !dbg !6278
  %91 = bitcast i8* %77 to i32*, !dbg !6334
  %92 = load i32, i32* %91, align 4, !dbg !6334
  %93 = sext i32 %92 to i64, !dbg !6334
  store i64 %93, i64* %20, align 8, !dbg !6337
  br label %115, !dbg !6338

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6339
  %96 = add i32 %95, 7, !dbg !6339
  %97 = and i32 %96, -8, !dbg !6339
  %98 = inttoptr i32 %97 to i8*, !dbg !6339
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6339
  call void @llvm.dbg.value(metadata i8* %99, metadata !6152, metadata !DIExpression()), !dbg !6278
  %100 = inttoptr i32 %97 to i64*, !dbg !6339
  %101 = load i64, i64* %100, align 8, !dbg !6339
  store i64 %101, i64* %20, align 8, !dbg !6340
  br label %115, !dbg !6341

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6342
  %104 = add i32 %103, 7, !dbg !6342
  %105 = and i32 %104, -8, !dbg !6342
  %106 = inttoptr i32 %105 to i8*, !dbg !6342
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6342
  call void @llvm.dbg.value(metadata i8* %107, metadata !6152, metadata !DIExpression()), !dbg !6278
  %108 = inttoptr i32 %105 to i64*, !dbg !6342
  %109 = load i64, i64* %108, align 8, !dbg !6342
  store i64 %109, i64* %20, align 8, !dbg !6343
  br label %115, !dbg !6344

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6345
  call void @llvm.dbg.value(metadata i8* %111, metadata !6152, metadata !DIExpression()), !dbg !6278
  %112 = bitcast i8* %77 to i32*, !dbg !6345
  %113 = load i32, i32* %112, align 4, !dbg !6345
  %114 = sext i32 %113 to i64, !dbg !6346
  store i64 %114, i64* %20, align 8, !dbg !6347
  br label %115, !dbg !6348

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6349
  call void @llvm.dbg.value(metadata i8* %117, metadata !6152, metadata !DIExpression()), !dbg !6278
  %118 = trunc i24 %79 to i4, !dbg !6350
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6350

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6351
  %121 = ashr exact i64 %120, 56, !dbg !6351
  store i64 %121, i64* %20, align 8, !dbg !6354
  br label %177, !dbg !6355

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6356
  %124 = ashr exact i64 %123, 48, !dbg !6356
  store i64 %124, i64* %20, align 8, !dbg !6359
  br label %177, !dbg !6360

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6361

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6364
  call void @llvm.dbg.value(metadata i8* %127, metadata !6152, metadata !DIExpression()), !dbg !6278
  %128 = bitcast i8* %77 to i32*, !dbg !6364
  %129 = load i32, i32* %128, align 4, !dbg !6364
  %130 = zext i32 %129 to i64, !dbg !6364
  store i64 %130, i64* %20, align 8, !dbg !6366
  br label %157, !dbg !6367

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6368
  call void @llvm.dbg.value(metadata i8* %132, metadata !6152, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %132, metadata !6152, metadata !DIExpression()), !dbg !6278
  %133 = bitcast i8* %77 to i32*, !dbg !6368
  %134 = load i32, i32* %133, align 4, !dbg !6368
  %135 = zext i32 %134 to i64, !dbg !6368
  store i64 %135, i64* %20, align 8, !dbg !6368
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6370
  %138 = add i32 %137, 7, !dbg !6370
  %139 = and i32 %138, -8, !dbg !6370
  %140 = inttoptr i32 %139 to i8*, !dbg !6370
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6370
  call void @llvm.dbg.value(metadata i8* %141, metadata !6152, metadata !DIExpression()), !dbg !6278
  %142 = inttoptr i32 %139 to i64*, !dbg !6370
  %143 = load i64, i64* %142, align 8, !dbg !6370
  store i64 %143, i64* %20, align 8, !dbg !6371
  br label %157, !dbg !6372

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6373
  %146 = add i32 %145, 7, !dbg !6373
  %147 = and i32 %146, -8, !dbg !6373
  %148 = inttoptr i32 %147 to i8*, !dbg !6373
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6373
  call void @llvm.dbg.value(metadata i8* %149, metadata !6152, metadata !DIExpression()), !dbg !6278
  %150 = inttoptr i32 %147 to i64*, !dbg !6373
  %151 = load i64, i64* %150, align 8, !dbg !6373
  store i64 %151, i64* %20, align 8, !dbg !6374
  br label %157, !dbg !6375

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6376
  call void @llvm.dbg.value(metadata i8* %153, metadata !6152, metadata !DIExpression()), !dbg !6278
  %154 = bitcast i8* %77 to i32*, !dbg !6376
  %155 = load i32, i32* %154, align 4, !dbg !6376
  %156 = zext i32 %155 to i64, !dbg !6377
  store i64 %156, i64* %20, align 8, !dbg !6378
  br label %157, !dbg !6379

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6380
  call void @llvm.dbg.value(metadata i8* %159, metadata !6152, metadata !DIExpression()), !dbg !6278
  %160 = trunc i24 %79 to i4, !dbg !6381
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6381

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6382
  store i64 %162, i64* %20, align 8, !dbg !6385
  br label %177, !dbg !6386

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6387
  store i64 %164, i64* %20, align 8, !dbg !6390
  br label %177, !dbg !6391

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6392
  %167 = add i32 %166, 7, !dbg !6392
  %168 = and i32 %167, -8, !dbg !6392
  %169 = inttoptr i32 %168 to i8*, !dbg !6392
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6392
  call void @llvm.dbg.value(metadata i8* %170, metadata !6152, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %170, metadata !6152, metadata !DIExpression()), !dbg !6278
  %171 = inttoptr i32 %168 to double*, !dbg !6392
  %172 = load double, double* %171, align 8, !dbg !6392
  store double %172, double* %19, align 8, !dbg !6392
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6396
  call void @llvm.dbg.value(metadata i8* %174, metadata !6152, metadata !DIExpression()), !dbg !6278
  %175 = bitcast i8* %77 to i8**, !dbg !6396
  %176 = load i8*, i8** %175, align 4, !dbg !6396
  store i8* %176, i8** %18, align 8, !dbg !6399
  br label %177, !dbg !6400

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6292
  call void @llvm.dbg.value(metadata i8* %178, metadata !6152, metadata !DIExpression()), !dbg !6278
  %179 = and i24 %75, 3, !dbg !6401
  %180 = icmp eq i24 %179, 0, !dbg !6401
  br i1 %180, label %185, label %181, !dbg !6401

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !6402
  call void @llvm.dbg.value(metadata i32 %182, metadata !6227, metadata !DIExpression()), !dbg !6403
  %183 = icmp slt i32 %182, 0, !dbg !6404
  %184 = add i32 %182, %29, !dbg !6402
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6406
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6407

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !6408
  call void @llvm.dbg.value(metadata i32 %188, metadata !6231, metadata !DIExpression()), !dbg !6409
  %189 = icmp slt i32 %188, 0, !dbg !6410
  %190 = add i32 %29, 1, !dbg !6408
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6412
  call void @llvm.dbg.value(metadata i8* %192, metadata !6219, metadata !DIExpression()), !dbg !6292
  %193 = icmp sgt i32 %76, -1, !dbg !6413
  br i1 %193, label %194, label %196, !dbg !6415

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !6416
  call void @llvm.dbg.value(metadata i32 %195, metadata !6234, metadata !DIExpression()), !dbg !6418
  br label %241, !dbg !6419

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !6420
  call void @llvm.dbg.value(metadata i32 %197, metadata !6234, metadata !DIExpression()), !dbg !6418
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6219, metadata !DIExpression()), !dbg !6292
  %199 = load i64, i64* %20, align 8, !dbg !6422
  %200 = trunc i64 %199 to i8, !dbg !6423
  store i8 %200, i8* %10, align 1, !dbg !6424
  call void @llvm.dbg.value(metadata i8* %23, metadata !6220, metadata !DIExpression()), !dbg !6292
  br label %245, !dbg !6425

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6426
  %203 = icmp eq i24 %202, 0, !dbg !6426
  %204 = trunc i24 %75 to i8, !dbg !6428
  %205 = shl i8 %204, 1, !dbg !6428
  %206 = and i8 %205, 32, !dbg !6428
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6428
  call void @llvm.dbg.value(metadata i8 %207, metadata !6221, metadata !DIExpression()), !dbg !6292
  %208 = load i64, i64* %20, align 8, !dbg !6429
  call void @llvm.dbg.value(metadata i64 %208, metadata !6159, metadata !DIExpression()), !dbg !6278
  %209 = icmp slt i64 %208, 0, !dbg !6430
  br i1 %209, label %210, label %212, !dbg !6432

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6221, metadata !DIExpression()), !dbg !6292
  %211 = sub nsw i64 0, %208, !dbg !6433
  store i64 %211, i64* %20, align 8, !dbg !6435
  br label %212, !dbg !6436

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6292
  call void @llvm.dbg.value(metadata i8 %213, metadata !6221, metadata !DIExpression()), !dbg !6292
  %214 = load i64, i64* %20, align 8, !dbg !6437
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6438
  call void @llvm.dbg.value(metadata i8* %215, metadata !6219, metadata !DIExpression()), !dbg !6292
  br label %216, !dbg !6439

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6440
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6441
  call void @llvm.dbg.value(metadata i8* %218, metadata !6219, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8 %217, metadata !6221, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.label(metadata !6277), !dbg !6442
  %219 = icmp sgt i32 %76, -1, !dbg !6443
  br i1 %219, label %222, label %220, !dbg !6444

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6445
  br label %245, !dbg !6444

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6447
  %224 = sub i32 %22, %223, !dbg !6447
  call void @llvm.dbg.value(metadata i32 %224, metadata !6236, metadata !DIExpression()), !dbg !6448
  %225 = load i24, i24* %15, align 8, !dbg !6449
  %226 = and i24 %225, -65, !dbg !6449
  store i24 %226, i24* %15, align 8, !dbg !6449
  %227 = icmp ugt i32 %76, %224, !dbg !6450
  br i1 %227, label %228, label %245, !dbg !6452

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6453
  store i32 %229, i32* %16, align 4, !dbg !6455
  br label %245, !dbg !6456

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6457
  %232 = icmp eq i8* %231, null, !dbg !6459
  br i1 %232, label %245, label %233, !dbg !6460

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6461
  %235 = zext i32 %234 to i64, !dbg !6461
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6463
  call void @llvm.dbg.value(metadata i8* %236, metadata !6219, metadata !DIExpression()), !dbg !6292
  %237 = load i24, i24* %15, align 8, !dbg !6464
  %238 = or i24 %237, 1048576, !dbg !6464
  store i24 %238, i24* %15, align 8, !dbg !6464
  store i8 120, i8* %21, align 1, !dbg !6465
  br label %216, !dbg !6466

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6467
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !6470
  br label %363, !dbg !6471

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6472
  call void @llvm.dbg.value(metadata i32 %242, metadata !6234, metadata !DIExpression()), !dbg !6418
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6473
  call void @llvm.dbg.value(metadata i32 -1, metadata !6218, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i32 %29, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %192, metadata !6219, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %243, metadata !6220, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8 0, metadata !6221, metadata !DIExpression()), !dbg !6292
  %244 = icmp eq i8* %192, null, !dbg !6474
  br i1 %244, label %363, label %245, !dbg !6476, !llvm.loop !6288

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6445
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6292
  call void @llvm.dbg.value(metadata i32 0, metadata !6240, metadata !DIExpression()), !dbg !6292
  %250 = zext i8 %249 to i32, !dbg !6477
  %251 = icmp eq i8 %249, 0, !dbg !6479
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  call void @llvm.dbg.value(metadata i32 undef, metadata !6239, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  call void @llvm.dbg.value(metadata i32 undef, metadata !6239, metadata !DIExpression()), !dbg !6292
  %252 = icmp sgt i32 %58, 0, !dbg !6480
  br i1 %252, label %253, label %302, !dbg !6481

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6445
  %255 = icmp eq i24 %254, 0, !dbg !6445
  %256 = ptrtoint i8* %248 to i32, !dbg !6482
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  %257 = ptrtoint i8* %247 to i32, !dbg !6482
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  %258 = xor i1 %251, true, !dbg !6483
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  %259 = sext i1 %258 to i32, !dbg !6483
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  %260 = lshr i24 %246, 19, !dbg !6484
  %261 = and i24 %260, 1, !dbg !6484
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6484
  %263 = zext i24 %262 to i32, !dbg !6484
  %264 = add i32 %257, %259, !dbg !6484
  %265 = add i32 %256, %263, !dbg !6484
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  %266 = and i24 %246, 4194304, !dbg !6485
  %267 = icmp eq i24 %266, 0, !dbg !6485
  %268 = load i32, i32* %16, align 4, !dbg !6487
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6239, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6292
  call void @llvm.dbg.value(metadata i32 undef, metadata !6239, metadata !DIExpression()), !dbg !6292
  %269 = load i32, i32* %17, align 8, !dbg !6488
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6488
  call void @llvm.dbg.value(metadata i32 undef, metadata !6239, metadata !DIExpression()), !dbg !6292
  %271 = add i32 %264, %58, !dbg !6488
  %272 = add i32 %265, %268, !dbg !6488
  %273 = add i32 %272, %270, !dbg !6489
  %274 = sub i32 %271, %273, !dbg !6489
  call void @llvm.dbg.value(metadata i32 %274, metadata !6217, metadata !DIExpression()), !dbg !6292
  %275 = and i24 %246, 4, !dbg !6490
  %276 = icmp eq i24 %275, 0, !dbg !6490
  br i1 %276, label %277, label %302, !dbg !6491

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6241, metadata !DIExpression()), !dbg !6492
  %278 = and i24 %246, 64, !dbg !6493
  %279 = icmp eq i24 %278, 0, !dbg !6493
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6494
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6494
  %282 = select i1 %279, i32 32, i32 48, !dbg !6494
  br i1 %280, label %287, label %283, !dbg !6494

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !6495
  call void @llvm.dbg.value(metadata i32 %284, metadata !6246, metadata !DIExpression()), !dbg !6496
  %285 = icmp slt i32 %284, 0, !dbg !6497
  %286 = add i32 %29, 1, !dbg !6495
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6292
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %290, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8 undef, metadata !6241, metadata !DIExpression()), !dbg !6492
  call void @llvm.dbg.value(metadata i8 %288, metadata !6221, metadata !DIExpression()), !dbg !6292
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6499
  %292 = add i32 %291, -1, !dbg !6499
  br label %293, !dbg !6499

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6500
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %295, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %294, metadata !6217, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i32 %294, metadata !6217, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6292
  %296 = icmp sgt i32 %294, 0, !dbg !6501
  br i1 %296, label %297, label %302, !dbg !6499

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6502
  call void @llvm.dbg.value(metadata i32 %298, metadata !6217, metadata !DIExpression()), !dbg !6292
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !6503
  call void @llvm.dbg.value(metadata i32 %299, metadata !6252, metadata !DIExpression()), !dbg !6504
  %300 = icmp slt i32 %299, 0, !dbg !6505
  %301 = add i32 %295, 1, !dbg !6503
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %300, label %361, label %293, !llvm.loop !6507

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6292
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6292
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %305, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %304, metadata !6217, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8 %303, metadata !6221, metadata !DIExpression()), !dbg !6292
  %306 = icmp eq i8 %303, 0, !dbg !6509
  br i1 %306, label %312, label %307, !dbg !6510

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6511
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !6512
  call void @llvm.dbg.value(metadata i32 %309, metadata !6255, metadata !DIExpression()), !dbg !6513
  %310 = icmp slt i32 %309, 0, !dbg !6514
  %311 = add i32 %305, 1, !dbg !6512
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %313, metadata !6158, metadata !DIExpression()), !dbg !6278
  %314 = lshr i24 %246, 20, !dbg !6516
  %315 = lshr i24 %246, 19, !dbg !6517
  %316 = or i24 %314, %315, !dbg !6518
  %317 = and i24 %316, 1, !dbg !6518
  %318 = icmp eq i24 %317, 0, !dbg !6518
  br i1 %318, label %323, label %319, !dbg !6519

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6520
  call void @llvm.dbg.value(metadata i32 %320, metadata !6259, metadata !DIExpression()), !dbg !6521
  %321 = icmp slt i32 %320, 0, !dbg !6522
  %322 = add i32 %313, 1, !dbg !6520
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %324, metadata !6158, metadata !DIExpression()), !dbg !6278
  %325 = and i24 %246, 1048576, !dbg !6524
  %326 = icmp eq i24 %325, 0, !dbg !6524
  br i1 %326, label %333, label %327, !dbg !6525

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6526
  %329 = zext i8 %328 to i32, !dbg !6526
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !6526
  call void @llvm.dbg.value(metadata i32 %330, metadata !6265, metadata !DIExpression()), !dbg !6527
  %331 = icmp slt i32 %330, 0, !dbg !6528
  %332 = add i32 %324, 1, !dbg !6526
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %334, metadata !6158, metadata !DIExpression()), !dbg !6278
  %335 = load i32, i32* %16, align 4, !dbg !6530
  call void @llvm.dbg.value(metadata i32 %335, metadata !6240, metadata !DIExpression()), !dbg !6292
  br label %336, !dbg !6531

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6532
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %338, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %337, metadata !6240, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6292
  %339 = icmp sgt i32 %337, 0, !dbg !6533
  br i1 %339, label %340, label %345, !dbg !6531

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6534
  call void @llvm.dbg.value(metadata i32 %341, metadata !6240, metadata !DIExpression()), !dbg !6292
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6535
  call void @llvm.dbg.value(metadata i32 %342, metadata !6269, metadata !DIExpression()), !dbg !6536
  %343 = icmp slt i32 %342, 0, !dbg !6537
  %344 = add i32 %338, 1, !dbg !6535
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %343, label %361, label %336, !llvm.loop !6539

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6541
  call void @llvm.dbg.value(metadata i32 %346, metadata !6272, metadata !DIExpression()), !dbg !6542
  %347 = icmp slt i32 %346, 0, !dbg !6543
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6541
  call void @llvm.dbg.value(metadata i32 %349, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %304, metadata !6217, metadata !DIExpression()), !dbg !6292
  %350 = icmp sgt i32 %304, 0, !dbg !6545
  br i1 %350, label %351, label %363, !dbg !6546

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6546
  %353 = add i32 %352, %338, !dbg !6546
  br label %354, !dbg !6546

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %355, metadata !6217, metadata !DIExpression()), !dbg !6292
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !6547
  call void @llvm.dbg.value(metadata i32 %356, metadata !6274, metadata !DIExpression()), !dbg !6548
  %357 = icmp slt i32 %356, 0, !dbg !6549
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6551
  call void @llvm.dbg.value(metadata i32 undef, metadata !6158, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %359, metadata !6217, metadata !DIExpression()), !dbg !6292
  %360 = icmp sgt i32 %355, 1, !dbg !6545
  br i1 %360, label %354, label %363, !dbg !6546, !llvm.loop !6552

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6289
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6282
  call void @llvm.dbg.value(metadata i32 %364, metadata !6158, metadata !DIExpression()), !dbg !6278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6289
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6278
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6554
  ret i32 %366, !dbg !6554
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6555 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %1, metadata !6560, metadata !DIExpression()), !dbg !6561
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6562
  store i24 0, i24* %3, align 4, !dbg !6562
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6562
  store i8 0, i8* %4, align 1, !dbg !6562
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6562
  store i32 0, i32* %5, align 4, !dbg !6562
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6562
  store i32 0, i32* %6, align 4, !dbg !6562
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6563
  call void @llvm.dbg.value(metadata i8* %7, metadata !6560, metadata !DIExpression()), !dbg !6561
  %8 = load i8, i8* %7, align 1, !dbg !6564
  %9 = icmp eq i8 %8, 37, !dbg !6566
  br i1 %9, label %10, label %12, !dbg !6567

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6568
  call void @llvm.dbg.value(metadata i8* %11, metadata !6560, metadata !DIExpression()), !dbg !6561
  store i8 37, i8* %4, align 1, !dbg !6570
  br label %18, !dbg !6571

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6572
  call void @llvm.dbg.value(metadata i8* %13, metadata !6560, metadata !DIExpression()), !dbg !6561
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6573
  call void @llvm.dbg.value(metadata i8* %14, metadata !6560, metadata !DIExpression()), !dbg !6561
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6574
  call void @llvm.dbg.value(metadata i8* %15, metadata !6560, metadata !DIExpression()), !dbg !6561
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6575
  call void @llvm.dbg.value(metadata i8* %16, metadata !6560, metadata !DIExpression()), !dbg !6561
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6576
  call void @llvm.dbg.value(metadata i8* %17, metadata !6560, metadata !DIExpression()), !dbg !6561
  br label %18, !dbg !6577

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6561
  ret i8* %19, !dbg !6578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6579 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6583, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i8* %1, metadata !6584, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i8* %2, metadata !6585, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i8* %3, metadata !6586, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 0, metadata !6587, metadata !DIExpression()), !dbg !6590
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6591

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6592
  call void @llvm.dbg.value(metadata i32 %9, metadata !6587, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i8* %8, metadata !6585, metadata !DIExpression()), !dbg !6590
  %10 = icmp ult i8* %8, %3, !dbg !6593
  br i1 %10, label %11, label %13, !dbg !6594

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6595
  br label %17, !dbg !6594

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6596

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6597
  %16 = icmp eq i8 %15, 0, !dbg !6596
  br i1 %16, label %24, label %17, !dbg !6591

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6595
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6598
  call void @llvm.dbg.value(metadata i8* %19, metadata !6585, metadata !DIExpression()), !dbg !6590
  %20 = zext i8 %18 to i32, !dbg !6599
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !6600
  call void @llvm.dbg.value(metadata i32 %21, metadata !6588, metadata !DIExpression()), !dbg !6601
  %22 = icmp slt i32 %21, 0, !dbg !6602
  %23 = add i32 %9, 1, !dbg !6604
  call void @llvm.dbg.value(metadata i32 undef, metadata !6587, metadata !DIExpression()), !dbg !6590
  br i1 %22, label %24, label %7, !llvm.loop !6605

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6590
  ret i32 %25, !dbg !6607
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6608 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6612, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6613, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i8* %2, metadata !6614, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i8* %3, metadata !6615, metadata !DIExpression()), !dbg !6622
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6623
  %6 = load i8, i8* %5, align 1, !dbg !6623
  %7 = zext i8 %6 to i32, !dbg !6624
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !6625
  %9 = icmp eq i32 %8, 0, !dbg !6625
  call void @llvm.dbg.value(metadata i1 %9, metadata !6616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6622
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !6626
  call void @llvm.dbg.value(metadata i32 %10, metadata !6617, metadata !DIExpression()), !dbg !6622
  %11 = ptrtoint i8* %3 to i32, !dbg !6627
  %12 = ptrtoint i8* %2 to i32, !dbg !6627
  %13 = sub i32 %11, %12, !dbg !6627
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6628
  call void @llvm.dbg.value(metadata i8* %14, metadata !6619, metadata !DIExpression()), !dbg !6622
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6629

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6622
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6612, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i8* %18, metadata !6619, metadata !DIExpression()), !dbg !6622
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6630
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6631
  call void @llvm.dbg.value(metadata i32 %25, metadata !6620, metadata !DIExpression()), !dbg !6632
  %26 = icmp ult i32 %25, 10, !dbg !6633
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6634
  %28 = add i32 %27, %25, !dbg !6632
  %29 = trunc i32 %28 to i8, !dbg !6634
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6635
  call void @llvm.dbg.value(metadata i8* %30, metadata !6619, metadata !DIExpression()), !dbg !6622
  store i8 %29, i8* %30, align 1, !dbg !6636
  call void @llvm.dbg.value(metadata i64 %22, metadata !6612, metadata !DIExpression()), !dbg !6622
  %31 = icmp uge i64 %19, %15, !dbg !6637
  %32 = icmp ugt i8* %30, %2, !dbg !6638
  %33 = and i1 %31, %32, !dbg !6638
  br i1 %33, label %17, label %34, !dbg !6639, !llvm.loop !6640

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6642
  %36 = load i24, i24* %35, align 4, !dbg !6642
  %37 = and i24 %36, 32, !dbg !6642
  %38 = icmp eq i24 %37, 0, !dbg !6642
  br i1 %38, label %44, label %39, !dbg !6644

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6645

40:                                               ; preds = %39
  br label %41, !dbg !6647

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6651
  store i24 %43, i24* %35, align 4, !dbg !6651
  br label %44, !dbg !6652

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6653 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6659, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i8* %1, metadata !6660, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32 %2, metadata !6661, metadata !DIExpression()), !dbg !6662
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6663
  %5 = load i24, i24* %4, align 4, !dbg !6663
  %6 = lshr i24 %5, 11, !dbg !6663
  %7 = and i24 %6, 15, !dbg !6663
  %8 = zext i24 %7 to i32, !dbg !6663
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6664

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6665
  store i32 %2, i32* %10, align 4, !dbg !6667
  br label %28, !dbg !6668

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6669
  store i8 %12, i8* %1, align 1, !dbg !6670
  br label %28, !dbg !6671

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6672
  %15 = bitcast i8* %1 to i16*, !dbg !6673
  store i16 %14, i16* %15, align 2, !dbg !6674
  br label %28, !dbg !6675

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6676
  store i32 %2, i32* %17, align 4, !dbg !6677
  br label %28, !dbg !6678

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6679
  %20 = bitcast i8* %1 to i64*, !dbg !6680
  store i64 %19, i64* %20, align 8, !dbg !6681
  br label %28, !dbg !6682

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6683
  %23 = bitcast i8* %1 to i64*, !dbg !6684
  store i64 %22, i64* %23, align 8, !dbg !6685
  br label %28, !dbg !6686

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6687
  store i32 %2, i32* %25, align 4, !dbg !6688
  br label %28, !dbg !6689

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6690
  store i32 %2, i32* %27, align 4, !dbg !6691
  br label %28, !dbg !6692

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6693
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !6694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6697, metadata !DIExpression()), !dbg !6698
  %2 = add i32 %0, -65, !dbg !6699
  %3 = icmp ult i32 %2, 26, !dbg !6700
  %4 = zext i1 %3 to i32, !dbg !6700
  ret i32 %4, !dbg !6701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !6702 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6706, metadata !DIExpression()), !dbg !6707
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6708

2:                                                ; preds = %1
  br label %4, !dbg !6709

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6711

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6712
  ret i32 %5, !dbg !6713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6714 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6716, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8* %1, metadata !6717, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8 1, metadata !6718, metadata !DIExpression()), !dbg !6719
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6720

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6718, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8* %5, metadata !6717, metadata !DIExpression()), !dbg !6719
  %6 = load i8, i8* %5, align 1, !dbg !6721
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6723

7:                                                ; preds = %4
  br label %11, !dbg !6724

8:                                                ; preds = %4
  br label %11, !dbg !6726

9:                                                ; preds = %4
  br label %11, !dbg !6727

10:                                               ; preds = %4
  br label %11, !dbg !6728

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6729
  %14 = or i24 %13, %12, !dbg !6729
  store i24 %14, i24* %3, align 4, !dbg !6729
  call void @llvm.dbg.value(metadata i8 poison, metadata !6718, metadata !DIExpression()), !dbg !6719
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6717, metadata !DIExpression()), !dbg !6719
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6718, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i8* %15, metadata !6717, metadata !DIExpression()), !dbg !6719
  %17 = load i24, i24* %3, align 4, !dbg !6730
  %18 = and i24 %17, 68, !dbg !6732
  %19 = icmp eq i24 %18, 68, !dbg !6732
  br i1 %19, label %20, label %22, !dbg !6732

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6733
  store i24 %21, i24* %3, align 4, !dbg !6733
  br label %22, !dbg !6735

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6736
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6737 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6739, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i8* %1, metadata !6740, metadata !DIExpression()), !dbg !6743
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6744
  %5 = load i24, i24* %4, align 4, !dbg !6745
  %6 = or i24 %5, 128, !dbg !6745
  store i24 %6, i24* %4, align 4, !dbg !6745
  call void @llvm.dbg.value(metadata i8* %1, metadata !6740, metadata !DIExpression()), !dbg !6743
  %7 = load i8, i8* %1, align 1, !dbg !6746
  %8 = icmp eq i8 %7, 42, !dbg !6748
  br i1 %8, label %9, label %12, !dbg !6749

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6750
  store i24 %10, i24* %4, align 4, !dbg !6750
  call void @llvm.dbg.value(metadata i8* %1, metadata !6740, metadata !DIExpression()), !dbg !6743
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6752
  call void @llvm.dbg.value(metadata i8* %11, metadata !6740, metadata !DIExpression()), !dbg !6743
  store i8* %11, i8** %3, align 4, !dbg !6752
  br label %29, !dbg !6753

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6741, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i8** %3, metadata !6740, metadata !DIExpression(DW_OP_deref)), !dbg !6743
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6754
  call void @llvm.dbg.value(metadata i32 %13, metadata !6742, metadata !DIExpression()), !dbg !6743
  %14 = load i8*, i8** %3, align 4, !dbg !6755
  call void @llvm.dbg.value(metadata i8* %14, metadata !6740, metadata !DIExpression()), !dbg !6743
  %15 = icmp eq i8* %14, %1, !dbg !6757
  br i1 %15, label %29, label %16, !dbg !6758

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6759
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6761
  store i32 %13, i32* %18, align 4, !dbg !6762
  %19 = lshr i32 %13, 31, !dbg !6763
  %20 = lshr i24 %17, 1, !dbg !6764
  %21 = and i24 %20, 1, !dbg !6764
  %22 = zext i24 %21 to i32, !dbg !6764
  %23 = or i32 %19, %22, !dbg !6764
  %24 = trunc i32 %23 to i24, !dbg !6764
  %25 = shl nuw nsw i24 %24, 1, !dbg !6764
  %26 = and i24 %17, -131, !dbg !6764
  %27 = or i24 %26, 128, !dbg !6764
  %28 = or i24 %25, %27, !dbg !6764
  store i24 %28, i24* %4, align 4, !dbg !6764
  br label %29, !dbg !6765

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6743
  ret i8* %30, !dbg !6766
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6767 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6769, metadata !DIExpression()), !dbg !6772
  call void @llvm.dbg.value(metadata i8* %1, metadata !6770, metadata !DIExpression()), !dbg !6772
  %4 = load i8, i8* %1, align 1, !dbg !6773
  %5 = icmp eq i8 %4, 46, !dbg !6774
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6775
  %7 = load i24, i24* %6, align 4, !dbg !6776
  %8 = select i1 %5, i24 512, i24 0, !dbg !6776
  %9 = and i24 %7, -513, !dbg !6776
  %10 = or i24 %9, %8, !dbg !6776
  store i24 %10, i24* %6, align 4, !dbg !6776
  br i1 %5, label %11, label %32, !dbg !6777

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6770, metadata !DIExpression()), !dbg !6772
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6778
  call void @llvm.dbg.value(metadata i8* %12, metadata !6770, metadata !DIExpression()), !dbg !6772
  store i8* %12, i8** %3, align 4, !dbg !6778
  %13 = load i8, i8* %12, align 1, !dbg !6779
  %14 = icmp eq i8 %13, 42, !dbg !6781
  br i1 %14, label %15, label %18, !dbg !6782

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6783
  store i24 %16, i24* %6, align 4, !dbg !6783
  call void @llvm.dbg.value(metadata i8* %12, metadata !6770, metadata !DIExpression()), !dbg !6772
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6785
  call void @llvm.dbg.value(metadata i8* %17, metadata !6770, metadata !DIExpression()), !dbg !6772
  store i8* %17, i8** %3, align 4, !dbg !6785
  br label %32, !dbg !6786

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6770, metadata !DIExpression(DW_OP_deref)), !dbg !6772
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6787
  call void @llvm.dbg.value(metadata i32 %19, metadata !6771, metadata !DIExpression()), !dbg !6772
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6788
  store i32 %19, i32* %20, align 4, !dbg !6789
  %21 = lshr i32 %19, 31, !dbg !6790
  %22 = load i24, i24* %6, align 4, !dbg !6791
  %23 = lshr i24 %22, 1, !dbg !6791
  %24 = and i24 %23, 1, !dbg !6791
  %25 = zext i24 %24 to i32, !dbg !6791
  %26 = or i32 %21, %25, !dbg !6791
  %27 = trunc i32 %26 to i24, !dbg !6791
  %28 = shl nuw nsw i24 %27, 1, !dbg !6791
  %29 = and i24 %22, -3, !dbg !6791
  %30 = or i24 %28, %29, !dbg !6791
  store i24 %30, i24* %6, align 4, !dbg !6791
  %31 = load i8*, i8** %3, align 4, !dbg !6792
  call void @llvm.dbg.value(metadata i8* %31, metadata !6770, metadata !DIExpression()), !dbg !6772
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6772
  ret i8* %33, !dbg !6793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6794 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6796, metadata !DIExpression()), !dbg !6798
  call void @llvm.dbg.value(metadata i8* %1, metadata !6797, metadata !DIExpression()), !dbg !6798
  %3 = load i8, i8* %1, align 1, !dbg !6799
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6800

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6801
  call void @llvm.dbg.value(metadata i8* %5, metadata !6797, metadata !DIExpression()), !dbg !6798
  %6 = load i8, i8* %5, align 1, !dbg !6804
  %7 = icmp eq i8 %6, 104, !dbg !6805
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6806
  %9 = load i24, i24* %8, align 4, !dbg !6806
  %10 = and i24 %9, -30721, !dbg !6806
  br i1 %7, label %11, label %14, !dbg !6807

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6808
  store i24 %12, i24* %8, align 4, !dbg !6808
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6810
  call void @llvm.dbg.value(metadata i8* %13, metadata !6797, metadata !DIExpression()), !dbg !6798
  br label %56, !dbg !6811

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6812
  store i24 %15, i24* %8, align 4, !dbg !6812
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6814
  call void @llvm.dbg.value(metadata i8* %17, metadata !6797, metadata !DIExpression()), !dbg !6798
  %18 = load i8, i8* %17, align 1, !dbg !6816
  %19 = icmp eq i8 %18, 108, !dbg !6817
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6818
  %21 = load i24, i24* %20, align 4, !dbg !6818
  %22 = and i24 %21, -30721, !dbg !6818
  br i1 %19, label %23, label %26, !dbg !6819

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6820
  store i24 %24, i24* %20, align 4, !dbg !6820
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6822
  call void @llvm.dbg.value(metadata i8* %25, metadata !6797, metadata !DIExpression()), !dbg !6798
  br label %56, !dbg !6823

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6824
  store i24 %27, i24* %20, align 4, !dbg !6824
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6826
  %30 = load i24, i24* %29, align 4, !dbg !6827
  %31 = and i24 %30, -30721, !dbg !6827
  %32 = or i24 %31, 10240, !dbg !6827
  store i24 %32, i24* %29, align 4, !dbg !6827
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6828
  call void @llvm.dbg.value(metadata i8* %33, metadata !6797, metadata !DIExpression()), !dbg !6798
  br label %56, !dbg !6829

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6830
  %36 = load i24, i24* %35, align 4, !dbg !6831
  %37 = and i24 %36, -30721, !dbg !6831
  %38 = or i24 %37, 12288, !dbg !6831
  store i24 %38, i24* %35, align 4, !dbg !6831
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6832
  call void @llvm.dbg.value(metadata i8* %39, metadata !6797, metadata !DIExpression()), !dbg !6798
  br label %56, !dbg !6833

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6834
  %42 = load i24, i24* %41, align 4, !dbg !6835
  %43 = and i24 %42, -30721, !dbg !6835
  %44 = or i24 %43, 14336, !dbg !6835
  store i24 %44, i24* %41, align 4, !dbg !6835
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6836
  call void @llvm.dbg.value(metadata i8* %45, metadata !6797, metadata !DIExpression()), !dbg !6798
  br label %56, !dbg !6837

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6838
  %48 = load i24, i24* %47, align 4, !dbg !6839
  %49 = and i24 %48, -30723, !dbg !6839
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6840
  call void @llvm.dbg.value(metadata i8* %50, metadata !6797, metadata !DIExpression()), !dbg !6798
  %51 = or i24 %49, 16386, !dbg !6841
  store i24 %51, i24* %47, align 4, !dbg !6841
  br label %56, !dbg !6842

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6843
  %54 = load i24, i24* %53, align 4, !dbg !6844
  %55 = and i24 %54, -30721, !dbg !6844
  store i24 %55, i24* %53, align 4, !dbg !6844
  br label %56, !dbg !6845

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6797, metadata !DIExpression()), !dbg !6798
  ret i8* %57, !dbg !6846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6847 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6849, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i8* %1, metadata !6850, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i8 0, metadata !6851, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i8* %1, metadata !6850, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6854
  %3 = load i8, i8* %1, align 1, !dbg !6855
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6856
  store i8 %3, i8* %4, align 1, !dbg !6857
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6858

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6859

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6860
  %9 = load i24, i24* %8, align 4, !dbg !6860
  %10 = and i24 %9, -458753, !dbg !6860
  %11 = or i24 %10, %7, !dbg !6860
  call void @llvm.dbg.label(metadata !6852), !dbg !6861
  %12 = and i24 %9, 30720, !dbg !6862
  %13 = icmp eq i24 %12, 16384, !dbg !6862
  %14 = zext i1 %13 to i24, !dbg !6864
  %15 = or i24 %11, %14, !dbg !6864
  %16 = icmp eq i8 %3, 99, !dbg !6865
  br i1 %16, label %17, label %43, !dbg !6867

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6868
  %19 = icmp ne i24 %18, 0, !dbg !6868
  call void @llvm.dbg.value(metadata i1 %19, metadata !6851, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6854
  br label %43, !dbg !6870

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6871
  %22 = load i24, i24* %21, align 4, !dbg !6872
  %23 = and i24 %22, -458753, !dbg !6872
  %24 = or i24 %23, 262144, !dbg !6872
  call void @llvm.dbg.value(metadata i8 1, metadata !6851, metadata !DIExpression()), !dbg !6854
  br label %43, !dbg !6873

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6876
  %27 = load i24, i24* %26, align 4, !dbg !6877
  %28 = and i24 %27, -458753, !dbg !6877
  %29 = or i24 %28, 196608, !dbg !6877
  %30 = and i24 %27, 30720, !dbg !6878
  %31 = icmp eq i24 %30, 16384, !dbg !6878
  br label %43, !dbg !6880

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6881
  %34 = load i24, i24* %33, align 4, !dbg !6882
  %35 = and i24 %34, -458753, !dbg !6882
  %36 = or i24 %35, 196608, !dbg !6882
  %37 = and i24 %34, 30720, !dbg !6883
  %38 = icmp ne i24 %37, 0, !dbg !6883
  br label %43, !dbg !6885

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6886
  %41 = load i24, i24* %40, align 4, !dbg !6887
  %42 = or i24 %41, 1, !dbg !6887
  br label %43, !dbg !6888

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6889
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6890
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6891
  call void @llvm.dbg.value(metadata i8* %48, metadata !6850, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i8 poison, metadata !6851, metadata !DIExpression()), !dbg !6854
  %49 = lshr i24 %44, 1, !dbg !6889
  %50 = and i24 %49, 1, !dbg !6889
  %51 = zext i24 %50 to i32, !dbg !6889
  %52 = or i32 %51, %47, !dbg !6889
  %53 = trunc i32 %52 to i24, !dbg !6889
  %54 = shl nuw nsw i24 %53, 1, !dbg !6889
  %55 = and i24 %44, -3, !dbg !6889
  %56 = or i24 %54, %55, !dbg !6889
  store i24 %56, i24* %46, align 4, !dbg !6889
  ret i8* %48, !dbg !6892
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6893 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6897, metadata !DIExpression()), !dbg !6900
  %2 = load i8*, i8** %0, align 4, !dbg !6901
  call void @llvm.dbg.value(metadata i8* %2, metadata !6898, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6900
  %3 = load i8, i8* %2, align 1, !dbg !6902
  %4 = zext i8 %3 to i32, !dbg !6903
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !6904
  %6 = icmp eq i32 %5, 0, !dbg !6905
  br i1 %6, label %19, label %7, !dbg !6905

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6899, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i8* %10, metadata !6898, metadata !DIExpression()), !dbg !6900
  %11 = mul i32 %9, 10, !dbg !6906
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6908
  call void @llvm.dbg.value(metadata i8* %12, metadata !6898, metadata !DIExpression()), !dbg !6900
  %13 = add i32 %11, -48, !dbg !6909
  %14 = add i32 %13, %8, !dbg !6910
  call void @llvm.dbg.value(metadata i32 %14, metadata !6899, metadata !DIExpression()), !dbg !6900
  %15 = load i8, i8* %12, align 1, !dbg !6902
  %16 = zext i8 %15 to i32, !dbg !6903
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !6904
  %18 = icmp eq i32 %17, 0, !dbg !6905
  br i1 %18, label %19, label %7, !dbg !6905, !llvm.loop !6911

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6900
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6900
  store i8* %20, i8** %0, align 4, !dbg !6913
  ret i32 %21, !dbg !6914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6917, metadata !DIExpression()), !dbg !6918
  %2 = add i32 %0, -48, !dbg !6919
  %3 = icmp ult i32 %2, 10, !dbg !6920
  %4 = zext i1 %3 to i32, !dbg !6920
  ret i32 %4, !dbg !6921
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6922 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6927, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 %1, metadata !6928, metadata !DIExpression()), !dbg !6929
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !6930, !srcloc !6932
  ret void, !dbg !6933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6934 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6936, metadata !DIExpression()), !dbg !6944
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6945
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6937, metadata !DIExpression()), !dbg !6946
  call void @llvm.va_start(i8* nonnull %3), !dbg !6947
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6948
  %5 = load i32, i32* %4, align 4, !dbg !6948
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6948
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !6948
  call void @llvm.va_end(i8* nonnull %3), !dbg !6949
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6950
  ret void, !dbg !6950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6951 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #25, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #25, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #25, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !7205, !srcloc !7206
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !7207, !srcloc !7208
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !7209, !srcloc !7210
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !7211, !srcloc !7212
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !7213, !srcloc !7214
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !7215, !srcloc !7216
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !7217, !srcloc !7218
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !7219, !srcloc !7220
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !7221, !srcloc !7222
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !7223, !srcloc !7224
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !7225, !srcloc !7226
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !7227, !srcloc !7228
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !7229, !srcloc !7230
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !7231, !srcloc !7232
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !7233, !srcloc !7234
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !7235, !srcloc !7236
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !7237, !srcloc !7238
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !7239, !srcloc !7240
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !7241, !srcloc !7242
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !7243, !srcloc !7244
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !7245, !srcloc !7246
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !7247, !srcloc !7248
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !7249, !srcloc !7250
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !7251, !srcloc !7252
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !7253, !srcloc !7254
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !7255, !srcloc !7256
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !7257, !srcloc !7258
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !7259, !srcloc !7260
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7261, !srcloc !7262
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !7263, !srcloc !7264
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !7265, !srcloc !7266
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !7267, !srcloc !7268
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !7269, !srcloc !7270
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !7271, !srcloc !7272
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !7273, !srcloc !7274
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !7275, !srcloc !7276
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !7277, !srcloc !7278
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !7279, !srcloc !7280
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !7281, !srcloc !7282
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !7283, !srcloc !7284
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7285, !srcloc !7286
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !7287, !srcloc !7288
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !7289, !srcloc !7290
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !7291, !srcloc !7292
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !7293, !srcloc !7294
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !7295, !srcloc !7296
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !7299, !srcloc !7300
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !7301, !srcloc !7302
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !7303, !srcloc !7304
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !7305, !srcloc !7306
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !7307, !srcloc !7308
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !7309, !srcloc !7310
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !7311, !srcloc !7312
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !7313, !srcloc !7314
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !7315, !srcloc !7316
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !7317, !srcloc !7318
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !7319, !srcloc !7320
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !7321, !srcloc !7322
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !7323, !srcloc !7324
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !7325, !srcloc !7326
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !7327, !srcloc !7328
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !7329, !srcloc !7330
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !7411, !srcloc !7412
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !7413, !srcloc !7414
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !7415, !srcloc !7416
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !7417, !srcloc !7418
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !7419, !srcloc !7420
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !7421, !srcloc !7422
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !7423, !srcloc !7424
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !7425, !srcloc !7426
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !7427, !srcloc !7428
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !7429, !srcloc !7430
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !7431, !srcloc !7432
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !7433, !srcloc !7434
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !7435, !srcloc !7436
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !7437, !srcloc !7438
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !7439, !srcloc !7440
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7441, !srcloc !7442
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !7443, !srcloc !7444
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !7445, !srcloc !7446
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !7447, !srcloc !7448
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !7449, !srcloc !7450
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7451, !srcloc !7452
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !7453, !srcloc !7454
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !7455, !srcloc !7456
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !7457, !srcloc !7458
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7459, !srcloc !7460
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !7461, !srcloc !7462
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !7463, !srcloc !7464
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !7465, !srcloc !7466
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !7467, !srcloc !7468
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !7469, !srcloc !7470
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !7471, !srcloc !7472
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !7473, !srcloc !7474
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !7475, !srcloc !7476
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !7477, !srcloc !7478
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !7479, !srcloc !7480
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !7481, !srcloc !7482
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !7483, !srcloc !7484
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !7485, !srcloc !7486
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !7487, !srcloc !7488
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !7489, !srcloc !7490
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !7491, !srcloc !7492
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !7493, !srcloc !7494
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !7495, !srcloc !7496
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7497, !srcloc !7498
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !7499, !srcloc !7500
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !7501, !srcloc !7502
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !7503, !srcloc !7504
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !7505, !srcloc !7506
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !7507, !srcloc !7508
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !7509, !srcloc !7510
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !7511, !srcloc !7512
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !7513, !srcloc !7514
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !7515, !srcloc !7516
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !7517, !srcloc !7518
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !7519, !srcloc !7520
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !7521, !srcloc !7522
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !7523, !srcloc !7524
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !7525, !srcloc !7526
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !7527, !srcloc !7528
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !7529, !srcloc !7530
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !7531, !srcloc !7532
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !7533, !srcloc !7534
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !7535, !srcloc !7536
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #25, !dbg !7537, !srcloc !7538
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !7539, !srcloc !7540
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_WRN\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_WRN,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_WRN,%object", ""() #25, !dbg !7541, !srcloc !7542
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,2\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !7543, !srcloc !7544
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !7545, !srcloc !7546
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7547, !srcloc !7548
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !7549, !srcloc !7550
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7551, !srcloc !7552
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7553, !srcloc !7554
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !7555, !srcloc !7556
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !7557, !srcloc !7558
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !7559, !srcloc !7560
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !7561, !srcloc !7562
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !7563, !srcloc !7564
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !7565, !srcloc !7566
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !7567, !srcloc !7568
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !7569, !srcloc !7570
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !7571, !srcloc !7572
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !7573, !srcloc !7574
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !7575, !srcloc !7576
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !7577, !srcloc !7578
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !7579, !srcloc !7580
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !7581, !srcloc !7582
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !7583, !srcloc !7584
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !7585, !srcloc !7586
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !7587, !srcloc !7588
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !7589, !srcloc !7590
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !7591, !srcloc !7592
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !7593, !srcloc !7594
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !7595, !srcloc !7596
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !7597, !srcloc !7598
  ret void, !dbg !7599
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7600 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7602, metadata !DIExpression()), !dbg !7604
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !7605
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !7606
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !7607, !srcloc !7616
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7607
  call void @llvm.dbg.value(metadata i32 %3, metadata !7613, metadata !DIExpression()) #25, !dbg !7617
  call void @llvm.dbg.value(metadata i32 undef, metadata !7614, metadata !DIExpression()) #25, !dbg !7617
  call void @llvm.dbg.value(metadata i32 %3, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 %3, metadata !7618, metadata !DIExpression()) #25, !dbg !7623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7625, !srcloc !7626
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7627
  ret i32 0, !dbg !7628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !7629 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7631
  %2 = or i32 %1, 512, !dbg !7631
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7631
  ret void, !dbg !7632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !7633 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7634
  %2 = or i32 %1, 1024, !dbg !7634
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7634
  ret void, !dbg !7635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !7636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7638, metadata !DIExpression()), !dbg !7639
  ret i32 0, !dbg !7640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7641 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7644, metadata !DIExpression()), !dbg !7652
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7653
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7653
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7645, metadata !DIExpression()), !dbg !7654
  call void @llvm.va_start(i8* nonnull %3), !dbg !7655
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7656
  %5 = load i32, i32* %4, align 4, !dbg !7656
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7656
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !7656
  call void @llvm.va_end(i8* nonnull %3), !dbg !7657
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7658
  ret void, !dbg !7658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7659 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7664, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i8* %0, metadata !7663, metadata !DIExpression()), !dbg !7665
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #26, !dbg !7666
  ret void, !dbg !7667
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7672, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata i8* %1, metadata !7673, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata i32 %2, metadata !7674, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata i8* %1, metadata !7675, metadata !DIExpression()), !dbg !7676
  %4 = icmp eq i32 %2, 0, !dbg !7677
  br i1 %4, label %14, label %5, !dbg !7678

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !7676
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7678

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7675, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata i32 %10, metadata !7674, metadata !DIExpression()), !dbg !7676
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 noundef %7) #26, !dbg !7679
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !7681
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7682
  call void @llvm.dbg.value(metadata i32 %11, metadata !7674, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata i8* %12, metadata !7675, metadata !DIExpression()), !dbg !7676
  br i1 %13, label %14, label %8, !dbg !7682, !llvm.loop !7683

14:                                               ; preds = %8, %3
  ret void, !dbg !7685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !7686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7691, metadata !DIExpression()), !dbg !7692
  %2 = add i32 %0, -1, !dbg !7693
  %3 = icmp ult i32 %2, 4, !dbg !7693
  %4 = shl i32 %2, 3, !dbg !7693
  %5 = lshr i32 1145657157, %4, !dbg !7693
  %6 = trunc i32 %5 to i8, !dbg !7693
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7693
  ret i8 %7, !dbg !7694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7699, metadata !DIExpression()), !dbg !7710
  call void @llvm.dbg.value(metadata i32 %1, metadata !7700, metadata !DIExpression()), !dbg !7710
  call void @llvm.dbg.value(metadata i32 0, metadata !7701, metadata !DIExpression()), !dbg !7711
  br label %4, !dbg !7712

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.66, i32 0, i32 0)) #26, !dbg !7713
  call void @llvm.dbg.value(metadata i32 0, metadata !7703, metadata !DIExpression()), !dbg !7714
  br label %16, !dbg !7715

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7701, metadata !DIExpression()), !dbg !7711
  %6 = icmp ult i32 %5, %1, !dbg !7716
  br i1 %6, label %7, label %11, !dbg !7720

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7721
  %9 = load i8, i8* %8, align 1, !dbg !7721
  %10 = zext i8 %9 to i32, !dbg !7723
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.67, i32 0, i32 0), i32 noundef %10) #26, !dbg !7724
  br label %12, !dbg !7725

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.68, i32 0, i32 0)) #26, !dbg !7726
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %13, metadata !7701, metadata !DIExpression()), !dbg !7711
  %14 = icmp eq i32 %13, 8, !dbg !7729
  br i1 %14, label %3, label %4, !dbg !7712, !llvm.loop !7730

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.69, i32 0, i32 0)) #26, !dbg !7732
  ret void, !dbg !7733

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7703, metadata !DIExpression()), !dbg !7714
  %18 = icmp ult i32 %17, %1, !dbg !7734
  br i1 %18, label %19, label %26, !dbg !7735

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7736
  %21 = load i8, i8* %20, align 1, !dbg !7736
  call void @llvm.dbg.value(metadata i8 %21, metadata !7705, metadata !DIExpression()), !dbg !7737
  %22 = zext i8 %21 to i32, !dbg !7738
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !7739
  %24 = icmp eq i32 %23, 0, !dbg !7740
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7739
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.70, i32 0, i32 0), i32 noundef %25) #26, !dbg !7741
  br label %27, !dbg !7742

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.71, i32 0, i32 0)) #26, !dbg !7743
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7745
  call void @llvm.dbg.value(metadata i32 %28, metadata !7703, metadata !DIExpression()), !dbg !7714
  %29 = icmp eq i32 %28, 8, !dbg !7746
  br i1 %29, label %15, label %16, !dbg !7715, !llvm.loop !7747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !7749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7751, metadata !DIExpression()), !dbg !7752
  %2 = add i32 %0, -32, !dbg !7753
  %3 = icmp ult i32 %2, 95, !dbg !7753
  %4 = zext i1 %3 to i32, !dbg !7753
  ret i32 %4, !dbg !7754
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7804, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7805, metadata !DIExpression()), !dbg !7806
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7807
  br i1 %3, label %5, label %4, !dbg !7809

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !7810
  br label %5, !dbg !7812

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7815 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7819, metadata !DIExpression()), !dbg !7820
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7821
  %3 = load i32, i32* %2, align 4, !dbg !7821
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7821
  %5 = load i32, i32* %4, align 4, !dbg !7821
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7821
  %7 = load i32, i32* %6, align 4, !dbg !7821
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #26, !dbg !7821
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7826
  %9 = load i32, i32* %8, align 4, !dbg !7826
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7826
  %11 = load i32, i32* %10, align 4, !dbg !7826
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7826
  %13 = load i32, i32* %12, align 4, !dbg !7826
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #26, !dbg !7826
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7831
  %15 = load i32, i32* %14, align 4, !dbg !7831
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.74, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #26, !dbg !7831
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7836
  %17 = load i32, i32* %16, align 4, !dbg !7836
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.75, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !7836
  ret void, !dbg !7841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7842 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7859, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7860, metadata !DIExpression()), !dbg !7862
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7863
  %4 = load i32, i32* %3, align 4, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %4, metadata !7861, metadata !DIExpression()), !dbg !7862
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !7864
  ret void, !dbg !7865
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7866 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7870, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8* %0, metadata !7871, metadata !DIExpression()), !dbg !7873
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7874
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7874
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7872, metadata !DIExpression()), !dbg !7875
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7875
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7876
  %5 = bitcast i8* %4 to i32*, !dbg !7876
  %6 = load i32, i32* %5, align 4, !dbg !7876
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7877
  store i32 %6, i32* %7, align 4, !dbg !7878
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !7879
  unreachable, !dbg !7880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7884, metadata !DIExpression()), !dbg !7885
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !7886
  ret void, !dbg !7887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7892, metadata !DIExpression()), !dbg !7893
  %2 = icmp sgt i32 %0, -1, !dbg !7894
  br i1 %2, label %3, label %8, !dbg !7896

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7897, !srcloc !7899
  %4 = and i32 %0, 31, !dbg !7900
  %5 = shl nuw i32 1, %4, !dbg !7901
  %6 = lshr i32 %0, 5, !dbg !7902
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7903
  store volatile i32 %5, i32* %7, align 4, !dbg !7904
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7905, !srcloc !7906
  br label %8, !dbg !7907

8:                                                ; preds = %3, %1
  ret void, !dbg !7908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7911, metadata !DIExpression()), !dbg !7912
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !7913
  ret void, !dbg !7914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7917, metadata !DIExpression()), !dbg !7918
  %2 = icmp sgt i32 %0, -1, !dbg !7919
  br i1 %2, label %3, label %8, !dbg !7921

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7922
  %5 = shl nuw i32 1, %4, !dbg !7924
  %6 = lshr i32 %0, 5, !dbg !7925
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7926
  store volatile i32 %5, i32* %7, align 4, !dbg !7927
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7928, !srcloc !7932
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7933, !srcloc !7936
  br label %8, !dbg !7937

8:                                                ; preds = %3, %1
  ret void, !dbg !7938
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7943, metadata !DIExpression()), !dbg !7944
  %2 = lshr i32 %0, 5, !dbg !7945
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7946
  %4 = load volatile i32, i32* %3, align 4, !dbg !7946
  %5 = and i32 %0, 31, !dbg !7947
  %6 = shl nuw i32 1, %5, !dbg !7947
  %7 = and i32 %4, %6, !dbg !7948
  ret i32 %7, !dbg !7949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7954, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %1, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %2, metadata !7956, metadata !DIExpression()), !dbg !7957
  %4 = add i32 %1, 1, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %4, metadata !7955, metadata !DIExpression()), !dbg !7957
  %5 = icmp ult i32 %4, 16, !dbg !7961
  br i1 %5, label %7, label %6, !dbg !7964

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 94) #26, !dbg !7965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !7965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 94) #26, !dbg !7965
  unreachable, !dbg !7965

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !7967
  ret void, !dbg !7968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 %1, metadata !7974, metadata !DIExpression()), !dbg !7975
  %3 = trunc i32 %1 to i8, !dbg !7976
  %4 = shl i8 %3, 4, !dbg !7976
  %5 = and i32 %0, 15, !dbg !7978
  %6 = add nsw i32 %5, -4, !dbg !7978
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7978
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7978
  %9 = icmp slt i32 %0, 0, !dbg !7978
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7978
  store volatile i8 %4, i8* %10, align 1, !dbg !7976
  ret void, !dbg !7979
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7982, metadata !DIExpression()), !dbg !7983
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !7984
  ret void, !dbg !7985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7986 {
  tail call void @z_SysNmiOnReset() #26, !dbg !7988
  tail call void @z_arm_int_exit() #26, !dbg !7989
  ret void, !dbg !7990
}

; Function Attrs: optsize
declare !dbg !7991 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7992 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7994 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !7996
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !7997
  tail call void @z_bss_zero() #26, !dbg !7998
  tail call void @z_data_copy() #26, !dbg !7999
  tail call void @z_arm_interrupt_init() #26, !dbg !8000
  tail call void @z_cstart() #29, !dbg !8001
  unreachable, !dbg !8001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8002 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8003
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8004, !srcloc !8007
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8008, !srcloc !8011
  ret void, !dbg !8012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8013 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8014
  %2 = and i32 %1, -15728641, !dbg !8014
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8014
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8015, !srcloc !8022
  call void @llvm.dbg.value(metadata i32 %3, metadata !8020, metadata !DIExpression()) #25, !dbg !8023
  %4 = and i32 %3, -5, !dbg !8024
  call void @llvm.dbg.value(metadata i32 %4, metadata !8025, metadata !DIExpression()) #25, !dbg !8030
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8032, !srcloc !8033
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8034, !srcloc !8011
  ret void, !dbg !8036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8040, metadata !DIExpression()), !dbg !8041
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8042
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8043
  store i32 %0, i32* %3, align 4, !dbg !8044
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8045
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8046
  store i32 %4, i32* %5, align 4, !dbg !8047
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8048
  %7 = or i32 %6, 268435456, !dbg !8048
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8048
  call void @llvm.dbg.value(metadata i32 0, metadata !8049, metadata !DIExpression()) #25, !dbg !8052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8054, !srcloc !8055
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8056
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8057
  %10 = load i32, i32* %9, align 4, !dbg !8057
  ret i32 %10, !dbg !8058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !8059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8171, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8172, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i8* %2, metadata !8173, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8174, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i8* %4, metadata !8175, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i8* %5, metadata !8176, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i8* %6, metadata !8177, metadata !DIExpression()), !dbg !8179
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8180
  call void @llvm.dbg.value(metadata i8* %8, metadata !8178, metadata !DIExpression()), !dbg !8179
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8181
  %10 = bitcast i8* %9 to i32*, !dbg !8181
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8182
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8183
  %12 = bitcast i8* %8 to i32*, !dbg !8184
  store i32 %11, i32* %12, align 4, !dbg !8185
  %13 = ptrtoint i8* %4 to i32, !dbg !8186
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8187
  %15 = bitcast i8* %14 to i32*, !dbg !8187
  store i32 %13, i32* %15, align 4, !dbg !8188
  %16 = ptrtoint i8* %5 to i32, !dbg !8189
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8190
  %18 = bitcast i8* %17 to i32*, !dbg !8190
  store i32 %16, i32* %18, align 4, !dbg !8191
  %19 = ptrtoint i8* %6 to i32, !dbg !8192
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8193
  %21 = bitcast i8* %20 to i32*, !dbg !8193
  store i32 %19, i32* %21, align 4, !dbg !8194
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8195
  %23 = bitcast i8* %22 to i32*, !dbg !8195
  store i32 16777216, i32* %23, align 4, !dbg !8196
  %24 = ptrtoint i8* %8 to i32, !dbg !8197
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8198
  store i32 %24, i32* %25, align 8, !dbg !8199
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8200
  store i32 0, i32* %26, align 4, !dbg !8201
  ret void, !dbg !8202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8208, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i32 %1, metadata !8209, metadata !DIExpression()), !dbg !8214
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8215
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8210, metadata !DIExpression()), !dbg !8214
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8216
  br i1 %4, label %19, label %5, !dbg !8218

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8213, metadata !DIExpression()), !dbg !8214
  %6 = icmp eq i32 %0, -22, !dbg !8219
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8219
  %8 = load i32, i32* %7, align 4, !dbg !8219
  br i1 %6, label %16, label %9, !dbg !8221

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8219
  %11 = icmp ule i32 %10, %0, !dbg !8219
  %12 = icmp ugt i32 %8, %0, !dbg !8219
  %13 = and i1 %12, %11, !dbg !8219
  %14 = icmp ugt i32 %8, %1, !dbg !8219
  %15 = and i1 %14, %13, !dbg !8219
  br i1 %15, label %18, label %19, !dbg !8219

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8219
  br i1 %17, label %18, label %19, !dbg !8221

18:                                               ; preds = %9, %16
  br label %19, !dbg !8222

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8214
  ret i32 %20, !dbg !8224
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !8225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8229, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata i8* %1, metadata !8230, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8231, metadata !DIExpression()), !dbg !8232
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8233
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !8234
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8235, !srcloc !8236
  unreachable, !dbg !8237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8238 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8256, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.value(metadata i32 %1, metadata !8257, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.value(metadata i32 %2, metadata !8258, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8259, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.value(metadata i32 0, metadata !8260, metadata !DIExpression()), !dbg !8266
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8267
  call void @llvm.dbg.value(metadata i32 %8, metadata !8261, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8266
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8268
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8268
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8269
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8269
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8265, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 0, metadata !8271, metadata !DIExpression()) #25, !dbg !8274
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8276, !srcloc !8277
  call void @llvm.dbg.value(metadata i8* %6, metadata !8263, metadata !DIExpression(DW_OP_deref)), !dbg !8266
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !8278
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8264, metadata !DIExpression()), !dbg !8266
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8279
  br i1 %11, label %12, label %13, !dbg !8282

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.83, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.85, i32 0, i32 0)) #26, !dbg !8283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8283
  unreachable, !dbg !8283

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8285
  call void @llvm.dbg.value(metadata i32 %14, metadata !8261, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.value(metadata i8* %5, metadata !8262, metadata !DIExpression(DW_OP_deref)), !dbg !8266
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #27, !dbg !8286
  call void @llvm.dbg.value(metadata i32 %15, metadata !8260, metadata !DIExpression()), !dbg !8266
  %16 = load i8, i8* %5, align 1, !dbg !8287, !range !8289
  call void @llvm.dbg.value(metadata i8 %16, metadata !8262, metadata !DIExpression()), !dbg !8266
  %17 = icmp eq i8 %16, 0, !dbg !8287
  br i1 %17, label %18, label %35, !dbg !8290

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8291
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !8292
  %21 = load i8, i8* %6, align 1, !dbg !8293, !range !8289
  call void @llvm.dbg.value(metadata i8 %21, metadata !8263, metadata !DIExpression()), !dbg !8266
  %22 = icmp eq i8 %21, 0, !dbg !8293
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8295
  %24 = load i32, i32* %23, align 4, !dbg !8295
  br i1 %22, label %30, label %25, !dbg !8296

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8297
  %27 = icmp eq i32 %26, 0, !dbg !8300
  br i1 %27, label %28, label %34, !dbg !8301

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8302
  br label %32, !dbg !8304

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8305
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8295
  br label %34, !dbg !8307

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !8307
  br label %35, !dbg !8308

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8308
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8308
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8308
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8314, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata i32 %1, metadata !8315, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata i32 %2, metadata !8316, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata i8* %3, metadata !8317, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata i8 0, metadata !8318, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8319, metadata !DIExpression()), !dbg !8320
  store i8 0, i8* %3, align 1, !dbg !8321
  %5 = icmp ugt i32 %2, -16777217, !dbg !8322
  br i1 %5, label %6, label %17, !dbg !8324

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8325
  %8 = icmp eq i32 %7, 8, !dbg !8325
  br i1 %8, label %9, label %10, !dbg !8325

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.97, i32 0, i32 0), i32 noundef 69) #26, !dbg !8327
  br label %17, !dbg !8333

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8334
  %12 = icmp eq i32 %11, 0, !dbg !8334
  br i1 %12, label %13, label %14, !dbg !8335

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8319, metadata !DIExpression()), !dbg !8320
  store i8 1, i8* %3, align 1, !dbg !8338
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8320
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8319, metadata !DIExpression()), !dbg !8320
  br label %17, !dbg !8341

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8320
  ret %struct.__esf* %18, !dbg !8342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8343 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8347, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %1, metadata !8348, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8* %2, metadata !8349, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 0, metadata !8350, metadata !DIExpression()), !dbg !8351
  store i8 0, i8* %2, align 1, !dbg !8352
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8353

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !8354
  call void @llvm.dbg.value(metadata i32 %5, metadata !8350, metadata !DIExpression()), !dbg !8351
  br label %12, !dbg !8356

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8357
  call void @llvm.dbg.value(metadata i32 %7, metadata !8350, metadata !DIExpression()), !dbg !8351
  br label %12, !dbg !8358

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8359
  call void @llvm.dbg.value(metadata i32 0, metadata !8350, metadata !DIExpression()), !dbg !8351
  br label %12, !dbg !8360

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !8361
  call void @llvm.dbg.value(metadata i32 0, metadata !8350, metadata !DIExpression()), !dbg !8351
  br label %12, !dbg !8362

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !8363
  br label %12, !dbg !8364

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !8365
  br label %12, !dbg !8366

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8351
  call void @llvm.dbg.value(metadata i32 %13, metadata !8350, metadata !DIExpression()), !dbg !8351
  ret i32 %13, !dbg !8367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8368 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8372, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i8* %1, metadata !8373, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i32 0, metadata !8374, metadata !DIExpression()), !dbg !8375
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.89, i32 0, i32 0), i32 noundef 69) #26, !dbg !8376
  store i8 0, i8* %1, align 1, !dbg !8381
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8382
  %4 = and i32 %3, 2, !dbg !8384
  %5 = icmp eq i32 %4, 0, !dbg !8385
  br i1 %5, label %7, label %6, !dbg !8386

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.90, i32 0, i32 0), i32 noundef 69) #26, !dbg !8387
  br label %38, !dbg !8393

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8394
  %9 = icmp sgt i32 %8, -1, !dbg !8396
  br i1 %9, label %11, label %10, !dbg !8397

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.91, i32 0, i32 0), i32 noundef 69) #26, !dbg !8398
  br label %38, !dbg !8404

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8405
  %13 = and i32 %12, 1073741824, !dbg !8407
  %14 = icmp eq i32 %13, 0, !dbg !8408
  br i1 %14, label %37, label %15, !dbg !8409

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.92, i32 0, i32 0), i32 noundef 69) #26, !dbg !8410
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !8416
  br i1 %16, label %17, label %21, !dbg !8418

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8419
  %19 = load i32, i32* %18, align 4, !dbg !8419
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.93, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #26, !dbg !8419
  %20 = load i32, i32* %18, align 4, !dbg !8425
  call void @llvm.dbg.value(metadata i32 %20, metadata !8374, metadata !DIExpression()), !dbg !8375
  br label %38, !dbg !8426

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8427
  %23 = and i32 %22, 255, !dbg !8429
  %24 = icmp eq i32 %23, 0, !dbg !8430
  br i1 %24, label %27, label %25, !dbg !8431

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8432
  call void @llvm.dbg.value(metadata i32 %26, metadata !8374, metadata !DIExpression()), !dbg !8375
  br label %38, !dbg !8434

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8435
  %29 = and i32 %28, 65280, !dbg !8437
  %30 = icmp eq i32 %29, 0, !dbg !8438
  br i1 %30, label %32, label %31, !dbg !8439

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8440
  call void @llvm.dbg.value(metadata i32 0, metadata !8374, metadata !DIExpression()), !dbg !8375
  br label %38, !dbg !8442

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8443
  %34 = icmp ult i32 %33, 65536, !dbg !8445
  br i1 %34, label %36, label %35, !dbg !8446

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !8447
  call void @llvm.dbg.value(metadata i32 0, metadata !8374, metadata !DIExpression()), !dbg !8375
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 755) #26, !dbg !8449
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.95, i32 0, i32 0)) #26, !dbg !8449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 755) #26, !dbg !8449
  unreachable, !dbg !8449

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 760) #26, !dbg !8454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.96, i32 0, i32 0)) #26, !dbg !8454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 760) #26, !dbg !8454
  unreachable, !dbg !8454

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8375
  call void @llvm.dbg.value(metadata i32 %39, metadata !8374, metadata !DIExpression()), !dbg !8375
  ret i32 %39, !dbg !8459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8460 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8462, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 %1, metadata !8463, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i8* %2, metadata !8464, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 0, metadata !8465, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 -22, metadata !8466, metadata !DIExpression()), !dbg !8475
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.88, i32 0, i32 0), i32 noundef 69) #26, !dbg !8476
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8481
  %5 = and i32 %4, 16, !dbg !8483
  %6 = icmp eq i32 %5, 0, !dbg !8484
  br i1 %6, label %8, label %7, !dbg !8485

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #26, !dbg !8486
  br label %8, !dbg !8492

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8493
  %10 = and i32 %9, 8, !dbg !8495
  %11 = icmp eq i32 %10, 0, !dbg !8496
  br i1 %11, label %13, label %12, !dbg !8497

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8498
  br label %13, !dbg !8504

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8505
  %15 = and i32 %14, 2, !dbg !8506
  %16 = icmp eq i32 %15, 0, !dbg !8507
  br i1 %16, label %27, label %17, !dbg !8508

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #26, !dbg !8509
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8514
  call void @llvm.dbg.value(metadata i32 %18, metadata !8467, metadata !DIExpression()), !dbg !8515
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8516
  %20 = and i32 %19, 128, !dbg !8518
  %21 = icmp eq i32 %20, 0, !dbg !8519
  br i1 %21, label %27, label %22, !dbg !8520

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8466, metadata !DIExpression()), !dbg !8475
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #26, !dbg !8521
  %23 = icmp eq i32 %1, 0, !dbg !8527
  br i1 %23, label %27, label %24, !dbg !8529

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8530
  %26 = and i32 %25, -129, !dbg !8530
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8530
  br label %27, !dbg !8532

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8475
  call void @llvm.dbg.value(metadata i32 %28, metadata !8466, metadata !DIExpression()), !dbg !8475
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8533
  %30 = and i32 %29, 1, !dbg !8535
  %31 = icmp eq i32 %30, 0, !dbg !8536
  br i1 %31, label %33, label %32, !dbg !8537

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #26, !dbg !8538
  br label %33, !dbg !8544

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8545
  %35 = and i32 %34, 32, !dbg !8547
  %36 = icmp eq i32 %35, 0, !dbg !8548
  br i1 %36, label %38, label %37, !dbg !8549

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #26, !dbg !8550
  br label %38, !dbg !8556

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8557
  %40 = and i32 %39, 16, !dbg !8558
  %41 = icmp eq i32 %40, 0, !dbg !8558
  br i1 %41, label %42, label %46, !dbg !8559

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8560
  %44 = and i32 %43, 2, !dbg !8561
  %45 = icmp eq i32 %44, 0, !dbg !8561
  br i1 %45, label %60, label %46, !dbg !8562

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8563
  %48 = and i32 %47, 2048, !dbg !8564
  %49 = icmp eq i32 %48, 0, !dbg !8564
  br i1 %49, label %60, label %50, !dbg !8565

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8566
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #26, !dbg !8567
  call void @llvm.dbg.value(metadata i32 %52, metadata !8470, metadata !DIExpression()), !dbg !8568
  %53 = icmp eq i32 %52, 0, !dbg !8569
  br i1 %53, label %55, label %54, !dbg !8571

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8572, metadata !DIExpression()) #25, !dbg !8575
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8578, !srcloc !8579
  call void @llvm.dbg.value(metadata i32 2, metadata !8465, metadata !DIExpression()), !dbg !8475
  br label %60, !dbg !8580

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8581
  %57 = and i32 %56, 16, !dbg !8581
  %58 = icmp eq i32 %57, 0, !dbg !8581
  br i1 %58, label %60, label %59, !dbg !8585

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 343) #26, !dbg !8586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #26, !dbg !8586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 343) #26, !dbg !8586
  unreachable, !dbg !8586

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8475
  call void @llvm.dbg.value(metadata i32 %61, metadata !8465, metadata !DIExpression()), !dbg !8475
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8588
  %63 = and i32 %62, 32, !dbg !8590
  %64 = icmp eq i32 %63, 0, !dbg !8591
  br i1 %64, label %68, label %65, !dbg !8592

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8593
  %67 = and i32 %66, -8193, !dbg !8593
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8593
  br label %68, !dbg !8595

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8596
  %70 = or i32 %69, 255, !dbg !8596
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8596
  store i8 0, i8* %2, align 1, !dbg !8597
  ret i32 %61, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8599 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8603, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i32 %0, metadata !8604, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i8* %1, metadata !8605, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i32 0, metadata !8606, metadata !DIExpression()), !dbg !8610
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #26, !dbg !8611
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8616
  %4 = and i32 %3, 4096, !dbg !8618
  %5 = icmp eq i32 %4, 0, !dbg !8618
  br i1 %5, label %7, label %6, !dbg !8619

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #26, !dbg !8620
  br label %7, !dbg !8626

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8627
  %9 = and i32 %8, 2048, !dbg !8629
  %10 = icmp eq i32 %9, 0, !dbg !8629
  br i1 %10, label %12, label %11, !dbg !8630

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8631
  br label %12, !dbg !8637

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8638
  %14 = and i32 %13, 512, !dbg !8639
  %15 = icmp eq i32 %14, 0, !dbg !8639
  br i1 %15, label %26, label %16, !dbg !8640

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #26, !dbg !8641
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %17, metadata !8607, metadata !DIExpression()), !dbg !8647
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8648
  %19 = and i32 %18, 32768, !dbg !8650
  %20 = icmp eq i32 %19, 0, !dbg !8651
  br i1 %20, label %26, label %21, !dbg !8652

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !8653
  %22 = icmp eq i32 %0, 0, !dbg !8659
  br i1 %22, label %26, label %23, !dbg !8661

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8662
  %25 = and i32 %24, -32769, !dbg !8662
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8662
  br label %26, !dbg !8664

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8665
  %28 = and i32 %27, 1024, !dbg !8667
  %29 = icmp eq i32 %28, 0, !dbg !8667
  br i1 %29, label %31, label %30, !dbg !8668

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !8669
  br label %31, !dbg !8675

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8676
  %33 = and i32 %32, 256, !dbg !8678
  %34 = icmp eq i32 %33, 0, !dbg !8679
  br i1 %34, label %35, label %39, !dbg !8680

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8681
  %37 = and i32 %36, 8192, !dbg !8683
  %38 = icmp eq i32 %37, 0, !dbg !8683
  br i1 %38, label %41, label %39, !dbg !8684

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #26, !dbg !8685
  br label %41, !dbg !8686

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8686
  %43 = or i32 %42, 65280, !dbg !8686
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8686
  store i8 0, i8* %1, align 1, !dbg !8687
  ret void, !dbg !8688
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8689 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8695, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i32 0, metadata !8696, metadata !DIExpression()), !dbg !8697
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.86, i32 0, i32 0), i32 noundef 69) #26, !dbg !8698
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8703
  %2 = and i32 %1, 33554432, !dbg !8705
  %3 = icmp eq i32 %2, 0, !dbg !8706
  br i1 %3, label %5, label %4, !dbg !8707

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #26, !dbg !8708
  br label %5, !dbg !8714

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8715
  %7 = and i32 %6, 16777216, !dbg !8717
  %8 = icmp eq i32 %7, 0, !dbg !8718
  br i1 %8, label %10, label %9, !dbg !8719

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #26, !dbg !8720
  br label %10, !dbg !8726

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8727
  %12 = and i32 %11, 524288, !dbg !8729
  %13 = icmp eq i32 %12, 0, !dbg !8730
  br i1 %13, label %15, label %14, !dbg !8731

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #26, !dbg !8732
  br label %15, !dbg !8738

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8739
  %17 = and i32 %16, 262144, !dbg !8741
  %18 = icmp eq i32 %17, 0, !dbg !8742
  br i1 %18, label %20, label %19, !dbg !8743

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #26, !dbg !8744
  br label %20, !dbg !8750

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8751
  %22 = and i32 %21, 131072, !dbg !8753
  %23 = icmp eq i32 %22, 0, !dbg !8754
  br i1 %23, label %25, label %24, !dbg !8755

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #26, !dbg !8756
  br label %25, !dbg !8762

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8763
  %27 = and i32 %26, 65536, !dbg !8765
  %28 = icmp eq i32 %27, 0, !dbg !8766
  br i1 %28, label %30, label %29, !dbg !8767

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #26, !dbg !8768
  br label %30, !dbg !8774

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8775
  %32 = or i32 %31, -65536, !dbg !8775
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8775
  ret void, !dbg !8776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8777 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8781, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.value(metadata i8* %0, metadata !8782, metadata !DIExpression()), !dbg !8783
  store i8 0, i8* %0, align 1, !dbg !8784
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #26, !dbg !8785
  ret void, !dbg !8790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8791 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8795, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %0, metadata !8796, metadata !DIExpression()), !dbg !8797
  %2 = icmp slt i32 %0, 16, !dbg !8798
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8798
  %4 = add nsw i32 %0, -16, !dbg !8798
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #26, !dbg !8798
  ret void, !dbg !8803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8804 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8808, metadata !DIExpression()), !dbg !8811
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8812
  %3 = load i32, i32* %2, align 4, !dbg !8812
  %4 = inttoptr i32 %3 to i16*, !dbg !8813
  call void @llvm.dbg.value(metadata i16* %4, metadata !8809, metadata !DIExpression()), !dbg !8811
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8814
  %6 = or i32 %5, 256, !dbg !8814
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8814
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8815, !srcloc !8818
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8819, !srcloc !8822
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8823
  %8 = load i16, i16* %7, align 2, !dbg !8824
  call void @llvm.dbg.value(metadata i16 %8, metadata !8810, metadata !DIExpression()), !dbg !8811
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8825
  %10 = and i32 %9, -257, !dbg !8825
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8825
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8826, !srcloc !8818
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8828, !srcloc !8822
  %11 = icmp eq i16 %8, -8446, !dbg !8830
  ret i1 %11, !dbg !8832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8833 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8834
  %2 = or i32 %1, 16, !dbg !8834
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8834
  ret void, !dbg !8835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8836 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8839, metadata !DIExpression()), !dbg !8840
  br label %1, !dbg !8841

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8839, metadata !DIExpression()), !dbg !8840
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef %2) #27, !dbg !8843
  %3 = add nuw nsw i32 %2, 1, !dbg !8846
  call void @llvm.dbg.value(metadata i32 %3, metadata !8839, metadata !DIExpression()), !dbg !8840
  %4 = icmp eq i32 %3, 97, !dbg !8847
  br i1 %4, label %5, label %1, !dbg !8841, !llvm.loop !8848

5:                                                ; preds = %1
  ret void, !dbg !8850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.100(i32 noundef %0) unnamed_addr #16 !dbg !8851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 1, metadata !8854, metadata !DIExpression()), !dbg !8855
  %2 = and i32 %0, 15, !dbg !8856
  %3 = add nsw i32 %2, -4, !dbg !8856
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8856
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8856
  %6 = icmp slt i32 %0, 0, !dbg !8856
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8856
  store volatile i8 16, i8* %7, align 1, !dbg !8857
  ret void, !dbg !8859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8860 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8968, metadata !DIExpression()), !dbg !8969
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8970
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8972
  br i1 %3, label %4, label %12, !dbg !8973

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8974, !srcloc !8986
  call void @llvm.dbg.value(metadata i32 %5, metadata !8977, metadata !DIExpression()) #25, !dbg !8987
  %6 = icmp eq i32 %5, 0, !dbg !8988
  br i1 %6, label %12, label %7, !dbg !8989

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8990
  %9 = or i32 %8, 268435456, !dbg !8990
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8990
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8992
  %11 = and i32 %10, -32769, !dbg !8992
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8992
  br label %12, !dbg !8993

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !8994
  ret void, !dbg !8995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8996 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !8997
  ret void, !dbg !8998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !960, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i8 0, metadata !961, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 64, metadata !963, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 undef, metadata !962, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8999
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9000
  %3 = load i32, i32* %2, align 4, !dbg !9000
  call void @llvm.dbg.value(metadata i32 %3, metadata !962, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8999
  %4 = add i32 %3, -64, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %4, metadata !962, metadata !DIExpression()), !dbg !8999
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9003
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9004
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9005
  call void @llvm.dbg.value(metadata i8 1, metadata !961, metadata !DIExpression()), !dbg !8999
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !9006
  ret void, !dbg !9007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9008 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9009
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9010, !srcloc !9013
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9014, !srcloc !9017
  ret void, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9019 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9020, !srcloc !9023
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9024
  ret void, !dbg !9025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9026 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8 %1, metadata !9042, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !9043, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %3, metadata !9044, metadata !DIExpression()), !dbg !9045
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9046
  %6 = icmp eq i32 %5, -22, !dbg !9048
  br i1 %6, label %7, label %9, !dbg !9049

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 283) #26, !dbg !9050
  %8 = zext i8 %1 to i32, !dbg !9050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.112, i32 0, i32 0), i32 noundef %8) #26, !dbg !9050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 283) #26, !dbg !9050
  unreachable, !dbg !9050

9:                                                ; preds = %4
  ret void, !dbg !9055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9056 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9061, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i8 %1, metadata !9062, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 undef, metadata !9063, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i32 undef, metadata !9064, metadata !DIExpression()), !dbg !9066
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9067
  call void @llvm.dbg.value(metadata i8 %3, metadata !9065, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9066
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !9068
  call void @llvm.dbg.value(metadata i32 %4, metadata !9065, metadata !DIExpression()), !dbg !9066
  %5 = trunc i32 %4 to i8, !dbg !9069
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9070
  ret i32 %4, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9072 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9076, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i8 %1, metadata !9077, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i8 %2, metadata !9078, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i1 %3, metadata !9079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9082
  %5 = zext i8 %2 to i32, !dbg !9083
  call void @llvm.dbg.value(metadata i32 %5, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i32 0, metadata !9080, metadata !DIExpression()), !dbg !9082
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i32 0, metadata !9080, metadata !DIExpression()), !dbg !9082
  %7 = icmp eq i8 %1, 0, !dbg !9084
  br i1 %7, label %30, label %8, !dbg !9087

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i32 %10, metadata !9080, metadata !DIExpression()), !dbg !9082
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9088
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9091
  %13 = load i32, i32* %12, align 4, !dbg !9091
  %14 = icmp eq i32 %13, 0, !dbg !9092
  br i1 %14, label %26, label %15, !dbg !9093

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9094

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9096
  %18 = icmp eq i32 %17, 0, !dbg !9096
  br i1 %18, label %19, label %20, !dbg !9097

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.113, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #26, !dbg !9098
  br label %30, !dbg !9104

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9105
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9106
  call void @llvm.dbg.value(metadata i32 %22, metadata !9081, metadata !DIExpression()), !dbg !9082
  %23 = icmp eq i32 %22, -22, !dbg !9107
  br i1 %23, label %30, label %24, !dbg !9109

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9110
  call void @llvm.dbg.value(metadata i32 %25, metadata !9081, metadata !DIExpression()), !dbg !9082
  br label %26, !dbg !9111

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9082
  call void @llvm.dbg.value(metadata i32 %27, metadata !9081, metadata !DIExpression()), !dbg !9082
  %28 = add nuw nsw i32 %10, 1, !dbg !9112
  call void @llvm.dbg.value(metadata i32 %28, metadata !9080, metadata !DIExpression()), !dbg !9082
  %29 = icmp eq i32 %28, %6, !dbg !9084
  br i1 %29, label %30, label %8, !dbg !9087, !llvm.loop !9113

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9082
  ret i32 %31, !dbg !9115
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9116 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9120, metadata !DIExpression()), !dbg !9122
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9123
  %3 = load i32, i32* %2, align 4, !dbg !9123
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9124, !range !5541
  %5 = icmp ult i32 %4, 2, !dbg !9124
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9125
  br i1 %7, label %8, label %15, !dbg !9125

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9126
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9127
  %11 = load i32, i32* %10, align 4, !dbg !9127
  %12 = and i32 %11, %9, !dbg !9128
  %13 = icmp eq i32 %12, 0, !dbg !9129
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9121, metadata !DIExpression()), !dbg !9122
  ret i32 %16, !dbg !9130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9131 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9135, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9136, metadata !DIExpression()), !dbg !9138
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9139
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9139
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9137, metadata !DIExpression()), !dbg !9140
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9141
  %6 = load i32, i32* %5, align 4, !dbg !9141
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9142
  store i32 %6, i32* %7, align 4, !dbg !9143
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9144
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9145
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9146
  %11 = load i32, i32* %10, align 4, !dbg !9146
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #27, !dbg !9147
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !9148
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9149
  ret i32 %12, !dbg !9150
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9158, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9159, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 undef, metadata !9160, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 %2, metadata !9161, metadata !DIExpression()), !dbg !9162
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9163
  %5 = load i32, i32* %4, align 4, !dbg !9163
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !9164
  %7 = or i32 %6, %5, !dbg !9165
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9166
  store i32 %7, i32* %8, align 4, !dbg !9167
  ret void, !dbg !9168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9169 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9173, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9174, metadata !DIExpression()), !dbg !9175
  %3 = zext i8 %0 to i32, !dbg !9176
  %4 = icmp ugt i8 %0, 7, !dbg !9178
  br i1 %4, label %5, label %6, !dbg !9179

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.114, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #26, !dbg !9180
  br label %7, !dbg !9186

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !9187
  br label %7, !dbg !9188

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9175
  ret i32 %8, !dbg !9189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !9190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9194, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9195, metadata !DIExpression()), !dbg !9196
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !9197
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9198
  %4 = load i32, i32* %3, align 4, !dbg !9198
  %5 = and i32 %4, -32, !dbg !9199
  %6 = or i32 %5, %0, !dbg !9200
  %7 = or i32 %6, 16, !dbg !9200
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9201
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9202
  %9 = load i32, i32* %8, align 4, !dbg !9202
  %10 = or i32 %9, 1, !dbg !9203
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9204
  ret void, !dbg !9205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !9206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9209, metadata !DIExpression()), !dbg !9210
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9211
  ret void, !dbg !9212
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !9213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9217, metadata !DIExpression()), !dbg !9218
  %2 = icmp ult i32 %0, 33, !dbg !9219
  br i1 %2, label %11, label %3, !dbg !9221

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9222
  br i1 %4, label %11, label %5, !dbg !9224

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9225
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9226, !range !5541
  %8 = mul nsw i32 %7, -2, !dbg !9227
  %9 = add nsw i32 %8, 62, !dbg !9227
  %10 = and i32 %9, 62, !dbg !9228
  br label %11, !dbg !9229

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9218
  ret i32 %12, !dbg !9230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9235, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata i8 %1, metadata !9236, metadata !DIExpression()), !dbg !9237
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9238
  %4 = icmp eq i32 %3, -22, !dbg !9240
  br i1 %4, label %5, label %7, !dbg !9241

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 314) #26, !dbg !9242
  %6 = zext i8 %1 to i32, !dbg !9242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.117, i32 0, i32 0), i32 noundef %6) #26, !dbg !9242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 314) #26, !dbg !9242
  unreachable, !dbg !9242

7:                                                ; preds = %2
  ret void, !dbg !9247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9248 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9252, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.value(metadata i8 %1, metadata !9253, metadata !DIExpression()), !dbg !9259
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9260
  call void @llvm.dbg.value(metadata i8 %3, metadata !9254, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9259
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %4, metadata !9254, metadata !DIExpression()), !dbg !9259
  %5 = icmp ne i32 %4, -22, !dbg !9262
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9263
  call void @llvm.dbg.value(metadata i32 %4, metadata !9255, metadata !DIExpression()), !dbg !9264
  br i1 %7, label %8, label %12, !dbg !9263

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9255, metadata !DIExpression()), !dbg !9264
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !9265
  %10 = add i32 %9, 1, !dbg !9268
  call void @llvm.dbg.value(metadata i32 %10, metadata !9255, metadata !DIExpression()), !dbg !9264
  %11 = icmp eq i32 %10, 8, !dbg !9269
  br i1 %11, label %12, label %8, !dbg !9270, !llvm.loop !9271

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !9274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9277, metadata !DIExpression()), !dbg !9278
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9279
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9280
  ret void, !dbg !9281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9282 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9287
  %2 = icmp ugt i32 %1, 8, !dbg !9289
  br i1 %2, label %3, label %4, !dbg !9290

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 341) #26, !dbg !9291
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.118, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !9291
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 341) #26, !dbg !9291
  unreachable, !dbg !9291

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !9296
  call void @llvm.dbg.value(metadata i32 0, metadata !9286, metadata !DIExpression()), !dbg !9297
  %5 = icmp eq i32 %1, 0, !dbg !9298
  br i1 %5, label %13, label %6, !dbg !9301

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9301

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9286, metadata !DIExpression()), !dbg !9297
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9302
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #27, !dbg !9304
  %11 = add nuw i32 %9, 1, !dbg !9305
  call void @llvm.dbg.value(metadata i32 %11, metadata !9286, metadata !DIExpression()), !dbg !9297
  %12 = icmp eq i32 %11, %1, !dbg !9298
  br i1 %12, label %13, label %8, !dbg !9301, !llvm.loop !9306

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9308
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9309
  tail call void @arm_core_mpu_enable() #27, !dbg !9310
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9311
  %16 = and i32 %15, 65280, !dbg !9311
  %17 = icmp eq i32 %16, 2048, !dbg !9311
  br i1 %17, label %19, label %18, !dbg !9314

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 435) #26, !dbg !9315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.120, i32 0, i32 0)) #26, !dbg !9315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 435) #26, !dbg !9315
  unreachable, !dbg !9315

19:                                               ; preds = %13
  ret i32 0, !dbg !9317
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9325, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i8* %1, metadata !9326, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i8* %0, metadata !9327, metadata !DIExpression()), !dbg !9328
  %3 = load i8, i8* %1, align 1, !dbg !9329
  %4 = icmp eq i8 %3, 0, !dbg !9330
  br i1 %4, label %13, label %5, !dbg !9331

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9325, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata i8* %8, metadata !9326, metadata !DIExpression()), !dbg !9328
  store i8 %6, i8* %7, align 1, !dbg !9332
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9334
  call void @llvm.dbg.value(metadata i8* %9, metadata !9325, metadata !DIExpression()), !dbg !9328
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9335
  call void @llvm.dbg.value(metadata i8* %10, metadata !9326, metadata !DIExpression()), !dbg !9328
  %11 = load i8, i8* %10, align 1, !dbg !9329
  %12 = icmp eq i8 %11, 0, !dbg !9330
  br i1 %12, label %13, label %5, !dbg !9331, !llvm.loop !9336

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9338
  ret i8* %0, !dbg !9339
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9344, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i8* %1, metadata !9345, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i32 %2, metadata !9346, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i8* %0, metadata !9347, metadata !DIExpression()), !dbg !9348
  %4 = icmp eq i32 %2, 0, !dbg !9349
  br i1 %4, label %22, label %5, !dbg !9350

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9344, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i32 %7, metadata !9346, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i8* %8, metadata !9345, metadata !DIExpression()), !dbg !9348
  %9 = load i8, i8* %8, align 1, !dbg !9351
  %10 = icmp eq i8 %9, 0, !dbg !9352
  br i1 %10, label %16, label %11, !dbg !9353

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9354
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9356
  call void @llvm.dbg.value(metadata i8* %12, metadata !9345, metadata !DIExpression()), !dbg !9348
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9357
  call void @llvm.dbg.value(metadata i8* %13, metadata !9344, metadata !DIExpression()), !dbg !9348
  %14 = add i32 %7, -1, !dbg !9358
  call void @llvm.dbg.value(metadata i32 %14, metadata !9346, metadata !DIExpression()), !dbg !9348
  %15 = icmp eq i32 %14, 0, !dbg !9349
  br i1 %15, label %22, label %5, !dbg !9350, !llvm.loop !9359

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9344, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i32 %18, metadata !9346, metadata !DIExpression()), !dbg !9348
  store i8 0, i8* %17, align 1, !dbg !9361
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9363
  call void @llvm.dbg.value(metadata i8* %19, metadata !9344, metadata !DIExpression()), !dbg !9348
  %20 = add i32 %18, -1, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %20, metadata !9346, metadata !DIExpression()), !dbg !9348
  %21 = icmp eq i32 %20, 0, !dbg !9365
  br i1 %21, label %22, label %16, !dbg !9366, !llvm.loop !9367

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9369
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9374, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i32 %1, metadata !9375, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i32 %1, metadata !9376, metadata !DIExpression()), !dbg !9377
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9378

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9374, metadata !DIExpression()), !dbg !9377
  %6 = load i8, i8* %5, align 1, !dbg !9379
  %7 = icmp eq i8 %6, %3, !dbg !9380
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9381
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9382
  call void @llvm.dbg.value(metadata i8* %10, metadata !9374, metadata !DIExpression()), !dbg !9377
  br i1 %9, label %11, label %4, !dbg !9381, !llvm.loop !9384

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9386
  ret i8* %12, !dbg !9387
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9390, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* null, metadata !9392, metadata !DIExpression()), !dbg !9393
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9394

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9393
  call void @llvm.dbg.value(metadata i8* %6, metadata !9392, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8* %5, metadata !9390, metadata !DIExpression()), !dbg !9393
  %7 = load i8, i8* %5, align 1, !dbg !9395
  %8 = icmp eq i8 %7, %3, !dbg !9398
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9399
  call void @llvm.dbg.value(metadata i8* %9, metadata !9392, metadata !DIExpression()), !dbg !9393
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9400
  call void @llvm.dbg.value(metadata i8* %10, metadata !9390, metadata !DIExpression()), !dbg !9393
  %11 = icmp eq i8 %7, 0, !dbg !9401
  br i1 %11, label %12, label %4, !dbg !9401, !llvm.loop !9402

12:                                               ; preds = %4
  ret i8* %9, !dbg !9404
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !9405 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9409, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.value(metadata i32 0, metadata !9410, metadata !DIExpression()), !dbg !9411
  %2 = load i8, i8* %0, align 1, !dbg !9412
  %3 = icmp eq i8 %2, 0, !dbg !9413
  br i1 %3, label %11, label %4, !dbg !9414

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9410, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.value(metadata i8* %6, metadata !9409, metadata !DIExpression()), !dbg !9411
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9415
  call void @llvm.dbg.value(metadata i8* %7, metadata !9409, metadata !DIExpression()), !dbg !9411
  %8 = add i32 %5, 1, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %8, metadata !9410, metadata !DIExpression()), !dbg !9411
  %9 = load i8, i8* %7, align 1, !dbg !9412
  %10 = icmp eq i8 %9, 0, !dbg !9413
  br i1 %10, label %11, label %4, !dbg !9414, !llvm.loop !9418

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9411
  ret i32 %12, !dbg !9420
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9421 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9425, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i32 %1, metadata !9426, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i32 0, metadata !9427, metadata !DIExpression()), !dbg !9428
  %3 = load i8, i8* %0, align 1, !dbg !9429
  %4 = icmp ne i8 %3, 0, !dbg !9430
  %5 = icmp ne i32 %1, 0, !dbg !9431
  %6 = and i1 %4, %5, !dbg !9431
  br i1 %6, label %7, label %16, !dbg !9432

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9427, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i8* %9, metadata !9425, metadata !DIExpression()), !dbg !9428
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9433
  call void @llvm.dbg.value(metadata i8* %10, metadata !9425, metadata !DIExpression()), !dbg !9428
  %11 = add nuw i32 %8, 1, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %11, metadata !9427, metadata !DIExpression()), !dbg !9428
  %12 = load i8, i8* %10, align 1, !dbg !9429
  %13 = icmp ne i8 %12, 0, !dbg !9430
  %14 = icmp ult i32 %11, %1, !dbg !9431
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9431
  br i1 %15, label %7, label %16, !dbg !9432, !llvm.loop !9436

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9428
  ret i32 %17, !dbg !9438
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !9439 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9443, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %1, metadata !9444, metadata !DIExpression()), !dbg !9445
  %3 = load i8, i8* %0, align 1, !dbg !9446
  %4 = load i8, i8* %1, align 1, !dbg !9447
  %5 = icmp ne i8 %3, %4, !dbg !9448
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9449
  br i1 %7, label %18, label %8, !dbg !9449

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9444, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %10, metadata !9443, metadata !DIExpression()), !dbg !9445
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9450
  call void @llvm.dbg.value(metadata i8* %11, metadata !9443, metadata !DIExpression()), !dbg !9445
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9452
  call void @llvm.dbg.value(metadata i8* %12, metadata !9444, metadata !DIExpression()), !dbg !9445
  %13 = load i8, i8* %11, align 1, !dbg !9446
  %14 = load i8, i8* %12, align 1, !dbg !9447
  %15 = icmp ne i8 %13, %14, !dbg !9448
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9449
  br i1 %17, label %18, label %8, !dbg !9449, !llvm.loop !9453

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9446
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9447
  %21 = zext i8 %19 to i32, !dbg !9456
  %22 = zext i8 %20 to i32, !dbg !9457
  %23 = sub nsw i32 %21, %22, !dbg !9458
  ret i32 %23, !dbg !9459
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9464, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i8* %1, metadata !9465, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i32 %2, metadata !9466, metadata !DIExpression()), !dbg !9467
  %4 = icmp eq i32 %2, 0, !dbg !9468
  br i1 %4, label %23, label %5, !dbg !9468

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9466, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i8* %7, metadata !9465, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i8* %8, metadata !9464, metadata !DIExpression()), !dbg !9467
  %9 = load i8, i8* %8, align 1, !dbg !9469
  %10 = load i8, i8* %7, align 1, !dbg !9470
  %11 = icmp ne i8 %9, %10, !dbg !9471
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9472
  br i1 %13, label %19, label %14, !dbg !9472

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9473
  call void @llvm.dbg.value(metadata i8* %15, metadata !9464, metadata !DIExpression()), !dbg !9467
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9475
  call void @llvm.dbg.value(metadata i8* %16, metadata !9465, metadata !DIExpression()), !dbg !9467
  %17 = add i32 %6, -1, !dbg !9476
  call void @llvm.dbg.value(metadata i32 %17, metadata !9466, metadata !DIExpression()), !dbg !9467
  %18 = icmp eq i32 %17, 0, !dbg !9468
  br i1 %18, label %23, label %5, !dbg !9468, !llvm.loop !9477

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9480
  %21 = zext i8 %10 to i32, !dbg !9481
  %22 = sub nsw i32 %20, %21, !dbg !9482
  br label %23, !dbg !9483

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9483
  ret i32 %24, !dbg !9484
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !9485 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9489, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata i8* %1, metadata !9490, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata i8** %2, metadata !9491, metadata !DIExpression()), !dbg !9494
  %4 = icmp eq i8* %0, null, !dbg !9495
  br i1 %4, label %5, label %7, !dbg !9495

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9496
  br label %7, !dbg !9495

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9495
  call void @llvm.dbg.value(metadata i8* %8, metadata !9492, metadata !DIExpression()), !dbg !9494
  %9 = load i8, i8* %8, align 1, !dbg !9497
  %10 = icmp eq i8 %9, 0, !dbg !9497
  br i1 %10, label %33, label %11, !dbg !9498

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9492, metadata !DIExpression()), !dbg !9494
  %14 = zext i8 %12 to i32, !dbg !9497
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !9499
  %16 = icmp eq i8* %15, null, !dbg !9498
  br i1 %16, label %21, label %17, !dbg !9500

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9501
  call void @llvm.dbg.value(metadata i8* %18, metadata !9492, metadata !DIExpression()), !dbg !9494
  %19 = load i8, i8* %18, align 1, !dbg !9497
  %20 = icmp eq i8 %19, 0, !dbg !9497
  br i1 %20, label %33, label %11, !dbg !9498, !llvm.loop !9503

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9493, metadata !DIExpression()), !dbg !9494
  %24 = zext i8 %22 to i32, !dbg !9505
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !9506
  %26 = icmp eq i8* %25, null, !dbg !9507
  br i1 %26, label %27, label %31, !dbg !9508

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9509
  call void @llvm.dbg.value(metadata i8* %28, metadata !9493, metadata !DIExpression()), !dbg !9494
  %29 = load i8, i8* %28, align 1, !dbg !9505
  %30 = icmp eq i8 %29, 0, !dbg !9505
  br i1 %30, label %33, label %21, !dbg !9511, !llvm.loop !9512

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9514
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9517
  br label %33, !dbg !9518

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9494
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9494
  store i8* %34, i8** %2, align 4, !dbg !9494
  ret i8* %35, !dbg !9519
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9520 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9522, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata i8* %1, metadata !9523, metadata !DIExpression()), !dbg !9524
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9525
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9526
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !9527
  ret i8* %0, !dbg !9528
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9529 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9531, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i8* %1, metadata !9532, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i32 %2, metadata !9533, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i8* %0, metadata !9534, metadata !DIExpression()), !dbg !9536
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %4, metadata !9535, metadata !DIExpression()), !dbg !9536
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9538
  call void @llvm.dbg.value(metadata i8* %5, metadata !9531, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i8* %1, metadata !9532, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i32 %2, metadata !9533, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i32 %2, metadata !9533, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9536
  %6 = icmp eq i32 %2, 0, !dbg !9539
  br i1 %6, label %18, label %7, !dbg !9540

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9541
  call void @llvm.dbg.value(metadata i8* %9, metadata !9531, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i8* %10, metadata !9532, metadata !DIExpression()), !dbg !9536
  %12 = load i8, i8* %10, align 1, !dbg !9542
  %13 = icmp eq i8 %12, 0, !dbg !9543
  br i1 %13, label %18, label %14, !dbg !9544

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9545
  call void @llvm.dbg.value(metadata i8* %15, metadata !9532, metadata !DIExpression()), !dbg !9536
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9547
  call void @llvm.dbg.value(metadata i8* %16, metadata !9531, metadata !DIExpression()), !dbg !9536
  store i8 %12, i8* %9, align 1, !dbg !9548
  call void @llvm.dbg.value(metadata i32 %11, metadata !9533, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i32 %11, metadata !9533, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9536
  %17 = icmp eq i32 %11, 0, !dbg !9539
  br i1 %17, label %18, label %7, !dbg !9540, !llvm.loop !9549

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9536
  store i8 0, i8* %19, align 1, !dbg !9551
  ret i8* %0, !dbg !9552
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9553 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9557, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i8* %1, metadata !9558, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i32 %2, metadata !9559, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i8* %0, metadata !9560, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i8* %1, metadata !9561, metadata !DIExpression()), !dbg !9562
  %4 = icmp eq i32 %2, 0, !dbg !9563
  br i1 %4, label %31, label %5, !dbg !9565

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9561, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i8* %0, metadata !9560, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i32 %2, metadata !9559, metadata !DIExpression()), !dbg !9562
  %6 = add i32 %2, -1, !dbg !9566
  call void @llvm.dbg.value(metadata i32 %6, metadata !9559, metadata !DIExpression()), !dbg !9562
  %7 = icmp eq i32 %6, 0, !dbg !9567
  br i1 %7, label %23, label %8, !dbg !9568

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9569
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9569
  br label %11, !dbg !9569

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9561, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i8* %14, metadata !9560, metadata !DIExpression()), !dbg !9562
  %15 = load i8, i8* %14, align 1, !dbg !9570
  %16 = load i8, i8* %13, align 1, !dbg !9571
  %17 = icmp eq i8 %15, %16, !dbg !9572
  br i1 %17, label %18, label %23, !dbg !9569

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9573
  call void @llvm.dbg.value(metadata i8* %19, metadata !9560, metadata !DIExpression()), !dbg !9562
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9575
  call void @llvm.dbg.value(metadata i8* %20, metadata !9561, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i32 %12, metadata !9559, metadata !DIExpression()), !dbg !9562
  %21 = add i32 %12, -1, !dbg !9566
  call void @llvm.dbg.value(metadata i32 %21, metadata !9559, metadata !DIExpression()), !dbg !9562
  %22 = icmp eq i32 %21, 0, !dbg !9567
  br i1 %22, label %23, label %11, !dbg !9568, !llvm.loop !9576

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9562
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9562
  %26 = load i8, i8* %24, align 1, !dbg !9578
  %27 = zext i8 %26 to i32, !dbg !9578
  %28 = load i8, i8* %25, align 1, !dbg !9579
  %29 = zext i8 %28 to i32, !dbg !9579
  %30 = sub nsw i32 %27, %29, !dbg !9580
  br label %31, !dbg !9581

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9562
  ret i32 %32, !dbg !9582
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9583 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9587, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i8* %1, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %2, metadata !9589, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i8* %0, metadata !9590, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i8* %1, metadata !9591, metadata !DIExpression()), !dbg !9592
  %4 = ptrtoint i8* %0 to i32, !dbg !9593
  %5 = ptrtoint i8* %1 to i32, !dbg !9593
  %6 = sub i32 %4, %5, !dbg !9593
  %7 = icmp ult i32 %6, %2, !dbg !9595
  br i1 %7, label %10, label %8, !dbg !9596

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9591, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i8* %0, metadata !9590, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %2, metadata !9589, metadata !DIExpression()), !dbg !9592
  %9 = icmp eq i32 %2, 0, !dbg !9597
  br i1 %9, label %26, label %17, !dbg !9599

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9589, metadata !DIExpression()), !dbg !9592
  %12 = add i32 %11, -1, !dbg !9600
  call void @llvm.dbg.value(metadata i32 %12, metadata !9589, metadata !DIExpression()), !dbg !9592
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9603
  %14 = load i8, i8* %13, align 1, !dbg !9603
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9604
  store i8 %14, i8* %15, align 1, !dbg !9605
  %16 = icmp eq i32 %12, 0, !dbg !9606
  br i1 %16, label %26, label %10, !dbg !9607, !llvm.loop !9608

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9591, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i8* %19, metadata !9590, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %20, metadata !9589, metadata !DIExpression()), !dbg !9592
  %21 = load i8, i8* %18, align 1, !dbg !9610
  store i8 %21, i8* %19, align 1, !dbg !9612
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9613
  call void @llvm.dbg.value(metadata i8* %22, metadata !9590, metadata !DIExpression()), !dbg !9592
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9614
  call void @llvm.dbg.value(metadata i8* %23, metadata !9591, metadata !DIExpression()), !dbg !9592
  %24 = add i32 %20, -1, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %24, metadata !9589, metadata !DIExpression()), !dbg !9592
  %25 = icmp eq i32 %24, 0, !dbg !9597
  br i1 %25, label %26, label %17, !dbg !9599, !llvm.loop !9616

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9618
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9619 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9625, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i8* %1, metadata !9626, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %2, metadata !9627, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i8* %0, metadata !9628, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i8* %1, metadata !9629, metadata !DIExpression()), !dbg !9630
  %4 = icmp eq i32 %2, 0, !dbg !9631
  br i1 %4, label %14, label %5, !dbg !9632

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9629, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i8* %7, metadata !9628, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %8, metadata !9627, metadata !DIExpression()), !dbg !9630
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9633
  call void @llvm.dbg.value(metadata i8* %9, metadata !9629, metadata !DIExpression()), !dbg !9630
  %10 = load i8, i8* %6, align 1, !dbg !9635
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9636
  call void @llvm.dbg.value(metadata i8* %11, metadata !9628, metadata !DIExpression()), !dbg !9630
  store i8 %10, i8* %7, align 1, !dbg !9637
  %12 = add i32 %8, -1, !dbg !9638
  call void @llvm.dbg.value(metadata i32 %12, metadata !9627, metadata !DIExpression()), !dbg !9630
  %13 = icmp eq i32 %12, 0, !dbg !9631
  br i1 %13, label %14, label %5, !dbg !9632, !llvm.loop !9639

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9641
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !9642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9646, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i32 %1, metadata !9647, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i32 %2, metadata !9648, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i8* %0, metadata !9649, metadata !DIExpression()), !dbg !9651
  %4 = trunc i32 %1 to i8, !dbg !9652
  call void @llvm.dbg.value(metadata i8 %4, metadata !9650, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i32 %2, metadata !9648, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i8* %0, metadata !9649, metadata !DIExpression()), !dbg !9651
  %5 = icmp eq i32 %2, 0, !dbg !9653
  br i1 %5, label %12, label %6, !dbg !9654

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9648, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata i8* %8, metadata !9649, metadata !DIExpression()), !dbg !9651
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9655
  call void @llvm.dbg.value(metadata i8* %9, metadata !9649, metadata !DIExpression()), !dbg !9651
  store i8 %4, i8* %8, align 1, !dbg !9657
  %10 = add i32 %7, -1, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %10, metadata !9648, metadata !DIExpression()), !dbg !9651
  %11 = icmp eq i32 %10, 0, !dbg !9653
  br i1 %11, label %12, label %6, !dbg !9654, !llvm.loop !9659

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9666, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 %1, metadata !9667, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i32 %2, metadata !9668, metadata !DIExpression()), !dbg !9672
  %4 = icmp eq i32 %2, 0, !dbg !9673
  br i1 %4, label %17, label %5, !dbg !9674

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9675

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9676
  call void @llvm.dbg.value(metadata i8* %9, metadata !9669, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.value(metadata i32 %8, metadata !9668, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.value(metadata i8* %9, metadata !9669, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9676
  %10 = load i8, i8* %9, align 1, !dbg !9677
  %11 = icmp eq i8 %10, %6, !dbg !9680
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9681
  call void @llvm.dbg.value(metadata i8* %12, metadata !9669, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.value(metadata i32 %13, metadata !9668, metadata !DIExpression()), !dbg !9672
  br i1 %15, label %16, label %7, !dbg !9681, !llvm.loop !9682

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9684

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9672
  ret i8* %19, !dbg !9685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !9686 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9688, metadata !DIExpression()), !dbg !9689
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9690
  ret void, !dbg !9691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !9692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9694, metadata !DIExpression()), !dbg !9695
  ret i32 -1, !dbg !9696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9701, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.value(metadata i32* %1, metadata !9702, metadata !DIExpression()), !dbg !9703
  %3 = ptrtoint i32* %1 to i32, !dbg !9704
  %4 = and i32 %3, -2, !dbg !9704
  %5 = icmp eq i32 %4, 2, !dbg !9704
  br i1 %5, label %6, label %9, !dbg !9704

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9705
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !9705
  br label %9, !dbg !9706

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9706
  ret i32 %10, !dbg !9707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9710, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.value(metadata i32* %1, metadata !9711, metadata !DIExpression()), !dbg !9712
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9713
  ret i32 %3, !dbg !9714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9718, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.value(metadata i32* %1, metadata !9719, metadata !DIExpression()), !dbg !9720
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9721, !srcloc !9723
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9724
  ret i32 %3, !dbg !9725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9726 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9731, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32* %1, metadata !9732, metadata !DIExpression()), !dbg !9735
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %3, metadata !9733, metadata !DIExpression()), !dbg !9735
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %4, metadata !9734, metadata !DIExpression()), !dbg !9735
  %5 = icmp ne i32 %3, %4, !dbg !9738
  %6 = sext i1 %5 to i32, !dbg !9739
  ret i32 %6, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9745, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.value(metadata i32 %1, metadata !9746, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.value(metadata i32 %2, metadata !9747, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.value(metadata i32* %3, metadata !9748, metadata !DIExpression()), !dbg !9749
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9750
  ret i32 %5, !dbg !9751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9754, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %1, metadata !9755, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %2, metadata !9756, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32* %3, metadata !9757, metadata !DIExpression()), !dbg !9758
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9759, !srcloc !9761
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9762
  ret i32 %5, !dbg !9763
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9764 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9766, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %1, metadata !9767, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %2, metadata !9768, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32* %3, metadata !9769, metadata !DIExpression()), !dbg !9774
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9775
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9777
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9777
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9777
  br i1 %11, label %33, label %12, !dbg !9777

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9774
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9774
  call void @llvm.dbg.value(metadata i8* %14, metadata !9772, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %13, metadata !9770, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %1, metadata !9771, metadata !DIExpression()), !dbg !9774
  br label %15, !dbg !9778

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9780
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9774
  call void @llvm.dbg.value(metadata i8* %17, metadata !9772, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %16, metadata !9771, metadata !DIExpression()), !dbg !9774
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9781
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9784
  call void @llvm.dbg.value(metadata i8* %19, metadata !9772, metadata !DIExpression()), !dbg !9774
  %20 = load i8, i8* %17, align 1, !dbg !9785
  %21 = zext i8 %20 to i32, !dbg !9786
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !9781
  %23 = icmp eq i32 %22, -1, !dbg !9787
  br i1 %23, label %30, label %24, !dbg !9788

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9789
  call void @llvm.dbg.value(metadata i32 %25, metadata !9771, metadata !DIExpression()), !dbg !9774
  %26 = icmp eq i32 %25, 0, !dbg !9790
  br i1 %26, label %27, label %15, !dbg !9791, !llvm.loop !9792

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %28, metadata !9770, metadata !DIExpression()), !dbg !9774
  %29 = icmp eq i32 %28, 0, !dbg !9795
  br i1 %29, label %30, label %12, !dbg !9796, !llvm.loop !9797

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9774
  call void @llvm.dbg.value(metadata i32 %31, metadata !9770, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.label(metadata !9773), !dbg !9800
  %32 = sub i32 %2, %31, !dbg !9801
  br label %33, !dbg !9802

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9774
  ret i32 %34, !dbg !9803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9808, metadata !DIExpression()), !dbg !9809
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9810
  %3 = icmp eq i32 %2, -1, !dbg !9812
  br i1 %3, label %8, label %4, !dbg !9813

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9814
  %6 = icmp eq i32 %5, -1, !dbg !9815
  %7 = sext i1 %6 to i32, !dbg !9814
  br label %8, !dbg !9816

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9809
  ret i32 %9, !dbg !9817
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9818 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9826, metadata !DIExpression()), !dbg !9828
  %3 = tail call i64 @sys_clock_tick_get() #26, !dbg !9829
  call void @llvm.dbg.value(metadata i64 %3, metadata !9827, metadata !DIExpression()), !dbg !9828
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9830
  %5 = sub i64 %1, %3, !dbg !9830
  store i64 %5, i64* %4, align 8, !dbg !9830
  ret void, !dbg !9831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.155* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9832 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9985, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !9983, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.value(metadata i8* %1, metadata !9984, metadata !DIExpression()), !dbg !9988
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #26, !dbg !9989
  call void @llvm.dbg.value(metadata i64 %4, metadata !9987, metadata !DIExpression()), !dbg !9988
  %5 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !9990
  br i1 %5, label %6, label %7, !dbg !9993

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 108) #26, !dbg !9994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !9994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 108) #26, !dbg !9994
  unreachable, !dbg !9994

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !9996
  br i1 %8, label %9, label %10, !dbg !9999

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 109) #26, !dbg !10000
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 109) #26, !dbg !10000
  unreachable, !dbg !10000

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !10002
  br i1 %11, label %12, label %13, !dbg !10005

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 110) #26, !dbg !10006
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.144, i32 0, i32 0)) #26, !dbg !10006
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 110) #26, !dbg !10006
  unreachable, !dbg !10006

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 4, !dbg !10008
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !10008
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !10010
  br i1 %16, label %22, label %17, !dbg !10011

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 1, !dbg !10012
  %19 = load i16, i16* %18, align 4, !dbg !10012
  %20 = zext i16 %19 to i32, !dbg !10013
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #26, !dbg !10014
  br i1 %21, label %22, label %36, !dbg !10015

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10016
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10016
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #27, !dbg !10017
  call void @llvm.dbg.value(metadata i32 %25, metadata !9986, metadata !DIExpression()), !dbg !9988
  %26 = icmp eq i32 %25, 0, !dbg !10018
  br i1 %26, label %27, label %36, !dbg !10020

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 3, !dbg !10021
  %29 = load i8*, i8** %28, align 4, !dbg !10021
  %30 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 1, !dbg !10022
  %31 = load i16, i16* %30, align 4, !dbg !10022
  %32 = zext i16 %31 to i32, !dbg !10023
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #26, !dbg !10024
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.155* noundef nonnull %0, i64 noundef %4) #27, !dbg !10025
  call void @llvm.dbg.value(metadata i32 0, metadata !9986, metadata !DIExpression()), !dbg !9988
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10026
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #27, !dbg !10027
  br label %36, !dbg !10028

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !9988
  ret i32 %37, !dbg !10029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10030 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10035, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10034, metadata !DIExpression()), !dbg !10036
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10037, !srcloc !10039
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #26, !dbg !10040
  ret i32 %3, !dbg !10041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel.155* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !10042 {
  %3 = alloca %struct.zbus_channel.155*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10046, metadata !DIExpression()), !dbg !10054
  store %struct.zbus_channel.155* %0, %struct.zbus_channel.155** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !10047, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata i32 0, metadata !10048, metadata !DIExpression()), !dbg !10054
  %5 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 6, !dbg !10055
  %6 = load %struct.zbus_observer.154**, %struct.zbus_observer.154*** %5, align 4, !dbg !10055
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %6, metadata !10050, metadata !DIExpression()), !dbg !10056
  %7 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %6, align 4, !dbg !10057
  %8 = icmp eq %struct.zbus_observer.154* %7, null, !dbg !10059
  br i1 %8, label %31, label %16, !dbg !10060

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer.154**, %struct.zbus_observer.154*** %5, align 4, !dbg !10061
  %11 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %10, align 4, !dbg !10062
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10046, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %10, metadata !10052, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.value(metadata i32 0, metadata !10048, metadata !DIExpression()), !dbg !10054
  %12 = icmp eq %struct.zbus_observer.154* %11, null, !dbg !10065
  br i1 %12, label %31, label %13, !dbg !10066

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.155** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %32, !dbg !10066

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.154* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.154** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %18, metadata !10050, metadata !DIExpression()), !dbg !10056
  %19 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %17, i32 0, i32 0, !dbg !10067
  %20 = load i8, i8* %19, align 4, !dbg !10067, !range !8289
  %21 = icmp eq i8 %20, 0, !dbg !10067
  br i1 %21, label %27, label %22, !dbg !10070

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %17, i32 0, i32 2, !dbg !10071
  %24 = load void (%struct.zbus_channel.155*)*, void (%struct.zbus_channel.155*)** %23, align 4, !dbg !10071
  %25 = icmp eq void (%struct.zbus_channel.155*)* %24, null, !dbg !10072
  br i1 %25, label %27, label %26, !dbg !10073

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10046, metadata !DIExpression()), !dbg !10054
  tail call void %24(%struct.zbus_channel.155* noundef %0) #26, !dbg !10074
  br label %27, !dbg !10076

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.154*, %struct.zbus_observer.154** %18, i32 1, !dbg !10077
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %28, metadata !10050, metadata !DIExpression()), !dbg !10056
  %29 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %28, align 4, !dbg !10057
  %30 = icmp eq %struct.zbus_observer.154* %29, null, !dbg !10059
  br i1 %30, label %9, label %16, !dbg !10060, !llvm.loop !10078

31:                                               ; preds = %48, %2, %9
  ret void, !dbg !10080

32:                                               ; preds = %13, %48
  %33 = phi %struct.zbus_observer.154* [ %11, %13 ], [ %50, %48 ]
  %34 = phi %struct.zbus_observer.154** [ %10, %13 ], [ %49, %48 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %34, metadata !10052, metadata !DIExpression()), !dbg !10064
  %35 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %33, i32 0, i32 0, !dbg !10081
  %36 = load i8, i8* %35, align 4, !dbg !10081, !range !8289
  %37 = icmp eq i8 %36, 0, !dbg !10081
  br i1 %37, label %48, label %38, !dbg !10084

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %33, i32 0, i32 1, !dbg !10085
  %40 = load %struct.k_msgq*, %struct.k_msgq** %39, align 4, !dbg !10085
  %41 = icmp eq %struct.k_msgq* %40, null, !dbg !10086
  br i1 %41, label %48, label %42, !dbg !10087

42:                                               ; preds = %38
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !10088
  %43 = load i64, i64* %15, align 8, !dbg !10090
  %44 = insertvalue [1 x i64] poison, i64 %43, 0, !dbg !10090
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155** %3, metadata !10046, metadata !DIExpression(DW_OP_deref)), !dbg !10054
  %45 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %40, i8* noundef nonnull %14, [1 x i64] %44) #27, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %45, metadata !10049, metadata !DIExpression()), !dbg !10054
  %46 = icmp eq i32 %45, 0, !dbg !10091
  br i1 %46, label %48, label %47, !dbg !10094

47:                                               ; preds = %42
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 85) #26, !dbg !10095
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.147, i32 0, i32 0)) #26, !dbg !10095
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 85) #26, !dbg !10095
  unreachable, !dbg !10095

48:                                               ; preds = %42, %32, %38
  call void @llvm.dbg.value(metadata i32 0, metadata !10048, metadata !DIExpression()), !dbg !10054
  %49 = getelementptr inbounds %struct.zbus_observer.154*, %struct.zbus_observer.154** %34, i32 1, !dbg !10097
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154** %49, metadata !10052, metadata !DIExpression()), !dbg !10064
  %50 = load %struct.zbus_observer.154*, %struct.zbus_observer.154** %49, align 4, !dbg !10062
  %51 = icmp eq %struct.zbus_observer.154* %50, null, !dbg !10065
  br i1 %51, label %31, label %32, !dbg !10066, !llvm.loop !10098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10100 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10104, metadata !DIExpression()), !dbg !10105
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10106, !srcloc !10108
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !10109
  ret i32 %2, !dbg !10110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10111 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10117, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10115, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i8* %1, metadata !10116, metadata !DIExpression()), !dbg !10118
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10119, !srcloc !10121
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10122
  ret i32 %4, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.155* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10124 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10130, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10128, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.value(metadata i8* %1, metadata !10129, metadata !DIExpression()), !dbg !10132
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10133
  br i1 %4, label %5, label %6, !dbg !10136

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 134) #26, !dbg !10137
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10137
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 134) #26, !dbg !10137
  unreachable, !dbg !10137

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10139
  br i1 %7, label %8, label %9, !dbg !10142

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 135) #26, !dbg !10143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 135) #26, !dbg !10143
  unreachable, !dbg !10143

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !10145
  br i1 %10, label %11, label %12, !dbg !10148

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 136) #26, !dbg !10149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.144, i32 0, i32 0)) #26, !dbg !10149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 136) #26, !dbg !10149
  unreachable, !dbg !10149

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10151
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10151
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #27, !dbg !10152
  call void @llvm.dbg.value(metadata i32 %15, metadata !10131, metadata !DIExpression()), !dbg !10132
  %16 = icmp eq i32 %15, 0, !dbg !10153
  br i1 %16, label %17, label %26, !dbg !10155

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 3, !dbg !10156
  %19 = load i8*, i8** %18, align 4, !dbg !10156
  %20 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 1, !dbg !10157
  %21 = load i16, i16* %20, align 4, !dbg !10157
  %22 = zext i16 %21 to i32, !dbg !10158
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #26, !dbg !10159
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10160
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #27, !dbg !10161
  br label %26, !dbg !10162

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !10132
  ret i32 %27, !dbg !10163
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.155* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10164 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10169, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10168, metadata !DIExpression()), !dbg !10172
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #26, !dbg !10173
  call void @llvm.dbg.value(metadata i64 %3, metadata !10171, metadata !DIExpression()), !dbg !10172
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10174
  br i1 %4, label %5, label %6, !dbg !10177

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 153) #26, !dbg !10178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 153) #26, !dbg !10178
  unreachable, !dbg !10178

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10180
  br i1 %7, label %8, label %9, !dbg !10183

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 154) #26, !dbg !10184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 154) #26, !dbg !10184
  unreachable, !dbg !10184

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10186
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10186
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #27, !dbg !10187
  call void @llvm.dbg.value(metadata i32 %12, metadata !10170, metadata !DIExpression()), !dbg !10172
  %13 = icmp eq i32 %12, 0, !dbg !10188
  br i1 %13, label %14, label %17, !dbg !10190

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.155* noundef nonnull %0, i64 noundef %3) #27, !dbg !10191
  call void @llvm.dbg.value(metadata i32 0, metadata !10170, metadata !DIExpression()), !dbg !10172
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10192
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !10193
  br label %17, !dbg !10194

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !10195
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.155* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10196 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10198, metadata !DIExpression()), !dbg !10201
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10202
  br i1 %3, label %4, label %5, !dbg !10205

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 170) #26, !dbg !10206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 170) #26, !dbg !10206
  unreachable, !dbg !10206

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10208
  br i1 %6, label %7, label %8, !dbg !10211

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 171) #26, !dbg !10212
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 171) #26, !dbg !10212
  unreachable, !dbg !10212

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10214
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !10214
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #27, !dbg !10215
  call void @llvm.dbg.value(metadata i32 %11, metadata !10200, metadata !DIExpression()), !dbg !10201
  ret i32 %11, !dbg !10216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.155* noundef readonly %0) local_unnamed_addr #1 !dbg !10217 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155* %0, metadata !10221, metadata !DIExpression()), !dbg !10223
  %2 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10224
  br i1 %2, label %3, label %4, !dbg !10227

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 184) #26, !dbg !10228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 184) #26, !dbg !10228
  unreachable, !dbg !10228

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel.155* %0, null, !dbg !10230
  br i1 %5, label %6, label %7, !dbg !10233

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 185) #26, !dbg !10234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 185) #26, !dbg !10234
  unreachable, !dbg !10234

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel.155, %struct.zbus_channel.155* %0, i32 0, i32 5, !dbg !10236
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !10236
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #27, !dbg !10237
  call void @llvm.dbg.value(metadata i32 %10, metadata !10222, metadata !DIExpression()), !dbg !10223
  ret i32 %10, !dbg !10238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.154* noundef readonly %0, %struct.zbus_channel.155** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10239 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10246, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata %struct.zbus_observer.154* %0, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata %struct.zbus_channel.155** %1, metadata !10245, metadata !DIExpression()), !dbg !10247
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10248
  br i1 %4, label %5, label %6, !dbg !10251

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 195) #26, !dbg !10252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.140, i32 0, i32 0)) #26, !dbg !10252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 195) #26, !dbg !10252
  unreachable, !dbg !10252

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer.154* %0, null, !dbg !10254
  br i1 %7, label %8, label %9, !dbg !10257

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 196) #26, !dbg !10258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.155, i32 0, i32 0)) #26, !dbg !10258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 196) #26, !dbg !10258
  unreachable, !dbg !10258

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel.155** %1, null, !dbg !10260
  br i1 %10, label %11, label %12, !dbg !10263

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 197) #26, !dbg !10264
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.142, i32 0, i32 0)) #26, !dbg !10264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.139, i32 0, i32 0), i32 noundef 197) #26, !dbg !10264
  unreachable, !dbg !10264

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer.154, %struct.zbus_observer.154* %0, i32 0, i32 1, !dbg !10266
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !10266
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !10268
  br i1 %15, label %19, label %16, !dbg !10269

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel.155** %1 to i8*, !dbg !10270
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #27, !dbg !10271
  br label %19, !dbg !10272

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !10247
  ret i32 %20, !dbg !10273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10274 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10280, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10278, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i8* %1, metadata !10279, metadata !DIExpression()), !dbg !10281
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10282, !srcloc !10284
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10285
  ret i32 %4, !dbg !10286
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10289, metadata !DIExpression()), !dbg !10290
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !10291
  ret void, !dbg !10292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10297, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %1, metadata !10298, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10299, metadata !DIExpression()), !dbg !10303
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10304
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10304
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10304
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10300, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %0, metadata !10302, metadata !DIExpression()), !dbg !10303
  %7 = icmp slt i32 %0, %1, !dbg !10305
  br i1 %7, label %8, label %22, !dbg !10308

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10302, metadata !DIExpression()), !dbg !10303
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !10309
  %11 = icmp eq i32 %10, 0, !dbg !10309
  br i1 %11, label %19, label %12, !dbg !10312

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !10313
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10315
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10315
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10317
  br i1 %15, label %19, label %16, !dbg !10318

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10319
  %18 = load i8*, i8** %17, align 4, !dbg !10319
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !10320
  br label %19, !dbg !10321

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10322
  call void @llvm.dbg.value(metadata i32 %20, metadata !10302, metadata !DIExpression()), !dbg !10303
  %21 = icmp eq i32 %20, %1, !dbg !10305
  br i1 %21, label %22, label %8, !dbg !10308, !llvm.loop !10323

22:                                               ; preds = %19, %3
  ret void, !dbg !10325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10328, metadata !DIExpression()), !dbg !10329
  %2 = shl nuw i32 1, %0, !dbg !10330
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !10333
  ret i32 %3, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !10335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10339, metadata !DIExpression()), !dbg !10340
  %2 = shl nuw i32 1, %0, !dbg !10341
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !10344
  ret void, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10349, metadata !DIExpression()), !dbg !10350
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10355, metadata !DIExpression()), !dbg !10356
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10357
  %3 = and i32 %2, %0, !dbg !10357
  %4 = icmp eq i32 %3, %0, !dbg !10358
  %5 = zext i1 %4 to i32, !dbg !10358
  ret i32 %5, !dbg !10359
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !10364
  ret void, !dbg !10365
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10368, metadata !DIExpression()), !dbg !10369
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !10370
  ret void, !dbg !10371
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10374, metadata !DIExpression()), !dbg !10375
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !10376
  ret void, !dbg !10377
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10380, metadata !DIExpression()), !dbg !10381
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !10382
  ret void, !dbg !10383
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10384 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10386, metadata !DIExpression()), !dbg !10387
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !10388
  ret void, !dbg !10389
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10392, metadata !DIExpression()), !dbg !10393
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !10394
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10398, metadata !DIExpression()), !dbg !10399
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !10400
  ret void, !dbg !10401
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10402 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10404, metadata !DIExpression()), !dbg !10405
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !10406
  ret void, !dbg !10407
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10410, metadata !DIExpression()), !dbg !10411
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !10412
  ret void, !dbg !10413
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10416, metadata !DIExpression()), !dbg !10417
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !10418
  ret void, !dbg !10419
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10422, metadata !DIExpression()), !dbg !10423
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !10424
  ret i32 0, !dbg !10425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1235 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1239, metadata !DIExpression()), !dbg !10426
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !10427
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !10429
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !10431
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !10433
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !10435
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !10437
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !10439
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !10441
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !10443
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !10445
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !10447
  ret void, !dbg !10449
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10452, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32 0, metadata !10453, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32 undef, metadata !10453, metadata !DIExpression()), !dbg !10454
  %2 = lshr i32 6684671, %0, !dbg !10455
  %3 = and i32 %2, 1, !dbg !10455
  %4 = or i32 %3, %0, !dbg !10457
  %5 = icmp eq i32 %4, 0, !dbg !10457
  br i1 %5, label %6, label %7, !dbg !10457

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.160, i32 0, i32 0), i32 noundef 123) #26, !dbg !10458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.160, i32 0, i32 0), i32 noundef 123) #26, !dbg !10458
  unreachable, !dbg !10458

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10463
  %9 = load i32, i32* %8, align 4, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %9, metadata !10453, metadata !DIExpression()), !dbg !10454
  %10 = shl nuw i32 1, %0, !dbg !10464
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #27, !dbg !10465
  tail call void @arch_irq_enable(i32 noundef %9) #26, !dbg !10466
  ret void, !dbg !10467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10470, metadata !DIExpression()), !dbg !10471
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10472
  %3 = or i32 %2, %0, !dbg !10472
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10472
  ret void, !dbg !10473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !10474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10476, metadata !DIExpression()), !dbg !10477
  %2 = icmp slt i32 %0, 32, !dbg !10478
  br i1 %2, label %3, label %5, !dbg !10480

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10481
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !10483
  br label %5, !dbg !10484

5:                                                ; preds = %1, %3
  ret void, !dbg !10485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10488, metadata !DIExpression()), !dbg !10489
  %2 = xor i32 %0, -1, !dbg !10490
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10490
  %4 = and i32 %3, %2, !dbg !10490
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10490
  ret void, !dbg !10491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !10492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10496, metadata !DIExpression()), !dbg !10498
  call void @llvm.dbg.value(metadata i32 %1, metadata !10497, metadata !DIExpression()), !dbg !10498
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10499

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10500
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !10502
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !10503
  br label %11, !dbg !10504

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10505
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !10506
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !10507
  br label %11, !dbg !10508

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10509
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !10510
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !10511
  br label %11, !dbg !10512

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10513
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !10514
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !10515
  br label %11, !dbg !10516

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10520, metadata !DIExpression()), !dbg !10521
  %2 = xor i32 %0, -1, !dbg !10522
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10522
  %4 = and i32 %3, %2, !dbg !10522
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10522
  ret void, !dbg !10523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10526, metadata !DIExpression()), !dbg !10527
  %2 = xor i32 %0, -1, !dbg !10528
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10528
  %4 = and i32 %3, %2, !dbg !10528
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10528
  ret void, !dbg !10529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10532, metadata !DIExpression()), !dbg !10533
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10534
  %3 = or i32 %2, %0, !dbg !10534
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10534
  ret void, !dbg !10535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10538, metadata !DIExpression()), !dbg !10539
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10540
  %3 = or i32 %2, %0, !dbg !10540
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10540
  ret void, !dbg !10541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !10542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10546, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10547, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata i8* %2, metadata !10548, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !10549, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10551, metadata !DIExpression()), !dbg !10552
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10553
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10553
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10555
  br i1 %6, label %7, label %9, !dbg !10556

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10557
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10558
  store i8* %2, i8** %8, align 4, !dbg !10559
  br label %9, !dbg !10560

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10552
  ret i32 %10, !dbg !10561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !10562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10564, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !10565, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10566, metadata !DIExpression()), !dbg !10567
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10568
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10569
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10570
  store i8* null, i8** %3, align 4, !dbg !10571
  ret void, !dbg !10572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !10573 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10575, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8* %1, metadata !10576, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8* %1, metadata !10577, metadata !DIExpression()), !dbg !10580
  %3 = bitcast i8* %1 to i32*, !dbg !10581
  %4 = load i32, i32* %3, align 4, !dbg !10581
  %5 = add i32 %4, -169, !dbg !10581
  %6 = icmp ult i32 %5, -121, !dbg !10581
  br i1 %6, label %15, label %7, !dbg !10583

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10584
  %9 = inttoptr i32 %8 to i32*, !dbg !10585
  call void @llvm.dbg.value(metadata i32* %9, metadata !10578, metadata !DIExpression()), !dbg !10580
  %10 = load volatile i32, i32* %9, align 4, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %10, metadata !10579, metadata !DIExpression()), !dbg !10580
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10587
  %12 = bitcast i8* %11 to i32*, !dbg !10587
  %13 = load i32, i32* %12, align 4, !dbg !10587
  %14 = or i32 %13, %10, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %14, metadata !10579, metadata !DIExpression()), !dbg !10580
  store volatile i32 %14, i32* %9, align 4, !dbg !10589
  br label %15, !dbg !10590

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10580
  ret i32 %16, !dbg !10591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !10592 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10594, metadata !DIExpression()), !dbg !10599
  call void @llvm.dbg.value(metadata i8* %1, metadata !10595, metadata !DIExpression()), !dbg !10599
  call void @llvm.dbg.value(metadata i8* %1, metadata !10596, metadata !DIExpression()), !dbg !10599
  %3 = bitcast i8* %1 to i32*, !dbg !10600
  %4 = load i32, i32* %3, align 4, !dbg !10600
  %5 = add i32 %4, -169, !dbg !10600
  %6 = icmp ult i32 %5, -121, !dbg !10600
  br i1 %6, label %16, label %7, !dbg !10602

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10603
  %9 = inttoptr i32 %8 to i32*, !dbg !10604
  call void @llvm.dbg.value(metadata i32* %9, metadata !10597, metadata !DIExpression()), !dbg !10599
  %10 = load volatile i32, i32* %9, align 4, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %10, metadata !10598, metadata !DIExpression()), !dbg !10599
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10606
  %12 = bitcast i8* %11 to i32*, !dbg !10606
  %13 = load i32, i32* %12, align 4, !dbg !10606
  %14 = xor i32 %13, -1, !dbg !10607
  %15 = and i32 %10, %14, !dbg !10608
  call void @llvm.dbg.value(metadata i32 %15, metadata !10598, metadata !DIExpression()), !dbg !10599
  store volatile i32 %15, i32* %9, align 4, !dbg !10609
  br label %16, !dbg !10610

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10599
  ret i32 %17, !dbg !10611
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10614, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i8* %1, metadata !10615, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32* %2, metadata !10616, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i8* %1, metadata !10617, metadata !DIExpression()), !dbg !10622
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10623
  call void @llvm.dbg.value(metadata i32 %4, metadata !10618, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 undef, metadata !10619, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 undef, metadata !10620, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 %4, metadata !10621, metadata !DIExpression()), !dbg !10622
  %5 = bitcast i8* %1 to i32*, !dbg !10624
  %6 = load i32, i32* %5, align 4, !dbg !10624
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10625

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !10626
  call void @llvm.dbg.value(metadata i32 %8, metadata !10619, metadata !DIExpression()), !dbg !10622
  br label %19, !dbg !10627

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #27, !dbg !10629
  call void @llvm.dbg.value(metadata i32 %10, metadata !10620, metadata !DIExpression()), !dbg !10622
  br label %19, !dbg !10630

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !10631
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !10632
  br label %19, !dbg !10633

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !10634
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #27, !dbg !10635
  br label %19, !dbg !10636

17:                                               ; preds = %3
  br label %19, !dbg !10637

18:                                               ; preds = %3
  br label %19, !dbg !10638

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10639
  br label %21, !dbg !10640

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10622
  ret i32 %22, !dbg !10640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !10641 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10643, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i8* %1, metadata !10644, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i8* %2, metadata !10645, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i8* %1, metadata !10646, metadata !DIExpression()), !dbg !10651
  %4 = bitcast i8* %1 to i32*, !dbg !10652
  %5 = load i32, i32* %4, align 4, !dbg !10652
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %6, metadata !10650, metadata !DIExpression()), !dbg !10651
  %7 = icmp slt i32 %6, 0, !dbg !10654
  br i1 %7, label %22, label %8, !dbg !10656

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10646, metadata !DIExpression()), !dbg !10651
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10657
  %10 = bitcast i8* %9 to i32*, !dbg !10657
  %11 = load i32, i32* %10, align 4, !dbg !10657
  %12 = lshr i32 %11, 16, !dbg !10657
  %13 = and i32 %12, 7, !dbg !10657
  %14 = lshr i32 %11, 8, !dbg !10658
  %15 = and i32 %14, 31, !dbg !10658
  %16 = shl i32 %13, %15, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %16, metadata !10649, metadata !DIExpression()), !dbg !10651
  %17 = and i32 %11, 255, !dbg !10660
  %18 = or i32 %17, 1073887232, !dbg !10661
  %19 = inttoptr i32 %18 to i32*, !dbg !10662
  call void @llvm.dbg.value(metadata i32* %19, metadata !10647, metadata !DIExpression()), !dbg !10651
  %20 = load volatile i32, i32* %19, align 4, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %20, metadata !10648, metadata !DIExpression()), !dbg !10651
  %21 = or i32 %16, %20, !dbg !10664
  call void @llvm.dbg.value(metadata i32 %21, metadata !10648, metadata !DIExpression()), !dbg !10651
  store volatile i32 %21, i32* %19, align 4, !dbg !10665
  br label %22, !dbg !10666

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10651
  ret i32 %23, !dbg !10667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !10668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10672, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i32 0, metadata !10673, metadata !DIExpression()), !dbg !10674
  %2 = add i32 %0, -1, !dbg !10675
  %3 = icmp ult i32 %2, 6, !dbg !10675
  br i1 %3, label %4, label %7, !dbg !10675

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10675
  %6 = load i32, i32* %5, align 4, !dbg !10675
  call void @llvm.dbg.value(metadata i32 %6, metadata !10673, metadata !DIExpression()), !dbg !10674
  br label %7, !dbg !10676

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10674
  ret i32 %8, !dbg !10677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10682, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 %1, metadata !10683, metadata !DIExpression()), !dbg !10684
  %3 = udiv i32 %0, %1, !dbg !10685
  ret i32 %3, !dbg !10686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10691, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 8, metadata !10692, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 84, metadata !10693, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 %1, metadata !10694, metadata !DIExpression()), !dbg !10695
  %3 = mul i32 %0, 84, !dbg !10696
  %4 = shl nsw i32 %1, 3, !dbg !10697
  %5 = udiv i32 %3, %4, !dbg !10698
  ret i32 %5, !dbg !10699
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10700 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10702, metadata !DIExpression()), !dbg !10705
  tail call void @config_enable_default_clocks() #26, !dbg !10706
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !10707
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !10707
  %4 = lshr i32 %3, 4, !dbg !10707
  %5 = and i32 %4, 15, !dbg !10707
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10707
  %7 = load i8, i8* %6, align 1, !dbg !10707
  %8 = zext i8 %7 to i32, !dbg !10707
  %9 = lshr i32 %2, %8, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %9, metadata !10703, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10705
  %10 = icmp ult i32 %9, 84000000, !dbg !10708
  br i1 %10, label %11, label %13, !dbg !10710

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !10711
  br label %13, !dbg !10713

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !10714
  tail call fastcc void @set_up_plls() #27, !dbg !10715
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10716
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !10719
  br label %14, !dbg !10720

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10721
  %16 = icmp eq i32 %15, 8, !dbg !10722
  br i1 %16, label %17, label %14, !dbg !10720, !llvm.loop !10723

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10725
  br i1 %18, label %19, label %21, !dbg !10727

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !10728
  br label %21, !dbg !10730

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10731
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !10732
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !10733
  ret i32 0, !dbg !10734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10735 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10737
  %2 = and i32 %1, 240, !dbg !10737
  ret i32 %2, !dbg !10738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !10739 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !10740
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !10745
  br label %1, !dbg !10746

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !10747
  %3 = icmp eq i32 %2, 1, !dbg !10748
  br i1 %3, label %4, label %1, !dbg !10746, !llvm.loop !10749

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !10751
  br label %5, !dbg !10754

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !10755
  %7 = icmp eq i32 %6, 1, !dbg !10756
  br i1 %7, label %8, label %5, !dbg !10754, !llvm.loop !10757

8:                                                ; preds = %5
  ret void, !dbg !10759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10760 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10761
  %2 = icmp eq i32 %1, 8, !dbg !10763
  br i1 %2, label %3, label %4, !dbg !10764

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10765
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !10767
  br label %4, !dbg !10768

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !10769
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10770
  %6 = and i32 %5, -196609, !dbg !10770
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10770
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10771
  %8 = and i32 %7, -251658241, !dbg !10771
  %9 = or i32 %8, 134217728, !dbg !10771
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10771
  tail call void @config_pll_sysclock() #26, !dbg !10772
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !10773
  br label %10, !dbg !10774

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !10775
  %12 = icmp eq i32 %11, 1, !dbg !10776
  br i1 %12, label %13, label %10, !dbg !10774, !llvm.loop !10777

13:                                               ; preds = %10
  ret void, !dbg !10779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10780 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10782, metadata !DIExpression()), !dbg !10783
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10784
  %2 = and i32 %1, -241, !dbg !10784
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10784
  ret void, !dbg !10785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10788, metadata !DIExpression()), !dbg !10789
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10790
  %3 = and i32 %2, -4, !dbg !10790
  %4 = or i32 %3, %0, !dbg !10790
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10790
  ret void, !dbg !10791
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10792 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10793
  %2 = and i32 %1, 12, !dbg !10793
  ret i32 %2, !dbg !10794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10795 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10797, metadata !DIExpression()), !dbg !10798
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10799
  %2 = and i32 %1, -7169, !dbg !10799
  %3 = or i32 %2, 4096, !dbg !10799
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10799
  ret void, !dbg !10800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10801 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10803, metadata !DIExpression()), !dbg !10804
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10805
  %2 = and i32 %1, -57345, !dbg !10805
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10805
  ret void, !dbg !10806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10807 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10808
  %2 = icmp eq i32 %1, 1, !dbg !10810
  br i1 %2, label %7, label %3, !dbg !10811

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !10812
  br label %4, !dbg !10814

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10815
  %6 = icmp eq i32 %5, 1, !dbg !10816
  br i1 %6, label %7, label %4, !dbg !10814, !llvm.loop !10817

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !10819
  br label %8, !dbg !10820

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10821
  %10 = icmp eq i32 %9, 0, !dbg !10822
  br i1 %10, label %11, label %8, !dbg !10820, !llvm.loop !10823

11:                                               ; preds = %8
  ret void, !dbg !10825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10826 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10827
  %2 = and i32 %1, -16777217, !dbg !10827
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10827
  ret void, !dbg !10828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10829 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10830
  %2 = or i32 %1, 16777216, !dbg !10830
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10830
  ret void, !dbg !10831
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10832 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10833
  %2 = lshr i32 %1, 25, !dbg !10834
  %3 = and i32 %2, 1, !dbg !10834
  ret i32 %3, !dbg !10835
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10836 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10837
  %2 = lshr i32 %1, 1, !dbg !10838
  %3 = and i32 %2, 1, !dbg !10838
  ret i32 %3, !dbg !10839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10840 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10841
  %2 = or i32 %1, 1, !dbg !10841
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10841
  ret void, !dbg !10842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !10843 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10844
  %2 = and i32 %1, -262145, !dbg !10844
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10844
  ret void, !dbg !10845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !10846 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10847
  %2 = or i32 %1, 65536, !dbg !10847
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10847
  ret void, !dbg !10848
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10849 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10850
  %2 = lshr i32 %1, 17, !dbg !10851
  %3 = and i32 %2, 1, !dbg !10851
  ret i32 %3, !dbg !10852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10853 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10854
  %2 = or i32 %1, 1, !dbg !10854
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10854
  ret void, !dbg !10855
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10856 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10857
  %2 = lshr i32 %1, 1, !dbg !10858
  %3 = and i32 %2, 1, !dbg !10858
  ret i32 %3, !dbg !10859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10860 {
  ret i32 16000000, !dbg !10862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10866 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !10867
  ret void, !dbg !10868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10869 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10873, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 8, metadata !10874, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 84, metadata !10875, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata i32 0, metadata !10876, metadata !DIExpression()), !dbg !10877
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10878
  %2 = and i32 %1, -4227072, !dbg !10878
  %3 = or i32 %2, 4199688, !dbg !10878
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10878
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10879
  %5 = and i32 %4, -196609, !dbg !10879
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10879
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10880
  %7 = and i32 %6, -1879048193, !dbg !10880
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10880
  ret void, !dbg !10881
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !10882 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !10883
  ret void, !dbg !10884
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !10885 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10888, metadata !DIExpression()), !dbg !10890
  %2 = bitcast i32* %1 to i8*, !dbg !10891
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10891
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10889, metadata !DIExpression()), !dbg !10892
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10893
  %4 = or i32 %3, 268435456, !dbg !10893
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10893
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10894
  %6 = and i32 %5, 268435456, !dbg !10894
  store volatile i32 %6, i32* %1, align 4, !dbg !10895
  %7 = load volatile i32, i32* %1, align 4, !dbg !10896
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10897
  ret void, !dbg !10897
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10900, metadata !DIExpression()), !dbg !10901
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !10902
  br i1 %2, label %3, label %4, !dbg !10904

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !10905
  br label %4, !dbg !10906

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10901
  ret i32 %5, !dbg !10907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10908 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10913, metadata !DIExpression()), !dbg !10914
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10915, !srcloc !10917
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !10918
  ret i1 %1, !dbg !10919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10920 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !10921
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !10922
  ret void, !dbg !10923
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10926, metadata !DIExpression()), !dbg !10927
  %2 = icmp eq i32 %0, 10, !dbg !10928
  br i1 %2, label %3, label %4, !dbg !10930

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !10931
  br label %4, !dbg !10933

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10934
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !10935
  ret i32 %0, !dbg !10936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10937 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10940, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata i8 %0, metadata !10941, metadata !DIExpression()), !dbg !10942
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10943, !srcloc !10945
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !10946
  ret void, !dbg !10947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10950, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i8 %0, metadata !10951, metadata !DIExpression()), !dbg !10953
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10954
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10952, metadata !DIExpression()), !dbg !10953
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10955
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10955
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #26, !dbg !10956
  ret void, !dbg !10957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10958 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10960, metadata !DIExpression()), !dbg !10961
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !10962
  ret i1 %1, !dbg !10963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10964 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !11013, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !11014, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !11015, metadata !DIExpression()), !dbg !11016
  ret void, !dbg !11017
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11018 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11020, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i8 %1, metadata !11021, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %2, metadata !11022, metadata !DIExpression()), !dbg !11025
  %5 = bitcast i32* %4 to i8*, !dbg !11026
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11026
  call void @llvm.dbg.value(metadata i32* %4, metadata !11024, metadata !DIExpression(DW_OP_deref)), !dbg !11025
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !11023, metadata !DIExpression()), !dbg !11025
  %7 = icmp eq i32 %6, 0, !dbg !11028
  br i1 %7, label %8, label %31, !dbg !11030

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11023, metadata !DIExpression()), !dbg !11025
  %9 = and i32 %2, 131072, !dbg !11031
  %10 = icmp eq i32 %9, 0, !dbg !11033
  br i1 %10, label %28, label %11, !dbg !11034

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11035
  %13 = icmp eq i32 %12, 0, !dbg !11038
  br i1 %13, label %18, label %14, !dbg !11039

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11040
  %16 = shl nuw i32 1, %15, !dbg !11040
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !11042
  br label %25, !dbg !11043

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11044
  %20 = icmp eq i32 %19, 0, !dbg !11046
  %21 = zext i8 %1 to i32, !dbg !11025
  br i1 %20, label %25, label %22, !dbg !11047

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11048
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !11050
  br label %25, !dbg !11051

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11052
  %27 = load i32, i32* %4, align 4, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %30, metadata !11024, metadata !DIExpression()), !dbg !11025
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !11054
  br label %31, !dbg !11055

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11052
  %30 = load i32, i32* %4, align 4, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %30, metadata !11024, metadata !DIExpression()), !dbg !11025
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !11054
  call void @llvm.dbg.value(metadata i32 0, metadata !11023, metadata !DIExpression()), !dbg !11025
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11056
  ret i32 %6, !dbg !11056
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11061, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32* %1, metadata !11062, metadata !DIExpression()), !dbg !11066
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11067
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11067
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11067
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11063, metadata !DIExpression()), !dbg !11066
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11068
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11068
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11068
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11065, metadata !DIExpression()), !dbg !11066
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !11069
  store i32 %9, i32* %1, align 4, !dbg !11070
  ret i32 0, !dbg !11071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !11072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11074, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %1, metadata !11075, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %2, metadata !11076, metadata !DIExpression()), !dbg !11080
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11081
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11081
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11081
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11077, metadata !DIExpression()), !dbg !11080
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11082
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11082
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11082
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11078, metadata !DIExpression()), !dbg !11080
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !11083
  call void @llvm.dbg.value(metadata i32 %10, metadata !11079, metadata !DIExpression()), !dbg !11080
  %11 = xor i32 %1, -1, !dbg !11084
  %12 = and i32 %10, %11, !dbg !11085
  %13 = and i32 %2, %1, !dbg !11086
  %14 = or i32 %12, %13, !dbg !11087
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !11088
  ret i32 0, !dbg !11089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11090 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11092, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.value(metadata i32 %1, metadata !11093, metadata !DIExpression()), !dbg !11096
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11097
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11097
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11097
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11094, metadata !DIExpression()), !dbg !11096
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11098
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11098
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11098
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11095, metadata !DIExpression()), !dbg !11096
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11099
  store volatile i32 %1, i32* %9, align 4, !dbg !11099
  ret i32 0, !dbg !11100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11101 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11103, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %1, metadata !11104, metadata !DIExpression()), !dbg !11107
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11108
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11108
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11108
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11105, metadata !DIExpression()), !dbg !11107
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11109
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11109
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11109
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11106, metadata !DIExpression()), !dbg !11107
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !11110
  ret i32 0, !dbg !11111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11114, metadata !DIExpression()), !dbg !11118
  call void @llvm.dbg.value(metadata i32 %1, metadata !11115, metadata !DIExpression()), !dbg !11118
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11119
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11119
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11119
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11116, metadata !DIExpression()), !dbg !11118
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11120
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11120
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11120
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11117, metadata !DIExpression()), !dbg !11118
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11121
  %10 = load volatile i32, i32* %9, align 4, !dbg !11121
  %11 = xor i32 %10, %1, !dbg !11121
  store volatile i32 %11, i32* %9, align 4, !dbg !11121
  ret i32 0, !dbg !11122
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11123 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11125, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i8 %1, metadata !11126, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 %2, metadata !11127, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 %3, metadata !11128, metadata !DIExpression()), !dbg !11135
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11136
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11136
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11136
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11129, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i8* undef, metadata !11130, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 0, metadata !11132, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 0, metadata !11133, metadata !DIExpression()), !dbg !11135
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11137

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11138
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !11142
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11143
  %12 = load i32, i32* %11, align 4, !dbg !11143
  %13 = icmp eq i32 %10, %12, !dbg !11144
  br i1 %13, label %14, label %29, !dbg !11145

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !11146
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !11148
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !11149
  br label %29, !dbg !11150

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11151
  %17 = load i8*, i8** %16, align 4, !dbg !11151
  call void @llvm.dbg.value(metadata i8* %17, metadata !11130, metadata !DIExpression()), !dbg !11135
  %18 = zext i8 %1 to i32, !dbg !11152
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !11154
  %20 = icmp eq i32 %19, 0, !dbg !11155
  br i1 %20, label %21, label %29, !dbg !11156

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11157
  %23 = load i32, i32* %22, align 4, !dbg !11157
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !11158
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11159

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11132, metadata !DIExpression()), !dbg !11135
  br label %27, !dbg !11160

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11132, metadata !DIExpression()), !dbg !11135
  br label %27, !dbg !11162

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11132, metadata !DIExpression()), !dbg !11135
  br label %27, !dbg !11163

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11135
  call void @llvm.dbg.value(metadata i32 %28, metadata !11132, metadata !DIExpression()), !dbg !11135
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !11164
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !11165
  br label %29, !dbg !11165

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11135
  call void @llvm.dbg.value(metadata i32 %30, metadata !11133, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.label(metadata !11134), !dbg !11166
  ret i32 %30, !dbg !11167
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !11168 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11170, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11171, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata i1 %2, metadata !11172, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11174
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11175
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11175
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11175
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11173, metadata !DIExpression()), !dbg !11174
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11176
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !11177
  ret i32 %8, !dbg !11178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !11179 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11185, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11186, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.value(metadata i1 %2, metadata !11187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11188
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !11189
  br i1 %4, label %5, label %6, !dbg !11192

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.173, i32 0, i32 0), i32 noundef 42) #26, !dbg !11193
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.174, i32 0, i32 0)) #26, !dbg !11193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.173, i32 0, i32 0), i32 noundef 42) #26, !dbg !11193
  unreachable, !dbg !11193

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !11195
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !11195
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !11195
  br i1 %9, label %10, label %11, !dbg !11198

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.173, i32 0, i32 0), i32 noundef 43) #26, !dbg !11199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.176, i32 0, i32 0)) #26, !dbg !11199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.173, i32 0, i32 0), i32 noundef 43) #26, !dbg !11199
  unreachable, !dbg !11199

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !11201
  br i1 %12, label %18, label %13, !dbg !11203

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11204
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #27, !dbg !11207
  %16 = or i1 %15, %2, !dbg !11208
  %17 = select i1 %16, i32 0, i32 -22, !dbg !11208
  br i1 %2, label %19, label %21, !dbg !11208

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !11209

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11210
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #27, !dbg !11213
  br label %21, !dbg !11214

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !11188
  ret i32 %22, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11216 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11220, metadata !DIExpression()), !dbg !11221
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11222
  %3 = icmp eq %struct._snode* %2, null, !dbg !11222
  ret i1 %3, !dbg !11222
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !11223 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11227, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11228, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11229, metadata !DIExpression()), !dbg !11231
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11232
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11229, metadata !DIExpression()), !dbg !11231
  %4 = icmp eq %struct._snode* %3, null, !dbg !11234
  br i1 %4, label %15, label %5, !dbg !11232

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11229, metadata !DIExpression()), !dbg !11231
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11236
  br i1 %6, label %9, label %11, !dbg !11239

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11229, metadata !DIExpression()), !dbg !11231
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11236
  br i1 %8, label %9, label %11, !dbg !11239, !llvm.loop !11240

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !11241
  br label %15, !dbg !11241

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11229, metadata !DIExpression()), !dbg !11231
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !11234
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11230, metadata !DIExpression()), !dbg !11231
  %14 = icmp eq %struct._snode* %13, null, !dbg !11234
  br i1 %14, label %15, label %7, !dbg !11232, !llvm.loop !11240

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11244 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11248, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11249, metadata !DIExpression()), !dbg !11250
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11251
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !11251
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !11251
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11252
  %5 = icmp eq %struct._snode* %4, null, !dbg !11252
  br i1 %5, label %6, label %8, !dbg !11251

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11254
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !11254
  br label %8, !dbg !11254

8:                                                ; preds = %6, %2
  ret void, !dbg !11251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11256 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11260, metadata !DIExpression()), !dbg !11261
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11262
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11262
  ret %struct._snode* %3, !dbg !11263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11264 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11268, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11269, metadata !DIExpression()), !dbg !11270
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11271
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11272
  ret void, !dbg !11273
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11274 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11276, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11277, metadata !DIExpression()), !dbg !11278
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11279
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11280
  ret void, !dbg !11281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11284, metadata !DIExpression()), !dbg !11285
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11286
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11286
  ret %struct._snode* %3, !dbg !11287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11288 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11290, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11291, metadata !DIExpression()), !dbg !11292
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11293
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11294
  ret void, !dbg !11295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !11296 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11300, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11301, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11302, metadata !DIExpression()), !dbg !11303
  %4 = icmp eq %struct._snode* %1, null, !dbg !11304
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !11306
  br i1 %4, label %6, label %11, !dbg !11307

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !11308
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11310
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11310
  br i1 %8, label %9, label %15, !dbg !11308

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11312
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !11312
  br label %15, !dbg !11312

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !11314
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11316
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11316
  br i1 %13, label %14, label %15, !dbg !11314

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !11318
  br label %15, !dbg !11318

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !11307
  ret void, !dbg !11307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !11320 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = icmp eq %struct._snode* %0, null, !dbg !11326
  br i1 %2, label %5, label %3, !dbg !11326

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !11326
  br label %5, !dbg !11326

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11326
  ret %struct._snode* %6, !dbg !11326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11327 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11329, metadata !DIExpression()), !dbg !11330
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !11331
  ret %struct._snode* %2, !dbg !11331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11332 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11334, metadata !DIExpression()), !dbg !11335
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11336
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11336
  ret %struct._snode* %3, !dbg !11337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11340, metadata !DIExpression()), !dbg !11343
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !11344, !range !11345
  call void @llvm.dbg.value(metadata i32 %2, metadata !11341, metadata !DIExpression()), !dbg !11343
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !11346
  call void @llvm.dbg.value(metadata i32 %3, metadata !11342, metadata !DIExpression()), !dbg !11343
  ret i32 %3, !dbg !11347
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11350, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.value(metadata i8* %1, metadata !11351, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.value(metadata i8* %1, metadata !11352, metadata !DIExpression()), !dbg !11353
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11354
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11354
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11355
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11355
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11355
  %8 = shl nuw i32 1, %0, !dbg !11356
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !11357
  ret void, !dbg !11358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11359 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11363, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata i32 %1, metadata !11364, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11365, metadata !DIExpression()), !dbg !11369
  %4 = bitcast i64* %3 to i8*, !dbg !11370
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11370
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11367, metadata !DIExpression()), !dbg !11369
  store i64 70368744177732, i64* %3, align 8, !dbg !11371
  call void @llvm.dbg.value(metadata i64* %3, metadata !11367, metadata !DIExpression(DW_OP_deref)), !dbg !11369
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !11372
  call void @llvm.dbg.value(metadata i32 %5, metadata !11368, metadata !DIExpression()), !dbg !11369
  %6 = icmp eq i32 %5, 0, !dbg !11373
  br i1 %6, label %7, label %8, !dbg !11375

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !11376
  br label %8, !dbg !11377

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11378
  ret void, !dbg !11378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11379 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11381, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.value(metadata i8* %0, metadata !11382, metadata !DIExpression()), !dbg !11384
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11385
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11383, metadata !DIExpression()), !dbg !11384
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11386
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11386
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !11387
  ret i32 %5, !dbg !11388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11391, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata i32 %1, metadata !11392, metadata !DIExpression()), !dbg !11394
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !11395
  call void @llvm.dbg.value(metadata i32 %3, metadata !11393, metadata !DIExpression()), !dbg !11394
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !11396
  ret void, !dbg !11397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !11398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11402, metadata !DIExpression()), !dbg !11403
  %2 = sdiv i32 %0, 4, !dbg !11404
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11405
  %6 = add nsw i32 %5, 16, !dbg !11406
  %7 = shl i32 15, %6, !dbg !11407
  %8 = or i32 %7, %2, !dbg !11408
  ret i32 %8, !dbg !11409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11414, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i32 %1, metadata !11415, metadata !DIExpression()), !dbg !11416
  %3 = and i32 %1, 255, !dbg !11417
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11417
  %5 = load volatile i32, i32* %4, align 4, !dbg !11417
  %6 = lshr i32 %1, 16, !dbg !11417
  %7 = xor i32 %6, -1, !dbg !11417
  %8 = and i32 %5, %7, !dbg !11417
  call void @llvm.dbg.value(metadata i32 %6, metadata !11418, metadata !DIExpression()) #25, !dbg !11422
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11424, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 %9, metadata !11421, metadata !DIExpression()) #25, !dbg !11422
  call void @llvm.dbg.value(metadata i32 %9, metadata !11426, metadata !DIExpression()) #25, !dbg !11431
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11433, !range !5541
  %11 = shl i32 %0, %10, !dbg !11417
  %12 = or i32 %11, %8, !dbg !11417
  store volatile i32 %12, i32* %4, align 4, !dbg !11417
  ret void, !dbg !11434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11435 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11439, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11440, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata i32 %2, metadata !11441, metadata !DIExpression()), !dbg !11444
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11445
  %5 = icmp eq %struct._snode* %4, null, !dbg !11445
  br i1 %5, label %24, label %6, !dbg !11445

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !11447
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11443, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !11442, metadata !DIExpression()), !dbg !11444
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11448
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !11448
  %12 = load i32, i32* %11, align 4, !dbg !11448
  %13 = and i32 %12, %2, !dbg !11452
  %14 = icmp eq i32 %13, 0, !dbg !11452
  br i1 %14, label %22, label %15, !dbg !11453

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11454
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11454
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11454
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !11454
  br i1 %19, label %20, label %21, !dbg !11458

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.173, i32 0, i32 0), i32 noundef 77) #26, !dbg !11459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.176, i32 0, i32 0)) #26, !dbg !11459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.173, i32 0, i32 0), i32 noundef 77) #26, !dbg !11459
  unreachable, !dbg !11459

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !11461
  br label %22, !dbg !11462

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11442, metadata !DIExpression()), !dbg !11444
  %23 = icmp eq %struct._snode* %8, null, !dbg !11463
  br i1 %23, label %24, label %6, !dbg !11463

24:                                               ; preds = %22, %3
  ret void, !dbg !11464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11467, metadata !DIExpression()), !dbg !11468
  %2 = and i32 %0, 255, !dbg !11469
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11469
  %4 = load volatile i32, i32* %3, align 4, !dbg !11469
  %5 = lshr i32 %0, 16, !dbg !11469
  %6 = and i32 %4, %5, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %5, metadata !11418, metadata !DIExpression()) #25, !dbg !11470
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11472, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 %7, metadata !11421, metadata !DIExpression()) #25, !dbg !11470
  call void @llvm.dbg.value(metadata i32 %7, metadata !11426, metadata !DIExpression()) #25, !dbg !11473
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11475, !range !5541
  %9 = lshr i32 %6, %8, !dbg !11476
  ret i32 %9, !dbg !11477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11478 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11483, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i32 %1, metadata !11484, metadata !DIExpression()), !dbg !11485
  %3 = shl i32 %1, 16, !dbg !11486
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11486
  store volatile i32 %3, i32* %4, align 4, !dbg !11486
  ret void, !dbg !11487
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11488 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11492, metadata !DIExpression()), !dbg !11493
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11494
  %3 = load volatile i32, i32* %2, align 4, !dbg !11494
  ret i32 %3, !dbg !11495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11496 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11498, metadata !DIExpression()), !dbg !11500
  call void @llvm.dbg.value(metadata i32 %1, metadata !11499, metadata !DIExpression()), !dbg !11500
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11501
  store volatile i32 %1, i32* %3, align 4, !dbg !11501
  ret void, !dbg !11502
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11503 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11505, metadata !DIExpression()), !dbg !11506
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11507
  %3 = load volatile i32, i32* %2, align 4, !dbg !11507
  ret i32 %3, !dbg !11508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !11509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11513, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.value(metadata i32* %1, metadata !11514, metadata !DIExpression()), !dbg !11515
  %3 = and i32 %0, 131072, !dbg !11516
  %4 = icmp eq i32 %3, 0, !dbg !11518
  br i1 %4, label %22, label %5, !dbg !11519

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11520
  %6 = and i32 %0, 2, !dbg !11522
  %7 = icmp eq i32 %6, 0, !dbg !11524
  br i1 %7, label %11, label %8, !dbg !11525

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11526
  %10 = icmp eq i32 %9, 0, !dbg !11526
  br i1 %10, label %33, label %11, !dbg !11529

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11530
  store i32 %12, i32* %1, align 4, !dbg !11530
  %13 = and i32 %0, 16, !dbg !11531
  %14 = icmp eq i32 %13, 0, !dbg !11533
  br i1 %14, label %17, label %15, !dbg !11534

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11535
  br label %31, !dbg !11537

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11538
  %19 = icmp eq i32 %18, 0, !dbg !11540
  br i1 %19, label %33, label %20, !dbg !11541

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11542
  br label %31, !dbg !11544

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11545
  %24 = icmp eq i32 %23, 0, !dbg !11547
  br i1 %24, label %31, label %25, !dbg !11548

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11549
  %27 = icmp eq i32 %26, 0, !dbg !11552
  br i1 %27, label %28, label %31, !dbg !11553

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11554
  br label %33, !dbg !11555

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11515
  ret i32 %34, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11560, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %1, metadata !11561, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %2, metadata !11562, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %3, metadata !11563, metadata !DIExpression()), !dbg !11571
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11572
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11572
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11572
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11564, metadata !DIExpression()), !dbg !11571
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11573
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11573
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11573
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11565, metadata !DIExpression()), !dbg !11571
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %11, metadata !11566, metadata !DIExpression()), !dbg !11571
  %12 = and i32 %2, 48, !dbg !11575
  call void @llvm.dbg.value(metadata i32 %12, metadata !11567, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %2, metadata !11568, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %2, metadata !11569, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11571
  call void @llvm.dbg.value(metadata i32 %2, metadata !11570, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11571
  %13 = lshr i32 %2, 6, !dbg !11576
  %14 = and i32 %13, 1, !dbg !11576
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !11577
  %15 = lshr i32 %2, 7, !dbg !11578
  %16 = and i32 %15, 3, !dbg !11578
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !11579
  %17 = lshr i32 %2, 9, !dbg !11580
  %18 = and i32 %17, 3, !dbg !11580
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !11581
  %19 = icmp eq i32 %12, 32, !dbg !11582
  br i1 %19, label %20, label %24, !dbg !11584

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11585
  br i1 %21, label %22, label %23, !dbg !11588

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11589
  br label %24, !dbg !11591

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11592
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11594
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !11595
  ret void, !dbg !11596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !11597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11599, metadata !DIExpression()), !dbg !11601
  %2 = shl nuw i32 1, %0, !dbg !11602
  call void @llvm.dbg.value(metadata i32 %2, metadata !11600, metadata !DIExpression()), !dbg !11601
  ret i32 %2, !dbg !11603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11604 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11608, metadata !DIExpression()), !dbg !11611
  call void @llvm.dbg.value(metadata i32 %1, metadata !11609, metadata !DIExpression()), !dbg !11611
  call void @llvm.dbg.value(metadata i32 %2, metadata !11610, metadata !DIExpression()), !dbg !11611
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11612
  %5 = load volatile i32, i32* %4, align 4, !dbg !11612
  %6 = xor i32 %1, -1, !dbg !11612
  %7 = and i32 %5, %6, !dbg !11612
  %8 = mul i32 %2, %1, !dbg !11612
  %9 = or i32 %7, %8, !dbg !11612
  store volatile i32 %9, i32* %4, align 4, !dbg !11612
  ret void, !dbg !11613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11614 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11616, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i32 %1, metadata !11617, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i32 %2, metadata !11618, metadata !DIExpression()), !dbg !11619
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11620
  %5 = load volatile i32, i32* %4, align 4, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11621
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11623, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11621
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11624
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11626, !range !5541
  %8 = shl nuw nsw i32 %7, 1, !dbg !11620
  %9 = shl i32 3, %8, !dbg !11620
  %10 = xor i32 %9, -1, !dbg !11620
  %11 = and i32 %5, %10, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11629
  %12 = shl i32 %2, %8, !dbg !11620
  %13 = or i32 %11, %12, !dbg !11620
  store volatile i32 %13, i32* %4, align 4, !dbg !11620
  ret void, !dbg !11631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11632 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11634, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %1, metadata !11635, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %2, metadata !11636, metadata !DIExpression()), !dbg !11637
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11638
  %5 = load volatile i32, i32* %4, align 4, !dbg !11638
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11639
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11641, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11639
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11642
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11644, !range !5541
  %8 = shl nuw nsw i32 %7, 1, !dbg !11638
  %9 = shl i32 3, %8, !dbg !11638
  %10 = xor i32 %9, -1, !dbg !11638
  %11 = and i32 %5, %10, !dbg !11638
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11645
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11645
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11647
  %12 = shl i32 %2, %8, !dbg !11638
  %13 = or i32 %11, %12, !dbg !11638
  store volatile i32 %13, i32* %4, align 4, !dbg !11638
  ret void, !dbg !11649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11650 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11652, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.value(metadata i32 %1, metadata !11653, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.value(metadata i32 %2, metadata !11654, metadata !DIExpression()), !dbg !11655
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11656
  %5 = load volatile i32, i32* %4, align 4, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11657
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11659, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11660
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11662, !range !5541
  %8 = shl nuw nsw i32 %7, 2, !dbg !11656
  %9 = shl i32 15, %8, !dbg !11656
  %10 = xor i32 %9, -1, !dbg !11656
  %11 = and i32 %5, %10, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11665
  %12 = shl i32 %2, %8, !dbg !11656
  %13 = or i32 %11, %12, !dbg !11656
  store volatile i32 %13, i32* %4, align 4, !dbg !11656
  ret void, !dbg !11667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11668 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %1, metadata !11671, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %2, metadata !11672, metadata !DIExpression()), !dbg !11673
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11674
  %5 = load volatile i32, i32* %4, align 4, !dbg !11674
  %6 = lshr i32 %1, 8, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %6, metadata !11418, metadata !DIExpression()) #25, !dbg !11675
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11677, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 %7, metadata !11421, metadata !DIExpression()) #25, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %7, metadata !11426, metadata !DIExpression()) #25, !dbg !11678
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11680, !range !5541
  %9 = shl nuw nsw i32 %8, 2, !dbg !11674
  %10 = shl i32 15, %9, !dbg !11674
  %11 = xor i32 %10, -1, !dbg !11674
  %12 = and i32 %5, %11, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %6, metadata !11418, metadata !DIExpression()) #25, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %7, metadata !11421, metadata !DIExpression()) #25, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %7, metadata !11426, metadata !DIExpression()) #25, !dbg !11683
  %13 = shl i32 %2, %9, !dbg !11674
  %14 = or i32 %12, %13, !dbg !11674
  store volatile i32 %14, i32* %4, align 4, !dbg !11674
  ret void, !dbg !11685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11686 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11688, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.value(metadata i32 %1, metadata !11689, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.value(metadata i32 %2, metadata !11690, metadata !DIExpression()), !dbg !11691
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11692
  %5 = load volatile i32, i32* %4, align 4, !dbg !11692
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11693
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11695, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11693
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11696
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11698, !range !5541
  %8 = shl nuw nsw i32 %7, 1, !dbg !11692
  %9 = shl i32 3, %8, !dbg !11692
  %10 = xor i32 %9, -1, !dbg !11692
  %11 = and i32 %5, %10, !dbg !11692
  call void @llvm.dbg.value(metadata i32 %1, metadata !11418, metadata !DIExpression()) #25, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %6, metadata !11421, metadata !DIExpression()) #25, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %6, metadata !11426, metadata !DIExpression()) #25, !dbg !11701
  %12 = shl i32 %2, %8, !dbg !11692
  %13 = or i32 %11, %12, !dbg !11692
  store volatile i32 %13, i32* %4, align 4, !dbg !11692
  ret void, !dbg !11703
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11706, metadata !DIExpression()), !dbg !11709
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11710
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11710
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11710
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11707, metadata !DIExpression()), !dbg !11709
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11711
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11712
  %6 = tail call fastcc zeroext i1 @device_is_ready.186() #27, !dbg !11713
  br i1 %6, label %7, label %11, !dbg !11715

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %8, metadata !11708, metadata !DIExpression()), !dbg !11709
  %9 = icmp slt i32 %8, 0, !dbg !11717
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11719
  br label %11, !dbg !11719

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11709
  ret i32 %12, !dbg !11720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.186() unnamed_addr #1 !dbg !11721 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11725, metadata !DIExpression()), !dbg !11726
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11727, !srcloc !11729
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.187() #27, !dbg !11730
  ret i1 %1, !dbg !11731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11736, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i8 1, metadata !11737, metadata !DIExpression()), !dbg !11741
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11742
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11742
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11742
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11738, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i32 0, metadata !11739, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11740, metadata !DIExpression()), !dbg !11741
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11743
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11746
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %7, metadata !11739, metadata !DIExpression()), !dbg !11741
  ret i32 %7, !dbg !11748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.187() unnamed_addr #1 !dbg !11749 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11751, metadata !DIExpression()), !dbg !11752
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !11753
  ret i1 %1, !dbg !11754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11759, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32 %1, metadata !11760, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32 %2, metadata !11761, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32 %3, metadata !11762, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.value(metadata i32 0, metadata !11763, metadata !DIExpression()), !dbg !11767
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !11768
  %5 = icmp eq i32 %3, 17, !dbg !11769
  br i1 %5, label %6, label %14, !dbg !11770

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11771
  call void @llvm.dbg.value(metadata i32 %7, metadata !11764, metadata !DIExpression()), !dbg !11772
  %8 = icmp eq i32 %7, 0, !dbg !11773
  %9 = shl nuw i32 1, %1, !dbg !11775
  br i1 %8, label %12, label %10, !dbg !11776

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11777
  br label %14, !dbg !11779

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11780
  br label %14, !dbg !11783

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11784
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !11785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11787, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.value(metadata i8* %1, metadata !11788, metadata !DIExpression()), !dbg !11791
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11792
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11792
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11792
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11789, metadata !DIExpression()), !dbg !11791
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11793
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11793
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !11795
  %9 = icmp eq i32 %8, 0, !dbg !11795
  br i1 %9, label %12, label %10, !dbg !11796

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11797
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !11799
  br label %12, !dbg !11800

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11801
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11803
  %15 = icmp eq i32 %14, 0, !dbg !11803
  br i1 %15, label %19, label %16, !dbg !11804

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11805
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !11806
  store i8 %18, i8* %1, align 1, !dbg !11807
  br label %19, !dbg !11808

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11791
  ret i32 %20, !dbg !11809
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11812, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.value(metadata i8 %1, metadata !11813, metadata !DIExpression()), !dbg !11816
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11817
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11817
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11817
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11814, metadata !DIExpression()), !dbg !11816
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11818

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11819
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !11822
  %10 = icmp eq i32 %9, 0, !dbg !11822
  br i1 %10, label %18, label %11, !dbg !11823

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11824, !srcloc !11831
  call void @llvm.dbg.value(metadata i32 undef, metadata !11827, metadata !DIExpression()) #25, !dbg !11832
  call void @llvm.dbg.value(metadata i32 undef, metadata !11828, metadata !DIExpression()) #25, !dbg !11832
  call void @llvm.dbg.value(metadata i32 undef, metadata !11815, metadata !DIExpression()), !dbg !11816
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11833
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11835
  %15 = icmp eq i32 %14, 0, !dbg !11835
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11824
  br i1 %15, label %17, label %19, !dbg !11836

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11827, metadata !DIExpression()) #25, !dbg !11832
  call void @llvm.dbg.value(metadata i32 %16, metadata !11815, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.value(metadata i32 undef, metadata !11837, metadata !DIExpression()) #25, !dbg !11840
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11842, !srcloc !11843
  br label %18, !dbg !11844

18:                                               ; preds = %17, %7
  br label %7, !dbg !11819, !llvm.loop !11845

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11824
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11847
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %20, metadata !11837, metadata !DIExpression()) #25, !dbg !11849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11851, !srcloc !11843
  ret void, !dbg !11852
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !11853 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11855, metadata !DIExpression()), !dbg !11858
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11859
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11859
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11859
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11856, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 0, metadata !11857, metadata !DIExpression()), !dbg !11858
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11860
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11860
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !11862
  %8 = icmp ne i32 %7, 0, !dbg !11862
  %9 = zext i1 %8 to i32, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %9, metadata !11857, metadata !DIExpression()), !dbg !11858
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11864
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !11866
  %12 = icmp eq i32 %11, 0, !dbg !11866
  %13 = or i32 %9, 2, !dbg !11867
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11867
  call void @llvm.dbg.value(metadata i32 %14, metadata !11857, metadata !DIExpression()), !dbg !11858
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11868
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !11870
  %17 = icmp eq i32 %16, 0, !dbg !11870
  %18 = or i32 %14, 4, !dbg !11871
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11871
  call void @llvm.dbg.value(metadata i32 %19, metadata !11857, metadata !DIExpression()), !dbg !11858
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11872
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !11874
  %22 = icmp eq i32 %21, 0, !dbg !11874
  %23 = or i32 %19, 8, !dbg !11875
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %24, metadata !11857, metadata !DIExpression()), !dbg !11858
  %25 = and i32 %24, 8, !dbg !11876
  %26 = icmp eq i32 %25, 0, !dbg !11876
  br i1 %26, label %29, label %27, !dbg !11878

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11879
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !11881
  br label %29, !dbg !11882

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11883
  %31 = icmp eq i32 %30, 0, !dbg !11883
  br i1 %31, label %34, label %32, !dbg !11885

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11886
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !11888
  br label %34, !dbg !11889

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11890
  %36 = icmp eq i32 %35, 0, !dbg !11890
  br i1 %36, label %39, label %37, !dbg !11892

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11893
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !11895
  br label %39, !dbg !11896

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11897
  %41 = icmp eq i32 %40, 0, !dbg !11897
  br i1 %41, label %44, label %42, !dbg !11899

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11900
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !11902
  br label %44, !dbg !11903

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11904
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !11905
  ret i32 %24, !dbg !11906
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11909, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11910, metadata !DIExpression()), !dbg !11918
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11919
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11919
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11919
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11911, metadata !DIExpression()), !dbg !11918
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11920
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11920
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11920
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11912, metadata !DIExpression()), !dbg !11918
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11921
  %10 = load i8, i8* %9, align 4, !dbg !11921
  %11 = zext i8 %10 to i32, !dbg !11922
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !11923
  call void @llvm.dbg.value(metadata i32 %12, metadata !11914, metadata !DIExpression()), !dbg !11918
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11924
  %14 = load i8, i8* %13, align 1, !dbg !11924
  %15 = zext i8 %14 to i32, !dbg !11925
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %16, metadata !11915, metadata !DIExpression()), !dbg !11918
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11927
  %18 = load i8, i8* %17, align 2, !dbg !11927
  %19 = zext i8 %18 to i32, !dbg !11928
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %20, metadata !11916, metadata !DIExpression()), !dbg !11918
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11930
  %22 = load i8, i8* %21, align 1, !dbg !11930
  %23 = zext i8 %22 to i32, !dbg !11931
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !11932
  call void @llvm.dbg.value(metadata i32 %24, metadata !11917, metadata !DIExpression()), !dbg !11918
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11933

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11935
  br i1 %26, label %69, label %27, !dbg !11937

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11938

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11939
  br i1 %29, label %65, label %30, !dbg !11939

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11941
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11918
  br i1 %31, label %38, label %34, !dbg !11943

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11944
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !11944

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11947
  br i1 %37, label %38, label %69, !dbg !11948

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11949
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !11950
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !11951
  %41 = icmp eq i32 %12, %40, !dbg !11953
  br i1 %41, label %43, label %42, !dbg !11954

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !11955
  br label %43, !dbg !11957

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !11958
  %45 = icmp eq i32 %16, %44, !dbg !11960
  br i1 %45, label %47, label %46, !dbg !11961

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !11962
  br label %47, !dbg !11964

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !11965
  %49 = icmp eq i32 %20, %48, !dbg !11967
  br i1 %49, label %51, label %50, !dbg !11968

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !11969
  br label %51, !dbg !11971

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !11972
  %53 = icmp eq i32 %24, %52, !dbg !11974
  br i1 %53, label %55, label %54, !dbg !11975

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !11976
  br label %55, !dbg !11978

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11979
  %57 = load i32, i32* %56, align 4, !dbg !11979
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11981
  %59 = load i32, i32* %58, align 4, !dbg !11981
  %60 = icmp eq i32 %57, %59, !dbg !11982
  br i1 %60, label %63, label %61, !dbg !11983

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !11984
  %62 = load i32, i32* %56, align 4, !dbg !11986
  store i32 %62, i32* %58, align 4, !dbg !11987
  br label %63, !dbg !11988

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11989
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !11990
  br label %69, !dbg !11991

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11939
  %67 = and i8 %66, 1, !dbg !11939
  %68 = icmp eq i8 %67, 0, !dbg !11939
  br i1 %68, label %30, label %69, !dbg !11939

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11918
  ret i32 %70, !dbg !11992
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11995, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11996, metadata !DIExpression()), !dbg !11998
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11999
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11999
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11999
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11997, metadata !DIExpression()), !dbg !11998
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12000
  %7 = load i32, i32* %6, align 4, !dbg !12000
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12001
  store i32 %7, i32* %8, align 4, !dbg !12002
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !12003, !range !12004
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !12005
  %11 = trunc i32 %10 to i8, !dbg !12005
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12006
  store i8 %11, i8* %12, align 4, !dbg !12007
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !12008, !range !12009
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !12010
  %15 = trunc i32 %14 to i8, !dbg !12010
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12011
  store i8 %15, i8* %16, align 1, !dbg !12012
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !12013
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !12014, !range !12004
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !12015
  %20 = trunc i32 %19 to i8, !dbg !12015
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12016
  store i8 %20, i8* %21, align 2, !dbg !12017
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !12018, !range !12019
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !12020
  %24 = trunc i32 %23 to i8, !dbg !12020
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12021
  store i8 %24, i8* %25, align 1, !dbg !12022
  ret i32 0, !dbg !12023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12028, metadata !DIExpression()), !dbg !12030
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12031
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12031
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12031
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12029, metadata !DIExpression()), !dbg !12030
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12032
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12032
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !12033
  ret i32 %7, !dbg !12034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !12035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12039, metadata !DIExpression()), !dbg !12040
  %2 = icmp eq i32 %0, 1024, !dbg !12041
  %3 = select i1 %2, i32 2, i32 0, !dbg !12041
  %4 = icmp eq i32 %0, 1536, !dbg !12041
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12041
  ret i32 %5, !dbg !12042
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12043 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12045, metadata !DIExpression()), !dbg !12047
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12048
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12048
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12048
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12046, metadata !DIExpression()), !dbg !12047
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12049
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12049
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !12050
  ret i32 %7, !dbg !12051
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !12052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12056, metadata !DIExpression()), !dbg !12057
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12058
  %3 = icmp ult i32 %2, 4, !dbg !12058
  br i1 %3, label %4, label %7, !dbg !12058

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12058
  %6 = load i32, i32* %5, align 4, !dbg !12058
  br label %7, !dbg !12058

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12059
  ret i32 %8, !dbg !12061
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12064, metadata !DIExpression()), !dbg !12066
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12067
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12067
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12067
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12065, metadata !DIExpression()), !dbg !12066
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12068
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12068
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !12069
  ret i32 %7, !dbg !12070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12075, metadata !DIExpression()), !dbg !12077
  call void @llvm.dbg.value(metadata i32 %1, metadata !12076, metadata !DIExpression()), !dbg !12077
  %3 = icmp eq i32 %0, 4096, !dbg !12078
  %4 = icmp eq i32 %1, 0, !dbg !12078
  %5 = select i1 %4, i32 4, i32 3, !dbg !12078
  %6 = select i1 %4, i32 3, i32 2, !dbg !12078
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12078
  ret i32 %7, !dbg !12079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12082, metadata !DIExpression()), !dbg !12084
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12085
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12085
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12085
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12083, metadata !DIExpression()), !dbg !12084
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12086
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12086
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !12087
  ret i32 %7, !dbg !12088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !12089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12093, metadata !DIExpression()), !dbg !12094
  %2 = icmp eq i32 %0, 768, !dbg !12095
  %3 = zext i1 %2 to i32, !dbg !12094
  ret i32 %3, !dbg !12097
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12098 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12103, metadata !DIExpression()), !dbg !12104
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12105
  %3 = load volatile i32, i32* %2, align 4, !dbg !12105
  %4 = and i32 %3, 768, !dbg !12105
  ret i32 %4, !dbg !12106
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12107 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12109, metadata !DIExpression()), !dbg !12110
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12111
  %3 = load volatile i32, i32* %2, align 4, !dbg !12111
  %4 = and i32 %3, 4096, !dbg !12111
  ret i32 %4, !dbg !12112
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12113 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12115, metadata !DIExpression()), !dbg !12116
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12117
  %3 = load volatile i32, i32* %2, align 4, !dbg !12117
  %4 = and i32 %3, 12288, !dbg !12117
  ret i32 %4, !dbg !12118
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12119 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12121, metadata !DIExpression()), !dbg !12122
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12123
  %3 = load volatile i32, i32* %2, align 4, !dbg !12123
  %4 = and i32 %3, 1536, !dbg !12123
  ret i32 %4, !dbg !12124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !12125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12129, metadata !DIExpression()), !dbg !12130
  %2 = icmp eq i32 %0, 2, !dbg !12131
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12131
  %4 = icmp eq i32 %0, 1, !dbg !12131
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12131
  ret i32 %5, !dbg !12132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !12133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12137, metadata !DIExpression()), !dbg !12138
  %2 = icmp ult i32 %0, 3, !dbg !12139
  br i1 %2, label %3, label %6, !dbg !12139

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12139
  %5 = load i32, i32* %4, align 4, !dbg !12139
  br label %6, !dbg !12139

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12140
  ret i32 %7, !dbg !12142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12147, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.value(metadata i32 %1, metadata !12148, metadata !DIExpression()), !dbg !12149
  %3 = icmp eq i32 %0, 4, !dbg !12150
  %4 = icmp eq i32 %1, 0, !dbg !12150
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12150
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12150
  ret i32 %6, !dbg !12151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !12152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12156, metadata !DIExpression()), !dbg !12157
  %2 = icmp eq i32 %0, 1, !dbg !12158
  %3 = select i1 %2, i32 768, i32 0, !dbg !12157
  ret i32 %3, !dbg !12160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12161 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12165, metadata !DIExpression()), !dbg !12166
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12167
  %3 = load volatile i32, i32* %2, align 4, !dbg !12167
  %4 = and i32 %3, -8193, !dbg !12167
  store volatile i32 %4, i32* %2, align 4, !dbg !12167
  ret void, !dbg !12168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12169 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12173, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 %1, metadata !12174, metadata !DIExpression()), !dbg !12176
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12177
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12177
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12177
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12175, metadata !DIExpression()), !dbg !12176
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12178
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12178
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12183, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 %1, metadata !12184, metadata !DIExpression()), !dbg !12186
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12187
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12187
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12187
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12185, metadata !DIExpression()), !dbg !12186
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12188
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12188
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12189
  ret void, !dbg !12190
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12191 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12193, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 %1, metadata !12194, metadata !DIExpression()), !dbg !12196
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12197
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12197
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12197
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12195, metadata !DIExpression()), !dbg !12196
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12198
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12198
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12199
  ret void, !dbg !12200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12203, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i32 %1, metadata !12204, metadata !DIExpression()), !dbg !12206
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12207
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12207
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12207
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12205, metadata !DIExpression()), !dbg !12206
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12208
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12208
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12209
  ret void, !dbg !12210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12211 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12213, metadata !DIExpression()), !dbg !12218
  call void @llvm.dbg.value(metadata i32 %1, metadata !12214, metadata !DIExpression()), !dbg !12218
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12219
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12219
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12215, metadata !DIExpression()), !dbg !12218
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12220
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12220
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12220
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12216, metadata !DIExpression()), !dbg !12218
  %10 = bitcast i32* %3 to i8*, !dbg !12221
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12221
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12222
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12222
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12226
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12226
  %15 = load i8*, i8** %14, align 4, !dbg !12226
  call void @llvm.dbg.value(metadata i32* %3, metadata !12217, metadata !DIExpression(DW_OP_deref)), !dbg !12218
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !12227
  %17 = icmp slt i32 %16, 0, !dbg !12228
  br i1 %17, label %18, label %21, !dbg !12229

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.190(i32 noundef 1) #27, !dbg !12230
  %20 = zext i8 %19 to i32, !dbg !12230
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.191, i32 0, i32 0), i32 noundef %20) #26, !dbg !12230
  br label %31, !dbg !12236

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12237
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12237
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !12238
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12239
  %25 = load i32, i32* %3, align 4, !dbg !12240
  call void @llvm.dbg.value(metadata i32 %25, metadata !12217, metadata !DIExpression()), !dbg !12218
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !12241
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12242
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !12242
  %28 = load volatile i32, i32* %27, align 4, !dbg !12242
  %29 = icmp ugt i32 %28, 16, !dbg !12242
  br i1 %29, label %31, label %30, !dbg !12245

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.194, i32 0, i32 0), i32 noundef 190) #26, !dbg !12246
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.195, i32 0, i32 0)) #26, !dbg !12246
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.194, i32 0, i32 0), i32 noundef 190) #26, !dbg !12246
  unreachable, !dbg !12246

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12248
  ret void, !dbg !12248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12249 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12251, metadata !DIExpression()), !dbg !12252
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12253
  %3 = load volatile i32, i32* %2, align 4, !dbg !12253
  %4 = or i32 %3, 8192, !dbg !12253
  store volatile i32 %4, i32* %2, align 4, !dbg !12253
  ret void, !dbg !12254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12257, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata i8* %1, metadata !12258, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata i32* %2, metadata !12259, metadata !DIExpression()), !dbg !12261
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12262
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12262
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12262
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12260, metadata !DIExpression()), !dbg !12261
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12263
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12263
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12265
  br i1 %9, label %12, label %10, !dbg !12266

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !12267
  br label %12, !dbg !12268

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12261
  ret i32 %13, !dbg !12269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.190(i32 noundef %0) unnamed_addr #4 !dbg !12270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12272, metadata !DIExpression()), !dbg !12273
  %2 = icmp eq i32 %0, 2, !dbg !12274
  %3 = select i1 %2, i8 87, i8 63, !dbg !12274
  %4 = icmp eq i32 %0, 1, !dbg !12274
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12274
  ret i8 %5, !dbg !12275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12276 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12280, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i32 0, metadata !12281, metadata !DIExpression()), !dbg !12282
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12283
  %3 = load volatile i32, i32* %2, align 4, !dbg !12283
  %4 = and i32 %3, -32769, !dbg !12283
  store volatile i32 %4, i32* %2, align 4, !dbg !12283
  ret void, !dbg !12284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12285 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12289, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 %1, metadata !12290, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 0, metadata !12291, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 %2, metadata !12292, metadata !DIExpression()), !dbg !12293
  %4 = zext i32 %1 to i64, !dbg !12294
  %5 = mul nuw nsw i64 %4, 25, !dbg !12294
  %6 = zext i32 %2 to i64, !dbg !12294
  %7 = shl nuw nsw i64 %6, 2, !dbg !12294
  %8 = udiv i64 %5, %7, !dbg !12294
  %9 = trunc i64 %8 to i32, !dbg !12294
  %10 = udiv i32 %9, 100, !dbg !12294
  %11 = shl nuw nsw i32 %10, 4, !dbg !12294
  %12 = mul i32 %10, -100, !dbg !12294
  %13 = add i32 %12, %9, !dbg !12294
  %14 = shl i32 %13, 4, !dbg !12294
  %15 = add i32 %14, 50, !dbg !12294
  %16 = udiv i32 %15, 100, !dbg !12294
  %17 = and i32 %16, 240, !dbg !12294
  %18 = add nuw nsw i32 %17, %11, !dbg !12294
  %19 = and i32 %16, 15, !dbg !12294
  %20 = and i32 %18, 65520, !dbg !12297
  %21 = or i32 %20, %19, !dbg !12297
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12298
  store volatile i32 %21, i32* %22, align 4, !dbg !12299
  ret void, !dbg !12300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12301 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12303, metadata !DIExpression()), !dbg !12305
  call void @llvm.dbg.value(metadata i32 %1, metadata !12304, metadata !DIExpression()), !dbg !12305
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12306
  %4 = load volatile i32, i32* %3, align 4, !dbg !12306
  %5 = and i32 %4, -769, !dbg !12306
  %6 = or i32 %5, %1, !dbg !12306
  store volatile i32 %6, i32* %3, align 4, !dbg !12306
  ret void, !dbg !12307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12308 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12310, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.value(metadata i32 %1, metadata !12311, metadata !DIExpression()), !dbg !12312
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12313
  %4 = load volatile i32, i32* %3, align 4, !dbg !12313
  %5 = and i32 %4, -4097, !dbg !12313
  %6 = or i32 %5, %1, !dbg !12313
  store volatile i32 %6, i32* %3, align 4, !dbg !12313
  ret void, !dbg !12314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12315 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12317, metadata !DIExpression()), !dbg !12319
  call void @llvm.dbg.value(metadata i32 %1, metadata !12318, metadata !DIExpression()), !dbg !12319
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12320
  %4 = load volatile i32, i32* %3, align 4, !dbg !12320
  %5 = and i32 %4, -12289, !dbg !12320
  %6 = or i32 %5, %1, !dbg !12320
  store volatile i32 %6, i32* %3, align 4, !dbg !12320
  ret void, !dbg !12321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12322 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12324, metadata !DIExpression()), !dbg !12326
  call void @llvm.dbg.value(metadata i32 %1, metadata !12325, metadata !DIExpression()), !dbg !12326
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12327
  %4 = load volatile i32, i32* %3, align 4, !dbg !12327
  %5 = and i32 %4, -1537, !dbg !12327
  %6 = or i32 %5, %1, !dbg !12327
  store volatile i32 %6, i32* %3, align 4, !dbg !12327
  ret void, !dbg !12328
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12329 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12331, metadata !DIExpression()), !dbg !12332
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12333
  %3 = load volatile i32, i32* %2, align 4, !dbg !12333
  %4 = lshr i32 %3, 3, !dbg !12334
  %5 = and i32 %4, 1, !dbg !12334
  ret i32 %5, !dbg !12335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12336 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12338, metadata !DIExpression()), !dbg !12339
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12340
  %3 = load volatile i32, i32* %2, align 4, !dbg !12340
  %4 = and i32 %3, 1, !dbg !12340
  ret i32 %4, !dbg !12341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12342 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12344, metadata !DIExpression()), !dbg !12345
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12346
  %3 = load volatile i32, i32* %2, align 4, !dbg !12346
  %4 = lshr i32 %3, 1, !dbg !12347
  %5 = and i32 %4, 1, !dbg !12347
  ret i32 %5, !dbg !12348
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12349 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12351, metadata !DIExpression()), !dbg !12352
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12353
  %3 = load volatile i32, i32* %2, align 4, !dbg !12353
  %4 = lshr i32 %3, 8, !dbg !12354
  %5 = and i32 %4, 1, !dbg !12354
  ret i32 %5, !dbg !12355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12356 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12358, metadata !DIExpression()), !dbg !12359
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12360
  store volatile i32 -257, i32* %2, align 4, !dbg !12360
  ret void, !dbg !12361
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12362 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12364, metadata !DIExpression()), !dbg !12366
  %3 = bitcast i32* %2 to i8*, !dbg !12367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12367
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12365, metadata !DIExpression()), !dbg !12368
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12369
  %5 = load volatile i32, i32* %4, align 4, !dbg !12369
  store volatile i32 %5, i32* %2, align 4, !dbg !12370
  %6 = load volatile i32, i32* %2, align 4, !dbg !12371
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12372
  %8 = load volatile i32, i32* %7, align 4, !dbg !12372
  store volatile i32 %8, i32* %2, align 4, !dbg !12373
  %9 = load volatile i32, i32* %2, align 4, !dbg !12374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12375
  ret void, !dbg !12375
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12376 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12378, metadata !DIExpression()), !dbg !12380
  %3 = bitcast i32* %2 to i8*, !dbg !12381
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12381
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12379, metadata !DIExpression()), !dbg !12382
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12383
  %5 = load volatile i32, i32* %4, align 4, !dbg !12383
  store volatile i32 %5, i32* %2, align 4, !dbg !12384
  %6 = load volatile i32, i32* %2, align 4, !dbg !12385
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12386
  %8 = load volatile i32, i32* %7, align 4, !dbg !12386
  store volatile i32 %8, i32* %2, align 4, !dbg !12387
  %9 = load volatile i32, i32* %2, align 4, !dbg !12388
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12389
  ret void, !dbg !12389
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12390 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12392, metadata !DIExpression()), !dbg !12394
  %3 = bitcast i32* %2 to i8*, !dbg !12395
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12395
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12393, metadata !DIExpression()), !dbg !12396
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12397
  %5 = load volatile i32, i32* %4, align 4, !dbg !12397
  store volatile i32 %5, i32* %2, align 4, !dbg !12398
  %6 = load volatile i32, i32* %2, align 4, !dbg !12399
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12400
  %8 = load volatile i32, i32* %7, align 4, !dbg !12400
  store volatile i32 %8, i32* %2, align 4, !dbg !12401
  %9 = load volatile i32, i32* %2, align 4, !dbg !12402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12403
  ret void, !dbg !12403
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12404 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12406, metadata !DIExpression()), !dbg !12408
  %3 = bitcast i32* %2 to i8*, !dbg !12409
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12409
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12407, metadata !DIExpression()), !dbg !12410
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12411
  %5 = load volatile i32, i32* %4, align 4, !dbg !12411
  store volatile i32 %5, i32* %2, align 4, !dbg !12412
  %6 = load volatile i32, i32* %2, align 4, !dbg !12413
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12414
  %8 = load volatile i32, i32* %7, align 4, !dbg !12414
  store volatile i32 %8, i32* %2, align 4, !dbg !12415
  %9 = load volatile i32, i32* %2, align 4, !dbg !12416
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12417
  ret void, !dbg !12417
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12418 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12420, metadata !DIExpression()), !dbg !12421
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12422
  %3 = load volatile i32, i32* %2, align 4, !dbg !12422
  %4 = lshr i32 %3, 7, !dbg !12423
  %5 = and i32 %4, 1, !dbg !12423
  ret i32 %5, !dbg !12424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !12425 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12429, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i8 %1, metadata !12430, metadata !DIExpression()), !dbg !12431
  %3 = zext i8 %1 to i32, !dbg !12432
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12433
  store volatile i32 %3, i32* %4, align 4, !dbg !12434
  ret void, !dbg !12435
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12436 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12438, metadata !DIExpression()), !dbg !12439
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12440
  %3 = load volatile i32, i32* %2, align 4, !dbg !12440
  %4 = lshr i32 %3, 5, !dbg !12441
  %5 = and i32 %4, 1, !dbg !12441
  ret i32 %5, !dbg !12442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12443 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12447, metadata !DIExpression()), !dbg !12448
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12449
  %3 = load volatile i32, i32* %2, align 4, !dbg !12449
  %4 = trunc i32 %3 to i8, !dbg !12450
  ret i8 %4, !dbg !12451
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12454, metadata !DIExpression()), !dbg !12460
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12461
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12461
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12461
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12455, metadata !DIExpression()), !dbg !12460
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12462
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12462
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12462
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12456, metadata !DIExpression()), !dbg !12460
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !12463
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12464
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12464
  %10 = tail call fastcc zeroext i1 @device_is_ready.202(%struct.device* noundef %9) #27, !dbg !12466
  br i1 %10, label %14, label %11, !dbg !12467

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.190(i32 noundef 1) #27, !dbg !12468
  %13 = zext i8 %12 to i32, !dbg !12468
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.203, i32 0, i32 0), i32 noundef %13) #26, !dbg !12468
  br label %62, !dbg !12474

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12475
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12476
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12476
  %18 = load i8*, i8** %17, align 4, !dbg !12476
  %19 = tail call fastcc i32 @clock_control_on.204(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !12477
  call void @llvm.dbg.value(metadata i32 %19, metadata !12459, metadata !DIExpression()), !dbg !12460
  %20 = icmp eq i32 %19, 0, !dbg !12478
  br i1 %20, label %24, label %21, !dbg !12480

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.190(i32 noundef 1) #27, !dbg !12481
  %23 = zext i8 %22 to i32, !dbg !12481
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.205, i32 0, i32 0), i32 noundef %23) #26, !dbg !12481
  br label %62, !dbg !12487

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12488
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12488
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !12489
  call void @llvm.dbg.value(metadata i32 %27, metadata !12459, metadata !DIExpression()), !dbg !12460
  %28 = icmp slt i32 %27, 0, !dbg !12490
  br i1 %28, label %62, label %29, !dbg !12492

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12493
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12493
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !12494
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12495
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !12496
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12497
  %34 = load i32, i32* %33, align 4, !dbg !12497
  %35 = icmp ult i32 %34, 3, !dbg !12499
  br i1 %35, label %39, label %36, !dbg !12499

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.190(i32 noundef 2) #27, !dbg !12500
  %38 = zext i8 %37 to i32, !dbg !12500
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.206, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #26, !dbg !12500
  call void @llvm.dbg.value(metadata i32 0, metadata !12457, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.value(metadata i32 0, metadata !12458, metadata !DIExpression()), !dbg !12460
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12499
  %41 = load i32, i32* %40, align 4, !dbg !12499
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !12499
  %43 = load i32, i32* %42, align 4, !dbg !12499
  br label %44, !dbg !12499

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12509
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12509
  call void @llvm.dbg.value(metadata i32 %46, metadata !12458, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.value(metadata i32 %45, metadata !12457, metadata !DIExpression()), !dbg !12460
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12510
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !12511
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12512
  %49 = load i8, i8* %48, align 4, !dbg !12512, !range !8289
  %50 = icmp eq i8 %49, 0, !dbg !12512
  br i1 %50, label %52, label %51, !dbg !12514

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !12515
  br label %52, !dbg !12517

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12518
  %54 = load i32, i32* %53, align 4, !dbg !12518
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !12519
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12520
  %56 = load i8, i8* %55, align 4, !dbg !12520, !range !8289
  %57 = icmp eq i8 %56, 0, !dbg !12520
  br i1 %57, label %60, label %58, !dbg !12522

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12523
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !12525
  br label %60, !dbg !12526

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12527
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !12528
  br label %62, !dbg !12529

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12460
  ret i32 %63, !dbg !12530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !12531 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12535, metadata !DIExpression()), !dbg !12539
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12540
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12540
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12540
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12536, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12537, metadata !DIExpression()), !dbg !12539
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12541
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !12542
  ret void, !dbg !12543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.202(%struct.device* noundef %0) unnamed_addr #1 !dbg !12544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12548, metadata !DIExpression()), !dbg !12549
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12550, !srcloc !12552
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.207(%struct.device* noundef %0) #27, !dbg !12553
  ret i1 %2, !dbg !12554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.204(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12557, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.value(metadata i8* %1, metadata !12558, metadata !DIExpression()), !dbg !12560
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12561
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12561
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12561
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12559, metadata !DIExpression()), !dbg !12560
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12562
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12562
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !12563
  ret i32 %8, !dbg !12564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12565 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12569, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.value(metadata i8 0, metadata !12570, metadata !DIExpression()), !dbg !12573
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12574
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12574
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12572, metadata !DIExpression(DW_OP_deref)), !dbg !12573
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !12575
  call void @llvm.dbg.value(metadata i32 %4, metadata !12571, metadata !DIExpression()), !dbg !12573
  %5 = icmp slt i32 %4, 0, !dbg !12576
  br i1 %5, label %9, label %6, !dbg !12578

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12579
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12572, metadata !DIExpression()), !dbg !12573
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !12580
  br label %9, !dbg !12581

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12573
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12582
  ret i32 %10, !dbg !12582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12583 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12585, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.value(metadata i32 12, metadata !12586, metadata !DIExpression()), !dbg !12589
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12590

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12591, metadata !DIExpression()) #25, !dbg !12597
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12600, !srcloc !12601
  call void @llvm.dbg.value(metadata i32 %4, metadata !12596, metadata !DIExpression()) #25, !dbg !12597
  %5 = or i32 %4, 12, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %5, metadata !12587, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata i32 %5, metadata !12604, metadata !DIExpression()) #25, !dbg !12611
  call void @llvm.dbg.value(metadata i32* %2, metadata !12609, metadata !DIExpression()) #25, !dbg !12611
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12613, !srcloc !12614
  call void @llvm.dbg.value(metadata i32 %6, metadata !12610, metadata !DIExpression()) #25, !dbg !12611
  %7 = icmp eq i32 %6, 0, !dbg !12590
  br i1 %7, label %8, label %3, !dbg !12602, !llvm.loop !12615

8:                                                ; preds = %3
  ret void, !dbg !12616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12617 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12619, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.value(metadata i32 %1, metadata !12620, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.value(metadata i32 %2, metadata !12621, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.value(metadata i32 0, metadata !12622, metadata !DIExpression()), !dbg !12623
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12624
  %5 = load volatile i32, i32* %4, align 4, !dbg !12624
  %6 = and i32 %5, -5633, !dbg !12624
  %7 = or i32 %2, %1, !dbg !12624
  %8 = or i32 %7, %6, !dbg !12624
  store volatile i32 %8, i32* %4, align 4, !dbg !12624
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12625
  %10 = load volatile i32, i32* %9, align 4, !dbg !12625
  %11 = and i32 %10, -12289, !dbg !12625
  store volatile i32 %11, i32* %9, align 4, !dbg !12625
  ret void, !dbg !12626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12627 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12629, metadata !DIExpression()), !dbg !12630
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12631
  %3 = load volatile i32, i32* %2, align 4, !dbg !12631
  %4 = or i32 %3, 8, !dbg !12631
  store volatile i32 %4, i32* %2, align 4, !dbg !12631
  ret void, !dbg !12632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12633 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12637, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12638, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i32 0, metadata !12639, metadata !DIExpression()), !dbg !12640
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12641
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12641
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12642
  %5 = load i8, i8* %4, align 4, !dbg !12642
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !12643
  ret i32 %6, !dbg !12644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.207(%struct.device* noundef %0) unnamed_addr #1 !dbg !12645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12647, metadata !DIExpression()), !dbg !12648
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !12649
  ret i1 %2, !dbg !12650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !12651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12653, metadata !DIExpression()), !dbg !12654
  tail call fastcc void @__NVIC_SetPriority.209() #27, !dbg !12655
  store i32 8399, i32* @last_load, align 4, !dbg !12656
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12657
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12658
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12659
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12660
  %3 = or i32 %2, 7, !dbg !12660
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12660
  ret i32 0, !dbg !12661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.209() unnamed_addr #16 !dbg !12662 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12664, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 1, metadata !12665, metadata !DIExpression()), !dbg !12666
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12667
  ret void, !dbg !12670
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12671 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12673, metadata !DIExpression()), !dbg !12675
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !12676
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12677
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12678
  %5 = add i32 %4, %3, !dbg !12678
  store i32 %5, i32* @cycle_count, align 4, !dbg !12678
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12679
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12680
  %7 = sub i32 %5, %6, !dbg !12683
  %8 = udiv i32 %7, 8400, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %8, metadata !12674, metadata !DIExpression()), !dbg !12675
  %9 = mul nuw i32 %8, 8400, !dbg !12685
  %10 = add i32 %9, %6, !dbg !12686
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12686
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !12687
  tail call void @z_arm_int_exit() #26, !dbg !12688
  ret void, !dbg !12689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !12690 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12695
  call void @llvm.dbg.value(metadata i32 %1, metadata !12692, metadata !DIExpression()), !dbg !12696
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12697
  call void @llvm.dbg.value(metadata i32 %2, metadata !12693, metadata !DIExpression()), !dbg !12696
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %3, metadata !12694, metadata !DIExpression()), !dbg !12696
  %4 = and i32 %2, 65536, !dbg !12699
  %5 = icmp ne i32 %4, 0, !dbg !12699
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12701
  %8 = load i32, i32* @last_load, align 4, !dbg !12696
  br i1 %7, label %9, label %13, !dbg !12701

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12702
  %11 = add i32 %10, %8, !dbg !12702
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12702
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12704
  br label %13, !dbg !12705

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12706
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12707
  %16 = add i32 %14, %15, !dbg !12708
  ret i32 %16, !dbg !12709
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12714, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.value(metadata i1 %1, metadata !12715, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12727
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12728
  br i1 %4, label %5, label %8, !dbg !12728

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12730
  %7 = and i32 %6, -2, !dbg !12730
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12730
  store i32 -16777216, i32* @last_load, align 4, !dbg !12732
  br label %60, !dbg !12733

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %9, metadata !12719, metadata !DIExpression()), !dbg !12727
  br i1 %3, label %18, label %10, !dbg !12735

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12735
  call void @llvm.dbg.value(metadata i32 undef, metadata !12714, metadata !DIExpression()), !dbg !12727
  %12 = icmp slt i32 %11, 1, !dbg !12736
  br i1 %12, label %18, label %13, !dbg !12736

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12736
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12736
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12736
  %17 = add nuw nsw i32 %16, 8399, !dbg !12736
  br label %18, !dbg !12736

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12714, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12737, metadata !DIExpression()) #25, !dbg !12744
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12746, !srcloc !12752
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()) #25, !dbg !12753
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #25, !dbg !12753
  call void @llvm.dbg.value(metadata i32 undef, metadata !12743, metadata !DIExpression()) #25, !dbg !12744
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12754
  br i1 %21, label %23, label %22, !dbg !12757

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #26, !dbg !12758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.213, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #26, !dbg !12758
  unreachable, !dbg !12758

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12746
  call void @llvm.dbg.value(metadata i32 %24, metadata !12749, metadata !DIExpression()) #25, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %24, metadata !12743, metadata !DIExpression()) #25, !dbg !12744
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12760
  call void @llvm.dbg.value(metadata i32 %24, metadata !12720, metadata !DIExpression()), !dbg !12727
  %25 = tail call fastcc i32 @elapsed() #27, !dbg !12761
  call void @llvm.dbg.value(metadata i32 %25, metadata !12725, metadata !DIExpression()), !dbg !12727
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12762
  call void @llvm.dbg.value(metadata i32 %26, metadata !12717, metadata !DIExpression()), !dbg !12727
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12763
  %28 = add i32 %27, %25, !dbg !12763
  store i32 %28, i32* @cycle_count, align 4, !dbg !12763
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12764
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12765
  %30 = sub i32 %28, %29, !dbg !12766
  call void @llvm.dbg.value(metadata i32 %30, metadata !12726, metadata !DIExpression()), !dbg !12727
  %31 = icmp slt i32 %30, 0, !dbg !12767
  br i1 %31, label %41, label %32, !dbg !12769

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12716, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.value(metadata i32 undef, metadata !12716, metadata !DIExpression()), !dbg !12727
  %33 = add nuw i32 %19, %30, !dbg !12770
  %34 = urem i32 %33, 8400, !dbg !12772
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12716, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12727
  %35 = sub nuw nsw i32 %19, %34, !dbg !12773
  call void @llvm.dbg.value(metadata i32 %35, metadata !12716, metadata !DIExpression()), !dbg !12727
  %36 = icmp ugt i32 %35, 1024, !dbg !12774
  br i1 %36, label %37, label %39, !dbg !12774

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12716, metadata !DIExpression()), !dbg !12727
  %38 = icmp ugt i32 %35, 16766400, !dbg !12775
  br i1 %38, label %41, label %39, !dbg !12777

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12778
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12779
  call void @llvm.dbg.value(metadata i32 %43, metadata !12718, metadata !DIExpression()), !dbg !12727
  %44 = add nsw i32 %42, -1, !dbg !12780
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12781
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12782
  %45 = icmp ult i32 %26, %43, !dbg !12783
  br i1 %45, label %46, label %51, !dbg !12785

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12786
  %48 = add i32 %26, %9, !dbg !12788
  %49 = sub i32 %48, %43, !dbg !12789
  %50 = add i32 %49, %47, !dbg !12786
  br label %55, !dbg !12790

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12791
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12793
  %54 = add i32 %52, %53, !dbg !12793
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12794
  store i32 %56, i32* @cycle_count, align 4, !dbg !12794
  call void @llvm.dbg.value(metadata i32 undef, metadata !12795, metadata !DIExpression()) #25, !dbg !12801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12800, metadata !DIExpression()) #25, !dbg !12801
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12803
  br i1 %57, label %59, label %58, !dbg !12806

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #26, !dbg !12807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.215, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #26, !dbg !12807
  unreachable, !dbg !12807

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12795, metadata !DIExpression()) #25, !dbg !12801
  call void @llvm.dbg.value(metadata i32 %24, metadata !12809, metadata !DIExpression()) #25, !dbg !12812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !12814, !srcloc !12815
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12816
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12817 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12737, metadata !DIExpression()) #25, !dbg !12821
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12823, !srcloc !12752
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()) #25, !dbg !12825
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #25, !dbg !12825
  call void @llvm.dbg.value(metadata i32 undef, metadata !12743, metadata !DIExpression()) #25, !dbg !12821
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12826
  br i1 %2, label %4, label %3, !dbg !12827

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #26, !dbg !12828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.213, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #26, !dbg !12828
  unreachable, !dbg !12828

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()) #25, !dbg !12825
  call void @llvm.dbg.value(metadata i32 undef, metadata !12743, metadata !DIExpression()) #25, !dbg !12821
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12829
  call void @llvm.dbg.value(metadata i32 undef, metadata !12819, metadata !DIExpression()), !dbg !12830
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !12831
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12832
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12833
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12830
  call void @llvm.dbg.value(metadata i32 undef, metadata !12795, metadata !DIExpression()) #25, !dbg !12834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12800, metadata !DIExpression()) #25, !dbg !12834
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12836
  br i1 %8, label %10, label %9, !dbg !12837

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #26, !dbg !12838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.215, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #26, !dbg !12838
  unreachable, !dbg !12838

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12839
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12820, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12830
  %12 = sub i32 %11, %7, !dbg !12840
  call void @llvm.dbg.value(metadata i32 %12, metadata !12820, metadata !DIExpression()), !dbg !12830
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %13, metadata !12749, metadata !DIExpression()) #25, !dbg !12825
  call void @llvm.dbg.value(metadata i32 %13, metadata !12743, metadata !DIExpression()) #25, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %13, metadata !12819, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 undef, metadata !12795, metadata !DIExpression()) #25, !dbg !12834
  call void @llvm.dbg.value(metadata i32 undef, metadata !12809, metadata !DIExpression()) #25, !dbg !12841
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !12843, !srcloc !12815
  %14 = udiv i32 %12, 8400, !dbg !12844
  ret i32 %14, !dbg !12845
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12846 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12737, metadata !DIExpression()) #25, !dbg !12850
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12852, !srcloc !12752
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()) #25, !dbg !12854
  call void @llvm.dbg.value(metadata i32 undef, metadata !12750, metadata !DIExpression()) #25, !dbg !12854
  call void @llvm.dbg.value(metadata i32 undef, metadata !12743, metadata !DIExpression()) #25, !dbg !12850
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12855
  br i1 %2, label %4, label %3, !dbg !12856

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #26, !dbg !12857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.213, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #26, !dbg !12857
  unreachable, !dbg !12857

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()) #25, !dbg !12854
  call void @llvm.dbg.value(metadata i32 undef, metadata !12743, metadata !DIExpression()) #25, !dbg !12850
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12858
  call void @llvm.dbg.value(metadata i32 undef, metadata !12848, metadata !DIExpression()), !dbg !12859
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !12860
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12861
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12849, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12795, metadata !DIExpression()) #25, !dbg !12862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12800, metadata !DIExpression()) #25, !dbg !12862
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12864
  br i1 %7, label %9, label %8, !dbg !12865

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #26, !dbg !12866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.215, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #26, !dbg !12866
  unreachable, !dbg !12866

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12867
  call void @llvm.dbg.value(metadata i32 %10, metadata !12849, metadata !DIExpression()), !dbg !12859
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %11, metadata !12749, metadata !DIExpression()) #25, !dbg !12854
  call void @llvm.dbg.value(metadata i32 %11, metadata !12743, metadata !DIExpression()) #25, !dbg !12850
  call void @llvm.dbg.value(metadata i32 %11, metadata !12848, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12795, metadata !DIExpression()) #25, !dbg !12862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12809, metadata !DIExpression()) #25, !dbg !12868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !12870, !srcloc !12815
  ret i32 %10, !dbg !12871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12872 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12873
  %2 = icmp eq i32 %1, -16777216, !dbg !12875
  br i1 %2, label %3, label %6, !dbg !12876

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12877
  %5 = or i32 %4, 1, !dbg !12877
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12877
  br label %6, !dbg !12879

6:                                                ; preds = %3, %0
  ret void, !dbg !12880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12881 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12882
  %2 = and i32 %1, -2, !dbg !12882
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12882
  ret void, !dbg !12883
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12884 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12910, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata i8 %1, metadata !12911, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12912, metadata !DIExpression()), !dbg !12913
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12914
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12914
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12913
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12915
  %8 = load i8, i8* %6, align 4, !dbg !12916
  %9 = zext i8 %8 to i32, !dbg !12917
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12917
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12918
  br i1 %11, label %18, label %24, !dbg !12919

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12913
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12915
  %14 = load i8, i8* %6, align 4, !dbg !12916
  %15 = zext i8 %14 to i32, !dbg !12917
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12917
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12918
  br i1 %17, label %18, label %24, !dbg !12919, !llvm.loop !12920

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12922
  %21 = load i8, i8* %20, align 1, !dbg !12922
  %22 = icmp eq i8 %21, %1, !dbg !12925
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12926
  br i1 %22, label %24, label %12, !dbg !12927

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12913
  ret i32 %25, !dbg !12928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12929 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12940, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata i8 %1, metadata !12941, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata i32 %2, metadata !12942, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata i32 0, metadata !12945, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata i32 0, metadata !12946, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata i8 0, metadata !12947, metadata !DIExpression()), !dbg !12957
  %4 = icmp eq i8 %1, 0, !dbg !12958
  br i1 %4, label %35, label %5, !dbg !12959

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12958
  br label %9, !dbg !12959

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12947, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i32 %29, metadata !12945, metadata !DIExpression()), !dbg !12956
  %8 = icmp eq i32 %34, %6, !dbg !12958
  br i1 %8, label %35, label %9, !dbg !12959, !llvm.loop !12960

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12947, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i32 %11, metadata !12945, metadata !DIExpression()), !dbg !12956
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12962
  %13 = load i32, i32* %12, align 4, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %13, metadata !12944, metadata !DIExpression()), !dbg !12956
  %14 = and i32 %13, 31, !dbg !12963
  %15 = icmp ult i32 %14, 16, !dbg !12964
  br i1 %15, label %16, label %20, !dbg !12965

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12966
  %18 = load i32, i32* %17, align 4, !dbg !12966
  %19 = or i32 %18, 32, !dbg !12968
  call void @llvm.dbg.value(metadata i32 %19, metadata !12945, metadata !DIExpression()), !dbg !12956
  br label %28, !dbg !12969

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12970

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12971
  %23 = load i32, i32* %22, align 4, !dbg !12971
  call void @llvm.dbg.value(metadata i32 %23, metadata !12949, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12972
  %24 = lshr i32 %23, 7, !dbg !12973
  %25 = and i32 %24, 16, !dbg !12973
  %26 = or i32 %25, %23, !dbg !12973
  call void @llvm.dbg.value(metadata i32 %26, metadata !12945, metadata !DIExpression()), !dbg !12956
  br label %28, !dbg !12974

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12956
  call void @llvm.dbg.value(metadata i32 %29, metadata !12945, metadata !DIExpression()), !dbg !12956
  %30 = lshr i32 %13, 5, !dbg !12975
  %31 = and i32 %30, 255, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %31, metadata !12943, metadata !DIExpression()), !dbg !12956
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !12976
  call void @llvm.dbg.value(metadata i32 %32, metadata !12946, metadata !DIExpression()), !dbg !12956
  %33 = icmp slt i32 %32, 0, !dbg !12977
  %34 = add nuw nsw i32 %10, 1, !dbg !12979
  call void @llvm.dbg.value(metadata i32 %34, metadata !12947, metadata !DIExpression()), !dbg !12957
  br i1 %33, label %35, label %7, !dbg !12980

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12986, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 %1, metadata !12987, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.value(metadata i32 %2, metadata !12988, metadata !DIExpression()), !dbg !12990
  %4 = icmp ugt i32 %0, 175, !dbg !12991
  br i1 %4, label %16, label %5, !dbg !12993

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12994
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12995
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12995
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12989, metadata !DIExpression()), !dbg !12990
  %9 = add nsw i32 %6, -8, !dbg !12996
  %10 = icmp ult i32 %9, 3, !dbg !12996
  br i1 %10, label %16, label %11, !dbg !12998

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.220(%struct.device* noundef %8) #27, !dbg !12999
  br i1 %12, label %13, label %16, !dbg !13000

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !13001
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !13002
  br label %16, !dbg !13003

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12990
  ret i32 %17, !dbg !13004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.220(%struct.device* noundef %0) unnamed_addr #1 !dbg !13005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13009, metadata !DIExpression()), !dbg !13010
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13011, !srcloc !13013
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.221(%struct.device* noundef %0) #27, !dbg !13014
  ret i1 %2, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.221(%struct.device* noundef %0) unnamed_addr #1 !dbg !13016 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13018, metadata !DIExpression()), !dbg !13019
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !13020
  ret i1 %2, !dbg !13021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !13022 {
  ret void, !dbg !13023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13024 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13026, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 0, metadata !13027, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 2, metadata !13028, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 0, metadata !13029, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 2, metadata !13030, metadata !DIExpression()), !dbg !13031
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13032
  %2 = and i32 %1, 12, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %2, metadata !13026, metadata !DIExpression()), !dbg !13031
  %3 = icmp eq i32 %2, 8, !dbg !13034
  br i1 %3, label %4, label %18, !dbg !13034

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13035
  call void @llvm.dbg.value(metadata i32 %5, metadata !13029, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13031
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13037
  %7 = and i32 %6, 63, !dbg !13038
  call void @llvm.dbg.value(metadata i32 %7, metadata !13030, metadata !DIExpression()), !dbg !13031
  %8 = udiv i32 16000000, %7, !dbg !13039
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13039
  %10 = lshr i32 %9, 6, !dbg !13039
  %11 = and i32 %10, 511, !dbg !13039
  %12 = mul i32 %11, %8, !dbg !13039
  call void @llvm.dbg.value(metadata i32 %12, metadata !13027, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 %12, metadata !13027, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 %12, metadata !13027, metadata !DIExpression()), !dbg !13031
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13041
  %14 = lshr i32 %13, 15, !dbg !13042
  %15 = and i32 %14, 6, !dbg !13042
  %16 = add nuw nsw i32 %15, 2, !dbg !13042
  call void @llvm.dbg.value(metadata i32 %16, metadata !13028, metadata !DIExpression()), !dbg !13031
  %17 = udiv i32 %12, %16, !dbg !13043
  br label %18, !dbg !13044

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !13045
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13046
  %21 = lshr i32 %20, 4, !dbg !13047
  %22 = and i32 %21, 15, !dbg !13047
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !13048
  %24 = load i8, i8* %23, align 1, !dbg !13048
  %25 = zext i8 %24 to i32, !dbg !13048
  call void @llvm.dbg.value(metadata i32 %25, metadata !13026, metadata !DIExpression()), !dbg !13031
  %26 = lshr i32 %19, %25, !dbg !13049
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13051 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !13093, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13094, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13095, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13096, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13097, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13098, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13099, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13100, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13101, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 0, metadata !13102, metadata !DIExpression()), !dbg !13107
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !13108
  %4 = load i32, i32* %3, align 4, !dbg !13108
  %5 = and i32 %4, 1, !dbg !13110
  %6 = icmp eq i32 %5, 0, !dbg !13111
  br i1 %6, label %17, label %7, !dbg !13112

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13113
  %9 = and i32 %8, -100663297, !dbg !13113
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13113
  %11 = load i32, i32* %10, align 4, !dbg !13113
  %12 = or i32 %9, %11, !dbg !13113
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13113
  %13 = load i32, i32* %10, align 4, !dbg !13115
  %14 = icmp eq i32 %13, 0, !dbg !13117
  %15 = zext i1 %14 to i32, !dbg !13118
  %16 = load i32, i32* %3, align 4, !dbg !13119
  br label %17, !dbg !13118

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !13119
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !13107
  call void @llvm.dbg.value(metadata i32 %19, metadata !13101, metadata !DIExpression()), !dbg !13107
  %20 = and i32 %18, 2, !dbg !13121
  %21 = icmp eq i32 %20, 0, !dbg !13122
  br i1 %21, label %32, label %22, !dbg !13123

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13124
  %24 = and i32 %23, -402653185, !dbg !13124
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13124
  %26 = load i32, i32* %25, align 4, !dbg !13124
  %27 = or i32 %24, %26, !dbg !13124
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13124
  %28 = load i32, i32* %25, align 4, !dbg !13126
  %29 = icmp eq i32 %28, 0, !dbg !13128
  %30 = select i1 %29, i32 1, i32 %19, !dbg !13129
  %31 = load i32, i32* %3, align 4, !dbg !13130
  br label %32, !dbg !13129

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !13130
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !13107
  call void @llvm.dbg.value(metadata i32 %34, metadata !13101, metadata !DIExpression()), !dbg !13107
  %35 = and i32 %33, 4, !dbg !13132
  %36 = icmp eq i32 %35, 0, !dbg !13133
  br i1 %36, label %49, label %37, !dbg !13134

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13135
  %39 = and i32 %38, -3145729, !dbg !13135
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13135
  %41 = load i32, i32* %40, align 4, !dbg !13135
  %42 = or i32 %39, %41, !dbg !13135
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13135
  %43 = load i32, i32* %40, align 4, !dbg !13137
  %44 = icmp eq i32 %43, 1048576, !dbg !13139
  %45 = select i1 %44, i32 1, i32 %34, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %45, metadata !13101, metadata !DIExpression()), !dbg !13107
  %46 = icmp eq i32 %43, 0, !dbg !13141
  %47 = zext i1 %46 to i32, !dbg !13143
  %48 = load i32, i32* %3, align 4, !dbg !13144
  br label %49, !dbg !13143

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !13144
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !13107
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !13107
  call void @llvm.dbg.value(metadata i32 %52, metadata !13102, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 %51, metadata !13101, metadata !DIExpression()), !dbg !13107
  %53 = and i32 %50, 8, !dbg !13146
  %54 = icmp eq i32 %53, 0, !dbg !13147
  br i1 %54, label %67, label %55, !dbg !13148

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13149
  %57 = and i32 %56, -12582913, !dbg !13149
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13149
  %59 = load i32, i32* %58, align 4, !dbg !13149
  %60 = or i32 %57, %59, !dbg !13149
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13149
  %61 = load i32, i32* %58, align 4, !dbg !13151
  %62 = icmp eq i32 %61, 4194304, !dbg !13153
  %63 = select i1 %62, i32 1, i32 %51, !dbg !13154
  call void @llvm.dbg.value(metadata i32 %63, metadata !13101, metadata !DIExpression()), !dbg !13107
  %64 = icmp eq i32 %61, 0, !dbg !13155
  %65 = select i1 %64, i32 1, i32 %52, !dbg !13157
  %66 = load i32, i32* %3, align 4, !dbg !13158
  br label %67, !dbg !13157

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !13158
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !13107
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !13107
  call void @llvm.dbg.value(metadata i32 %70, metadata !13102, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata i32 %69, metadata !13101, metadata !DIExpression()), !dbg !13107
  %71 = and i32 %68, 32, !dbg !13159
  %72 = icmp eq i32 %71, 0, !dbg !13160
  br i1 %72, label %131, label %73, !dbg !13161

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !13162
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !13162
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13103, metadata !DIExpression()), !dbg !13162
  store volatile i32 0, i32* %2, align 4, !dbg !13162
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13162
  %76 = or i32 %75, 268435456, !dbg !13162
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13162
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13162
  %78 = and i32 %77, 268435456, !dbg !13162
  store volatile i32 %78, i32* %2, align 4, !dbg !13162
  %79 = load volatile i32, i32* %2, align 4, !dbg !13162
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !13163
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13164
  %81 = or i32 %80, 256, !dbg !13164
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13164
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !13165
  call void @llvm.dbg.value(metadata i32 %82, metadata !13094, metadata !DIExpression()), !dbg !13107
  br label %83, !dbg !13166

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13167
  %85 = and i32 %84, 256, !dbg !13168
  %86 = icmp eq i32 %85, 0, !dbg !13169
  br i1 %86, label %87, label %91, !dbg !13166

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #26, !dbg !13170
  %89 = sub i32 %88, %82, !dbg !13173
  %90 = icmp ugt i32 %89, 2, !dbg !13174
  br i1 %90, label %439, label %83, !dbg !13175, !llvm.loop !13176

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13178
  %93 = and i32 %92, 768, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %93, metadata !13095, metadata !DIExpression()), !dbg !13107
  %94 = icmp eq i32 %93, 0, !dbg !13180
  br i1 %94, label %116, label %95, !dbg !13182

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13183
  %97 = load i32, i32* %96, align 4, !dbg !13183
  %98 = and i32 %97, 768, !dbg !13184
  %99 = icmp eq i32 %93, %98, !dbg !13185
  br i1 %99, label %116, label %100, !dbg !13186

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13187
  %102 = and i32 %101, -769, !dbg !13189
  call void @llvm.dbg.value(metadata i32 %102, metadata !13095, metadata !DIExpression()), !dbg !13107
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !13190
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !13191
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13192
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13193
  %104 = and i32 %103, 1, !dbg !13193
  %105 = icmp eq i32 %104, 0, !dbg !13193
  br i1 %105, label %116, label %106, !dbg !13195

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #26, !dbg !13196
  call void @llvm.dbg.value(metadata i32 %107, metadata !13094, metadata !DIExpression()), !dbg !13107
  br label %108, !dbg !13198

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13199
  %110 = and i32 %109, 2, !dbg !13200
  %111 = icmp eq i32 %110, 0, !dbg !13200
  br i1 %111, label %112, label %116, !dbg !13198

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #26, !dbg !13201
  %114 = sub i32 %113, %107, !dbg !13204
  %115 = icmp ugt i32 %114, 5000, !dbg !13205
  br i1 %115, label %439, label %108, !dbg !13206, !llvm.loop !13207

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13209
  %118 = load i32, i32* %117, align 4, !dbg !13209
  %119 = and i32 %118, 768, !dbg !13209
  %120 = icmp eq i32 %119, 768, !dbg !13209
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13209
  %122 = and i32 %121, -2031617, !dbg !13209
  %123 = and i32 %118, 268434687, !dbg !13209
  %124 = select i1 %120, i32 %123, i32 0, !dbg !13209
  %125 = or i32 %122, %124, !dbg !13209
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13209
  %126 = load i32, i32* %117, align 4, !dbg !13209
  %127 = and i32 %126, 4095, !dbg !13209
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13209
  %129 = or i32 %128, %127, !dbg !13209
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13209
  %130 = load i32, i32* %3, align 4, !dbg !13211
  br label %131, !dbg !13213

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !13211
  %133 = and i32 %132, 16, !dbg !13214
  %134 = icmp eq i32 %133, 0, !dbg !13215
  br i1 %134, label %140, label %135, !dbg !13216

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !13217
  %137 = load i8, i8* %136, align 4, !dbg !13217
  %138 = zext i8 %137 to i32, !dbg !13217
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !13217
  %139 = load i32, i32* %3, align 4, !dbg !13219
  br label %140, !dbg !13221

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !13219
  %142 = and i32 %141, 128, !dbg !13222
  %143 = icmp eq i32 %142, 0, !dbg !13223
  br i1 %143, label %151, label %144, !dbg !13224

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13225
  %146 = and i32 %145, -12582913, !dbg !13225
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !13225
  %148 = load i32, i32* %147, align 4, !dbg !13225
  %149 = or i32 %146, %148, !dbg !13225
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13225
  %150 = load i32, i32* %3, align 4, !dbg !13227
  br label %151, !dbg !13229

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !13227
  %153 = and i32 %152, 64, !dbg !13230
  %154 = icmp eq i32 %153, 0, !dbg !13231
  br i1 %154, label %162, label %155, !dbg !13232

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13233
  %157 = and i32 %156, -67108865, !dbg !13233
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !13233
  %159 = load i32, i32* %158, align 4, !dbg !13233
  %160 = or i32 %157, %159, !dbg !13233
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13233
  %161 = load i32, i32* %3, align 4, !dbg !13235
  br label %162, !dbg !13237

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !13235
  %164 = and i32 %163, 256, !dbg !13238
  %165 = icmp eq i32 %164, 0, !dbg !13239
  br i1 %165, label %176, label %166, !dbg !13240

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13241
  %168 = and i32 %167, -134217729, !dbg !13241
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13241
  %170 = load i32, i32* %169, align 4, !dbg !13241
  %171 = or i32 %168, %170, !dbg !13241
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13241
  %172 = load i32, i32* %169, align 4, !dbg !13243
  %173 = icmp eq i32 %172, 134217728, !dbg !13245
  %174 = select i1 %173, i32 1, i32 %70, !dbg !13246
  %175 = load i32, i32* %3, align 4, !dbg !13247
  br label %176, !dbg !13246

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !13247
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !13107
  call void @llvm.dbg.value(metadata i32 %178, metadata !13102, metadata !DIExpression()), !dbg !13107
  %179 = and i32 %177, 512, !dbg !13249
  %180 = icmp eq i32 %179, 0, !dbg !13250
  br i1 %180, label %188, label %181, !dbg !13251

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13252
  %183 = and i32 %182, -268435457, !dbg !13252
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !13252
  %185 = load i32, i32* %184, align 4, !dbg !13252
  %186 = or i32 %183, %185, !dbg !13252
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13252
  %187 = load i32, i32* %3, align 4, !dbg !13254
  br label %188, !dbg !13256

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !13254
  %190 = and i32 %189, 1024, !dbg !13257
  %191 = icmp eq i32 %190, 0, !dbg !13258
  br i1 %191, label %204, label %192, !dbg !13259

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13260
  %194 = and i32 %193, -536870913, !dbg !13260
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13260
  %196 = load i32, i32* %195, align 4, !dbg !13260
  %197 = or i32 %194, %196, !dbg !13260
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13260
  %198 = load i32, i32* %195, align 4, !dbg !13262
  %199 = icmp eq i32 %198, 536870912, !dbg !13264
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !13265
  call void @llvm.dbg.value(metadata i32 %69, metadata !13101, metadata !DIExpression()), !dbg !13107
  br i1 %201, label %209, label %202, !dbg !13265

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !13266
  br label %206, !dbg !13265

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !13101, metadata !DIExpression()), !dbg !13107
  %205 = icmp eq i32 %69, 1, !dbg !13268
  br i1 %205, label %209, label %206, !dbg !13269

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !13266
  %208 = icmp eq i32 %207, 2048, !dbg !13270
  br i1 %208, label %209, label %356, !dbg !13271

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13272
  %210 = tail call i32 @HAL_GetTick() #26, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %210, metadata !13094, metadata !DIExpression()), !dbg !13107
  br label %211, !dbg !13275

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13276
  %213 = and i32 %212, 134217728, !dbg !13276
  %214 = icmp eq i32 %213, 0, !dbg !13276
  br i1 %214, label %219, label %215, !dbg !13275

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !13277
  %217 = sub i32 %216, %210, !dbg !13280
  %218 = icmp ugt i32 %217, 2, !dbg !13281
  br i1 %218, label %439, label %211, !dbg !13282, !llvm.loop !13283

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !13285
  %221 = and i32 %220, 1, !dbg !13287
  %222 = icmp eq i32 %221, 0, !dbg !13288
  br i1 %222, label %227, label %223, !dbg !13289

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13290
  %225 = load i32, i32* %224, align 4, !dbg !13290
  %226 = icmp eq i32 %225, 0, !dbg !13291
  br i1 %226, label %234, label %227, !dbg !13292

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !13293
  %229 = icmp eq i32 %228, 0, !dbg !13294
  br i1 %229, label %252, label %230, !dbg !13295

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13296
  %232 = load i32, i32* %231, align 4, !dbg !13296
  %233 = icmp eq i32 %232, 0, !dbg !13297
  br i1 %233, label %234, label %252, !dbg !13298

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13299
  %236 = and i32 %235, 196608, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %236, metadata !13096, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13107
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13302
  %238 = and i32 %237, 251658240, !dbg !13303
  call void @llvm.dbg.value(metadata i32 %238, metadata !13097, metadata !DIExpression()), !dbg !13107
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13304
  %240 = load i32, i32* %239, align 4, !dbg !13304
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13304
  %242 = load i32, i32* %241, align 4, !dbg !13304
  %243 = shl i32 %242, 6, !dbg !13304
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13304
  %245 = load i32, i32* %244, align 4, !dbg !13304
  %246 = shl i32 %245, 28, !dbg !13304
  %247 = or i32 %240, %236, !dbg !13304
  %248 = or i32 %247, %238, !dbg !13304
  %249 = or i32 %248, %243, !dbg !13304
  %250 = or i32 %249, %246, !dbg !13304
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13304
  %251 = load i32, i32* %3, align 4, !dbg !13305
  br label %252, !dbg !13307

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !13305
  %254 = and i32 %253, 4, !dbg !13308
  %255 = icmp eq i32 %254, 0, !dbg !13309
  br i1 %255, label %260, label %256, !dbg !13310

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13311
  %258 = load i32, i32* %257, align 4, !dbg !13311
  %259 = icmp eq i32 %258, 1048576, !dbg !13312
  br i1 %259, label %267, label %260, !dbg !13313

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !13314
  %262 = icmp eq i32 %261, 0, !dbg !13315
  br i1 %262, label %291, label %263, !dbg !13316

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13317
  %265 = load i32, i32* %264, align 4, !dbg !13317
  %266 = icmp eq i32 %265, 4194304, !dbg !13318
  br i1 %266, label %267, label %291, !dbg !13319

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13320
  %269 = and i32 %268, 196608, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %269, metadata !13096, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13107
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13323
  %271 = and i32 %270, 1879048192, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %271, metadata !13098, metadata !DIExpression()), !dbg !13107
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13325
  %273 = load i32, i32* %272, align 4, !dbg !13325
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13325
  %275 = load i32, i32* %274, align 4, !dbg !13325
  %276 = shl i32 %275, 6, !dbg !13325
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13325
  %278 = load i32, i32* %277, align 4, !dbg !13325
  %279 = shl i32 %278, 24, !dbg !13325
  %280 = or i32 %273, %269, !dbg !13325
  %281 = or i32 %280, %271, !dbg !13325
  %282 = or i32 %281, %276, !dbg !13325
  %283 = or i32 %282, %279, !dbg !13325
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13325
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13326
  %285 = and i32 %284, -32, !dbg !13326
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !13326
  %287 = load i32, i32* %286, align 4, !dbg !13326
  %288 = add i32 %287, -1, !dbg !13326
  %289 = or i32 %288, %285, !dbg !13326
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13326
  %290 = load i32, i32* %3, align 4, !dbg !13327
  br label %291, !dbg !13329

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !13327
  %293 = and i32 %292, 1024, !dbg !13330
  %294 = icmp eq i32 %293, 0, !dbg !13331
  br i1 %294, label %321, label %295, !dbg !13332

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13333
  %297 = load i32, i32* %296, align 4, !dbg !13333
  %298 = icmp eq i32 %297, 536870912, !dbg !13334
  br i1 %298, label %299, label %321, !dbg !13335

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13336
  call void @llvm.dbg.value(metadata i32 %300, metadata !13097, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13107
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13338
  %302 = and i32 %301, 1879048192, !dbg !13339
  call void @llvm.dbg.value(metadata i32 %302, metadata !13098, metadata !DIExpression()), !dbg !13107
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13340
  %304 = load i32, i32* %303, align 4, !dbg !13340
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13340
  %306 = load i32, i32* %305, align 4, !dbg !13340
  %307 = shl i32 %306, 6, !dbg !13340
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13340
  %309 = load i32, i32* %308, align 4, !dbg !13340
  %310 = shl i32 %309, 15, !dbg !13340
  %311 = add i32 %310, -65536, !dbg !13340
  %312 = and i32 %311, -65536, !dbg !13340
  %313 = shl i32 %300, 9, !dbg !13340
  %314 = and i32 %313, 100663296, !dbg !13340
  %315 = add nuw nsw i32 %314, 33554432, !dbg !13340
  %316 = or i32 %302, %304, !dbg !13340
  %317 = or i32 %316, %315, !dbg !13340
  %318 = or i32 %317, %307, !dbg !13340
  %319 = or i32 %318, %312, !dbg !13340
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13340
  %320 = load i32, i32* %3, align 4, !dbg !13341
  br label %321, !dbg !13343

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !13341
  %323 = and i32 %322, 2048, !dbg !13344
  %324 = icmp eq i32 %323, 0, !dbg !13345
  br i1 %324, label %346, label %325, !dbg !13346

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13347
  %327 = load i32, i32* %326, align 4, !dbg !13347
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13347
  %329 = load i32, i32* %328, align 4, !dbg !13347
  %330 = shl i32 %329, 6, !dbg !13347
  %331 = or i32 %330, %327, !dbg !13347
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13347
  %333 = load i32, i32* %332, align 4, !dbg !13347
  %334 = shl i32 %333, 15, !dbg !13347
  %335 = add i32 %334, -65536, !dbg !13347
  %336 = and i32 %335, -65536, !dbg !13347
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13347
  %338 = load i32, i32* %337, align 4, !dbg !13347
  %339 = shl i32 %338, 24, !dbg !13347
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13347
  %341 = load i32, i32* %340, align 4, !dbg !13347
  %342 = shl i32 %341, 28, !dbg !13347
  %343 = or i32 %331, %339, !dbg !13347
  %344 = or i32 %343, %336, !dbg !13347
  %345 = or i32 %344, %342, !dbg !13347
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13347
  br label %346, !dbg !13349

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13350
  %347 = tail call i32 @HAL_GetTick() #26, !dbg !13351
  call void @llvm.dbg.value(metadata i32 %347, metadata !13094, metadata !DIExpression()), !dbg !13107
  br label %348, !dbg !13352

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13353
  %350 = and i32 %349, 134217728, !dbg !13354
  %351 = icmp eq i32 %350, 0, !dbg !13354
  br i1 %351, label %352, label %356, !dbg !13352

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #26, !dbg !13355
  %354 = sub i32 %353, %347, !dbg !13358
  %355 = icmp ugt i32 %354, 2, !dbg !13359
  br i1 %355, label %439, label %348, !dbg !13360, !llvm.loop !13361

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !13363
  br i1 %357, label %358, label %439, !dbg !13365

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13366
  %359 = tail call i32 @HAL_GetTick() #26, !dbg !13368
  call void @llvm.dbg.value(metadata i32 %359, metadata !13094, metadata !DIExpression()), !dbg !13107
  br label %360, !dbg !13369

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13370
  %362 = and i32 %361, 536870912, !dbg !13370
  %363 = icmp eq i32 %362, 0, !dbg !13370
  br i1 %363, label %368, label %364, !dbg !13369

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #26, !dbg !13371
  %366 = sub i32 %365, %359, !dbg !13374
  %367 = icmp ugt i32 %366, 2, !dbg !13375
  br i1 %367, label %439, label %360, !dbg !13376, !llvm.loop !13377

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !13379
  %370 = and i32 %369, 4, !dbg !13381
  %371 = icmp eq i32 %370, 0, !dbg !13382
  br i1 %371, label %376, label %372, !dbg !13383

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13384
  %374 = load i32, i32* %373, align 4, !dbg !13384
  %375 = icmp eq i32 %374, 0, !dbg !13385
  br i1 %375, label %383, label %376, !dbg !13386

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !13387
  %378 = icmp eq i32 %377, 0, !dbg !13388
  br i1 %378, label %405, label %379, !dbg !13389

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13390
  %381 = load i32, i32* %380, align 4, !dbg !13390
  %382 = icmp eq i32 %381, 0, !dbg !13391
  br i1 %382, label %383, label %405, !dbg !13392

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13393
  %385 = and i32 %384, 196608, !dbg !13395
  call void @llvm.dbg.value(metadata i32 %385, metadata !13099, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13107
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !13396
  %387 = load i32, i32* %386, align 4, !dbg !13396
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !13396
  %389 = load i32, i32* %388, align 4, !dbg !13396
  %390 = shl i32 %389, 6, !dbg !13396
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !13396
  %392 = load i32, i32* %391, align 4, !dbg !13396
  %393 = shl i32 %392, 24, !dbg !13396
  %394 = or i32 %385, %387, !dbg !13396
  %395 = or i32 %394, %390, !dbg !13396
  %396 = or i32 %395, %393, !dbg !13396
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13396
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13397
  %398 = and i32 %397, -7937, !dbg !13397
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !13397
  %400 = load i32, i32* %399, align 4, !dbg !13397
  %401 = shl i32 %400, 8, !dbg !13397
  %402 = add i32 %401, -256, !dbg !13397
  %403 = or i32 %402, %398, !dbg !13397
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13397
  %404 = load i32, i32* %3, align 4, !dbg !13398
  br label %405, !dbg !13400

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !13398
  %407 = and i32 %406, 256, !dbg !13401
  %408 = icmp eq i32 %407, 0, !dbg !13402
  br i1 %408, label %429, label %409, !dbg !13403

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13404
  %411 = load i32, i32* %410, align 4, !dbg !13404
  %412 = icmp eq i32 %411, 134217728, !dbg !13405
  br i1 %412, label %413, label %429, !dbg !13406

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13407
  %415 = and i32 %414, 251658240, !dbg !13409
  call void @llvm.dbg.value(metadata i32 %415, metadata !13100, metadata !DIExpression()), !dbg !13107
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !13410
  %417 = load i32, i32* %416, align 4, !dbg !13410
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !13410
  %419 = load i32, i32* %418, align 4, !dbg !13410
  %420 = shl i32 %419, 6, !dbg !13410
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !13410
  %422 = load i32, i32* %421, align 4, !dbg !13410
  %423 = shl i32 %422, 15, !dbg !13410
  %424 = add i32 %423, -65536, !dbg !13410
  %425 = and i32 %424, -65536, !dbg !13410
  %426 = or i32 %415, %417, !dbg !13410
  %427 = or i32 %426, %420, !dbg !13410
  %428 = or i32 %427, %425, !dbg !13410
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13410
  br label %429, !dbg !13411

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13412
  %430 = tail call i32 @HAL_GetTick() #26, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %430, metadata !13094, metadata !DIExpression()), !dbg !13107
  br label %431, !dbg !13414

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13415
  %433 = and i32 %432, 536870912, !dbg !13416
  %434 = icmp eq i32 %433, 0, !dbg !13416
  br i1 %434, label %435, label %439, !dbg !13414

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #26, !dbg !13417
  %437 = sub i32 %436, %430, !dbg !13420
  %438 = icmp ugt i32 %437, 2, !dbg !13421
  br i1 %438, label %439, label %431, !dbg !13422, !llvm.loop !13423

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !13107
  ret i32 %440, !dbg !13425
}

; Function Attrs: optsize
declare !dbg !13426 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !13428 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !13432, metadata !DIExpression()), !dbg !13434
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !13435
  store i32 2047, i32* %2, align 4, !dbg !13436
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13437
  %4 = and i32 %3, 63, !dbg !13438
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13439
  store i32 %4, i32* %5, align 4, !dbg !13440
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13441
  %7 = lshr i32 %6, 6, !dbg !13442
  %8 = and i32 %7, 511, !dbg !13442
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13443
  store i32 %8, i32* %9, align 4, !dbg !13444
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13445
  %11 = lshr i32 %10, 15, !dbg !13446
  %12 = and i32 %11, 6, !dbg !13446
  %13 = add nuw nsw i32 %12, 2, !dbg !13446
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13447
  store i32 %13, i32* %14, align 4, !dbg !13448
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13449
  %16 = lshr i32 %15, 24, !dbg !13450
  %17 = and i32 %16, 15, !dbg !13450
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13451
  store i32 %17, i32* %18, align 4, !dbg !13452
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13453
  %20 = lshr i32 %19, 28, !dbg !13454
  %21 = and i32 %20, 7, !dbg !13454
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13455
  store i32 %21, i32* %22, align 4, !dbg !13456
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13457
  %24 = and i32 %23, 63, !dbg !13458
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !13459
  store i32 %24, i32* %25, align 4, !dbg !13460
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13461
  %27 = lshr i32 %26, 6, !dbg !13462
  %28 = and i32 %27, 511, !dbg !13462
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !13463
  store i32 %28, i32* %29, align 4, !dbg !13464
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13465
  %31 = lshr i32 %30, 15, !dbg !13466
  %32 = and i32 %31, 6, !dbg !13466
  %33 = add nuw nsw i32 %32, 2, !dbg !13466
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !13467
  store i32 %33, i32* %34, align 4, !dbg !13468
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13469
  %36 = lshr i32 %35, 24, !dbg !13470
  %37 = and i32 %36, 15, !dbg !13470
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !13471
  store i32 %37, i32* %38, align 4, !dbg !13472
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13473
  %40 = and i32 %39, 31, !dbg !13474
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !13475
  store i32 %40, i32* %41, align 4, !dbg !13476
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13477
  %43 = lshr i32 %42, 8, !dbg !13478
  %44 = and i32 %43, 31, !dbg !13478
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !13479
  store i32 %44, i32* %45, align 4, !dbg !13480
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13481
  %47 = and i32 %46, 3145728, !dbg !13481
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13482
  store i32 %47, i32* %48, align 4, !dbg !13483
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13484
  %50 = and i32 %49, 12582912, !dbg !13484
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13485
  store i32 %50, i32* %51, align 4, !dbg !13486
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13487
  %53 = and i32 %52, 100663296, !dbg !13487
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13488
  store i32 %53, i32* %54, align 4, !dbg !13489
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13490
  %56 = and i32 %55, 402653184, !dbg !13490
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13491
  store i32 %56, i32* %57, align 4, !dbg !13492
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13493
  %59 = and i32 %58, 2031616, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %59, metadata !13433, metadata !DIExpression()), !dbg !13434
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13495
  %61 = and i32 %60, 768, !dbg !13496
  %62 = or i32 %61, %59, !dbg !13497
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13498
  store i32 %62, i32* %63, align 4, !dbg !13499
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13500
  %65 = and i32 %64, 67108864, !dbg !13500
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !13501
  store i32 %65, i32* %66, align 4, !dbg !13502
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13503
  %68 = and i32 %67, 12582912, !dbg !13503
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !13504
  store i32 %68, i32* %69, align 4, !dbg !13505
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13506
  %71 = and i32 %70, 134217728, !dbg !13506
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13507
  store i32 %71, i32* %72, align 4, !dbg !13508
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13509
  %74 = and i32 %73, 268435456, !dbg !13509
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !13510
  store i32 %74, i32* %75, align 4, !dbg !13511
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13512
  %77 = and i32 %76, 536870912, !dbg !13512
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13513
  store i32 %77, i32* %78, align 4, !dbg !13514
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13515
  %80 = lshr i32 %79, 24, !dbg !13517
  %81 = trunc i32 %80 to i8, !dbg !13517
  %82 = and i8 %81, 1, !dbg !13517
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !13518
  store i8 %82, i8* %83, align 4, !dbg !13520
  ret void, !dbg !13521
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #17 !dbg !13522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13524, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13525, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13526, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13528, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13529, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13530, metadata !DIExpression()), !dbg !13531
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !13532

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13533
  call void @llvm.dbg.value(metadata i32 %3, metadata !13528, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 %3, metadata !13528, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !13531
  %4 = lshr i32 %3, 20, !dbg !13536
  %5 = and i32 %4, 15, !dbg !13536
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !13536

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13537
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13541
  %9 = and i32 %8, 63, !dbg !13541
  %10 = udiv i32 16000000, %9, !dbg !13541
  call void @llvm.dbg.value(metadata i32 %10, metadata !13527, metadata !DIExpression()), !dbg !13531
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13542
  %12 = lshr i32 %11, 24, !dbg !13543
  %13 = and i32 %12, 15, !dbg !13543
  call void @llvm.dbg.value(metadata i32 %13, metadata !13525, metadata !DIExpression()), !dbg !13531
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13544
  %15 = lshr i32 %14, 6, !dbg !13545
  %16 = and i32 %15, 511, !dbg !13545
  %17 = mul i32 %16, %10, !dbg !13546
  %18 = udiv i32 %17, %13, !dbg !13547
  call void @llvm.dbg.value(metadata i32 %18, metadata !13526, metadata !DIExpression()), !dbg !13531
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13548
  %20 = lshr i32 %19, 8, !dbg !13549
  %21 = and i32 %20, 31, !dbg !13549
  %22 = add nuw nsw i32 %21, 1, !dbg !13550
  call void @llvm.dbg.value(metadata i32 %22, metadata !13525, metadata !DIExpression()), !dbg !13531
  %23 = udiv i32 %18, %22, !dbg !13551
  call void @llvm.dbg.value(metadata i32 %23, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13552

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13553
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13556
  %27 = and i32 %26, 63, !dbg !13556
  %28 = udiv i32 16000000, %27, !dbg !13556
  call void @llvm.dbg.value(metadata i32 %28, metadata !13527, metadata !DIExpression()), !dbg !13531
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13557
  %30 = lshr i32 %29, 24, !dbg !13558
  %31 = and i32 %30, 15, !dbg !13558
  call void @llvm.dbg.value(metadata i32 %31, metadata !13525, metadata !DIExpression()), !dbg !13531
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13559
  %33 = lshr i32 %32, 6, !dbg !13560
  %34 = and i32 %33, 511, !dbg !13560
  %35 = mul i32 %34, %28, !dbg !13561
  %36 = udiv i32 %35, %31, !dbg !13562
  call void @llvm.dbg.value(metadata i32 %36, metadata !13526, metadata !DIExpression()), !dbg !13531
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13563
  %38 = and i32 %37, 31, !dbg !13564
  %39 = add nuw nsw i32 %38, 1, !dbg !13565
  call void @llvm.dbg.value(metadata i32 %39, metadata !13525, metadata !DIExpression()), !dbg !13531
  %40 = udiv i32 %36, %39, !dbg !13566
  call void @llvm.dbg.value(metadata i32 %40, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13567

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13568
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13571
  %44 = and i32 %43, 63, !dbg !13571
  %45 = udiv i32 16000000, %44, !dbg !13571
  call void @llvm.dbg.value(metadata i32 %45, metadata !13527, metadata !DIExpression()), !dbg !13531
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13572
  %47 = lshr i32 %46, 28, !dbg !13573
  %48 = and i32 %47, 7, !dbg !13573
  call void @llvm.dbg.value(metadata i32 %48, metadata !13525, metadata !DIExpression()), !dbg !13531
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13574
  %50 = lshr i32 %49, 6, !dbg !13575
  %51 = and i32 %50, 511, !dbg !13575
  %52 = mul i32 %51, %45, !dbg !13576
  %53 = udiv i32 %52, %48, !dbg !13577
  call void @llvm.dbg.value(metadata i32 %53, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13578

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13579

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13581
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13526, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13584
  call void @llvm.dbg.value(metadata i32 %58, metadata !13529, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !13531
  %59 = lshr i32 %58, 25, !dbg !13586
  %60 = and i32 %59, 3, !dbg !13586
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !13586

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13591
  %64 = and i32 %63, 63, !dbg !13591
  %65 = udiv i32 16000000, %64, !dbg !13591
  call void @llvm.dbg.value(metadata i32 %65, metadata !13527, metadata !DIExpression()), !dbg !13531
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13592
  %67 = lshr i32 %66, 6, !dbg !13593
  %68 = and i32 %67, 511, !dbg !13593
  %69 = mul i32 %68, %65, !dbg !13594
  call void @llvm.dbg.value(metadata i32 %69, metadata !13530, metadata !DIExpression()), !dbg !13531
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13595
  %71 = lshr i32 %70, 28, !dbg !13596
  %72 = and i32 %71, 7, !dbg !13596
  %73 = udiv i32 %69, %72, !dbg !13597
  call void @llvm.dbg.value(metadata i32 %73, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13598

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13602
  %77 = and i32 %76, 63, !dbg !13602
  %78 = udiv i32 16000000, %77, !dbg !13602
  call void @llvm.dbg.value(metadata i32 %78, metadata !13527, metadata !DIExpression()), !dbg !13531
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13603
  %80 = lshr i32 %79, 6, !dbg !13604
  %81 = and i32 %80, 511, !dbg !13604
  %82 = mul i32 %81, %78, !dbg !13605
  call void @llvm.dbg.value(metadata i32 %82, metadata !13530, metadata !DIExpression()), !dbg !13531
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13606
  %84 = lshr i32 %83, 28, !dbg !13607
  %85 = and i32 %84, 7, !dbg !13607
  %86 = udiv i32 %82, %85, !dbg !13608
  call void @llvm.dbg.value(metadata i32 %86, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13609

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13610
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13526, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13613
  call void @llvm.dbg.value(metadata i32 %91, metadata !13529, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !13531
  %92 = lshr i32 %91, 27, !dbg !13615
  %93 = and i32 %92, 3, !dbg !13615
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !13615

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13616
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13620
  %97 = and i32 %96, 63, !dbg !13620
  %98 = udiv i32 16000000, %97, !dbg !13620
  call void @llvm.dbg.value(metadata i32 %98, metadata !13527, metadata !DIExpression()), !dbg !13531
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13621
  %100 = lshr i32 %99, 6, !dbg !13622
  %101 = and i32 %100, 511, !dbg !13622
  %102 = mul i32 %101, %98, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %102, metadata !13530, metadata !DIExpression()), !dbg !13531
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13624
  %104 = lshr i32 %103, 28, !dbg !13625
  %105 = and i32 %104, 7, !dbg !13625
  %106 = udiv i32 %102, %105, !dbg !13626
  call void @llvm.dbg.value(metadata i32 %106, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13627

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 undef, metadata !13527, metadata !DIExpression()), !dbg !13531
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13631
  %110 = and i32 %109, 63, !dbg !13631
  %111 = udiv i32 16000000, %110, !dbg !13631
  call void @llvm.dbg.value(metadata i32 %111, metadata !13527, metadata !DIExpression()), !dbg !13531
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13632
  %113 = lshr i32 %112, 6, !dbg !13633
  %114 = and i32 %113, 511, !dbg !13633
  %115 = mul i32 %114, %111, !dbg !13634
  call void @llvm.dbg.value(metadata i32 %115, metadata !13530, metadata !DIExpression()), !dbg !13531
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13635
  %117 = lshr i32 %116, 28, !dbg !13636
  %118 = and i32 %117, 7, !dbg !13636
  %119 = udiv i32 %115, %118, !dbg !13637
  call void @llvm.dbg.value(metadata i32 %119, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123, !dbg !13638

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13639
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13526, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13526, metadata !DIExpression()), !dbg !13531
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !13531
  call void @llvm.dbg.value(metadata i32 %124, metadata !13526, metadata !DIExpression()), !dbg !13531
  ret i32 %124, !dbg !13642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #16 !dbg !13643 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13647, metadata !DIExpression()), !dbg !13648
  %2 = icmp eq i8 %0, 1, !dbg !13649
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13651
  %4 = and i32 %3, -9, !dbg !13652
  %5 = select i1 %2, i32 8, i32 0, !dbg !13652
  %6 = or i32 %4, %5, !dbg !13652
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13651
  ret void, !dbg !13653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13654 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !13659, metadata !DIExpression()), !dbg !13661
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13662
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !13663
  call void @llvm.dbg.value(metadata i32 %2, metadata !13660, metadata !DIExpression()), !dbg !13661
  br label %3, !dbg !13664

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13665
  %5 = and i32 %4, 134217728, !dbg !13665
  %6 = icmp eq i32 %5, 0, !dbg !13665
  br i1 %6, label %11, label %7, !dbg !13664

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !13666
  %9 = sub i32 %8, %2, !dbg !13669
  %10 = icmp ugt i32 %9, 2, !dbg !13670
  br i1 %10, label %41, label %3, !dbg !13671, !llvm.loop !13672

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !13674
  %13 = load i32, i32* %12, align 4, !dbg !13674
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !13674
  %15 = load i32, i32* %14, align 4, !dbg !13674
  %16 = shl i32 %15, 6, !dbg !13674
  %17 = or i32 %16, %13, !dbg !13674
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !13674
  %19 = load i32, i32* %18, align 4, !dbg !13674
  %20 = shl i32 %19, 15, !dbg !13674
  %21 = add i32 %20, -65536, !dbg !13674
  %22 = and i32 %21, -65536, !dbg !13674
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !13674
  %24 = load i32, i32* %23, align 4, !dbg !13674
  %25 = shl i32 %24, 24, !dbg !13674
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !13674
  %27 = load i32, i32* %26, align 4, !dbg !13674
  %28 = shl i32 %27, 28, !dbg !13674
  %29 = or i32 %17, %25, !dbg !13674
  %30 = or i32 %29, %22, !dbg !13674
  %31 = or i32 %30, %28, !dbg !13674
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13674
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13675
  %32 = tail call i32 @HAL_GetTick() #26, !dbg !13676
  call void @llvm.dbg.value(metadata i32 %32, metadata !13660, metadata !DIExpression()), !dbg !13661
  br label %33, !dbg !13677

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13678
  %35 = and i32 %34, 134217728, !dbg !13679
  %36 = icmp eq i32 %35, 0, !dbg !13679
  br i1 %36, label %37, label %41, !dbg !13677

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #26, !dbg !13680
  %39 = sub i32 %38, %32, !dbg !13683
  %40 = icmp ugt i32 %39, 2, !dbg !13684
  br i1 %40, label %41, label %33, !dbg !13685, !llvm.loop !13686

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !13661
  ret i32 %42, !dbg !13688
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !13689 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13694
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %1, metadata !13693, metadata !DIExpression()), !dbg !13696
  br label %2, !dbg !13697

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13698
  %4 = and i32 %3, 134217728, !dbg !13698
  %5 = icmp eq i32 %4, 0, !dbg !13699
  br i1 %5, label %10, label %6, !dbg !13697

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !13700
  %8 = sub i32 %7, %1, !dbg !13703
  %9 = icmp ugt i32 %8, 2, !dbg !13704
  br i1 %9, label %10, label %2, !dbg !13705, !llvm.loop !13706

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13696
  ret i32 %11, !dbg !13708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13709 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !13714, metadata !DIExpression()), !dbg !13716
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13717
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !13718
  call void @llvm.dbg.value(metadata i32 %2, metadata !13715, metadata !DIExpression()), !dbg !13716
  br label %3, !dbg !13719

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13720
  %5 = and i32 %4, 536870912, !dbg !13720
  %6 = icmp eq i32 %5, 0, !dbg !13720
  br i1 %6, label %11, label %7, !dbg !13719

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !13721
  %9 = sub i32 %8, %2, !dbg !13724
  %10 = icmp ugt i32 %9, 2, !dbg !13725
  br i1 %10, label %37, label %3, !dbg !13726, !llvm.loop !13727

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !13729
  %13 = load i32, i32* %12, align 4, !dbg !13729
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !13729
  %15 = load i32, i32* %14, align 4, !dbg !13729
  %16 = shl i32 %15, 6, !dbg !13729
  %17 = or i32 %16, %13, !dbg !13729
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !13729
  %19 = load i32, i32* %18, align 4, !dbg !13729
  %20 = shl i32 %19, 15, !dbg !13729
  %21 = add i32 %20, -65536, !dbg !13729
  %22 = and i32 %21, -65536, !dbg !13729
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !13729
  %24 = load i32, i32* %23, align 4, !dbg !13729
  %25 = shl i32 %24, 24, !dbg !13729
  %26 = or i32 %17, %25, !dbg !13729
  %27 = or i32 %26, %22, !dbg !13729
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13729
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13730
  %28 = tail call i32 @HAL_GetTick() #26, !dbg !13731
  call void @llvm.dbg.value(metadata i32 %28, metadata !13715, metadata !DIExpression()), !dbg !13716
  br label %29, !dbg !13732

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13733
  %31 = and i32 %30, 536870912, !dbg !13734
  %32 = icmp eq i32 %31, 0, !dbg !13734
  br i1 %32, label %33, label %37, !dbg !13732

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #26, !dbg !13735
  %35 = sub i32 %34, %28, !dbg !13738
  %36 = icmp ugt i32 %35, 2, !dbg !13739
  br i1 %36, label %37, label %29, !dbg !13740, !llvm.loop !13741

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !13716
  ret i32 %38, !dbg !13743
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !13744 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13747
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !13748
  call void @llvm.dbg.value(metadata i32 %1, metadata !13746, metadata !DIExpression()), !dbg !13749
  br label %2, !dbg !13750

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13751
  %4 = and i32 %3, 536870912, !dbg !13751
  %5 = icmp eq i32 %4, 0, !dbg !13751
  br i1 %5, label %10, label %6, !dbg !13750

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !13752
  %8 = sub i32 %7, %1, !dbg !13755
  %9 = icmp ugt i32 %8, 2, !dbg !13756
  br i1 %9, label %10, label %2, !dbg !13757, !llvm.loop !13758

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13749
  ret i32 %11, !dbg !13760
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !13761 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13763, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 0, metadata !13764, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 0, metadata !13765, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 0, metadata !13766, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 0, metadata !13767, metadata !DIExpression()), !dbg !13768
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13769
  %2 = lshr i32 %1, 2, !dbg !13770
  %3 = and i32 %2, 3, !dbg !13770
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !13770

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13771
  %6 = and i32 %5, 63, !dbg !13774
  call void @llvm.dbg.value(metadata i32 %6, metadata !13763, metadata !DIExpression()), !dbg !13768
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13775
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13777
  %9 = lshr i32 %8, 6, !dbg !13777
  %10 = and i32 %9, 511, !dbg !13777
  %11 = zext i32 %10 to i64, !dbg !13777
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13777
  %13 = zext i32 %6 to i64, !dbg !13777
  %14 = udiv i64 %12, %13, !dbg !13777
  %15 = trunc i64 %14 to i32, !dbg !13777
  call void @llvm.dbg.value(metadata i32 %15, metadata !13764, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 %15, metadata !13764, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 %15, metadata !13764, metadata !DIExpression()), !dbg !13768
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13778
  %17 = lshr i32 %16, 15, !dbg !13779
  %18 = and i32 %17, 6, !dbg !13779
  %19 = add nuw nsw i32 %18, 2, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %19, metadata !13765, metadata !DIExpression()), !dbg !13768
  %20 = udiv i32 %15, %19, !dbg !13780
  call void @llvm.dbg.value(metadata i32 %20, metadata !13767, metadata !DIExpression()), !dbg !13768
  br label %38, !dbg !13781

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13782
  %23 = and i32 %22, 63, !dbg !13784
  call void @llvm.dbg.value(metadata i32 %23, metadata !13763, metadata !DIExpression()), !dbg !13768
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13785
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13787
  %26 = lshr i32 %25, 6, !dbg !13787
  %27 = and i32 %26, 511, !dbg !13787
  %28 = zext i32 %27 to i64, !dbg !13787
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !13787
  %30 = zext i32 %23 to i64, !dbg !13787
  %31 = udiv i64 %29, %30, !dbg !13787
  %32 = trunc i64 %31 to i32, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %32, metadata !13764, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 %32, metadata !13764, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 %32, metadata !13764, metadata !DIExpression()), !dbg !13768
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13788
  %34 = lshr i32 %33, 28, !dbg !13789
  %35 = and i32 %34, 7, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %35, metadata !13766, metadata !DIExpression()), !dbg !13768
  %36 = udiv i32 %32, %35, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %36, metadata !13767, metadata !DIExpression()), !dbg !13768
  br label %38, !dbg !13791

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !13792
  call void @llvm.dbg.value(metadata i32 %39, metadata !13767, metadata !DIExpression()), !dbg !13768
  ret i32 %39, !dbg !13793
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13794 {
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %1, metadata !13796, metadata !DIExpression()), !dbg !13798
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13799
  %3 = or i32 %2, 1, !dbg !13799
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13799
  br label %4, !dbg !13800

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13801
  %6 = and i32 %5, 2, !dbg !13801
  %7 = icmp eq i32 %6, 0, !dbg !13802
  br i1 %7, label %8, label %12, !dbg !13800

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #26, !dbg !13803
  %10 = sub i32 %9, %1, !dbg !13806
  %11 = icmp ugt i32 %10, 2, !dbg !13807
  br i1 %11, label %89, label %4, !dbg !13808, !llvm.loop !13809

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13811
  %14 = or i32 %13, 128, !dbg !13811
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13811
  %15 = tail call i32 @HAL_GetTick() #26, !dbg !13812
  call void @llvm.dbg.value(metadata i32 %15, metadata !13796, metadata !DIExpression()), !dbg !13798
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13813
  br label %16, !dbg !13814

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13815
  %18 = and i32 %17, 12, !dbg !13815
  %19 = icmp eq i32 %18, 0, !dbg !13816
  %20 = tail call i32 @HAL_GetTick() #26, !dbg !13798
  br i1 %19, label %24, label %21, !dbg !13814

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !13817
  %23 = icmp ugt i32 %22, 5000, !dbg !13820
  br i1 %23, label %89, label %16, !dbg !13821, !llvm.loop !13822

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !13796, metadata !DIExpression()), !dbg !13798
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13824
  %26 = and i32 %25, -851969, !dbg !13824
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13824
  br label %27, !dbg !13825

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13826
  %29 = and i32 %28, 131072, !dbg !13826
  %30 = icmp eq i32 %29, 0, !dbg !13827
  %31 = tail call i32 @HAL_GetTick() #26, !dbg !13798
  br i1 %30, label %35, label %32, !dbg !13825

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !13828
  %34 = icmp ugt i32 %33, 100, !dbg !13831
  br i1 %34, label %89, label %27, !dbg !13832, !llvm.loop !13833

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !13796, metadata !DIExpression()), !dbg !13798
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13835
  %37 = and i32 %36, -16777217, !dbg !13835
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13835
  br label %38, !dbg !13836

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13837
  %40 = and i32 %39, 33554432, !dbg !13837
  %41 = icmp eq i32 %40, 0, !dbg !13838
  %42 = tail call i32 @HAL_GetTick() #26, !dbg !13798
  br i1 %41, label %46, label %43, !dbg !13836

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !13839
  %45 = icmp ugt i32 %44, 2, !dbg !13842
  br i1 %45, label %89, label %38, !dbg !13843, !llvm.loop !13844

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !13796, metadata !DIExpression()), !dbg !13798
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13846
  %48 = and i32 %47, -67108865, !dbg !13846
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13846
  br label %49, !dbg !13847

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13848
  %51 = and i32 %50, 134217728, !dbg !13848
  %52 = icmp eq i32 %51, 0, !dbg !13849
  %53 = tail call i32 @HAL_GetTick() #26, !dbg !13798
  br i1 %52, label %57, label %54, !dbg !13847

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !13850
  %56 = icmp ugt i32 %55, 2, !dbg !13853
  br i1 %56, label %89, label %49, !dbg !13854, !llvm.loop !13855

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !13796, metadata !DIExpression()), !dbg !13798
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13857
  %59 = and i32 %58, -268435457, !dbg !13857
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13857
  br label %60, !dbg !13858

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13859
  %62 = and i32 %61, 536870912, !dbg !13859
  %63 = icmp eq i32 %62, 0, !dbg !13860
  br i1 %63, label %68, label %64, !dbg !13858

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #26, !dbg !13861
  %66 = sub i32 %65, %53, !dbg !13864
  %67 = icmp ugt i32 %66, 2, !dbg !13865
  br i1 %67, label %89, label %60, !dbg !13866, !llvm.loop !13867

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13869
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13870
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13871
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13872
  %70 = and i32 %69, -7937, !dbg !13872
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13872
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13873
  %72 = and i32 %71, -8193, !dbg !13873
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13873
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13874
  %74 = and i32 %73, -16385, !dbg !13874
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13874
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13875
  %76 = or i32 %75, 10420224, !dbg !13875
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13875
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13876
  %78 = or i32 %77, 2097152, !dbg !13876
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13876
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13877
  %80 = or i32 %79, 4194304, !dbg !13877
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13877
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13878
  %82 = and i32 %81, -2, !dbg !13878
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13878
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13879
  %84 = or i32 %83, 16777216, !dbg !13879
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13879
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !13880
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !13881
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #26, !dbg !13883
  %87 = icmp ne i32 %86, 0, !dbg !13884
  %88 = zext i1 %87 to i32, !dbg !13885
  br label %89, !dbg !13885

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !13798
  ret i32 %90, !dbg !13886
}

; Function Attrs: optsize
declare !dbg !13887 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13890 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13916, metadata !DIExpression()), !dbg !13927
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13928
  br i1 %3, label %337, label %4, !dbg !13930

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13931
  %6 = load i32, i32* %5, align 4, !dbg !13931
  %7 = and i32 %6, 1, !dbg !13933
  %8 = icmp eq i32 %7, 0, !dbg !13934
  br i1 %8, label %74, label %9, !dbg !13935

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13936
  %11 = and i32 %10, 12, !dbg !13936
  %12 = icmp eq i32 %11, 4, !dbg !13939
  br i1 %12, label %29, label %13, !dbg !13940

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13941
  %15 = and i32 %14, 12, !dbg !13941
  %16 = icmp eq i32 %15, 8, !dbg !13942
  br i1 %16, label %17, label %21, !dbg !13943

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13944
  %19 = and i32 %18, 4194304, !dbg !13945
  %20 = icmp eq i32 %19, 0, !dbg !13946
  br i1 %20, label %21, label %29, !dbg !13947

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13948
  %23 = and i32 %22, 12, !dbg !13948
  %24 = icmp eq i32 %23, 12, !dbg !13949
  br i1 %24, label %25, label %37, !dbg !13950

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13951
  %27 = and i32 %26, 4194304, !dbg !13952
  %28 = icmp eq i32 %27, 0, !dbg !13953
  br i1 %28, label %37, label %29, !dbg !13954

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13955
  %31 = and i32 %30, 131072, !dbg !13955
  %32 = icmp eq i32 %31, 0, !dbg !13955
  br i1 %32, label %74, label %33, !dbg !13958

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13959
  %35 = load i32, i32* %34, align 4, !dbg !13959
  %36 = icmp eq i32 %35, 0, !dbg !13960
  br i1 %36, label %337, label %74, !dbg !13961

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13962
  %39 = load i32, i32* %38, align 4, !dbg !13962
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !13966

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13967
  %42 = or i32 %41, 65536, !dbg !13967
  br label %53, !dbg !13967

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13969
  %45 = or i32 %44, 262144, !dbg !13969
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13969
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13969
  %47 = or i32 %46, 65536, !dbg !13969
  br label %53, !dbg !13969

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13972
  %50 = and i32 %49, -65537, !dbg !13972
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13972
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13972
  %52 = and i32 %51, -262145, !dbg !13972
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13974
  %55 = load i32, i32* %38, align 4, !dbg !13975
  %56 = icmp eq i32 %55, 0, !dbg !13977
  %57 = tail call i32 @HAL_GetTick() #26, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %57, metadata !13917, metadata !DIExpression()), !dbg !13927
  call void @llvm.dbg.value(metadata i32 %57, metadata !13917, metadata !DIExpression()), !dbg !13927
  br i1 %56, label %66, label %58, !dbg !13979

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13980
  %60 = and i32 %59, 131072, !dbg !13982
  %61 = icmp eq i32 %60, 0, !dbg !13982
  br i1 %61, label %62, label %74, !dbg !13983

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !13984
  %64 = sub i32 %63, %57, !dbg !13987
  %65 = icmp ugt i32 %64, 100, !dbg !13988
  br i1 %65, label %337, label %58, !dbg !13989, !llvm.loop !13990

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13992
  %68 = and i32 %67, 131072, !dbg !13992
  %69 = icmp eq i32 %68, 0, !dbg !13992
  br i1 %69, label %74, label %70, !dbg !13994

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #26, !dbg !13995
  %72 = sub i32 %71, %57, !dbg !13998
  %73 = icmp ugt i32 %72, 100, !dbg !13999
  br i1 %73, label %337, label %66, !dbg !14000, !llvm.loop !14001

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !14003
  %76 = and i32 %75, 2, !dbg !14005
  %77 = icmp eq i32 %76, 0, !dbg !14006
  br i1 %77, label %137, label %78, !dbg !14007

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14008
  %80 = and i32 %79, 12, !dbg !14008
  %81 = icmp eq i32 %80, 0, !dbg !14011
  br i1 %81, label %98, label %82, !dbg !14012

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14013
  %84 = and i32 %83, 12, !dbg !14013
  %85 = icmp eq i32 %84, 8, !dbg !14014
  br i1 %85, label %86, label %90, !dbg !14015

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14016
  %88 = and i32 %87, 4194304, !dbg !14017
  %89 = icmp eq i32 %88, 0, !dbg !14018
  br i1 %89, label %98, label %90, !dbg !14019

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14020
  %92 = and i32 %91, 12, !dbg !14020
  %93 = icmp eq i32 %92, 12, !dbg !14021
  br i1 %93, label %94, label %106, !dbg !14022

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14023
  %96 = and i32 %95, 4194304, !dbg !14024
  %97 = icmp eq i32 %96, 0, !dbg !14025
  br i1 %97, label %98, label %106, !dbg !14026

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14027
  %100 = and i32 %99, 2, !dbg !14027
  %101 = icmp eq i32 %100, 0, !dbg !14027
  br i1 %101, label %130, label %102, !dbg !14030

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14031
  %104 = load i32, i32* %103, align 4, !dbg !14031
  %105 = icmp eq i32 %104, 1, !dbg !14032
  br i1 %105, label %130, label %337, !dbg !14033

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14034
  %108 = load i32, i32* %107, align 4, !dbg !14034
  %109 = icmp eq i32 %108, 0, !dbg !14037
  br i1 %109, label %120, label %110, !dbg !14038

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !14039
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !14041
  call void @llvm.dbg.value(metadata i32 %111, metadata !13917, metadata !DIExpression()), !dbg !13927
  br label %112, !dbg !14042

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14043
  %114 = and i32 %113, 2, !dbg !14044
  %115 = icmp eq i32 %114, 0, !dbg !14044
  br i1 %115, label %116, label %130, !dbg !14042

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #26, !dbg !14045
  %118 = sub i32 %117, %111, !dbg !14048
  %119 = icmp ugt i32 %118, 2, !dbg !14049
  br i1 %119, label %337, label %112, !dbg !14050, !llvm.loop !14051

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !14053
  %121 = tail call i32 @HAL_GetTick() #26, !dbg !14055
  call void @llvm.dbg.value(metadata i32 %121, metadata !13917, metadata !DIExpression()), !dbg !13927
  br label %122, !dbg !14056

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14057
  %124 = and i32 %123, 2, !dbg !14057
  %125 = icmp eq i32 %124, 0, !dbg !14057
  br i1 %125, label %137, label %126, !dbg !14056

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #26, !dbg !14058
  %128 = sub i32 %127, %121, !dbg !14061
  %129 = icmp ugt i32 %128, 2, !dbg !14062
  br i1 %129, label %337, label %122, !dbg !14063, !llvm.loop !14064

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14066
  %132 = and i32 %131, -249, !dbg !14066
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14066
  %134 = load i32, i32* %133, align 4, !dbg !14066
  %135 = shl i32 %134, 3, !dbg !14066
  %136 = or i32 %135, %132, !dbg !14066
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14066
  br label %137, !dbg !14067

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !14067
  %139 = and i32 %138, 8, !dbg !14069
  %140 = icmp eq i32 %139, 0, !dbg !14070
  br i1 %140, label %165, label %141, !dbg !14071

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14072
  %143 = load i32, i32* %142, align 4, !dbg !14072
  %144 = icmp eq i32 %143, 0, !dbg !14075
  br i1 %144, label %155, label %145, !dbg !14076

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !14077
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !14079
  call void @llvm.dbg.value(metadata i32 %146, metadata !13917, metadata !DIExpression()), !dbg !13927
  br label %147, !dbg !14080

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14081
  %149 = and i32 %148, 2, !dbg !14082
  %150 = icmp eq i32 %149, 0, !dbg !14082
  br i1 %150, label %151, label %165, !dbg !14080

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #26, !dbg !14083
  %153 = sub i32 %152, %146, !dbg !14086
  %154 = icmp ugt i32 %153, 2, !dbg !14087
  br i1 %154, label %337, label %147, !dbg !14088, !llvm.loop !14089

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !14091
  %156 = tail call i32 @HAL_GetTick() #26, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %156, metadata !13917, metadata !DIExpression()), !dbg !13927
  br label %157, !dbg !14094

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14095
  %159 = and i32 %158, 2, !dbg !14095
  %160 = icmp eq i32 %159, 0, !dbg !14095
  br i1 %160, label %165, label %161, !dbg !14094

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #26, !dbg !14096
  %163 = sub i32 %162, %156, !dbg !14099
  %164 = icmp ugt i32 %163, 2, !dbg !14100
  br i1 %164, label %337, label %157, !dbg !14101, !llvm.loop !14102

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !14104
  %167 = and i32 %166, 4, !dbg !14105
  %168 = icmp eq i32 %167, 0, !dbg !14106
  br i1 %168, label %237, label %169, !dbg !14107

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !13919, metadata !DIExpression()), !dbg !14108
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14109
  %171 = and i32 %170, 268435456, !dbg !14109
  %172 = icmp eq i32 %171, 0, !dbg !14109
  br i1 %172, label %173, label %180, !dbg !14110

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !14111
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !14111
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13923, metadata !DIExpression()), !dbg !14111
  store volatile i32 0, i32* %2, align 4, !dbg !14111
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14111
  %176 = or i32 %175, 268435456, !dbg !14111
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14111
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14111
  %178 = and i32 %177, 268435456, !dbg !14111
  store volatile i32 %178, i32* %2, align 4, !dbg !14111
  %179 = load volatile i32, i32* %2, align 4, !dbg !14111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !14112
  call void @llvm.dbg.value(metadata i32 1, metadata !13919, metadata !DIExpression()), !dbg !14108
  br label %180, !dbg !14113

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13919, metadata !DIExpression()), !dbg !14108
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14114
  %182 = and i32 %181, 256, !dbg !14114
  %183 = icmp eq i32 %182, 0, !dbg !14114
  br i1 %183, label %184, label %196, !dbg !14116

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14117
  %186 = or i32 %185, 256, !dbg !14117
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14117
  %187 = tail call i32 @HAL_GetTick() #26, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %187, metadata !13917, metadata !DIExpression()), !dbg !13927
  br label %188, !dbg !14120

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14121
  %190 = and i32 %189, 256, !dbg !14121
  %191 = icmp eq i32 %190, 0, !dbg !14121
  br i1 %191, label %192, label %196, !dbg !14120

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #26, !dbg !14122
  %194 = sub i32 %193, %187, !dbg !14125
  %195 = icmp ugt i32 %194, 2, !dbg !14126
  br i1 %195, label %337, label %188, !dbg !14127, !llvm.loop !14128

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14130
  %198 = load i32, i32* %197, align 4, !dbg !14130
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !14133

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14134
  %201 = or i32 %200, 1, !dbg !14134
  br label %212, !dbg !14134

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14136
  %204 = or i32 %203, 4, !dbg !14136
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14136
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14136
  %206 = or i32 %205, 1, !dbg !14136
  br label %212, !dbg !14136

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14139
  %209 = and i32 %208, -2, !dbg !14139
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14139
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14139
  %211 = and i32 %210, -5, !dbg !14139
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14141
  %214 = load i32, i32* %197, align 4, !dbg !14142
  %215 = icmp eq i32 %214, 0, !dbg !14144
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !14145
  call void @llvm.dbg.value(metadata i32 %216, metadata !13917, metadata !DIExpression()), !dbg !13927
  call void @llvm.dbg.value(metadata i32 %216, metadata !13917, metadata !DIExpression()), !dbg !13927
  br i1 %215, label %225, label %217, !dbg !14146

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14147
  %219 = and i32 %218, 2, !dbg !14149
  %220 = icmp eq i32 %219, 0, !dbg !14149
  br i1 %220, label %221, label %233, !dbg !14150

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #26, !dbg !14151
  %223 = sub i32 %222, %216, !dbg !14154
  %224 = icmp ugt i32 %223, 5000, !dbg !14155
  br i1 %224, label %337, label %217, !dbg !14156, !llvm.loop !14157

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14159
  %227 = and i32 %226, 2, !dbg !14159
  %228 = icmp eq i32 %227, 0, !dbg !14159
  br i1 %228, label %233, label %229, !dbg !14161

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !14162
  %231 = sub i32 %230, %216, !dbg !14165
  %232 = icmp ugt i32 %231, 5000, !dbg !14166
  br i1 %232, label %337, label %225, !dbg !14167, !llvm.loop !14168

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !14170

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14171
  %236 = and i32 %235, -268435457, !dbg !14171
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14171
  br label %237, !dbg !14174

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !14175
  %239 = load i32, i32* %238, align 4, !dbg !14175
  %240 = icmp eq i32 %239, 0, !dbg !14177
  br i1 %240, label %336, label %241, !dbg !14178

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14179
  %243 = and i32 %242, 12, !dbg !14179
  %244 = icmp eq i32 %243, 8, !dbg !14182
  br i1 %244, label %297, label %245, !dbg !14183

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !14184
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14187
  %247 = tail call i32 @HAL_GetTick() #26, !dbg !14187
  call void @llvm.dbg.value(metadata i32 %247, metadata !13917, metadata !DIExpression()), !dbg !13927
  call void @llvm.dbg.value(metadata i32 %247, metadata !13917, metadata !DIExpression()), !dbg !13927
  br i1 %246, label %248, label %289, !dbg !14188

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14189
  %250 = and i32 %249, 33554432, !dbg !14189
  %251 = icmp eq i32 %250, 0, !dbg !14189
  br i1 %251, label %256, label %252, !dbg !14191

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #26, !dbg !14192
  %254 = sub i32 %253, %247, !dbg !14195
  %255 = icmp ugt i32 %254, 2, !dbg !14196
  br i1 %255, label %337, label %248, !dbg !14197, !llvm.loop !14198

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14200
  %258 = load i32, i32* %257, align 4, !dbg !14200
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14200
  %260 = load i32, i32* %259, align 4, !dbg !14200
  %261 = or i32 %260, %258, !dbg !14200
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14200
  %263 = load i32, i32* %262, align 4, !dbg !14200
  %264 = shl i32 %263, 6, !dbg !14200
  %265 = or i32 %261, %264, !dbg !14200
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14200
  %267 = load i32, i32* %266, align 4, !dbg !14200
  %268 = shl i32 %267, 15, !dbg !14200
  %269 = add i32 %268, -65536, !dbg !14200
  %270 = and i32 %269, -65536, !dbg !14200
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14200
  %272 = load i32, i32* %271, align 4, !dbg !14200
  %273 = shl i32 %272, 24, !dbg !14200
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14200
  %275 = load i32, i32* %274, align 4, !dbg !14200
  %276 = shl i32 %275, 28, !dbg !14200
  %277 = or i32 %265, %273, !dbg !14200
  %278 = or i32 %277, %270, !dbg !14200
  %279 = or i32 %278, %276, !dbg !14200
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14200
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14201
  %280 = tail call i32 @HAL_GetTick() #26, !dbg !14202
  call void @llvm.dbg.value(metadata i32 %280, metadata !13917, metadata !DIExpression()), !dbg !13927
  br label %281, !dbg !14203

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14204
  %283 = and i32 %282, 33554432, !dbg !14205
  %284 = icmp eq i32 %283, 0, !dbg !14205
  br i1 %284, label %285, label %336, !dbg !14203

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #26, !dbg !14206
  %287 = sub i32 %286, %280, !dbg !14209
  %288 = icmp ugt i32 %287, 2, !dbg !14210
  br i1 %288, label %337, label %281, !dbg !14211, !llvm.loop !14212

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14214
  %291 = and i32 %290, 33554432, !dbg !14214
  %292 = icmp eq i32 %291, 0, !dbg !14214
  br i1 %292, label %336, label %293, !dbg !14216

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #26, !dbg !14217
  %295 = sub i32 %294, %247, !dbg !14220
  %296 = icmp ugt i32 %295, 2, !dbg !14221
  br i1 %296, label %337, label %289, !dbg !14222, !llvm.loop !14223

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !14225
  br i1 %298, label %337, label %299, !dbg !14228

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14229
  call void @llvm.dbg.value(metadata i32 %300, metadata !13918, metadata !DIExpression()), !dbg !13927
  %301 = and i32 %300, 4194304, !dbg !14231
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14233
  %303 = load i32, i32* %302, align 4, !dbg !14233
  %304 = icmp eq i32 %301, %303, !dbg !14234
  br i1 %304, label %305, label %337, !dbg !14235

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !14236
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14237
  %308 = load i32, i32* %307, align 4, !dbg !14237
  %309 = icmp eq i32 %306, %308, !dbg !14238
  br i1 %309, label %310, label %337, !dbg !14239

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !14240
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14241
  %313 = load i32, i32* %312, align 4, !dbg !14241
  %314 = shl i32 %313, 6, !dbg !14242
  %315 = icmp eq i32 %311, %314, !dbg !14243
  br i1 %315, label %316, label %337, !dbg !14244

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !14245
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14246
  %319 = load i32, i32* %318, align 4, !dbg !14246
  %320 = shl i32 %319, 15, !dbg !14247
  %321 = add i32 %320, -65536, !dbg !14247
  %322 = and i32 %321, -65536, !dbg !14247
  %323 = icmp eq i32 %317, %322, !dbg !14248
  br i1 %323, label %324, label %337, !dbg !14249

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !14250
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14251
  %327 = load i32, i32* %326, align 4, !dbg !14251
  %328 = shl i32 %327, 24, !dbg !14252
  %329 = icmp eq i32 %325, %328, !dbg !14253
  br i1 %329, label %330, label %337, !dbg !14254

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !14255
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14256
  %333 = load i32, i32* %332, align 4, !dbg !14256
  %334 = shl i32 %333, 28, !dbg !14257
  %335 = icmp eq i32 %331, %334, !dbg !14258
  br i1 %335, label %336, label %337, !dbg !14259

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !14260

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !13927
  ret i32 %338, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #17 !dbg !14262 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14266, metadata !DIExpression()), !dbg !14267
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14268
  store i32 15, i32* %2, align 4, !dbg !14269
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14270
  %4 = and i32 %3, 262144, !dbg !14272
  %5 = icmp eq i32 %4, 0, !dbg !14273
  br i1 %5, label %8, label %6, !dbg !14274

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14275
  store i32 327680, i32* %7, align 4, !dbg !14277
  br label %15, !dbg !14278

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14279
  %10 = and i32 %9, 65536, !dbg !14281
  %11 = icmp eq i32 %10, 0, !dbg !14282
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14283
  br i1 %11, label %14, label %13, !dbg !14284

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !14285
  br label %15, !dbg !14287

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !14288
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14290
  %17 = and i32 %16, 1, !dbg !14292
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14293
  store i32 %17, i32* %18, align 4, !dbg !14295
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14296
  %20 = lshr i32 %19, 3, !dbg !14297
  %21 = and i32 %20, 31, !dbg !14297
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14298
  store i32 %21, i32* %22, align 4, !dbg !14299
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14300
  %24 = and i32 %23, 4, !dbg !14302
  %25 = icmp eq i32 %24, 0, !dbg !14303
  br i1 %25, label %28, label %26, !dbg !14304

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14305
  store i32 5, i32* %27, align 4, !dbg !14307
  br label %35, !dbg !14308

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14309
  %30 = and i32 %29, 1, !dbg !14311
  %31 = icmp eq i32 %30, 0, !dbg !14312
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14313
  br i1 %31, label %34, label %33, !dbg !14314

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !14315
  br label %35, !dbg !14317

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !14318
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14320
  %37 = and i32 %36, 1, !dbg !14322
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14323
  store i32 %37, i32* %38, align 4, !dbg !14325
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14326
  %40 = and i32 %39, 16777216, !dbg !14328
  %41 = icmp eq i32 %40, 0, !dbg !14329
  %42 = select i1 %41, i32 1, i32 2, !dbg !14330
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !14331
  store i32 %42, i32* %43, align 4, !dbg !14333
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14334
  %45 = and i32 %44, 4194304, !dbg !14335
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14336
  store i32 %45, i32* %46, align 4, !dbg !14337
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14338
  %48 = and i32 %47, 63, !dbg !14339
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14340
  store i32 %48, i32* %49, align 4, !dbg !14341
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14342
  %51 = lshr i32 %50, 6, !dbg !14343
  %52 = and i32 %51, 511, !dbg !14343
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14344
  store i32 %52, i32* %53, align 4, !dbg !14345
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14346
  %55 = shl i32 %54, 1, !dbg !14347
  %56 = and i32 %55, 393216, !dbg !14347
  %57 = add nuw nsw i32 %56, 131072, !dbg !14347
  %58 = lshr exact i32 %57, 16, !dbg !14348
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14349
  store i32 %58, i32* %59, align 4, !dbg !14350
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14351
  %61 = lshr i32 %60, 24, !dbg !14352
  %62 = and i32 %61, 15, !dbg !14352
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14353
  store i32 %62, i32* %63, align 4, !dbg !14354
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14355
  %65 = lshr i32 %64, 28, !dbg !14356
  %66 = and i32 %65, 7, !dbg !14356
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14357
  store i32 %66, i32* %67, align 4, !dbg !14358
  ret void, !dbg !14359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !14360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14363, metadata !DIExpression()), !dbg !14364
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !14365
  ret void, !dbg !14366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !14367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14370, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 1000, metadata !14371, metadata !DIExpression()), !dbg !14372
  %2 = udiv i32 %0, 1000, !dbg !14373
  %3 = add nsw i32 %2, -1, !dbg !14374
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14375
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14376
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14377
  ret void, !dbg !14378
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !14379 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14381, metadata !DIExpression()), !dbg !14383
  %3 = bitcast i32* %2 to i8*, !dbg !14384
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14384
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14382, metadata !DIExpression()), !dbg !14385
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14386
  store volatile i32 %4, i32* %2, align 4, !dbg !14385
  %5 = load volatile i32, i32* %2, align 4, !dbg !14387
  %6 = icmp eq i32 %0, -1, !dbg !14388
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()), !dbg !14383
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14383
  call void @llvm.dbg.value(metadata i32 %8, metadata !14381, metadata !DIExpression()), !dbg !14383
  br label %9, !dbg !14390

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14381, metadata !DIExpression()), !dbg !14383
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14391
  call void @llvm.dbg.value(metadata i32 undef, metadata !14381, metadata !DIExpression()), !dbg !14383
  %12 = shl i32 %11, 15, !dbg !14383
  %13 = ashr i32 %12, 31, !dbg !14383
  %14 = add i32 %13, %10, !dbg !14383
  call void @llvm.dbg.value(metadata i32 %14, metadata !14381, metadata !DIExpression()), !dbg !14383
  %15 = icmp eq i32 %14, 0, !dbg !14390
  br i1 %15, label %16, label %9, !dbg !14390

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14394
  ret void, !dbg !14394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !14395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14397, metadata !DIExpression()), !dbg !14398
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14399
  ret void, !dbg !14400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !14401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14406, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 0, metadata !14409, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata i32 0, metadata !14410, metadata !DIExpression()), !dbg !14411
  %2 = icmp eq i32 %0, 0, !dbg !14412
  br i1 %2, label %72, label %3, !dbg !14414

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !14415
  %5 = icmp eq i32 %4, 49152, !dbg !14418
  br i1 %5, label %6, label %21, !dbg !14419

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !14420
  %8 = select i1 %7, i32 0, i32 5, !dbg !14423
  call void @llvm.dbg.value(metadata i32 %8, metadata !14409, metadata !DIExpression()), !dbg !14411
  %9 = add i32 %0, -120000001, !dbg !14424
  %10 = icmp ult i32 %9, 30000000, !dbg !14424
  %11 = select i1 %10, i32 4, i32 %8, !dbg !14424
  call void @llvm.dbg.value(metadata i32 %11, metadata !14409, metadata !DIExpression()), !dbg !14411
  %12 = icmp ult i32 %9, -30000000, !dbg !14426
  %13 = select i1 %12, i32 %11, i32 3, !dbg !14426
  call void @llvm.dbg.value(metadata i32 %13, metadata !14409, metadata !DIExpression()), !dbg !14411
  %14 = icmp ugt i32 %0, 60000000, !dbg !14428
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !14430
  br i1 %16, label %21, label %17, !dbg !14430

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !14431
  %19 = and i1 %18, %15, !dbg !14434
  %20 = select i1 %19, i32 1, i32 %13, !dbg !14434
  br label %21, !dbg !14434

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !14411
  call void @llvm.dbg.value(metadata i32 %22, metadata !14409, metadata !DIExpression()), !dbg !14411
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !14435
  %24 = icmp eq i32 %23, 32768, !dbg !14437
  br i1 %24, label %25, label %45, !dbg !14438

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !14439
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !14442
  %29 = select i1 %28, i32 5, i32 %22, !dbg !14442
  call void @llvm.dbg.value(metadata i32 %29, metadata !14409, metadata !DIExpression()), !dbg !14411
  %30 = icmp ugt i32 %0, 12000000, !dbg !14443
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !14445
  %33 = select i1 %32, i32 4, i32 %29, !dbg !14445
  call void @llvm.dbg.value(metadata i32 %33, metadata !14409, metadata !DIExpression()), !dbg !14411
  %34 = icmp ugt i32 %0, 90000000, !dbg !14446
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !14448
  %37 = select i1 %36, i32 3, i32 %33, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %37, metadata !14409, metadata !DIExpression()), !dbg !14411
  %38 = icmp ugt i32 %0, 60000000, !dbg !14449
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !14451
  br i1 %40, label %45, label %41, !dbg !14451

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !14452
  %43 = select i1 %42, i1 %39, i1 false, !dbg !14455
  %44 = select i1 %43, i32 1, i32 %37, !dbg !14455
  br label %45, !dbg !14455

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !14456
  call void @llvm.dbg.value(metadata i32 %46, metadata !14409, metadata !DIExpression()), !dbg !14411
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !14457
  %48 = icmp eq i32 %47, 16384, !dbg !14459
  br i1 %48, label %49, label %61, !dbg !14460

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !14461
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !14464
  %53 = select i1 %52, i32 3, i32 %46, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %53, metadata !14409, metadata !DIExpression()), !dbg !14411
  %54 = icmp ugt i32 %0, 60000000, !dbg !14465
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !14467
  br i1 %56, label %61, label %57, !dbg !14467

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !14468
  %59 = select i1 %58, i1 %55, i1 false, !dbg !14471
  %60 = select i1 %59, i32 1, i32 %53, !dbg !14471
  br label %61, !dbg !14471

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !14456
  call void @llvm.dbg.value(metadata i32 %62, metadata !14409, metadata !DIExpression()), !dbg !14411
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #27, !dbg !14472
  call void @llvm.dbg.value(metadata i32 2, metadata !14407, metadata !DIExpression()), !dbg !14411
  br label %63, !dbg !14473

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !14456
  call void @llvm.dbg.value(metadata i32 %64, metadata !14407, metadata !DIExpression()), !dbg !14411
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %65, metadata !14408, metadata !DIExpression()), !dbg !14411
  %66 = add nsw i32 %64, -1, !dbg !14476
  call void @llvm.dbg.value(metadata i32 %66, metadata !14407, metadata !DIExpression()), !dbg !14411
  %67 = icmp ne i32 %65, %62, !dbg !14477
  %68 = icmp ne i32 %66, 0, !dbg !14478
  %69 = select i1 %67, i1 %68, i1 false, !dbg !14478
  br i1 %69, label %63, label %70, !dbg !14479, !llvm.loop !14480

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !14482
  call void @llvm.dbg.value(metadata i32 %73, metadata !14410, metadata !DIExpression()), !dbg !14411
  ret i32 %73, !dbg !14483
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !14484 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14486
  %2 = and i32 %1, 49152, !dbg !14486
  ret i32 %2, !dbg !14487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !14488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14490, metadata !DIExpression()), !dbg !14491
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14492
  %3 = and i32 %2, -16, !dbg !14492
  %4 = or i32 %3, %0, !dbg !14492
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14492
  ret void, !dbg !14493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !14494 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14495
  %2 = and i32 %1, 15, !dbg !14495
  ret i32 %2, !dbg !14496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !14497 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14515, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14516, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 0, metadata !14517, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 0, metadata !14518, metadata !DIExpression()), !dbg !14519
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14520
  %4 = icmp eq i32 %3, 0, !dbg !14522
  br i1 %4, label %5, label %21, !dbg !14523

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !14524
  call void @llvm.dbg.value(metadata i32 %6, metadata !14518, metadata !DIExpression()), !dbg !14519
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.230() #27, !dbg !14526
  %8 = icmp eq i32 %7, 1, !dbg !14528
  br i1 %8, label %13, label %9, !dbg !14529

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.231() #27, !dbg !14530
  br label %10, !dbg !14532

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.230() #27, !dbg !14533
  %12 = icmp eq i32 %11, 1, !dbg !14534
  br i1 %12, label %13, label %10, !dbg !14532, !llvm.loop !14535

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14537
  %15 = load i32, i32* %14, align 4, !dbg !14537
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14538
  %17 = load i32, i32* %16, align 4, !dbg !14538
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14539
  %19 = load i32, i32* %18, align 4, !dbg !14539
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.232(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !14540
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !14541
  call void @llvm.dbg.value(metadata i32 %20, metadata !14517, metadata !DIExpression()), !dbg !14519
  br label %21, !dbg !14542

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14543
  call void @llvm.dbg.value(metadata i32 %22, metadata !14517, metadata !DIExpression()), !dbg !14519
  ret i32 %22, !dbg !14544
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !14545 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14549, metadata !DIExpression()), !dbg !14550
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.234() #27, !dbg !14551
  %2 = icmp ne i32 %1, 0, !dbg !14553
  call void @llvm.dbg.value(metadata i1 %2, metadata !14549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14550
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #27, !dbg !14554
  %4 = icmp ne i32 %3, 0, !dbg !14556
  call void @llvm.dbg.value(metadata i1 undef, metadata !14549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14550
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !14557
  %6 = icmp ne i32 %5, 0, !dbg !14559
  %7 = select i1 %6, i1 true, i1 %4, !dbg !14560
  %8 = select i1 %7, i1 true, i1 %2, !dbg !14560
  %9 = zext i1 %8 to i32, !dbg !14560
  call void @llvm.dbg.value(metadata i32 %9, metadata !14549, metadata !DIExpression()), !dbg !14550
  ret i32 %9, !dbg !14561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !14562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14566, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14567, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 0, metadata !14568, metadata !DIExpression()), !dbg !14569
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14570
  %4 = load i32, i32* %3, align 4, !dbg !14570
  %5 = and i32 %4, 63, !dbg !14571
  %6 = udiv i32 %0, %5, !dbg !14572
  call void @llvm.dbg.value(metadata i32 %6, metadata !14568, metadata !DIExpression()), !dbg !14569
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14573
  %8 = load i32, i32* %7, align 4, !dbg !14573
  %9 = and i32 %8, 511, !dbg !14574
  %10 = mul i32 %9, %6, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %10, metadata !14568, metadata !DIExpression()), !dbg !14569
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14576
  %12 = load i32, i32* %11, align 4, !dbg !14576
  %13 = lshr i32 %12, 15, !dbg !14577
  %14 = and i32 %13, 131070, !dbg !14577
  %15 = add nuw nsw i32 %14, 2, !dbg !14577
  %16 = udiv i32 %10, %15, !dbg !14578
  call void @llvm.dbg.value(metadata i32 %16, metadata !14568, metadata !DIExpression()), !dbg !14569
  ret i32 %16, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.230() unnamed_addr #17 !dbg !14580 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14581
  %2 = lshr i32 %1, 1, !dbg !14582
  %3 = and i32 %2, 1, !dbg !14582
  ret i32 %3, !dbg !14583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.231() unnamed_addr #16 !dbg !14584 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14585
  %2 = or i32 %1, 1, !dbg !14585
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14585
  ret void, !dbg !14586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.232(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !14587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14589, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 %1, metadata !14590, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 %2, metadata !14591, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i32 %3, metadata !14592, metadata !DIExpression()), !dbg !14593
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14594
  %6 = and i32 %5, -4227072, !dbg !14594
  %7 = or i32 %1, %0, !dbg !14594
  %8 = shl i32 %2, 6, !dbg !14594
  %9 = or i32 %7, %8, !dbg !14594
  %10 = or i32 %9, %6, !dbg !14594
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14594
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14595
  %12 = and i32 %11, -196609, !dbg !14595
  %13 = or i32 %12, %3, !dbg !14595
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14595
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14596
  %15 = and i32 %14, -1879048193, !dbg !14596
  %16 = or i32 %15, %3, !dbg !14596
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14596
  ret void, !dbg !14597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !14598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14602, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14603, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32 0, metadata !14604, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14606
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14607
  %4 = load i32, i32* %3, align 4, !dbg !14607
  %5 = lshr i32 %4, 4, !dbg !14607
  %6 = and i32 %5, 15, !dbg !14607
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14607
  %8 = load i8, i8* %7, align 1, !dbg !14607
  %9 = zext i8 %8 to i32, !dbg !14607
  %10 = lshr i32 %0, %9, !dbg !14607
  call void @llvm.dbg.value(metadata i32 %10, metadata !14605, metadata !DIExpression()), !dbg !14606
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14608
  %12 = icmp ult i32 %11, %10, !dbg !14610
  br i1 %12, label %13, label %16, !dbg !14611

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14612
  call void @llvm.dbg.value(metadata i32 %14, metadata !14604, metadata !DIExpression()), !dbg !14606
  %15 = icmp eq i32 %14, 0, !dbg !14614
  br i1 %15, label %16, label %30, !dbg !14616

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.233() #27, !dbg !14617
  br label %17, !dbg !14619

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.234() #27, !dbg !14620
  %19 = icmp eq i32 %18, 1, !dbg !14621
  br i1 %19, label %20, label %17, !dbg !14619, !llvm.loop !14622

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14624
  tail call fastcc void @LL_RCC_SetAHBPrescaler.235(i32 noundef %21) #27, !dbg !14625
  tail call fastcc void @LL_RCC_SetSysClkSource.236() #27, !dbg !14626
  br label %22, !dbg !14627

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.237() #27, !dbg !14628
  %24 = icmp eq i32 %23, 8, !dbg !14629
  br i1 %24, label %25, label %22, !dbg !14627, !llvm.loop !14630

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14632
  %27 = load i32, i32* %26, align 4, !dbg !14632
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.238(i32 noundef %27) #27, !dbg !14633
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14634
  %29 = load i32, i32* %28, align 4, !dbg !14634
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.239(i32 noundef %29) #27, !dbg !14635
  br label %30, !dbg !14636

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14637
  %33 = icmp ugt i32 %32, %10, !dbg !14639
  br i1 %33, label %34, label %36, !dbg !14640

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %35, metadata !14604, metadata !DIExpression()), !dbg !14606
  br label %36, !dbg !14643

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14606
  call void @llvm.dbg.value(metadata i32 %37, metadata !14604, metadata !DIExpression()), !dbg !14606
  %38 = icmp eq i32 %37, 0, !dbg !14644
  br i1 %38, label %39, label %40, !dbg !14646

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !14647
  br label %40, !dbg !14649

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.233() unnamed_addr #16 !dbg !14651 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14652
  %2 = or i32 %1, 16777216, !dbg !14652
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14652
  ret void, !dbg !14653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.234() unnamed_addr #17 !dbg !14654 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14655
  %2 = lshr i32 %1, 25, !dbg !14656
  %3 = and i32 %2, 1, !dbg !14656
  ret i32 %3, !dbg !14657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.235(i32 noundef %0) unnamed_addr #16 !dbg !14658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14660, metadata !DIExpression()), !dbg !14661
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14662
  %3 = and i32 %2, -241, !dbg !14662
  %4 = or i32 %3, %0, !dbg !14662
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14662
  ret void, !dbg !14663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.236() unnamed_addr #16 !dbg !14664 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14666, metadata !DIExpression()), !dbg !14667
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14668
  %2 = and i32 %1, -4, !dbg !14668
  %3 = or i32 %2, 2, !dbg !14668
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14668
  ret void, !dbg !14669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.237() unnamed_addr #17 !dbg !14670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14671
  %2 = and i32 %1, 12, !dbg !14671
  ret i32 %2, !dbg !14672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.238(i32 noundef %0) unnamed_addr #16 !dbg !14673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14675, metadata !DIExpression()), !dbg !14676
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14677
  %3 = and i32 %2, -7169, !dbg !14677
  %4 = or i32 %3, %0, !dbg !14677
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14677
  ret void, !dbg !14678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.239(i32 noundef %0) unnamed_addr #16 !dbg !14679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14681, metadata !DIExpression()), !dbg !14682
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14683
  %3 = and i32 %2, -57345, !dbg !14683
  %4 = or i32 %3, %0, !dbg !14683
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14683
  ret void, !dbg !14684
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #17 !dbg !14685 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14686
  %2 = lshr i32 %1, 29, !dbg !14687
  %3 = and i32 %2, 1, !dbg !14687
  ret i32 %3, !dbg !14688
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14689 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14690
  %2 = lshr i32 %1, 27, !dbg !14691
  %3 = and i32 %2, 1, !dbg !14691
  ret i32 %3, !dbg !14692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !14693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14697, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 %1, metadata !14698, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14699, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14700, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 0, metadata !14701, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 0, metadata !14702, metadata !DIExpression()), !dbg !14703
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14704
  %6 = icmp eq i32 %5, 0, !dbg !14706
  br i1 %6, label %7, label %27, !dbg !14707

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !14708
  call void @llvm.dbg.value(metadata i32 %8, metadata !14702, metadata !DIExpression()), !dbg !14703
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.240() #27, !dbg !14710
  %10 = icmp eq i32 %9, 1, !dbg !14712
  br i1 %10, label %19, label %11, !dbg !14713

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14714
  br i1 %12, label %13, label %14, !dbg !14717

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !14718
  br label %15, !dbg !14720

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.241() #27, !dbg !14721
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.242() #27, !dbg !14723
  br label %16, !dbg !14724

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.240() #27, !dbg !14725
  %18 = icmp eq i32 %17, 1, !dbg !14726
  br i1 %18, label %19, label %16, !dbg !14724, !llvm.loop !14727

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14729
  %21 = load i32, i32* %20, align 4, !dbg !14729
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14730
  %23 = load i32, i32* %22, align 4, !dbg !14730
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14731
  %25 = load i32, i32* %24, align 4, !dbg !14731
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.232(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !14732
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !14733
  call void @llvm.dbg.value(metadata i32 %26, metadata !14701, metadata !DIExpression()), !dbg !14703
  br label %27, !dbg !14734

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14735
  call void @llvm.dbg.value(metadata i32 %28, metadata !14701, metadata !DIExpression()), !dbg !14703
  ret i32 %28, !dbg !14736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.240() unnamed_addr #17 !dbg !14737 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14738
  %2 = lshr i32 %1, 17, !dbg !14739
  %3 = and i32 %2, 1, !dbg !14739
  ret i32 %3, !dbg !14740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !14741 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14742
  %2 = or i32 %1, 262144, !dbg !14742
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14742
  ret void, !dbg !14743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.241() unnamed_addr #16 !dbg !14744 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14745
  %2 = and i32 %1, -262145, !dbg !14745
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14745
  ret void, !dbg !14746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.242() unnamed_addr #16 !dbg !14747 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14748
  %2 = or i32 %1, 65536, !dbg !14748
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14748
  ret void, !dbg !14749
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !14750 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14753, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14769
  ret void, !dbg !14770
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14771 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14775, metadata !DIExpression()), !dbg !14777
  %2 = icmp eq i8* %0, null, !dbg !14778
  br i1 %2, label %29, label %3, !dbg !14780

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14781
  %5 = icmp eq i8 %4, 0, !dbg !14782
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14783
  br i1 %6, label %29, label %8, !dbg !14783

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14776, metadata !DIExpression()), !dbg !14777
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14784

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14776, metadata !DIExpression()), !dbg !14777
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !14786
  br i1 %10, label %11, label %15, !dbg !14791

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14792
  %13 = load i8*, i8** %12, align 4, !dbg !14792
  %14 = icmp eq i8* %13, %0, !dbg !14793
  br i1 %14, label %29, label %15, !dbg !14794

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14795
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14776, metadata !DIExpression()), !dbg !14777
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14796
  br i1 %17, label %7, label %8, !dbg !14797, !llvm.loop !14798

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14776, metadata !DIExpression()), !dbg !14777
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !14800
  br i1 %20, label %21, label %26, !dbg !14804

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14805
  %23 = load i8*, i8** %22, align 4, !dbg !14805
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !14806
  %25 = icmp eq i32 %24, 0, !dbg !14807
  br i1 %25, label %29, label %26, !dbg !14808

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14809
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14776, metadata !DIExpression()), !dbg !14777
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14810
  br i1 %28, label %29, label %18, !dbg !14784, !llvm.loop !14811

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14777
  ret %struct.device* %30, !dbg !14813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !14814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14818, metadata !DIExpression()), !dbg !14819
  %2 = icmp eq %struct.device* %0, null, !dbg !14820
  br i1 %2, label %14, label %3, !dbg !14822

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14823
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14823
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14824
  %7 = load i8, i8* %6, align 1, !dbg !14824
  %8 = and i8 %7, 1, !dbg !14824
  %9 = icmp eq i8 %8, 0, !dbg !14824
  br i1 %9, label %14, label %10, !dbg !14825

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14826
  %12 = load i8, i8* %11, align 1, !dbg !14826
  %13 = icmp eq i8 %12, 0, !dbg !14827
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14819
  ret i1 %15, !dbg !14828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !14829 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14834, metadata !DIExpression()), !dbg !14835
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14836
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14838 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14846, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14847, metadata !DIExpression()), !dbg !14851
  call void @llvm.dbg.value(metadata i8* %2, metadata !14848, metadata !DIExpression()), !dbg !14851
  %5 = bitcast i32* %4 to i8*, !dbg !14852
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14852
  call void @llvm.dbg.value(metadata i32 0, metadata !14849, metadata !DIExpression()), !dbg !14851
  store i32 0, i32* %4, align 4, !dbg !14853
  call void @llvm.dbg.value(metadata i32* %4, metadata !14849, metadata !DIExpression(DW_OP_deref)), !dbg !14851
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14854
  call void @llvm.dbg.value(metadata i16* %6, metadata !14850, metadata !DIExpression()), !dbg !14851
  %7 = load i32, i32* %4, align 4, !dbg !14855
  call void @llvm.dbg.value(metadata i32 %7, metadata !14849, metadata !DIExpression()), !dbg !14851
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14856
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14857
  ret i32 %8, !dbg !14858
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14863, metadata !DIExpression()), !dbg !14869
  call void @llvm.dbg.value(metadata i32* %1, metadata !14864, metadata !DIExpression()), !dbg !14869
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14870
  %4 = load i16*, i16** %3, align 4, !dbg !14870
  call void @llvm.dbg.value(metadata i16* %4, metadata !14865, metadata !DIExpression()), !dbg !14869
  %5 = icmp eq i16* %4, null, !dbg !14871
  br i1 %5, label %14, label %6, !dbg !14872

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14873
  call void @llvm.dbg.value(metadata i32 %7, metadata !14866, metadata !DIExpression()), !dbg !14873
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14874
  %9 = load i16, i16* %8, align 2, !dbg !14874
  %10 = add i16 %9, -32767, !dbg !14875
  %11 = icmp ult i16 %10, 2, !dbg !14875
  %12 = add i32 %7, 1, !dbg !14876
  call void @llvm.dbg.value(metadata i32 %12, metadata !14866, metadata !DIExpression()), !dbg !14873
  br i1 %11, label %13, label %6, !dbg !14875, !llvm.loop !14878

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14881
  br label %14, !dbg !14882

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14884 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14888, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 %1, metadata !14889, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14890, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i8* %3, metadata !14891, metadata !DIExpression()), !dbg !14899
  call void @llvm.dbg.value(metadata i32 0, metadata !14892, metadata !DIExpression()), !dbg !14900
  %5 = icmp eq i32 %1, 0, !dbg !14901
  br i1 %5, label %16, label %8, !dbg !14902

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14892, metadata !DIExpression()), !dbg !14900
  %7 = icmp eq i32 %15, %1, !dbg !14901
  br i1 %7, label %16, label %8, !dbg !14902, !llvm.loop !14903

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14892, metadata !DIExpression()), !dbg !14900
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14905
  %11 = load i16, i16* %10, align 2, !dbg !14905
  call void @llvm.dbg.value(metadata i16 %11, metadata !14894, metadata !DIExpression()), !dbg !14906
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !14907
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14897, metadata !DIExpression()), !dbg !14906
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !14908
  call void @llvm.dbg.value(metadata i32 %13, metadata !14898, metadata !DIExpression()), !dbg !14906
  %14 = icmp slt i32 %13, 0, !dbg !14909
  %15 = add nuw i32 %9, 1, !dbg !14911
  call void @llvm.dbg.value(metadata i32 %15, metadata !14892, metadata !DIExpression()), !dbg !14900
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !14913 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14917, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14918, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14919, metadata !DIExpression()), !dbg !14920
  %2 = sext i16 %0 to i32, !dbg !14921
  %3 = icmp slt i16 %0, 1, !dbg !14923
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14924
  %6 = add nsw i32 %2, -1, !dbg !14924
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14924
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14924
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14918, metadata !DIExpression()), !dbg !14920
  ret %struct.device* %8, !dbg !14925
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14926 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14928, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14929, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i8* %2, metadata !14930, metadata !DIExpression()), !dbg !14933
  %5 = bitcast i32* %4 to i8*, !dbg !14934
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14934
  call void @llvm.dbg.value(metadata i32 0, metadata !14931, metadata !DIExpression()), !dbg !14933
  store i32 0, i32* %4, align 4, !dbg !14935
  call void @llvm.dbg.value(metadata i32* %4, metadata !14931, metadata !DIExpression(DW_OP_deref)), !dbg !14933
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14936
  call void @llvm.dbg.value(metadata i16* %6, metadata !14932, metadata !DIExpression()), !dbg !14933
  %7 = load i32, i32* %4, align 4, !dbg !14937
  call void @llvm.dbg.value(metadata i32 %7, metadata !14931, metadata !DIExpression()), !dbg !14933
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14938
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14939
  ret i32 %8, !dbg !14940
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14943, metadata !DIExpression()), !dbg !14948
  call void @llvm.dbg.value(metadata i32* %1, metadata !14944, metadata !DIExpression()), !dbg !14948
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14949
  %4 = load i16*, i16** %3, align 4, !dbg !14949
  call void @llvm.dbg.value(metadata i16* %4, metadata !14945, metadata !DIExpression()), !dbg !14948
  call void @llvm.dbg.value(metadata i32 0, metadata !14946, metadata !DIExpression()), !dbg !14948
  call void @llvm.dbg.value(metadata i32 0, metadata !14947, metadata !DIExpression()), !dbg !14948
  %5 = icmp eq i16* %4, null, !dbg !14950
  br i1 %5, label %22, label %6, !dbg !14952

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14946, metadata !DIExpression()), !dbg !14948
  call void @llvm.dbg.value(metadata i16* %8, metadata !14945, metadata !DIExpression()), !dbg !14948
  %9 = load i16, i16* %8, align 2, !dbg !14953
  %10 = icmp eq i16 %9, -32768, !dbg !14957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14946, metadata !DIExpression()), !dbg !14948
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14958
  call void @llvm.dbg.value(metadata i16* %11, metadata !14945, metadata !DIExpression()), !dbg !14948
  %12 = zext i1 %10 to i32, !dbg !14959
  %13 = add i32 %7, %12, !dbg !14959
  call void @llvm.dbg.value(metadata i32 %13, metadata !14946, metadata !DIExpression()), !dbg !14948
  %14 = icmp eq i32 %13, 2, !dbg !14960
  br i1 %14, label %15, label %6, !dbg !14961

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14948
  call void @llvm.dbg.value(metadata i32 %16, metadata !14947, metadata !DIExpression()), !dbg !14948
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14962
  %18 = load i16, i16* %17, align 2, !dbg !14962
  %19 = icmp eq i16 %18, 32767, !dbg !14963
  %20 = add i32 %16, 1, !dbg !14964
  call void @llvm.dbg.value(metadata i32 %20, metadata !14947, metadata !DIExpression()), !dbg !14948
  br i1 %19, label %21, label %15, !dbg !14966, !llvm.loop !14967

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14969
  br label %22, !dbg !14970

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14971
  call void @llvm.dbg.value(metadata i16* %23, metadata !14945, metadata !DIExpression()), !dbg !14948
  ret i16* %23, !dbg !14972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !14973 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14976
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14977
  ret i32* %2, !dbg !14978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !14979 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()), !dbg !15132
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !15130, metadata !DIExpression()), !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15131, metadata !DIExpression()), !dbg !15132
  ret void, !dbg !15133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !15134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15138, metadata !DIExpression()), !dbg !15140
  call void @llvm.dbg.value(metadata i32 %1, metadata !15139, metadata !DIExpression()), !dbg !15140
  ret void, !dbg !15141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !15142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15146, metadata !DIExpression()), !dbg !15148
  call void @llvm.dbg.value(metadata i32 %1, metadata !15147, metadata !DIExpression()), !dbg !15148
  ret void, !dbg !15149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !15150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15154, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i8* %1, metadata !15155, metadata !DIExpression()), !dbg !15156
  ret i32 -134, !dbg !15157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !15158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15162, metadata !DIExpression()), !dbg !15164
  call void @llvm.dbg.value(metadata i8* %1, metadata !15163, metadata !DIExpression()), !dbg !15164
  ret i32 -134, !dbg !15165
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !15166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15169, metadata !DIExpression()), !dbg !15170
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15171, !srcloc !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !15174, metadata !DIExpression()) #25, !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !15175, metadata !DIExpression()) #25, !dbg !15178
  br label %3, !dbg !15179

3:                                                ; preds = %3, %1
  br label %3, !dbg !15180, !llvm.loop !15183
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15190, metadata !DIExpression()), !dbg !15192
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15191, metadata !DIExpression()), !dbg !15192
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.247, i32 0, i32 0), i32 noundef 69) #26, !dbg !15193
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15198
  unreachable, !dbg !15198
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !15199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15201, metadata !DIExpression()), !dbg !15202
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15203
  unreachable, !dbg !15203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15206, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15207, metadata !DIExpression()), !dbg !15210
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15211, !srcloc !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !15174, metadata !DIExpression()) #25, !dbg !15213
  call void @llvm.dbg.value(metadata i32 undef, metadata !15175, metadata !DIExpression()) #25, !dbg !15213
  call void @llvm.dbg.value(metadata i32 undef, metadata !15208, metadata !DIExpression()), !dbg !15210
  %4 = tail call fastcc %struct.k_thread* @k_current_get.250() #28, !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15209, metadata !DIExpression()), !dbg !15210
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !15215
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.251, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #26, !dbg !15215
  %6 = icmp eq %struct.__esf* %1, null, !dbg !15220
  br i1 %6, label %13, label %7, !dbg !15222

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15223, metadata !DIExpression()), !dbg !15228
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !15230
  %9 = load i32, i32* %8, align 4, !dbg !15230
  %10 = and i32 %9, 511, !dbg !15231
  %11 = icmp eq i32 %10, 0, !dbg !15232
  br i1 %11, label %13, label %12, !dbg !15233

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 69) #26, !dbg !15234
  br label %13, !dbg !15240

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !15241
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.253, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #26, !dbg !15241
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !15246
  %15 = icmp eq i32 %0, 4, !dbg !15247
  br i1 %15, label %16, label %17, !dbg !15252

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #26, !dbg !15253
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.257, i32 0, i32 0)) #26, !dbg !15253
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #26, !dbg !15253
  unreachable, !dbg !15253

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !15211
  call void @llvm.dbg.value(metadata i32 %18, metadata !15174, metadata !DIExpression()) #25, !dbg !15213
  call void @llvm.dbg.value(metadata i32 %18, metadata !15208, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i32 undef, metadata !15255, metadata !DIExpression()) #25, !dbg !15258
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15260, !srcloc !15261
  tail call fastcc void @k_thread_abort.258(%struct.k_thread* noundef %4) #27, !dbg !15262
  ret void, !dbg !15265
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.250() unnamed_addr #11 !dbg !15266 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.266() #28, !dbg !15270
  ret %struct.k_thread* %1, !dbg !15271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !15272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15276, metadata !DIExpression()), !dbg !15277
  %2 = icmp ult i32 %0, 5, !dbg !15278
  br i1 %2, label %3, label %6, !dbg !15278

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !15278
  %5 = load i8*, i8** %4, align 4, !dbg !15278
  br label %6, !dbg !15278

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.260, i32 0, i32 0), %1 ], !dbg !15279
  ret i8* %7, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15282 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15286, metadata !DIExpression()), !dbg !15288
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !15289
  br i1 %2, label %9, label %3, !dbg !15290

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #26, !dbg !15291
  call void @llvm.dbg.value(metadata i8* %4, metadata !15287, metadata !DIExpression()), !dbg !15288
  %5 = icmp eq i8* %4, null, !dbg !15292
  br i1 %5, label %9, label %6, !dbg !15294

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !15295
  %8 = icmp eq i8 %7, 0, !dbg !15296
  br i1 %8, label %9, label %10, !dbg !15297

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.259, i32 0, i32 0), metadata !15287, metadata !DIExpression()), !dbg !15288
  br label %10, !dbg !15298

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.259, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !15288
  call void @llvm.dbg.value(metadata i8* %11, metadata !15287, metadata !DIExpression()), !dbg !15288
  ret i8* %11, !dbg !15300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.258(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15305, metadata !DIExpression()), !dbg !15306
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15307, !srcloc !15309
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !15310
  ret void, !dbg !15311
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.266() unnamed_addr #11 !dbg !15312 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15313, !srcloc !15315
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !15316
  ret %struct.k_thread* %1, !dbg !15317
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15322, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.value(metadata i32 %1, metadata !15323, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.value(metadata i32 %2, metadata !15324, metadata !DIExpression()), !dbg !15325
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !15326
  ret void, !dbg !15327
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15332, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.value(metadata i8* %1, metadata !15333, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.value(metadata i32 %2, metadata !15334, metadata !DIExpression()), !dbg !15335
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !15336
  ret void, !dbg !15337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !15338 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !15339
  ret void, !dbg !15340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !15341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15343, metadata !DIExpression()), !dbg !15344
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !15345
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15346
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !15347
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !15348
  %4 = trunc i32 %0 to i8, !dbg !15349
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !15350
  store i8 %4, i8* %5, align 4, !dbg !15351
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !15352
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !15353
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !15354
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !15355
  store i8* %8, i8** %9, align 4, !dbg !15356
  ret void, !dbg !15357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !15358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15360, metadata !DIExpression()), !dbg !15366
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15361, metadata !DIExpression()), !dbg !15366
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !15368
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !15362, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i8* null, metadata !15365, metadata !DIExpression()), !dbg !15366
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15369
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15370
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !15371
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !15372
  ret void, !dbg !15373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !15374 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15378, metadata !DIExpression()), !dbg !15379
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15380
  ret i8* %2, !dbg !15381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15387, metadata !DIExpression()), !dbg !15388
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15389
  %3 = load i8, i8* %2, align 1, !dbg !15390
  %4 = and i8 %3, -5, !dbg !15390
  store i8 %4, i8* %2, align 1, !dbg !15390
  ret void, !dbg !15391
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !15392 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !15395
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !15396
  %3 = ptrtoint i8* %2 to i32, !dbg !15405
  %4 = add i32 %3, 2048, !dbg !15406
  call void @llvm.dbg.value(metadata i32 %4, metadata !15400, metadata !DIExpression()) #25, !dbg !15407
  call void @llvm.dbg.value(metadata i32 %4, metadata !15408, metadata !DIExpression()) #25, !dbg !15411
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15413, !srcloc !15414
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15415
  %6 = or i32 %5, 512, !dbg !15415
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15415
  tail call fastcc void @__NVIC_SetPriority.275(i32 noundef -2, i32 noundef 255) #26, !dbg !15416
  tail call fastcc void @__NVIC_SetPriority.275(i32 noundef -5, i32 noundef 0) #26, !dbg !15419
  tail call fastcc void @__NVIC_SetPriority.275(i32 noundef -12, i32 noundef 0) #26, !dbg !15420
  tail call fastcc void @__NVIC_SetPriority.275(i32 noundef -11, i32 noundef 0) #26, !dbg !15421
  tail call fastcc void @__NVIC_SetPriority.275(i32 noundef -10, i32 noundef 0) #26, !dbg !15422
  tail call fastcc void @__NVIC_SetPriority.275(i32 noundef -4, i32 noundef 0) #26, !dbg !15423
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15424
  %8 = or i32 %7, 458752, !dbg !15424
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15424
  tail call void @z_arm_fault_init() #26, !dbg !15425
  tail call void @z_arm_cpu_idle_init() #26, !dbg !15426
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15427
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15430
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !15431
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !15432
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15433
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15433
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15394, metadata !DIExpression()), !dbg !15434
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !15435
  call void @z_device_state_init() #26, !dbg !15436
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !15437
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !15438
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !15439
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15440
  unreachable, !dbg !15440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2606, metadata !DIExpression()), !dbg !15441
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15442
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15442
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2607, metadata !DIExpression()), !dbg !15441
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2607, metadata !DIExpression()), !dbg !15441
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15443
  br i1 %7, label %8, label %35, !dbg !15444

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2607, metadata !DIExpression()), !dbg !15441
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15445
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15445
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2617, metadata !DIExpression()), !dbg !15446
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15447
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15447
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %14, metadata !2621, metadata !DIExpression()), !dbg !15446
  %15 = icmp eq %struct.device* %11, null, !dbg !15449
  br i1 %15, label %32, label %16, !dbg !15451

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15452
  br i1 %17, label %26, label %18, !dbg !15455

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15456
  call void @llvm.dbg.value(metadata i32 %19, metadata !2621, metadata !DIExpression()), !dbg !15446
  %20 = icmp ult i32 %19, 255, !dbg !15458
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %21, metadata !2621, metadata !DIExpression()), !dbg !15446
  %22 = trunc i32 %21 to i8, !dbg !15459
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15460
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15460
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15461
  store i8 %22, i8* %25, align 1, !dbg !15462
  br label %26, !dbg !15463

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15464
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15464
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15465
  %30 = load i8, i8* %29, align 1, !dbg !15466
  %31 = or i8 %30, 1, !dbg !15466
  store i8 %31, i8* %29, align 1, !dbg !15466
  br label %32, !dbg !15467

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15468
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2607, metadata !DIExpression()), !dbg !15441
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15443
  br i1 %34, label %8, label %35, !dbg !15444, !llvm.loop !15469

35:                                               ; preds = %32, %1
  ret void, !dbg !15471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.275(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !15472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15474, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i32 %1, metadata !15475, metadata !DIExpression()), !dbg !15476
  %3 = trunc i32 %1 to i8, !dbg !15477
  %4 = shl i8 %3, 4, !dbg !15477
  %5 = and i32 %0, 15, !dbg !15480
  %6 = add nsw i32 %5, -4, !dbg !15481
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15482
  store volatile i8 %4, i8* %7, align 1, !dbg !15483
  ret void, !dbg !15484
}

; Function Attrs: optsize
declare !dbg !15485 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15489, metadata !DIExpression()), !dbg !15490
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15491
  store i8 1, i8* %2, align 1, !dbg !15492
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15493
  store i8 1, i8* %3, align 4, !dbg !15494
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15495
  store i32 0, i32* %4, align 4, !dbg !15496
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15497
  store i32 0, i32* %5, align 4, !dbg !15498
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #26, !dbg !15499
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15500
  ret void, !dbg !15501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15502 {
  tail call void @z_sched_init() #26, !dbg !15507
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15508
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.276, i32 0, i32 0)) #26, !dbg !15509
  call void @llvm.dbg.value(metadata i8* %1, metadata !15506, metadata !DIExpression()), !dbg !15510
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15511
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15512
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !15513
  ret i8* %1, !dbg !15514
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !15515 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15519, metadata !DIExpression()), !dbg !15520
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !15521
  unreachable, !dbg !15522
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15523 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15525, metadata !DIExpression()), !dbg !15528
  call void @llvm.dbg.value(metadata i8* %1, metadata !15526, metadata !DIExpression()), !dbg !15528
  call void @llvm.dbg.value(metadata i8* %2, metadata !15527, metadata !DIExpression()), !dbg !15528
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15529
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !15530
  tail call void @boot_banner() #26, !dbg !15531
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !15532
  tail call void @z_init_static_threads() #26, !dbg !15533
  tail call void @main() #26, !dbg !15534
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15535
  %5 = and i8 %4, -2, !dbg !15535
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15535
  ret void, !dbg !15536
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !15537 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15547, metadata !DIExpression()), !dbg !15549
  call void @llvm.dbg.value(metadata i8* %1, metadata !15548, metadata !DIExpression()), !dbg !15549
  ret void, !dbg !15550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !15551 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15553, metadata !DIExpression()), !dbg !15555
  call void @llvm.dbg.value(metadata i8* %1, metadata !15554, metadata !DIExpression()), !dbg !15555
  ret void, !dbg !15556
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15557 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15558, !srcloc !15565
  call void @llvm.dbg.value(metadata i32 %1, metadata !15561, metadata !DIExpression()) #25, !dbg !15566
  %2 = icmp ne i32 %1, 0, !dbg !15567
  ret i1 %2, !dbg !15568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !15569 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15570
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15571
  %3 = load i8, i8* %2, align 4, !dbg !15572
  %4 = or i8 %3, 1, !dbg !15572
  store i8 %4, i8* %2, align 4, !dbg !15572
  ret void, !dbg !15573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !15574 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15575
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15576
  %3 = load i8, i8* %2, align 4, !dbg !15577
  %4 = and i8 %3, -2, !dbg !15577
  store i8 %4, i8* %2, align 4, !dbg !15577
  ret void, !dbg !15578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !15579 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15580
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15581
  %3 = load i8, i8* %2, align 4, !dbg !15581
  %4 = and i8 %3, 1, !dbg !15582
  %5 = icmp ne i8 %4, 0, !dbg !15583
  ret i1 %5, !dbg !15584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !15585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15589, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata i8* %1, metadata !15590, metadata !DIExpression()), !dbg !15591
  ret i32 -88, !dbg !15592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !15593 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15597, metadata !DIExpression()), !dbg !15598
  ret i8* null, !dbg !15599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !15600 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15604, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata i8* %1, metadata !15605, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata i32 %2, metadata !15606, metadata !DIExpression()), !dbg !15607
  ret i32 -88, !dbg !15608
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2632 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2748, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i8* %1, metadata !2749, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 %2, metadata !2750, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 0, metadata !2751, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i8 undef, metadata !2753, metadata !DIExpression()), !dbg !15609
  %4 = icmp eq i8* %1, null, !dbg !15610
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15612
  br i1 %6, label %46, label %7, !dbg !15612

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15613
  %9 = load i8, i8* %8, align 1, !dbg !15613
  call void @llvm.dbg.value(metadata i8 %9, metadata !2753, metadata !DIExpression()), !dbg !15609
  %10 = add i32 %2, -1, !dbg !15614
  call void @llvm.dbg.value(metadata i32 %10, metadata !2750, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i8 0, metadata !2754, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.value(metadata i8 %9, metadata !2753, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 0, metadata !2751, metadata !DIExpression()), !dbg !15609
  %11 = icmp eq i8 %9, 0, !dbg !15616
  br i1 %11, label %12, label %15, !dbg !15618

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15619
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15620
  store i8 0, i8* %14, align 1, !dbg !15621
  br label %46, !dbg !15622

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2754, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.value(metadata i8 %17, metadata !2753, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 %18, metadata !2751, metadata !DIExpression()), !dbg !15609
  %19 = zext i8 %17 to i32, !dbg !15623
  %20 = zext i8 %16 to i32, !dbg !15624
  %21 = shl nuw i32 1, %20, !dbg !15624
  call void @llvm.dbg.value(metadata i32 %21, metadata !2752, metadata !DIExpression()), !dbg !15609
  %22 = and i32 %21, %19, !dbg !15626
  %23 = icmp eq i32 %22, 0, !dbg !15628
  br i1 %23, label %42, label %24, !dbg !15629

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15630
  %26 = sub i32 %10, %18, !dbg !15631
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15632
  %28 = load i8*, i8** %27, align 4, !dbg !15632
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15633
  %30 = load i32, i32* %29, align 4, !dbg !15633
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !15634
  %32 = add i32 %31, %18, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %32, metadata !2751, metadata !DIExpression()), !dbg !15609
  %33 = trunc i32 %21 to i8, !dbg !15636
  %34 = xor i8 %33, -1, !dbg !15636
  %35 = and i8 %17, %34, !dbg !15636
  call void @llvm.dbg.value(metadata i8 %35, metadata !2753, metadata !DIExpression()), !dbg !15609
  %36 = icmp eq i8 %35, 0, !dbg !15637
  br i1 %36, label %12, label %37, !dbg !15639

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15640
  %39 = sub i32 %10, %32, !dbg !15642
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.281, i32 0, i32 0), i32 noundef 1) #27, !dbg !15643
  %41 = add i32 %40, %32, !dbg !15644
  call void @llvm.dbg.value(metadata i32 %41, metadata !2751, metadata !DIExpression()), !dbg !15609
  br label %42, !dbg !15645

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15609
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15609
  call void @llvm.dbg.value(metadata i8 %44, metadata !2753, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.value(metadata i32 %43, metadata !2751, metadata !DIExpression()), !dbg !15609
  %45 = add i8 %16, 1, !dbg !15646
  call void @llvm.dbg.value(metadata i8 %45, metadata !2754, metadata !DIExpression()), !dbg !15615
  br label %15, !dbg !15618

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.282, i32 0, i32 0), %3 ], !dbg !15609
  ret i8* %47, !dbg !15647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15648 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15652, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.value(metadata i32 %1, metadata !15653, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.value(metadata i8* %2, metadata !15654, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.value(metadata i32 %3, metadata !15655, metadata !DIExpression()), !dbg !15657
  %5 = icmp ult i32 %1, %3, !dbg !15658
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15658
  call void @llvm.dbg.value(metadata i32 %6, metadata !15656, metadata !DIExpression()), !dbg !15657
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !15659
  ret i32 %6, !dbg !15660
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15665, metadata !DIExpression()), !dbg !15666
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !15667
  ret void, !dbg !15668
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15678, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15679, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata i32 %2, metadata !15680, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15681, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata i8* %4, metadata !15682, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata i8* %5, metadata !15683, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata i8* %6, metadata !15684, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata i32 %7, metadata !15685, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata i32 %8, metadata !15686, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.value(metadata i8* undef, metadata !15687, metadata !DIExpression()), !dbg !15689
  %11 = icmp eq i32 %7, 15, !dbg !15690
  br i1 %11, label %12, label %15, !dbg !15690

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !15690
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #27, !dbg !15690
  br i1 %14, label %19, label %18, !dbg !15690

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !15690
  %17 = icmp ult i32 %16, 31, !dbg !15690
  br i1 %17, label %19, label %18, !dbg !15690

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 536) #26, !dbg !15694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.295, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #26, !dbg !15694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 536) #26, !dbg !15694
  unreachable, !dbg !15694

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15696
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #27, !dbg !15697
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15698
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !15699
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !15700
  call void @llvm.dbg.value(metadata i8* %22, metadata !15688, metadata !DIExpression()), !dbg !15689
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !15701
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15702
  store i8* null, i8** %23, align 4, !dbg !15703
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15704
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15704
  br i1 %25, label %29, label %26, !dbg !15706

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !15707
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !15707
  br label %29, !dbg !15708

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !15689
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15709
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !15711
  ret i8* %22, !dbg !15712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !15713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15717, metadata !DIExpression()), !dbg !15718
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !15719
  ret i1 %2, !dbg !15720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !15721 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15726, metadata !DIExpression()), !dbg !15727
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15728
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !15729
  ret void, !dbg !15730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !15731 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15736, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 %1, metadata !15737, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 %2, metadata !15738, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()), !dbg !15740
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15741
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !15742
  %6 = trunc i32 %3 to i8, !dbg !15743
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15744
  store i8 %6, i8* %7, align 4, !dbg !15745
  %8 = trunc i32 %2 to i8, !dbg !15746
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15747
  store i8 %8, i8* %9, align 1, !dbg !15748
  %10 = trunc i32 %1 to i8, !dbg !15749
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15750
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15750
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15750
  store i8 %10, i8* %13, align 2, !dbg !15751
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15752
  store i8 0, i8* %14, align 1, !dbg !15753
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !15754
  ret void, !dbg !15755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !15756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15760, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15761, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata i32 %2, metadata !15762, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata i32 0, metadata !15767, metadata !DIExpression()), !dbg !15768
  %4 = add i32 %2, 7, !dbg !15769
  %5 = and i32 %4, -8, !dbg !15769
  %6 = add i32 %5, 64, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %6, metadata !15763, metadata !DIExpression()), !dbg !15768
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.296(%struct.z_thread_stack_element* noundef %1) #27, !dbg !15771
  call void @llvm.dbg.value(metadata i8* %7, metadata !15766, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata i32 %5, metadata !15764, metadata !DIExpression()), !dbg !15768
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15772
  call void @llvm.dbg.value(metadata i8* %8, metadata !15765, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata i32 0, metadata !15767, metadata !DIExpression()), !dbg !15768
  %9 = ptrtoint i8* %7 to i32, !dbg !15773
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15774
  store i32 %9, i32* %10, align 4, !dbg !15775
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15776
  store i32 %5, i32* %11, align 4, !dbg !15777
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15778
  store i32 0, i32* %12, align 4, !dbg !15779
  call void @llvm.dbg.value(metadata i8* %8, metadata !15765, metadata !DIExpression()), !dbg !15768
  ret i8* %8, !dbg !15780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.296(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !15781 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15785, metadata !DIExpression()), !dbg !15786
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15787
  ret i8* %2, !dbg !15788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15789 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15794, metadata !DIExpression()), !dbg !15795
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15796
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !15797
  ret void, !dbg !15798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15799 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15801, metadata !DIExpression()), !dbg !15802
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15803
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !15804
  ret void, !dbg !15805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15806 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15810, metadata !DIExpression()), !dbg !15811
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15812
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15813
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15814
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15815
  ret void, !dbg !15816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15817 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15822, metadata !DIExpression()), !dbg !15823
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15824
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15825
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15826
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15827
  ret void, !dbg !15828
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15829 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15846, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15837, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15838, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i32 %2, metadata !15839, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15840, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i8* %4, metadata !15841, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i8* %5, metadata !15842, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i8* %6, metadata !15843, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i32 %7, metadata !15844, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i32 %8, metadata !15845, metadata !DIExpression()), !dbg !15847
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15848, !srcloc !15565
  call void @llvm.dbg.value(metadata i32 %11, metadata !15561, metadata !DIExpression()) #25, !dbg !15853
  %12 = icmp eq i32 %11, 0, !dbg !15854
  br i1 %12, label %14, label %13, !dbg !15855

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 647) #26, !dbg !15856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.298, i32 0, i32 0)) #26, !dbg !15856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 647) #26, !dbg !15856
  unreachable, !dbg !15856

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !15846, metadata !DIExpression()), !dbg !15847
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !15858
  %17 = icmp eq i64 %15, -1, !dbg !15859
  br i1 %17, label %19, label %18, !dbg !15861

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !15862
  br label %19, !dbg !15864

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !15865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15866 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15871, metadata !DIExpression()), !dbg !15872
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15870, metadata !DIExpression()), !dbg !15872
  %4 = icmp eq i64 %3, 0, !dbg !15873
  br i1 %4, label %5, label %6, !dbg !15875

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15876
  br label %7, !dbg !15878

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15879
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15886, metadata !DIExpression()), !dbg !15887
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15888, !srcloc !15890
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15891
  ret void, !dbg !15892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15893 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15896, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15895, metadata !DIExpression()), !dbg !15897
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15898
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15899
  ret void, !dbg !15900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15901 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15903, metadata !DIExpression()), !dbg !15922
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !15923

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 750) #26, !dbg !15927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.302, i32 0, i32 0)) #26, !dbg !15927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 750) #26, !dbg !15927
  unreachable, !dbg !15927

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15903, metadata !DIExpression()), !dbg !15922
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15930
  br i1 %4, label %6, label %5, !dbg !15931

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !15932
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15920, metadata !DIExpression()), !dbg !15933
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !15934

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15938
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15938
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15940
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !15940
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15941
  %12 = load i32, i32* %11, align 4, !dbg !15941
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15942
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !15942
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15943
  %16 = load i8*, i8** %15, align 4, !dbg !15943
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15944
  %18 = load i8*, i8** %17, align 4, !dbg !15944
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15945
  %20 = load i8*, i8** %19, align 4, !dbg !15945
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15946
  %22 = load i32, i32* %21, align 4, !dbg !15946
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15947
  %24 = load i32, i32* %23, align 4, !dbg !15947
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #27, !dbg !15948
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15949
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !15950
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !15951
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !15951
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15952
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !15903, metadata !DIExpression()), !dbg !15922
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15953
  br i1 %30, label %1, label %2, !dbg !15923, !llvm.loop !15954

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 781) #26, !dbg !15956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.302, i32 0, i32 0)) #26, !dbg !15956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.294, i32 0, i32 0), i32 noundef 781) #26, !dbg !15956
  unreachable, !dbg !15956

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !15920, metadata !DIExpression()), !dbg !15933
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15959
  br i1 %34, label %36, label %35, !dbg !15960

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #26, !dbg !15961
  ret void, !dbg !15962

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !15963
  %38 = load i32, i32* %37, align 4, !dbg !15963
  %39 = icmp eq i32 %38, -1, !dbg !15966
  br i1 %39, label %48, label %40, !dbg !15967

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !15968
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !15968
  %43 = icmp sgt i32 %38, 0, !dbg !15970
  %44 = select i1 %43, i32 %38, i32 0, !dbg !15970
  %45 = zext i32 %44 to i64, !dbg !15970
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.303(i64 noundef %45) #27, !dbg !15970
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !15971
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #27, !dbg !15971
  br label %48, !dbg !15972

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !15973
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !15920, metadata !DIExpression()), !dbg !15933
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15974
  br i1 %50, label %31, label %32, !dbg !15934, !llvm.loop !15975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.303(i64 noundef %0) unnamed_addr #4 !dbg !15977 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15979, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i64 %0, metadata !15981, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i32 1000, metadata !15984, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i32 10000, metadata !15985, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i8 1, metadata !15986, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i8 0, metadata !15987, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i8 1, metadata !15988, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i8 0, metadata !15989, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i8 1, metadata !15990, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i8 0, metadata !15991, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i64 0, metadata !15992, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i64 0, metadata !15992, metadata !DIExpression()), !dbg !15996
  %2 = mul i64 %0, 10, !dbg !15998
  ret i64 %2, !dbg !16004
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !16005 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !16007, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i8* %1, metadata !16008, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i8* %2, metadata !16009, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i8* %3, metadata !16010, metadata !DIExpression()), !dbg !16011
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16012
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !16013
  %7 = load i8, i8* %6, align 4, !dbg !16014
  %8 = or i8 %7, 4, !dbg !16014
  store i8 %8, i8* %6, align 4, !dbg !16014
  tail call void @z_thread_essential_clear() #27, !dbg !16015
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !16016
  unreachable, !dbg !16016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16017 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16022, metadata !DIExpression()), !dbg !16024
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !16025
  %3 = load i32, i32* %2, align 4, !dbg !16025
  call void @llvm.dbg.value(metadata i32 %3, metadata !16023, metadata !DIExpression()), !dbg !16024
  %4 = icmp eq i32 %3, 0, !dbg !16026
  br i1 %4, label %10, label %5, !dbg !16028

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !16029
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16032
  %8 = zext i8 %7 to i32, !dbg !16033
  %9 = icmp eq i32 %6, %8, !dbg !16034
  br i1 %9, label %11, label %10, !dbg !16035

10:                                               ; preds = %5, %1
  br label %11, !dbg !16036

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !16024
  ret i1 %12, !dbg !16037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !16038 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16040, metadata !DIExpression()), !dbg !16041
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !16042
  %3 = load i32, i32* %2, align 4, !dbg !16042
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16044
  %5 = zext i8 %4 to i32, !dbg !16045
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16046
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !16047
  %8 = or i32 %7, %5, !dbg !16048
  %9 = icmp eq i32 %3, %8, !dbg !16049
  br i1 %9, label %10, label %11, !dbg !16050

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !16051
  br label %11, !dbg !16052

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !16053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !16054 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16058, metadata !DIExpression()), !dbg !16059
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16060
  %3 = zext i8 %2 to i32, !dbg !16061
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16062
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !16063
  %6 = or i32 %5, %3, !dbg !16064
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !16065
  store i32 %6, i32* %7, align 4, !dbg !16066
  ret void, !dbg !16067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !16068 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16072, metadata !DIExpression()), !dbg !16073
  ret i32 -134, !dbg !16074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !16075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16079, metadata !DIExpression()), !dbg !16081
  call void @llvm.dbg.value(metadata i32 %1, metadata !16080, metadata !DIExpression()), !dbg !16081
  ret i32 -134, !dbg !16082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !16083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16090, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !16091, metadata !DIExpression()), !dbg !16092
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !16093
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !16095
  %6 = select i1 %5, i32 -22, i32 0, !dbg !16092
  ret i32 %6, !dbg !16096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !16097 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !16101, metadata !DIExpression()), !dbg !16102
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !16103
  %3 = select i1 %2, i32 -22, i32 0, !dbg !16102
  ret i32 %3, !dbg !16105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !16106 {
  tail call void @sys_clock_idle_exit() #26, !dbg !16108
  ret void, !dbg !16109
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !16110 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16112, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.value(metadata i8* %1, metadata !16113, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.value(metadata i8* %2, metadata !16114, metadata !DIExpression()), !dbg !16115
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16116
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !16116
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !16116
  %7 = load i8, i8* %6, align 2, !dbg !16116
  %8 = icmp sgt i8 %7, -1, !dbg !16116
  br i1 %8, label %10, label %9, !dbg !16119

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.314, i32 0, i32 0), i32 noundef 39) #26, !dbg !16120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.314, i32 0, i32 0), i32 noundef 39) #26, !dbg !16120
  unreachable, !dbg !16120

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16122, !srcloc !16129
  call void @llvm.dbg.value(metadata i32 undef, metadata !16125, metadata !DIExpression()) #25, !dbg !16130
  call void @llvm.dbg.value(metadata i32 undef, metadata !16126, metadata !DIExpression()) #25, !dbg !16130
  tail call fastcc void @k_cpu_idle() #27, !dbg !16131
  br label %10, !dbg !16132, !llvm.loop !16133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !16135 {
  tail call void @arch_cpu_idle() #26, !dbg !16136
  ret void, !dbg !16137
}

; Function Attrs: optsize
declare !dbg !16138 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !16139 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16157, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i8* %1, metadata !16158, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i32 %2, metadata !16159, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i32 %3, metadata !16160, metadata !DIExpression()), !dbg !16161
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16162
  store i32 %2, i32* %5, align 4, !dbg !16163
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !16164
  store i32 %3, i32* %6, align 4, !dbg !16165
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16166
  store i8* %1, i8** %7, align 4, !dbg !16167
  %8 = mul i32 %3, %2, !dbg !16168
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !16169
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !16170
  store i8* %9, i8** %10, align 4, !dbg !16171
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16172
  store i8* %1, i8** %11, align 4, !dbg !16173
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16174
  store i8* %1, i8** %12, align 4, !dbg !16175
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16176
  store i32 0, i32* %13, align 4, !dbg !16177
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !16178
  store i8 0, i8* %14, align 4, !dbg !16179
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16180
  tail call fastcc void @z_waitq_init.315(%struct._wait_q_t* noundef %15) #27, !dbg !16181
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !16182
  store i32 0, i32* %16, align 4, !dbg !16182
  ret void, !dbg !16183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.315(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16184 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16188, metadata !DIExpression()), !dbg !16189
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16190
  tail call fastcc void @sys_dlist_init.316(%struct._dnode* noundef %2) #27, !dbg !16191
  ret void, !dbg !16192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.316(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16193 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16198, metadata !DIExpression()), !dbg !16199
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16200
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16201
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16202
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16203
  ret void, !dbg !16204
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16205 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16209, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.value(metadata i32 %1, metadata !16210, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.value(metadata i32 %2, metadata !16211, metadata !DIExpression()), !dbg !16215
  %5 = bitcast i32* %4 to i8*, !dbg !16216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !16216
  call void @llvm.dbg.value(metadata i32* %4, metadata !16214, metadata !DIExpression(DW_OP_deref)), !dbg !16215
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !16217
  br i1 %6, label %13, label %7, !dbg !16219

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !16220
  call void @llvm.dbg.value(metadata i32 %8, metadata !16214, metadata !DIExpression()), !dbg !16215
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !16222
  call void @llvm.dbg.value(metadata i8* %9, metadata !16212, metadata !DIExpression()), !dbg !16215
  %10 = icmp eq i8* %9, null, !dbg !16223
  br i1 %10, label %13, label %11, !dbg !16225

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !16226
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !16228
  store i8 1, i8* %12, align 4, !dbg !16229
  call void @llvm.dbg.value(metadata i32 0, metadata !16213, metadata !DIExpression()), !dbg !16215
  br label %13, !dbg !16230

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !16231
  call void @llvm.dbg.value(metadata i32 %14, metadata !16213, metadata !DIExpression()), !dbg !16215
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !16232
  ret i32 %14, !dbg !16233
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !16234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16239, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 %1, metadata !16240, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32* %2, metadata !16241, metadata !DIExpression()), !dbg !16242
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !16243
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !16243
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !16243
  store i32 %6, i32* %2, align 4, !dbg !16243
  ret i1 %5, !dbg !16244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !16245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16249, metadata !DIExpression()), !dbg !16250
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #26, !dbg !16251
  ret i8* %2, !dbg !16252
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !16253 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16257, metadata !DIExpression()), !dbg !16258
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16259
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !16259
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16259
  br i1 %4, label %5, label %15, !dbg !16261

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !16262
  %7 = load i8, i8* %6, align 4, !dbg !16262
  %8 = and i8 %7, 1, !dbg !16264
  %9 = icmp eq i8 %8, 0, !dbg !16265
  br i1 %9, label %15, label %10, !dbg !16266

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16267
  %12 = load i8*, i8** %11, align 4, !dbg !16267
  tail call void @k_free(i8* noundef %12) #26, !dbg !16269
  %13 = load i8, i8* %6, align 4, !dbg !16270
  %14 = and i8 %13, -2, !dbg !16270
  store i8 %14, i8* %6, align 4, !dbg !16270
  br label %15, !dbg !16271

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !16258
  ret i32 %16, !dbg !16272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !16273 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16277, metadata !DIExpression()), !dbg !16278
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16279
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !16280
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16281
  ret %struct.k_thread* %4, !dbg !16282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16283 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16287, metadata !DIExpression()), !dbg !16288
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !16289
  br i1 %2, label %6, label %3, !dbg !16289

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16290
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16290
  br label %6, !dbg !16289

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16289
  ret %struct._dnode* %7, !dbg !16291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16292 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16296, metadata !DIExpression()), !dbg !16297
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16298
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16298
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16299
  ret i1 %4, !dbg !16300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16301 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16311, metadata !DIExpression()), !dbg !16319
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16309, metadata !DIExpression()), !dbg !16319
  call void @llvm.dbg.value(metadata i8* %1, metadata !16310, metadata !DIExpression()), !dbg !16319
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16320, !srcloc !16329
  call void @llvm.dbg.value(metadata i32 %5, metadata !16323, metadata !DIExpression()) #25, !dbg !16330
  %6 = icmp eq i32 %5, 0, !dbg !16331
  %7 = icmp eq i64 %4, 0, !dbg !16332
  %8 = select i1 %6, i1 true, i1 %7, !dbg !16332
  br i1 %8, label %10, label %9, !dbg !16332

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.321, i32 0, i32 0), i32 noundef 118) #26, !dbg !16333
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.322, i32 0, i32 0)) #26, !dbg !16333
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.321, i32 0, i32 0), i32 noundef 118) #26, !dbg !16333
  unreachable, !dbg !16333

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16336, metadata !DIExpression()) #25, !dbg !16343
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16345, !srcloc !16351
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()) #25, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !16349, metadata !DIExpression()) #25, !dbg !16352
  call void @llvm.dbg.value(metadata i32 undef, metadata !16342, metadata !DIExpression()) #25, !dbg !16343
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16353
  br i1 %13, label %15, label %14, !dbg !16356

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16357
  unreachable, !dbg !16357

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16345
  call void @llvm.dbg.value(metadata i32 %16, metadata !16348, metadata !DIExpression()) #25, !dbg !16352
  call void @llvm.dbg.value(metadata i32 %16, metadata !16342, metadata !DIExpression()) #25, !dbg !16343
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16359
  call void @llvm.dbg.value(metadata i32 %16, metadata !16313, metadata !DIExpression()), !dbg !16319
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16360
  %18 = load i32, i32* %17, align 4, !dbg !16360
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !16362
  %20 = load i32, i32* %19, align 4, !dbg !16362
  %21 = icmp ult i32 %18, %20, !dbg !16363
  br i1 %21, label %22, label %52, !dbg !16364

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16365
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #26, !dbg !16367
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16312, metadata !DIExpression()), !dbg !16319
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !16368
  br i1 %25, label %34, label %26, !dbg !16370

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !16371
  %28 = load i8*, i8** %27, align 4, !dbg !16371
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16373
  %30 = load i32, i32* %29, align 4, !dbg !16373
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #26, !dbg !16374
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16375, metadata !DIExpression()), !dbg !16381
  call void @llvm.dbg.value(metadata i32 0, metadata !16380, metadata !DIExpression()), !dbg !16381
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !16383
  store i32 0, i32* %32, align 4, !dbg !16384
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #26, !dbg !16385
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16386
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #26, !dbg !16386
  br label %64, !dbg !16387

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16388
  %36 = load i8*, i8** %35, align 4, !dbg !16388
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16390
  %38 = load i32, i32* %37, align 4, !dbg !16390
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #26, !dbg !16391
  %40 = load i32, i32* %37, align 4, !dbg !16392
  %41 = load i8*, i8** %35, align 4, !dbg !16393
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !16393
  store i8* %42, i8** %35, align 4, !dbg !16393
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !16394
  %44 = load i8*, i8** %43, align 4, !dbg !16394
  %45 = icmp eq i8* %42, %44, !dbg !16396
  br i1 %45, label %46, label %49, !dbg !16397

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16398
  %48 = load i8*, i8** %47, align 4, !dbg !16398
  store i8* %48, i8** %35, align 4, !dbg !16400
  br label %49, !dbg !16401

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !16402
  %51 = add i32 %50, 1, !dbg !16402
  store i32 %51, i32* %17, align 4, !dbg !16402
  call void @llvm.dbg.value(metadata i32 0, metadata !16318, metadata !DIExpression()), !dbg !16319
  br label %59, !dbg !16403

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !16404

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16405
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !16408
  store i8* %1, i8** %55, align 4, !dbg !16409
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16410
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16411
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #26, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %58, metadata !16318, metadata !DIExpression()), !dbg !16319
  br label %64, !dbg !16412

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !16413
  call void @llvm.dbg.value(metadata i32 %60, metadata !16318, metadata !DIExpression()), !dbg !16319
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16419, metadata !DIExpression()) #25, !dbg !16420
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16422
  br i1 %61, label %63, label %62, !dbg !16425

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 194) #26, !dbg !16426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 194) #26, !dbg !16426
  unreachable, !dbg !16426

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16414, metadata !DIExpression()) #25, !dbg !16420
  call void @llvm.dbg.value(metadata i32 %16, metadata !16428, metadata !DIExpression()) #25, !dbg !16431
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16433, !srcloc !16434
  br label %64, !dbg !16435

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !16319
  ret i32 %65, !dbg !16436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !16437 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16447, metadata !DIExpression()), !dbg !16449
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !16448, metadata !DIExpression()), !dbg !16449
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16450
  %4 = load i32, i32* %3, align 4, !dbg !16450
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !16451
  store i32 %4, i32* %5, align 4, !dbg !16452
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !16453
  %7 = load i32, i32* %6, align 4, !dbg !16453
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !16454
  store i32 %7, i32* %8, align 4, !dbg !16455
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16456
  %10 = load i32, i32* %9, align 4, !dbg !16456
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !16457
  store i32 %10, i32* %11, align 4, !dbg !16458
  ret void, !dbg !16459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16460 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16466, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16464, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i8* %1, metadata !16465, metadata !DIExpression()), !dbg !16470
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16471, !srcloc !16329
  call void @llvm.dbg.value(metadata i32 %5, metadata !16323, metadata !DIExpression()) #25, !dbg !16476
  %6 = icmp eq i32 %5, 0, !dbg !16477
  %7 = icmp eq i64 %4, 0, !dbg !16478
  %8 = select i1 %6, i1 true, i1 %7, !dbg !16478
  br i1 %8, label %10, label %9, !dbg !16478

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.321, i32 0, i32 0), i32 noundef 208) #26, !dbg !16479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.322, i32 0, i32 0)) #26, !dbg !16479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.321, i32 0, i32 0), i32 noundef 208) #26, !dbg !16479
  unreachable, !dbg !16479

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16336, metadata !DIExpression()) #25, !dbg !16482
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16484, !srcloc !16351
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()) #25, !dbg !16486
  call void @llvm.dbg.value(metadata i32 undef, metadata !16349, metadata !DIExpression()) #25, !dbg !16486
  call void @llvm.dbg.value(metadata i32 undef, metadata !16342, metadata !DIExpression()) #25, !dbg !16482
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16487
  br i1 %13, label %15, label %14, !dbg !16488

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16489
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16489
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16489
  unreachable, !dbg !16489

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16484
  call void @llvm.dbg.value(metadata i32 %16, metadata !16348, metadata !DIExpression()) #25, !dbg !16486
  call void @llvm.dbg.value(metadata i32 %16, metadata !16342, metadata !DIExpression()) #25, !dbg !16482
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %16, metadata !16467, metadata !DIExpression()), !dbg !16470
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16491
  %18 = load i32, i32* %17, align 4, !dbg !16491
  %19 = icmp eq i32 %18, 0, !dbg !16493
  br i1 %19, label %61, label %20, !dbg !16494

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16495
  %22 = load i8*, i8** %21, align 4, !dbg !16495
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16497
  %24 = load i32, i32* %23, align 4, !dbg !16497
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #26, !dbg !16498
  %26 = load i32, i32* %23, align 4, !dbg !16499
  %27 = load i8*, i8** %21, align 4, !dbg !16500
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !16500
  store i8* %28, i8** %21, align 4, !dbg !16500
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !16501
  %30 = load i8*, i8** %29, align 4, !dbg !16501
  %31 = icmp eq i8* %28, %30, !dbg !16503
  br i1 %31, label %32, label %35, !dbg !16504

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16505
  %34 = load i8*, i8** %33, align 4, !dbg !16505
  store i8* %34, i8** %21, align 4, !dbg !16507
  br label %35, !dbg !16508

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !16509
  %37 = add i32 %36, -1, !dbg !16509
  store i32 %37, i32* %17, align 4, !dbg !16509
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16510
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #26, !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !16468, metadata !DIExpression()), !dbg !16470
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !16512
  br i1 %40, label %68, label %41, !dbg !16514

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16515
  %43 = load i8*, i8** %42, align 4, !dbg !16515
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !16517
  %45 = load i8*, i8** %44, align 4, !dbg !16517
  %46 = load i32, i32* %23, align 4, !dbg !16518
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #26, !dbg !16519
  %48 = load i32, i32* %23, align 4, !dbg !16520
  %49 = load i8*, i8** %42, align 4, !dbg !16521
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !16521
  store i8* %50, i8** %42, align 4, !dbg !16521
  %51 = load i8*, i8** %29, align 4, !dbg !16522
  %52 = icmp eq i8* %50, %51, !dbg !16524
  br i1 %52, label %53, label %56, !dbg !16525

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16526
  %55 = load i8*, i8** %54, align 4, !dbg !16526
  store i8* %55, i8** %42, align 4, !dbg !16528
  br label %56, !dbg !16529

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !16530
  %58 = add i32 %57, 1, !dbg !16530
  store i32 %58, i32* %17, align 4, !dbg !16530
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !16375, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i32 0, metadata !16380, metadata !DIExpression()), !dbg !16531
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !16533
  store i32 0, i32* %59, align 4, !dbg !16534
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #26, !dbg !16535
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16536
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #26, !dbg !16536
  br label %73, !dbg !16537

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !16538

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16539
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !16542
  store i8* %1, i8** %64, align 4, !dbg !16543
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16544
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16545
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #26, !dbg !16545
  call void @llvm.dbg.value(metadata i32 %67, metadata !16469, metadata !DIExpression()), !dbg !16470
  br label %73, !dbg !16546

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !16547
  call void @llvm.dbg.value(metadata i32 %69, metadata !16469, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !16419, metadata !DIExpression()) #25, !dbg !16548
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16550
  br i1 %70, label %72, label %71, !dbg !16551

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 194) #26, !dbg !16552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 194) #26, !dbg !16552
  unreachable, !dbg !16552

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !16414, metadata !DIExpression()) #25, !dbg !16548
  call void @llvm.dbg.value(metadata i32 %16, metadata !16428, metadata !DIExpression()) #25, !dbg !16553
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16555, !srcloc !16434
  br label %73, !dbg !16556

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !16470
  ret i32 %74, !dbg !16557
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16558 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16562, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i8* %1, metadata !16563, metadata !DIExpression()), !dbg !16566
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !16336, metadata !DIExpression()) #25, !dbg !16568
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16570, !srcloc !16351
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16349, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16342, metadata !DIExpression()) #25, !dbg !16568
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16573
  br i1 %5, label %7, label %6, !dbg !16574

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !16575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16575
  unreachable, !dbg !16575

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16342, metadata !DIExpression()) #25, !dbg !16568
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16576
  call void @llvm.dbg.value(metadata i32 undef, metadata !16564, metadata !DIExpression()), !dbg !16566
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16577
  %9 = load i32, i32* %8, align 4, !dbg !16577
  %10 = icmp eq i32 %9, 0, !dbg !16579
  br i1 %10, label %17, label %11, !dbg !16580

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16581
  %13 = load i8*, i8** %12, align 4, !dbg !16581
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16583
  %15 = load i32, i32* %14, align 4, !dbg !16583
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #26, !dbg !16584
  call void @llvm.dbg.value(metadata i32 0, metadata !16565, metadata !DIExpression()), !dbg !16566
  br label %17, !dbg !16585

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !16586
  call void @llvm.dbg.value(metadata i32 %18, metadata !16565, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !16419, metadata !DIExpression()) #25, !dbg !16587
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16589
  br i1 %19, label %21, label %20, !dbg !16590

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 194) #26, !dbg !16591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.327, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !16591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 194) #26, !dbg !16591
  unreachable, !dbg !16591

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !16570
  call void @llvm.dbg.value(metadata i32 %22, metadata !16348, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 %22, metadata !16342, metadata !DIExpression()) #25, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %22, metadata !16564, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16587
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()) #25, !dbg !16592
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #25, !dbg !16594, !srcloc !16434
  ret i32 %18, !dbg !16595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !16596 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16600, metadata !DIExpression()), !dbg !16603
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16604
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !16336, metadata !DIExpression()) #25, !dbg !16605
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16607, !srcloc !16351
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()) #25, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16349, metadata !DIExpression()) #25, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16342, metadata !DIExpression()) #25, !dbg !16605
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !16610
  br i1 %4, label %6, label %5, !dbg !16611

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16612
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #26, !dbg !16612
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.324, i32 0, i32 0), i32 noundef 148) #26, !dbg !16612
  unreachable, !dbg !16612

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()) #25, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16342, metadata !DIExpression()) #25, !dbg !16605
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !16601, metadata !DIExpression()), !dbg !16603
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16602, metadata !DIExpression()), !dbg !16603
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16615
  br i1 %9, label %15, label %10, !dbg !16616

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !16375, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i32 -35, metadata !16380, metadata !DIExpression()), !dbg !16617
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !16620
  store i32 -35, i32* %12, align 4, !dbg !16621
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #26, !dbg !16622
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16602, metadata !DIExpression()), !dbg !16603
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !16615
  br i1 %14, label %15, label %10, !dbg !16616, !llvm.loop !16623

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !16607
  call void @llvm.dbg.value(metadata i32 %16, metadata !16348, metadata !DIExpression()) #25, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %16, metadata !16342, metadata !DIExpression()) #25, !dbg !16605
  call void @llvm.dbg.value(metadata i32 %16, metadata !16601, metadata !DIExpression()), !dbg !16603
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16625
  store i32 0, i32* %17, align 4, !dbg !16626
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16627
  %19 = load i8*, i8** %18, align 4, !dbg !16627
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16628
  store i8* %19, i8** %20, align 4, !dbg !16629
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16630
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #26, !dbg !16630
  ret void, !dbg !16631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !16632 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16643, metadata !DIExpression()), !dbg !16644
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16645
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !16646
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16647
  store i32 0, i32* %3, align 4, !dbg !16648
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16649
  tail call fastcc void @z_waitq_init.330(%struct._wait_q_t* noundef %4) #27, !dbg !16650
  ret i32 0, !dbg !16651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.330(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16652 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16656, metadata !DIExpression()), !dbg !16657
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16658
  tail call fastcc void @sys_dlist_init.331(%struct._dnode* noundef %2) #27, !dbg !16659
  ret void, !dbg !16660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.331(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16661 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16666, metadata !DIExpression()), !dbg !16667
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16668
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16669
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16670
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16671
  ret void, !dbg !16672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16673 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16682, metadata !DIExpression()), !dbg !16694
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16681, metadata !DIExpression()), !dbg !16694
  call void @llvm.dbg.value(metadata i8 0, metadata !16689, metadata !DIExpression()), !dbg !16694
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16695, !srcloc !16704
  call void @llvm.dbg.value(metadata i32 %4, metadata !16698, metadata !DIExpression()) #25, !dbg !16705
  %5 = icmp eq i32 %4, 0, !dbg !16706
  br i1 %5, label %7, label %6, !dbg !16707

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.336, i32 0, i32 0), i32 noundef 101) #26, !dbg !16708
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.337, i32 0, i32 0)) #26, !dbg !16708
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.336, i32 0, i32 0), i32 noundef 101) #26, !dbg !16708
  unreachable, !dbg !16708

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.338, metadata !16710, metadata !DIExpression()) #25, !dbg !16717
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16719, !srcloc !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16722, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !16723, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !16716, metadata !DIExpression()) #25, !dbg !16717
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16727
  br i1 %9, label %11, label %10, !dbg !16730

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 148) #26, !dbg !16731
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16731
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 148) #26, !dbg !16731
  unreachable, !dbg !16731

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !16719
  call void @llvm.dbg.value(metadata i32 %12, metadata !16722, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata i32 %12, metadata !16716, metadata !DIExpression()) #25, !dbg !16717
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16733
  call void @llvm.dbg.value(metadata i32 %12, metadata !16684, metadata !DIExpression()), !dbg !16694
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16734
  %14 = load i32, i32* %13, align 4, !dbg !16734
  %15 = icmp eq i32 %14, 0, !dbg !16734
  br i1 %15, label %21, label %16, !dbg !16734

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16734
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !16734
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16734
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !16734
  br i1 %20, label %27, label %39, !dbg !16736, !prof !16737

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16738
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !16740
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !16740
  %25 = load i8, i8* %24, align 2, !dbg !16740
  %26 = sext i8 %25 to i32, !dbg !16738
  br label %30, !dbg !16741

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16742
  %29 = load i32, i32* %28, align 4, !dbg !16742
  br label %30, !dbg !16741

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !16743
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !16741
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16744
  store i32 %32, i32* %33, align 4, !dbg !16745
  %34 = add i32 %14, 1, !dbg !16746
  store i32 %34, i32* %13, align 4, !dbg !16746
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16747
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !16748
  call void @llvm.dbg.value(metadata i32 undef, metadata !16749, metadata !DIExpression()) #25, !dbg !16755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.338, metadata !16754, metadata !DIExpression()) #25, !dbg !16755
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16757
  br i1 %36, label %38, label %37, !dbg !16760

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16761
  unreachable, !dbg !16761

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !16749, metadata !DIExpression()) #25, !dbg !16755
  call void @llvm.dbg.value(metadata i32 %12, metadata !16763, metadata !DIExpression()) #25, !dbg !16766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16768, !srcloc !16769
  br label %97, !dbg !16770

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !16771
  br i1 %40, label %41, label %45, !dbg !16773, !prof !16774

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !16749, metadata !DIExpression()) #25, !dbg !16775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.338, metadata !16754, metadata !DIExpression()) #25, !dbg !16775
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16778
  br i1 %42, label %44, label %43, !dbg !16779

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16780
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16780
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16780
  unreachable, !dbg !16780

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !16749, metadata !DIExpression()) #25, !dbg !16775
  call void @llvm.dbg.value(metadata i32 %12, metadata !16763, metadata !DIExpression()) #25, !dbg !16781
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16783, !srcloc !16769
  br label %97, !dbg !16784

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !16785
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !16785
  %48 = load i8, i8* %47, align 2, !dbg !16785
  %49 = sext i8 %48 to i32, !dbg !16786
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !16787
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !16787
  %52 = load i8, i8* %51, align 2, !dbg !16787
  %53 = sext i8 %52 to i32, !dbg !16788
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #27, !dbg !16789
  call void @llvm.dbg.value(metadata i32 %54, metadata !16683, metadata !DIExpression()), !dbg !16694
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #27, !dbg !16790
  br i1 %55, label %56, label %58, !dbg !16792

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #27, !dbg !16793
  call void @llvm.dbg.value(metadata i1 %57, metadata !16689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16694
  br label %58, !dbg !16795

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !16689, metadata !DIExpression()), !dbg !16694
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16796
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !16797
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.338, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !16797
  call void @llvm.dbg.value(metadata i32 %62, metadata !16690, metadata !DIExpression()), !dbg !16694
  %63 = icmp eq i32 %62, 0, !dbg !16798
  br i1 %63, label %97, label %64, !dbg !16800

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.338, metadata !16710, metadata !DIExpression()) #25, !dbg !16801
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16803, !srcloc !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16722, metadata !DIExpression()) #25, !dbg !16805
  call void @llvm.dbg.value(metadata i32 undef, metadata !16723, metadata !DIExpression()) #25, !dbg !16805
  call void @llvm.dbg.value(metadata i32 undef, metadata !16716, metadata !DIExpression()) #25, !dbg !16801
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16806
  br i1 %66, label %68, label %67, !dbg !16807

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 148) #26, !dbg !16808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 148) #26, !dbg !16808
  unreachable, !dbg !16808

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !16803
  call void @llvm.dbg.value(metadata i32 %69, metadata !16722, metadata !DIExpression()) #25, !dbg !16805
  call void @llvm.dbg.value(metadata i32 %69, metadata !16716, metadata !DIExpression()) #25, !dbg !16801
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16809
  call void @llvm.dbg.value(metadata i32 %69, metadata !16684, metadata !DIExpression()), !dbg !16694
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !16810
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !16810
  br i1 %71, label %90, label %72, !dbg !16811, !prof !16774

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.344(%struct._wait_q_t* noundef nonnull %60) #27, !dbg !16812
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !16691, metadata !DIExpression()), !dbg !16813
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !16814
  br i1 %74, label %83, label %75, !dbg !16815

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !16816
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !16816
  %78 = load i8, i8* %77, align 2, !dbg !16816
  %79 = sext i8 %78 to i32, !dbg !16817
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16818
  %81 = load i32, i32* %80, align 4, !dbg !16818
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #27, !dbg !16819
  br label %86, !dbg !16815

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16820
  %85 = load i32, i32* %84, align 4, !dbg !16820
  br label %86, !dbg !16815

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !16815
  call void @llvm.dbg.value(metadata i32 %87, metadata !16683, metadata !DIExpression()), !dbg !16694
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #27, !dbg !16821
  %89 = select i1 %88, i1 true, i1 %59, !dbg !16822
  call void @llvm.dbg.value(metadata i1 %89, metadata !16689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16694
  call void @llvm.dbg.value(metadata i8 poison, metadata !16689, metadata !DIExpression()), !dbg !16694
  br i1 %89, label %91, label %93, !dbg !16823

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !16689, metadata !DIExpression()), !dbg !16694
  br i1 %59, label %91, label %93, !dbg !16823

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !16824
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.338, [1 x i32] %92) #26, !dbg !16824
  br label %97, !dbg !16827

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !16749, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.338, metadata !16754, metadata !DIExpression()) #25, !dbg !16828
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16831
  br i1 %94, label %96, label %95, !dbg !16832

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16833
  unreachable, !dbg !16833

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !16749, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata i32 %69, metadata !16763, metadata !DIExpression()) #25, !dbg !16834
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #25, !dbg !16836, !srcloc !16769
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !16694
  ret i32 %98, !dbg !16837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16842, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata i32 %1, metadata !16843, metadata !DIExpression()), !dbg !16845
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !16846
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !16846
  call void @llvm.dbg.value(metadata i32 %4, metadata !16844, metadata !DIExpression()), !dbg !16845
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !16847
  call void @llvm.dbg.value(metadata i32 %5, metadata !16844, metadata !DIExpression()), !dbg !16845
  ret i32 %5, !dbg !16848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16853, metadata !DIExpression()), !dbg !16855
  call void @llvm.dbg.value(metadata i32 %1, metadata !16854, metadata !DIExpression()), !dbg !16855
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !16856
  ret i1 %3, !dbg !16857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !16858 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16862, metadata !DIExpression()), !dbg !16864
  call void @llvm.dbg.value(metadata i32 %1, metadata !16863, metadata !DIExpression()), !dbg !16864
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16865
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !16865
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !16867
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !16867
  %7 = load i8, i8* %6, align 2, !dbg !16867
  %8 = sext i8 %7 to i32, !dbg !16868
  %9 = icmp eq i32 %8, %1, !dbg !16869
  br i1 %9, label %12, label %10, !dbg !16870

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !16871
  br label %12, !dbg !16873

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !16864
  ret i1 %13, !dbg !16874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.344(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !16875 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16879, metadata !DIExpression()), !dbg !16880
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16881
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.345(%struct._dnode* noundef %2) #27, !dbg !16882
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16883
  ret %struct.k_thread* %4, !dbg !16884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.345(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16885 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16889, metadata !DIExpression()), !dbg !16890
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.346(%struct._dnode* noundef %0) #27, !dbg !16891
  br i1 %2, label %6, label %3, !dbg !16891

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16892
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16892
  br label %6, !dbg !16891

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16891
  ret %struct._dnode* %7, !dbg !16893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.346(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16894 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16898, metadata !DIExpression()), !dbg !16899
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16900
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16900
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16901
  ret i1 %4, !dbg !16902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16905, metadata !DIExpression()), !dbg !16907
  call void @llvm.dbg.value(metadata i32 %1, metadata !16906, metadata !DIExpression()), !dbg !16907
  %3 = icmp slt i32 %0, %1, !dbg !16908
  ret i1 %3, !dbg !16909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !16910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16912, metadata !DIExpression()), !dbg !16913
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !16914
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !16914
  ret i32 %3, !dbg !16915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !16916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16920, metadata !DIExpression()), !dbg !16921
  %2 = icmp sgt i32 %0, -128, !dbg !16922
  ret i1 %2, !dbg !16923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !16924 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16926, metadata !DIExpression()), !dbg !16930
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16931, !srcloc !16704
  call void @llvm.dbg.value(metadata i32 %2, metadata !16698, metadata !DIExpression()) #25, !dbg !16936
  %3 = icmp eq i32 %2, 0, !dbg !16937
  br i1 %3, label %5, label %4, !dbg !16938

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.336, i32 0, i32 0), i32 noundef 205) #26, !dbg !16939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.337, i32 0, i32 0)) #26, !dbg !16939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.336, i32 0, i32 0), i32 noundef 205) #26, !dbg !16939
  unreachable, !dbg !16939

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16941
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !16941
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16941
  br i1 %8, label %41, label %9, !dbg !16943

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16944
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !16944
  br i1 %11, label %12, label %41, !dbg !16946

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16947
  %14 = load i32, i32* %13, align 4, !dbg !16947
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !16950

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.336, i32 0, i32 0), i32 noundef 229) #26, !dbg !16951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.336, i32 0, i32 0), i32 noundef 229) #26, !dbg !16951
  unreachable, !dbg !16951

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !16953
  store i32 %17, i32* %13, align 4, !dbg !16953
  br label %41, !dbg !16956

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.338, metadata !16710, metadata !DIExpression()) #25, !dbg !16957
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16959, !srcloc !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16722, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16723, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16716, metadata !DIExpression()) #25, !dbg !16957
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16962
  br i1 %20, label %22, label %21, !dbg !16963

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 148) #26, !dbg !16964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 148) #26, !dbg !16964
  unreachable, !dbg !16964

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16959
  call void @llvm.dbg.value(metadata i32 %23, metadata !16722, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata i32 %23, metadata !16716, metadata !DIExpression()) #25, !dbg !16957
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16965
  call void @llvm.dbg.value(metadata i32 %23, metadata !16928, metadata !DIExpression()), !dbg !16930
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16966
  %25 = load i32, i32* %24, align 4, !dbg !16966
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #27, !dbg !16967
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16968
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !16969
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !16927, metadata !DIExpression()), !dbg !16930
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !16970
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !16971
  br i1 %29, label %37, label %30, !dbg !16973

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !16974
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !16974
  %33 = load i8, i8* %32, align 2, !dbg !16974
  %34 = sext i8 %33 to i32, !dbg !16976
  store i32 %34, i32* %24, align 4, !dbg !16977
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !16978, metadata !DIExpression()), !dbg !16984
  call void @llvm.dbg.value(metadata i32 0, metadata !16983, metadata !DIExpression()), !dbg !16984
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 7, i32 1, !dbg !16986
  store i32 0, i32* %35, align 4, !dbg !16987
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !16988
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16989
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.338, [1 x i32] %36) #26, !dbg !16989
  br label %41, !dbg !16990

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16749, metadata !DIExpression()) #25, !dbg !16993
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.338, metadata !16754, metadata !DIExpression()) #25, !dbg !16993
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16995
  br i1 %38, label %40, label %39, !dbg !16996

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.338) #26, !dbg !16997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.340, i32 0, i32 0), i32 noundef 194) #26, !dbg !16997
  unreachable, !dbg !16997

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !16749, metadata !DIExpression()) #25, !dbg !16993
  call void @llvm.dbg.value(metadata i32 %23, metadata !16763, metadata !DIExpression()) #25, !dbg !16998
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !17000, !srcloc !16769
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !16930
  ret i32 %42, !dbg !17001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !17002 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17006, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17007, metadata !DIExpression()), !dbg !17010
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17011
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !17011
  %5 = load i8, i8* %4, align 2, !dbg !17011
  call void @llvm.dbg.value(metadata i8 %5, metadata !17008, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !17010
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !17012
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !17012
  %8 = load i8, i8* %7, align 2, !dbg !17012
  call void @llvm.dbg.value(metadata i8 %8, metadata !17009, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !17010
  %9 = icmp eq i8 %8, %5, !dbg !17013
  %10 = sext i8 %5 to i32, !dbg !17015
  %11 = sext i8 %8 to i32, !dbg !17015
  %12 = sub nsw i32 %11, %10, !dbg !17015
  %13 = select i1 %9, i32 0, i32 %12, !dbg !17015
  ret i32 %13, !dbg !17016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !17017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !17021, metadata !DIExpression()), !dbg !17022
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !17023
  %3 = icmp eq i32 %2, 0, !dbg !17025
  br i1 %3, label %8, label %4, !dbg !17026

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !17027
  %6 = add i32 %5, %2, !dbg !17029
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17030
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !17031
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !17032
  br label %8, !dbg !17033

8:                                                ; preds = %4, %1
  ret void, !dbg !17034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !17035 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !17039, metadata !DIExpression()), !dbg !17041
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !17042
  call void @llvm.dbg.value(metadata i32 %1, metadata !17040, metadata !DIExpression()), !dbg !17041
  ret i32 %1, !dbg !17043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17048, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i32 %1, metadata !17049, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i32 0, metadata !17050, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17066
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17068, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17075
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17075
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17066
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17076
  br i1 %4, label %6, label %5, !dbg !17079

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17080
  unreachable, !dbg !17080

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17075
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17066
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17082
  call void @llvm.dbg.value(metadata i32 undef, metadata !17056, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i32 undef, metadata !17050, metadata !DIExpression()), !dbg !17058
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17083
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !17086
  %8 = icmp sgt i32 %0, 0, !dbg !17087
  %9 = icmp sgt i32 %7, 2, !dbg !17089
  %10 = select i1 %9, i32 %7, i32 2, !dbg !17089
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !17089
  store i32 %11, i32* @slice_ticks, align 4, !dbg !17090
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !17091
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17092
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17099
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17101
  br i1 %12, label %14, label %13, !dbg !17104

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17105
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17105
  unreachable, !dbg !17105

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !17068
  call void @llvm.dbg.value(metadata i32 %15, metadata !17071, metadata !DIExpression()) #25, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %15, metadata !17065, metadata !DIExpression()) #25, !dbg !17066
  call void @llvm.dbg.value(metadata i32 %15, metadata !17056, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17099
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !17110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !17112, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !17050, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i32 undef, metadata !17050, metadata !DIExpression()), !dbg !17058
  ret void, !dbg !17114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !17115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17117, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata i32 %0, metadata !17119, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17134
  call void @llvm.dbg.value(metadata i32 1000, metadata !17122, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i32 10000, metadata !17123, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i8 1, metadata !17124, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i1 true, metadata !17125, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17134
  call void @llvm.dbg.value(metadata i1 true, metadata !17126, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17134
  call void @llvm.dbg.value(metadata i8 0, metadata !17127, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i1 true, metadata !17128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17134
  call void @llvm.dbg.value(metadata i1 false, metadata !17129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17134
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !17134
  %2 = mul i32 %0, 10, !dbg !17136
  ret i32 %2, !dbg !17142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !17143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17145, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17148
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17150, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17152
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17152
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17148
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17153
  br i1 %3, label %5, label %4, !dbg !17154

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17155
  unreachable, !dbg !17155

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17150
  call void @llvm.dbg.value(metadata i32 %6, metadata !17071, metadata !DIExpression()) #25, !dbg !17152
  call void @llvm.dbg.value(metadata i32 %6, metadata !17065, metadata !DIExpression()) #25, !dbg !17148
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17156
  call void @llvm.dbg.value(metadata i32 %6, metadata !17146, metadata !DIExpression()), !dbg !17147
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17157
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17159
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !17160
  br i1 %9, label %10, label %14, !dbg !17161

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17162
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17164
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17166
  br i1 %11, label %13, label %12, !dbg !17167

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17168
  unreachable, !dbg !17168

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !17093, metadata !DIExpression()) #25, !dbg !17164
  call void @llvm.dbg.value(metadata i32 %6, metadata !17107, metadata !DIExpression()) #25, !dbg !17169
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17171, !srcloc !17113
  br label %33, !dbg !17172

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17173
  %15 = tail call fastcc i32 @slice_time() #27, !dbg !17174
  %16 = icmp eq i32 %15, 0, !dbg !17174
  br i1 %16, label %27, label %17, !dbg !17176

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #27, !dbg !17177
  br i1 %18, label %19, label %27, !dbg !17178

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17179
  %21 = icmp sgt i32 %20, %0, !dbg !17182
  br i1 %21, label %25, label %22, !dbg !17183

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17184
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #27, !dbg !17184
  call void @llvm.dbg.value(metadata i32 %24, metadata !17146, metadata !DIExpression()), !dbg !17147
  br label %28, !dbg !17186

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !17187
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17187
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17189
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !17147
  call void @llvm.dbg.value(metadata i32 %29, metadata !17146, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17191
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17193
  br i1 %30, label %32, label %31, !dbg !17194

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17195
  unreachable, !dbg !17195

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !17093, metadata !DIExpression()) #25, !dbg !17191
  call void @llvm.dbg.value(metadata i32 %29, metadata !17107, metadata !DIExpression()) #25, !dbg !17196
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !17198, !srcloc !17113
  br label %33, !dbg !17199

33:                                               ; preds = %32, %13
  ret void, !dbg !17199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !17200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17204, metadata !DIExpression()), !dbg !17206
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !17207
  %3 = icmp eq i32 %2, 0, !dbg !17207
  br i1 %3, label %16, label %4, !dbg !17208

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !17209
  br i1 %5, label %16, label %6, !dbg !17210

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17211
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !17211
  %9 = load i8, i8* %8, align 2, !dbg !17211
  %10 = sext i8 %9 to i32, !dbg !17212
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !17213
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.363(i32 noundef %10, i32 noundef %11) #27, !dbg !17214
  br i1 %12, label %16, label %13, !dbg !17215

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !17216
  %15 = xor i1 %14, true, !dbg !17217
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !17206
  call void @llvm.dbg.value(metadata i1 %17, metadata !17205, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17206
  ret i1 %17, !dbg !17218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !17219 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17223, metadata !DIExpression()), !dbg !17225
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17226
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17224, metadata !DIExpression()), !dbg !17225
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !17227
  br i1 %3, label %5, label %4, !dbg !17229

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !17230
  br label %5, !dbg !17232

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !17223, metadata !DIExpression()), !dbg !17225
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17233
  ret i32 %6, !dbg !17234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17237, metadata !DIExpression()), !dbg !17239
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17240
  %3 = load i8, i8* %2, align 1, !dbg !17240
  call void @llvm.dbg.value(metadata i8 %3, metadata !17238, metadata !DIExpression()), !dbg !17239
  %4 = and i8 %3, 31, !dbg !17241
  %5 = icmp ne i8 %4, 0, !dbg !17242
  ret i1 %5, !dbg !17243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17244 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17246, metadata !DIExpression()), !dbg !17247
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17248
  br i1 %2, label %3, label %7, !dbg !17250

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17251, metadata !DIExpression()) #25, !dbg !17254
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17257
  %5 = load i8, i8* %4, align 1, !dbg !17258
  %6 = and i8 %5, 127, !dbg !17258
  store i8 %6, i8* %4, align 1, !dbg !17258
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17259, metadata !DIExpression()) #25, !dbg !17262
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17266
  br label %7, !dbg !17267

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17268, metadata !DIExpression()) #25, !dbg !17271
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17273
  %9 = load i8, i8* %8, align 1, !dbg !17274
  %10 = or i8 %9, -128, !dbg !17274
  store i8 %10, i8* %8, align 1, !dbg !17274
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17275, metadata !DIExpression()) #25, !dbg !17278
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17282, metadata !DIExpression()) #25, !dbg !17290
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17288, metadata !DIExpression()) #25, !dbg !17290
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17292
  br i1 %11, label %12, label %13, !dbg !17295

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !17296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !17296
  unreachable, !dbg !17296

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17298
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !17289, metadata !DIExpression()) #25, !dbg !17290
  %15 = icmp eq %struct._dnode* %14, null, !dbg !17300
  br i1 %15, label %26, label %16, !dbg !17298

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !17289, metadata !DIExpression()) #25, !dbg !17290
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !17302
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !17289, metadata !DIExpression()) #25, !dbg !17290
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #26, !dbg !17303
  %20 = icmp sgt i32 %19, 0, !dbg !17306
  br i1 %20, label %21, label %23, !dbg !17307

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17308
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #26, !dbg !17310
  br label %28, !dbg !17311

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #26, !dbg !17300
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !17289, metadata !DIExpression()) #25, !dbg !17290
  %25 = icmp eq %struct._dnode* %24, null, !dbg !17300
  br i1 %25, label %26, label %16, !dbg !17298, !llvm.loop !17312

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17314
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #26, !dbg !17315
  br label %28, !dbg !17316

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17317
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !17318
  %31 = zext i1 %30 to i32, !dbg !17318
  tail call fastcc void @update_cache(i32 noundef %31) #27, !dbg !17319
  ret void, !dbg !17320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17323, metadata !DIExpression()), !dbg !17324
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #27, !dbg !17325
  ret i1 %2, !dbg !17326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17327 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !17329, metadata !DIExpression()), !dbg !17331
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17330, metadata !DIExpression()), !dbg !17331
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !17332
  br i1 %3, label %4, label %5, !dbg !17335

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1139) #26, !dbg !17336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1139) #26, !dbg !17336
  unreachable, !dbg !17336

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !17338
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #27, !dbg !17339
  ret void, !dbg !17340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !17341 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17343, metadata !DIExpression()), !dbg !17344
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !17345
  ret i1 %2, !dbg !17346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !17347 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17351, metadata !DIExpression()), !dbg !17352
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.361(%struct._dnode* noundef %0) #27, !dbg !17353
  br i1 %2, label %6, label %3, !dbg !17353

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17354
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17354
  br label %6, !dbg !17353

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17353
  ret %struct._dnode* %7, !dbg !17355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17356 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17360, metadata !DIExpression()), !dbg !17364
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17361, metadata !DIExpression()), !dbg !17364
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17365
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17365
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17362, metadata !DIExpression()), !dbg !17364
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17366
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17367
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17368
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17369
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17370
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17371
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17372
  ret void, !dbg !17373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !17374 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17378, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17379, metadata !DIExpression()), !dbg !17380
  %3 = icmp eq %struct._dnode* %1, null, !dbg !17381
  br i1 %3, label %6, label %4, !dbg !17382

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !17383
  br label %6, !dbg !17382

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !17382
  ret %struct._dnode* %7, !dbg !17384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17385 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17389, metadata !DIExpression()), !dbg !17392
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17390, metadata !DIExpression()), !dbg !17392
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17393
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17393
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17391, metadata !DIExpression()), !dbg !17392
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17394
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17395
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17396
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !17397
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17398
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17399
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17400
  ret void, !dbg !17401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !17402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17404, metadata !DIExpression()), !dbg !17406
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17407
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17414, metadata !DIExpression()) #25, !dbg !17416
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17417
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !17418
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !17418
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17405, metadata !DIExpression()), !dbg !17406
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17419, metadata !DIExpression()) #25, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %0, metadata !17424, metadata !DIExpression()) #25, !dbg !17425
  %6 = icmp eq i32 %0, 0, !dbg !17428
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17430
  br i1 %6, label %8, label %18, !dbg !17431

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !17432
  br i1 %9, label %10, label %11, !dbg !17435

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.359, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 137) #26, !dbg !17436
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !17436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 137) #26, !dbg !17436
  unreachable, !dbg !17436

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !17438
  br i1 %12, label %18, label %13, !dbg !17440

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !17441
  br i1 %14, label %18, label %15, !dbg !17443

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !17444
  %17 = icmp eq i32 %16, 0, !dbg !17444
  br i1 %17, label %21, label %18, !dbg !17446

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !17447
  br i1 %19, label %21, label %20, !dbg !17450

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !17451
  br label %21, !dbg !17453

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !17430
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17430
  ret void, !dbg !17454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !17455 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17459, metadata !DIExpression()), !dbg !17462
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17460, metadata !DIExpression()), !dbg !17462
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef %0) #27, !dbg !17463
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17461, metadata !DIExpression()), !dbg !17462
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17460, metadata !DIExpression()), !dbg !17462
  ret %struct.k_thread* %3, !dbg !17464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17465 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17467, metadata !DIExpression()), !dbg !17468
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17469
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !17470
  %4 = xor i1 %3, true, !dbg !17471
  ret i1 %4, !dbg !17472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17475, metadata !DIExpression()), !dbg !17476
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !17477
  %3 = load i16, i16* %2, align 2, !dbg !17477
  %4 = icmp ult i16 %3, 128, !dbg !17478
  %5 = zext i1 %4 to i32, !dbg !17478
  ret i32 %5, !dbg !17479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17480 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17486, metadata !DIExpression()), !dbg !17487
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17488
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !17489
  %4 = xor i1 %3, true, !dbg !17490
  ret i1 %4, !dbg !17491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17492 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17498, metadata !DIExpression()), !dbg !17499
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17500
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17500
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17501
  ret i1 %4, !dbg !17502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !17503 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17505, metadata !DIExpression()), !dbg !17507
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17506, metadata !DIExpression()), !dbg !17507
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17508
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17508
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !17509
  br i1 %5, label %9, label %6, !dbg !17510

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17511
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !17511
  br label %9, !dbg !17510

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !17510
  ret %struct._dnode* %10, !dbg !17512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.361(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17513 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17517, metadata !DIExpression()), !dbg !17518
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17519
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17519
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17520
  ret i1 %4, !dbg !17521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17522 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17526, metadata !DIExpression()), !dbg !17529
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17530
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17530
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17527, metadata !DIExpression()), !dbg !17529
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17531
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17531
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17528, metadata !DIExpression()), !dbg !17529
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17532
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17533
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17534
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17535
  tail call fastcc void @sys_dnode_init.362(%struct._dnode* noundef %0) #27, !dbg !17536
  ret void, !dbg !17537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.362(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17538 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17540, metadata !DIExpression()), !dbg !17541
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17542
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17543
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17544
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17545
  ret void, !dbg !17546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !17547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17551, metadata !DIExpression()), !dbg !17553
  call void @llvm.dbg.value(metadata i32 %1, metadata !17552, metadata !DIExpression()), !dbg !17553
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17554
  %4 = load i8, i8* %3, align 1, !dbg !17554
  %5 = zext i8 %4 to i32, !dbg !17555
  %6 = and i32 %5, %1, !dbg !17556
  %7 = icmp ne i32 %6, 0, !dbg !17557
  ret i1 %7, !dbg !17558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.363(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !17559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17561, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata i32 %1, metadata !17562, metadata !DIExpression()), !dbg !17563
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.364(i32 noundef %0, i32 noundef %1) #27, !dbg !17564
  ret i1 %3, !dbg !17565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.364(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !17566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17568, metadata !DIExpression()), !dbg !17570
  call void @llvm.dbg.value(metadata i32 %1, metadata !17569, metadata !DIExpression()), !dbg !17570
  %3 = icmp slt i32 %0, %1, !dbg !17571
  ret i1 %3, !dbg !17572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17575, metadata !DIExpression()), !dbg !17579
  call void @llvm.dbg.value(metadata i32 0, metadata !17576, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17581
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17583, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17585
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17585
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17581
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17586
  br i1 %3, label %5, label %4, !dbg !17587

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17588
  unreachable, !dbg !17588

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17585
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17581
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17589
  call void @llvm.dbg.value(metadata i32 undef, metadata !17578, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()), !dbg !17580
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17595
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17597
  br i1 %6, label %8, label %7, !dbg !17598

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17599
  unreachable, !dbg !17599

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17583
  call void @llvm.dbg.value(metadata i32 %9, metadata !17071, metadata !DIExpression()) #25, !dbg !17585
  call void @llvm.dbg.value(metadata i32 %9, metadata !17065, metadata !DIExpression()) #25, !dbg !17581
  call void @llvm.dbg.value(metadata i32 %9, metadata !17578, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17595
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !17600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17602, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !17576, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17576, metadata !DIExpression()), !dbg !17580
  ret void, !dbg !17603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17606, metadata !DIExpression()), !dbg !17607
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17608
  br i1 %2, label %27, label %3, !dbg !17610

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !17611
  br i1 %4, label %5, label %27, !dbg !17612

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17268, metadata !DIExpression()) #25, !dbg !17613
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17616
  %7 = load i8, i8* %6, align 1, !dbg !17617
  %8 = or i8 %7, -128, !dbg !17617
  store i8 %8, i8* %6, align 1, !dbg !17617
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17275, metadata !DIExpression()) #25, !dbg !17618
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17282, metadata !DIExpression()) #25, !dbg !17620
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17288, metadata !DIExpression()) #25, !dbg !17620
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17622
  br i1 %9, label %10, label %11, !dbg !17623

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !17624
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !17624
  unreachable, !dbg !17624

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17625
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !17289, metadata !DIExpression()) #25, !dbg !17620
  %13 = icmp eq %struct._dnode* %12, null, !dbg !17626
  br i1 %13, label %24, label %14, !dbg !17625

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !17289, metadata !DIExpression()) #25, !dbg !17620
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !17627
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !17289, metadata !DIExpression()) #25, !dbg !17620
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #26, !dbg !17628
  %18 = icmp sgt i32 %17, 0, !dbg !17629
  br i1 %18, label %19, label %21, !dbg !17630

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17631
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #26, !dbg !17632
  br label %26, !dbg !17633

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #26, !dbg !17626
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !17289, metadata !DIExpression()) #25, !dbg !17620
  %23 = icmp eq %struct._dnode* %22, null, !dbg !17626
  br i1 %23, label %24, label %14, !dbg !17625, !llvm.loop !17634

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17636
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #26, !dbg !17637
  br label %26, !dbg !17638

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !17639
  br label %27, !dbg !17640

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !17641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17644, metadata !DIExpression()), !dbg !17645
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !17646
  br i1 %2, label %6, label %3, !dbg !17647

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !17648
  %5 = xor i1 %4, true, !dbg !17647
  br label %6, !dbg !17647

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !17649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17652, metadata !DIExpression()), !dbg !17656
  call void @llvm.dbg.value(metadata i32 0, metadata !17653, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17658
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17660, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17662
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17662
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17658
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17663
  br i1 %3, label %5, label %4, !dbg !17664

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17665
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17665
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17665
  unreachable, !dbg !17665

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17662
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17658
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17666
  call void @llvm.dbg.value(metadata i32 undef, metadata !17655, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !17653, metadata !DIExpression()), !dbg !17657
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !17667
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17670
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17672
  br i1 %6, label %8, label %7, !dbg !17673

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17674
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17674
  unreachable, !dbg !17674

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17660
  call void @llvm.dbg.value(metadata i32 %9, metadata !17071, metadata !DIExpression()) #25, !dbg !17662
  call void @llvm.dbg.value(metadata i32 %9, metadata !17065, metadata !DIExpression()) #25, !dbg !17658
  call void @llvm.dbg.value(metadata i32 %9, metadata !17655, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17670
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !17675
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17677, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !17653, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 undef, metadata !17653, metadata !DIExpression()), !dbg !17657
  ret void, !dbg !17678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17681, metadata !DIExpression()), !dbg !17683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17684
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17686, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17688
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17688
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17684
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17689
  br i1 %3, label %5, label %4, !dbg !17690

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17691
  unreachable, !dbg !17691

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17686
  call void @llvm.dbg.value(metadata i32 %6, metadata !17071, metadata !DIExpression()) #25, !dbg !17688
  call void @llvm.dbg.value(metadata i32 %6, metadata !17065, metadata !DIExpression()) #25, !dbg !17684
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17692
  call void @llvm.dbg.value(metadata i32 %6, metadata !17682, metadata !DIExpression()), !dbg !17683
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !17693
  br i1 %7, label %8, label %12, !dbg !17695

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17696
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17699
  br i1 %9, label %11, label %10, !dbg !17700

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17701
  unreachable, !dbg !17701

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !17093, metadata !DIExpression()) #25, !dbg !17696
  call void @llvm.dbg.value(metadata i32 %6, metadata !17107, metadata !DIExpression()) #25, !dbg !17702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17704, !srcloc !17113
  br label %14, !dbg !17705

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.369(%struct.k_thread* noundef %0) #27, !dbg !17706
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17707
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17708
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !17708
  br label %14, !dbg !17709

14:                                               ; preds = %12, %11
  ret void, !dbg !17709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17710 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17712, metadata !DIExpression()), !dbg !17713
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17714
  %3 = load i8, i8* %2, align 1, !dbg !17714
  %4 = and i8 %3, 4, !dbg !17715
  %5 = icmp eq i8 %4, 0, !dbg !17716
  ret i1 %5, !dbg !17717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.369(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17720, metadata !DIExpression()), !dbg !17721
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17722
  %3 = load i8, i8* %2, align 1, !dbg !17723
  %4 = and i8 %3, -5, !dbg !17723
  store i8 %4, i8* %2, align 1, !dbg !17723
  ret void, !dbg !17724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !17725 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !17728, metadata !DIExpression()), !dbg !17729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17727, metadata !DIExpression()), !dbg !17729
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !17730
  br i1 %4, label %5, label %12, !dbg !17732

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !17733
  br i1 %6, label %7, label %12, !dbg !17734

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !17741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17740, metadata !DIExpression()) #25, !dbg !17741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17744, metadata !DIExpression()) #25, !dbg !17749
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17751
  br i1 %8, label %10, label %9, !dbg !17754

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !17755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !17755
  unreachable, !dbg !17755

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !17735, metadata !DIExpression()) #25, !dbg !17741
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !17757
  br label %16, !dbg !17758

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17098, metadata !DIExpression()) #25, !dbg !17759
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17762
  br i1 %13, label %15, label %14, !dbg !17763

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17764
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17764
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17764
  unreachable, !dbg !17764

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !17093, metadata !DIExpression()) #25, !dbg !17759
  call void @llvm.dbg.value(metadata i32 %3, metadata !17107, metadata !DIExpression()) #25, !dbg !17765
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17767, !srcloc !17113
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !17768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !17769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17773, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 %0, metadata !17775, metadata !DIExpression()), !dbg !17780
  %2 = icmp eq i32 %0, 0, !dbg !17782
  br i1 %2, label %3, label %6, !dbg !17783

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17784, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %4, metadata !17787, metadata !DIExpression()) #25, !dbg !17792
  %5 = icmp eq i32 %4, 0, !dbg !17793
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !17774
  ret i1 %7, !dbg !17794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !17795 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17798
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17797, metadata !DIExpression()), !dbg !17799
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17800
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !17801
  ret i1 %3, !dbg !17802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !17803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17805, metadata !DIExpression()), !dbg !17807
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !17808
  call void @llvm.dbg.value(metadata i32 %2, metadata !17806, metadata !DIExpression()), !dbg !17807
  ret i32 %2, !dbg !17809
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17810 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17812, metadata !DIExpression()), !dbg !17816
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17817
  call void @llvm.dbg.value(metadata i32 0, metadata !17813, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17819
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17821, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17823
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17823
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17819
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17824
  br i1 %4, label %6, label %5, !dbg !17825

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17826
  unreachable, !dbg !17826

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17821
  call void @llvm.dbg.value(metadata i32 %7, metadata !17071, metadata !DIExpression()) #25, !dbg !17823
  call void @llvm.dbg.value(metadata i32 %7, metadata !17065, metadata !DIExpression()) #25, !dbg !17819
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17827
  call void @llvm.dbg.value(metadata i32 %7, metadata !17815, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 undef, metadata !17813, metadata !DIExpression()), !dbg !17818
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17828
  br i1 %8, label %9, label %13, !dbg !17832

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17251, metadata !DIExpression()) #25, !dbg !17833
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17836
  %11 = load i8, i8* %10, align 1, !dbg !17837
  %12 = and i8 %11, 127, !dbg !17837
  store i8 %12, i8* %10, align 1, !dbg !17837
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17259, metadata !DIExpression()) #25, !dbg !17838
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17840
  br label %13, !dbg !17841

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !17842
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17843
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !17844
  %16 = zext i1 %15 to i32, !dbg !17844
  tail call fastcc void @update_cache(i32 noundef %16) #27, !dbg !17845
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17846
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17848
  br i1 %17, label %19, label %18, !dbg !17849

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17850
  unreachable, !dbg !17850

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !17093, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata i32 %7, metadata !17107, metadata !DIExpression()) #25, !dbg !17851
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !17853, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !17813, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 undef, metadata !17813, metadata !DIExpression()), !dbg !17818
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17854
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !17856
  br i1 %21, label %22, label %23, !dbg !17857

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17858
  br label %23, !dbg !17860

23:                                               ; preds = %22, %19
  ret void, !dbg !17861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17864, metadata !DIExpression()), !dbg !17865
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17866
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !17867
  ret i32 %3, !dbg !17868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17869 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17871, metadata !DIExpression()), !dbg !17872
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17873
  %3 = load i8, i8* %2, align 1, !dbg !17874
  %4 = or i8 %3, 16, !dbg !17874
  store i8 %4, i8* %2, align 1, !dbg !17874
  ret void, !dbg !17875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !17876 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17877, !srcloc !17074
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17877
  call void @llvm.dbg.value(metadata i32 %2, metadata !17071, metadata !DIExpression()) #25, !dbg !17879
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17879
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !17880
  ret void, !dbg !17881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !17882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17884, metadata !DIExpression()), !dbg !17885
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !17886
  br i1 %2, label %3, label %5, !dbg !17888

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !17889
  br label %6, !dbg !17891

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !17107, metadata !DIExpression()) #25, !dbg !17892
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !17895, !srcloc !17113
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !17896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17897 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17899, metadata !DIExpression()), !dbg !17901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17902
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17904, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17906
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17906
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17902
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17907
  br i1 %3, label %5, label %4, !dbg !17908

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17909
  unreachable, !dbg !17909

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17904
  call void @llvm.dbg.value(metadata i32 %6, metadata !17071, metadata !DIExpression()) #25, !dbg !17906
  call void @llvm.dbg.value(metadata i32 %6, metadata !17065, metadata !DIExpression()) #25, !dbg !17902
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17910
  call void @llvm.dbg.value(metadata i32 %6, metadata !17900, metadata !DIExpression()), !dbg !17901
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !17911
  br i1 %7, label %12, label %8, !dbg !17913

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17914
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17914
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17917
  br i1 %9, label %11, label %10, !dbg !17918

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17919
  unreachable, !dbg !17919

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !17093, metadata !DIExpression()) #25, !dbg !17914
  call void @llvm.dbg.value(metadata i32 %6, metadata !17107, metadata !DIExpression()) #25, !dbg !17920
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17922, !srcloc !17113
  br label %14, !dbg !17923

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !17924
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17925
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17926
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !17926
  br label %14, !dbg !17927

14:                                               ; preds = %12, %11
  ret void, !dbg !17927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17930, metadata !DIExpression()), !dbg !17931
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17932
  %3 = load i8, i8* %2, align 1, !dbg !17932
  %4 = and i8 %3, 16, !dbg !17933
  %5 = icmp ne i8 %4, 0, !dbg !17934
  ret i1 %5, !dbg !17935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17938, metadata !DIExpression()), !dbg !17939
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17940
  %3 = load i8, i8* %2, align 1, !dbg !17941
  %4 = and i8 %3, -17, !dbg !17941
  store i8 %4, i8* %2, align 1, !dbg !17941
  ret void, !dbg !17942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17943 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17953, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17951, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17952, metadata !DIExpression()), !dbg !17957
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17958
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !17958
  br i1 %5, label %9, label %6, !dbg !17958

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #27, !dbg !17958
  br i1 %7, label %9, label %8, !dbg !17961

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.372, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 773) #26, !dbg !17962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 773) #26, !dbg !17962
  unreachable, !dbg !17962

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !17954, metadata !DIExpression()), !dbg !17964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !17965
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17967, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17969
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !17969
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17965
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17970
  br i1 %11, label %13, label %12, !dbg !17971

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17972
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !17972
  unreachable, !dbg !17972

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !17969
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !17965
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17973
  call void @llvm.dbg.value(metadata i32 undef, metadata !17956, metadata !DIExpression()), !dbg !17964
  call void @llvm.dbg.value(metadata i32 undef, metadata !17954, metadata !DIExpression()), !dbg !17964
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !17974
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !17977
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17979
  br i1 %14, label %16, label %15, !dbg !17980

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !17981
  unreachable, !dbg !17981

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !17967
  call void @llvm.dbg.value(metadata i32 %17, metadata !17071, metadata !DIExpression()) #25, !dbg !17969
  call void @llvm.dbg.value(metadata i32 %17, metadata !17065, metadata !DIExpression()) #25, !dbg !17965
  call void @llvm.dbg.value(metadata i32 %17, metadata !17956, metadata !DIExpression()), !dbg !17964
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !17977
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !17982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !17984, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !17954, metadata !DIExpression()), !dbg !17964
  call void @llvm.dbg.value(metadata i32 undef, metadata !17954, metadata !DIExpression()), !dbg !17964
  ret void, !dbg !17985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17986 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17988, metadata !DIExpression()), !dbg !17989
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17990
  %3 = load i8, i8* %2, align 1, !dbg !17990
  %4 = and i8 %3, 1, !dbg !17991
  %5 = icmp ne i8 %4, 0, !dbg !17992
  ret i1 %5, !dbg !17993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !17994 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17998, metadata !DIExpression()), !dbg !17999
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17996, metadata !DIExpression()), !dbg !17999
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17997, metadata !DIExpression()), !dbg !17999
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !18000
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !18001
  ret void, !dbg !18002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !18003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18007, metadata !DIExpression()), !dbg !18009
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !18008, metadata !DIExpression()), !dbg !18009
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !18010
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !18011
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !18012
  br i1 %3, label %24, label %4, !dbg !18014

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18015
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !18017
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !18018
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !17282, metadata !DIExpression()) #25, !dbg !18019
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17288, metadata !DIExpression()) #25, !dbg !18019
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !18021
  br i1 %7, label %8, label %9, !dbg !18022

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !18023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !18023
  unreachable, !dbg !18023

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef nonnull %6) #26, !dbg !18024
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !17289, metadata !DIExpression()) #25, !dbg !18019
  %11 = icmp eq %struct._dnode* %10, null, !dbg !18025
  br i1 %11, label %22, label %12, !dbg !18024

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !17289, metadata !DIExpression()) #25, !dbg !18019
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !18026
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !17289, metadata !DIExpression()) #25, !dbg !18019
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !18027
  %16 = icmp sgt i32 %15, 0, !dbg !18028
  br i1 %16, label %17, label %19, !dbg !18029

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18030
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !18031
  br label %24, !dbg !18032

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !18025
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !17289, metadata !DIExpression()) #25, !dbg !18019
  %21 = icmp eq %struct._dnode* %20, null, !dbg !18025
  br i1 %21, label %22, label %12, !dbg !18024, !llvm.loop !18033

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18035
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !18036
  br label %24, !dbg !18037

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !18038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !18039 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !18044, metadata !DIExpression()), !dbg !18045
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18043, metadata !DIExpression()), !dbg !18045
  %4 = icmp eq i64 %3, -1, !dbg !18046
  br i1 %4, label %6, label %5, !dbg !18048

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.373(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !18049
  br label %6, !dbg !18051

6:                                                ; preds = %5, %2
  ret void, !dbg !18052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.373(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !18053 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18056, metadata !DIExpression()), !dbg !18057
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18055, metadata !DIExpression()), !dbg !18057
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !18058
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !18059
  ret void, !dbg !18060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !18061 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18063, metadata !DIExpression()), !dbg !18071
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !18072
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !18072
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !18064, metadata !DIExpression()), !dbg !18071
  call void @llvm.dbg.value(metadata i32 0, metadata !18065, metadata !DIExpression()), !dbg !18073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18074
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18076, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18078
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18078
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18074
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18079
  br i1 %5, label %7, label %6, !dbg !18080

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18081
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18081
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18081
  unreachable, !dbg !18081

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18078
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18074
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !18067, metadata !DIExpression()), !dbg !18073
  call void @llvm.dbg.value(metadata i32 undef, metadata !18065, metadata !DIExpression()), !dbg !18073
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !18083
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !18084
  %10 = load i8, i8* %9, align 1, !dbg !18084
  %11 = and i8 %10, 40, !dbg !18085
  %12 = icmp eq i8 %11, 0, !dbg !18085
  call void @llvm.dbg.value(metadata i1 %12, metadata !18068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18086
  br i1 %12, label %13, label %20, !dbg !18087

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !18088
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !18088
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !18088
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !18092
  br i1 %17, label %19, label %18, !dbg !18093

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !18094
  br label %19, !dbg !18096

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.369(%struct.k_thread* noundef nonnull %3) #27, !dbg !18097
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !18098
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !18099
  br label %20, !dbg !18100

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18101
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18103
  br i1 %21, label %23, label %22, !dbg !18104

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18105
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18105
  unreachable, !dbg !18105

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !18076
  call void @llvm.dbg.value(metadata i32 %24, metadata !17071, metadata !DIExpression()) #25, !dbg !18078
  call void @llvm.dbg.value(metadata i32 %24, metadata !17065, metadata !DIExpression()) #25, !dbg !18074
  call void @llvm.dbg.value(metadata i32 %24, metadata !18067, metadata !DIExpression()), !dbg !18073
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !18108, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !18065, metadata !DIExpression()), !dbg !18073
  call void @llvm.dbg.value(metadata i32 undef, metadata !18065, metadata !DIExpression()), !dbg !18073
  ret void, !dbg !18109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18110 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18112, metadata !DIExpression()), !dbg !18113
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #27, !dbg !18114
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !18115
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !18116
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18117
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !18118
  ret void, !dbg !18119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !18120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18124, metadata !DIExpression()), !dbg !18125
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18126
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !18126
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !18126
  br i1 %4, label %5, label %6, !dbg !18129

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 726) #26, !dbg !18130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 726) #26, !dbg !18130
  unreachable, !dbg !18130

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !18132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !18133 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18135, metadata !DIExpression()), !dbg !18136
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18137
  %3 = load i8, i8* %2, align 1, !dbg !18138
  %4 = and i8 %3, -3, !dbg !18138
  store i8 %4, i8* %2, align 1, !dbg !18138
  ret void, !dbg !18139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18142, metadata !DIExpression()), !dbg !18143
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !18144
  br i1 %2, label %3, label %7, !dbg !18146

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17251, metadata !DIExpression()) #25, !dbg !18147
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18150
  %5 = load i8, i8* %4, align 1, !dbg !18151
  %6 = and i8 %5, 127, !dbg !18151
  store i8 %6, i8* %4, align 1, !dbg !18151
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17259, metadata !DIExpression()) #25, !dbg !18152
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !18154
  br label %7, !dbg !18155

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18156
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !18157
  %10 = zext i1 %9 to i32, !dbg !18157
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !18158
  ret void, !dbg !18159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !18160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18162, metadata !DIExpression()), !dbg !18163
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18164
  %3 = load i8, i8* %2, align 1, !dbg !18165
  %4 = or i8 %3, 2, !dbg !18165
  store i8 %4, i8* %2, align 1, !dbg !18165
  ret void, !dbg !18166
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #24 !dbg !18167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18169, metadata !DIExpression()), !dbg !18173
  call void @llvm.dbg.value(metadata i32 0, metadata !18170, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18175
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18177, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18175
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18180
  br i1 %3, label %5, label %4, !dbg !18181

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18182
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18182
  unreachable, !dbg !18182

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18175
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18183
  call void @llvm.dbg.value(metadata i32 undef, metadata !18172, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata i32 undef, metadata !18170, metadata !DIExpression()), !dbg !18174
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !18184
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18187
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18189
  br i1 %6, label %8, label %7, !dbg !18190

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18191
  unreachable, !dbg !18191

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18177
  call void @llvm.dbg.value(metadata i32 %9, metadata !17071, metadata !DIExpression()) #25, !dbg !18179
  call void @llvm.dbg.value(metadata i32 %9, metadata !17065, metadata !DIExpression()) #25, !dbg !18175
  call void @llvm.dbg.value(metadata i32 %9, metadata !18172, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18187
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18192
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18194, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !18170, metadata !DIExpression()), !dbg !18174
  call void @llvm.dbg.value(metadata i32 undef, metadata !18170, metadata !DIExpression()), !dbg !18174
  ret void, !dbg !18195
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18196 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18202, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i32 %0, metadata !18200, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !18201, metadata !DIExpression()), !dbg !18207
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18208
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !18209
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18210
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !18211
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !18212
  call void @llvm.dbg.value(metadata i32 %6, metadata !18203, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.value(metadata i32 0, metadata !18204, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18214
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18216, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18218
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18218
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18214
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18219
  br i1 %8, label %10, label %9, !dbg !18220

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18221
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18221
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18221
  unreachable, !dbg !18221

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18218
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18214
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18222
  call void @llvm.dbg.value(metadata i32 undef, metadata !18206, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata i32 undef, metadata !18204, metadata !DIExpression()), !dbg !18213
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !18223
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18227
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !18228
  br i1 %13, label %14, label %15, !dbg !18229

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !18230
  br label %15, !dbg !18232

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18233
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18233
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18235
  br i1 %16, label %18, label %17, !dbg !18236

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18237
  unreachable, !dbg !18237

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !18216
  call void @llvm.dbg.value(metadata i32 %19, metadata !17071, metadata !DIExpression()) #25, !dbg !18218
  call void @llvm.dbg.value(metadata i32 %19, metadata !17065, metadata !DIExpression()) #25, !dbg !18214
  call void @llvm.dbg.value(metadata i32 %19, metadata !18206, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18233
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18238
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !18240, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !18204, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata i32 undef, metadata !18204, metadata !DIExpression()), !dbg !18213
  ret i32 %6, !dbg !18241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18242 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18247, metadata !DIExpression()), !dbg !18250
  call void @llvm.dbg.value(metadata i64 undef, metadata !18249, metadata !DIExpression()), !dbg !18250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18246, metadata !DIExpression()), !dbg !18250
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !18248, metadata !DIExpression()), !dbg !18250
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18251
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !18252
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !18253
  br i1 %6, label %7, label %8, !dbg !18256

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.379, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 846) #26, !dbg !18257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 846) #26, !dbg !18257
  unreachable, !dbg !18257

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18259
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18261, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18263
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18263
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18259
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18264
  br i1 %10, label %12, label %11, !dbg !18265

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18266
  unreachable, !dbg !18266

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18263
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18259
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18267
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18268
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !18269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17744, metadata !DIExpression()) #25, !dbg !18270
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !18272
  br i1 %14, label %16, label %15, !dbg !18273

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !18274
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !18274
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !18274
  unreachable, !dbg !18274

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !18275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17740, metadata !DIExpression()) #25, !dbg !18275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17744, metadata !DIExpression()) #25, !dbg !18277
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18279
  br i1 %17, label %19, label %18, !dbg !18280

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !18281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !18281
  unreachable, !dbg !18281

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !17735, metadata !DIExpression()) #25, !dbg !18275
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !18282
  ret i32 %21, !dbg !18283
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18284 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18288, metadata !DIExpression()), !dbg !18293
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18289, metadata !DIExpression()), !dbg !18293
  call void @llvm.dbg.value(metadata i32 0, metadata !18290, metadata !DIExpression()), !dbg !18294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18295
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18297, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18295
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18300
  br i1 %3, label %5, label %4, !dbg !18301

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18302
  unreachable, !dbg !18302

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18295
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18303
  call void @llvm.dbg.value(metadata i32 undef, metadata !18292, metadata !DIExpression()), !dbg !18294
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18289, metadata !DIExpression()), !dbg !18293
  call void @llvm.dbg.value(metadata i32 undef, metadata !18290, metadata !DIExpression()), !dbg !18294
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !18304
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18289, metadata !DIExpression()), !dbg !18293
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !18307
  br i1 %8, label %10, label %9, !dbg !18309

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !18310
  br label %10, !dbg !18312

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18313
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18315
  br i1 %11, label %13, label %12, !dbg !18316

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18317
  unreachable, !dbg !18317

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18297
  call void @llvm.dbg.value(metadata i32 %14, metadata !17071, metadata !DIExpression()) #25, !dbg !18299
  call void @llvm.dbg.value(metadata i32 %14, metadata !17065, metadata !DIExpression()) #25, !dbg !18295
  call void @llvm.dbg.value(metadata i32 %14, metadata !18292, metadata !DIExpression()), !dbg !18294
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18320, !srcloc !17113
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18289, metadata !DIExpression()), !dbg !18293
  call void @llvm.dbg.value(metadata i32 undef, metadata !18290, metadata !DIExpression()), !dbg !18294
  ret %struct.k_thread* %7, !dbg !18321
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18322 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18324, metadata !DIExpression()), !dbg !18329
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18325, metadata !DIExpression()), !dbg !18329
  call void @llvm.dbg.value(metadata i32 0, metadata !18326, metadata !DIExpression()), !dbg !18330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18331
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18333, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18335
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18335
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18331
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18336
  br i1 %3, label %5, label %4, !dbg !18337

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18338
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18338
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18338
  unreachable, !dbg !18338

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18335
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18331
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18339
  call void @llvm.dbg.value(metadata i32 undef, metadata !18328, metadata !DIExpression()), !dbg !18330
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18325, metadata !DIExpression()), !dbg !18329
  call void @llvm.dbg.value(metadata i32 undef, metadata !18326, metadata !DIExpression()), !dbg !18330
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !18340
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18325, metadata !DIExpression()), !dbg !18329
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !18343
  br i1 %8, label %11, label %9, !dbg !18345

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !18346
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !18348
  br label %11, !dbg !18349

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18350
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18352
  br i1 %12, label %14, label %13, !dbg !18353

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18354
  unreachable, !dbg !18354

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !18333
  call void @llvm.dbg.value(metadata i32 %15, metadata !17071, metadata !DIExpression()) #25, !dbg !18335
  call void @llvm.dbg.value(metadata i32 %15, metadata !17065, metadata !DIExpression()) #25, !dbg !18331
  call void @llvm.dbg.value(metadata i32 %15, metadata !18328, metadata !DIExpression()), !dbg !18330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18350
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !18357, !srcloc !17113
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !18325, metadata !DIExpression()), !dbg !18329
  call void @llvm.dbg.value(metadata i32 undef, metadata !18326, metadata !DIExpression()), !dbg !18330
  ret %struct.k_thread* %7, !dbg !18358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18361, metadata !DIExpression()), !dbg !18362
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18169, metadata !DIExpression()) #25, !dbg !18363
  call void @llvm.dbg.value(metadata i32 0, metadata !18170, metadata !DIExpression()) #25, !dbg !18365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18366
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18368, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18370
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18370
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18366
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18371
  br i1 %3, label %5, label %4, !dbg !18372

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18373
  unreachable, !dbg !18373

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18370
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18366
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18374
  call void @llvm.dbg.value(metadata i32 undef, metadata !18172, metadata !DIExpression()) #25, !dbg !18365
  call void @llvm.dbg.value(metadata i32 undef, metadata !18170, metadata !DIExpression()) #25, !dbg !18365
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !18375
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18376
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18378
  br i1 %6, label %8, label %7, !dbg !18379

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18380
  unreachable, !dbg !18380

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18368
  call void @llvm.dbg.value(metadata i32 %9, metadata !17071, metadata !DIExpression()) #25, !dbg !18370
  call void @llvm.dbg.value(metadata i32 %9, metadata !17065, metadata !DIExpression()) #25, !dbg !18366
  call void @llvm.dbg.value(metadata i32 %9, metadata !18172, metadata !DIExpression()) #25, !dbg !18365
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18376
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18383, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !18170, metadata !DIExpression()) #25, !dbg !18365
  call void @llvm.dbg.value(metadata i32 undef, metadata !18170, metadata !DIExpression()) #25, !dbg !18365
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !18384
  ret void, !dbg !18385
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18386 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18388, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata i32 %1, metadata !18389, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata i8 0, metadata !18390, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata i32 0, metadata !18391, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18396
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18398, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18396
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18401
  br i1 %4, label %6, label %5, !dbg !18402

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18403
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18403
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18403
  unreachable, !dbg !18403

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18396
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18404
  call void @llvm.dbg.value(metadata i32 undef, metadata !18393, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i8 poison, metadata !18390, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata i32 undef, metadata !18391, metadata !DIExpression()), !dbg !18395
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !18405
  call void @llvm.dbg.value(metadata i1 %9, metadata !18390, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18394
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !18408

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17251, metadata !DIExpression()) #25, !dbg !18409
  %14 = load i8, i8* %7, align 1, !dbg !18415
  %15 = and i8 %14, 127, !dbg !18415
  store i8 %15, i8* %7, align 1, !dbg !18415
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17259, metadata !DIExpression()) #25, !dbg !18416
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !18418
  store i8 %12, i8* %11, align 2, !dbg !18419
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17268, metadata !DIExpression()) #25, !dbg !18420
  %16 = load i8, i8* %7, align 1, !dbg !18422
  %17 = or i8 %16, -128, !dbg !18422
  store i8 %17, i8* %7, align 1, !dbg !18422
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17275, metadata !DIExpression()) #25, !dbg !18423
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17282, metadata !DIExpression()) #25, !dbg !18425
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17288, metadata !DIExpression()) #25, !dbg !18425
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !18427
  br i1 %18, label %19, label %20, !dbg !18428

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !18429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !18429
  unreachable, !dbg !18429

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18430
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !17289, metadata !DIExpression()) #25, !dbg !18425
  %22 = icmp eq %struct._dnode* %21, null, !dbg !18431
  br i1 %22, label %32, label %23, !dbg !18430

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !17289, metadata !DIExpression()) #25, !dbg !18425
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !18432
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !17289, metadata !DIExpression()) #25, !dbg !18425
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #26, !dbg !18433
  %27 = icmp sgt i32 %26, 0, !dbg !18434
  br i1 %27, label %28, label %29, !dbg !18435

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #26, !dbg !18436
  br label %33, !dbg !18437

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #26, !dbg !18431
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !17289, metadata !DIExpression()) #25, !dbg !18425
  %31 = icmp eq %struct._dnode* %30, null, !dbg !18431
  br i1 %31, label %32, label %23, !dbg !18430, !llvm.loop !18438

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #26, !dbg !18440
  br label %33, !dbg !18441

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18442
  br label %35, !dbg !18443

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !18444
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18446
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18448
  br i1 %36, label %38, label %37, !dbg !18449

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18450
  unreachable, !dbg !18450

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !18398
  call void @llvm.dbg.value(metadata i32 %39, metadata !17071, metadata !DIExpression()) #25, !dbg !18400
  call void @llvm.dbg.value(metadata i32 %39, metadata !17065, metadata !DIExpression()) #25, !dbg !18396
  call void @llvm.dbg.value(metadata i32 %39, metadata !18393, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18451
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !18453, !srcloc !17113
  call void @llvm.dbg.value(metadata i8 poison, metadata !18390, metadata !DIExpression()), !dbg !18394
  call void @llvm.dbg.value(metadata i32 undef, metadata !18391, metadata !DIExpression()), !dbg !18395
  ret i1 %9, !dbg !18454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18455 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18459, metadata !DIExpression()), !dbg !18462
  call void @llvm.dbg.value(metadata i32 %1, metadata !18460, metadata !DIExpression()), !dbg !18462
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !18463
  call void @llvm.dbg.value(metadata i1 %3, metadata !18461, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18462
  br i1 %3, label %4, label %12, !dbg !18464

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18466
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18467
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18467
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18467
  %9 = load i8, i8* %8, align 1, !dbg !18467
  %10 = icmp eq i8 %9, 0, !dbg !18468
  br i1 %10, label %11, label %12, !dbg !18469

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18470
  br label %12, !dbg !18472

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !18473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !18474 {
  call void @llvm.dbg.value(metadata i32 0, metadata !18476, metadata !DIExpression()), !dbg !18479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18480
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18482, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18480
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18485
  br i1 %2, label %4, label %3, !dbg !18486

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18487
  unreachable, !dbg !18487

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18480
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18488
  call void @llvm.dbg.value(metadata i32 undef, metadata !18478, metadata !DIExpression()), !dbg !18479
  call void @llvm.dbg.value(metadata i32 undef, metadata !18476, metadata !DIExpression()), !dbg !18479
  tail call fastcc void @z_sched_lock() #27, !dbg !18489
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18492
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18494
  br i1 %5, label %7, label %6, !dbg !18495

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18496
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18496
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18496
  unreachable, !dbg !18496

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !18482
  call void @llvm.dbg.value(metadata i32 %8, metadata !17071, metadata !DIExpression()) #25, !dbg !18484
  call void @llvm.dbg.value(metadata i32 %8, metadata !17065, metadata !DIExpression()) #25, !dbg !18480
  call void @llvm.dbg.value(metadata i32 %8, metadata !18478, metadata !DIExpression()), !dbg !18479
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18492
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18497
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !18499, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !18476, metadata !DIExpression()), !dbg !18479
  call void @llvm.dbg.value(metadata i32 undef, metadata !18476, metadata !DIExpression()), !dbg !18479
  ret void, !dbg !18500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !18501 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18502, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %1, metadata !17787, metadata !DIExpression()) #25, !dbg !18507
  %2 = icmp eq i32 %1, 0, !dbg !18508
  br i1 %2, label %4, label %3, !dbg !18509

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.387, i32 0, i32 0), i32 noundef 253) #26, !dbg !18510
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18510
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.387, i32 0, i32 0), i32 noundef 253) #26, !dbg !18510
  unreachable, !dbg !18510

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18512
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18512
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18512
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18512
  %9 = load i8, i8* %8, align 1, !dbg !18512
  %10 = icmp eq i8 %9, 1, !dbg !18512
  br i1 %10, label %11, label %12, !dbg !18515

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.387, i32 0, i32 0), i32 noundef 254) #26, !dbg !18516
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18516
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.387, i32 0, i32 0), i32 noundef 254) #26, !dbg !18516
  unreachable, !dbg !18516

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !18518
  store i8 %13, i8* %8, align 1, !dbg !18518
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18519, !srcloc !18521
  ret void, !dbg !18522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !18523 {
  call void @llvm.dbg.value(metadata i32 0, metadata !18525, metadata !DIExpression()), !dbg !18528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18529
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18531, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18533
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18533
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18529
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18534
  br i1 %2, label %4, label %3, !dbg !18535

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18536
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18536
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18536
  unreachable, !dbg !18536

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18533
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18529
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18537
  call void @llvm.dbg.value(metadata i32 undef, metadata !18527, metadata !DIExpression()), !dbg !18528
  call void @llvm.dbg.value(metadata i32 undef, metadata !18525, metadata !DIExpression()), !dbg !18528
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18538
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18538
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18538
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18538
  %9 = load i8, i8* %8, align 1, !dbg !18538
  %10 = icmp eq i8 %9, 0, !dbg !18538
  br i1 %10, label %11, label %12, !dbg !18543

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 999) #26, !dbg !18544
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 999) #26, !dbg !18544
  unreachable, !dbg !18544

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18546, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %13, metadata !17787, metadata !DIExpression()) #25, !dbg !18551
  %14 = icmp eq i32 %13, 0, !dbg !18552
  br i1 %14, label %16, label %15, !dbg !18553

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1000) #26, !dbg !18554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1000) #26, !dbg !18554
  unreachable, !dbg !18554

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18556
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !18557
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !18557
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !18557
  %21 = load i8, i8* %20, align 1, !dbg !18558
  %22 = add i8 %21, 1, !dbg !18558
  store i8 %22, i8* %20, align 1, !dbg !18558
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !18559
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !18560
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18562
  br i1 %23, label %25, label %24, !dbg !18563

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !18564
  unreachable, !dbg !18564

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !18531
  call void @llvm.dbg.value(metadata i32 %26, metadata !17071, metadata !DIExpression()) #25, !dbg !18533
  call void @llvm.dbg.value(metadata i32 %26, metadata !17065, metadata !DIExpression()) #25, !dbg !18529
  call void @llvm.dbg.value(metadata i32 %26, metadata !18527, metadata !DIExpression()), !dbg !18528
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !18560
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !18565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !18567, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !18525, metadata !DIExpression()), !dbg !18528
  call void @llvm.dbg.value(metadata i32 undef, metadata !18525, metadata !DIExpression()), !dbg !18528
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18568
  ret void, !dbg !18569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !18570 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !18571
  ret %struct.k_thread* %1, !dbg !18572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !18573 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !18577, metadata !DIExpression()), !dbg !18582
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !18578, metadata !DIExpression()), !dbg !18582
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !18583
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !18579, metadata !DIExpression()), !dbg !18582
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !18584
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18580, metadata !DIExpression()), !dbg !18582
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !18585
  call void @llvm.dbg.value(metadata i32 %5, metadata !18581, metadata !DIExpression()), !dbg !18582
  %6 = icmp sgt i32 %5, 0, !dbg !18586
  br i1 %6, label %17, label %7, !dbg !18588

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !18589
  br i1 %8, label %17, label %9, !dbg !18591

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !18592
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !18592
  %12 = load i32, i32* %11, align 8, !dbg !18592
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !18594
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !18594
  %15 = load i32, i32* %14, align 8, !dbg !18594
  %16 = icmp ult i32 %12, %15, !dbg !18595
  br label %17, !dbg !18596

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !18597
  ret i1 %18, !dbg !18598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18599 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18616, metadata !DIExpression()), !dbg !18631
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18617, metadata !DIExpression()), !dbg !18631
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !18632
  br i1 %4, label %5, label %6, !dbg !18635

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1179) #26, !dbg !18636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1179) #26, !dbg !18636
  unreachable, !dbg !18636

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18638
  %8 = load i32, i32* %7, align 4, !dbg !18639
  %9 = add nsw i32 %8, 1, !dbg !18639
  store i32 %9, i32* %7, align 4, !dbg !18639
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !18640
  store i32 %8, i32* %10, align 8, !dbg !18641
  %11 = load i32, i32* %7, align 4, !dbg !18642
  %12 = icmp eq i32 %11, 0, !dbg !18643
  br i1 %12, label %13, label %35, !dbg !18644

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !18645
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !18645
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !18619, metadata !DIExpression()), !dbg !18645
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18645
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !18645
  %17 = load i32, i32* %16, align 4, !dbg !18645
  %18 = shl i32 %17, 2, !dbg !18645
  %19 = alloca i8, i32 %18, align 8, !dbg !18645
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !18645
  store i8* %19, i8** %20, align 4, !dbg !18645
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !18645
  %22 = alloca i8, i32 %17, align 8, !dbg !18645
  store i8* %22, i8** %21, align 4, !dbg !18645
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !18645
  store i32 -1, i32* %23, align 4, !dbg !18645
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !18646
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18628, metadata !DIExpression()), !dbg !18647
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18618, metadata !DIExpression()), !dbg !18631
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !18648
  br i1 %25, label %26, label %27, !dbg !18645

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !18648
  br label %35, !dbg !18649

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !18618, metadata !DIExpression()), !dbg !18631
  %29 = load i32, i32* %7, align 4, !dbg !18650
  %30 = add nsw i32 %29, 1, !dbg !18650
  store i32 %30, i32* %7, align 4, !dbg !18650
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !18652
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !18652
  store i32 %29, i32* %32, align 8, !dbg !18653
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !18646
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18628, metadata !DIExpression()), !dbg !18647
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18618, metadata !DIExpression()), !dbg !18631
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !18648
  br i1 %34, label %26, label %27, !dbg !18645, !llvm.loop !18654

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18656
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18657
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !18658
  ret void, !dbg !18659
}

; Function Attrs: optsize
declare !dbg !18660 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !18665 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18668 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18670, metadata !DIExpression()), !dbg !18672
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18671, metadata !DIExpression()), !dbg !18672
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !18673
  br i1 %3, label %4, label %5, !dbg !18676

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1200) #26, !dbg !18677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1200) #26, !dbg !18677
  unreachable, !dbg !18677

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18679
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18680
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !18681
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !18682
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !18682
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !18684
  br i1 %10, label %11, label %13, !dbg !18685

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18686
  store i32 0, i32* %12, align 4, !dbg !18688
  br label %13, !dbg !18689

13:                                               ; preds = %11, %5
  ret void, !dbg !18690
}

; Function Attrs: optsize
declare !dbg !18691 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !18692 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18696, metadata !DIExpression()), !dbg !18699
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18697, metadata !DIExpression()), !dbg !18699
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18700
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !18701
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !18698, metadata !DIExpression()), !dbg !18699
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18697, metadata !DIExpression()), !dbg !18699
  ret %struct.k_thread* %4, !dbg !18702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !18703 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !18707, metadata !DIExpression()), !dbg !18708
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !18709
  ret %struct.rbnode* %2, !dbg !18710
}

; Function Attrs: optsize
declare !dbg !18711 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !18714 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !18726, metadata !DIExpression()), !dbg !18730
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !18731
  %3 = load i32, i32* %2, align 4, !dbg !18731
  %4 = icmp eq i32 %3, 0, !dbg !18733
  br i1 %4, label %10, label %5, !dbg !18734

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18727, metadata !DIExpression()), !dbg !18730
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !18735, !range !5541
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !18736
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !18728, metadata !DIExpression()), !dbg !18730
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef %7) #27, !dbg !18737
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !18729, metadata !DIExpression()), !dbg !18730
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18727, metadata !DIExpression()), !dbg !18730
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !18730
  ret %struct.k_thread* %11, !dbg !18738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18739 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18743, metadata !DIExpression()), !dbg !18746
  call void @llvm.dbg.value(metadata i32 0, metadata !18744, metadata !DIExpression()), !dbg !18746
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.392(%struct._wait_q_t* noundef %0) #27, !dbg !18747
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18745, metadata !DIExpression()), !dbg !18746
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18748
  br i1 %3, label %8, label %4, !dbg !18749

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18750
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18752
  call void @llvm.dbg.value(metadata i32 1, metadata !18744, metadata !DIExpression()), !dbg !18746
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.392(%struct._wait_q_t* noundef %0) #27, !dbg !18747
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18745, metadata !DIExpression()), !dbg !18746
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18748
  br i1 %7, label %8, label %4, !dbg !18749, !llvm.loop !18753

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !18746
  ret i32 %9, !dbg !18755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.392(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !18756 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18758, metadata !DIExpression()), !dbg !18759
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18760
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef %2) #27, !dbg !18761
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !18762
  ret %struct.k_thread* %4, !dbg !18763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !18764 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !18773, metadata !DIExpression()), !dbg !18774
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !18775
  tail call fastcc void @sys_dlist_init.393(%struct._dnode* noundef nonnull %2) #27, !dbg !18776
  ret void, !dbg !18777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.393(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !18778 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18782, metadata !DIExpression()), !dbg !18783
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18784
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18785
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18786
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18787
  ret void, !dbg !18788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !18789 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !18790
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !18791
  ret void, !dbg !18792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !18793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18798, metadata !DIExpression()), !dbg !18799
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !18800
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !18800
  %4 = load i8, i8* %3, align 2, !dbg !18800
  %5 = sext i8 %4 to i32, !dbg !18801
  ret i32 %5, !dbg !18802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18807, metadata !DIExpression()), !dbg !18810
  call void @llvm.dbg.value(metadata i32 %1, metadata !18808, metadata !DIExpression()), !dbg !18810
  %3 = add i32 %1, 16, !dbg !18811
  %4 = icmp ult i32 %3, 31, !dbg !18811
  br i1 %4, label %6, label %5, !dbg !18811

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.396, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1331) #26, !dbg !18815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.397, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #26, !dbg !18815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1331) #26, !dbg !18815
  unreachable, !dbg !18815

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18817, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %7, metadata !17787, metadata !DIExpression()) #25, !dbg !18822
  %8 = icmp eq i32 %7, 0, !dbg !18823
  br i1 %8, label %10, label %9, !dbg !18824

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1332) #26, !dbg !18825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1332) #26, !dbg !18825
  unreachable, !dbg !18825

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18809, metadata !DIExpression()), !dbg !18810
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !18827
  ret void, !dbg !18828
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !18829 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !18830
  br i1 %1, label %8, label %2, !dbg !18831

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !18832
  br i1 %3, label %8, label %4, !dbg !18833

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18834
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !18835
  %7 = xor i1 %6, true, !dbg !18833
  br label %8, !dbg !18833

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !18836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !18837 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !18838, !range !8289
  %2 = icmp eq i8 %1, 0, !dbg !18838
  ret i1 %2, !dbg !18839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !18840 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18843, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %1, metadata !17787, metadata !DIExpression()) #25, !dbg !18848
  %2 = icmp eq i32 %1, 0, !dbg !18849
  br i1 %2, label %4, label %3, !dbg !18850

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1392) #26, !dbg !18851
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18851
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1392) #26, !dbg !18851
  unreachable, !dbg !18851

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18853
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18855, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18857
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18857
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18853
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18858
  br i1 %6, label %8, label %7, !dbg !18859

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18860
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18860
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18860
  unreachable, !dbg !18860

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18857
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18853
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18861
  call void @llvm.dbg.value(metadata i32 undef, metadata !18842, metadata !DIExpression()), !dbg !18862
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18863
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17251, metadata !DIExpression()) #25, !dbg !18866
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !18868
  %11 = load i8, i8* %10, align 1, !dbg !18869
  %12 = and i8 %11, 127, !dbg !18869
  store i8 %12, i8* %10, align 1, !dbg !18869
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17259, metadata !DIExpression()) #25, !dbg !18870
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #26, !dbg !18872
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18873
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17268, metadata !DIExpression()) #25, !dbg !18874
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !18876
  %15 = load i8, i8* %14, align 1, !dbg !18877
  %16 = or i8 %15, -128, !dbg !18877
  store i8 %16, i8* %14, align 1, !dbg !18877
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17275, metadata !DIExpression()) #25, !dbg !18878
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !17282, metadata !DIExpression()) #25, !dbg !18880
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17288, metadata !DIExpression()) #25, !dbg !18880
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #26, !dbg !18882
  br i1 %17, label %18, label %19, !dbg !18883

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !18884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 186) #26, !dbg !18884
  unreachable, !dbg !18884

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18885
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !17289, metadata !DIExpression()) #25, !dbg !18880
  %21 = icmp eq %struct._dnode* %20, null, !dbg !18886
  br i1 %21, label %32, label %22, !dbg !18885

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !17289, metadata !DIExpression()) #25, !dbg !18880
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !18887
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !17289, metadata !DIExpression()) #25, !dbg !18880
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #26, !dbg !18888
  %26 = icmp sgt i32 %25, 0, !dbg !18889
  br i1 %26, label %27, label %29, !dbg !18890

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18891
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #26, !dbg !18892
  br label %34, !dbg !18893

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #26, !dbg !18886
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !17289, metadata !DIExpression()) #25, !dbg !18880
  %31 = icmp eq %struct._dnode* %30, null, !dbg !18886
  br i1 %31, label %32, label %22, !dbg !18885, !llvm.loop !18894

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18896
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #26, !dbg !18897
  br label %34, !dbg !18898

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18899
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !18900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17740, metadata !DIExpression()) #25, !dbg !18900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17744, metadata !DIExpression()) #25, !dbg !18902
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18904
  br i1 %35, label %37, label %36, !dbg !18905

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !18906
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !18906
  unreachable, !dbg !18906

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !18855
  call void @llvm.dbg.value(metadata i32 %38, metadata !17071, metadata !DIExpression()) #25, !dbg !18857
  call void @llvm.dbg.value(metadata i32 %38, metadata !17065, metadata !DIExpression()) #25, !dbg !18853
  call void @llvm.dbg.value(metadata i32 %38, metadata !18842, metadata !DIExpression()), !dbg !18862
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !18900
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #26, !dbg !18907
  ret void, !dbg !18908
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !18909 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18913, metadata !DIExpression()), !dbg !18916
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18917, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %3, metadata !17787, metadata !DIExpression()) #25, !dbg !18922
  %4 = icmp eq i32 %3, 0, !dbg !18923
  br i1 %4, label %6, label %5, !dbg !18924

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1463) #26, !dbg !18925
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18925
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1463) #26, !dbg !18925
  unreachable, !dbg !18925

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !18927
  br i1 %7, label %8, label %10, !dbg !18929

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18930
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #27, !dbg !18932
  br label %15, !dbg !18933

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !18914, metadata !DIExpression()), !dbg !18916
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !18934
  %12 = sext i32 %11 to i64, !dbg !18934
  call void @llvm.dbg.value(metadata i64 %12, metadata !18914, metadata !DIExpression()), !dbg !18916
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #27, !dbg !18935
  %14 = trunc i64 %13 to i32, !dbg !18935
  call void @llvm.dbg.value(metadata i32 %14, metadata !18915, metadata !DIExpression()), !dbg !18916
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !18916
  ret i32 %16, !dbg !18936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18937 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18941, metadata !DIExpression()), !dbg !18942
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18943, !srcloc !18945
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !18946
  ret void, !dbg !18947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !18948 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18952, metadata !DIExpression()), !dbg !18956
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18957, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %2, metadata !17787, metadata !DIExpression()) #25, !dbg !18962
  %3 = icmp eq i32 %2, 0, !dbg !18963
  br i1 %3, label %5, label %4, !dbg !18964

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1420) #26, !dbg !18965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !18965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1420) #26, !dbg !18965
  unreachable, !dbg !18965

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !18967
  br i1 %6, label %7, label %8, !dbg !18969

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #27, !dbg !18970
  br label %43, !dbg !18972

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !18954, metadata !DIExpression()), !dbg !18956
  %9 = icmp sgt i64 %0, -3, !dbg !18973
  br i1 %9, label %10, label %14, !dbg !18975

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !18976
  %12 = trunc i64 %0 to i32, !dbg !18978
  %13 = add i32 %11, %12, !dbg !18978
  call void @llvm.dbg.value(metadata i32 %13, metadata !18953, metadata !DIExpression()), !dbg !18956
  br label %17, !dbg !18979

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !18980
  %16 = sub i32 -2, %15, !dbg !18980
  call void @llvm.dbg.value(metadata i32 %16, metadata !18953, metadata !DIExpression()), !dbg !18956
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !18982
  call void @llvm.dbg.value(metadata i32 %18, metadata !18953, metadata !DIExpression()), !dbg !18956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !18983
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18985, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18987
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !18987
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18983
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18988
  br i1 %20, label %22, label %21, !dbg !18989

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18990
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18990
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !18990
  unreachable, !dbg !18990

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !18987
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !18983
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18991
  call void @llvm.dbg.value(metadata i32 undef, metadata !18955, metadata !DIExpression()), !dbg !18956
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18992
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !18993
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #27, !dbg !18994
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18995
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !18996
  tail call fastcc void @z_add_thread_timeout.373(%struct.k_thread* noundef %24, [1 x i64] %25) #27, !dbg !18996
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18997
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #27, !dbg !18998
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !18999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17740, metadata !DIExpression()) #25, !dbg !18999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17744, metadata !DIExpression()) #25, !dbg !19001
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19003
  br i1 %27, label %29, label %28, !dbg !19004

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !19005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !19005
  unreachable, !dbg !19005

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !18985
  call void @llvm.dbg.value(metadata i32 %30, metadata !17071, metadata !DIExpression()) #25, !dbg !18987
  call void @llvm.dbg.value(metadata i32 %30, metadata !17065, metadata !DIExpression()) #25, !dbg !18983
  call void @llvm.dbg.value(metadata i32 %30, metadata !18955, metadata !DIExpression()), !dbg !18956
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !18999
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !19006
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19007
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #27, !dbg !19007
  br i1 %33, label %34, label %35, !dbg !19010

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1448) #26, !dbg !19011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.360, i32 0, i32 0)) #26, !dbg !19011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1448) #26, !dbg !19011
  unreachable, !dbg !19011

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !19013
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !19014
  %38 = zext i32 %37 to i64, !dbg !19014
  %39 = sub nsw i64 %36, %38, !dbg !19015
  call void @llvm.dbg.value(metadata i64 %39, metadata !18952, metadata !DIExpression()), !dbg !18956
  %40 = icmp sgt i64 %39, 0, !dbg !19016
  %41 = select i1 %40, i64 %39, i64 0, !dbg !19016
  %42 = trunc i64 %41 to i32, !dbg !19016
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !18956
  ret i32 %44, !dbg !19017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !19018 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19020, metadata !DIExpression()), !dbg !19021
  call void @llvm.dbg.value(metadata i64 %0, metadata !17119, metadata !DIExpression()), !dbg !19022
  call void @llvm.dbg.value(metadata i32 10000, metadata !17122, metadata !DIExpression()), !dbg !19022
  call void @llvm.dbg.value(metadata i32 1000, metadata !17123, metadata !DIExpression()), !dbg !19022
  call void @llvm.dbg.value(metadata i8 1, metadata !17124, metadata !DIExpression()), !dbg !19022
  call void @llvm.dbg.value(metadata i1 false, metadata !17125, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19022
  call void @llvm.dbg.value(metadata i1 false, metadata !17126, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19022
  call void @llvm.dbg.value(metadata i8 0, metadata !17127, metadata !DIExpression()), !dbg !19022
  call void @llvm.dbg.value(metadata i1 false, metadata !17128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19022
  call void @llvm.dbg.value(metadata i1 true, metadata !17129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19022
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !19022
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !19022
  call void @llvm.dbg.value(metadata i64 %0, metadata !17119, metadata !DIExpression()), !dbg !19022
  %2 = udiv i64 %0, 10, !dbg !19024
  ret i64 %2, !dbg !19028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !19029 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !19030, !srcloc !19032
  tail call void @z_impl_k_yield() #27, !dbg !19033
  ret void, !dbg !19034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !19035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19039, metadata !DIExpression()), !dbg !19041
  %2 = sext i32 %0 to i64, !dbg !19042
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !19043
  call void @llvm.dbg.value(metadata i64 %3, metadata !19040, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19041
  %4 = shl i64 %3, 32, !dbg !19044
  %5 = ashr exact i64 %4, 32, !dbg !19044
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !19045
  call void @llvm.dbg.value(metadata i32 %6, metadata !19040, metadata !DIExpression()), !dbg !19041
  %7 = sext i32 %6 to i64, !dbg !19046
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !19047
  %9 = trunc i64 %8 to i32, !dbg !19047
  ret i32 %9, !dbg !19048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !19049 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19051, metadata !DIExpression()), !dbg !19052
  call void @llvm.dbg.value(metadata i64 %0, metadata !17119, metadata !DIExpression()), !dbg !19053
  call void @llvm.dbg.value(metadata i32 1000000, metadata !17122, metadata !DIExpression()), !dbg !19053
  call void @llvm.dbg.value(metadata i32 10000, metadata !17123, metadata !DIExpression()), !dbg !19053
  call void @llvm.dbg.value(metadata i8 1, metadata !17124, metadata !DIExpression()), !dbg !19053
  call void @llvm.dbg.value(metadata i1 false, metadata !17125, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19053
  call void @llvm.dbg.value(metadata i1 true, metadata !17126, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19053
  call void @llvm.dbg.value(metadata i8 0, metadata !17127, metadata !DIExpression()), !dbg !19053
  call void @llvm.dbg.value(metadata i1 false, metadata !17128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19053
  call void @llvm.dbg.value(metadata i1 true, metadata !17129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19053
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !19053
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !19053
  %2 = add i64 %0, 99, !dbg !19055
  call void @llvm.dbg.value(metadata i64 %2, metadata !17119, metadata !DIExpression()), !dbg !19053
  %3 = udiv i64 %2, 100, !dbg !19056
  ret i64 %3, !dbg !19057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !19058 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19060, metadata !DIExpression()), !dbg !19061
  call void @llvm.dbg.value(metadata i64 %0, metadata !17119, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.value(metadata i32 10000, metadata !17122, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.value(metadata i32 1000000, metadata !17123, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.value(metadata i8 1, metadata !17124, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.value(metadata i1 false, metadata !17125, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19062
  call void @llvm.dbg.value(metadata i1 false, metadata !17126, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19062
  call void @llvm.dbg.value(metadata i8 0, metadata !17127, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.value(metadata i1 true, metadata !17128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19062
  call void @llvm.dbg.value(metadata i1 false, metadata !17129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19062
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.value(metadata i64 0, metadata !17130, metadata !DIExpression()), !dbg !19062
  %2 = mul i64 %0, 100, !dbg !19064
  ret i64 %2, !dbg !19066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !19067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19069, metadata !DIExpression()), !dbg !19070
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !19071
  br i1 %2, label %14, label %3, !dbg !19073

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !19074
  %5 = icmp slt i32 %4, 0, !dbg !19076
  br i1 %5, label %6, label %10, !dbg !19077

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19078
  %8 = load i8, i8* %7, align 1, !dbg !19078
  %9 = icmp eq i8 %8, 16, !dbg !19081
  br i1 %9, label %10, label %14, !dbg !19082

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !19083
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !19084
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19085, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %11, metadata !17787, metadata !DIExpression()) #25, !dbg !19089
  %12 = icmp eq i32 %11, 0, !dbg !19090
  br i1 %12, label %13, label %14, !dbg !19091

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !19092
  br label %14, !dbg !19094

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !19095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !19096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19098, metadata !DIExpression()), !dbg !19099
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19100
  %3 = load i8, i8* %2, align 1, !dbg !19100
  %4 = and i8 %3, 2, !dbg !19101
  %5 = icmp ne i8 %4, 0, !dbg !19102
  ret i1 %5, !dbg !19103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !19104 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19109
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !19108, metadata !DIExpression()), !dbg !19110
  ret %struct.k_thread* %1, !dbg !19111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !19112 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19113, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %1, metadata !17787, metadata !DIExpression()) #25, !dbg !19116
  %2 = icmp eq i32 %1, 0, !dbg !19117
  br i1 %2, label %3, label %8, !dbg !19118

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19119
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !19120
  %6 = icmp ne i32 %5, 0, !dbg !19118
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !19121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !19122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19124, metadata !DIExpression()), !dbg !19126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !19127
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19129, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !19131
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !19131
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !19127
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19132
  br i1 %3, label %5, label %4, !dbg !19133

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !19134
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19134
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !19134
  unreachable, !dbg !19134

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !19129
  call void @llvm.dbg.value(metadata i32 %6, metadata !17071, metadata !DIExpression()) #25, !dbg !19131
  call void @llvm.dbg.value(metadata i32 %6, metadata !17065, metadata !DIExpression()) #25, !dbg !19127
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19135
  call void @llvm.dbg.value(metadata i32 %6, metadata !19125, metadata !DIExpression()), !dbg !19126
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !19136
  %8 = load i8, i8* %7, align 4, !dbg !19136
  %9 = and i8 %8, 1, !dbg !19138
  %10 = icmp eq i8 %9, 0, !dbg !19139
  br i1 %10, label %15, label %11, !dbg !19140

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !19141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !19141
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19144
  br i1 %12, label %14, label %13, !dbg !19145

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19146
  unreachable, !dbg !19146

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !17093, metadata !DIExpression()) #25, !dbg !19141
  call void @llvm.dbg.value(metadata i32 %6, metadata !17107, metadata !DIExpression()) #25, !dbg !19147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !19149, !srcloc !17113
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.403, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1731) #26, !dbg !19150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.404, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !19150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1731) #26, !dbg !19150
  unreachable, !dbg !19150

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19154
  %17 = load i8, i8* %16, align 1, !dbg !19154
  %18 = and i8 %17, 8, !dbg !19156
  %19 = icmp eq i8 %18, 0, !dbg !19157
  br i1 %19, label %24, label %20, !dbg !19158

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !19159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !19159
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19162
  br i1 %21, label %23, label %22, !dbg !19163

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19164
  unreachable, !dbg !19164

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !17093, metadata !DIExpression()) #25, !dbg !19159
  call void @llvm.dbg.value(metadata i32 %6, metadata !17107, metadata !DIExpression()) #25, !dbg !19165
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !19167, !srcloc !17113
  br label %39, !dbg !19168

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !19169
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19170
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !19172
  br i1 %26, label %27, label %35, !dbg !19173

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19174, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %28, metadata !17787, metadata !DIExpression()) #25, !dbg !19177
  %29 = icmp eq i32 %28, 0, !dbg !19178
  br i1 %29, label %30, label %35, !dbg !19179

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !19180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17740, metadata !DIExpression()) #25, !dbg !19180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17744, metadata !DIExpression()) #25, !dbg !19183
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19185
  br i1 %31, label %33, label %32, !dbg !19186

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !19187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !19187
  unreachable, !dbg !19187

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !17735, metadata !DIExpression()) #25, !dbg !19180
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !19188
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.403, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1778) #26, !dbg !19189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.405, i32 0, i32 0)) #26, !dbg !19189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1778) #26, !dbg !19189
  unreachable, !dbg !19189

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !19193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !19193
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19195
  br i1 %36, label %38, label %37, !dbg !19196

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19197
  unreachable, !dbg !19197

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !17093, metadata !DIExpression()) #25, !dbg !19193
  call void @llvm.dbg.value(metadata i32 %6, metadata !17107, metadata !DIExpression()) #25, !dbg !19198
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !19200, !srcloc !17113
  br label %39, !dbg !19201

39:                                               ; preds = %38, %23
  ret void, !dbg !19201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !19202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19204, metadata !DIExpression()), !dbg !19205
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19206
  %3 = load i8, i8* %2, align 1, !dbg !19206
  %4 = and i8 %3, 8, !dbg !19208
  %5 = icmp eq i8 %4, 0, !dbg !19209
  br i1 %5, label %6, label %20, !dbg !19210

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !19211
  %8 = or i8 %7, 8, !dbg !19211
  store i8 %8, i8* %2, align 1, !dbg !19211
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !19213
  br i1 %9, label %10, label %12, !dbg !19215

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17251, metadata !DIExpression()) #25, !dbg !19216
  %11 = and i8 %8, 95, !dbg !19219
  store i8 %11, i8* %2, align 1, !dbg !19219
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17259, metadata !DIExpression()) #25, !dbg !19220
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !19222
  br label %12, !dbg !19223

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !19224
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !19224
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !19226
  br i1 %15, label %17, label %16, !dbg !19227

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !19228
  br label %17, !dbg !19230

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !19231
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !19232
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !19233
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !19234
  br label %20, !dbg !19235

20:                                               ; preds = %17, %1
  ret void, !dbg !19236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !19237 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19241, metadata !DIExpression()), !dbg !19243
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.392(%struct._wait_q_t* noundef %0) #27, !dbg !19244
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !19242, metadata !DIExpression()), !dbg !19243
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !19245
  br i1 %3, label %10, label %4, !dbg !19246

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !19247
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !19249
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !19250, metadata !DIExpression()), !dbg !19256
  call void @llvm.dbg.value(metadata i32 0, metadata !19255, metadata !DIExpression()), !dbg !19256
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !19258
  store i32 0, i32* %7, align 4, !dbg !19259
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !19260
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.392(%struct._wait_q_t* noundef %0) #27, !dbg !19244
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !19242, metadata !DIExpression()), !dbg !19243
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !19245
  br i1 %9, label %10, label %4, !dbg !19246, !llvm.loop !19261

10:                                               ; preds = %4, %1
  ret void, !dbg !19263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !19264 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19269, metadata !DIExpression()), !dbg !19272
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19268, metadata !DIExpression()), !dbg !19272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !19273
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19275, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !19277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !19277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !19273
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19278
  br i1 %4, label %6, label %5, !dbg !19279

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !19280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !19280
  unreachable, !dbg !19280

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !19275
  call void @llvm.dbg.value(metadata i32 %7, metadata !17071, metadata !DIExpression()) #25, !dbg !19277
  call void @llvm.dbg.value(metadata i32 %7, metadata !17065, metadata !DIExpression()) #25, !dbg !19273
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19281
  call void @llvm.dbg.value(metadata i32 %7, metadata !19270, metadata !DIExpression()), !dbg !19272
  call void @llvm.dbg.value(metadata i32 0, metadata !19271, metadata !DIExpression()), !dbg !19272
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19282
  %9 = load i8, i8* %8, align 1, !dbg !19282
  %10 = and i8 %9, 8, !dbg !19284
  %11 = icmp eq i8 %10, 0, !dbg !19285
  br i1 %11, label %12, label %35, !dbg !19286

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !19269, metadata !DIExpression()), !dbg !19272
  %14 = icmp eq i64 %13, 0, !dbg !19287
  br i1 %14, label %35, label %15, !dbg !19289

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19290
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !19292
  br i1 %17, label %35, label %18, !dbg !19293

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !19294
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !19294
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !19295
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !19296
  br i1 %22, label %35, label %23, !dbg !19297

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19298, !srcloc !17791
  call void @llvm.dbg.value(metadata i32 %24, metadata !17787, metadata !DIExpression()) #25, !dbg !19304
  %25 = icmp eq i32 %24, 0, !dbg !19305
  br i1 %25, label %27, label %26, !dbg !19306

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1809) #26, !dbg !19307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.406, i32 0, i32 0)) #26, !dbg !19307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.357, i32 0, i32 0), i32 noundef 1809) #26, !dbg !19307
  unreachable, !dbg !19307

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19309
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !19310
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #27, !dbg !19311
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19312
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #27, !dbg !19313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17735, metadata !DIExpression()) #25, !dbg !19314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17740, metadata !DIExpression()) #25, !dbg !19314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17744, metadata !DIExpression()) #25, !dbg !19316
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19318
  br i1 %31, label %33, label %32, !dbg !19319

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !19320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 225) #26, !dbg !19320
  unreachable, !dbg !19320

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !17735, metadata !DIExpression()) #25, !dbg !19314
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !19321
  call void @llvm.dbg.value(metadata i32 %34, metadata !19271, metadata !DIExpression()), !dbg !19272
  br label %40, !dbg !19322

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !19323
  call void @llvm.dbg.value(metadata i32 %36, metadata !19271, metadata !DIExpression()), !dbg !19272
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !19324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !19324
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19326
  br i1 %37, label %39, label %38, !dbg !19327

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19328
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19328
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19328
  unreachable, !dbg !19328

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !17093, metadata !DIExpression()) #25, !dbg !19324
  call void @llvm.dbg.value(metadata i32 %7, metadata !17107, metadata !DIExpression()) #25, !dbg !19329
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !19331, !srcloc !17113
  br label %40, !dbg !19332

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !19272
  ret i32 %41, !dbg !19333
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !19334 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19338, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i32 %1, metadata !19339, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i8* %2, metadata !19340, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i8 0, metadata !19342, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i32 0, metadata !19343, metadata !DIExpression()), !dbg !19347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17059, metadata !DIExpression()) #25, !dbg !19348
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19350, !srcloc !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !19352
  call void @llvm.dbg.value(metadata i32 undef, metadata !17072, metadata !DIExpression()) #25, !dbg !19352
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !19348
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19353
  br i1 %5, label %7, label %6, !dbg !19354

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !19355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !19355
  unreachable, !dbg !19355

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !17071, metadata !DIExpression()) #25, !dbg !19352
  call void @llvm.dbg.value(metadata i32 undef, metadata !17065, metadata !DIExpression()) #25, !dbg !19348
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19356
  call void @llvm.dbg.value(metadata i32 undef, metadata !19345, metadata !DIExpression()), !dbg !19347
  call void @llvm.dbg.value(metadata i8 poison, metadata !19342, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i32 undef, metadata !19343, metadata !DIExpression()), !dbg !19347
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #27, !dbg !19357
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19341, metadata !DIExpression()), !dbg !19346
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !19360
  br i1 %10, label %15, label %11, !dbg !19362

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19363, metadata !DIExpression()), !dbg !19370
  call void @llvm.dbg.value(metadata i32 %1, metadata !19368, metadata !DIExpression()), !dbg !19370
  call void @llvm.dbg.value(metadata i8* %2, metadata !19369, metadata !DIExpression()), !dbg !19370
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19250, metadata !DIExpression()), !dbg !19373
  call void @llvm.dbg.value(metadata i32 %1, metadata !19255, metadata !DIExpression()), !dbg !19373
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !19375
  store i32 %1, i32* %12, align 4, !dbg !19376
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !19377
  store i8* %2, i8** %13, align 4, !dbg !19378
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !19379
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !19380
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #27, !dbg !19381
  call void @llvm.dbg.value(metadata i8 1, metadata !19342, metadata !DIExpression()), !dbg !19346
  br label %15, !dbg !19382

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !19342, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !19383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17098, metadata !DIExpression()) #25, !dbg !19383
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19385
  br i1 %16, label %18, label %17, !dbg !19386

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !19387
  unreachable, !dbg !19387

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !19346
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !19350
  call void @llvm.dbg.value(metadata i32 %20, metadata !17071, metadata !DIExpression()) #25, !dbg !19352
  call void @llvm.dbg.value(metadata i32 %20, metadata !17065, metadata !DIExpression()) #25, !dbg !19348
  call void @llvm.dbg.value(metadata i32 %20, metadata !19345, metadata !DIExpression()), !dbg !19347
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()) #25, !dbg !19383
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !19388
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !19390, !srcloc !17113
  call void @llvm.dbg.value(metadata i8 poison, metadata !19342, metadata !DIExpression()), !dbg !19346
  call void @llvm.dbg.value(metadata i32 undef, metadata !19343, metadata !DIExpression()), !dbg !19347
  ret i1 %19, !dbg !19391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !19392 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !19398, metadata !DIExpression()), !dbg !19403
  call void @llvm.dbg.value(metadata i64 undef, metadata !19400, metadata !DIExpression()), !dbg !19403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !19397, metadata !DIExpression()), !dbg !19403
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !19399, metadata !DIExpression()), !dbg !19403
  call void @llvm.dbg.value(metadata i8** %4, metadata !19401, metadata !DIExpression()), !dbg !19403
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !19404
  call void @llvm.dbg.value(metadata i32 %6, metadata !19402, metadata !DIExpression()), !dbg !19403
  %7 = icmp eq i8** %4, null, !dbg !19405
  br i1 %7, label %12, label %8, !dbg !19407

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19408
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !19410
  %11 = load i8*, i8** %10, align 4, !dbg !19410
  store i8* %11, i8** %4, align 4, !dbg !19411
  br label %12, !dbg !19412

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !19413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !19414 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !19416
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !19417
  ret void, !dbg !19418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19419 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !19429, metadata !DIExpression()), !dbg !19446
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19427, metadata !DIExpression()), !dbg !19446
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !19428, metadata !DIExpression()), !dbg !19446
  %5 = icmp eq i64 %4, -1, !dbg !19447
  br i1 %5, label %63, label %6, !dbg !19449

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19450
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.411(%struct._dnode* noundef %7) #27, !dbg !19450
  br i1 %8, label %9, label %10, !dbg !19453

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.413, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.414, i32 0, i32 0), i32 noundef 99) #26, !dbg !19454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.415, i32 0, i32 0)) #26, !dbg !19454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.414, i32 0, i32 0), i32 noundef 99) #26, !dbg !19454
  unreachable, !dbg !19454

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !19456
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !19457
  call void @llvm.dbg.value(metadata i32 0, metadata !19430, metadata !DIExpression()), !dbg !19458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19466
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19468, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19475
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19475
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19466
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19476
  br i1 %13, label %15, label %14, !dbg !19479

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19480
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19480
  unreachable, !dbg !19480

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !19468
  call void @llvm.dbg.value(metadata i32 %16, metadata !19471, metadata !DIExpression()) #25, !dbg !19475
  call void @llvm.dbg.value(metadata i32 %16, metadata !19465, metadata !DIExpression()) #25, !dbg !19466
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19482
  call void @llvm.dbg.value(metadata i32 %16, metadata !19436, metadata !DIExpression()), !dbg !19458
  call void @llvm.dbg.value(metadata i32 undef, metadata !19430, metadata !DIExpression()), !dbg !19458
  %17 = icmp slt i64 %4, -1, !dbg !19483
  br i1 %17, label %18, label %24, !dbg !19484

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !19485
  %20 = add i64 %4, %19, !dbg !19486
  %21 = sub i64 -2, %20, !dbg !19486
  call void @llvm.dbg.value(metadata i64 %21, metadata !19440, metadata !DIExpression()), !dbg !19487
  %22 = icmp sgt i64 %21, 1, !dbg !19488
  %23 = select i1 %22, i64 %21, i64 1, !dbg !19488
  br label %29, !dbg !19489

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !19490
  %26 = tail call fastcc i32 @elapsed.419() #27, !dbg !19492
  %27 = sext i32 %26 to i64, !dbg !19492
  %28 = add nsw i64 %25, %27, !dbg !19493
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !19494
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19495
  store i64 %30, i64* %31, align 8, !dbg !19496
  %32 = tail call fastcc %struct._timeout* @first() #27, !dbg !19497
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !19437, metadata !DIExpression()), !dbg !19499
  %33 = icmp eq %struct._timeout* %32, null, !dbg !19500
  br i1 %33, label %48, label %34, !dbg !19500

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !19501
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !19437, metadata !DIExpression()), !dbg !19499
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !19505
  %38 = load i64, i64* %37, align 8, !dbg !19505
  %39 = icmp slt i64 %35, %38, !dbg !19506
  br i1 %39, label %40, label %44, !dbg !19507

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !19505
  %42 = sub nsw i64 %38, %35, !dbg !19508
  store i64 %42, i64* %41, align 8, !dbg !19508
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !19510
  tail call fastcc void @sys_dlist_insert.420(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #27, !dbg !19511
  br label %49, !dbg !19512

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !19513
  store i64 %45, i64* %31, align 8, !dbg !19513
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #27, !dbg !19514
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !19437, metadata !DIExpression()), !dbg !19499
  %47 = icmp eq %struct._timeout* %46, null, !dbg !19500
  br i1 %47, label %48, label %34, !dbg !19500, !llvm.loop !19515

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.421(%struct._dnode* noundef nonnull %7) #27, !dbg !19517
  br label %49, !dbg !19520

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #27, !dbg !19521
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !19522
  br i1 %51, label %52, label %59, !dbg !19523

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #27, !dbg !19524
  call void @llvm.dbg.value(metadata i32 %53, metadata !19443, metadata !DIExpression()), !dbg !19525
  %54 = icmp ne i32 %53, 0, !dbg !19526
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !19528
  br i1 %57, label %59, label %58, !dbg !19528

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !19529
  br label %59, !dbg !19531

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !19538
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19540
  br i1 %60, label %62, label %61, !dbg !19543

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19544
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19544
  unreachable, !dbg !19544

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !19532, metadata !DIExpression()) #25, !dbg !19538
  call void @llvm.dbg.value(metadata i32 %16, metadata !19546, metadata !DIExpression()) #25, !dbg !19549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !19551, !srcloc !19552
  call void @llvm.dbg.value(metadata i32 undef, metadata !19430, metadata !DIExpression()), !dbg !19458
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !19553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.411(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !19554 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19560, metadata !DIExpression()), !dbg !19561
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19562
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19562
  %4 = icmp ne %struct._dnode* %3, null, !dbg !19563
  ret i1 %4, !dbg !19564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.419() unnamed_addr #1 !dbg !19565 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !19568
  %2 = icmp eq i32 %1, 0, !dbg !19569
  br i1 %2, label %3, label %5, !dbg !19568

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !19570
  br label %5, !dbg !19568

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !19568
  ret i32 %6, !dbg !19571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !19572 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.426() #27, !dbg !19578
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19576, metadata !DIExpression()), !dbg !19579
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !19580
  ret %struct._timeout* %2, !dbg !19581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.420(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !19582 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19586, metadata !DIExpression()), !dbg !19590
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19587, metadata !DIExpression()), !dbg !19590
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19591
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !19591
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !19588, metadata !DIExpression()), !dbg !19590
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !19592
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !19593
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !19594
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !19595
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !19596
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !19597
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !19598
  ret void, !dbg !19599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !19600 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19604, metadata !DIExpression()), !dbg !19606
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19607
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.424(%struct._dnode* noundef %2) #27, !dbg !19608
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19605, metadata !DIExpression()), !dbg !19606
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !19609
  ret %struct._timeout* %4, !dbg !19610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.421(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !19611 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19616, metadata !DIExpression()), !dbg !19619
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19617, metadata !DIExpression()), !dbg !19619
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19620
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !19618, metadata !DIExpression()), !dbg !19619
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19621
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !19622
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19623
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !19624
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !19625
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !19626
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19627
  ret void, !dbg !19628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !19629 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !19634
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !19631, metadata !DIExpression()), !dbg !19635
  %2 = tail call fastcc i32 @elapsed.419() #27, !dbg !19636
  call void @llvm.dbg.value(metadata i32 %2, metadata !19632, metadata !DIExpression()), !dbg !19635
  %3 = icmp eq %struct._timeout* %1, null, !dbg !19637
  br i1 %3, label %14, label %4, !dbg !19639

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !19640
  %6 = load i64, i64* %5, align 8, !dbg !19640
  %7 = sext i32 %2 to i64, !dbg !19641
  %8 = sub nsw i64 %6, %7, !dbg !19642
  %9 = icmp sgt i64 %8, 2147483647, !dbg !19643
  br i1 %9, label %14, label %10, !dbg !19644

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !19645
  %12 = select i1 %11, i64 %8, i64 0, !dbg !19645
  %13 = trunc i64 %12 to i32, !dbg !19645
  call void @llvm.dbg.value(metadata i32 %13, metadata !19633, metadata !DIExpression()), !dbg !19635
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !19647
  call void @llvm.dbg.value(metadata i32 %15, metadata !19633, metadata !DIExpression()), !dbg !19635
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !19648
  %17 = icmp ne i32 %16, 0, !dbg !19650
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !19651
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !19651
  call void @llvm.dbg.value(metadata i32 %20, metadata !19633, metadata !DIExpression()), !dbg !19635
  ret i32 %20, !dbg !19652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.424(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !19653 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19657, metadata !DIExpression()), !dbg !19659
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19658, metadata !DIExpression()), !dbg !19659
  %2 = icmp eq %struct._dnode* %0, null, !dbg !19660
  br i1 %2, label %5, label %3, !dbg !19661

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.425(%struct._dnode* noundef nonnull %0) #27, !dbg !19662
  br label %5, !dbg !19661

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !19661
  ret %struct._dnode* %6, !dbg !19663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.425(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !19664 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19666, metadata !DIExpression()), !dbg !19668
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19667, metadata !DIExpression()), !dbg !19668
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19669
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !19670
  br i1 %3, label %7, label %4, !dbg !19671

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19672
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !19672
  br label %7, !dbg !19671

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !19671
  ret %struct._dnode* %8, !dbg !19673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.426() unnamed_addr #8 !dbg !19674 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19678, metadata !DIExpression()), !dbg !19679
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.427() #27, !dbg !19680
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !19680
  ret %struct._dnode* %3, !dbg !19681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.427() unnamed_addr #8 !dbg !19682 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19686, metadata !DIExpression()), !dbg !19687
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !19688
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !19689
  ret i1 %2, !dbg !19690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19691 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19695, metadata !DIExpression()), !dbg !19700
  call void @llvm.dbg.value(metadata i32 -22, metadata !19696, metadata !DIExpression()), !dbg !19700
  call void @llvm.dbg.value(metadata i32 0, metadata !19697, metadata !DIExpression()), !dbg !19701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19702
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19704, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19706
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19706
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19702
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19707
  br i1 %3, label %5, label %4, !dbg !19708

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19709
  unreachable, !dbg !19709

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19706
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19702
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19710
  call void @llvm.dbg.value(metadata i32 undef, metadata !19699, metadata !DIExpression()), !dbg !19701
  call void @llvm.dbg.value(metadata i32 -22, metadata !19696, metadata !DIExpression()), !dbg !19700
  call void @llvm.dbg.value(metadata i32 undef, metadata !19697, metadata !DIExpression()), !dbg !19701
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !19696, metadata !DIExpression()), !dbg !19700
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.411(%struct._dnode* noundef %6) #27, !dbg !19711
  br i1 %7, label %8, label %9, !dbg !19715

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !19716
  call void @llvm.dbg.value(metadata i32 0, metadata !19696, metadata !DIExpression()), !dbg !19700
  br label %9, !dbg !19718

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !19700
  call void @llvm.dbg.value(metadata i32 %10, metadata !19696, metadata !DIExpression()), !dbg !19700
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !19719
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19721
  br i1 %11, label %13, label %12, !dbg !19722

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19723
  unreachable, !dbg !19723

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !19704
  call void @llvm.dbg.value(metadata i32 %14, metadata !19471, metadata !DIExpression()) #25, !dbg !19706
  call void @llvm.dbg.value(metadata i32 %14, metadata !19465, metadata !DIExpression()) #25, !dbg !19702
  call void @llvm.dbg.value(metadata i32 %14, metadata !19699, metadata !DIExpression()), !dbg !19701
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19719
  call void @llvm.dbg.value(metadata i32 undef, metadata !19546, metadata !DIExpression()) #25, !dbg !19724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !19726, !srcloc !19552
  call void @llvm.dbg.value(metadata i32 %10, metadata !19696, metadata !DIExpression()), !dbg !19700
  call void @llvm.dbg.value(metadata i32 undef, metadata !19697, metadata !DIExpression()), !dbg !19701
  ret i32 %10, !dbg !19727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !19728 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19730, metadata !DIExpression()), !dbg !19731
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !19732
  %3 = icmp eq %struct._timeout* %2, null, !dbg !19734
  br i1 %3, label %10, label %4, !dbg !19735

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19736
  %6 = load i64, i64* %5, align 8, !dbg !19736
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !19738
  %8 = load i64, i64* %7, align 8, !dbg !19739
  %9 = add nsw i64 %8, %6, !dbg !19739
  store i64 %9, i64* %7, align 8, !dbg !19739
  br label %10, !dbg !19740

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19741
  tail call fastcc void @sys_dlist_remove.430(%struct._dnode* noundef %11) #27, !dbg !19742
  ret void, !dbg !19743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.430(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !19744 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19748, metadata !DIExpression()), !dbg !19751
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19752
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19752
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19749, metadata !DIExpression()), !dbg !19751
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19753
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !19753
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !19750, metadata !DIExpression()), !dbg !19751
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !19754
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !19755
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !19756
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !19757
  tail call fastcc void @sys_dnode_init.431(%struct._dnode* noundef %0) #27, !dbg !19758
  ret void, !dbg !19759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.431(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !19760 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19762, metadata !DIExpression()), !dbg !19763
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19764
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !19765
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19766
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !19767
  ret void, !dbg !19768
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19769 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19775, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.value(metadata i64 0, metadata !19776, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.value(metadata i32 0, metadata !19777, metadata !DIExpression()), !dbg !19781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19782
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19784, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19786
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19786
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19782
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19787
  br i1 %3, label %5, label %4, !dbg !19788

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19789
  unreachable, !dbg !19789

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19786
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19782
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19790
  call void @llvm.dbg.value(metadata i32 undef, metadata !19779, metadata !DIExpression()), !dbg !19781
  call void @llvm.dbg.value(metadata i64 0, metadata !19776, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.value(metadata i32 undef, metadata !19777, metadata !DIExpression()), !dbg !19781
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !19791
  call void @llvm.dbg.value(metadata i64 %6, metadata !19776, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !19794
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19796
  br i1 %7, label %9, label %8, !dbg !19797

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19798
  unreachable, !dbg !19798

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !19784
  call void @llvm.dbg.value(metadata i32 %10, metadata !19471, metadata !DIExpression()) #25, !dbg !19786
  call void @llvm.dbg.value(metadata i32 %10, metadata !19465, metadata !DIExpression()) #25, !dbg !19782
  call void @llvm.dbg.value(metadata i32 %10, metadata !19779, metadata !DIExpression()), !dbg !19781
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19794
  call void @llvm.dbg.value(metadata i32 undef, metadata !19546, metadata !DIExpression()) #25, !dbg !19799
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !19801, !srcloc !19552
  call void @llvm.dbg.value(metadata i64 %6, metadata !19776, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.value(metadata i32 undef, metadata !19777, metadata !DIExpression()), !dbg !19781
  ret i64 %6, !dbg !19802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !19803 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19805, metadata !DIExpression()), !dbg !19809
  call void @llvm.dbg.value(metadata i64 0, metadata !19806, metadata !DIExpression()), !dbg !19809
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.432(%struct._timeout* noundef %0) #27, !dbg !19810
  br i1 %2, label %21, label %3, !dbg !19812

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !19813
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !19807, metadata !DIExpression()), !dbg !19814
  call void @llvm.dbg.value(metadata i64 0, metadata !19806, metadata !DIExpression()), !dbg !19809
  %5 = icmp eq %struct._timeout* %4, null, !dbg !19815
  br i1 %5, label %16, label %6, !dbg !19817

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !19807, metadata !DIExpression()), !dbg !19814
  call void @llvm.dbg.value(metadata i64 %8, metadata !19806, metadata !DIExpression()), !dbg !19809
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !19818
  %10 = load i64, i64* %9, align 8, !dbg !19818
  %11 = add nsw i64 %10, %8, !dbg !19820
  call void @llvm.dbg.value(metadata i64 %11, metadata !19806, metadata !DIExpression()), !dbg !19809
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !19821
  br i1 %12, label %16, label %13, !dbg !19823

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !19824
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !19807, metadata !DIExpression()), !dbg !19814
  call void @llvm.dbg.value(metadata i64 %11, metadata !19806, metadata !DIExpression()), !dbg !19809
  %15 = icmp eq %struct._timeout* %14, null, !dbg !19815
  br i1 %15, label %16, label %6, !dbg !19817, !llvm.loop !19825

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !19809
  call void @llvm.dbg.value(metadata i64 %17, metadata !19806, metadata !DIExpression()), !dbg !19809
  %18 = tail call fastcc i32 @elapsed.419() #27, !dbg !19827
  %19 = sext i32 %18 to i64, !dbg !19827
  %20 = sub nsw i64 %17, %19, !dbg !19828
  br label %21, !dbg !19829

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !19809
  ret i64 %22, !dbg !19830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.432(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !19831 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19835, metadata !DIExpression()), !dbg !19836
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19837
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.411(%struct._dnode* noundef %2) #27, !dbg !19838
  %4 = xor i1 %3, true, !dbg !19839
  ret i1 %4, !dbg !19840
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19841 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19843, metadata !DIExpression()), !dbg !19848
  call void @llvm.dbg.value(metadata i64 0, metadata !19844, metadata !DIExpression()), !dbg !19848
  call void @llvm.dbg.value(metadata i32 0, metadata !19845, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19850
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19852, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19854
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19854
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19850
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19855
  br i1 %3, label %5, label %4, !dbg !19856

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19857
  unreachable, !dbg !19857

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19854
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19850
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19858
  call void @llvm.dbg.value(metadata i32 undef, metadata !19847, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata i64 0, metadata !19844, metadata !DIExpression()), !dbg !19848
  call void @llvm.dbg.value(metadata i32 undef, metadata !19845, metadata !DIExpression()), !dbg !19849
  %6 = load i64, i64* @curr_tick, align 8, !dbg !19859
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !19862
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !19844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19848
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !19863
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19865
  br i1 %8, label %10, label %9, !dbg !19866

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19867
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19867
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19867
  unreachable, !dbg !19867

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !19852
  call void @llvm.dbg.value(metadata i32 %11, metadata !19471, metadata !DIExpression()) #25, !dbg !19854
  call void @llvm.dbg.value(metadata i32 %11, metadata !19465, metadata !DIExpression()) #25, !dbg !19850
  call void @llvm.dbg.value(metadata i32 %11, metadata !19847, metadata !DIExpression()), !dbg !19849
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !19844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19848
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19863
  call void @llvm.dbg.value(metadata i32 undef, metadata !19546, metadata !DIExpression()) #25, !dbg !19868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !19870, !srcloc !19552
  call void @llvm.dbg.value(metadata i32 undef, metadata !19845, metadata !DIExpression()), !dbg !19849
  %12 = add i64 %7, %6, !dbg !19871
  ret i64 %12, !dbg !19872
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !19873 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !19875, metadata !DIExpression()), !dbg !19879
  call void @llvm.dbg.value(metadata i32 0, metadata !19876, metadata !DIExpression()), !dbg !19880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19881
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19883, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19885
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19885
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19881
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19886
  br i1 %2, label %4, label %3, !dbg !19887

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19888
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19888
  unreachable, !dbg !19888

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19885
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19881
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19889
  call void @llvm.dbg.value(metadata i32 undef, metadata !19878, metadata !DIExpression()), !dbg !19880
  call void @llvm.dbg.value(metadata i32 -1, metadata !19875, metadata !DIExpression()), !dbg !19879
  call void @llvm.dbg.value(metadata i32 undef, metadata !19876, metadata !DIExpression()), !dbg !19880
  %5 = tail call fastcc i32 @next_timeout() #27, !dbg !19890
  call void @llvm.dbg.value(metadata i32 %5, metadata !19875, metadata !DIExpression()), !dbg !19879
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !19893
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19895
  br i1 %6, label %8, label %7, !dbg !19896

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19897
  unreachable, !dbg !19897

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !19883
  call void @llvm.dbg.value(metadata i32 %9, metadata !19471, metadata !DIExpression()) #25, !dbg !19885
  call void @llvm.dbg.value(metadata i32 %9, metadata !19465, metadata !DIExpression()) #25, !dbg !19881
  call void @llvm.dbg.value(metadata i32 %9, metadata !19878, metadata !DIExpression()), !dbg !19880
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19893
  call void @llvm.dbg.value(metadata i32 undef, metadata !19546, metadata !DIExpression()) #25, !dbg !19898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !19900, !srcloc !19552
  call void @llvm.dbg.value(metadata i32 %5, metadata !19875, metadata !DIExpression()), !dbg !19879
  call void @llvm.dbg.value(metadata i32 undef, metadata !19876, metadata !DIExpression()), !dbg !19880
  ret i32 %5, !dbg !19901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !19902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19904, metadata !DIExpression()), !dbg !19914
  call void @llvm.dbg.value(metadata i1 %1, metadata !19905, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19914
  call void @llvm.dbg.value(metadata i32 0, metadata !19906, metadata !DIExpression()), !dbg !19915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19916
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19918, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19920
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19920
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19916
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19921
  br i1 %4, label %6, label %5, !dbg !19922

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19923
  unreachable, !dbg !19923

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19920
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19916
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19924
  call void @llvm.dbg.value(metadata i32 undef, metadata !19908, metadata !DIExpression()), !dbg !19915
  call void @llvm.dbg.value(metadata i32 undef, metadata !19906, metadata !DIExpression()), !dbg !19915
  %7 = tail call fastcc i32 @next_timeout() #27, !dbg !19925
  call void @llvm.dbg.value(metadata i32 %7, metadata !19909, metadata !DIExpression()), !dbg !19926
  call void @llvm.dbg.value(metadata i1 undef, metadata !19912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19926
  %8 = icmp slt i32 %7, 2, !dbg !19927
  call void @llvm.dbg.value(metadata i1 %8, metadata !19913, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19926
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !19928
  call void @llvm.dbg.value(metadata i1 %9, metadata !19912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19926
  br i1 %10, label %14, label %11, !dbg !19928

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !19930
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !19930
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !19932
  br label %14, !dbg !19933

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !19934
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19936
  br i1 %15, label %17, label %16, !dbg !19937

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19938
  unreachable, !dbg !19938

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !19918
  call void @llvm.dbg.value(metadata i32 %18, metadata !19471, metadata !DIExpression()) #25, !dbg !19920
  call void @llvm.dbg.value(metadata i32 %18, metadata !19465, metadata !DIExpression()) #25, !dbg !19916
  call void @llvm.dbg.value(metadata i32 %18, metadata !19908, metadata !DIExpression()), !dbg !19915
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19934
  call void @llvm.dbg.value(metadata i32 undef, metadata !19546, metadata !DIExpression()) #25, !dbg !19939
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !19941, !srcloc !19552
  call void @llvm.dbg.value(metadata i32 1, metadata !19906, metadata !DIExpression()), !dbg !19915
  call void @llvm.dbg.value(metadata i32 undef, metadata !19906, metadata !DIExpression()), !dbg !19915
  ret void, !dbg !19942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !19943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19947, metadata !DIExpression()), !dbg !19952
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !19953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19954
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19956, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19958
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19958
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19954
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19959
  br i1 %3, label %5, label %4, !dbg !19960

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19961
  unreachable, !dbg !19961

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19958
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19954
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19962
  call void @llvm.dbg.value(metadata i32 undef, metadata !19948, metadata !DIExpression()), !dbg !19952
  store i32 %0, i32* @announce_remaining, align 4, !dbg !19952
  call void @llvm.dbg.value(metadata i32 undef, metadata !19948, metadata !DIExpression()), !dbg !19952
  %6 = tail call fastcc %struct._timeout* @first() #27, !dbg !19963
  %7 = icmp eq %struct._timeout* %6, null, !dbg !19964
  br i1 %7, label %37, label %8, !dbg !19965

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !19952
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !19966
  %14 = load i64, i64* %13, align 8, !dbg !19966
  %15 = sext i32 %11 to i64, !dbg !19967
  %16 = icmp sgt i64 %14, %15, !dbg !19968
  br i1 %16, label %35, label %17, !dbg !19969

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !19949, metadata !DIExpression()), !dbg !19970
  %18 = trunc i64 %14 to i32, !dbg !19971
  call void @llvm.dbg.value(metadata i32 %18, metadata !19951, metadata !DIExpression()), !dbg !19970
  %19 = sext i32 %18 to i64, !dbg !19972
  %20 = load i64, i64* @curr_tick, align 8, !dbg !19973
  %21 = add i64 %20, %19, !dbg !19973
  store i64 %21, i64* @curr_tick, align 8, !dbg !19973
  store i64 0, i64* %13, align 8, !dbg !19974
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #27, !dbg !19975
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !19976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !19976
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19978
  br i1 %22, label %24, label %23, !dbg !19979

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19980
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19980
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !19980
  unreachable, !dbg !19980

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !19532, metadata !DIExpression()) #25, !dbg !19976
  call void @llvm.dbg.value(metadata i32 %12, metadata !19546, metadata !DIExpression()) #25, !dbg !19981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !19983, !srcloc !19552
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !19984
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !19984
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !19985
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !19986
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19988, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19990
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !19990
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19986
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19991
  br i1 %28, label %30, label %29, !dbg !19992

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19993
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19993
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !19993
  unreachable, !dbg !19993

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !19990
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !19986
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19994
  call void @llvm.dbg.value(metadata i32 undef, metadata !19948, metadata !DIExpression()), !dbg !19952
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !19995
  %32 = sub nsw i32 %31, %18, !dbg !19995
  store i32 %32, i32* @announce_remaining, align 4, !dbg !19952
  call void @llvm.dbg.value(metadata i32 undef, metadata !19948, metadata !DIExpression()), !dbg !19952
  %33 = tail call fastcc %struct._timeout* @first() #27, !dbg !19963
  %34 = icmp eq %struct._timeout* %33, null, !dbg !19964
  br i1 %34, label %37, label %8, !dbg !19965, !llvm.loop !19996

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !19998
  store i64 %36, i64* %13, align 8, !dbg !19998
  br label %41, !dbg !20001

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !19952
  %40 = sext i32 %39 to i64, !dbg !20002
  br label %41, !dbg !20002

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !20002
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !20003
  %45 = add i64 %44, %42, !dbg !20003
  store i64 %45, i64* @curr_tick, align 8, !dbg !20003
  store i32 0, i32* @announce_remaining, align 4, !dbg !20004
  %46 = tail call fastcc i32 @next_timeout() #27, !dbg !20005
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !20006
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !20007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !20007
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20009
  br i1 %47, label %49, label %48, !dbg !20010

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !20011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !20011
  unreachable, !dbg !20011

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !19952
  call void @llvm.dbg.value(metadata i32 %50, metadata !19532, metadata !DIExpression()) #25, !dbg !20007
  call void @llvm.dbg.value(metadata i32 %50, metadata !19546, metadata !DIExpression()) #25, !dbg !20012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !20014, !srcloc !19552
  ret void, !dbg !20015
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !20016 {
  call void @llvm.dbg.value(metadata i64 0, metadata !20020, metadata !DIExpression()), !dbg !20024
  call void @llvm.dbg.value(metadata i32 0, metadata !20021, metadata !DIExpression()), !dbg !20025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19459, metadata !DIExpression()) #25, !dbg !20026
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20028, !srcloc !19474
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !20030
  call void @llvm.dbg.value(metadata i32 undef, metadata !19472, metadata !DIExpression()) #25, !dbg !20030
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !20026
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20031
  br i1 %2, label %4, label %3, !dbg !20032

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !20033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.418, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 148) #26, !dbg !20033
  unreachable, !dbg !20033

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !19471, metadata !DIExpression()) #25, !dbg !20030
  call void @llvm.dbg.value(metadata i32 undef, metadata !19465, metadata !DIExpression()) #25, !dbg !20026
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20034
  call void @llvm.dbg.value(metadata i32 undef, metadata !20023, metadata !DIExpression()), !dbg !20025
  call void @llvm.dbg.value(metadata i64 0, metadata !20020, metadata !DIExpression()), !dbg !20024
  call void @llvm.dbg.value(metadata i32 undef, metadata !20021, metadata !DIExpression()), !dbg !20025
  %5 = load i64, i64* @curr_tick, align 8, !dbg !20035
  %6 = tail call fastcc i32 @elapsed.419() #27, !dbg !20038
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !20020, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !20024
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !20039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19537, metadata !DIExpression()) #25, !dbg !20039
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20041
  br i1 %7, label %9, label %8, !dbg !20042

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !20043
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20043
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.417, i32 0, i32 0), i32 noundef 194) #26, !dbg !20043
  unreachable, !dbg !20043

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !20028
  call void @llvm.dbg.value(metadata i32 %10, metadata !19471, metadata !DIExpression()) #25, !dbg !20030
  call void @llvm.dbg.value(metadata i32 %10, metadata !19465, metadata !DIExpression()) #25, !dbg !20026
  call void @llvm.dbg.value(metadata i32 %10, metadata !20023, metadata !DIExpression()), !dbg !20025
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !20020, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !20024
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !20020, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !20024
  call void @llvm.dbg.value(metadata i32 undef, metadata !19532, metadata !DIExpression()) #25, !dbg !20039
  call void @llvm.dbg.value(metadata i32 undef, metadata !19546, metadata !DIExpression()) #25, !dbg !20044
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !20046, !srcloc !19552
  call void @llvm.dbg.value(metadata i32 undef, metadata !20021, metadata !DIExpression()), !dbg !20025
  %11 = sext i32 %6 to i64, !dbg !20038
  %12 = add i64 %5, %11, !dbg !20047
  ret i64 %12, !dbg !20048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !20049 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !20050
  %2 = trunc i64 %1 to i32, !dbg !20051
  ret i32 %2, !dbg !20052
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !20053 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !20054
  ret i64 %1, !dbg !20055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !20056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20058, metadata !DIExpression()), !dbg !20065
  %2 = icmp eq i32 %0, 0, !dbg !20066
  br i1 %2, label %10, label %3, !dbg !20068

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !20069
  call void @llvm.dbg.value(metadata i32 %4, metadata !20059, metadata !DIExpression()), !dbg !20065
  %5 = mul i32 %0, 84, !dbg !20070
  call void @llvm.dbg.value(metadata i32 %5, metadata !20060, metadata !DIExpression()), !dbg !20065
  br label %6, !dbg !20071

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !20072
  call void @llvm.dbg.value(metadata i32 %7, metadata !20061, metadata !DIExpression()), !dbg !20073
  %8 = sub i32 %7, %4, !dbg !20074
  %9 = icmp ult i32 %8, %5, !dbg !20076
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !20077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !20078 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !20079
  ret i32 %1, !dbg !20080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !20081 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !20083
  ret i32 %1, !dbg !20084
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !20085 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !20089, metadata !DIExpression()), !dbg !20091
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !20092

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !20093
  br label %14, !dbg !20097

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !20090, metadata !DIExpression()), !dbg !20091
  %6 = icmp slt i64 %2, -1, !dbg !20098
  br i1 %6, label %7, label %9, !dbg !20101

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !20102
  br label %14, !dbg !20103

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !20105
  %11 = icmp ugt i64 %2, 1, !dbg !20106
  %12 = select i1 %11, i64 %2, i64 1, !dbg !20106
  %13 = add nsw i64 %10, %12, !dbg !20107
  br label %14, !dbg !20108

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !20109
  ret i64 %15, !dbg !20110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !20111 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !20113, metadata !DIExpression()), !dbg !20117
  %2 = icmp eq i8* %0, null, !dbg !20118
  br i1 %2, label %7, label %3, !dbg !20120

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !20114, metadata !DIExpression()), !dbg !20117
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !20121
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !20121
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !20114, metadata !DIExpression()), !dbg !20117
  call void @llvm.dbg.value(metadata i8* %4, metadata !20113, metadata !DIExpression()), !dbg !20117
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !20123
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !20124
  br label %7, !dbg !20125

7:                                                ; preds = %3, %1
  ret void, !dbg !20126
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !20127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20131, metadata !DIExpression()), !dbg !20134
  call void @llvm.dbg.value(metadata i32 %1, metadata !20132, metadata !DIExpression()), !dbg !20134
  %3 = icmp ugt i32 %0, 3, !dbg !20135
  %4 = and i32 %0, 3, !dbg !20135
  %5 = icmp eq i32 %4, 0, !dbg !20135
  %6 = and i1 %3, %5, !dbg !20135
  br i1 %6, label %8, label %7, !dbg !20135

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.446, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.447, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.448, i32 0, i32 0), i32 noundef 68) #26, !dbg !20138
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.449, i32 0, i32 0)) #26, !dbg !20138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.448, i32 0, i32 0), i32 noundef 68) #26, !dbg !20138
  unreachable, !dbg !20138

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !20140, !range !5541
  %10 = icmp ult i32 %9, 2, !dbg !20140
  br i1 %10, label %12, label %11, !dbg !20143

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.446, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.448, i32 0, i32 0), i32 noundef 71) #26, !dbg !20144
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.451, i32 0, i32 0)) #26, !dbg !20144
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.448, i32 0, i32 0), i32 noundef 71) #26, !dbg !20144
  unreachable, !dbg !20144

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #27, !dbg !20146
  call void @llvm.dbg.value(metadata i8* %13, metadata !20133, metadata !DIExpression()), !dbg !20134
  ret i8* %13, !dbg !20147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !20148 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20152, metadata !DIExpression()), !dbg !20158
  call void @llvm.dbg.value(metadata i32 %1, metadata !20153, metadata !DIExpression()), !dbg !20158
  call void @llvm.dbg.value(metadata i32 %2, metadata !20154, metadata !DIExpression()), !dbg !20158
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !20154, metadata !DIExpression(DW_OP_deref)), !dbg !20158
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !20159
  br i1 %5, label %21, label %6, !dbg !20161

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !20162
  call void @llvm.dbg.value(metadata i32 %7, metadata !20157, metadata !DIExpression()), !dbg !20158
  %8 = load i32, i32* %4, align 4, !dbg !20163
  call void @llvm.dbg.value(metadata i32 %8, metadata !20154, metadata !DIExpression()), !dbg !20158
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !20164
  call void @llvm.dbg.value(metadata i8* %9, metadata !20155, metadata !DIExpression()), !dbg !20158
  %10 = icmp eq i8* %9, null, !dbg !20165
  br i1 %10, label %21, label %11, !dbg !20167

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !20168
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !20156, metadata !DIExpression()), !dbg !20158
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !20169
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !20170
  call void @llvm.dbg.value(metadata i8* %13, metadata !20156, metadata !DIExpression()), !dbg !20158
  call void @llvm.dbg.value(metadata i8* %13, metadata !20155, metadata !DIExpression()), !dbg !20158
  %14 = icmp eq i32 %1, 0, !dbg !20171
  br i1 %14, label %21, label %15, !dbg !20171

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !20171
  %17 = add i32 %1, -1, !dbg !20171
  %18 = and i32 %17, %16, !dbg !20171
  %19 = icmp eq i32 %18, 0, !dbg !20171
  br i1 %19, label %21, label %20, !dbg !20174

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.446, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.452, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.448, i32 0, i32 0), i32 noundef 38) #26, !dbg !20175
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.453, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #26, !dbg !20175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.448, i32 0, i32 0), i32 noundef 38) #26, !dbg !20175
  unreachable, !dbg !20175

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !20158
  ret i8* %22, !dbg !20177
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !20178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20180, metadata !DIExpression()), !dbg !20183
  call void @llvm.dbg.value(metadata i32 4, metadata !20181, metadata !DIExpression()), !dbg !20183
  call void @llvm.dbg.value(metadata i32* %1, metadata !20182, metadata !DIExpression()), !dbg !20183
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !20184
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !20184
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !20184
  store i32 %5, i32* %1, align 4, !dbg !20184
  ret i1 %4, !dbg !20185
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !20186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20188, metadata !DIExpression()), !dbg !20190
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #27, !dbg !20191
  call void @llvm.dbg.value(metadata i8* %2, metadata !20189, metadata !DIExpression()), !dbg !20190
  ret i8* %2, !dbg !20192
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !20193 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !20195, metadata !DIExpression()), !dbg !20199
  call void @llvm.dbg.value(metadata i32 %1, metadata !20196, metadata !DIExpression()), !dbg !20199
  %4 = bitcast i32* %3 to i8*, !dbg !20200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !20200
  call void @llvm.dbg.value(metadata i32* %3, metadata !20198, metadata !DIExpression(DW_OP_deref)), !dbg !20199
  %5 = call fastcc zeroext i1 @size_mul_overflow.456(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #27, !dbg !20201
  br i1 %5, label %12, label %6, !dbg !20203

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !20204
  call void @llvm.dbg.value(metadata i32 %7, metadata !20198, metadata !DIExpression()), !dbg !20199
  %8 = tail call i8* @k_malloc(i32 noundef %7) #27, !dbg !20205
  call void @llvm.dbg.value(metadata i8* %8, metadata !20197, metadata !DIExpression()), !dbg !20199
  %9 = icmp eq i8* %8, null, !dbg !20206
  br i1 %9, label %12, label %10, !dbg !20208

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !20198, metadata !DIExpression()), !dbg !20199
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #26, !dbg !20209
  br label %12, !dbg !20211

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !20199
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !20212
  ret i8* %13, !dbg !20212
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.456(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !20213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20215, metadata !DIExpression()), !dbg !20218
  call void @llvm.dbg.value(metadata i32 %1, metadata !20216, metadata !DIExpression()), !dbg !20218
  call void @llvm.dbg.value(metadata i32* %2, metadata !20217, metadata !DIExpression()), !dbg !20218
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !20219
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !20219
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !20219
  store i32 %6, i32* %2, align 4, !dbg !20219
  ret i1 %5, !dbg !20220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !20221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !20295, metadata !DIExpression()), !dbg !20296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !20297
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !20298
  ret void, !dbg !20299
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !20300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20302, metadata !DIExpression()), !dbg !20306
  call void @llvm.dbg.value(metadata i32 %1, metadata !20303, metadata !DIExpression()), !dbg !20306
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !20307
  br i1 %3, label %9, label %4, !dbg !20309

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20310
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !20312
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !20312
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !20305, metadata !DIExpression()), !dbg !20306
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !20313
  br i1 %8, label %12, label %9, !dbg !20315

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #27, !dbg !20316
  call void @llvm.dbg.value(metadata i8* %11, metadata !20304, metadata !DIExpression()), !dbg !20306
  br label %12, !dbg !20318

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !20319
  call void @llvm.dbg.value(metadata i8* %13, metadata !20304, metadata !DIExpression()), !dbg !20306
  ret i8* %13, !dbg !20320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #4 !dbg !20321 {
  ret void, !dbg !20323
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !20324 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !20326, metadata !DIExpression()), !dbg !20348
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !20327, metadata !DIExpression()), !dbg !20349
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !20350

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.465, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.466, i32 0, i32 0), i32 noundef 24) #26, !dbg !20354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.467, i32 0, i32 0)) #26, !dbg !20354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.466, i32 0, i32 0), i32 noundef 24) #26, !dbg !20354
  unreachable, !dbg !20354

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !20327, metadata !DIExpression()), !dbg !20349
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !20357
  br i1 %5, label %7, label %6, !dbg !20358

6:                                                ; preds = %3
  ret i32 0, !dbg !20359

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !20360
  %9 = load i8*, i8** %8, align 4, !dbg !20360
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !20363
  %11 = load i32, i32* %10, align 4, !dbg !20363
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #27, !dbg !20364
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !20365
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !20327, metadata !DIExpression()), !dbg !20349
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !20366
  br i1 %13, label %2, label %3, !dbg !20350, !llvm.loop !20367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !20369 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20373, metadata !DIExpression()), !dbg !20376
  call void @llvm.dbg.value(metadata i8* %1, metadata !20374, metadata !DIExpression()), !dbg !20376
  call void @llvm.dbg.value(metadata i32 %2, metadata !20375, metadata !DIExpression()), !dbg !20376
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !20377
  tail call fastcc void @z_waitq_init.468(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !20378
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !20379
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !20380
  ret void, !dbg !20381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.468(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !20382 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !20387, metadata !DIExpression()), !dbg !20388
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !20389
  tail call fastcc void @sys_dlist_init.469(%struct._dnode* noundef %2) #27, !dbg !20390
  ret void, !dbg !20391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.469(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !20392 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20397, metadata !DIExpression()), !dbg !20398
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20399
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !20400
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20401
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !20402
  ret void, !dbg !20403
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !20404 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !20415, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20412, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i32 %1, metadata !20413, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i32 %2, metadata !20414, metadata !DIExpression()), !dbg !20425
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !20426
  call void @llvm.dbg.value(metadata i64 %6, metadata !20417, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i8* null, metadata !20418, metadata !DIExpression()), !dbg !20425
  %7 = icmp eq i64 %5, -1, !dbg !20427
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !20427
  call void @llvm.dbg.value(metadata i64 %8, metadata !20417, metadata !DIExpression()), !dbg !20425
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !20428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !20429, metadata !DIExpression()) #25, !dbg !20436
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20438, !srcloc !20444
  call void @llvm.dbg.value(metadata i32 undef, metadata !20441, metadata !DIExpression()) #25, !dbg !20445
  call void @llvm.dbg.value(metadata i32 undef, metadata !20442, metadata !DIExpression()) #25, !dbg !20445
  call void @llvm.dbg.value(metadata i32 undef, metadata !20435, metadata !DIExpression()) #25, !dbg !20436
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20446
  br i1 %11, label %13, label %12, !dbg !20449

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.472, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 148) #26, !dbg !20450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.474, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !20450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 148) #26, !dbg !20450
  unreachable, !dbg !20450

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !20441, metadata !DIExpression()) #25, !dbg !20445
  call void @llvm.dbg.value(metadata i32 undef, metadata !20435, metadata !DIExpression()) #25, !dbg !20436
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20452
  call void @llvm.dbg.value(metadata i32 undef, metadata !20419, metadata !DIExpression()), !dbg !20425
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !20453, !srcloc !20462
  call void @llvm.dbg.value(metadata i32 %14, metadata !20456, metadata !DIExpression()) #25, !dbg !20463
  %15 = icmp eq i32 %14, 0, !dbg !20464
  %16 = icmp eq i64 %5, 0, !dbg !20465
  %17 = select i1 %15, i1 true, i1 %16, !dbg !20465
  br i1 %17, label %18, label %25, !dbg !20465

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !20418, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i8 0, metadata !20424, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i32 undef, metadata !20419, metadata !DIExpression()), !dbg !20425
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !20466
  call void @llvm.dbg.value(metadata i8* %20, metadata !20418, metadata !DIExpression()), !dbg !20425
  %21 = tail call i64 @sys_clock_tick_get() #26, !dbg !20468
  call void @llvm.dbg.value(metadata i64 %21, metadata !20416, metadata !DIExpression()), !dbg !20425
  %22 = icmp eq i8* %20, null, !dbg !20469
  br i1 %22, label %23, label %43, !dbg !20471

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !20419, metadata !DIExpression()), !dbg !20425
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !20471

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.475, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.466, i32 0, i32 0), i32 noundef 76) #26, !dbg !20472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.476, i32 0, i32 0)) #26, !dbg !20472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.466, i32 0, i32 0), i32 noundef 76) #26, !dbg !20472
  unreachable, !dbg !20472

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !20424, metadata !DIExpression()), !dbg !20425
  %29 = sub nsw i64 %8, %27, !dbg !20474
  %30 = icmp slt i64 %29, 1, !dbg !20475
  br i1 %30, label %43, label %31, !dbg !20476

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !20425
  call void @llvm.dbg.value(metadata i8 undef, metadata !20424, metadata !DIExpression()), !dbg !20425
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !20477
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !20477
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #26, !dbg !20477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !20429, metadata !DIExpression()) #25, !dbg !20478
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20480, !srcloc !20444
  call void @llvm.dbg.value(metadata i32 undef, metadata !20441, metadata !DIExpression()) #25, !dbg !20482
  call void @llvm.dbg.value(metadata i32 undef, metadata !20442, metadata !DIExpression()) #25, !dbg !20482
  call void @llvm.dbg.value(metadata i32 undef, metadata !20435, metadata !DIExpression()) #25, !dbg !20478
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20483
  br i1 %37, label %39, label %38, !dbg !20484

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.472, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 148) #26, !dbg !20485
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.474, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !20485
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 148) #26, !dbg !20485
  unreachable, !dbg !20485

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !20424, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i32 undef, metadata !20441, metadata !DIExpression()) #25, !dbg !20482
  call void @llvm.dbg.value(metadata i32 undef, metadata !20435, metadata !DIExpression()) #25, !dbg !20478
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20486
  call void @llvm.dbg.value(metadata i32 undef, metadata !20419, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i8* null, metadata !20418, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i32 undef, metadata !20419, metadata !DIExpression()), !dbg !20425
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !20466
  call void @llvm.dbg.value(metadata i8* %40, metadata !20418, metadata !DIExpression()), !dbg !20425
  %41 = tail call i64 @sys_clock_tick_get() #26, !dbg !20468
  call void @llvm.dbg.value(metadata i64 %41, metadata !20416, metadata !DIExpression()), !dbg !20425
  %42 = icmp eq i8* %40, null, !dbg !20469
  br i1 %42, label %26, label %43, !dbg !20471, !llvm.loop !20487

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !20466
  call void @llvm.dbg.value(metadata i8* %45, metadata !20418, metadata !DIExpression()), !dbg !20425
  call void @llvm.dbg.value(metadata i32 undef, metadata !20490, metadata !DIExpression()) #25, !dbg !20496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !20495, metadata !DIExpression()) #25, !dbg !20496
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !20498
  br i1 %46, label %48, label %47, !dbg !20501

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.477, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 194) #26, !dbg !20502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.478, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !20502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 194) #26, !dbg !20502
  unreachable, !dbg !20502

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !20425
  call void @llvm.dbg.value(metadata i32 %49, metadata !20490, metadata !DIExpression()) #25, !dbg !20496
  call void @llvm.dbg.value(metadata i32 %49, metadata !20504, metadata !DIExpression()) #25, !dbg !20507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !20509, !srcloc !20510
  ret i8* %45, !dbg !20511
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !20512 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !20518, metadata !DIExpression()), !dbg !20520
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20516, metadata !DIExpression()), !dbg !20520
  call void @llvm.dbg.value(metadata i32 %1, metadata !20517, metadata !DIExpression()), !dbg !20520
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !20521
  call void @llvm.dbg.value(metadata i8* %4, metadata !20519, metadata !DIExpression()), !dbg !20520
  ret i8* %4, !dbg !20522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !20523 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20527, metadata !DIExpression()), !dbg !20530
  call void @llvm.dbg.value(metadata i8* %1, metadata !20528, metadata !DIExpression()), !dbg !20530
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !20531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !20429, metadata !DIExpression()) #25, !dbg !20532
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20534, !srcloc !20444
  call void @llvm.dbg.value(metadata i32 undef, metadata !20441, metadata !DIExpression()) #25, !dbg !20536
  call void @llvm.dbg.value(metadata i32 undef, metadata !20442, metadata !DIExpression()) #25, !dbg !20536
  call void @llvm.dbg.value(metadata i32 undef, metadata !20435, metadata !DIExpression()) #25, !dbg !20532
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20537
  br i1 %5, label %7, label %6, !dbg !20538

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.472, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 148) #26, !dbg !20539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.474, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !20539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 148) #26, !dbg !20539
  unreachable, !dbg !20539

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !20534
  call void @llvm.dbg.value(metadata i32 %8, metadata !20441, metadata !DIExpression()) #25, !dbg !20536
  call void @llvm.dbg.value(metadata i32 %8, metadata !20435, metadata !DIExpression()) #25, !dbg !20532
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20540
  call void @llvm.dbg.value(metadata i32 %8, metadata !20529, metadata !DIExpression()), !dbg !20530
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !20541
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #26, !dbg !20542
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !20543
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #26, !dbg !20545
  %12 = icmp eq i32 %11, 0, !dbg !20546
  br i1 %12, label %15, label %13, !dbg !20547

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !20548
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #26, !dbg !20548
  br label %19, !dbg !20550

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !20490, metadata !DIExpression()) #25, !dbg !20551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !20495, metadata !DIExpression()) #25, !dbg !20551
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20554
  br i1 %16, label %18, label %17, !dbg !20555

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.477, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 194) #26, !dbg !20556
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.478, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !20556
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.473, i32 0, i32 0), i32 noundef 194) #26, !dbg !20556
  unreachable, !dbg !20556

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !20490, metadata !DIExpression()) #25, !dbg !20551
  call void @llvm.dbg.value(metadata i32 %8, metadata !20504, metadata !DIExpression()) #25, !dbg !20557
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !20559, !srcloc !20510
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !20560
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1271, !2, !3101, !27, !344, !547, !736, !759, !3103, !3105, !3138, !3172, !3174, !768, !818, !3176, !3179, !3190, !3236, !3238, !3266, !3294, !3337, !3408, !3453, !847, !987, !3481, !1023, !1033, !1058, !1070, !1309, !3486, !1448, !1514, !1819, !2103, !3527, !2218, !2308, !3529, !3592, !3659, !2360, !3662, !2367, !2739, !3680, !3682, !2759, !2869, !3788, !2986, !3027, !3791, !3070}
!llvm.ident = !{!3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793, !3793}
!llvm.module.flags = !{!3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !126, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !114, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !111, !112}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !113)
!113 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!114 = !{!25, !115, !295, !326, !330, !335, !340}
!115 = !DIGlobalVariableExpression(var: !116, expr: !DIExpression())
!116 = distinct !DIGlobalVariable(name: "consumer_sub", scope: !27, file: !117, line: 13, type: !118, isLocal: false, isDefinition: true, align: 32)
!117 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !123, !168}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !118, file: !119, line: 91, baseType: !122, size: 8)
!122 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !118, file: !119, line: 93, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !150, !155, !158, !159, !161, !162, !163, !164, !165}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !126, file: !127, line: 4206, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !132)
!131 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !133)
!133 = !{!134}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !132, file: !131, line: 232, baseType: !135, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !137)
!136 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !138)
!138 = !{!139, !145}
!139 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 38, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 38, size: 32, elements: !141)
!141 = !{!142, !144}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !140, file: !136, line: 39, baseType: !143, size: 32)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !140, file: !136, line: 40, baseType: !143, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 42, baseType: !146, size: 32, offset: 32)
!146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 42, size: 32, elements: !147)
!147 = !{!148, !149}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !146, file: !136, line: 43, baseType: !143, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !146, file: !136, line: 44, baseType: !143, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !126, file: !127, line: 4208, baseType: !151, size: 32, offset: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !151, file: !152, line: 52, baseType: !22, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !126, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !157, line: 214, baseType: !32)
!157 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !126, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !126, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !126, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !126, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !126, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !126, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !126, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !167)
!167 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !118, file: !119, line: 96, baseType: !169, size: 32, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DISubroutineType(types: !172)
!172 = !{null, !173}
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !176)
!176 = !{!177, !179, !183, !185, !186, !191, !290}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !119, line: 32, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !175, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !175, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !175, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !175, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DISubroutineType(types: !190)
!190 = !{!122, !13, !156}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !175, file: !119, line: 56, baseType: !192, size: 32, offset: 160)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !194)
!194 = !{!195, !196, !288, !289}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !193, file: !127, line: 2722, baseType: !130, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !193, file: !127, line: 2724, baseType: !197, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 32)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !200)
!199 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!200 = !{!201, !246, !259, !260, !261, !262, !268, !283}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !198, file: !199, line: 247, baseType: !202, size: 384)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !203)
!203 = !{!204, !218, !220, !221, !222, !233, !234, !235}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 60, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 60, size: 64, elements: !206)
!206 = !{!207, !209}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !205, file: !199, line: 61, baseType: !208, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !137)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !205, file: !199, line: 62, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !210, file: !211, line: 50, baseType: !214, size: 64)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !216)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!216 = !{!217}
!217 = !DISubrange(count: 2)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !202, file: !199, line: 68, baseType: !219, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !202, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !202, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!222 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 90, baseType: !223, size: 16, offset: 112)
!223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 90, size: 16, elements: !224)
!224 = !{!225, !232}
!225 = !DIDerivedType(tag: DW_TAG_member, scope: !223, file: !199, line: 91, baseType: !226, size: 16)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !223, file: !199, line: 91, size: 16, elements: !227)
!227 = !{!228, !231}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !226, file: !199, line: 96, baseType: !229, size: 8)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !230)
!230 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !226, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !223, file: !199, line: 100, baseType: !181, size: 16)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !202, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !202, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !202, file: !199, line: 131, baseType: !236, size: 192, offset: 192)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !237)
!237 = !{!238, !239, !245}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !236, file: !131, line: 245, baseType: !208, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !236, file: !131, line: 246, baseType: !240, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !236, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !198, file: !199, line: 250, baseType: !247, size: 288, offset: 384)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !249)
!248 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!249 = !{!250, !251, !252, !253, !254, !255, !256, !257, !258}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !247, file: !248, line: 26, baseType: !111, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !247, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !247, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !247, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !247, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !247, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !247, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !247, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !247, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !198, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !198, file: !199, line: 256, baseType: !130, size: 64, offset: 704)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !198, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !198, file: !199, line: 300, baseType: !263, size: 96, offset: 800)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !264)
!264 = !{!265, !266, !267}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !263, file: !199, line: 153, baseType: !22, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !263, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !263, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !198, file: !199, line: 325, baseType: !269, size: 32, offset: 896)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !271)
!271 = !{!272, !281, !282}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !270, file: !127, line: 5074, baseType: !273, size: 96)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !275)
!274 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!275 = !{!276, !279, !280}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !273, file: !274, line: 57, baseType: !277, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !274, line: 57, flags: DIFlagFwdDecl)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !273, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !273, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !127, line: 5075, baseType: !130, size: 64, offset: 96)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !127, line: 5076, baseType: !151, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !198, file: !199, line: 343, baseType: !284, size: 64, offset: 928)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !285)
!285 = !{!286, !287}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !284, file: !248, line: 63, baseType: !111, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !284, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !193, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !193, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !175, file: !119, line: 67, baseType: !291, size: 32, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_k_thread_data_consumer_thread_id", scope: !27, file: !117, line: 44, type: !297, isLocal: false, isDefinition: true, align: 32)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !298)
!298 = !{!299, !300, !308, !309, !314, !315, !316, !317, !318, !319, !321, !325}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !297, file: !127, line: 621, baseType: !197, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !297, file: !127, line: 622, baseType: !301, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !306)
!305 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !304, file: !305, line: 48, baseType: !110, size: 8)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !297, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !297, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !303, line: 46, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{null, !102, !102, !102}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !297, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !297, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !297, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !297, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !297, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !297, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !297, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !297, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "consumer_thread_id", scope: !27, file: !117, line: 44, type: !328, isLocal: false, isDefinition: true)
!328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !197)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !332, isLocal: true, isDefinition: true, align: 32)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 128, elements: !333)
!333 = !{!334}
!334 = !DISubrange(count: 16)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "_k_thread_stack_consumer_thread_id", scope: !27, file: !117, line: 44, type: !337, isLocal: false, isDefinition: true, align: 512)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 8704, elements: !338)
!338 = !{!339}
!339 = !DISubrange(count: 1088)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "_k_thread_obj_consumer_thread_id", scope: !27, file: !117, line: 44, type: !198, isLocal: false, isDefinition: true)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "_zbus_mutex_pkt_chan", scope: !344, file: !350, line: 15, type: !361, isLocal: true, isDefinition: true, align: 32)
!344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !347, splitDebugInlining: false, nameTableKind: None)
!345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!346 = !{!102, !103}
!347 = !{!342, !348, !498, !500, !502, !504, !506, !508, !510, !512, !519, !522, !529, !534, !539, !541, !543}
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "pkt_chan", scope: !344, file: !350, line: 15, type: !351, isLocal: false, isDefinition: true, align: 32)
!350 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !469}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !352, file: !119, line: 32, baseType: !178, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !352, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !352, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !352, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !352, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !352, file: !119, line: 56, baseType: !360, size: 32, offset: 160)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !362)
!362 = !{!363, !382, !467, !468}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !361, file: !127, line: 2722, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !366)
!366 = !{!367}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !365, file: !131, line: 232, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !136, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !136, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !136, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !136, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !136, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !136, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !136, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !136, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !361, file: !127, line: 2724, baseType: !383, size: 32, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !385)
!385 = !{!386, !426, !438, !439, !440, !441, !447, !462}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !384, file: !199, line: 247, baseType: !387, size: 384)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !388)
!388 = !{!389, !400, !402, !403, !404, !413, !414, !415}
!389 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !199, line: 60, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !387, file: !199, line: 60, size: 64, elements: !391)
!391 = !{!392, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !390, file: !199, line: 61, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !369)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !390, file: !199, line: 62, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !396)
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !395, file: !211, line: 50, baseType: !398, size: 64)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 64, elements: !216)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !387, file: !199, line: 68, baseType: !401, size: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !387, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !387, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!404 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !199, line: 90, baseType: !405, size: 16, offset: 112)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !387, file: !199, line: 90, size: 16, elements: !406)
!406 = !{!407, !412}
!407 = !DIDerivedType(tag: DW_TAG_member, scope: !405, file: !199, line: 91, baseType: !408, size: 16)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !405, file: !199, line: 91, size: 16, elements: !409)
!409 = !{!410, !411}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !408, file: !199, line: 96, baseType: !229, size: 8)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !408, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !405, file: !199, line: 100, baseType: !181, size: 16)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !387, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !387, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !387, file: !199, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !131, line: 245, baseType: !393, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !131, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !384, file: !199, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434, !435, !436, !437}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !248, line: 26, baseType: !111, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !384, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !384, file: !199, line: 256, baseType: !364, size: 64, offset: 704)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !384, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !384, file: !199, line: 300, baseType: !442, size: 96, offset: 800)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !443)
!443 = !{!444, !445, !446}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !442, file: !199, line: 153, baseType: !22, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !442, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !442, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !384, file: !199, line: 325, baseType: !448, size: 32, offset: 896)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !450)
!450 = !{!451, !457, !458}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !449, file: !127, line: 5074, baseType: !452, size: 96)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !453)
!453 = !{!454, !455, !456}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !452, file: !274, line: 57, baseType: !277, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !452, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !452, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !449, file: !127, line: 5075, baseType: !364, size: 64, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !449, file: !127, line: 5076, baseType: !459, size: 32, offset: 160)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !460)
!460 = !{!461}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !459, file: !152, line: 52, baseType: !22, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !384, file: !199, line: 343, baseType: !463, size: 64, offset: 928)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !248, line: 63, baseType: !111, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !361, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !361, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !352, file: !119, line: 67, baseType: !470, size: 32, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !475)
!475 = !{!476, !477, !492}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !474, file: !119, line: 91, baseType: !122, size: 8)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !474, file: !119, line: 93, baseType: !478, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !481)
!481 = !{!482, !483, !484, !485, !486, !487, !488, !489, !490, !491}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !127, line: 4206, baseType: !364, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !127, line: 4208, baseType: !459, size: 32, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !480, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !480, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !480, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !480, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !480, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !480, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !480, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !480, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !474, file: !119, line: 96, baseType: !493, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DISubroutineType(types: !496)
!496 = !{null, !497}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !344, file: !350, line: 24, type: !361, isLocal: true, isDefinition: true, align: 32)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "version_chan", scope: !344, file: !350, line: 24, type: !351, isLocal: false, isDefinition: true, align: 32)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "_zbus_mutex_data_ready_chan", scope: !344, file: !350, line: 33, type: !361, isLocal: true, isDefinition: true, align: 32)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "data_ready_chan", scope: !344, file: !350, line: 33, type: !351, isLocal: false, isDefinition: true, align: 32)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "_zbus_mutex_ack", scope: !344, file: !350, line: 42, type: !361, isLocal: true, isDefinition: true, align: 32)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "ack", scope: !344, file: !350, line: 42, type: !351, isLocal: false, isDefinition: true, align: 32)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "filter_lis", scope: !344, file: !350, line: 73, type: !474, isLocal: false, isDefinition: true, align: 32)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "_zbus_message_pkt_chan", scope: !344, file: !350, line: 15, type: !514, isLocal: true, isDefinition: true)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !516)
!515 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !514, file: !515, line: 17, baseType: !102, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !514, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "_zbus_observers_pkt_chan", scope: !344, file: !350, line: 15, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 64, elements: !216)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !344, file: !350, line: 24, type: !524, isLocal: true, isDefinition: true)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !515, line: 10, size: 32, elements: !525)
!525 = !{!526, !527, !528}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !524, file: !515, line: 11, baseType: !166, size: 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !524, file: !515, line: 12, baseType: !166, size: 8, offset: 8)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !524, file: !515, line: 13, baseType: !181, size: 16, offset: 16)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !344, file: !350, line: 24, type: !531, isLocal: true, isDefinition: true)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 32, elements: !532)
!532 = !{!533}
!533 = !DISubrange(count: 1)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "_zbus_message_data_ready_chan", scope: !344, file: !350, line: 33, type: !536, isLocal: true, isDefinition: true)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !515, line: 21, size: 8, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !536, file: !515, line: 22, baseType: !166, size: 8)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "_zbus_observers_data_ready_chan", scope: !344, file: !350, line: 33, type: !521, isLocal: true, isDefinition: true)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "_zbus_message_ack", scope: !344, file: !350, line: 42, type: !536, isLocal: true, isDefinition: true)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "_zbus_observers_ack", scope: !344, file: !350, line: 42, type: !521, isLocal: true, isDefinition: true)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_producer_sub", scope: !547, file: !554, line: 13, type: !561, isLocal: false, isDefinition: true, align: 32)
!547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !549, globals: !551, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!549 = !{!102, !103, !550, !104, !111, !112}
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!551 = !{!545, !552, !702, !723, !727, !729, !732}
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "producer_sub", scope: !547, file: !554, line: 13, type: !555, isLocal: false, isDefinition: true, align: 32)
!554 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !556)
!556 = !{!557, !558, !594}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !555, file: !119, line: 91, baseType: !122, size: 8)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !555, file: !119, line: 93, baseType: !559, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !560)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !562)
!562 = !{!563, !582, !586, !587, !588, !589, !590, !591, !592, !593}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !561, file: !127, line: 4206, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !565, file: !131, line: 232, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !570)
!570 = !{!571, !577}
!571 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !136, line: 38, baseType: !572, size: 32)
!572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !136, line: 38, size: 32, elements: !573)
!573 = !{!574, !576}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !572, file: !136, line: 39, baseType: !575, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !572, file: !136, line: 40, baseType: !575, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !136, line: 42, baseType: !578, size: 32, offset: 32)
!578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !136, line: 42, size: 32, elements: !579)
!579 = !{!580, !581}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !578, file: !136, line: 43, baseType: !575, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !578, file: !136, line: 44, baseType: !575, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !561, file: !127, line: 4208, baseType: !583, size: 32, offset: 64)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !584)
!584 = !{!585}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !583, file: !152, line: 52, baseType: !22, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !561, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !561, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !561, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !561, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !561, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !561, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !561, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !561, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !555, file: !119, line: 96, baseType: !595, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!597 = !DISubroutineType(types: !598)
!598 = !{null, !599}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !602)
!602 = !{!603, !604, !605, !606, !607, !608, !697}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !119, line: 32, baseType: !178, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !601, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !601, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !601, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !601, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !601, file: !119, line: 56, baseType: !609, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !611)
!611 = !{!612, !613, !695, !696}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !610, file: !127, line: 2722, baseType: !564, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !610, file: !127, line: 2724, baseType: !614, size: 32, offset: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !616)
!616 = !{!617, !657, !669, !670, !671, !672, !678, !690}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !615, file: !199, line: 247, baseType: !618, size: 384)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !619)
!619 = !{!620, !631, !633, !634, !635, !644, !645, !646}
!620 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !199, line: 60, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !199, line: 60, size: 64, elements: !622)
!622 = !{!623, !625}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !621, file: !199, line: 61, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !569)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !621, file: !199, line: 62, baseType: !626, size: 64)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !627)
!627 = !{!628}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !626, file: !211, line: 50, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 64, elements: !216)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !618, file: !199, line: 68, baseType: !632, size: 32, offset: 64)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !618, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !618, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!635 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !199, line: 90, baseType: !636, size: 16, offset: 112)
!636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !199, line: 90, size: 16, elements: !637)
!637 = !{!638, !643}
!638 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !199, line: 91, baseType: !639, size: 16)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !199, line: 91, size: 16, elements: !640)
!640 = !{!641, !642}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !639, file: !199, line: 96, baseType: !229, size: 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !639, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !636, file: !199, line: 100, baseType: !181, size: 16)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !618, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !618, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !618, file: !199, line: 131, baseType: !647, size: 192, offset: 192)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !648)
!648 = !{!649, !650, !656}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !647, file: !131, line: 245, baseType: !624, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !647, file: !131, line: 246, baseType: !651, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !652)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DISubroutineType(types: !654)
!654 = !{null, !655}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !647, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !615, file: !199, line: 250, baseType: !658, size: 288, offset: 384)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667, !668}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !658, file: !248, line: 26, baseType: !111, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !658, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !658, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !658, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !658, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !658, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !658, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !658, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !658, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !615, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !615, file: !199, line: 256, baseType: !564, size: 64, offset: 704)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !615, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !615, file: !199, line: 300, baseType: !673, size: 96, offset: 800)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !673, file: !199, line: 153, baseType: !22, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !673, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !673, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !615, file: !199, line: 325, baseType: !679, size: 32, offset: 896)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !681)
!681 = !{!682, !688, !689}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !680, file: !127, line: 5074, baseType: !683, size: 96)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !684)
!684 = !{!685, !686, !687}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !683, file: !274, line: 57, baseType: !277, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !683, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !683, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !680, file: !127, line: 5075, baseType: !564, size: 64, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !680, file: !127, line: 5076, baseType: !583, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !615, file: !199, line: 343, baseType: !691, size: 64, offset: 928)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !692)
!692 = !{!693, !694}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !691, file: !248, line: 63, baseType: !111, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !691, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !610, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !610, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !601, file: !119, line: 67, baseType: !698, size: 32, offset: 192)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !547, file: !554, line: 40, type: !704, isLocal: false, isDefinition: true, align: 32)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !705)
!705 = !{!706, !707, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !704, file: !127, line: 621, baseType: !614, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !704, file: !127, line: 622, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !711)
!711 = !{!712}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !710, file: !305, line: 48, baseType: !110, size: 8)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !704, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !704, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !704, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !704, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !704, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !704, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !704, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !704, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !704, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !704, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !547, file: !554, line: 40, type: !725, isLocal: false, isDefinition: true)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !614)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_producer_sub", scope: !547, file: !554, line: 13, type: !332, isLocal: true, isDefinition: true, align: 32)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !547, file: !554, line: 40, type: !731, isLocal: false, isDefinition: true, align: 512)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !710, size: 8704, elements: !338)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !547, file: !554, line: 40, type: !615, isLocal: false, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !736, file: !750, line: 18, type: !751, isLocal: false, isDefinition: true)
!736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !738, globals: !749, splitDebugInlining: false, nameTableKind: None)
!737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!738 = !{!22, !102, !24, !739, !741, !743, !156, !103, !744, !745, !747, !748, !160, !550, !181, !108}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!742 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!749 = !{!734}
!750 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !754)
!753 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !752, file: !753, line: 17, baseType: !108, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !752, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "_char_out", scope: !759, file: !762, line: 54, type: !763, isLocal: false, isDefinition: true)
!759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !761, splitDebugInlining: false, nameTableKind: None)
!760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!761 = !{!757}
!762 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DISubroutineType(types: !765)
!765 = !{!103, !103}
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !768, file: !785, line: 56, type: !786, isLocal: true, isDefinition: true, align: 32)
!768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !770, globals: !784, splitDebugInlining: false, nameTableKind: None)
!769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !773, line: 407, baseType: !774)
!773 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 398, size: 224, elements: !775)
!775 = !{!776, !778, !779, !780, !781, !782, !783}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !774, file: !773, line: 400, baseType: !777, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !111)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !774, file: !773, line: 401, baseType: !777, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !774, file: !773, line: 402, baseType: !777, size: 32, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !774, file: !773, line: 403, baseType: !777, size: 32, offset: 96)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !774, file: !773, line: 404, baseType: !777, size: 32, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !774, file: !773, line: 405, baseType: !777, size: 32, offset: 160)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !774, file: !773, line: 406, baseType: !777, size: 32, offset: 192)
!784 = !{!766}
!785 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !789)
!788 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!789 = !{!790, !815}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !787, file: !788, line: 60, baseType: !791, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!792 = !DISubroutineType(types: !793)
!793 = !{!103, !794}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !798)
!797 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!798 = !{!799, !800, !801, !802, !808, !809}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !796, file: !797, line: 380, baseType: !108, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !796, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !796, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !796, file: !797, line: 386, baseType: !803, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !804, file: !797, line: 359, baseType: !166, size: 8)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !804, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !796, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !796, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !812)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !797, line: 43, baseType: !813)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !814)
!814 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !787, file: !788, line: 65, baseType: !794, size: 32, offset: 32)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !818, file: !821, line: 71, type: !822, isLocal: true, isDefinition: true, align: 32)
!818 = distinct !DICompileUnit(language: DW_LANG_C99, file: !819, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !820, splitDebugInlining: false, nameTableKind: None)
!819 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!820 = !{!816}
!821 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !824)
!824 = !{!825, !844}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !823, file: !788, line: 60, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!827 = !DISubroutineType(types: !828)
!828 = !{!103, !829}
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !832)
!832 = !{!833, !834, !835, !836, !842, !843}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !831, file: !797, line: 380, baseType: !108, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !831, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !831, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !831, file: !797, line: 386, baseType: !837, size: 32, offset: 96)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !838, file: !797, line: 359, baseType: !166, size: 8)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !838, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !831, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !831, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !823, file: !788, line: 65, baseType: !829, size: 32, offset: 32)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !847, file: !854, line: 17, type: !980, isLocal: false, isDefinition: true)
!847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !849, globals: !850, splitDebugInlining: false, nameTableKind: None)
!848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!849 = !{!156, !103, !111, !102}
!850 = !{!845, !851, !976}
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !853, file: !854, line: 198, type: !964, isLocal: true, isDefinition: true)
!853 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !854, file: !854, line: 175, type: !855, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !847, retainedNodes: !959)
!854 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!855 = !DISubroutineType(types: !856)
!856 = !{null, !857}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !859)
!859 = !{!860, !918, !930, !931, !932, !933, !939, !954}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !858, file: !199, line: 247, baseType: !861, size: 384)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !862)
!862 = !{!863, !887, !894, !895, !896, !905, !906, !907}
!863 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !199, line: 60, baseType: !864, size: 64)
!864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !199, line: 60, size: 64, elements: !865)
!865 = !{!866, !881}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !864, file: !199, line: 61, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !869)
!869 = !{!870, !876}
!870 = !DIDerivedType(tag: DW_TAG_member, scope: !868, file: !136, line: 38, baseType: !871, size: 32)
!871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !868, file: !136, line: 38, size: 32, elements: !872)
!872 = !{!873, !875}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !871, file: !136, line: 39, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !871, file: !136, line: 40, baseType: !874, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, scope: !868, file: !136, line: 42, baseType: !877, size: 32, offset: 32)
!877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !868, file: !136, line: 42, size: 32, elements: !878)
!878 = !{!879, !880}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !877, file: !136, line: 43, baseType: !874, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !877, file: !136, line: 44, baseType: !874, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !864, file: !199, line: 62, baseType: !882, size: 64)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !883)
!883 = !{!884}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !882, file: !211, line: 50, baseType: !885, size: 64)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !886, size: 64, elements: !216)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !861, file: !199, line: 68, baseType: !888, size: 32, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !891)
!891 = !{!892}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !890, file: !131, line: 232, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !868)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !861, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !861, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!896 = !DIDerivedType(tag: DW_TAG_member, scope: !861, file: !199, line: 90, baseType: !897, size: 16, offset: 112)
!897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !861, file: !199, line: 90, size: 16, elements: !898)
!898 = !{!899, !904}
!899 = !DIDerivedType(tag: DW_TAG_member, scope: !897, file: !199, line: 91, baseType: !900, size: 16)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !897, file: !199, line: 91, size: 16, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !900, file: !199, line: 96, baseType: !229, size: 8)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !900, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !897, file: !199, line: 100, baseType: !181, size: 16)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !861, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !861, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !861, file: !199, line: 131, baseType: !908, size: 192, offset: 192)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !909)
!909 = !{!910, !911, !917}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !908, file: !131, line: 245, baseType: !867, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !908, file: !131, line: 246, baseType: !912, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !916}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !908, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !858, file: !199, line: 250, baseType: !919, size: 288, offset: 384)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927, !928, !929}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !919, file: !248, line: 26, baseType: !111, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !919, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !919, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !919, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !919, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !919, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !919, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !919, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !919, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !858, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !858, file: !199, line: 256, baseType: !889, size: 64, offset: 704)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !858, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !858, file: !199, line: 300, baseType: !934, size: 96, offset: 800)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !935)
!935 = !{!936, !937, !938}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !934, file: !199, line: 153, baseType: !22, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !934, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !934, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !858, file: !199, line: 325, baseType: !940, size: 32, offset: 896)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !942)
!942 = !{!943, !949, !950}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !941, file: !127, line: 5074, baseType: !944, size: 96)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !944, file: !274, line: 57, baseType: !277, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !944, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !944, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !941, file: !127, line: 5075, baseType: !889, size: 64, offset: 96)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !941, file: !127, line: 5076, baseType: !951, size: 32, offset: 160)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !952)
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !951, file: !152, line: 52, baseType: !22, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !858, file: !199, line: 343, baseType: !955, size: 64, offset: 928)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !955, file: !248, line: 63, baseType: !111, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !955, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!959 = !{!960, !961, !962, !963}
!960 = !DILocalVariable(name: "thread", arg: 1, scope: !853, file: !854, line: 175, type: !857)
!961 = !DILocalVariable(name: "region_num", scope: !853, file: !854, line: 200, type: !166)
!962 = !DILocalVariable(name: "guard_start", scope: !853, file: !854, line: 265, type: !22)
!963 = !DILocalVariable(name: "guard_size", scope: !853, file: !854, line: 266, type: !156)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 96, elements: !532)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !966, line: 52, size: 96, elements: !967)
!966 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!967 = !{!968, !969, !970}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !965, file: !966, line: 53, baseType: !22, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !965, file: !966, line: 54, baseType: !156, size: 32, offset: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !965, file: !966, line: 55, baseType: !971, size: 32, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !972, line: 151, baseType: !973)
!972 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !972, line: 149, size: 32, elements: !974)
!974 = !{!975}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !973, file: !972, line: 150, baseType: !111, size: 32)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "static_regions", scope: !847, file: !854, line: 62, type: !978, isLocal: true, isDefinition: true)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 96, elements: !532)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !981, file: !753, line: 17, baseType: !108, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !981, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !987, file: !1020, line: 39, type: !166, isLocal: true, isDefinition: true)
!987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !989, globals: !1019, splitDebugInlining: false, nameTableKind: None)
!988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!989 = !{!990, !102, !103, !1007, !166}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !992, line: 1226, baseType: !993)
!992 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 1213, size: 352, elements: !994)
!994 = !{!995, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !993, file: !992, line: 1215, baseType: !996, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !993, file: !992, line: 1216, baseType: !777, size: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !993, file: !992, line: 1217, baseType: !777, size: 32, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !993, file: !992, line: 1218, baseType: !777, size: 32, offset: 96)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !993, file: !992, line: 1219, baseType: !777, size: 32, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !993, file: !992, line: 1220, baseType: !777, size: 32, offset: 160)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !993, file: !992, line: 1221, baseType: !777, size: 32, offset: 192)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !993, file: !992, line: 1222, baseType: !777, size: 32, offset: 224)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !993, file: !992, line: 1223, baseType: !777, size: 32, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !993, file: !992, line: 1224, baseType: !777, size: 32, offset: 288)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !993, file: !992, line: 1225, baseType: !777, size: 32, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1010, line: 27, size: 96, elements: !1011)
!1010 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1011 = !{!1012, !1013, !1014}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1009, file: !1010, line: 29, baseType: !111, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1009, file: !1010, line: 31, baseType: !108, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1009, file: !1010, line: 37, baseType: !1015, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !972, line: 146, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !972, line: 141, size: 32, elements: !1017)
!1017 = !{!1018}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1016, file: !972, line: 143, baseType: !111, size: 32)
!1019 = !{!985}
!1020 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1023, file: !1030, line: 21, type: !763, isLocal: true, isDefinition: true)
!1023 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1024, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1025, globals: !1029, splitDebugInlining: false, nameTableKind: None)
!1024 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1025 = !{!1026, !103, !102}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1028, line: 22, baseType: !103)
!1028 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1029 = !{!1021}
!1030 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !1033, file: !1038, line: 13, type: !1055, isLocal: true, isDefinition: true)
!1033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1034, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1035, splitDebugInlining: false, nameTableKind: None)
!1034 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1035 = !{!1036, !1031}
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "mpu_config", scope: !1033, file: !1038, line: 37, type: !1039, isLocal: false, isDefinition: true)
!1038 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !1010, line: 41, size: 64, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !1040, file: !1010, line: 43, baseType: !111, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !1040, file: !1010, line: 45, baseType: !1044, size: 32, offset: 32)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1010, line: 27, size: 96, elements: !1047)
!1047 = !{!1048, !1049, !1050}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1046, file: !1010, line: 29, baseType: !111, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1046, file: !1010, line: 31, baseType: !108, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1046, file: !1010, line: 37, baseType: !1051, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !972, line: 146, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !972, line: 141, size: 32, elements: !1053)
!1053 = !{!1054}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1052, file: !972, line: 143, baseType: !111, size: 32)
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1045, size: 192, elements: !216)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1058, file: !1062, line: 10, type: !1063, isLocal: false, isDefinition: true)
!1058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1060, globals: !1061, splitDebugInlining: false, nameTableKind: None)
!1059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1060 = !{!104, !102, !103}
!1061 = !{!1056}
!1062 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !1065)
!1065 = !{!1066, !1067}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1064, file: !753, line: 17, baseType: !108, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1064, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !1070, file: !1183, line: 72, type: !1266, isLocal: true, isDefinition: true)
!1070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1072, retainedTypes: !1169, globals: !1180, splitDebugInlining: false, nameTableKind: None)
!1071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1072 = !{!30, !1073}
!1073 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !773, line: 65, baseType: !103, size: 32, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1075 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1076 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1077 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1078 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1079 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1080 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1081 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1082 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1083 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1084 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1085 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!1086 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1087 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1088 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1089 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1090 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1091 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1092 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1093 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1094 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1095 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1096 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1097 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1098 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1099 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1100 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1101 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1102 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!1103 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!1104 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!1105 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!1106 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1107 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1108 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1109 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1110 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1111 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1112 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1113 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1114 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1115 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1116 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1117 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1118 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1119 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1120 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1121 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1122 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1123 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1124 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1125 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1126 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!1127 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!1128 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!1129 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!1130 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1131 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!1132 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1133 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1134 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1135 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!1136 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!1137 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!1138 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!1139 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1140 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1141 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1142 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1143 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1144 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!1145 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!1146 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!1147 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!1148 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1149 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1150 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1151 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1152 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1153 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1154 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1155 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!1156 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!1157 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!1158 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!1159 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!1160 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1161 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!1162 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!1163 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!1164 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!1165 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!1166 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!1167 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!1168 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!1169 = !{!156, !103, !102, !1170}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !773, line: 392, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 384, size: 192, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1178, !1179}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1172, file: !773, line: 386, baseType: !777, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1172, file: !773, line: 387, baseType: !777, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1172, file: !773, line: 388, baseType: !777, size: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1172, file: !773, line: 389, baseType: !777, size: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1172, file: !773, line: 390, baseType: !777, size: 32, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1172, file: !773, line: 391, baseType: !777, size: 32, offset: 160)
!1180 = !{!1181, !1187, !1203, !1214, !1231, !1068, !1233, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264}
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1070, file: !1183, line: 424, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1183 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 64, elements: !1185)
!1185 = !{!1186}
!1186 = !DISubrange(count: 4)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1070, file: !1183, line: 424, type: !1189, isLocal: false, isDefinition: true, align: 32)
!1189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1201, !1202}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1190, file: !797, line: 380, baseType: !108, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1190, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1190, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1190, file: !797, line: 386, baseType: !1196, size: 32, offset: 96)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1198)
!1198 = !{!1199, !1200}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1197, file: !797, line: 359, baseType: !166, size: 8)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1197, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1190, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1190, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1070, file: !1183, line: 424, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1207)
!1207 = !{!1208, !1213}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1206, file: !788, line: 60, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!103, !1212}
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1206, file: !788, line: 65, baseType: !1212, size: 32, offset: 32)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "exti_data", scope: !1070, file: !1183, line: 423, type: !1216, isLocal: true, isDefinition: true)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1183, line: 107, size: 1472, elements: !1217)
!1217 = !{!1218}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1216, file: !1183, line: 109, baseType: !1219, size: 1472)
!1219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1220, size: 1472, elements: !1229)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1183, line: 101, size: 64, elements: !1221)
!1221 = !{!1222, !1228}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1220, file: !1183, line: 102, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1224, line: 63, baseType: !1225)
!1224 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{null, !103, !102}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1220, file: !1183, line: 103, baseType: !102, size: 32, offset: 32)
!1229 = !{!1230}
!1230 = !DISubrange(count: 23)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1070, file: !1183, line: 424, type: !1197, isLocal: true, isDefinition: true, align: 8)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1235, file: !1183, line: 493, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1235 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1183, file: !1183, line: 460, type: !1236, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !1238)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !1212}
!1238 = !{!1239}
!1239 = !DILocalVariable(name: "dev", arg: 1, scope: !1235, file: !1183, line: 460, type: !1212)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1240, file: !10, line: 55, baseType: !320, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1240, file: !10, line: 57, baseType: !320, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1240, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1240, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1235, file: !1183, line: 497, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1235, file: !1183, line: 507, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1235, file: !1183, line: 512, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1235, file: !1183, line: 516, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1235, file: !1183, line: 523, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1235, file: !1183, line: 527, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1235, file: !1183, line: 581, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1235, file: !1183, line: 586, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1235, file: !1183, line: 591, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1235, file: !1183, line: 595, type: !1240, isLocal: true, isDefinition: true, align: 32)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 736, elements: !1229)
!1267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !773, line: 163, baseType: !1073)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1271, file: !1276, line: 25, type: !1304, isLocal: false, isDefinition: true, align: 16)
!1271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1273, splitDebugInlining: false, nameTableKind: None)
!1272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1273 = !{!1274, !1269, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302}
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1271, file: !1276, line: 20, type: !1277, isLocal: false, isDefinition: true, align: 16)
!1276 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 240, elements: !1278)
!1278 = !{!1279}
!1279 = !DISubrange(count: 15)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1271, file: !1276, line: 32, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1271, file: !1276, line: 39, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1271, file: !1276, line: 46, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1271, file: !1276, line: 53, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1271, file: !1276, line: 60, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1271, file: !1276, line: 67, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1271, file: !1276, line: 74, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1271, file: !1276, line: 81, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1271, file: !1276, line: 88, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1271, file: !1276, line: 95, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1271, file: !1276, line: 102, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1271, file: !1276, line: 109, type: !1184, isLocal: false, isDefinition: true, align: 16)
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 48, elements: !1305)
!1305 = !{!1306}
!1306 = !DISubrange(count: 3)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1309, file: !1374, line: 398, type: !1407, isLocal: true, isDefinition: true)
!1309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1311, retainedTypes: !1324, globals: !1371, splitDebugInlining: false, nameTableKind: None)
!1310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1311 = !{!1312, !30, !1317}
!1312 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1313, line: 197, baseType: !32, size: 32, elements: !1314)
!1313 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1314 = !{!1315, !1316}
!1315 = !DIEnumerator(name: "SUCCESS", value: 0)
!1316 = !DIEnumerator(name: "ERROR", value: 1)
!1317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1318, line: 44, baseType: !32, size: 32, elements: !1319)
!1318 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1319 = !{!1320, !1321, !1322, !1323}
!1320 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1321 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1322 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1323 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1324 = !{!102, !103, !111, !1325, !1364, !1370}
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 586, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 550, size: 1216, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1327, file: !773, line: 552, baseType: !777, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1327, file: !773, line: 553, baseType: !777, size: 32, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1327, file: !773, line: 554, baseType: !777, size: 32, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1327, file: !773, line: 555, baseType: !777, size: 32, offset: 96)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1327, file: !773, line: 556, baseType: !777, size: 32, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1327, file: !773, line: 557, baseType: !777, size: 32, offset: 160)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1327, file: !773, line: 558, baseType: !777, size: 32, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1327, file: !773, line: 559, baseType: !111, size: 32, offset: 224)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1327, file: !773, line: 560, baseType: !777, size: 32, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1327, file: !773, line: 561, baseType: !777, size: 32, offset: 288)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1327, file: !773, line: 562, baseType: !1340, size: 64, offset: 320)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 64, elements: !216)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1327, file: !773, line: 563, baseType: !777, size: 32, offset: 384)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1327, file: !773, line: 564, baseType: !777, size: 32, offset: 416)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1327, file: !773, line: 565, baseType: !777, size: 32, offset: 448)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1327, file: !773, line: 566, baseType: !111, size: 32, offset: 480)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1327, file: !773, line: 567, baseType: !777, size: 32, offset: 512)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1327, file: !773, line: 568, baseType: !777, size: 32, offset: 544)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1327, file: !773, line: 569, baseType: !1340, size: 64, offset: 576)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1327, file: !773, line: 570, baseType: !777, size: 32, offset: 640)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1327, file: !773, line: 571, baseType: !777, size: 32, offset: 672)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1327, file: !773, line: 572, baseType: !777, size: 32, offset: 704)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1327, file: !773, line: 573, baseType: !111, size: 32, offset: 736)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1327, file: !773, line: 574, baseType: !777, size: 32, offset: 768)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1327, file: !773, line: 575, baseType: !777, size: 32, offset: 800)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1327, file: !773, line: 576, baseType: !1340, size: 64, offset: 832)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1327, file: !773, line: 577, baseType: !777, size: 32, offset: 896)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1327, file: !773, line: 578, baseType: !777, size: 32, offset: 928)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1327, file: !773, line: 579, baseType: !1340, size: 64, offset: 960)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1327, file: !773, line: 580, baseType: !777, size: 32, offset: 1024)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1327, file: !773, line: 581, baseType: !777, size: 32, offset: 1056)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1327, file: !773, line: 582, baseType: !777, size: 32, offset: 1088)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1327, file: !773, line: 583, baseType: !777, size: 32, offset: 1120)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1327, file: !773, line: 584, baseType: !777, size: 32, offset: 1152)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1327, file: !773, line: 585, baseType: !777, size: 32, offset: 1184)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 32)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1366, line: 343, size: 64, elements: !1367)
!1366 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1367 = !{!1368, !1369}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1365, file: !1366, line: 344, baseType: !111, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1365, file: !1366, line: 345, baseType: !111, size: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!1371 = !{!1372, !1378, !1394, !1405, !1307}
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1309, file: !1374, line: 752, type: !1375, isLocal: false, isDefinition: true, align: 16)
!1374 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 800, elements: !1376)
!1376 = !{!1377}
!1377 = !DISubrange(count: 50)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !1309, file: !1374, line: 752, type: !1380, isLocal: false, isDefinition: true, align: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1392, !1393}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1381, file: !797, line: 380, baseType: !108, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1381, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1381, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1381, file: !797, line: 386, baseType: !1387, size: 32, offset: 96)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1389)
!1389 = !{!1390, !1391}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1388, file: !797, line: 359, baseType: !166, size: 8)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1388, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1381, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1381, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !1309, file: !1374, line: 752, type: !1396, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1397)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1398)
!1398 = !{!1399, !1404}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1397, file: !788, line: 60, baseType: !1400, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!103, !1403}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1397, file: !788, line: 65, baseType: !1403, size: 32, offset: 32)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !1309, file: !1374, line: 752, type: !1388, isLocal: true, isDefinition: true, align: 8)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1318, line: 100, size: 224, elements: !1408)
!1408 = !{!1409, !1415, !1416, !1425, !1430, !1435, !1441}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1407, file: !1318, line: 101, baseType: !1410, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1318, line: 76, baseType: !1411)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!103, !1403, !1414}
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1318, line: 56, baseType: !102)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1407, file: !1318, line: 102, baseType: !1410, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1407, file: !1318, line: 103, baseType: !1417, size: 32, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1318, line: 83, baseType: !1418)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!103, !1403, !1414, !1421, !102}
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1318, line: 72, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{null, !1403, !1414, !102}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1407, file: !1318, line: 104, baseType: !1426, size: 32, offset: 96)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1318, line: 79, baseType: !1427)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!103, !1403, !1414, !1370}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1407, file: !1318, line: 105, baseType: !1431, size: 32, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1318, line: 88, baseType: !1432)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!1317, !1403, !1414}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1407, file: !1318, line: 106, baseType: !1436, size: 32, offset: 160)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1318, line: 92, baseType: !1437)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!103, !1403, !1414, !1440}
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1318, line: 64, baseType: !102)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1407, file: !1318, line: 107, baseType: !1442, size: 32, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1318, line: 96, baseType: !1443)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!103, !1403, !1414, !102}
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1448, file: !1505, line: 603, type: !1507, isLocal: true, isDefinition: true, align: 32)
!1448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1449, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1450, globals: !1502, splitDebugInlining: false, nameTableKind: None)
!1449 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1450 = !{!102, !103, !1451}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1454, line: 336, size: 160, elements: !1455)
!1454 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1455 = !{!1456, !1476, !1480, !1484, !1497}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1453, file: !1454, line: 365, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!103, !1460, !1475}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1473, !1474}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1462, file: !797, line: 380, baseType: !108, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1462, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1462, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1462, file: !797, line: 386, baseType: !1468, size: 32, offset: 96)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1470)
!1470 = !{!1471, !1472}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1469, file: !797, line: 359, baseType: !166, size: 8)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1469, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1462, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1462, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1453, file: !1454, line: 366, baseType: !1477, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{null, !1460, !167}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1453, file: !1454, line: 374, baseType: !1481, size: 32, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!103, !1460}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1453, file: !1454, line: 377, baseType: !1485, size: 32, offset: 96)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!103, !1460, !1488}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1454, line: 122, size: 64, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1490, file: !1454, line: 123, baseType: !111, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1490, file: !1454, line: 124, baseType: !166, size: 8, offset: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1490, file: !1454, line: 125, baseType: !166, size: 8, offset: 40)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1490, file: !1454, line: 126, baseType: !166, size: 8, offset: 48)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1490, file: !1454, line: 127, baseType: !166, size: 8, offset: 56)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1453, file: !1454, line: 379, baseType: !1498, size: 32, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!103, !1460, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1502 = !{!1446, !1503}
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1448, file: !1505, line: 38, type: !1506, isLocal: true, isDefinition: true)
!1505 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1508, file: !788, line: 60, baseType: !1481, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1508, file: !788, line: 65, baseType: !1460, size: 32, offset: 32)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1514, file: !1685, line: 762, type: !1794, isLocal: true, isDefinition: true)
!1514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1516, retainedTypes: !1534, globals: !1682, splitDebugInlining: false, nameTableKind: None)
!1515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1516 = !{!30, !1517, !1523, !1528, !1317}
!1517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1518, line: 506, baseType: !32, size: 32, elements: !1519)
!1518 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1519 = !{!1520, !1521, !1522}
!1520 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1521 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1522 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1523 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1518, line: 512, baseType: !32, size: 32, elements: !1524)
!1524 = !{!1525, !1526, !1527}
!1525 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1526 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1527 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1528 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1224, line: 43, baseType: !32, size: 32, elements: !1529)
!1529 = !{!1530, !1531, !1532, !1533}
!1530 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1531 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1532 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1533 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1534 = !{!102, !103, !1535, !1605, !1610, !1570, !1523, !1517, !1615, !1616, !111, !1630, !1585, !160, !1642, !1643}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1518, line: 523, size: 288, elements: !1538)
!1538 = !{!1539, !1560, !1566, !1571, !1575, !1576, !1577, !1581, !1601}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1537, file: !1518, line: 524, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!103, !1543, !1558, !1559}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550, !1556, !1557}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1545, file: !797, line: 380, baseType: !108, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1545, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1545, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1545, file: !797, line: 386, baseType: !1551, size: 32, offset: 96)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1553)
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1552, file: !797, line: 359, baseType: !166, size: 8)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1552, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1545, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1545, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1518, line: 237, baseType: !166)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1518, line: 257, baseType: !111)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1537, file: !1518, line: 530, baseType: !1561, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!103, !1543, !1564}
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1518, line: 229, baseType: !111)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1537, file: !1518, line: 532, baseType: !1567, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!103, !1543, !1570, !1565}
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1518, line: 216, baseType: !111)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1537, file: !1518, line: 535, baseType: !1572, size: 32, offset: 96)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!103, !1543, !1570}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1537, file: !1518, line: 537, baseType: !1572, size: 32, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1537, file: !1518, line: 539, baseType: !1572, size: 32, offset: 160)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1537, file: !1518, line: 541, baseType: !1578, size: 32, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!103, !1543, !1558, !1517, !1523}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1537, file: !1518, line: 544, baseType: !1582, size: 32, offset: 224)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!103, !1543, !1585, !122}
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1518, line: 478, size: 96, elements: !1587)
!1587 = !{!1588, !1595, !1600}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1586, file: !1518, line: 482, baseType: !1589, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1590, line: 33, baseType: !1591)
!1590 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1590, line: 29, size: 32, elements: !1592)
!1592 = !{!1593}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1591, file: !1590, line: 30, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1586, file: !1518, line: 485, baseType: !1596, size: 32, offset: 32)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1518, line: 464, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{null, !1543, !1585, !1570}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1586, file: !1518, line: 493, baseType: !1570, size: 32, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1537, file: !1518, line: 547, baseType: !1602, size: 32, offset: 256)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!111, !1543}
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1518, line: 428, size: 32, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1607, file: !1518, line: 434, baseType: !1570, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1518, line: 441, size: 32, elements: !1613)
!1613 = !{!1614}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1612, file: !1518, line: 447, baseType: !1570, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !773, line: 469, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 458, size: 320, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1618, file: !773, line: 460, baseType: !777, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1618, file: !773, line: 461, baseType: !777, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1618, file: !773, line: 462, baseType: !777, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1618, file: !773, line: 463, baseType: !777, size: 32, offset: 96)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1618, file: !773, line: 464, baseType: !777, size: 32, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1618, file: !773, line: 465, baseType: !777, size: 32, offset: 160)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1618, file: !773, line: 466, baseType: !777, size: 32, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1618, file: !773, line: 467, baseType: !777, size: 32, offset: 224)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1618, file: !773, line: 468, baseType: !1629, size: 64, offset: 256)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 64, elements: !216)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !773, line: 484, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 475, size: 384, elements: !1633)
!1633 = !{!1634, !1635, !1636, !1638, !1639, !1640, !1641}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1632, file: !773, line: 477, baseType: !777, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1632, file: !773, line: 478, baseType: !777, size: 32, offset: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1632, file: !773, line: 479, baseType: !1637, size: 128, offset: 64)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 128, elements: !1185)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1632, file: !773, line: 480, baseType: !1340, size: 64, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1632, file: !773, line: 481, baseType: !777, size: 32, offset: 256)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1632, file: !773, line: 482, baseType: !1340, size: 64, offset: 288)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1632, file: !773, line: 483, baseType: !777, size: 32, offset: 352)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1318, line: 100, size: 224, elements: !1646)
!1646 = !{!1647, !1652, !1653, !1662, !1667, !1672, !1677}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1645, file: !1318, line: 101, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1318, line: 76, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!103, !1543, !1414}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1645, file: !1318, line: 102, baseType: !1648, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1645, file: !1318, line: 103, baseType: !1654, size: 32, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1318, line: 83, baseType: !1655)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!103, !1543, !1414, !1658, !102}
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1318, line: 72, baseType: !1659)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{null, !1543, !1414, !102}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1645, file: !1318, line: 104, baseType: !1663, size: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1318, line: 79, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!103, !1543, !1414, !1370}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1645, file: !1318, line: 105, baseType: !1668, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1318, line: 88, baseType: !1669)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{!1317, !1543, !1414}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1645, file: !1318, line: 106, baseType: !1673, size: 32, offset: 160)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1318, line: 92, baseType: !1674)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 32)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!103, !1543, !1414, !1440}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1645, file: !1318, line: 107, baseType: !1678, size: 32, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1318, line: 96, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!103, !1543, !1414, !102}
!1682 = !{!1683, !1689, !1691, !1701, !1703, !1705, !1707, !1709, !1711, !1713, !1718, !1720, !1722, !1724, !1726, !1728, !1730, !1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746, !1760, !1762, !1764, !1766, !1768, !1770, !1772, !1774, !1776, !1778, !1780, !1782, !1784, !1786, !1788, !1512, !1790, !1792, !1805, !1807, !1809, !1811, !1813, !1815}
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1514, file: !1685, line: 762, type: !1686, isLocal: false, isDefinition: true, align: 16)
!1685 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 80, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 5)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1514, file: !1685, line: 762, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1514, file: !1685, line: 762, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1695)
!1695 = !{!1696, !1700}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1694, file: !788, line: 60, baseType: !1697, size: 32)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!103, !1543}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1694, file: !788, line: 65, baseType: !1543, size: 32, offset: 32)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1514, file: !1685, line: 766, type: !1686, isLocal: false, isDefinition: true, align: 16)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1514, file: !1685, line: 766, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1514, file: !1685, line: 766, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1514, file: !1685, line: 770, type: !1686, isLocal: false, isDefinition: true, align: 16)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1514, file: !1685, line: 770, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1514, file: !1685, line: 770, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1514, file: !1685, line: 774, type: !1715, isLocal: false, isDefinition: true, align: 16)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 144, elements: !1716)
!1716 = !{!1717}
!1717 = !DISubrange(count: 9)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1514, file: !1685, line: 774, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1514, file: !1685, line: 774, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1514, file: !1685, line: 778, type: !1686, isLocal: false, isDefinition: true, align: 16)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1514, file: !1685, line: 778, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1514, file: !1685, line: 778, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1514, file: !1685, line: 782, type: !1686, isLocal: false, isDefinition: true, align: 16)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1514, file: !1685, line: 782, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1514, file: !1685, line: 782, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1514, file: !1685, line: 786, type: !1686, isLocal: false, isDefinition: true, align: 16)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1514, file: !1685, line: 786, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1514, file: !1685, line: 786, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1514, file: !1685, line: 790, type: !1686, isLocal: false, isDefinition: true, align: 16)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1514, file: !1685, line: 790, type: !1544, isLocal: false, isDefinition: true, align: 32)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1514, file: !1685, line: 790, type: !1693, isLocal: true, isDefinition: true, align: 32)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1514, file: !1685, line: 762, type: !1748, isLocal: true, isDefinition: true)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1749, line: 237, size: 128, elements: !1750)
!1749 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1750 = !{!1751, !1752, !1753}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1748, file: !1749, line: 239, baseType: !1612, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1748, file: !1749, line: 241, baseType: !1543, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1748, file: !1749, line: 243, baseType: !1754, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1590, line: 40, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1590, line: 35, size: 64, elements: !1756)
!1756 = !{!1757, !1759}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1755, file: !1590, line: 36, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1755, file: !1590, line: 37, baseType: !1758, size: 32, offset: 32)
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1514, file: !1685, line: 762, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression())
!1763 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1514, file: !1685, line: 766, type: !1748, isLocal: true, isDefinition: true)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1514, file: !1685, line: 766, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1514, file: !1685, line: 770, type: !1748, isLocal: true, isDefinition: true)
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1514, file: !1685, line: 770, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1770 = !DIGlobalVariableExpression(var: !1771, expr: !DIExpression())
!1771 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1514, file: !1685, line: 774, type: !1748, isLocal: true, isDefinition: true)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1514, file: !1685, line: 774, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1514, file: !1685, line: 778, type: !1748, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1514, file: !1685, line: 778, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1514, file: !1685, line: 782, type: !1748, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1514, file: !1685, line: 782, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1514, file: !1685, line: 786, type: !1748, isLocal: true, isDefinition: true)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1514, file: !1685, line: 786, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1514, file: !1685, line: 790, type: !1748, isLocal: true, isDefinition: true)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1514, file: !1685, line: 790, type: !1552, isLocal: true, isDefinition: true, align: 8)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1514, file: !1685, line: 656, type: !1536, isLocal: true, isDefinition: true)
!1792 = !DIGlobalVariableExpression(var: !1793, expr: !DIExpression())
!1793 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1514, file: !1685, line: 766, type: !1794, isLocal: true, isDefinition: true)
!1794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1795)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1749, line: 224, size: 160, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1795, file: !1749, line: 226, baseType: !1607, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1795, file: !1749, line: 228, baseType: !1370, size: 32, offset: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1795, file: !1749, line: 230, baseType: !103, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1795, file: !1749, line: 231, baseType: !1801, size: 64, offset: 96)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1366, line: 343, size: 64, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1801, file: !1366, line: 344, baseType: !111, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1801, file: !1366, line: 345, baseType: !111, size: 32, offset: 32)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1514, file: !1685, line: 770, type: !1794, isLocal: true, isDefinition: true)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1514, file: !1685, line: 774, type: !1794, isLocal: true, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1514, file: !1685, line: 778, type: !1794, isLocal: true, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1514, file: !1685, line: 782, type: !1794, isLocal: true, isDefinition: true)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1514, file: !1685, line: 786, type: !1794, isLocal: true, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1514, file: !1685, line: 790, type: !1794, isLocal: true, isDefinition: true)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1819, file: !1958, line: 44, type: !2096, isLocal: false, isDefinition: true)
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1821, retainedTypes: !1854, globals: !1955, splitDebugInlining: false, nameTableKind: None)
!1820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!1821 = !{!30, !1822, !1829, !1836, !1843, !1849, !1317}
!1822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1454, line: 47, baseType: !32, size: 32, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827, !1828}
!1824 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1825 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1826 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1827 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1828 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1454, line: 75, baseType: !32, size: 32, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835}
!1831 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1832 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1833 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1834 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1835 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1836 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1454, line: 92, baseType: !32, size: 32, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841, !1842}
!1838 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1839 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1840 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1841 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1842 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1843 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1454, line: 84, baseType: !32, size: 32, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848}
!1845 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1846 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1847 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1848 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1849 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1454, line: 107, baseType: !32, size: 32, elements: !1850)
!1850 = !{!1851, !1852, !1853}
!1851 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1852 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1853 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1854 = !{!102, !103, !1855, !167, !166, !1904, !111, !1414, !1915, !181, !112, !1954}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1454, line: 336, size: 160, elements: !1858)
!1858 = !{!1859, !1878, !1882, !1886, !1899}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1857, file: !1454, line: 365, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!103, !1863, !1475}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1876, !1877}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1865, file: !797, line: 380, baseType: !108, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1865, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1865, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1865, file: !797, line: 386, baseType: !1871, size: 32, offset: 96)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1872, file: !797, line: 359, baseType: !166, size: 8)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1872, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1865, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1865, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1857, file: !1454, line: 366, baseType: !1879, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1863, !167}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1857, file: !1454, line: 374, baseType: !1883, size: 32, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!103, !1863}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1857, file: !1454, line: 377, baseType: !1887, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!103, !1863, !1890}
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1892)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1454, line: 122, size: 64, elements: !1893)
!1893 = !{!1894, !1895, !1896, !1897, !1898}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1892, file: !1454, line: 123, baseType: !111, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1892, file: !1454, line: 124, baseType: !166, size: 8, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1892, file: !1454, line: 125, baseType: !166, size: 8, offset: 40)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1892, file: !1454, line: 126, baseType: !166, size: 8, offset: 48)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1892, file: !1454, line: 127, baseType: !166, size: 8, offset: 56)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1857, file: !1454, line: 379, baseType: !1900, size: 32, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!103, !1863, !1903}
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !773, line: 783, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 774, size: 224, elements: !1907)
!1907 = !{!1908, !1909, !1910, !1911, !1912, !1913, !1914}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1906, file: !773, line: 776, baseType: !777, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1906, file: !773, line: 777, baseType: !777, size: 32, offset: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1906, file: !773, line: 778, baseType: !777, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1906, file: !773, line: 779, baseType: !777, size: 32, offset: 96)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1906, file: !773, line: 780, baseType: !777, size: 32, offset: 128)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1906, file: !773, line: 781, baseType: !777, size: 32, offset: 160)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1906, file: !773, line: 782, baseType: !777, size: 32, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1318, line: 100, size: 224, elements: !1918)
!1918 = !{!1919, !1924, !1925, !1934, !1939, !1944, !1949}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1917, file: !1318, line: 101, baseType: !1920, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1318, line: 76, baseType: !1921)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!103, !1863, !1414}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1917, file: !1318, line: 102, baseType: !1920, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1917, file: !1318, line: 103, baseType: !1926, size: 32, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1318, line: 83, baseType: !1927)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{!103, !1863, !1414, !1930, !102}
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1318, line: 72, baseType: !1931)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{null, !1863, !1414, !102}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1917, file: !1318, line: 104, baseType: !1935, size: 32, offset: 96)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1318, line: 79, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!103, !1863, !1414, !1370}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1917, file: !1318, line: 105, baseType: !1940, size: 32, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1318, line: 88, baseType: !1941)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!1317, !1863, !1414}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1917, file: !1318, line: 106, baseType: !1945, size: 32, offset: 160)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1318, line: 92, baseType: !1946)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!103, !1863, !1414, !1440}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1917, file: !1318, line: 107, baseType: !1950, size: 32, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1318, line: 96, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!103, !1863, !1414, !102}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!1955 = !{!1817, !1956, !1962, !1964, !1971, !1973, !1975, !1977, !1979, !1981, !1983, !1985, !1987, !1989, !1991, !1993, !1995, !1997, !2041, !2044, !2046, !2049, !2052, !2054, !2060, !2062, !2064, !2066, !2068, !2070, !2072, !2074, !2076, !2078, !2080, !2082, !2084, !2086, !2088, !2090, !2092, !2094}
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1819, file: !1958, line: 1914, type: !1959, isLocal: false, isDefinition: true, align: 16)
!1958 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 128, elements: !1960)
!1960 = !{!1961}
!1961 = !DISubrange(count: 8)
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1819, file: !1958, line: 1914, type: !1864, isLocal: false, isDefinition: true, align: 32)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1819, file: !1958, line: 1914, type: !1966, isLocal: true, isDefinition: true, align: 32)
!1966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !1968)
!1968 = !{!1969, !1970}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1967, file: !788, line: 60, baseType: !1883, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1967, file: !788, line: 65, baseType: !1863, size: 32, offset: 32)
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1819, file: !1958, line: 1914, type: !1959, isLocal: false, isDefinition: true, align: 16)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1819, file: !1958, line: 1914, type: !1864, isLocal: false, isDefinition: true, align: 32)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1819, file: !1958, line: 1914, type: !1966, isLocal: true, isDefinition: true, align: 32)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1819, file: !1958, line: 1914, type: !1959, isLocal: false, isDefinition: true, align: 16)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1819, file: !1958, line: 1914, type: !1864, isLocal: false, isDefinition: true, align: 32)
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1819, file: !1958, line: 1914, type: !1966, isLocal: true, isDefinition: true, align: 32)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1819, file: !1958, line: 1914, type: !1959, isLocal: false, isDefinition: true, align: 16)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1819, file: !1958, line: 1914, type: !1864, isLocal: false, isDefinition: true, align: 32)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1819, file: !1958, line: 1914, type: !1966, isLocal: true, isDefinition: true, align: 32)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1819, file: !1958, line: 1914, type: !1872, isLocal: true, isDefinition: true, align: 8)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1819, file: !1958, line: 1914, type: !1872, isLocal: true, isDefinition: true, align: 8)
!1993 = !DIGlobalVariableExpression(var: !1994, expr: !DIExpression())
!1994 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1819, file: !1958, line: 1914, type: !1872, isLocal: true, isDefinition: true, align: 8)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1819, file: !1958, line: 1914, type: !1872, isLocal: true, isDefinition: true, align: 8)
!1997 = !DIGlobalVariableExpression(var: !1998, expr: !DIExpression())
!1998 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1819, file: !1958, line: 1914, type: !1999, isLocal: true, isDefinition: true)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !2001, line: 22, size: 224, elements: !2002)
!2001 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2002 = !{!2003, !2004, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !2000, file: !2001, line: 24, baseType: !1904, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !2000, file: !2001, line: 26, baseType: !2005, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1366, line: 343, size: 64, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2007, file: !1366, line: 344, baseType: !111, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !2007, file: !1366, line: 345, baseType: !111, size: 32, offset: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !2000, file: !2001, line: 28, baseType: !156, size: 32, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !2000, file: !2001, line: 30, baseType: !122, size: 8, offset: 96)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2000, file: !2001, line: 32, baseType: !103, size: 32, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !2000, file: !2001, line: 34, baseType: !122, size: 8, offset: 160)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !2000, file: !2001, line: 36, baseType: !122, size: 8, offset: 168)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !2000, file: !2001, line: 38, baseType: !122, size: 8, offset: 176)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !2000, file: !2001, line: 40, baseType: !122, size: 8, offset: 184)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !2000, file: !2001, line: 41, baseType: !2019, size: 32, offset: 192)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2022, line: 60, size: 64, elements: !2023)
!2022 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2023 = !{!2024, !2040}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2021, file: !2022, line: 69, baseType: !2025, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2022, line: 50, size: 64, elements: !2028)
!2028 = !{!2029, !2038, !2039}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2027, file: !2022, line: 52, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2033, line: 37, baseType: !2034)
!2033 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2033, line: 32, size: 64, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !2034, file: !2033, line: 34, baseType: !111, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !2034, file: !2033, line: 36, baseType: !111, size: 32, offset: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2027, file: !2022, line: 54, baseType: !166, size: 8, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2027, file: !2022, line: 56, baseType: !166, size: 8, offset: 40)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2021, file: !2022, line: 71, baseType: !166, size: 8, offset: 32)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1819, file: !1958, line: 1914, type: !2043, isLocal: true, isDefinition: true)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2006, size: 64, elements: !532)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1819, file: !1958, line: 1914, type: !2020, isLocal: true, isDefinition: true)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1819, file: !1958, line: 1914, type: !2048, isLocal: true, isDefinition: true)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 64, elements: !532)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1819, file: !1958, line: 1914, type: !2051, isLocal: true, isDefinition: true)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2031, size: 128, elements: !216)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1819, file: !1958, line: 1539, type: !1856, isLocal: true, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1819, file: !1958, line: 1914, type: !2056, isLocal: true, isDefinition: true)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !2001, line: 74, size: 64, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !2056, file: !2001, line: 76, baseType: !111, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !2056, file: !2001, line: 78, baseType: !1863, size: 32, offset: 32)
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1819, file: !1958, line: 1914, type: !1999, isLocal: true, isDefinition: true)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1819, file: !1958, line: 1914, type: !2043, isLocal: true, isDefinition: true)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1819, file: !1958, line: 1914, type: !2020, isLocal: true, isDefinition: true)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1819, file: !1958, line: 1914, type: !2048, isLocal: true, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1819, file: !1958, line: 1914, type: !2051, isLocal: true, isDefinition: true)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1819, file: !1958, line: 1914, type: !2056, isLocal: true, isDefinition: true)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1819, file: !1958, line: 1914, type: !1999, isLocal: true, isDefinition: true)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1819, file: !1958, line: 1914, type: !2043, isLocal: true, isDefinition: true)
!2076 = !DIGlobalVariableExpression(var: !2077, expr: !DIExpression())
!2077 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1819, file: !1958, line: 1914, type: !2020, isLocal: true, isDefinition: true)
!2078 = !DIGlobalVariableExpression(var: !2079, expr: !DIExpression())
!2079 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1819, file: !1958, line: 1914, type: !2048, isLocal: true, isDefinition: true)
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1819, file: !1958, line: 1914, type: !2051, isLocal: true, isDefinition: true)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1819, file: !1958, line: 1914, type: !2056, isLocal: true, isDefinition: true)
!2084 = !DIGlobalVariableExpression(var: !2085, expr: !DIExpression())
!2085 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1819, file: !1958, line: 1914, type: !1999, isLocal: true, isDefinition: true)
!2086 = !DIGlobalVariableExpression(var: !2087, expr: !DIExpression())
!2087 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1819, file: !1958, line: 1914, type: !2043, isLocal: true, isDefinition: true)
!2088 = !DIGlobalVariableExpression(var: !2089, expr: !DIExpression())
!2089 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1819, file: !1958, line: 1914, type: !2020, isLocal: true, isDefinition: true)
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1819, file: !1958, line: 1914, type: !2048, isLocal: true, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1819, file: !1958, line: 1914, type: !2051, isLocal: true, isDefinition: true)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1819, file: !1958, line: 1914, type: !2056, isLocal: true, isDefinition: true)
!2096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !2098)
!2098 = !{!2099, !2100}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2097, file: !753, line: 17, baseType: !108, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2097, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!2101 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression())
!2102 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2103, file: !2181, line: 65, type: !777, isLocal: true, isDefinition: true)
!2103 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2104, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2105, retainedTypes: !2106, globals: !2178, splitDebugInlining: false, nameTableKind: None)
!2104 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2105 = !{!1073}
!2106 = !{!104, !2107, !320, !166, !111, !2115, !2146}
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !992, line: 770, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 764, size: 128, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2109, file: !992, line: 766, baseType: !777, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2109, file: !992, line: 767, baseType: !777, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2109, file: !992, line: 768, baseType: !777, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2109, file: !992, line: 769, baseType: !996, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !2118)
!2118 = !{!2119, !2121, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2136, !2141, !2145}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2117, file: !992, line: 413, baseType: !2120, size: 256)
!2120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 256, elements: !1960)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2117, file: !992, line: 414, baseType: !2122, size: 768, offset: 256)
!2122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 768, elements: !2123)
!2123 = !{!2124}
!2124 = !DISubrange(count: 24)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2117, file: !992, line: 415, baseType: !2120, size: 256, offset: 1024)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2117, file: !992, line: 416, baseType: !2122, size: 768, offset: 1280)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2117, file: !992, line: 417, baseType: !2120, size: 256, offset: 2048)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2117, file: !992, line: 418, baseType: !2122, size: 768, offset: 2304)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2117, file: !992, line: 419, baseType: !2120, size: 256, offset: 3072)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2117, file: !992, line: 420, baseType: !2122, size: 768, offset: 3328)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2117, file: !992, line: 421, baseType: !2120, size: 256, offset: 4096)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2117, file: !992, line: 422, baseType: !2133, size: 1792, offset: 4352)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 1792, elements: !2134)
!2134 = !{!2135}
!2135 = !DISubrange(count: 56)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2117, file: !992, line: 423, baseType: !2137, size: 1920, offset: 6144)
!2137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2138, size: 1920, elements: !2139)
!2138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !166)
!2139 = !{!2140}
!2140 = !DISubrange(count: 240)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2117, file: !992, line: 424, baseType: !2142, size: 20608, offset: 8064)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 20608, elements: !2143)
!2143 = !{!2144}
!2144 = !DISubrange(count: 644)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2117, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2153, !2154, !2155, !2156, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2169, !2170, !2171, !2173, !2175, !2177}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2148, file: !992, line: 447, baseType: !996, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2148, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2148, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2148, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2148, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2148, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2148, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2138, size: 96, elements: !2158)
!2158 = !{!2159}
!2159 = !DISubrange(count: 12)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2148, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2148, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2148, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2148, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2148, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2148, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2148, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2148, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!2168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 64, elements: !216)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2148, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2148, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2148, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 128, elements: !1185)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2148, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 160, elements: !1687)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2148, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!2176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 160, elements: !1687)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2148, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!2178 = !{!2179, !2205, !2210, !2212, !2214, !2101}
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2103, file: !2181, line: 285, type: !2182, isLocal: true, isDefinition: true, align: 32)
!2181 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !2184)
!2184 = !{!2185, !2204}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2183, file: !788, line: 60, baseType: !2186, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!103, !2189}
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2191)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !2192)
!2192 = !{!2193, !2194, !2195, !2196, !2202, !2203}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2191, file: !797, line: 380, baseType: !108, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2191, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2191, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2191, file: !797, line: 386, baseType: !2197, size: 32, offset: 96)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !2199)
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2198, file: !797, line: 359, baseType: !166, size: 8)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2198, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2191, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2191, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2183, file: !788, line: 65, baseType: !2189, size: 32, offset: 32)
!2205 = !DIGlobalVariableExpression(var: !2206, expr: !DIExpression())
!2206 = distinct !DIGlobalVariable(name: "lock", scope: !2103, file: !2181, line: 34, type: !2207, isLocal: true, isDefinition: true)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2208)
!2208 = !{!2209}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2207, file: !152, line: 52, baseType: !22, size: 32)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "last_load", scope: !2103, file: !2181, line: 36, type: !111, isLocal: true, isDefinition: true)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2103, file: !2181, line: 48, type: !111, isLocal: true, isDefinition: true)
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2103, file: !2181, line: 54, type: !111, isLocal: true, isDefinition: true)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2218, file: !2300, line: 22, type: !2302, isLocal: true, isDefinition: true)
!2218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2220, retainedTypes: !2221, globals: !2297, splitDebugInlining: false, nameTableKind: None)
!2219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2220 = !{!1517, !1523}
!2221 = !{!2222, !2286, !2291, !1570, !1523, !1517, !2296, !102}
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1518, line: 523, size: 288, elements: !2225)
!2225 = !{!2226, !2245, !2249, !2253, !2257, !2258, !2259, !2263, !2282}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2224, file: !1518, line: 524, baseType: !2227, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = !DISubroutineType(types: !2229)
!2229 = !{!103, !2230, !1558, !1559}
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2232)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !2233)
!2233 = !{!2234, !2235, !2236, !2237, !2243, !2244}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2232, file: !797, line: 380, baseType: !108, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2232, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2232, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2232, file: !797, line: 386, baseType: !2238, size: 32, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !2240)
!2240 = !{!2241, !2242}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2239, file: !797, line: 359, baseType: !166, size: 8)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2239, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2232, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2232, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2224, file: !1518, line: 530, baseType: !2246, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!103, !2230, !1564}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2224, file: !1518, line: 532, baseType: !2250, size: 32, offset: 64)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!103, !2230, !1570, !1565}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2224, file: !1518, line: 535, baseType: !2254, size: 32, offset: 96)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{!103, !2230, !1570}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2224, file: !1518, line: 537, baseType: !2254, size: 32, offset: 128)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2224, file: !1518, line: 539, baseType: !2254, size: 32, offset: 160)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2224, file: !1518, line: 541, baseType: !2260, size: 32, offset: 192)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!103, !2230, !1558, !1517, !1523}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2224, file: !1518, line: 544, baseType: !2264, size: 32, offset: 224)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!103, !2230, !2267, !122}
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1518, line: 478, size: 96, elements: !2269)
!2269 = !{!2270, !2276, !2281}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2268, file: !1518, line: 482, baseType: !2271, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1590, line: 33, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1590, line: 29, size: 32, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2272, file: !1590, line: 30, baseType: !2275, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2268, file: !1518, line: 485, baseType: !2277, size: 32, offset: 32)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1518, line: 464, baseType: !2278)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{null, !2230, !2267, !1570}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2268, file: !1518, line: 493, baseType: !1570, size: 32, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2224, file: !1518, line: 547, baseType: !2283, size: 32, offset: 256)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{!111, !2230}
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2288)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1518, line: 428, size: 32, elements: !2289)
!2289 = !{!2290}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2288, file: !1518, line: 434, baseType: !1570, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2293)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1518, line: 441, size: 32, elements: !2294)
!2294 = !{!2295}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2293, file: !1518, line: 447, baseType: !1570, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2297 = !{!2298, !2216}
!2298 = !DIGlobalVariableExpression(var: !2299, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2299 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2218, file: !2300, line: 37, type: !2301, isLocal: true, isDefinition: true)
!2300 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!2302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2303, size: 352, elements: !2304)
!2303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2230)
!2304 = !{!2305}
!2305 = !DISubrange(count: 11)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2308, file: !2352, line: 139, type: !2357, isLocal: false, isDefinition: true)
!2308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2310, globals: !2349, splitDebugInlining: false, nameTableKind: None)
!2309 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2310 = !{!2311}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 586, baseType: !2313)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 550, size: 1216, elements: !2314)
!2314 = !{!2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2313, file: !773, line: 552, baseType: !777, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2313, file: !773, line: 553, baseType: !777, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2313, file: !773, line: 554, baseType: !777, size: 32, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2313, file: !773, line: 555, baseType: !777, size: 32, offset: 96)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2313, file: !773, line: 556, baseType: !777, size: 32, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2313, file: !773, line: 557, baseType: !777, size: 32, offset: 160)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2313, file: !773, line: 558, baseType: !777, size: 32, offset: 192)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2313, file: !773, line: 559, baseType: !111, size: 32, offset: 224)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2313, file: !773, line: 560, baseType: !777, size: 32, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2313, file: !773, line: 561, baseType: !777, size: 32, offset: 288)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2313, file: !773, line: 562, baseType: !1340, size: 64, offset: 320)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2313, file: !773, line: 563, baseType: !777, size: 32, offset: 384)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2313, file: !773, line: 564, baseType: !777, size: 32, offset: 416)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2313, file: !773, line: 565, baseType: !777, size: 32, offset: 448)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2313, file: !773, line: 566, baseType: !111, size: 32, offset: 480)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2313, file: !773, line: 567, baseType: !777, size: 32, offset: 512)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2313, file: !773, line: 568, baseType: !777, size: 32, offset: 544)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2313, file: !773, line: 569, baseType: !1340, size: 64, offset: 576)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2313, file: !773, line: 570, baseType: !777, size: 32, offset: 640)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2313, file: !773, line: 571, baseType: !777, size: 32, offset: 672)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2313, file: !773, line: 572, baseType: !777, size: 32, offset: 704)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2313, file: !773, line: 573, baseType: !111, size: 32, offset: 736)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2313, file: !773, line: 574, baseType: !777, size: 32, offset: 768)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2313, file: !773, line: 575, baseType: !777, size: 32, offset: 800)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2313, file: !773, line: 576, baseType: !1340, size: 64, offset: 832)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2313, file: !773, line: 577, baseType: !777, size: 32, offset: 896)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2313, file: !773, line: 578, baseType: !777, size: 32, offset: 928)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2313, file: !773, line: 579, baseType: !1340, size: 64, offset: 960)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2313, file: !773, line: 580, baseType: !777, size: 32, offset: 1024)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2313, file: !773, line: 581, baseType: !777, size: 32, offset: 1056)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2313, file: !773, line: 582, baseType: !777, size: 32, offset: 1088)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2313, file: !773, line: 583, baseType: !777, size: 32, offset: 1120)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2313, file: !773, line: 584, baseType: !777, size: 32, offset: 1152)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2313, file: !773, line: 585, baseType: !777, size: 32, offset: 1184)
!2349 = !{!2350, !2353, !2306}
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2308, file: !2352, line: 137, type: !111, isLocal: false, isDefinition: true)
!2352 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2308, file: !2352, line: 138, type: !2355, isLocal: false, isDefinition: true)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2356, size: 128, elements: !333)
!2356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2356, size: 64, elements: !1960)
!2358 = !DIGlobalVariableExpression(var: !2359, expr: !DIExpression())
!2359 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2360, file: !2363, line: 23, type: !2364, isLocal: false, isDefinition: true)
!2360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2361, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !2362, splitDebugInlining: false, nameTableKind: None)
!2361 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2362 = !{!2358}
!2363 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2367, file: !2371, line: 37, type: !2625, isLocal: false, isDefinition: true)
!2367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2369, retainedTypes: !2378, globals: !2451, splitDebugInlining: false, nameTableKind: None)
!2368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2369 = !{!2370, !30, !1073}
!2370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2371, line: 63, baseType: !32, size: 32, elements: !2372)
!2371 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2372 = !{!2373, !2374, !2375, !2376, !2377}
!2373 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2374 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2375 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2376 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2377 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2378 = !{!156, !102, !103, !2379, !160, !111, !2409, !320, !166, !2434}
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2381)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2382, line: 51, size: 64, elements: !2383)
!2382 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2383 = !{!2384, !2404}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2381, file: !2382, line: 52, baseType: !2385, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2382, line: 38, baseType: !2386)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!103, !2389, !550, !181}
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2391)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !2392)
!2392 = !{!2393, !2394, !2395, !2396, !2402, !2403}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2391, file: !797, line: 380, baseType: !108, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2391, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2391, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2391, file: !797, line: 386, baseType: !2397, size: 32, offset: 96)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2398, file: !797, line: 359, baseType: !166, size: 8)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2398, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2391, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2391, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2381, file: !2382, line: 53, baseType: !2405, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2382, line: 47, baseType: !2406)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!103, !2389, !550, !181, !111}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !2411)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !2412)
!2412 = !{!2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2411, file: !992, line: 447, baseType: !996, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2411, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2411, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2411, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2411, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2411, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2411, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2411, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2411, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2411, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2411, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2411, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2411, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2411, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2411, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2411, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2411, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2411, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2411, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2411, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2411, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !2436)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !2437)
!2437 = !{!2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2436, file: !992, line: 413, baseType: !2120, size: 256)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2436, file: !992, line: 414, baseType: !2122, size: 768, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2436, file: !992, line: 415, baseType: !2120, size: 256, offset: 1024)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2436, file: !992, line: 416, baseType: !2122, size: 768, offset: 1280)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2436, file: !992, line: 417, baseType: !2120, size: 256, offset: 2048)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2436, file: !992, line: 418, baseType: !2122, size: 768, offset: 2304)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2436, file: !992, line: 419, baseType: !2120, size: 256, offset: 3072)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2436, file: !992, line: 420, baseType: !2122, size: 768, offset: 3328)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2436, file: !992, line: 421, baseType: !2120, size: 256, offset: 4096)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2436, file: !992, line: 422, baseType: !2133, size: 1792, offset: 4352)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2436, file: !992, line: 423, baseType: !2137, size: 1920, offset: 6144)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2436, file: !992, line: 424, baseType: !2142, size: 20608, offset: 8064)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2436, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!2451 = !{!2365, !2452, !2577, !2583, !2585, !2588, !2593, !2595, !2600}
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "_kernel", scope: !2367, file: !2371, line: 40, type: !2454, isLocal: false, isDefinition: true)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !131, line: 158, size: 288, elements: !2455)
!2455 = !{!2456, !2572}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2454, file: !131, line: 159, baseType: !2457, size: 192)
!2457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2458, size: 192, elements: !532)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !131, line: 100, size: 192, elements: !2459)
!2459 = !{!2460, !2461, !2462, !2565, !2566, !2567, !2568}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2458, file: !131, line: 102, baseType: !111, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2458, file: !131, line: 105, baseType: !160, size: 32, offset: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2458, file: !131, line: 108, baseType: !2463, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2465)
!2465 = !{!2466, !2524, !2536, !2537, !2538, !2539, !2545, !2560}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2464, file: !199, line: 247, baseType: !2467, size: 384)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2468)
!2468 = !{!2469, !2493, !2500, !2501, !2502, !2511, !2512, !2513}
!2469 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !199, line: 60, baseType: !2470, size: 64)
!2470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2467, file: !199, line: 60, size: 64, elements: !2471)
!2471 = !{!2472, !2487}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2470, file: !199, line: 61, baseType: !2473, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2475)
!2475 = !{!2476, !2482}
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !136, line: 38, baseType: !2477, size: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !136, line: 38, size: 32, elements: !2478)
!2478 = !{!2479, !2481}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2477, file: !136, line: 39, baseType: !2480, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2477, file: !136, line: 40, baseType: !2480, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !136, line: 42, baseType: !2483, size: 32, offset: 32)
!2483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !136, line: 42, size: 32, elements: !2484)
!2484 = !{!2485, !2486}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2483, file: !136, line: 43, baseType: !2480, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2483, file: !136, line: 44, baseType: !2480, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2470, file: !199, line: 62, baseType: !2488, size: 64)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2489)
!2489 = !{!2490}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2488, file: !211, line: 50, baseType: !2491, size: 64)
!2491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2492, size: 64, elements: !216)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2467, file: !199, line: 68, baseType: !2494, size: 32, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2497)
!2497 = !{!2498}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2496, file: !131, line: 232, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2474)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2467, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2467, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !199, line: 90, baseType: !2503, size: 16, offset: 112)
!2503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2467, file: !199, line: 90, size: 16, elements: !2504)
!2504 = !{!2505, !2510}
!2505 = !DIDerivedType(tag: DW_TAG_member, scope: !2503, file: !199, line: 91, baseType: !2506, size: 16)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2503, file: !199, line: 91, size: 16, elements: !2507)
!2507 = !{!2508, !2509}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2506, file: !199, line: 96, baseType: !229, size: 8)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2506, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2503, file: !199, line: 100, baseType: !181, size: 16)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2467, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2467, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2467, file: !199, line: 131, baseType: !2514, size: 192, offset: 192)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2515)
!2515 = !{!2516, !2517, !2523}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2514, file: !131, line: 245, baseType: !2473, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2514, file: !131, line: 246, baseType: !2518, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2519)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 32)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{null, !2522}
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2514, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2464, file: !199, line: 250, baseType: !2525, size: 288, offset: 384)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2526)
!2526 = !{!2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2525, file: !248, line: 26, baseType: !111, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2525, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2525, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2525, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2525, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2525, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2525, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2525, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2525, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2464, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2464, file: !199, line: 256, baseType: !2495, size: 64, offset: 704)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2464, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2464, file: !199, line: 300, baseType: !2540, size: 96, offset: 800)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2541)
!2541 = !{!2542, !2543, !2544}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2540, file: !199, line: 153, baseType: !22, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2540, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2540, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2464, file: !199, line: 325, baseType: !2546, size: 32, offset: 896)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2548)
!2548 = !{!2549, !2555, !2556}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2547, file: !127, line: 5074, baseType: !2550, size: 96)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2551)
!2551 = !{!2552, !2553, !2554}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2550, file: !274, line: 57, baseType: !277, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2550, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2550, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2547, file: !127, line: 5075, baseType: !2495, size: 64, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2547, file: !127, line: 5076, baseType: !2557, size: 32, offset: 160)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2558)
!2558 = !{!2559}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2557, file: !152, line: 52, baseType: !22, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2464, file: !199, line: 343, baseType: !2561, size: 64, offset: 928)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2561, file: !248, line: 63, baseType: !111, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2561, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2458, file: !131, line: 111, baseType: !2463, size: 32, offset: 96)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2458, file: !131, line: 124, baseType: !103, size: 32, offset: 128)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2458, file: !131, line: 127, baseType: !166, size: 8, offset: 160)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2458, file: !131, line: 153, baseType: !2569, offset: 168)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2570, line: 33, elements: !2571)
!2570 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2571 = !{}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2454, file: !131, line: 170, baseType: !2573, size: 96, offset: 192)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !2574)
!2574 = !{!2575, !2576}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2573, file: !131, line: 86, baseType: !2463, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2573, file: !131, line: 90, baseType: !2499, size: 64, offset: 32)
!2577 = !DIGlobalVariableExpression(var: !2578, expr: !DIExpression())
!2578 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2367, file: !2371, line: 43, type: !2579, isLocal: false, isDefinition: true, align: 512)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2580, size: 8704, elements: !338)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !2581)
!2581 = !{!2582}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2580, file: !305, line: 48, baseType: !110, size: 8)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2367, file: !2371, line: 44, type: !2464, isLocal: false, isDefinition: true)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2367, file: !2371, line: 48, type: !2587, isLocal: false, isDefinition: true)
!2587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2464, size: 1024, elements: !532)
!2588 = !DIGlobalVariableExpression(var: !2589, expr: !DIExpression())
!2589 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2367, file: !2371, line: 86, type: !2590, isLocal: false, isDefinition: true, align: 512)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2580, size: 16896, elements: !2591)
!2591 = !{!533, !2592}
!2592 = !DISubrange(count: 2112)
!2593 = !DIGlobalVariableExpression(var: !2594, expr: !DIExpression())
!2594 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2367, file: !2371, line: 217, type: !122, isLocal: false, isDefinition: true)
!2595 = !DIGlobalVariableExpression(var: !2596, expr: !DIExpression())
!2596 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2367, file: !2371, line: 50, type: !2597, isLocal: true, isDefinition: true, align: 512)
!2597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2580, size: 3072, elements: !2598)
!2598 = !{!533, !2599}
!2599 = !DISubrange(count: 384)
!2600 = !DIGlobalVariableExpression(var: !2601, expr: !DIExpression())
!2601 = distinct !DIGlobalVariable(name: "levels", scope: !2602, file: !2371, line: 232, type: !2622, isLocal: true, isDefinition: true)
!2602 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2371, file: !2371, line: 230, type: !2603, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !2605)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{null, !2370}
!2605 = !{!2606, !2607, !2617, !2621}
!2606 = !DILocalVariable(name: "level", arg: 1, scope: !2602, file: !2371, line: 230, type: !2370)
!2607 = !DILocalVariable(name: "entry", scope: !2602, file: !2371, line: 244, type: !2608)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !2611)
!2611 = !{!2612, !2616}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2610, file: !788, line: 60, baseType: !2613, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!103, !2389}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2610, file: !788, line: 65, baseType: !2389, size: 32, offset: 32)
!2617 = !DILocalVariable(name: "dev", scope: !2618, file: !2371, line: 247, type: !2389)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !2371, line: 246, column: 64)
!2619 = distinct !DILexicalBlock(scope: !2620, file: !2371, line: 246, column: 2)
!2620 = distinct !DILexicalBlock(scope: !2602, file: !2371, line: 246, column: 2)
!2621 = !DILocalVariable(name: "rc", scope: !2618, file: !2371, line: 248, type: !103)
!2622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2608, size: 192, elements: !2623)
!2623 = !{!2624}
!2624 = !DISubrange(count: 6)
!2625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2626)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !2627)
!2627 = !{!2628, !2629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2626, file: !753, line: 17, baseType: !108, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2626, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!2630 = !DIGlobalVariableExpression(var: !2631, expr: !DIExpression())
!2631 = distinct !DIGlobalVariable(name: "states_str", scope: !2632, file: !2633, line: 276, type: !2756, isLocal: true, isDefinition: true)
!2632 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2633, file: !2633, line: 271, type: !2634, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !2747)
!2633 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!108, !2636, !160, !156}
!2636 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2637)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2639)
!2639 = !{!2640, !2698, !2710, !2711, !2712, !2713, !2719, !2734}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2638, file: !199, line: 247, baseType: !2641, size: 384)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2642)
!2642 = !{!2643, !2667, !2674, !2675, !2676, !2685, !2686, !2687}
!2643 = !DIDerivedType(tag: DW_TAG_member, scope: !2641, file: !199, line: 60, baseType: !2644, size: 64)
!2644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2641, file: !199, line: 60, size: 64, elements: !2645)
!2645 = !{!2646, !2661}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2644, file: !199, line: 61, baseType: !2647, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2648)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2649)
!2649 = !{!2650, !2656}
!2650 = !DIDerivedType(tag: DW_TAG_member, scope: !2648, file: !136, line: 38, baseType: !2651, size: 32)
!2651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2648, file: !136, line: 38, size: 32, elements: !2652)
!2652 = !{!2653, !2655}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2651, file: !136, line: 39, baseType: !2654, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2651, file: !136, line: 40, baseType: !2654, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, scope: !2648, file: !136, line: 42, baseType: !2657, size: 32, offset: 32)
!2657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2648, file: !136, line: 42, size: 32, elements: !2658)
!2658 = !{!2659, !2660}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2657, file: !136, line: 43, baseType: !2654, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2657, file: !136, line: 44, baseType: !2654, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2644, file: !199, line: 62, baseType: !2662, size: 64)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2663)
!2663 = !{!2664}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2662, file: !211, line: 50, baseType: !2665, size: 64)
!2665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2666, size: 64, elements: !216)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2641, file: !199, line: 68, baseType: !2668, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2671)
!2671 = !{!2672}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2670, file: !131, line: 232, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2648)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2641, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2641, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2676 = !DIDerivedType(tag: DW_TAG_member, scope: !2641, file: !199, line: 90, baseType: !2677, size: 16, offset: 112)
!2677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2641, file: !199, line: 90, size: 16, elements: !2678)
!2678 = !{!2679, !2684}
!2679 = !DIDerivedType(tag: DW_TAG_member, scope: !2677, file: !199, line: 91, baseType: !2680, size: 16)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2677, file: !199, line: 91, size: 16, elements: !2681)
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2680, file: !199, line: 96, baseType: !229, size: 8)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2680, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2677, file: !199, line: 100, baseType: !181, size: 16)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2641, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2641, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2641, file: !199, line: 131, baseType: !2688, size: 192, offset: 192)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2689)
!2689 = !{!2690, !2691, !2697}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2688, file: !131, line: 245, baseType: !2647, size: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2688, file: !131, line: 246, baseType: !2692, size: 32, offset: 64)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2693)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{null, !2696}
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2688, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2638, file: !199, line: 250, baseType: !2699, size: 288, offset: 384)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2700)
!2700 = !{!2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2699, file: !248, line: 26, baseType: !111, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2699, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2699, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2699, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2699, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2699, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2699, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2699, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2699, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2638, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2638, file: !199, line: 256, baseType: !2669, size: 64, offset: 704)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2638, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2638, file: !199, line: 300, baseType: !2714, size: 96, offset: 800)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2715)
!2715 = !{!2716, !2717, !2718}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2714, file: !199, line: 153, baseType: !22, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2714, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2714, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2638, file: !199, line: 325, baseType: !2720, size: 32, offset: 896)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 32)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2722)
!2722 = !{!2723, !2729, !2730}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2721, file: !127, line: 5074, baseType: !2724, size: 96)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2725)
!2725 = !{!2726, !2727, !2728}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2724, file: !274, line: 57, baseType: !277, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2724, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2724, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2721, file: !127, line: 5075, baseType: !2669, size: 64, offset: 96)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2721, file: !127, line: 5076, baseType: !2731, size: 32, offset: 160)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2732)
!2732 = !{!2733}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2731, file: !152, line: 52, baseType: !22, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2638, file: !199, line: 343, baseType: !2735, size: 64, offset: 928)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2735, file: !248, line: 63, baseType: !111, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2735, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2741, globals: !2743, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2741 = !{!102, !108, !104, !166, !22, !103, !2742, !24, !156, !160, !111, !112}
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2743 = !{!2630, !2744}
!2744 = !DIGlobalVariableExpression(var: !2745, expr: !DIExpression())
!2745 = distinct !DIGlobalVariable(name: "states_sz", scope: !2632, file: !2633, line: 279, type: !2746, isLocal: true, isDefinition: true)
!2746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2301, size: 256, elements: !1960)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754}
!2748 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2632, file: !2633, line: 271, type: !2636)
!2749 = !DILocalVariable(name: "buf", arg: 2, scope: !2632, file: !2633, line: 271, type: !160)
!2750 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2632, file: !2633, line: 271, type: !156)
!2751 = !DILocalVariable(name: "off", scope: !2632, file: !2633, line: 273, type: !156)
!2752 = !DILocalVariable(name: "bit", scope: !2632, file: !2633, line: 274, type: !166)
!2753 = !DILocalVariable(name: "thread_state", scope: !2632, file: !2633, line: 275, type: !166)
!2754 = !DILocalVariable(name: "index", scope: !2755, file: !2633, line: 293, type: !166)
!2755 = distinct !DILexicalBlock(scope: !2632, file: !2633, line: 293, column: 2)
!2756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !1960)
!2757 = !DIGlobalVariableExpression(var: !2758, expr: !DIExpression())
!2758 = distinct !DIGlobalVariable(name: "lock", scope: !2759, file: !2866, line: 47, type: !2857, isLocal: true, isDefinition: true)
!2759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2761, globals: !2865, splitDebugInlining: false, nameTableKind: None)
!2760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2761 = !{!122, !102, !103, !2762, !2777}
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2764)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2765)
!2765 = !{!2766, !2772}
!2766 = !DIDerivedType(tag: DW_TAG_member, scope: !2764, file: !136, line: 38, baseType: !2767, size: 32)
!2767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2764, file: !136, line: 38, size: 32, elements: !2768)
!2768 = !{!2769, !2771}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2767, file: !136, line: 39, baseType: !2770, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2767, file: !136, line: 40, baseType: !2770, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, scope: !2764, file: !136, line: 42, baseType: !2773, size: 32, offset: 32)
!2773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2764, file: !136, line: 42, size: 32, elements: !2774)
!2774 = !{!2775, !2776}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2773, file: !136, line: 43, baseType: !2770, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2773, file: !136, line: 44, baseType: !2770, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2779)
!2779 = !{!2780, !2824, !2836, !2837, !2838, !2839, !2845, !2860}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2778, file: !199, line: 247, baseType: !2781, size: 384)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2782)
!2782 = !{!2783, !2793, !2800, !2801, !2802, !2811, !2812, !2813}
!2783 = !DIDerivedType(tag: DW_TAG_member, scope: !2781, file: !199, line: 60, baseType: !2784, size: 64)
!2784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2781, file: !199, line: 60, size: 64, elements: !2785)
!2785 = !{!2786, !2787}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2784, file: !199, line: 61, baseType: !2763, size: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2784, file: !199, line: 62, baseType: !2788, size: 64)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2789)
!2789 = !{!2790}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2788, file: !211, line: 50, baseType: !2791, size: 64)
!2791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2792, size: 64, elements: !216)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2781, file: !199, line: 68, baseType: !2794, size: 32, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2796)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2797)
!2797 = !{!2798}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2796, file: !131, line: 232, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2764)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2781, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2781, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2802 = !DIDerivedType(tag: DW_TAG_member, scope: !2781, file: !199, line: 90, baseType: !2803, size: 16, offset: 112)
!2803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2781, file: !199, line: 90, size: 16, elements: !2804)
!2804 = !{!2805, !2810}
!2805 = !DIDerivedType(tag: DW_TAG_member, scope: !2803, file: !199, line: 91, baseType: !2806, size: 16)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2803, file: !199, line: 91, size: 16, elements: !2807)
!2807 = !{!2808, !2809}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2806, file: !199, line: 96, baseType: !229, size: 8)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2806, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2803, file: !199, line: 100, baseType: !181, size: 16)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2781, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2781, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2781, file: !199, line: 131, baseType: !2814, size: 192, offset: 192)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2815)
!2815 = !{!2816, !2817, !2823}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2814, file: !131, line: 245, baseType: !2763, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2814, file: !131, line: 246, baseType: !2818, size: 32, offset: 64)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2819)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = !DISubroutineType(types: !2821)
!2821 = !{null, !2822}
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2814, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2778, file: !199, line: 250, baseType: !2825, size: 288, offset: 384)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2825, file: !248, line: 26, baseType: !111, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2825, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2825, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2825, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2825, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2825, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2825, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2825, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2825, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2778, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2778, file: !199, line: 256, baseType: !2795, size: 64, offset: 704)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2778, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2778, file: !199, line: 300, baseType: !2840, size: 96, offset: 800)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2841)
!2841 = !{!2842, !2843, !2844}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2840, file: !199, line: 153, baseType: !22, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2840, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2840, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2778, file: !199, line: 325, baseType: !2846, size: 32, offset: 896)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 32)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2848)
!2848 = !{!2849, !2855, !2856}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2847, file: !127, line: 5074, baseType: !2850, size: 96)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2851)
!2851 = !{!2852, !2853, !2854}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2850, file: !274, line: 57, baseType: !277, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2850, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2850, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2847, file: !127, line: 5075, baseType: !2795, size: 64, offset: 96)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2847, file: !127, line: 5076, baseType: !2857, size: 32, offset: 160)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2858)
!2858 = !{!2859}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2857, file: !152, line: 52, baseType: !22, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2778, file: !199, line: 343, baseType: !2861, size: 64, offset: 928)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2861, file: !248, line: 63, baseType: !111, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2861, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2865 = !{!2757}
!2866 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2867 = !DIGlobalVariableExpression(var: !2868, expr: !DIExpression())
!2868 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2869, file: !2979, line: 56, type: !2966, isLocal: false, isDefinition: true)
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2871, globals: !2976, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2871 = !{!2872, !160, !102, !2974, !550, !104, !320, !103, !111, !112, !2975}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2874)
!2874 = !{!2875, !2933, !2945, !2946, !2947, !2948, !2954, !2969}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2873, file: !199, line: 247, baseType: !2876, size: 384)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2877)
!2877 = !{!2878, !2902, !2909, !2910, !2911, !2920, !2921, !2922}
!2878 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !199, line: 60, baseType: !2879, size: 64)
!2879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !199, line: 60, size: 64, elements: !2880)
!2880 = !{!2881, !2896}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2879, file: !199, line: 61, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2884)
!2884 = !{!2885, !2891}
!2885 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !136, line: 38, baseType: !2886, size: 32)
!2886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !136, line: 38, size: 32, elements: !2887)
!2887 = !{!2888, !2890}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2886, file: !136, line: 39, baseType: !2889, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2886, file: !136, line: 40, baseType: !2889, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !136, line: 42, baseType: !2892, size: 32, offset: 32)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !136, line: 42, size: 32, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2892, file: !136, line: 43, baseType: !2889, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2892, file: !136, line: 44, baseType: !2889, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2879, file: !199, line: 62, baseType: !2897, size: 64)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2898)
!2898 = !{!2899}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2897, file: !211, line: 50, baseType: !2900, size: 64)
!2900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2901, size: 64, elements: !216)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2876, file: !199, line: 68, baseType: !2903, size: 32, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2905)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2906)
!2906 = !{!2907}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2905, file: !131, line: 232, baseType: !2908, size: 64)
!2908 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2883)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2876, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2876, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2911 = !DIDerivedType(tag: DW_TAG_member, scope: !2876, file: !199, line: 90, baseType: !2912, size: 16, offset: 112)
!2912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2876, file: !199, line: 90, size: 16, elements: !2913)
!2913 = !{!2914, !2919}
!2914 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !199, line: 91, baseType: !2915, size: 16)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2912, file: !199, line: 91, size: 16, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2915, file: !199, line: 96, baseType: !229, size: 8)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2915, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2912, file: !199, line: 100, baseType: !181, size: 16)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2876, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2876, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2876, file: !199, line: 131, baseType: !2923, size: 192, offset: 192)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2924)
!2924 = !{!2925, !2926, !2932}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2923, file: !131, line: 245, baseType: !2882, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2923, file: !131, line: 246, baseType: !2927, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2928)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 32)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{null, !2931}
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2923, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2873, file: !199, line: 250, baseType: !2934, size: 288, offset: 384)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2935)
!2935 = !{!2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2934, file: !248, line: 26, baseType: !111, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2934, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2934, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2934, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2934, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2934, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2934, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2934, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2934, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2873, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2873, file: !199, line: 256, baseType: !2904, size: 64, offset: 704)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2873, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2873, file: !199, line: 300, baseType: !2949, size: 96, offset: 800)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2950)
!2950 = !{!2951, !2952, !2953}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2949, file: !199, line: 153, baseType: !22, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2949, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2949, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2873, file: !199, line: 325, baseType: !2955, size: 32, offset: 896)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 32)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2957)
!2957 = !{!2958, !2964, !2965}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2956, file: !127, line: 5074, baseType: !2959, size: 96)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2960)
!2960 = !{!2961, !2962, !2963}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2959, file: !274, line: 57, baseType: !277, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2959, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2959, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2956, file: !127, line: 5075, baseType: !2904, size: 64, offset: 96)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2956, file: !127, line: 5076, baseType: !2966, size: 32, offset: 160)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2967)
!2967 = !{!2968}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2966, file: !152, line: 52, baseType: !22, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2873, file: !199, line: 343, baseType: !2970, size: 64, offset: 928)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2970, file: !248, line: 63, baseType: !111, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2970, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2976 = !{!2867, !2977, !2980, !2982}
!2977 = !DIGlobalVariableExpression(var: !2978, expr: !DIExpression())
!2978 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2869, file: !2979, line: 404, type: !103, isLocal: true, isDefinition: true)
!2979 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2980 = !DIGlobalVariableExpression(var: !2981, expr: !DIExpression())
!2981 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2869, file: !2979, line: 405, type: !103, isLocal: true, isDefinition: true)
!2982 = !DIGlobalVariableExpression(var: !2983, expr: !DIExpression())
!2983 = distinct !DIGlobalVariable(name: "pending_current", scope: !2869, file: !2979, line: 425, type: !2872, isLocal: true, isDefinition: true)
!2984 = !DIGlobalVariableExpression(var: !2985, expr: !DIExpression())
!2985 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2986, file: !3016, line: 19, type: !3022, isLocal: true, isDefinition: true)
!2986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2988, globals: !3013, splitDebugInlining: false, nameTableKind: None)
!2987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!2988 = !{!104, !102, !320, !111, !112, !103, !2989, !160, !106}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2991)
!2991 = !{!2992, !3007, !3012}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2990, file: !131, line: 245, baseType: !2993, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2994)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2995)
!2995 = !{!2996, !3002}
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2994, file: !136, line: 38, baseType: !2997, size: 32)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2994, file: !136, line: 38, size: 32, elements: !2998)
!2998 = !{!2999, !3001}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2997, file: !136, line: 39, baseType: !3000, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2997, file: !136, line: 40, baseType: !3000, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, scope: !2994, file: !136, line: 42, baseType: !3003, size: 32, offset: 32)
!3003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2994, file: !136, line: 42, size: 32, elements: !3004)
!3004 = !{!3005, !3006}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3003, file: !136, line: 43, baseType: !3000, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3003, file: !136, line: 44, baseType: !3000, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2990, file: !131, line: 246, baseType: !3008, size: 32, offset: 64)
!3008 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !3009)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 32)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{null, !2989}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2990, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!3013 = !{!3014, !2984, !3017, !3019}
!3014 = !DIGlobalVariableExpression(var: !3015, expr: !DIExpression())
!3015 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2986, file: !3016, line: 15, type: !112, isLocal: true, isDefinition: true)
!3016 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3017 = !DIGlobalVariableExpression(var: !3018, expr: !DIExpression())
!3018 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2986, file: !3016, line: 25, type: !103, isLocal: true, isDefinition: true)
!3019 = !DIGlobalVariableExpression(var: !3020, expr: !DIExpression())
!3020 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2986, file: !3016, line: 17, type: !3021, isLocal: true, isDefinition: true)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2994)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !3023)
!3023 = !{!3024}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3022, file: !152, line: 52, baseType: !22, size: 32)
!3025 = !DIGlobalVariableExpression(var: !3026, expr: !DIExpression())
!3026 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !3027, file: !3033, line: 61, type: !3065, isLocal: false, isDefinition: true, align: 64)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3029, globals: !3030, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3029 = !{!102, !103, !22}
!3030 = !{!3031, !3025}
!3031 = !DIGlobalVariableExpression(var: !3032, expr: !DIExpression())
!3032 = distinct !DIGlobalVariable(name: "_system_heap", scope: !3027, file: !3033, line: 61, type: !3034, isLocal: false, isDefinition: true, align: 32)
!3033 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !3035)
!3035 = !{!3036, !3042, !3061}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3034, file: !127, line: 5074, baseType: !3037, size: 96)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !3038)
!3038 = !{!3039, !3040, !3041}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3037, file: !274, line: 57, baseType: !277, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3037, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3037, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3034, file: !127, line: 5075, baseType: !3043, size: 64, offset: 96)
!3043 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !3044)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !3045)
!3045 = !{!3046}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3044, file: !131, line: 232, baseType: !3047, size: 64)
!3047 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3048)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3049)
!3049 = !{!3050, !3056}
!3050 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !136, line: 38, baseType: !3051, size: 32)
!3051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !136, line: 38, size: 32, elements: !3052)
!3052 = !{!3053, !3055}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3051, file: !136, line: 39, baseType: !3054, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3051, file: !136, line: 40, baseType: !3054, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, scope: !3048, file: !136, line: 42, baseType: !3057, size: 32, offset: 32)
!3057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !136, line: 42, size: 32, elements: !3058)
!3058 = !{!3059, !3060}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3057, file: !136, line: 43, baseType: !3054, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3057, file: !136, line: 44, baseType: !3054, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3034, file: !127, line: 5076, baseType: !3062, size: 32, offset: 160)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !3063)
!3063 = !{!3064}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3062, file: !152, line: 52, baseType: !22, size: 32)
!3065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 8192, elements: !3066)
!3066 = !{!3067}
!3067 = !DISubrange(count: 1024)
!3068 = !DIGlobalVariableExpression(var: !3069, expr: !DIExpression())
!3069 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !3070, file: !3089, line: 55, type: !3090, isLocal: true, isDefinition: true, align: 32)
!3070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3072, globals: !3088, splitDebugInlining: false, nameTableKind: None)
!3071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3072 = !{!102, !104, !103, !3073}
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3075)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3076)
!3076 = !{!3077, !3083}
!3077 = !DIDerivedType(tag: DW_TAG_member, scope: !3075, file: !136, line: 38, baseType: !3078, size: 32)
!3078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3075, file: !136, line: 38, size: 32, elements: !3079)
!3079 = !{!3080, !3082}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3078, file: !136, line: 39, baseType: !3081, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3078, file: !136, line: 40, baseType: !3081, size: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, scope: !3075, file: !136, line: 42, baseType: !3084, size: 32, offset: 32)
!3084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3075, file: !136, line: 42, size: 32, elements: !3085)
!3085 = !{!3086, !3087}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3084, file: !136, line: 43, baseType: !3081, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3084, file: !136, line: 44, baseType: !3081, size: 32)
!3088 = !{!3068}
!3089 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3091)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !788, line: 51, size: 64, elements: !3092)
!3092 = !{!3093, !3100}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3091, file: !788, line: 60, baseType: !3094, size: 32)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!103, !3097}
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3099)
!3099 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !788, line: 48, flags: DIFlagFwdDecl)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3091, file: !788, line: 65, baseType: !3097, size: 32, offset: 32)
!3101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3102 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3103 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3104, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3104 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3107, retainedTypes: !3115, splitDebugInlining: false, nameTableKind: None)
!3106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3107 = !{!30, !3108}
!3108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !3109, line: 54, baseType: !32, size: 32, elements: !3110)
!3109 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3110 = !{!3111, !3112, !3113, !3114}
!3111 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!3112 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!3113 = !DIEnumerator(name: "FREE_PREV", value: 2)
!3114 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!3115 = !{!102, !156, !550, !24, !3116, !22, !3122, !103, !1370, !3137}
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !3109, line: 58, baseType: !3118)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3109, line: 58, size: 64, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3118, file: !3109, line: 58, baseType: !3121, size: 64)
!3121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !1960)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 32)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !3109, line: 68, size: 128, elements: !3124)
!3124 = !{!3125, !3128, !3129, !3130}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3123, file: !3109, line: 69, baseType: !3126, size: 64)
!3126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3127, size: 64, elements: !216)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !3109, line: 61, baseType: !111)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3123, file: !3109, line: 70, baseType: !3127, size: 32, offset: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3123, file: !3109, line: 71, baseType: !111, size: 32, offset: 96)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3123, file: !3109, line: 77, baseType: !3131, offset: 128)
!3131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3132, elements: !3135)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !3109, line: 64, size: 32, elements: !3133)
!3133 = !{!3134}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3132, file: !3109, line: 65, baseType: !3127, size: 32)
!3135 = !{!3136}
!3136 = !DISubrange(count: 0)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!3138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3140, retainedTypes: !3160, splitDebugInlining: false, nameTableKind: None)
!3139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3140 = !{!3141, !3149}
!3141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3142, line: 69, baseType: !32, size: 32, elements: !3143)
!3142 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3143 = !{!3144, !3145, !3146, !3147, !3148}
!3144 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3145 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3146 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3147 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3148 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3142, line: 56, baseType: !32, size: 32, elements: !3150)
!3150 = !{!3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159}
!3151 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3152 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3153 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3154 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3155 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3156 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3157 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3158 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3159 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3160 = !{!103, !3141, !3149, !3161, !230, !814, !3163, !3164, !167, !182, !108, !156, !102, !22, !32, !744, !3166, !3167, !746, !745, !107, !747, !3162, !3168, !3169, !3170, !3171}
!3161 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3142, line: 31, baseType: !3162)
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !157, line: 329, baseType: !32)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3142, line: 32, baseType: !3165)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !113)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 32)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !157, line: 145, baseType: !103)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 32)
!3172 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3173, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3173 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3177, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3178, splitDebugInlining: false, nameTableKind: None)
!3177 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3178 = !{!108, !167, !103, !32}
!3179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3180, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3181, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3180 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3181 = !{!3182, !30}
!3182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3183, line: 27, baseType: !32, size: 32, elements: !3184)
!3183 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3184 = !{!3185, !3186, !3187, !3188, !3189}
!3185 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3186 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3187 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3188 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3189 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3190 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3191, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3192, retainedTypes: !3193, splitDebugInlining: false, nameTableKind: None)
!3191 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3192 = !{!1073, !3182, !30}
!3193 = !{!1268, !3194, !102, !103, !320, !111, !166, !3211}
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !3196)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !3197)
!3197 = !{!3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3196, file: !992, line: 413, baseType: !2120, size: 256)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3196, file: !992, line: 414, baseType: !2122, size: 768, offset: 256)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3196, file: !992, line: 415, baseType: !2120, size: 256, offset: 1024)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3196, file: !992, line: 416, baseType: !2122, size: 768, offset: 1280)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3196, file: !992, line: 417, baseType: !2120, size: 256, offset: 2048)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3196, file: !992, line: 418, baseType: !2122, size: 768, offset: 2304)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3196, file: !992, line: 419, baseType: !2120, size: 256, offset: 3072)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3196, file: !992, line: 420, baseType: !2122, size: 768, offset: 3328)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3196, file: !992, line: 421, baseType: !2120, size: 256, offset: 4096)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3196, file: !992, line: 422, baseType: !2133, size: 1792, offset: 4352)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3196, file: !992, line: 423, baseType: !2137, size: 1920, offset: 6144)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3196, file: !992, line: 424, baseType: !2142, size: 20608, offset: 8064)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3196, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3213)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3213, file: !992, line: 447, baseType: !996, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3213, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3213, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3213, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3213, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3213, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3213, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3213, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3213, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3213, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3213, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3213, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3213, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3213, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3213, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3213, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3213, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3213, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3213, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3213, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3213, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3237, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3237 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3239, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3240, splitDebugInlining: false, nameTableKind: None)
!3239 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3240 = !{!102, !103, !22, !3241}
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3243)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3244)
!3244 = !{!3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3243, file: !992, line: 447, baseType: !996, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3243, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3243, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3243, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3243, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3243, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3243, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3243, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3243, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3243, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3243, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3243, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3243, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3243, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3243, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3243, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3243, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3243, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3243, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3243, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3243, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3266 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3267, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3268, splitDebugInlining: false, nameTableKind: None)
!3267 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3268 = !{!3269, !102, !103}
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3271)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3272)
!3272 = !{!3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3271, file: !992, line: 447, baseType: !996, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3271, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3271, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3271, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3271, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3271, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3271, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3271, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3271, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3271, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3271, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3271, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3271, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3271, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3271, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3271, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3271, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3271, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3271, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3271, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3271, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3294 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3295, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3296, splitDebugInlining: false, nameTableKind: None)
!3295 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3296 = !{!3297, !111, !102, !103}
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 32)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3299, line: 98, size: 256, elements: !3300)
!3299 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3300 = !{!3301, !3306, !3311, !3316, !3321, !3326, !3331, !3336}
!3301 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3299, line: 99, baseType: !3302, size: 32)
!3302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3299, line: 99, size: 32, elements: !3303)
!3303 = !{!3304, !3305}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3302, file: !3299, line: 99, baseType: !111, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3302, file: !3299, line: 99, baseType: !111, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3299, line: 100, baseType: !3307, size: 32, offset: 32)
!3307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3299, line: 100, size: 32, elements: !3308)
!3308 = !{!3309, !3310}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3307, file: !3299, line: 100, baseType: !111, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3307, file: !3299, line: 100, baseType: !111, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3299, line: 101, baseType: !3312, size: 32, offset: 64)
!3312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3299, line: 101, size: 32, elements: !3313)
!3313 = !{!3314, !3315}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3312, file: !3299, line: 101, baseType: !111, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3312, file: !3299, line: 101, baseType: !111, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3299, line: 102, baseType: !3317, size: 32, offset: 96)
!3317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3299, line: 102, size: 32, elements: !3318)
!3318 = !{!3319, !3320}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3317, file: !3299, line: 102, baseType: !111, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3317, file: !3299, line: 102, baseType: !111, size: 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3299, line: 103, baseType: !3322, size: 32, offset: 128)
!3322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3299, line: 103, size: 32, elements: !3323)
!3323 = !{!3324, !3325}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3322, file: !3299, line: 103, baseType: !111, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3322, file: !3299, line: 103, baseType: !111, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3299, line: 104, baseType: !3327, size: 32, offset: 160)
!3327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3299, line: 104, size: 32, elements: !3328)
!3328 = !{!3329, !3330}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3327, file: !3299, line: 104, baseType: !111, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3327, file: !3299, line: 104, baseType: !111, size: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !3299, line: 105, baseType: !3332, size: 32, offset: 192)
!3332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !3299, line: 105, size: 32, elements: !3333)
!3333 = !{!3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3332, file: !3299, line: 105, baseType: !111, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3332, file: !3299, line: 105, baseType: !111, size: 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3298, file: !3299, line: 106, baseType: !111, size: 32, offset: 224)
!3337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3338, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3181, retainedTypes: !3339, splitDebugInlining: false, nameTableKind: None)
!3338 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3339 = !{!3340, !102, !103, !3365, !3137, !111}
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3342)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3343)
!3343 = !{!3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3342, file: !992, line: 447, baseType: !996, size: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3342, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3342, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3342, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3342, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3342, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3342, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3342, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3342, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3342, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3342, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3342, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3342, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3342, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3342, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3342, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3342, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3342, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3342, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3342, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3342, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 32)
!3366 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3299, line: 141, baseType: !3367)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3299, line: 97, size: 256, elements: !3368)
!3368 = !{!3369}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3367, file: !3299, line: 107, baseType: !3370, size: 256)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3299, line: 98, size: 256, elements: !3371)
!3371 = !{!3372, !3377, !3382, !3387, !3392, !3397, !3402, !3407}
!3372 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !3299, line: 99, baseType: !3373, size: 32)
!3373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !3299, line: 99, size: 32, elements: !3374)
!3374 = !{!3375, !3376}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3373, file: !3299, line: 99, baseType: !111, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3373, file: !3299, line: 99, baseType: !111, size: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !3299, line: 100, baseType: !3378, size: 32, offset: 32)
!3378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !3299, line: 100, size: 32, elements: !3379)
!3379 = !{!3380, !3381}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3378, file: !3299, line: 100, baseType: !111, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3378, file: !3299, line: 100, baseType: !111, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !3299, line: 101, baseType: !3383, size: 32, offset: 64)
!3383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !3299, line: 101, size: 32, elements: !3384)
!3384 = !{!3385, !3386}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3383, file: !3299, line: 101, baseType: !111, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3383, file: !3299, line: 101, baseType: !111, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !3299, line: 102, baseType: !3388, size: 32, offset: 96)
!3388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !3299, line: 102, size: 32, elements: !3389)
!3389 = !{!3390, !3391}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3388, file: !3299, line: 102, baseType: !111, size: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3388, file: !3299, line: 102, baseType: !111, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !3299, line: 103, baseType: !3393, size: 32, offset: 128)
!3393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !3299, line: 103, size: 32, elements: !3394)
!3394 = !{!3395, !3396}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3393, file: !3299, line: 103, baseType: !111, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3393, file: !3299, line: 103, baseType: !111, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !3299, line: 104, baseType: !3398, size: 32, offset: 160)
!3398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !3299, line: 104, size: 32, elements: !3399)
!3399 = !{!3400, !3401}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3398, file: !3299, line: 104, baseType: !111, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3398, file: !3299, line: 104, baseType: !111, size: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !3299, line: 105, baseType: !3403, size: 32, offset: 192)
!3403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !3299, line: 105, size: 32, elements: !3404)
!3404 = !{!3405, !3406}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3403, file: !3299, line: 105, baseType: !111, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3403, file: !3299, line: 105, baseType: !111, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3370, file: !3299, line: 106, baseType: !111, size: 32, offset: 224)
!3408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3409, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2105, retainedTypes: !3410, splitDebugInlining: false, nameTableKind: None)
!3409 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3410 = !{!1268, !320, !166, !111, !3411, !3428}
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 32)
!3412 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !992, line: 426, baseType: !3413)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 411, size: 28704, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3413, file: !992, line: 413, baseType: !2120, size: 256)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3413, file: !992, line: 414, baseType: !2122, size: 768, offset: 256)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3413, file: !992, line: 415, baseType: !2120, size: 256, offset: 1024)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3413, file: !992, line: 416, baseType: !2122, size: 768, offset: 1280)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3413, file: !992, line: 417, baseType: !2120, size: 256, offset: 2048)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3413, file: !992, line: 418, baseType: !2122, size: 768, offset: 2304)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3413, file: !992, line: 419, baseType: !2120, size: 256, offset: 3072)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3413, file: !992, line: 420, baseType: !2122, size: 768, offset: 3328)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3413, file: !992, line: 421, baseType: !2120, size: 256, offset: 4096)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3413, file: !992, line: 422, baseType: !2133, size: 1792, offset: 4352)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3413, file: !992, line: 423, baseType: !2137, size: 1920, offset: 6144)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3413, file: !992, line: 424, baseType: !2142, size: 20608, offset: 8064)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3413, file: !992, line: 425, baseType: !777, size: 32, offset: 28672)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3430)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3431)
!3431 = !{!3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3430, file: !992, line: 447, baseType: !996, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3430, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3430, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3430, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3430, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3430, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3430, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3430, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3430, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3430, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3430, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3430, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3430, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3430, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3430, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3430, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3430, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3430, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3430, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3430, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3430, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3455, splitDebugInlining: false, nameTableKind: None)
!3454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3455 = !{!3456, !102, !103}
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !992, line: 468, baseType: !3458)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 445, size: 1120, elements: !3459)
!3459 = !{!3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3458, file: !992, line: 447, baseType: !996, size: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3458, file: !992, line: 448, baseType: !777, size: 32, offset: 32)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3458, file: !992, line: 449, baseType: !777, size: 32, offset: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3458, file: !992, line: 450, baseType: !777, size: 32, offset: 96)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3458, file: !992, line: 451, baseType: !777, size: 32, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3458, file: !992, line: 452, baseType: !777, size: 32, offset: 160)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3458, file: !992, line: 453, baseType: !2157, size: 96, offset: 192)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3458, file: !992, line: 454, baseType: !777, size: 32, offset: 288)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3458, file: !992, line: 455, baseType: !777, size: 32, offset: 320)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3458, file: !992, line: 456, baseType: !777, size: 32, offset: 352)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3458, file: !992, line: 457, baseType: !777, size: 32, offset: 384)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3458, file: !992, line: 458, baseType: !777, size: 32, offset: 416)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3458, file: !992, line: 459, baseType: !777, size: 32, offset: 448)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3458, file: !992, line: 460, baseType: !777, size: 32, offset: 480)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3458, file: !992, line: 461, baseType: !2168, size: 64, offset: 512)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3458, file: !992, line: 462, baseType: !996, size: 32, offset: 576)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3458, file: !992, line: 463, baseType: !996, size: 32, offset: 608)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3458, file: !992, line: 464, baseType: !2172, size: 128, offset: 640)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3458, file: !992, line: 465, baseType: !2174, size: 160, offset: 768)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3458, file: !992, line: 466, baseType: !2176, size: 160, offset: 928)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3458, file: !992, line: 467, baseType: !777, size: 32, offset: 1088)
!3481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3483, splitDebugInlining: false, nameTableKind: None)
!3482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3483 = !{!110, !160, !156, !1475, !3484, !167, !102}
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!3486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3488, splitDebugInlining: false, nameTableKind: None)
!3487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3488 = !{!3489}
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 32)
!3490 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 586, baseType: !3491)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 550, size: 1216, elements: !3492)
!3492 = !{!3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3491, file: !773, line: 552, baseType: !777, size: 32)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3491, file: !773, line: 553, baseType: !777, size: 32, offset: 32)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3491, file: !773, line: 554, baseType: !777, size: 32, offset: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3491, file: !773, line: 555, baseType: !777, size: 32, offset: 96)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3491, file: !773, line: 556, baseType: !777, size: 32, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3491, file: !773, line: 557, baseType: !777, size: 32, offset: 160)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3491, file: !773, line: 558, baseType: !777, size: 32, offset: 192)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3491, file: !773, line: 559, baseType: !111, size: 32, offset: 224)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3491, file: !773, line: 560, baseType: !777, size: 32, offset: 256)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3491, file: !773, line: 561, baseType: !777, size: 32, offset: 288)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3491, file: !773, line: 562, baseType: !1340, size: 64, offset: 320)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3491, file: !773, line: 563, baseType: !777, size: 32, offset: 384)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3491, file: !773, line: 564, baseType: !777, size: 32, offset: 416)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3491, file: !773, line: 565, baseType: !777, size: 32, offset: 448)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3491, file: !773, line: 566, baseType: !111, size: 32, offset: 480)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3491, file: !773, line: 567, baseType: !777, size: 32, offset: 512)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3491, file: !773, line: 568, baseType: !777, size: 32, offset: 544)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3491, file: !773, line: 569, baseType: !1340, size: 64, offset: 576)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3491, file: !773, line: 570, baseType: !777, size: 32, offset: 640)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3491, file: !773, line: 571, baseType: !777, size: 32, offset: 672)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3491, file: !773, line: 572, baseType: !777, size: 32, offset: 704)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3491, file: !773, line: 573, baseType: !111, size: 32, offset: 736)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3491, file: !773, line: 574, baseType: !777, size: 32, offset: 768)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3491, file: !773, line: 575, baseType: !777, size: 32, offset: 800)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3491, file: !773, line: 576, baseType: !1340, size: 64, offset: 832)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3491, file: !773, line: 577, baseType: !777, size: 32, offset: 896)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3491, file: !773, line: 578, baseType: !777, size: 32, offset: 928)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3491, file: !773, line: 579, baseType: !1340, size: 64, offset: 960)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3491, file: !773, line: 580, baseType: !777, size: 32, offset: 1024)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3491, file: !773, line: 581, baseType: !777, size: 32, offset: 1056)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3491, file: !773, line: 582, baseType: !777, size: 32, offset: 1088)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3491, file: !773, line: 583, baseType: !777, size: 32, offset: 1120)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3491, file: !773, line: 584, baseType: !777, size: 32, offset: 1152)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3491, file: !773, line: 585, baseType: !777, size: 32, offset: 1184)
!3527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3531, retainedTypes: !3547, splitDebugInlining: false, nameTableKind: None)
!3530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3531 = !{!3532, !3539, !3543}
!3532 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3533, line: 38, baseType: !32, size: 32, elements: !3534)
!3533 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3534 = !{!3535, !3536, !3537, !3538}
!3535 = !DIEnumerator(name: "HAL_OK", value: 0)
!3536 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3537 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3538 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3539 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1313, line: 184, baseType: !32, size: 32, elements: !3540)
!3540 = !{!3541, !3542}
!3541 = !DIEnumerator(name: "RESET", value: 0)
!3542 = !DIEnumerator(name: "SET", value: 1)
!3543 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1313, line: 190, baseType: !32, size: 32, elements: !3544)
!3544 = !{!3545, !3546}
!3545 = !DIEnumerator(name: "DISABLE", value: 0)
!3546 = !DIEnumerator(name: "ENABLE", value: 1)
!3547 = !{!3548, !111, !3586, !1954, !166, !112, !102}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 32)
!3549 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 586, baseType: !3550)
!3550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 550, size: 1216, elements: !3551)
!3551 = !{!3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585}
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3550, file: !773, line: 552, baseType: !777, size: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3550, file: !773, line: 553, baseType: !777, size: 32, offset: 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3550, file: !773, line: 554, baseType: !777, size: 32, offset: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3550, file: !773, line: 555, baseType: !777, size: 32, offset: 96)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3550, file: !773, line: 556, baseType: !777, size: 32, offset: 128)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3550, file: !773, line: 557, baseType: !777, size: 32, offset: 160)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3550, file: !773, line: 558, baseType: !777, size: 32, offset: 192)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3550, file: !773, line: 559, baseType: !111, size: 32, offset: 224)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3550, file: !773, line: 560, baseType: !777, size: 32, offset: 256)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3550, file: !773, line: 561, baseType: !777, size: 32, offset: 288)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3550, file: !773, line: 562, baseType: !1340, size: 64, offset: 320)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3550, file: !773, line: 563, baseType: !777, size: 32, offset: 384)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3550, file: !773, line: 564, baseType: !777, size: 32, offset: 416)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3550, file: !773, line: 565, baseType: !777, size: 32, offset: 448)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3550, file: !773, line: 566, baseType: !111, size: 32, offset: 480)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3550, file: !773, line: 567, baseType: !777, size: 32, offset: 512)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3550, file: !773, line: 568, baseType: !777, size: 32, offset: 544)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3550, file: !773, line: 569, baseType: !1340, size: 64, offset: 576)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3550, file: !773, line: 570, baseType: !777, size: 32, offset: 640)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3550, file: !773, line: 571, baseType: !777, size: 32, offset: 672)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3550, file: !773, line: 572, baseType: !777, size: 32, offset: 704)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3550, file: !773, line: 573, baseType: !111, size: 32, offset: 736)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3550, file: !773, line: 574, baseType: !777, size: 32, offset: 768)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3550, file: !773, line: 575, baseType: !777, size: 32, offset: 800)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3550, file: !773, line: 576, baseType: !1340, size: 64, offset: 832)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3550, file: !773, line: 577, baseType: !777, size: 32, offset: 896)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3550, file: !773, line: 578, baseType: !777, size: 32, offset: 928)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3550, file: !773, line: 579, baseType: !1340, size: 64, offset: 960)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3550, file: !773, line: 580, baseType: !777, size: 32, offset: 1024)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3550, file: !773, line: 581, baseType: !777, size: 32, offset: 1056)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3550, file: !773, line: 582, baseType: !777, size: 32, offset: 1088)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3550, file: !773, line: 583, baseType: !777, size: 32, offset: 1120)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3550, file: !773, line: 584, baseType: !777, size: 32, offset: 1152)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3550, file: !773, line: 585, baseType: !777, size: 32, offset: 1184)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 32)
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !773, line: 544, baseType: !3588)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 540, size: 64, elements: !3589)
!3589 = !{!3590, !3591}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3588, file: !773, line: 542, baseType: !777, size: 32)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3588, file: !773, line: 543, baseType: !777, size: 32, offset: 32)
!3592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3594, retainedTypes: !3595, splitDebugInlining: false, nameTableKind: None)
!3593 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3594 = !{!1312}
!3595 = !{!3596, !111, !3604, !3610, !3621}
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 32)
!3597 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !992, line: 770, baseType: !3598)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 764, size: 128, elements: !3599)
!3599 = !{!3600, !3601, !3602, !3603}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3598, file: !992, line: 766, baseType: !777, size: 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3598, file: !992, line: 767, baseType: !777, size: 32, offset: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3598, file: !992, line: 768, baseType: !777, size: 32, offset: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3598, file: !992, line: 769, baseType: !996, size: 32, offset: 96)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 32)
!3605 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !773, line: 544, baseType: !3606)
!3606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 540, size: 64, elements: !3607)
!3607 = !{!3608, !3609}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3606, file: !773, line: 542, baseType: !777, size: 32)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3606, file: !773, line: 543, baseType: !777, size: 32, offset: 32)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !773, line: 407, baseType: !3612)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 398, size: 224, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3617, !3618, !3619, !3620}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3612, file: !773, line: 400, baseType: !777, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3612, file: !773, line: 401, baseType: !777, size: 32, offset: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3612, file: !773, line: 402, baseType: !777, size: 32, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3612, file: !773, line: 403, baseType: !777, size: 32, offset: 96)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3612, file: !773, line: 404, baseType: !777, size: 32, offset: 128)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3612, file: !773, line: 405, baseType: !777, size: 32, offset: 160)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3612, file: !773, line: 406, baseType: !777, size: 32, offset: 192)
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 32)
!3622 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 586, baseType: !3623)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 550, size: 1216, elements: !3624)
!3624 = !{!3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3623, file: !773, line: 552, baseType: !777, size: 32)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3623, file: !773, line: 553, baseType: !777, size: 32, offset: 32)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3623, file: !773, line: 554, baseType: !777, size: 32, offset: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3623, file: !773, line: 555, baseType: !777, size: 32, offset: 96)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3623, file: !773, line: 556, baseType: !777, size: 32, offset: 128)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3623, file: !773, line: 557, baseType: !777, size: 32, offset: 160)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3623, file: !773, line: 558, baseType: !777, size: 32, offset: 192)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3623, file: !773, line: 559, baseType: !111, size: 32, offset: 224)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3623, file: !773, line: 560, baseType: !777, size: 32, offset: 256)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3623, file: !773, line: 561, baseType: !777, size: 32, offset: 288)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3623, file: !773, line: 562, baseType: !1340, size: 64, offset: 320)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3623, file: !773, line: 563, baseType: !777, size: 32, offset: 384)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3623, file: !773, line: 564, baseType: !777, size: 32, offset: 416)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3623, file: !773, line: 565, baseType: !777, size: 32, offset: 448)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3623, file: !773, line: 566, baseType: !111, size: 32, offset: 480)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3623, file: !773, line: 567, baseType: !777, size: 32, offset: 512)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3623, file: !773, line: 568, baseType: !777, size: 32, offset: 544)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3623, file: !773, line: 569, baseType: !1340, size: 64, offset: 576)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3623, file: !773, line: 570, baseType: !777, size: 32, offset: 640)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3623, file: !773, line: 571, baseType: !777, size: 32, offset: 672)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3623, file: !773, line: 572, baseType: !777, size: 32, offset: 704)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3623, file: !773, line: 573, baseType: !111, size: 32, offset: 736)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3623, file: !773, line: 574, baseType: !777, size: 32, offset: 768)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3623, file: !773, line: 575, baseType: !777, size: 32, offset: 800)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3623, file: !773, line: 576, baseType: !1340, size: 64, offset: 832)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3623, file: !773, line: 577, baseType: !777, size: 32, offset: 896)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3623, file: !773, line: 578, baseType: !777, size: 32, offset: 928)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3623, file: !773, line: 579, baseType: !1340, size: 64, offset: 960)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3623, file: !773, line: 580, baseType: !777, size: 32, offset: 1024)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3623, file: !773, line: 581, baseType: !777, size: 32, offset: 1056)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3623, file: !773, line: 582, baseType: !777, size: 32, offset: 1088)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3623, file: !773, line: 583, baseType: !777, size: 32, offset: 1120)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3623, file: !773, line: 584, baseType: !777, size: 32, offset: 1152)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3623, file: !773, line: 585, baseType: !777, size: 32, offset: 1184)
!3659 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3660, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3661, splitDebugInlining: false, nameTableKind: None)
!3660 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3661 = !{!102, !156}
!3662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3664, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3664 = !{!3665, !3672, !3182, !30}
!3665 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3666, line: 14, baseType: !32, size: 32, elements: !3667)
!3666 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3667 = !{!3668, !3669, !3670, !3671}
!3668 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3669 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3670 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3671 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3672 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3666, line: 42, baseType: !32, size: 32, elements: !3673)
!3673 = !{!3674, !3675, !3676, !3677, !3678, !3679}
!3674 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3675 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3676 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3677 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3678 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3679 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3684, splitDebugInlining: false, nameTableKind: None)
!3683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3684 = !{!102, !103, !3685, !3700}
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 32)
!3686 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3687)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3688)
!3688 = !{!3689, !3695}
!3689 = !DIDerivedType(tag: DW_TAG_member, scope: !3687, file: !136, line: 38, baseType: !3690, size: 32)
!3690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3687, file: !136, line: 38, size: 32, elements: !3691)
!3691 = !{!3692, !3694}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3690, file: !136, line: 39, baseType: !3693, size: 32)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3690, file: !136, line: 40, baseType: !3693, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, scope: !3687, file: !136, line: 42, baseType: !3696, size: 32, offset: 32)
!3696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3687, file: !136, line: 42, size: 32, elements: !3697)
!3697 = !{!3698, !3699}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3696, file: !136, line: 43, baseType: !3693, size: 32)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3696, file: !136, line: 44, baseType: !3693, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 32)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !3702)
!3702 = !{!3703, !3747, !3759, !3760, !3761, !3762, !3768, !3783}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3701, file: !199, line: 247, baseType: !3704, size: 384)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !3705)
!3705 = !{!3706, !3716, !3723, !3724, !3725, !3734, !3735, !3736}
!3706 = !DIDerivedType(tag: DW_TAG_member, scope: !3704, file: !199, line: 60, baseType: !3707, size: 64)
!3707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3704, file: !199, line: 60, size: 64, elements: !3708)
!3708 = !{!3709, !3710}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3707, file: !199, line: 61, baseType: !3686, size: 64)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3707, file: !199, line: 62, baseType: !3711, size: 64)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !3712)
!3712 = !{!3713}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3711, file: !211, line: 50, baseType: !3714, size: 64)
!3714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3715, size: 64, elements: !216)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 32)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3704, file: !199, line: 68, baseType: !3717, size: 32, offset: 64)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 32)
!3718 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !3719)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !3720)
!3720 = !{!3721}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3719, file: !131, line: 232, baseType: !3722, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3687)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3704, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3704, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!3725 = !DIDerivedType(tag: DW_TAG_member, scope: !3704, file: !199, line: 90, baseType: !3726, size: 16, offset: 112)
!3726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3704, file: !199, line: 90, size: 16, elements: !3727)
!3727 = !{!3728, !3733}
!3728 = !DIDerivedType(tag: DW_TAG_member, scope: !3726, file: !199, line: 91, baseType: !3729, size: 16)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3726, file: !199, line: 91, size: 16, elements: !3730)
!3730 = !{!3731, !3732}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3729, file: !199, line: 96, baseType: !229, size: 8)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3729, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3726, file: !199, line: 100, baseType: !181, size: 16)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3704, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3704, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3704, file: !199, line: 131, baseType: !3737, size: 192, offset: 192)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !3738)
!3738 = !{!3739, !3740, !3746}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3737, file: !131, line: 245, baseType: !3686, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3737, file: !131, line: 246, baseType: !3741, size: 32, offset: 64)
!3741 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !3742)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 32)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{null, !3745}
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3737, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3701, file: !199, line: 250, baseType: !3748, size: 288, offset: 384)
!3748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !3749)
!3749 = !{!3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3748, file: !248, line: 26, baseType: !111, size: 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3748, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3748, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3748, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3748, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3748, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3748, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3748, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3748, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3701, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3701, file: !199, line: 256, baseType: !3718, size: 64, offset: 704)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3701, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3701, file: !199, line: 300, baseType: !3763, size: 96, offset: 800)
!3763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !3764)
!3764 = !{!3765, !3766, !3767}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3763, file: !199, line: 153, baseType: !22, size: 32)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3763, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3763, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3701, file: !199, line: 325, baseType: !3769, size: 32, offset: 896)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 32)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !3771)
!3771 = !{!3772, !3778, !3779}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3770, file: !127, line: 5074, baseType: !3773, size: 96)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !3774)
!3774 = !{!3775, !3776, !3777}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3773, file: !274, line: 57, baseType: !277, size: 32)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3773, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3773, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3770, file: !127, line: 5075, baseType: !3718, size: 64, offset: 96)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3770, file: !127, line: 5076, baseType: !3780, size: 32, offset: 160)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !3781)
!3781 = !{!3782}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3780, file: !152, line: 52, baseType: !22, size: 32)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3701, file: !199, line: 343, baseType: !3784, size: 64, offset: 928)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !3785)
!3785 = !{!3786, !3787}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3784, file: !248, line: 63, baseType: !111, size: 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3784, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!3788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3790, splitDebugInlining: false, nameTableKind: None)
!3789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3790 = !{!22, !102, !103}
!3791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3792 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!3793 = !{!"Ubuntu clang version 14.0.6"}
!3794 = !{i32 7, !"Dwarf Version", i32 4}
!3795 = !{i32 2, !"Debug Info Version", i32 3}
!3796 = !{i32 1, !"wchar_size", i32 4}
!3797 = !{i32 1, !"min_enum_size", i32 4}
!3798 = !{i32 1, !"branch-target-enforcement", i32 0}
!3799 = !{i32 1, !"sign-return-address", i32 0}
!3800 = !{i32 1, !"sign-return-address-all", i32 0}
!3801 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3802 = !{i32 7, !"frame-pointer", i32 2}
!3803 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3804, file: !3804, line: 26, type: !323, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3101, retainedNodes: !2571)
!3804 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3805 = !DILocation(line: 28, column: 1, scope: !3803)
!3806 = !{i64 2155375914, i64 2155375934, i64 2155375997}
!3807 = !DILocation(line: 29, column: 1, scope: !3803)
!3808 = !{i64 2155376329, i64 2155376349, i64 2155376412}
!3809 = !DILocation(line: 30, column: 1, scope: !3803)
!3810 = !{i64 2155376748, i64 2155376768, i64 2155376831}
!3811 = !DILocation(line: 31, column: 1, scope: !3803)
!3812 = !{i64 2155377167, i64 2155377187, i64 2155377250}
!3813 = !DILocation(line: 33, column: 1, scope: !3803)
!3814 = !{i64 2155377459, i64 2155377479, i64 2155377542}
!3815 = !DILocation(line: 35, column: 1, scope: !3803)
!3816 = !{i64 2155377784, i64 2155377804, i64 2155377867}
!3817 = !DILocation(line: 50, column: 1, scope: !3803)
!3818 = !{i64 2155378211, i64 2155378231, i64 2155378294}
!3819 = !DILocation(line: 54, column: 1, scope: !3803)
!3820 = !{i64 2155378650, i64 2155378670, i64 2155378733}
!3821 = !DILocation(line: 61, column: 1, scope: !3803)
!3822 = !{i64 2155378967, i64 2155378987, i64 2155379050}
!3823 = !DILocation(line: 63, column: 1, scope: !3803)
!3824 = !{i64 2155379347, i64 2155379367, i64 2155379430}
!3825 = !DILocation(line: 64, column: 1, scope: !3803)
!3826 = !{i64 2155379869, i64 2155379889, i64 2155379952}
!3827 = !DILocation(line: 65, column: 1, scope: !3803)
!3828 = !{i64 2155380367, i64 2155380387, i64 2155380450}
!3829 = !DILocation(line: 66, column: 1, scope: !3803)
!3830 = !{i64 2155380849, i64 2155380869, i64 2155380932}
!3831 = !DILocation(line: 67, column: 1, scope: !3803)
!3832 = !{i64 2155381356, i64 2155381376, i64 2155381439}
!3833 = !DILocation(line: 68, column: 1, scope: !3803)
!3834 = !{i64 2155381844, i64 2155381864, i64 2155381927}
!3835 = !DILocation(line: 70, column: 1, scope: !3803)
!3836 = !{i64 2155382312, i64 2155382332, i64 2155382395}
!3837 = !DILocation(line: 71, column: 1, scope: !3803)
!3838 = !{i64 2155382754, i64 2155382774, i64 2155382837}
!3839 = !DILocation(line: 72, column: 1, scope: !3803)
!3840 = !{i64 2155383212, i64 2155383232, i64 2155383295}
!3841 = !DILocation(line: 79, column: 1, scope: !3803)
!3842 = !{i64 2155383666, i64 2155383686, i64 2155383749}
!3843 = !DILocation(line: 80, column: 1, scope: !3803)
!3844 = !{i64 2155384177, i64 2155384197, i64 2155384260}
!3845 = !DILocation(line: 82, column: 1, scope: !3803)
!3846 = !{i64 2155384668, i64 2155384688, i64 2155384751}
!3847 = !DILocation(line: 97, column: 1, scope: !3803)
!3848 = !{i64 2155385005, i64 2155385025, i64 2155385088}
!3849 = !DILocation(line: 99, column: 1, scope: !3803)
!3850 = !{i64 2155385223, i64 2155385243, i64 2155385306}
!3851 = !DILocation(line: 102, column: 1, scope: !3803)
!3852 = !{i64 2155389541, i64 2155389561, i64 2155389624}
!3853 = !DILocation(line: 105, column: 1, scope: !3803)
!3854 = !{i64 2155389781, i64 2155389801, i64 2155389864}
!3855 = !DILocation(line: 115, column: 1, scope: !3803)
!3856 = !{i64 2155390120, i64 2155390140, i64 2155390203}
!3857 = !DILocation(line: 118, column: 1, scope: !3803)
!3858 = !{i64 2155390464, i64 2155390484, i64 2155390547}
!3859 = !DILocation(line: 32, column: 1, scope: !3860)
!3860 = !DILexicalBlockFile(scope: !3803, file: !3861, discriminator: 0)
!3861 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3862 = !{i64 2155390820, i64 2155390840, i64 2155390903}
!3863 = !DILocation(line: 33, column: 1, scope: !3860)
!3864 = !{i64 2155391332, i64 2155391352, i64 2155391415}
!3865 = !DILocation(line: 53, column: 1, scope: !3860)
!3866 = !{i64 2155391840, i64 2155391860, i64 2155391923}
!3867 = !DILocation(line: 54, column: 1, scope: !3860)
!3868 = !{i64 2155392258, i64 2155392278, i64 2155392341}
!3869 = !DILocation(line: 55, column: 1, scope: !3860)
!3870 = !{i64 2155392676, i64 2155392696, i64 2155392759}
!3871 = !DILocation(line: 56, column: 1, scope: !3860)
!3872 = !{i64 2155393094, i64 2155393114, i64 2155393177}
!3873 = !DILocation(line: 57, column: 1, scope: !3860)
!3874 = !{i64 2155393512, i64 2155393532, i64 2155393595}
!3875 = !DILocation(line: 58, column: 1, scope: !3860)
!3876 = !{i64 2155393930, i64 2155393950, i64 2155394013}
!3877 = !DILocation(line: 59, column: 1, scope: !3860)
!3878 = !{i64 2155394348, i64 2155394368, i64 2155394431}
!3879 = !DILocation(line: 60, column: 1, scope: !3860)
!3880 = !{i64 2155394772, i64 2155394792, i64 2155394855}
!3881 = !DILocation(line: 61, column: 1, scope: !3860)
!3882 = !{i64 2155395089, i64 2155395109, i64 2155395172}
!3883 = !DILocation(line: 70, column: 1, scope: !3860)
!3884 = !{i64 2155395318, i64 2155395338, i64 2155395401}
!3885 = !DILocation(line: 72, column: 1, scope: !3860)
!3886 = !{i64 2155395650, i64 2155395670, i64 2155395733}
!3887 = !DILocation(line: 73, column: 1, scope: !3860)
!3888 = !{i64 2155396100, i64 2155396120, i64 2155396183}
!3889 = !DILocation(line: 74, column: 1, scope: !3860)
!3890 = !{i64 2155396550, i64 2155396570, i64 2155396633}
!3891 = !DILocation(line: 75, column: 1, scope: !3860)
!3892 = !{i64 2155397000, i64 2155397020, i64 2155397083}
!3893 = !DILocation(line: 76, column: 1, scope: !3860)
!3894 = !{i64 2155397450, i64 2155397470, i64 2155397533}
!3895 = !DILocation(line: 77, column: 1, scope: !3860)
!3896 = !{i64 2155397900, i64 2155397920, i64 2155397983}
!3897 = !DILocation(line: 78, column: 1, scope: !3860)
!3898 = !{i64 2155398350, i64 2155398370, i64 2155398433}
!3899 = !DILocation(line: 79, column: 1, scope: !3860)
!3900 = !{i64 2155398800, i64 2155398820, i64 2155398883}
!3901 = !DILocation(line: 80, column: 1, scope: !3860)
!3902 = !{i64 2155403314, i64 2155403334, i64 2155403397}
!3903 = !DILocation(line: 84, column: 1, scope: !3860)
!3904 = !{i64 2155403646, i64 2155403666, i64 2155403729}
!3905 = !DILocation(line: 91, column: 1, scope: !3860)
!3906 = !{i64 2155404043, i64 2155404063, i64 2155404126}
!3907 = !DILocation(line: 93, column: 1, scope: !3860)
!3908 = !{i64 2155404410, i64 2155404430, i64 2155404493}
!3909 = !DILocation(line: 106, column: 1, scope: !3860)
!3910 = !{i64 2155404680, i64 2155404700, i64 2155404763}
!3911 = !DILocation(line: 11, column: 1, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3803, file: !3913, discriminator: 0)
!3913 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3914 = distinct !DISubprogram(name: "consumer_thread", scope: !117, file: !117, line: 15, type: !323, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3915)
!3915 = !{!3916, !3922, !3923, !3928, !3929, !3930}
!3916 = !DILocalVariable(name: "dyn_alloc_msg", scope: !3914, file: !117, line: 17, type: !3917)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 32)
!3918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !3919)
!3919 = !{!3920, !3921}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3918, file: !515, line: 17, baseType: !102, size: 32)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3918, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!3922 = !DILocalVariable(name: "chan", scope: !3914, file: !117, line: 18, type: !173)
!3923 = !DILocalVariable(name: "_str", scope: !3924, file: !117, line: 29, type: !108)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !117, line: 29, column: 4)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !117, line: 25, column: 49)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !117, line: 25, column: 7)
!3927 = distinct !DILexicalBlock(scope: !3914, file: !117, line: 20, column: 58)
!3928 = !DILocalVariable(name: "is_user_context", scope: !3924, file: !117, line: 29, type: !122)
!3929 = !DILocalVariable(name: "filters", scope: !3924, file: !117, line: 29, type: !111)
!3930 = !DILocalVariable(name: "a", scope: !3927, file: !117, line: 38, type: !3931)
!3931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !515, line: 21, size: 8, elements: !3932)
!3932 = !{!3933}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3931, file: !515, line: 22, baseType: !166, size: 8)
!3934 = !DILocation(line: 18, column: 2, scope: !3914)
!3935 = !DILocation(line: 0, scope: !3914)
!3936 = !DILocation(line: 20, column: 10, scope: !3914)
!3937 = !DILocation(line: 20, column: 9, scope: !3914)
!3938 = !DILocation(line: 20, column: 2, scope: !3914)
!3939 = !DILocation(line: 23, column: 3, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !117, line: 23, column: 3)
!3941 = distinct !DILexicalBlock(scope: !3927, file: !117, line: 23, column: 3)
!3942 = !DILocation(line: 23, column: 3, scope: !3941)
!3943 = !DILocation(line: 23, column: 3, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3940, file: !117, line: 23, column: 3)
!3945 = !DILocation(line: 25, column: 35, scope: !3926)
!3946 = !DILocation(line: 25, column: 8, scope: !3926)
!3947 = !DILocation(line: 25, column: 7, scope: !3927)
!3948 = !DILocation(line: 26, column: 20, scope: !3925)
!3949 = !DILocation(line: 28, column: 4, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !117, line: 28, column: 4)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !117, line: 28, column: 4)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !117, line: 28, column: 4)
!3953 = distinct !DILexicalBlock(scope: !3925, file: !117, line: 28, column: 4)
!3954 = !DILocation(line: 0, scope: !3924)
!3955 = !DILocation(line: 29, column: 4, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !117, line: 29, column: 4)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !117, line: 29, column: 4)
!3958 = distinct !DILexicalBlock(scope: !3924, file: !117, line: 29, column: 4)
!3959 = !DILocation(line: 29, column: 4, scope: !3957)
!3960 = !DILocation(line: 32, column: 26, scope: !3925)
!3961 = !DILocation(line: 32, column: 4, scope: !3925)
!3962 = !DILocation(line: 33, column: 29, scope: !3925)
!3963 = !DILocation(line: 34, column: 24, scope: !3925)
!3964 = !DILocation(line: 36, column: 4, scope: !3925)
!3965 = !DILocation(line: 37, column: 3, scope: !3925)
!3966 = !DILocation(line: 38, column: 3, scope: !3927)
!3967 = !DILocation(line: 38, column: 18, scope: !3927)
!3968 = !DILocation(line: 40, column: 27, scope: !3927)
!3969 = !DILocation(line: 40, column: 3, scope: !3927)
!3970 = !DILocation(line: 41, column: 2, scope: !3914)
!3971 = distinct !{!3971, !3938, !3970}
!3972 = !DILocation(line: 42, column: 1, scope: !3914)
!3973 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3974, file: !3974, line: 403, type: !3975, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3977)
!3974 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!112, !112}
!3977 = !{!3978}
!3978 = !DILocalVariable(name: "t", arg: 1, scope: !3973, file: !3974, line: 403, type: !112)
!3979 = !DILocation(line: 0, scope: !3973)
!3980 = !DILocalVariable(name: "t", arg: 1, scope: !3981, file: !3974, line: 102, type: !112)
!3981 = distinct !DISubprogram(name: "z_tmcvt", scope: !3974, file: !3974, line: 102, type: !3982, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3984)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!112, !112, !111, !111, !122, !122, !122, !122}
!3984 = !{!3980, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994}
!3985 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3981, file: !3974, line: 102, type: !111)
!3986 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3981, file: !3974, line: 103, type: !111)
!3987 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3981, file: !3974, line: 103, type: !122)
!3988 = !DILocalVariable(name: "result32", arg: 5, scope: !3981, file: !3974, line: 104, type: !122)
!3989 = !DILocalVariable(name: "round_up", arg: 6, scope: !3981, file: !3974, line: 104, type: !122)
!3990 = !DILocalVariable(name: "round_off", arg: 7, scope: !3981, file: !3974, line: 105, type: !122)
!3991 = !DILocalVariable(name: "mul_ratio", scope: !3981, file: !3974, line: 107, type: !122)
!3992 = !DILocalVariable(name: "div_ratio", scope: !3981, file: !3974, line: 109, type: !122)
!3993 = !DILocalVariable(name: "off", scope: !3981, file: !3974, line: 116, type: !112)
!3994 = !DILocalVariable(name: "rdivisor", scope: !3995, file: !3974, line: 119, type: !111)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3974, line: 118, column: 18)
!3996 = distinct !DILexicalBlock(scope: !3981, file: !3974, line: 118, column: 6)
!3997 = !DILocation(line: 0, scope: !3981, inlinedAt: !3998)
!3998 = distinct !DILocation(line: 406, column: 9, scope: !3973)
!3999 = !DILocation(line: 145, column: 13, scope: !4000, inlinedAt: !3998)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3974, line: 144, column: 10)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3974, line: 142, column: 7)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3974, line: 141, column: 24)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !3974, line: 141, column: 13)
!4004 = distinct !DILexicalBlock(scope: !3981, file: !3974, line: 134, column: 6)
!4005 = !DILocation(line: 406, column: 2, scope: !3973)
!4006 = distinct !DISubprogram(name: "zbus_chan_msg", scope: !119, file: !119, line: 395, type: !4007, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4009)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!102, !173}
!4009 = !{!4010}
!4010 = !DILocalVariable(name: "chan", arg: 1, scope: !4006, file: !119, line: 395, type: !173)
!4011 = !DILocation(line: 0, scope: !4006)
!4012 = !DILocation(line: 399, column: 15, scope: !4006)
!4013 = !DILocation(line: 399, column: 2, scope: !4006)
!4014 = distinct !DISubprogram(name: "filter_cb", scope: !350, file: !350, line: 51, type: !495, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4015)
!4015 = !{!4016, !4017, !4020}
!4016 = !DILocalVariable(name: "chan", arg: 1, scope: !4014, file: !350, line: 51, type: !497)
!4017 = !DILocalVariable(name: "chan_message", scope: !4014, file: !350, line: 58, type: !4018)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 32)
!4019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!4020 = !DILocalVariable(name: "dr", scope: !4014, file: !350, line: 68, type: !536)
!4021 = !DILocation(line: 0, scope: !4014)
!4022 = !DILocation(line: 60, column: 2, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !350, line: 60, column: 2)
!4024 = distinct !DILexicalBlock(scope: !4014, file: !350, line: 60, column: 2)
!4025 = !DILocation(line: 60, column: 2, scope: !4024)
!4026 = !DILocation(line: 60, column: 2, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4023, file: !350, line: 60, column: 2)
!4028 = !DILocation(line: 62, column: 17, scope: !4014)
!4029 = !DILocation(line: 64, column: 20, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4014, file: !350, line: 64, column: 6)
!4031 = !DILocation(line: 64, column: 25, scope: !4030)
!4032 = !DILocation(line: 64, column: 6, scope: !4014)
!4033 = !DILocation(line: 65, column: 24, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4030, file: !350, line: 64, column: 30)
!4035 = !DILocation(line: 65, column: 3, scope: !4034)
!4036 = !DILocation(line: 66, column: 2, scope: !4034)
!4037 = !DILocation(line: 68, column: 2, scope: !4014)
!4038 = !DILocation(line: 68, column: 17, scope: !4014)
!4039 = !DILocation(line: 70, column: 2, scope: !4014)
!4040 = !DILocation(line: 71, column: 1, scope: !4014)
!4041 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !119, file: !119, line: 416, type: !4042, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4044)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!13, !497}
!4044 = !{!4045}
!4045 = !DILocalVariable(name: "chan", arg: 1, scope: !4041, file: !119, line: 416, type: !497)
!4046 = !DILocation(line: 0, scope: !4041)
!4047 = !DILocation(line: 418, column: 2, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !119, line: 418, column: 2)
!4049 = distinct !DILexicalBlock(scope: !4041, file: !119, line: 418, column: 2)
!4050 = !DILocation(line: 418, column: 2, scope: !4049)
!4051 = !DILocation(line: 418, column: 2, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !119, line: 418, column: 2)
!4053 = !DILocation(line: 420, column: 15, scope: !4041)
!4054 = !DILocation(line: 420, column: 2, scope: !4041)
!4055 = distinct !DISubprogram(name: "main", scope: !350, file: !350, line: 75, type: !323, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4056)
!4056 = !{!4057}
!4057 = !DILocalVariable(name: "v", scope: !4055, file: !350, line: 77, type: !4058)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 32)
!4059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!4060 = !DILocation(line: 77, column: 32, scope: !4055)
!4061 = !DILocation(line: 0, scope: !4055)
!4062 = !DILocation(line: 80, column: 1, scope: !4055)
!4063 = distinct !DISubprogram(name: "producer_thread", scope: !554, file: !554, line: 15, type: !323, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !4064)
!4064 = !{!4065, !4066, !4067, !4069, !4076}
!4065 = !DILocalVariable(name: "chan", scope: !4063, file: !554, line: 17, type: !599)
!4066 = !DILocalVariable(name: "msg", scope: !4063, file: !554, line: 18, type: !102)
!4067 = !DILocalVariable(name: "i", scope: !4068, file: !554, line: 20, type: !166)
!4068 = distinct !DILexicalBlock(scope: !4063, file: !554, line: 20, column: 2)
!4069 = !DILocalVariable(name: "dyn_alloc_msg", scope: !4070, file: !554, line: 25, type: !4072)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !554, line: 20, column: 37)
!4071 = distinct !DILexicalBlock(scope: !4068, file: !554, line: 20, column: 2)
!4072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !4073)
!4073 = !{!4074, !4075}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4072, file: !515, line: 17, baseType: !102, size: 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4072, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!4076 = !DILocalVariable(name: "j", scope: !4077, file: !554, line: 27, type: !103)
!4077 = distinct !DILexicalBlock(scope: !4070, file: !554, line: 27, column: 3)
!4078 = !DILocation(line: 17, column: 2, scope: !4063)
!4079 = !DILocation(line: 0, scope: !4068)
!4080 = !DILocation(line: 20, column: 2, scope: !4068)
!4081 = !DILocation(line: 38, column: 1, scope: !4063)
!4082 = !DILocation(line: 21, column: 20, scope: !4070)
!4083 = !DILocation(line: 21, column: 9, scope: !4070)
!4084 = !DILocation(line: 0, scope: !4063)
!4085 = !DILocation(line: 23, column: 3, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !554, line: 23, column: 3)
!4087 = distinct !DILexicalBlock(scope: !4070, file: !554, line: 23, column: 3)
!4088 = !DILocation(line: 23, column: 3, scope: !4087)
!4089 = !DILocation(line: 23, column: 3, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4086, file: !554, line: 23, column: 3)
!4091 = !DILocation(line: 25, column: 3, scope: !4070)
!4092 = !DILocation(line: 25, column: 28, scope: !4070)
!4093 = !DILocation(line: 25, column: 44, scope: !4070)
!4094 = !DILocation(line: 0, scope: !4077)
!4095 = !DILocation(line: 28, column: 44, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !554, line: 27, column: 48)
!4097 = distinct !DILexicalBlock(scope: !4077, file: !554, line: 27, column: 3)
!4098 = !DILocation(line: 27, column: 37, scope: !4097)
!4099 = !DILocation(line: 27, column: 21, scope: !4097)
!4100 = !DILocation(line: 27, column: 3, scope: !4077)
!4101 = distinct !{!4101, !4100, !4102}
!4102 = !DILocation(line: 29, column: 3, scope: !4077)
!4103 = !DILocation(line: 31, column: 3, scope: !4070)
!4104 = !DILocation(line: 34, column: 7, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4070, file: !554, line: 34, column: 7)
!4106 = !DILocation(line: 34, column: 7, scope: !4070)
!4107 = !DILocation(line: 28, column: 30, scope: !4096)
!4108 = !DILocation(line: 28, column: 4, scope: !4096)
!4109 = !DILocation(line: 27, column: 43, scope: !4097)
!4110 = !DILocation(line: 35, column: 4, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !554, line: 35, column: 4)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !554, line: 35, column: 4)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !554, line: 35, column: 4)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !554, line: 35, column: 4)
!4115 = distinct !DILexicalBlock(scope: !4105, file: !554, line: 34, column: 55)
!4116 = !DILocation(line: 36, column: 3, scope: !4115)
!4117 = !DILocation(line: 37, column: 2, scope: !4071)
!4118 = !DILocation(line: 20, column: 25, scope: !4071)
!4119 = distinct !{!4119, !4080, !4120}
!4120 = !DILocation(line: 37, column: 2, scope: !4068)
!4121 = distinct !DISubprogram(name: "cbvprintf_package", scope: !750, file: !750, line: 233, type: !4122, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4131)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!103, !102, !156, !111, !108, !4124}
!4124 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4125, line: 99, baseType: !4126)
!4125 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4125, line: 40, baseType: !4127)
!4127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !750, baseType: !4128)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4129)
!4129 = !{!4130}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4128, file: !750, line: 18, baseType: !102, size: 32)
!4131 = !{!4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4167, !4176, !4179, !4180, !4183, !4186, !4189, !4192, !4198}
!4132 = !DILocalVariable(name: "packaged", arg: 1, scope: !4121, file: !750, line: 233, type: !102)
!4133 = !DILocalVariable(name: "len", arg: 2, scope: !4121, file: !750, line: 233, type: !156)
!4134 = !DILocalVariable(name: "flags", arg: 3, scope: !4121, file: !750, line: 233, type: !111)
!4135 = !DILocalVariable(name: "fmt", arg: 4, scope: !4121, file: !750, line: 234, type: !108)
!4136 = !DILocalVariable(name: "ap", arg: 5, scope: !4121, file: !750, line: 234, type: !4124)
!4137 = !DILocalVariable(name: "buf0", scope: !4121, file: !750, line: 247, type: !550)
!4138 = !DILocalVariable(name: "buf", scope: !4121, file: !750, line: 248, type: !550)
!4139 = !DILocalVariable(name: "size", scope: !4121, file: !750, line: 249, type: !32)
!4140 = !DILocalVariable(name: "align", scope: !4121, file: !750, line: 250, type: !32)
!4141 = !DILocalVariable(name: "str_ptr_pos", scope: !4121, file: !750, line: 251, type: !4142)
!4142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 128, elements: !333)
!4143 = !DILocalVariable(name: "str_ptr_arg", scope: !4121, file: !750, line: 252, type: !4142)
!4144 = !DILocalVariable(name: "s_idx", scope: !4121, file: !750, line: 253, type: !32)
!4145 = !DILocalVariable(name: "s_rw_cnt", scope: !4121, file: !750, line: 254, type: !32)
!4146 = !DILocalVariable(name: "s_ro_cnt", scope: !4121, file: !750, line: 255, type: !32)
!4147 = !DILocalVariable(name: "arg_idx", scope: !4121, file: !750, line: 256, type: !103)
!4148 = !DILocalVariable(name: "i", scope: !4121, file: !750, line: 257, type: !32)
!4149 = !DILocalVariable(name: "s", scope: !4121, file: !750, line: 258, type: !108)
!4150 = !DILocalVariable(name: "parsing", scope: !4121, file: !750, line: 259, type: !122)
!4151 = !DILocalVariable(name: "rws_pos_en", scope: !4121, file: !750, line: 263, type: !122)
!4152 = !DILocalVariable(name: "fros_cnt", scope: !4121, file: !750, line: 268, type: !103)
!4153 = !DILocalVariable(name: "is_str_arg", scope: !4121, file: !750, line: 269, type: !122)
!4154 = !DILocalVariable(name: "pkg_hdr", scope: !4121, file: !750, line: 270, type: !4155)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 32)
!4156 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4157, line: 78, size: 32, elements: !4158)
!4157 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4158 = !{!4159, !4166}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4156, file: !4157, line: 80, baseType: !4160, size: 32)
!4160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4157, line: 45, size: 32, elements: !4161)
!4161 = !{!4162, !4163, !4164, !4165}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4160, file: !4157, line: 47, baseType: !166, size: 8)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4160, file: !4157, line: 50, baseType: !166, size: 8, offset: 8)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4160, file: !4157, line: 53, baseType: !166, size: 8, offset: 16)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4160, file: !4157, line: 56, baseType: !166, size: 8, offset: 24)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4156, file: !4157, line: 82, baseType: !102, size: 32)
!4167 = !DILocalVariable(name: "v", scope: !4168, file: !750, line: 567, type: !4172)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !750, line: 562, column: 14)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !750, line: 481, column: 18)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !750, line: 466, column: 3)
!4171 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 343, column: 15)
!4172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !750, line: 567, size: 64, elements: !4173)
!4173 = !{!4174, !4175}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4172, file: !750, line: 567, baseType: !742, size: 64)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4172, file: !750, line: 567, baseType: !740, size: 64)
!4176 = !DILocalVariable(name: "is_ro", scope: !4177, file: !750, line: 620, type: !122)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !750, line: 613, column: 19)
!4178 = distinct !DILexicalBlock(scope: !4171, file: !750, line: 613, column: 7)
!4179 = !DILocalVariable(name: "do_ro", scope: !4177, file: !750, line: 621, type: !122)
!4180 = !DILocalVariable(name: "s_ptr_idx", scope: !4181, file: !750, line: 626, type: !111)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !750, line: 625, column: 11)
!4182 = distinct !DILexicalBlock(scope: !4177, file: !750, line: 623, column: 8)
!4183 = !DILocalVariable(name: "v", scope: !4184, file: !750, line: 684, type: !103)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !750, line: 683, column: 35)
!4185 = distinct !DILexicalBlock(scope: !4178, file: !750, line: 683, column: 14)
!4186 = !DILocalVariable(name: "v", scope: !4187, file: !750, line: 691, type: !746)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !750, line: 690, column: 36)
!4188 = distinct !DILexicalBlock(scope: !4185, file: !750, line: 690, column: 14)
!4189 = !DILocalVariable(name: "v", scope: !4190, file: !750, line: 698, type: !107)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !750, line: 697, column: 41)
!4191 = distinct !DILexicalBlock(scope: !4188, file: !750, line: 697, column: 14)
!4192 = !DILocalVariable(name: "pos", scope: !4193, file: !750, line: 762, type: !166)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !750, line: 757, column: 31)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !750, line: 757, column: 3)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !750, line: 757, column: 3)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !750, line: 756, column: 16)
!4197 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 756, column: 6)
!4198 = !DILabel(scope: !4177, name: "process_string", file: !750, line: 615)
!4199 = !DILocation(line: 0, scope: !4121)
!4200 = !DILocation(line: 251, column: 2, scope: !4121)
!4201 = !DILocation(line: 251, column: 10, scope: !4121)
!4202 = !DILocation(line: 252, column: 2, scope: !4121)
!4203 = !DILocation(line: 252, column: 10, scope: !4121)
!4204 = !DILocation(line: 263, column: 29, scope: !4121)
!4205 = !DILocation(line: 263, column: 21, scope: !4121)
!4206 = !DILocation(line: 268, column: 21, scope: !4121)
!4207 = !DILocation(line: 268, column: 19, scope: !4121)
!4208 = !DILocation(line: 273, column: 6, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 273, column: 6)
!4210 = !DILocation(line: 273, column: 26, scope: !4209)
!4211 = !DILocation(line: 273, column: 6, scope: !4121)
!4212 = !DILocation(line: 297, column: 6, scope: !4121)
!4213 = !DILocation(line: 305, column: 11, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 305, column: 6)
!4215 = !DILocation(line: 305, column: 6, scope: !4121)
!4216 = !DILocation(line: 327, column: 19, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 327, column: 6)
!4218 = !DILocation(line: 327, column: 22, scope: !4217)
!4219 = !DILocation(line: 327, column: 33, scope: !4217)
!4220 = !DILocation(line: 327, column: 50, scope: !4217)
!4221 = !DILocation(line: 327, column: 6, scope: !4121)
!4222 = !DILocation(line: 338, column: 9, scope: !4121)
!4223 = !DILocation(line: 341, column: 2, scope: !4121)
!4224 = !DILocation(line: 472, column: 8, scope: !4170)
!4225 = !DILocation(line: 473, column: 14, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !750, line: 473, column: 9)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !750, line: 472, column: 18)
!4228 = distinct !DILexicalBlock(scope: !4170, file: !750, line: 472, column: 8)
!4229 = !DILocation(line: 473, column: 9, scope: !4227)
!4230 = !DILocation(line: 479, column: 5, scope: !4227)
!4231 = !DILocation(line: 468, column: 9, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4170, file: !750, line: 468, column: 8)
!4233 = !DILocation(line: 468, column: 8, scope: !4232)
!4234 = !DILocation(line: 468, column: 15, scope: !4232)
!4235 = !DILocation(line: 468, column: 8, scope: !4170)
!4236 = distinct !{!4236, !4237, !4238}
!4237 = !DILocation(line: 343, column: 2, scope: !4121)
!4238 = !DILocation(line: 712, column: 2, scope: !4121)
!4239 = !DILocation(line: 481, column: 4, scope: !4170)
!4240 = !DILocation(line: 484, column: 12, scope: !4169)
!4241 = !DILocation(line: 485, column: 5, scope: !4169)
!4242 = !DILocation(line: 505, column: 5, scope: !4169)
!4243 = !DILocation(line: 518, column: 5, scope: !4169)
!4244 = !DILocation(line: 523, column: 5, scope: !4169)
!4245 = !DILocation(line: 532, column: 9, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4169, file: !750, line: 532, column: 9)
!4247 = !DILocation(line: 532, column: 17, scope: !4246)
!4248 = !DILocation(line: 532, column: 9, scope: !4169)
!4249 = !DILocation(line: 533, column: 10, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !750, line: 533, column: 10)
!4251 = distinct !DILexicalBlock(scope: !4246, file: !750, line: 532, column: 25)
!4252 = !DILocation(line: 533, column: 18, scope: !4250)
!4253 = !DILocation(line: 0, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4168, file: !750, line: 569, column: 9)
!4255 = !DILocation(line: 0, scope: !4168)
!4256 = !DILocation(line: 579, column: 20, scope: !4168)
!4257 = !DILocation(line: 579, column: 11, scope: !4168)
!4258 = !DILocation(line: 580, column: 9, scope: !4168)
!4259 = !DILocation(line: 582, column: 21, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !750, line: 582, column: 10)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !750, line: 580, column: 23)
!4262 = distinct !DILexicalBlock(scope: !4168, file: !750, line: 580, column: 9)
!4263 = !DILocation(line: 582, column: 28, scope: !4260)
!4264 = !DILocation(line: 582, column: 10, scope: !4261)
!4265 = !DILocation(line: 0, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !750, line: 587, column: 17)
!4267 = distinct !DILexicalBlock(scope: !4261, file: !750, line: 585, column: 10)
!4268 = !DILocation(line: 593, column: 9, scope: !4168)
!4269 = !DILocation(line: 600, column: 5, scope: !4169)
!4270 = !DILocation(line: 605, column: 18, scope: !4171)
!4271 = !DILocation(line: 605, column: 9, scope: !4171)
!4272 = !DILocation(line: 608, column: 20, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4171, file: !750, line: 608, column: 7)
!4274 = !DILocation(line: 608, column: 23, scope: !4273)
!4275 = !DILocation(line: 608, column: 34, scope: !4273)
!4276 = !DILocation(line: 608, column: 41, scope: !4273)
!4277 = !DILocation(line: 608, column: 7, scope: !4171)
!4278 = !DILocation(line: 613, column: 7, scope: !4171)
!4279 = !DILocation(line: 614, column: 8, scope: !4177)
!4280 = !DILocation(line: 614, column: 4, scope: !4177)
!4281 = !DILocation(line: 256, column: 6, scope: !4121)
!4282 = !DILocation(line: 254, column: 15, scope: !4121)
!4283 = !DILocation(line: 320, column: 7, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4214, file: !750, line: 305, column: 20)
!4285 = !DILocation(line: 615, column: 1, scope: !4177)
!4286 = !DILocation(line: 616, column: 8, scope: !4177)
!4287 = !DILocation(line: 617, column: 5, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !750, line: 616, column: 22)
!4289 = distinct !DILexicalBlock(scope: !4177, file: !750, line: 616, column: 8)
!4290 = !DILocation(line: 617, column: 25, scope: !4288)
!4291 = !DILocation(line: 618, column: 4, scope: !4288)
!4292 = !DILocation(line: 620, column: 26, scope: !4177)
!4293 = !DILocation(line: 620, column: 29, scope: !4177)
!4294 = !DILocation(line: 620, column: 17, scope: !4177)
!4295 = !DILocation(line: 620, column: 43, scope: !4177)
!4296 = !DILocation(line: 0, scope: !4177)
!4297 = !DILocation(line: 623, column: 14, scope: !4182)
!4298 = !DILocation(line: 626, column: 26, scope: !4181)
!4299 = !DILocation(line: 626, column: 37, scope: !4181)
!4300 = !DILocation(line: 0, scope: !4181)
!4301 = !DILocation(line: 634, column: 15, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4181, file: !750, line: 634, column: 9)
!4303 = !DILocation(line: 635, column: 6, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !750, line: 635, column: 6)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !750, line: 635, column: 6)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !750, line: 635, column: 6)
!4307 = distinct !DILexicalBlock(scope: !4302, file: !750, line: 634, column: 44)
!4308 = !DILocation(line: 639, column: 15, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4181, file: !750, line: 639, column: 9)
!4310 = !DILocation(line: 639, column: 9, scope: !4181)
!4311 = !DILocation(line: 640, column: 6, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !750, line: 640, column: 6)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !750, line: 640, column: 6)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !750, line: 640, column: 6)
!4315 = distinct !DILexicalBlock(scope: !4309, file: !750, line: 639, column: 43)
!4316 = !DILocation(line: 644, column: 9, scope: !4181)
!4317 = !DILocation(line: 649, column: 27, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !750, line: 644, column: 23)
!4319 = distinct !DILexicalBlock(scope: !4181, file: !750, line: 644, column: 9)
!4320 = !DILocation(line: 649, column: 6, scope: !4318)
!4321 = !DILocation(line: 649, column: 25, scope: !4318)
!4322 = !DILocation(line: 650, column: 27, scope: !4318)
!4323 = !DILocation(line: 650, column: 6, scope: !4318)
!4324 = !DILocation(line: 650, column: 25, scope: !4318)
!4325 = !DILocation(line: 651, column: 10, scope: !4318)
!4326 = !DILocation(line: 653, column: 26, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4328, file: !750, line: 651, column: 17)
!4328 = distinct !DILexicalBlock(scope: !4318, file: !750, line: 651, column: 10)
!4329 = !DILocation(line: 654, column: 15, scope: !4327)
!4330 = !DILocation(line: 655, column: 6, scope: !4327)
!4331 = !DILocation(line: 656, column: 15, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4328, file: !750, line: 655, column: 13)
!4333 = !DILocation(line: 658, column: 16, scope: !4319)
!4334 = !DILocation(line: 663, column: 10, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !750, line: 658, column: 23)
!4336 = distinct !DILexicalBlock(scope: !4319, file: !750, line: 658, column: 16)
!4337 = !DILocation(line: 664, column: 5, scope: !4335)
!4338 = !DILocation(line: 664, column: 16, scope: !4336)
!4339 = !DILocation(line: 669, column: 10, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !750, line: 664, column: 28)
!4341 = distinct !DILexicalBlock(scope: !4336, file: !750, line: 664, column: 16)
!4342 = !DILocation(line: 670, column: 5, scope: !4340)
!4343 = !DILocation(line: 675, column: 13, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4341, file: !750, line: 670, column: 12)
!4345 = !DILocation(line: 675, column: 27, scope: !4344)
!4346 = !DILocation(line: 675, column: 10, scope: !4344)
!4347 = !DILocation(line: 678, column: 10, scope: !4181)
!4348 = !DILocation(line: 680, column: 8, scope: !4177)
!4349 = !DILocation(line: 683, column: 14, scope: !4178)
!4350 = !DILocation(line: 684, column: 12, scope: !4184)
!4351 = !DILocation(line: 0, scope: !4184)
!4352 = !DILocation(line: 686, column: 8, scope: !4184)
!4353 = !DILocation(line: 687, column: 5, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !750, line: 686, column: 22)
!4355 = distinct !DILexicalBlock(scope: !4184, file: !750, line: 686, column: 8)
!4356 = !DILocation(line: 687, column: 17, scope: !4354)
!4357 = !DILocation(line: 688, column: 4, scope: !4354)
!4358 = !DILocation(line: 698, column: 18, scope: !4190)
!4359 = !DILocation(line: 0, scope: !4190)
!4360 = !DILocation(line: 700, column: 8, scope: !4190)
!4361 = !DILocation(line: 704, column: 6, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !750, line: 703, column: 12)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !750, line: 701, column: 9)
!4364 = distinct !DILexicalBlock(scope: !4365, file: !750, line: 700, column: 22)
!4365 = distinct !DILexicalBlock(scope: !4190, file: !750, line: 700, column: 8)
!4366 = !DILocation(line: 704, column: 24, scope: !4362)
!4367 = !DILocation(line: 706, column: 4, scope: !4364)
!4368 = !DILocation(line: 709, column: 4, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !750, line: 709, column: 4)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !750, line: 709, column: 4)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !750, line: 709, column: 4)
!4372 = distinct !DILexicalBlock(scope: !4191, file: !750, line: 708, column: 10)
!4373 = !DILocation(line: 0, scope: !4185)
!4374 = !DILocation(line: 0, scope: !4171)
!4375 = !DILocation(line: 720, column: 6, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 720, column: 6)
!4377 = !DILocation(line: 720, column: 17, scope: !4376)
!4378 = !DILocation(line: 720, column: 31, scope: !4376)
!4379 = !DILocation(line: 720, column: 6, scope: !4121)
!4380 = !DILocation(line: 721, column: 3, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !750, line: 721, column: 3)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !750, line: 721, column: 3)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !750, line: 721, column: 3)
!4384 = distinct !DILexicalBlock(scope: !4376, file: !750, line: 720, column: 38)
!4385 = !DILocation(line: 729, column: 6, scope: !4121)
!4386 = !DILocation(line: 730, column: 21, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !750, line: 729, column: 20)
!4388 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 729, column: 6)
!4389 = !DILocation(line: 730, column: 27, scope: !4387)
!4390 = !DILocation(line: 730, column: 3, scope: !4387)
!4391 = !DILocation(line: 737, column: 22, scope: !4121)
!4392 = !DILocation(line: 737, column: 20, scope: !4121)
!4393 = !DILocation(line: 0, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 739, column: 6)
!4395 = !DILocation(line: 745, column: 17, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4394, file: !750, line: 743, column: 9)
!4397 = !DILocation(line: 745, column: 25, scope: !4396)
!4398 = !DILocation(line: 746, column: 17, scope: !4396)
!4399 = !DILocation(line: 746, column: 28, scope: !4396)
!4400 = !DILocation(line: 749, column: 29, scope: !4121)
!4401 = !DILocation(line: 749, column: 16, scope: !4121)
!4402 = !DILocation(line: 749, column: 27, scope: !4121)
!4403 = !DILocation(line: 756, column: 6, scope: !4197)
!4404 = !DILocation(line: 756, column: 6, scope: !4121)
!4405 = !DILocation(line: 757, column: 3, scope: !4195)
!4406 = !DILocation(line: 758, column: 10, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4193, file: !750, line: 758, column: 8)
!4408 = !DILocation(line: 758, column: 25, scope: !4407)
!4409 = !DILocation(line: 758, column: 8, scope: !4193)
!4410 = !DILocation(line: 0, scope: !4193)
!4411 = !DILocation(line: 765, column: 8, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4193, file: !750, line: 765, column: 8)
!4413 = !DILocation(line: 765, column: 19, scope: !4412)
!4414 = !DILocation(line: 765, column: 23, scope: !4412)
!4415 = !DILocation(line: 765, column: 8, scope: !4193)
!4416 = !DILocation(line: 762, column: 33, scope: !4193)
!4417 = !DILocation(line: 769, column: 8, scope: !4193)
!4418 = !DILocation(line: 769, column: 11, scope: !4193)
!4419 = !DILocation(line: 757, column: 27, scope: !4194)
!4420 = !DILocation(line: 757, column: 17, scope: !4194)
!4421 = distinct !{!4421, !4405, !4422}
!4422 = !DILocation(line: 770, column: 3, scope: !4195)
!4423 = !DILocation(line: 774, column: 16, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !750, line: 774, column: 2)
!4425 = distinct !DILexicalBlock(scope: !4121, file: !750, line: 774, column: 2)
!4426 = !DILocation(line: 774, column: 2, scope: !4425)
!4427 = !DILocation(line: 776, column: 16, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !750, line: 776, column: 7)
!4429 = distinct !DILexicalBlock(scope: !4424, file: !750, line: 774, column: 30)
!4430 = !DILocation(line: 776, column: 19, scope: !4428)
!4431 = !DILocation(line: 776, column: 34, scope: !4428)
!4432 = !DILocation(line: 776, column: 7, scope: !4429)
!4433 = !DILocation(line: 780, column: 7, scope: !4429)
!4434 = !DILocation(line: 782, column: 13, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !750, line: 780, column: 19)
!4436 = distinct !DILexicalBlock(scope: !4429, file: !750, line: 780, column: 7)
!4437 = !DILocation(line: 782, column: 8, scope: !4435)
!4438 = !DILocation(line: 782, column: 11, scope: !4435)
!4439 = !DILocation(line: 783, column: 3, scope: !4435)
!4440 = !DILocation(line: 785, column: 26, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4436, file: !750, line: 783, column: 10)
!4442 = !DILocation(line: 785, column: 41, scope: !4441)
!4443 = !DILocation(line: 785, column: 24, scope: !4441)
!4444 = !DILocation(line: 785, column: 8, scope: !4441)
!4445 = !DILocation(line: 787, column: 52, scope: !4441)
!4446 = !DILocation(line: 789, column: 11, scope: !4441)
!4447 = !DILocation(line: 789, column: 21, scope: !4441)
!4448 = !DILocation(line: 0, scope: !4436)
!4449 = !DILocation(line: 793, column: 7, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4429, file: !750, line: 793, column: 7)
!4451 = !DILocation(line: 793, column: 18, scope: !4450)
!4452 = !DILocation(line: 793, column: 22, scope: !4450)
!4453 = !DILocation(line: 793, column: 29, scope: !4450)
!4454 = !DILocation(line: 793, column: 7, scope: !4429)
!4455 = !DILocation(line: 797, column: 12, scope: !4429)
!4456 = !DILocation(line: 797, column: 7, scope: !4429)
!4457 = !DILocation(line: 797, column: 10, scope: !4429)
!4458 = !DILocation(line: 799, column: 3, scope: !4429)
!4459 = !DILocation(line: 800, column: 7, scope: !4429)
!4460 = !DILocation(line: 801, column: 2, scope: !4429)
!4461 = !DILocation(line: 338, column: 4, scope: !4121)
!4462 = !DILocation(line: 774, column: 26, scope: !4424)
!4463 = distinct !{!4463, !4426, !4464}
!4464 = !DILocation(line: 801, column: 2, scope: !4425)
!4465 = !DILocation(line: 808, column: 9, scope: !4121)
!4466 = !DILocation(line: 808, column: 2, scope: !4121)
!4467 = !DILocation(line: 813, column: 1, scope: !4121)
!4468 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !750, file: !750, line: 33, type: !4469, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4471)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!122, !108}
!4471 = !{!4472}
!4472 = !DILocalVariable(name: "addr", arg: 1, scope: !4468, file: !750, line: 33, type: !108)
!4473 = !DILocation(line: 0, scope: !4468)
!4474 = !DILocation(line: 41, column: 9, scope: !4468)
!4475 = !DILocation(line: 41, column: 2, scope: !4468)
!4476 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4477, file: !4477, line: 24, type: !4478, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4480)
!4477 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!122, !13}
!4480 = !{!4481}
!4481 = !DILocalVariable(name: "addr", arg: 1, scope: !4476, file: !4477, line: 24, type: !13)
!4482 = !DILocation(line: 0, scope: !4476)
!4483 = !DILocation(line: 49, column: 30, scope: !4476)
!4484 = !DILocation(line: 49, column: 57, scope: !4476)
!4485 = !DILocation(line: 49, column: 2, scope: !4476)
!4486 = distinct !DISubprogram(name: "cbprintf_package", scope: !750, file: !750, line: 815, type: !4487, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4489)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!103, !102, !156, !111, !108, null}
!4489 = !{!4490, !4491, !4492, !4493, !4494, !4495}
!4490 = !DILocalVariable(name: "packaged", arg: 1, scope: !4486, file: !750, line: 815, type: !102)
!4491 = !DILocalVariable(name: "len", arg: 2, scope: !4486, file: !750, line: 815, type: !156)
!4492 = !DILocalVariable(name: "flags", arg: 3, scope: !4486, file: !750, line: 815, type: !111)
!4493 = !DILocalVariable(name: "format", arg: 4, scope: !4486, file: !750, line: 816, type: !108)
!4494 = !DILocalVariable(name: "ap", scope: !4486, file: !750, line: 818, type: !4124)
!4495 = !DILocalVariable(name: "ret", scope: !4486, file: !750, line: 819, type: !103)
!4496 = !DILocation(line: 0, scope: !4486)
!4497 = !DILocation(line: 818, column: 2, scope: !4486)
!4498 = !DILocation(line: 818, column: 10, scope: !4486)
!4499 = !DILocation(line: 821, column: 2, scope: !4486)
!4500 = !DILocation(line: 822, column: 8, scope: !4486)
!4501 = !DILocation(line: 823, column: 2, scope: !4486)
!4502 = !DILocation(line: 825, column: 1, scope: !4486)
!4503 = !DILocation(line: 824, column: 2, scope: !4486)
!4504 = distinct !DISubprogram(name: "cbpprintf_external", scope: !750, file: !750, line: 827, type: !4505, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4515)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!103, !4507, !4511, !102, !102}
!4507 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4157, line: 297, baseType: !4508)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 32)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!103, null}
!4511 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4157, line: 328, baseType: !4512)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 32)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!103, !4507, !102, !108, !4124}
!4515 = !{!4516, !4517, !4518, !4519, !4520, !4521, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534}
!4516 = !DILocalVariable(name: "out", arg: 1, scope: !4504, file: !750, line: 827, type: !4507)
!4517 = !DILocalVariable(name: "formatter", arg: 2, scope: !4504, file: !750, line: 828, type: !4511)
!4518 = !DILocalVariable(name: "ctx", arg: 3, scope: !4504, file: !750, line: 829, type: !102)
!4519 = !DILocalVariable(name: "packaged", arg: 4, scope: !4504, file: !750, line: 829, type: !102)
!4520 = !DILocalVariable(name: "buf", scope: !4504, file: !750, line: 831, type: !550)
!4521 = !DILocalVariable(name: "hdr", scope: !4504, file: !750, line: 832, type: !4522)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 32)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4157, line: 96, size: 64, elements: !4524)
!4524 = !{!4525, !4526}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4523, file: !4157, line: 98, baseType: !4156, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4523, file: !4157, line: 101, baseType: !160, size: 32, offset: 32)
!4527 = !DILocalVariable(name: "s", scope: !4504, file: !750, line: 833, type: !160)
!4528 = !DILocalVariable(name: "ps", scope: !4504, file: !750, line: 833, type: !748)
!4529 = !DILocalVariable(name: "i", scope: !4504, file: !750, line: 834, type: !32)
!4530 = !DILocalVariable(name: "args_size", scope: !4504, file: !750, line: 834, type: !32)
!4531 = !DILocalVariable(name: "s_nbr", scope: !4504, file: !750, line: 834, type: !32)
!4532 = !DILocalVariable(name: "ros_nbr", scope: !4504, file: !750, line: 834, type: !32)
!4533 = !DILocalVariable(name: "rws_nbr", scope: !4504, file: !750, line: 834, type: !32)
!4534 = !DILocalVariable(name: "s_idx", scope: !4504, file: !750, line: 834, type: !32)
!4535 = !DILocation(line: 0, scope: !4504)
!4536 = !DILocation(line: 836, column: 10, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4504, file: !750, line: 836, column: 6)
!4538 = !DILocation(line: 836, column: 6, scope: !4504)
!4539 = !DILocation(line: 842, column: 28, scope: !4504)
!4540 = !DILocation(line: 842, column: 14, scope: !4504)
!4541 = !DILocation(line: 852, column: 16, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !750, line: 852, column: 2)
!4543 = distinct !DILexicalBlock(scope: !4504, file: !750, line: 852, column: 2)
!4544 = !DILocation(line: 852, column: 2, scope: !4543)
!4545 = !DILocation(line: 841, column: 28, scope: !4504)
!4546 = !DILocation(line: 841, column: 14, scope: !4504)
!4547 = !DILocation(line: 841, column: 32, scope: !4504)
!4548 = !DILocation(line: 847, column: 19, scope: !4504)
!4549 = !DILocation(line: 843, column: 28, scope: !4504)
!4550 = !DILocation(line: 843, column: 14, scope: !4504)
!4551 = !DILocation(line: 847, column: 31, scope: !4504)
!4552 = !DILocation(line: 844, column: 28, scope: !4504)
!4553 = !DILocation(line: 844, column: 14, scope: !4504)
!4554 = !DILocation(line: 847, column: 45, scope: !4504)
!4555 = !DILocation(line: 847, column: 41, scope: !4504)
!4556 = !DILocation(line: 854, column: 24, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4542, file: !750, line: 852, column: 30)
!4558 = !DILocation(line: 854, column: 11, scope: !4557)
!4559 = !DILocation(line: 855, column: 30, scope: !4557)
!4560 = !DILocation(line: 855, column: 22, scope: !4557)
!4561 = !DILocation(line: 855, column: 8, scope: !4557)
!4562 = !DILocation(line: 857, column: 7, scope: !4557)
!4563 = !DILocation(line: 859, column: 8, scope: !4557)
!4564 = !DILocation(line: 859, column: 18, scope: !4557)
!4565 = !DILocation(line: 859, column: 5, scope: !4557)
!4566 = !DILocation(line: 852, column: 26, scope: !4542)
!4567 = distinct !{!4567, !4544, !4568}
!4568 = !DILocation(line: 860, column: 2, scope: !4543)
!4569 = !DILocation(line: 863, column: 6, scope: !4504)
!4570 = !DILocation(line: 866, column: 56, scope: !4504)
!4571 = !DILocation(line: 866, column: 9, scope: !4504)
!4572 = !DILocation(line: 866, column: 2, scope: !4504)
!4573 = !DILocation(line: 867, column: 1, scope: !4504)
!4574 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !750, file: !750, line: 179, type: !4575, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4577)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{!103, !4507, !4511, !102, !108, !102}
!4577 = !{!4578, !4579, !4580, !4581, !4582, !4583}
!4578 = !DILocalVariable(name: "out", arg: 1, scope: !4574, file: !750, line: 179, type: !4507)
!4579 = !DILocalVariable(name: "formatter", arg: 2, scope: !4574, file: !750, line: 180, type: !4511)
!4580 = !DILocalVariable(name: "ctx", arg: 3, scope: !4574, file: !750, line: 181, type: !102)
!4581 = !DILocalVariable(name: "fmt", arg: 4, scope: !4574, file: !750, line: 182, type: !108)
!4582 = !DILocalVariable(name: "buf", arg: 5, scope: !4574, file: !750, line: 182, type: !102)
!4583 = !DILocalVariable(name: "u", scope: !4574, file: !750, line: 187, type: !4584)
!4584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4574, file: !750, line: 184, size: 32, elements: !4585)
!4585 = !{!4586, !4587}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4584, file: !750, line: 185, baseType: !4124, size: 32)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4584, file: !750, line: 186, baseType: !102, size: 32)
!4588 = !DILocation(line: 0, scope: !4574)
!4589 = !DILocation(line: 191, column: 9, scope: !4574)
!4590 = !DILocation(line: 191, column: 2, scope: !4574)
!4591 = distinct !DISubprogram(name: "is_ptr", scope: !750, file: !750, line: 881, type: !4592, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4594)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!122, !108, !103}
!4594 = !{!4595, !4596, !4597, !4598, !4599}
!4595 = !DILocalVariable(name: "fmt", arg: 1, scope: !4591, file: !750, line: 881, type: !108)
!4596 = !DILocalVariable(name: "n", arg: 2, scope: !4591, file: !750, line: 881, type: !103)
!4597 = !DILocalVariable(name: "c", scope: !4591, file: !750, line: 883, type: !110)
!4598 = !DILocalVariable(name: "mod", scope: !4591, file: !750, line: 884, type: !122)
!4599 = !DILocalVariable(name: "cnt", scope: !4591, file: !750, line: 885, type: !103)
!4600 = !DILocation(line: 0, scope: !4591)
!4601 = !DILocation(line: 887, column: 14, scope: !4591)
!4602 = !DILocation(line: 887, column: 22, scope: !4591)
!4603 = !DILocation(line: 887, column: 2, scope: !4591)
!4604 = !DILocation(line: 887, column: 18, scope: !4591)
!4605 = !DILocation(line: 888, column: 7, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4591, file: !750, line: 887, column: 31)
!4607 = !DILocation(line: 889, column: 12, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !750, line: 889, column: 8)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !750, line: 888, column: 12)
!4610 = distinct !DILexicalBlock(scope: !4606, file: !750, line: 888, column: 7)
!4611 = !DILocation(line: 889, column: 8, scope: !4609)
!4612 = !DILocation(line: 890, column: 11, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !750, line: 890, column: 9)
!4614 = distinct !DILexicalBlock(scope: !4608, file: !750, line: 889, column: 18)
!4615 = !DILocation(line: 890, column: 9, scope: !4614)
!4616 = !DILocation(line: 892, column: 16, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4613, file: !750, line: 892, column: 16)
!4618 = !DILocation(line: 892, column: 16, scope: !4613)
!4619 = !DILocation(line: 895, column: 15, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4608, file: !750, line: 895, column: 15)
!4621 = !DILocation(line: 895, column: 15, scope: !4608)
!4622 = !DILocation(line: 900, column: 9, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4606, file: !750, line: 900, column: 7)
!4624 = !DILocation(line: 900, column: 7, scope: !4606)
!4625 = distinct !{!4625, !4603, !4626}
!4626 = !DILocation(line: 903, column: 2, scope: !4591)
!4627 = !DILocation(line: 906, column: 1, scope: !4591)
!4628 = distinct !DISubprogram(name: "is_fmt_spec", scope: !750, file: !750, line: 873, type: !4629, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4631)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!122, !110}
!4631 = !{!4632}
!4632 = !DILocalVariable(name: "c", arg: 1, scope: !4628, file: !750, line: 873, type: !110)
!4633 = !DILocation(line: 0, scope: !4628)
!4634 = !DILocation(line: 875, column: 19, scope: !4628)
!4635 = !DILocation(line: 875, column: 2, scope: !4628)
!4636 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !750, file: !750, line: 908, type: !4637, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4643)
!4637 = !DISubroutineType(types: !4638)
!4638 = !{!103, !102, !156, !4639, !102, !111, !3137, !156}
!4639 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4157, line: 308, baseType: !4640)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 32)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!103, !13, !156, !102}
!4643 = !{!4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4661, !4662, !4663, !4664, !4665, !4671, !4674, !4675, !4676, !4678, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4694, !4697, !4698, !4699, !4700, !4701, !4702, !4704, !4707, !4708, !4709}
!4644 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4636, file: !750, line: 908, type: !102)
!4645 = !DILocalVariable(name: "in_len", arg: 2, scope: !4636, file: !750, line: 909, type: !156)
!4646 = !DILocalVariable(name: "cb", arg: 3, scope: !4636, file: !750, line: 910, type: !4639)
!4647 = !DILocalVariable(name: "ctx", arg: 4, scope: !4636, file: !750, line: 911, type: !102)
!4648 = !DILocalVariable(name: "flags", arg: 5, scope: !4636, file: !750, line: 912, type: !111)
!4649 = !DILocalVariable(name: "strl", arg: 6, scope: !4636, file: !750, line: 913, type: !3137)
!4650 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4636, file: !750, line: 914, type: !156)
!4651 = !DILocalVariable(name: "buf", scope: !4636, file: !750, line: 918, type: !550)
!4652 = !DILocalVariable(name: "buf32", scope: !4636, file: !750, line: 919, type: !1370)
!4653 = !DILocalVariable(name: "args_size", scope: !4636, file: !750, line: 920, type: !32)
!4654 = !DILocalVariable(name: "ros_nbr", scope: !4636, file: !750, line: 920, type: !32)
!4655 = !DILocalVariable(name: "rws_nbr", scope: !4636, file: !750, line: 920, type: !32)
!4656 = !DILocalVariable(name: "fmt_present", scope: !4636, file: !750, line: 921, type: !122)
!4657 = !DILocalVariable(name: "rw_cpy", scope: !4636, file: !750, line: 922, type: !122)
!4658 = !DILocalVariable(name: "ro_cpy", scope: !4636, file: !750, line: 923, type: !122)
!4659 = !DILocalVariable(name: "in_desc", scope: !4636, file: !750, line: 924, type: !4660)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 32)
!4661 = !DILocalVariable(name: "out_len", scope: !4636, file: !750, line: 960, type: !103)
!4662 = !DILocalVariable(name: "fmt", scope: !4636, file: !750, line: 965, type: !108)
!4663 = !DILocalVariable(name: "str_pos", scope: !4636, file: !750, line: 966, type: !550)
!4664 = !DILocalVariable(name: "strl_cnt", scope: !4636, file: !750, line: 967, type: !156)
!4665 = !DILocalVariable(name: "i", scope: !4666, file: !750, line: 973, type: !103)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !750, line: 973, column: 4)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !750, line: 972, column: 15)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !750, line: 972, column: 7)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !750, line: 970, column: 18)
!4670 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 970, column: 6)
!4671 = !DILocalVariable(name: "str", scope: !4672, file: !750, line: 974, type: !108)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !750, line: 973, column: 38)
!4673 = distinct !DILexicalBlock(scope: !4666, file: !750, line: 973, column: 4)
!4674 = !DILocalVariable(name: "len", scope: !4672, file: !750, line: 975, type: !103)
!4675 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4669, file: !750, line: 990, type: !122)
!4676 = !DILocalVariable(name: "i", scope: !4677, file: !750, line: 995, type: !103)
!4677 = distinct !DILexicalBlock(scope: !4669, file: !750, line: 995, column: 3)
!4678 = !DILocalVariable(name: "arg_idx", scope: !4679, file: !750, line: 996, type: !166)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !750, line: 995, column: 37)
!4680 = distinct !DILexicalBlock(scope: !4677, file: !750, line: 995, column: 3)
!4681 = !DILocalVariable(name: "arg_pos", scope: !4679, file: !750, line: 997, type: !166)
!4682 = !DILocalVariable(name: "str", scope: !4679, file: !750, line: 998, type: !108)
!4683 = !DILocalVariable(name: "is_ro", scope: !4679, file: !750, line: 999, type: !122)
!4684 = !DILocalVariable(name: "len", scope: !4679, file: !750, line: 1000, type: !103)
!4685 = !DILocalVariable(name: "out_desc", scope: !4636, file: !750, line: 1038, type: !4160)
!4686 = !DILocalVariable(name: "cpy_str_pos", scope: !4636, file: !750, line: 1040, type: !4142)
!4687 = !DILocalVariable(name: "keep_str_pos", scope: !4636, file: !750, line: 1042, type: !4142)
!4688 = !DILocalVariable(name: "scpy_cnt", scope: !4636, file: !750, line: 1043, type: !166)
!4689 = !DILocalVariable(name: "keep_cnt", scope: !4636, file: !750, line: 1044, type: !166)
!4690 = !DILocalVariable(name: "dst", scope: !4636, file: !750, line: 1045, type: !550)
!4691 = !DILocalVariable(name: "rv", scope: !4636, file: !750, line: 1046, type: !103)
!4692 = !DILocalVariable(name: "i", scope: !4693, file: !750, line: 1074, type: !103)
!4693 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1074, column: 2)
!4694 = !DILocalVariable(name: "arg_idx", scope: !4695, file: !750, line: 1075, type: !166)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !750, line: 1074, column: 36)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !750, line: 1074, column: 2)
!4697 = !DILocalVariable(name: "arg_pos", scope: !4695, file: !750, line: 1076, type: !166)
!4698 = !DILocalVariable(name: "str", scope: !4695, file: !750, line: 1077, type: !108)
!4699 = !DILocalVariable(name: "is_ro", scope: !4695, file: !750, line: 1078, type: !122)
!4700 = !DILocalVariable(name: "in_desc_backup", scope: !4636, file: !750, line: 1114, type: !4160)
!4701 = !DILocalVariable(name: "strs_len", scope: !4636, file: !750, line: 1134, type: !156)
!4702 = !DILocalVariable(name: "i", scope: !4703, file: !750, line: 1143, type: !103)
!4703 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1143, column: 2)
!4704 = !DILocalVariable(name: "loc", scope: !4705, file: !750, line: 1144, type: !166)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !750, line: 1143, column: 37)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !750, line: 1143, column: 2)
!4707 = !DILocalVariable(name: "str", scope: !4705, file: !750, line: 1145, type: !108)
!4708 = !DILocalVariable(name: "str_len", scope: !4705, file: !750, line: 1146, type: !181)
!4709 = !DILabel(scope: !4710, name: "calculate_string_length", file: !750, line: 1021)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !750, line: 1020, column: 56)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !750, line: 1020, column: 15)
!4712 = distinct !DILexicalBlock(scope: !4679, file: !750, line: 1014, column: 8)
!4713 = !DILocation(line: 0, scope: !4636)
!4714 = !DILocation(line: 916, column: 2, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !750, line: 916, column: 2)
!4716 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 916, column: 2)
!4717 = !DILocation(line: 916, column: 2, scope: !4716)
!4718 = !DILocation(line: 916, column: 2, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4715, file: !750, line: 916, column: 2)
!4720 = !DILocation(line: 919, column: 20, scope: !4636)
!4721 = !DILocation(line: 921, column: 27, scope: !4636)
!4722 = !DILocation(line: 921, column: 21, scope: !4636)
!4723 = !DILocation(line: 926, column: 18, scope: !4636)
!4724 = !DILocation(line: 926, column: 11, scope: !4636)
!4725 = !DILocation(line: 926, column: 34, scope: !4636)
!4726 = !DILocation(line: 931, column: 21, scope: !4636)
!4727 = !DILocation(line: 931, column: 12, scope: !4636)
!4728 = !DILocation(line: 932, column: 11, scope: !4636)
!4729 = !DILocation(line: 932, column: 19, scope: !4636)
!4730 = !DILocation(line: 938, column: 21, scope: !4636)
!4731 = !DILocation(line: 938, column: 12, scope: !4636)
!4732 = !DILocation(line: 939, column: 19, scope: !4636)
!4733 = !DILocation(line: 939, column: 23, scope: !4636)
!4734 = !DILocation(line: 946, column: 14, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 946, column: 6)
!4736 = !DILocation(line: 947, column: 7, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !750, line: 947, column: 7)
!4738 = distinct !DILexicalBlock(scope: !4735, file: !750, line: 946, column: 26)
!4739 = !DILocation(line: 947, column: 7, scope: !4738)
!4740 = !DILocation(line: 948, column: 4, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4737, file: !750, line: 947, column: 11)
!4742 = !DILocation(line: 949, column: 3, scope: !4741)
!4743 = !DILocation(line: 958, column: 23, scope: !4636)
!4744 = !DILocation(line: 958, column: 14, scope: !4636)
!4745 = !DILocation(line: 958, column: 27, scope: !4636)
!4746 = !DILocation(line: 965, column: 41, scope: !4636)
!4747 = !DILocation(line: 965, column: 20, scope: !4636)
!4748 = !DILocation(line: 966, column: 22, scope: !4636)
!4749 = !DILocation(line: 970, column: 9, scope: !4670)
!4750 = !DILocation(line: 970, column: 6, scope: !4636)
!4751 = !DILocation(line: 972, column: 7, scope: !4669)
!4752 = !DILocation(line: 0, scope: !4666)
!4753 = !DILocation(line: 973, column: 4, scope: !4666)
!4754 = !DILocation(line: 974, column: 46, scope: !4672)
!4755 = !DILocation(line: 974, column: 40, scope: !4672)
!4756 = !DILocation(line: 974, column: 23, scope: !4672)
!4757 = !DILocation(line: 0, scope: !4672)
!4758 = !DILocation(line: 975, column: 15, scope: !4672)
!4759 = !DILocation(line: 978, column: 14, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4672, file: !750, line: 978, column: 9)
!4761 = !DILocation(line: 979, column: 25, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4760, file: !750, line: 978, column: 38)
!4763 = !DILocation(line: 979, column: 19, scope: !4762)
!4764 = !DILocation(line: 979, column: 6, scope: !4762)
!4765 = !DILocation(line: 979, column: 23, scope: !4762)
!4766 = !DILocation(line: 980, column: 5, scope: !4762)
!4767 = !DILocation(line: 981, column: 13, scope: !4672)
!4768 = !DILocation(line: 982, column: 12, scope: !4672)
!4769 = !DILocation(line: 973, column: 34, scope: !4673)
!4770 = !DILocation(line: 973, column: 22, scope: !4673)
!4771 = distinct !{!4771, !4753, !4772}
!4772 = !DILocation(line: 983, column: 4, scope: !4666)
!4773 = !DILocation(line: 985, column: 16, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !750, line: 985, column: 8)
!4775 = distinct !DILexicalBlock(scope: !4668, file: !750, line: 984, column: 10)
!4776 = !DILocation(line: 967, column: 9, scope: !4636)
!4777 = !DILocation(line: 971, column: 11, scope: !4669)
!4778 = !DILocation(line: 0, scope: !4669)
!4779 = !DILocation(line: 0, scope: !4677)
!4780 = !DILocation(line: 995, column: 21, scope: !4680)
!4781 = !DILocation(line: 995, column: 3, scope: !4677)
!4782 = !DILocation(line: 990, column: 34, scope: !4669)
!4783 = !DILocation(line: 990, column: 26, scope: !4669)
!4784 = !DILocation(line: 996, column: 30, scope: !4679)
!4785 = !DILocation(line: 0, scope: !4679)
!4786 = !DILocation(line: 997, column: 30, scope: !4679)
!4787 = !DILocation(line: 997, column: 22, scope: !4679)
!4788 = !DILocation(line: 998, column: 39, scope: !4679)
!4789 = !DILocation(line: 998, column: 22, scope: !4679)
!4790 = !DILocation(line: 999, column: 17, scope: !4679)
!4791 = !DILocation(line: 1002, column: 20, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4679, file: !750, line: 1002, column: 8)
!4793 = !DILocation(line: 996, column: 22, scope: !4679)
!4794 = !DILocation(line: 1002, column: 35, scope: !4792)
!4795 = !DILocation(line: 1002, column: 23, scope: !4792)
!4796 = !DILocation(line: 1002, column: 8, scope: !4679)
!4797 = !DILocation(line: 1003, column: 5, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !750, line: 1003, column: 5)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !750, line: 1003, column: 5)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !750, line: 1003, column: 5)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !750, line: 1003, column: 5)
!4802 = distinct !DILexicalBlock(scope: !4792, file: !750, line: 1002, column: 45)
!4803 = !DILocation(line: 1010, column: 13, scope: !4802)
!4804 = !DILocation(line: 1011, column: 5, scope: !4802)
!4805 = !DILocation(line: 1014, column: 8, scope: !4679)
!4806 = !DILocation(line: 1015, column: 9, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4712, file: !750, line: 1014, column: 15)
!4808 = !DILocation(line: 1018, column: 14, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !750, line: 1017, column: 12)
!4810 = distinct !DILexicalBlock(scope: !4807, file: !750, line: 1015, column: 9)
!4811 = !DILocation(line: 1020, column: 4, scope: !4807)
!4812 = !DILocation(line: 1020, column: 15, scope: !4712)
!4813 = !DILocation(line: 1021, column: 1, scope: !4710)
!4814 = !DILocation(line: 1022, column: 11, scope: !4710)
!4815 = !DILocation(line: 1025, column: 14, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4710, file: !750, line: 1025, column: 9)
!4817 = !DILocation(line: 1026, column: 25, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4816, file: !750, line: 1025, column: 38)
!4819 = !DILocation(line: 1026, column: 19, scope: !4818)
!4820 = !DILocation(line: 1026, column: 6, scope: !4818)
!4821 = !DILocation(line: 1026, column: 23, scope: !4818)
!4822 = !DILocation(line: 1027, column: 5, scope: !4818)
!4823 = !DILocation(line: 1031, column: 21, scope: !4710)
!4824 = !DILocation(line: 1031, column: 13, scope: !4710)
!4825 = !DILocation(line: 1032, column: 4, scope: !4710)
!4826 = !DILocation(line: 995, column: 33, scope: !4680)
!4827 = distinct !{!4827, !4781, !4828}
!4828 = !DILocation(line: 1033, column: 3, scope: !4677)
!4829 = !DILocation(line: 1040, column: 10, scope: !4636)
!4830 = !DILocation(line: 1042, column: 10, scope: !4636)
!4831 = !DILocation(line: 1052, column: 6, scope: !4636)
!4832 = !DILocation(line: 1055, column: 9, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !750, line: 1052, column: 14)
!4834 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1052, column: 6)
!4835 = !DILocation(line: 1056, column: 2, scope: !4833)
!4836 = !DILocation(line: 1056, column: 21, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !750, line: 1056, column: 13)
!4838 = !DILocation(line: 1066, column: 3, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !750, line: 1065, column: 11)
!4840 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1065, column: 6)
!4841 = !DILocation(line: 1067, column: 2, scope: !4839)
!4842 = !DILocation(line: 1068, column: 10, scope: !4636)
!4843 = !DILocation(line: 0, scope: !4693)
!4844 = !DILocation(line: 1074, column: 20, scope: !4696)
!4845 = !DILocation(line: 1074, column: 2, scope: !4693)
!4846 = !DILocation(line: 1110, column: 24, scope: !4636)
!4847 = !DILocation(line: 1053, column: 12, scope: !4833)
!4848 = !DILocation(line: 1054, column: 12, scope: !4833)
!4849 = !DILocation(line: 1108, column: 30, scope: !4636)
!4850 = !DILocation(line: 1108, column: 40, scope: !4636)
!4851 = !DILocation(line: 1108, column: 38, scope: !4636)
!4852 = !DILocation(line: 1109, column: 31, scope: !4636)
!4853 = !DILocation(line: 1109, column: 24, scope: !4636)
!4854 = !DILocation(line: 1110, column: 31, scope: !4636)
!4855 = !DILocation(line: 1114, column: 31, scope: !4636)
!4856 = !DILocation(line: 1114, column: 48, scope: !4636)
!4857 = !DILocation(line: 1115, column: 13, scope: !4636)
!4858 = !DILocation(line: 1118, column: 7, scope: !4636)
!4859 = !DILocation(line: 1119, column: 9, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1119, column: 6)
!4861 = !DILocation(line: 1119, column: 6, scope: !4636)
!4862 = !DILocation(line: 1075, column: 29, scope: !4695)
!4863 = !DILocation(line: 1075, column: 21, scope: !4695)
!4864 = !DILocation(line: 0, scope: !4695)
!4865 = !DILocation(line: 1076, column: 29, scope: !4695)
!4866 = !DILocation(line: 1076, column: 21, scope: !4695)
!4867 = !DILocation(line: 1077, column: 38, scope: !4695)
!4868 = !DILocation(line: 1077, column: 21, scope: !4695)
!4869 = !DILocation(line: 1078, column: 16, scope: !4695)
!4870 = !DILocation(line: 1080, column: 19, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4695, file: !750, line: 1080, column: 7)
!4872 = !DILocation(line: 1080, column: 34, scope: !4871)
!4873 = !DILocation(line: 1080, column: 22, scope: !4871)
!4874 = !DILocation(line: 1080, column: 7, scope: !4695)
!4875 = !DILocation(line: 1084, column: 7, scope: !4695)
!4876 = !DILocation(line: 1085, column: 8, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !750, line: 1084, column: 14)
!4878 = distinct !DILexicalBlock(scope: !4695, file: !750, line: 1084, column: 7)
!4879 = !DILocation(line: 1086, column: 5, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !750, line: 1086, column: 5)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !750, line: 1086, column: 5)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !750, line: 1085, column: 49)
!4883 = distinct !DILexicalBlock(scope: !4877, file: !750, line: 1085, column: 8)
!4884 = !DILocation(line: 1086, column: 5, scope: !4881)
!4885 = !DILocation(line: 1086, column: 5, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4880, file: !750, line: 1086, column: 5)
!4887 = !DILocation(line: 1087, column: 25, scope: !4882)
!4888 = !DILocation(line: 1087, column: 5, scope: !4882)
!4889 = !DILocation(line: 1088, column: 4, scope: !4882)
!4890 = !DILocation(line: 1088, column: 15, scope: !4883)
!4891 = !DILocation(line: 1089, column: 5, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !750, line: 1089, column: 5)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !750, line: 1089, column: 5)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !750, line: 1088, column: 61)
!4895 = distinct !DILexicalBlock(scope: !4883, file: !750, line: 1088, column: 15)
!4896 = !DILocation(line: 1089, column: 5, scope: !4893)
!4897 = !DILocation(line: 1089, column: 5, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4892, file: !750, line: 1089, column: 5)
!4899 = !DILocation(line: 1090, column: 26, scope: !4894)
!4900 = !DILocation(line: 1090, column: 5, scope: !4894)
!4901 = !DILocation(line: 1091, column: 4, scope: !4894)
!4902 = !DILocation(line: 1095, column: 8, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4878, file: !750, line: 1094, column: 10)
!4904 = !DILocation(line: 1096, column: 5, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !750, line: 1096, column: 5)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !750, line: 1096, column: 5)
!4907 = distinct !DILexicalBlock(scope: !4908, file: !750, line: 1095, column: 49)
!4908 = distinct !DILexicalBlock(scope: !4903, file: !750, line: 1095, column: 8)
!4909 = !DILocation(line: 1096, column: 5, scope: !4906)
!4910 = !DILocation(line: 1096, column: 5, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4905, file: !750, line: 1096, column: 5)
!4912 = !DILocation(line: 1097, column: 25, scope: !4907)
!4913 = !DILocation(line: 1097, column: 5, scope: !4907)
!4914 = !DILocation(line: 1098, column: 4, scope: !4907)
!4915 = !DILocation(line: 1099, column: 5, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !750, line: 1099, column: 5)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !750, line: 1099, column: 5)
!4918 = distinct !DILexicalBlock(scope: !4908, file: !750, line: 1098, column: 11)
!4919 = !DILocation(line: 1099, column: 5, scope: !4917)
!4920 = !DILocation(line: 1099, column: 5, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4916, file: !750, line: 1099, column: 5)
!4922 = !DILocation(line: 1100, column: 26, scope: !4918)
!4923 = !DILocation(line: 1100, column: 5, scope: !4918)
!4924 = !DILocation(line: 1100, column: 30, scope: !4918)
!4925 = !DILocation(line: 1101, column: 26, scope: !4918)
!4926 = !DILocation(line: 1101, column: 5, scope: !4918)
!4927 = !DILocation(line: 0, scope: !4878)
!4928 = !DILocation(line: 1074, column: 32, scope: !4696)
!4929 = distinct !{!4929, !4845, !4930}
!4930 = !DILocation(line: 1104, column: 2, scope: !4693)
!4931 = !DILocation(line: 1124, column: 13, scope: !4636)
!4932 = !DILocation(line: 1127, column: 10, scope: !4636)
!4933 = !DILocation(line: 1127, column: 7, scope: !4636)
!4934 = !DILocation(line: 1128, column: 9, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1128, column: 6)
!4936 = !DILocation(line: 1128, column: 6, scope: !4636)
!4937 = !DILocation(line: 1134, column: 27, scope: !4636)
!4938 = !DILocation(line: 1136, column: 7, scope: !4636)
!4939 = !DILocation(line: 1137, column: 9, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4636, file: !750, line: 1137, column: 6)
!4941 = !DILocation(line: 1137, column: 6, scope: !4636)
!4942 = !DILocation(line: 1131, column: 10, scope: !4636)
!4943 = !DILocation(line: 1140, column: 10, scope: !4636)
!4944 = !DILocation(line: 0, scope: !4703)
!4945 = !DILocation(line: 1143, column: 20, scope: !4706)
!4946 = !DILocation(line: 1143, column: 2, scope: !4703)
!4947 = !DILocation(line: 1144, column: 3, scope: !4705)
!4948 = !DILocation(line: 1144, column: 17, scope: !4705)
!4949 = !DILocation(line: 0, scope: !4705)
!4950 = !DILocation(line: 1144, column: 11, scope: !4705)
!4951 = !DILocation(line: 1145, column: 38, scope: !4705)
!4952 = !DILocation(line: 1145, column: 21, scope: !4705)
!4953 = !DILocation(line: 1146, column: 22, scope: !4705)
!4954 = !DILocation(line: 1146, column: 29, scope: !4705)
!4955 = !DILocation(line: 1148, column: 8, scope: !4705)
!4956 = !DILocation(line: 1149, column: 10, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4705, file: !750, line: 1149, column: 7)
!4958 = !DILocation(line: 1149, column: 7, scope: !4705)
!4959 = !DILocation(line: 1154, column: 8, scope: !4705)
!4960 = !DILocation(line: 1155, column: 10, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4705, file: !750, line: 1155, column: 7)
!4962 = !DILocation(line: 1155, column: 7, scope: !4705)
!4963 = !DILocation(line: 1159, column: 2, scope: !4706)
!4964 = !DILocation(line: 1152, column: 11, scope: !4705)
!4965 = !DILocation(line: 1158, column: 11, scope: !4705)
!4966 = !DILocation(line: 1143, column: 33, scope: !4706)
!4967 = distinct !{!4967, !4946, !4968}
!4968 = !DILocation(line: 1159, column: 2, scope: !4703)
!4969 = !DILocation(line: 1162, column: 8, scope: !4636)
!4970 = !DILocation(line: 1164, column: 2, scope: !4636)
!4971 = !DILocation(line: 1165, column: 1, scope: !4636)
!4972 = distinct !DISubprogram(name: "get_package_len", scope: !750, file: !750, line: 196, type: !4973, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4975)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!156, !102}
!4975 = !{!4976, !4977, !4978, !4979, !4980, !4981, !4982}
!4976 = !DILocalVariable(name: "packaged", arg: 1, scope: !4972, file: !750, line: 196, type: !102)
!4977 = !DILocalVariable(name: "buf", scope: !4972, file: !750, line: 200, type: !550)
!4978 = !DILocalVariable(name: "start", scope: !4972, file: !750, line: 201, type: !550)
!4979 = !DILocalVariable(name: "args_size", scope: !4972, file: !750, line: 202, type: !32)
!4980 = !DILocalVariable(name: "s_nbr", scope: !4972, file: !750, line: 202, type: !32)
!4981 = !DILocalVariable(name: "ros_nbr", scope: !4972, file: !750, line: 202, type: !32)
!4982 = !DILocalVariable(name: "i", scope: !4983, file: !750, line: 215, type: !103)
!4983 = distinct !DILexicalBlock(scope: !4972, file: !750, line: 215, column: 2)
!4984 = !DILocation(line: 0, scope: !4972)
!4985 = !DILocation(line: 198, column: 2, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !750, line: 198, column: 2)
!4987 = distinct !DILexicalBlock(scope: !4972, file: !750, line: 198, column: 2)
!4988 = !DILocation(line: 198, column: 2, scope: !4987)
!4989 = !DILocation(line: 198, column: 2, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4986, file: !750, line: 198, column: 2)
!4991 = !DILocation(line: 204, column: 14, scope: !4972)
!4992 = !DILocation(line: 204, column: 21, scope: !4972)
!4993 = !DILocation(line: 205, column: 14, scope: !4972)
!4994 = !DILocation(line: 206, column: 14, scope: !4972)
!4995 = !DILocation(line: 209, column: 6, scope: !4972)
!4996 = !DILocation(line: 212, column: 6, scope: !4972)
!4997 = !DILocation(line: 0, scope: !4983)
!4998 = !DILocation(line: 215, column: 20, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4983, file: !750, line: 215, column: 2)
!5000 = !DILocation(line: 215, column: 2, scope: !4983)
!5001 = !DILocation(line: 220, column: 33, scope: !4972)
!5002 = !DILocation(line: 220, column: 2, scope: !4972)
!5003 = !DILocation(line: 216, column: 6, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4999, file: !750, line: 215, column: 34)
!5005 = !DILocation(line: 217, column: 10, scope: !5004)
!5006 = !DILocation(line: 217, column: 36, scope: !5004)
!5007 = !DILocation(line: 217, column: 7, scope: !5004)
!5008 = !DILocation(line: 215, column: 30, scope: !4999)
!5009 = distinct !{!5009, !5000, !5010}
!5010 = !DILocation(line: 218, column: 2, scope: !4983)
!5011 = distinct !DISubprogram(name: "append_string", scope: !750, file: !750, line: 223, type: !5012, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !5014)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{!103, !4639, !102, !108, !181}
!5014 = !{!5015, !5016, !5017, !5018}
!5015 = !DILocalVariable(name: "cb", arg: 1, scope: !5011, file: !750, line: 223, type: !4639)
!5016 = !DILocalVariable(name: "ctx", arg: 2, scope: !5011, file: !750, line: 223, type: !102)
!5017 = !DILocalVariable(name: "str", arg: 3, scope: !5011, file: !750, line: 223, type: !108)
!5018 = !DILocalVariable(name: "strl", arg: 4, scope: !5011, file: !750, line: 223, type: !181)
!5019 = !DILocation(line: 0, scope: !5011)
!5020 = !DILocation(line: 225, column: 9, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5011, file: !750, line: 225, column: 6)
!5022 = !DILocation(line: 225, column: 6, scope: !5011)
!5023 = !DILocation(line: 226, column: 14, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5021, file: !750, line: 225, column: 18)
!5025 = !DILocation(line: 226, column: 12, scope: !5024)
!5026 = !DILocation(line: 226, column: 3, scope: !5024)
!5027 = !DILocation(line: 229, column: 14, scope: !5011)
!5028 = !DILocation(line: 229, column: 9, scope: !5011)
!5029 = !DILocation(line: 229, column: 27, scope: !5011)
!5030 = !DILocation(line: 229, column: 39, scope: !5011)
!5031 = !DILocation(line: 230, column: 17, scope: !5011)
!5032 = !DILocation(line: 230, column: 9, scope: !5011)
!5033 = !DILocation(line: 230, column: 2, scope: !5011)
!5034 = !DILocation(line: 231, column: 1, scope: !5011)
!5035 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !762, file: !762, line: 45, type: !764, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5036)
!5036 = !{!5037}
!5037 = !DILocalVariable(name: "c", arg: 1, scope: !5035, file: !762, line: 45, type: !103)
!5038 = !DILocation(line: 0, scope: !5035)
!5039 = !DILocation(line: 50, column: 2, scope: !5035)
!5040 = distinct !DISubprogram(name: "__printk_hook_install", scope: !762, file: !762, line: 63, type: !5041, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5043)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{null, !763}
!5043 = !{!5044}
!5044 = !DILocalVariable(name: "fn", arg: 1, scope: !5040, file: !762, line: 63, type: !763)
!5045 = !DILocation(line: 0, scope: !5040)
!5046 = !DILocation(line: 65, column: 12, scope: !5040)
!5047 = !DILocation(line: 66, column: 1, scope: !5040)
!5048 = distinct !DISubprogram(name: "__printk_get_hook", scope: !762, file: !762, line: 76, type: !5049, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !2571)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!102}
!5051 = !DILocation(line: 78, column: 9, scope: !5048)
!5052 = !DILocation(line: 78, column: 2, scope: !5048)
!5053 = distinct !DISubprogram(name: "vprintk", scope: !762, file: !762, line: 113, type: !5054, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5062)
!5054 = !DISubroutineType(types: !5055)
!5055 = !{null, !108, !5056}
!5056 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4125, line: 99, baseType: !5057)
!5057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4125, line: 40, baseType: !5058)
!5058 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !762, baseType: !5059)
!5059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5060)
!5060 = !{!5061}
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5059, file: !762, line: 79, baseType: !102, size: 32)
!5062 = !{!5063, !5064, !5065}
!5063 = !DILocalVariable(name: "fmt", arg: 1, scope: !5053, file: !762, line: 113, type: !108)
!5064 = !DILocalVariable(name: "ap", arg: 2, scope: !5053, file: !762, line: 113, type: !5056)
!5065 = !DILocalVariable(name: "ctx", scope: !5066, file: !762, line: 121, type: !5068)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !762, line: 120, column: 27)
!5067 = distinct !DILexicalBlock(scope: !5053, file: !762, line: 120, column: 6)
!5068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !762, line: 81, size: 32, elements: !5069)
!5069 = !{!5070, !5071}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5068, file: !762, line: 85, baseType: !32, size: 32)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5068, file: !762, line: 86, baseType: !5072, offset: 32)
!5072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, elements: !3135)
!5073 = !DILocation(line: 0, scope: !5053)
!5074 = !DILocation(line: 148, column: 3, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5067, file: !762, line: 138, column: 9)
!5076 = !DILocation(line: 155, column: 1, scope: !5053)
!5077 = distinct !DISubprogram(name: "char_out", scope: !762, file: !762, line: 107, type: !5078, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5080)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!103, !103, !102}
!5080 = !{!5081, !5082}
!5081 = !DILocalVariable(name: "c", arg: 1, scope: !5077, file: !762, line: 107, type: !103)
!5082 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5077, file: !762, line: 107, type: !102)
!5083 = !DILocation(line: 0, scope: !5077)
!5084 = !DILocation(line: 110, column: 9, scope: !5077)
!5085 = !DILocation(line: 110, column: 2, scope: !5077)
!5086 = distinct !DISubprogram(name: "cbvprintf", scope: !4157, file: !4157, line: 739, type: !5087, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!103, !4507, !102, !108, !5056}
!5089 = !{!5090, !5091, !5092, !5093}
!5090 = !DILocalVariable(name: "out", arg: 1, scope: !5086, file: !4157, line: 739, type: !4507)
!5091 = !DILocalVariable(name: "ctx", arg: 2, scope: !5086, file: !4157, line: 739, type: !102)
!5092 = !DILocalVariable(name: "format", arg: 3, scope: !5086, file: !4157, line: 739, type: !108)
!5093 = !DILocalVariable(name: "ap", arg: 4, scope: !5086, file: !4157, line: 739, type: !5056)
!5094 = !DILocation(line: 0, scope: !5086)
!5095 = !DILocation(line: 741, column: 9, scope: !5086)
!5096 = !DILocation(line: 741, column: 2, scope: !5086)
!5097 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !762, file: !762, line: 157, type: !5098, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5100)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{null, !160, !156}
!5100 = !{!5101, !5102, !5103}
!5101 = !DILocalVariable(name: "c", arg: 1, scope: !5097, file: !762, line: 157, type: !160)
!5102 = !DILocalVariable(name: "n", arg: 2, scope: !5097, file: !762, line: 157, type: !156)
!5103 = !DILocalVariable(name: "i", scope: !5097, file: !762, line: 159, type: !156)
!5104 = !DILocation(line: 0, scope: !5097)
!5105 = !DILocation(line: 164, column: 16, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !762, line: 164, column: 2)
!5107 = distinct !DILexicalBlock(scope: !5097, file: !762, line: 164, column: 2)
!5108 = !DILocation(line: 164, column: 2, scope: !5107)
!5109 = !DILocation(line: 165, column: 3, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5106, file: !762, line: 164, column: 26)
!5111 = !DILocation(line: 165, column: 13, scope: !5110)
!5112 = !DILocation(line: 164, column: 22, scope: !5106)
!5113 = distinct !{!5113, !5108, !5114}
!5114 = !DILocation(line: 166, column: 2, scope: !5107)
!5115 = !DILocation(line: 171, column: 1, scope: !5097)
!5116 = distinct !DISubprogram(name: "printk", scope: !762, file: !762, line: 203, type: !5117, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5119)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{null, !108, null}
!5119 = !{!5120, !5121}
!5120 = !DILocalVariable(name: "fmt", arg: 1, scope: !5116, file: !762, line: 203, type: !108)
!5121 = !DILocalVariable(name: "ap", scope: !5116, file: !762, line: 205, type: !5056)
!5122 = !DILocation(line: 0, scope: !5116)
!5123 = !DILocation(line: 205, column: 2, scope: !5116)
!5124 = !DILocation(line: 205, column: 10, scope: !5116)
!5125 = !DILocation(line: 207, column: 2, scope: !5116)
!5126 = !DILocation(line: 209, column: 2, scope: !5116)
!5127 = !DILocation(line: 211, column: 2, scope: !5116)
!5128 = !DILocation(line: 212, column: 1, scope: !5116)
!5129 = distinct !DISubprogram(name: "snprintk", scope: !762, file: !762, line: 239, type: !5130, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5132)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!103, !160, !156, !108, null}
!5132 = !{!5133, !5134, !5135, !5136, !5137}
!5133 = !DILocalVariable(name: "str", arg: 1, scope: !5129, file: !762, line: 239, type: !160)
!5134 = !DILocalVariable(name: "size", arg: 2, scope: !5129, file: !762, line: 239, type: !156)
!5135 = !DILocalVariable(name: "fmt", arg: 3, scope: !5129, file: !762, line: 239, type: !108)
!5136 = !DILocalVariable(name: "ap", scope: !5129, file: !762, line: 241, type: !5056)
!5137 = !DILocalVariable(name: "ret", scope: !5129, file: !762, line: 242, type: !103)
!5138 = !DILocation(line: 0, scope: !5129)
!5139 = !DILocation(line: 241, column: 2, scope: !5129)
!5140 = !DILocation(line: 241, column: 10, scope: !5129)
!5141 = !DILocation(line: 244, column: 2, scope: !5129)
!5142 = !DILocation(line: 245, column: 8, scope: !5129)
!5143 = !DILocation(line: 246, column: 2, scope: !5129)
!5144 = !DILocation(line: 249, column: 1, scope: !5129)
!5145 = !DILocation(line: 248, column: 2, scope: !5129)
!5146 = distinct !DISubprogram(name: "vsnprintk", scope: !762, file: !762, line: 251, type: !5147, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5149)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{!103, !160, !156, !108, !5056}
!5149 = !{!5150, !5151, !5152, !5153, !5154}
!5150 = !DILocalVariable(name: "str", arg: 1, scope: !5146, file: !762, line: 251, type: !160)
!5151 = !DILocalVariable(name: "size", arg: 2, scope: !5146, file: !762, line: 251, type: !156)
!5152 = !DILocalVariable(name: "fmt", arg: 3, scope: !5146, file: !762, line: 251, type: !108)
!5153 = !DILocalVariable(name: "ap", arg: 4, scope: !5146, file: !762, line: 251, type: !5056)
!5154 = !DILocalVariable(name: "ctx", scope: !5146, file: !762, line: 253, type: !5155)
!5155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !762, line: 217, size: 96, elements: !5156)
!5156 = !{!5157, !5158, !5159}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5155, file: !762, line: 218, baseType: !160, size: 32)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5155, file: !762, line: 219, baseType: !103, size: 32, offset: 32)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5155, file: !762, line: 220, baseType: !103, size: 32, offset: 64)
!5160 = !DILocation(line: 0, scope: !5146)
!5161 = !DILocation(line: 253, column: 2, scope: !5146)
!5162 = !DILocation(line: 253, column: 21, scope: !5146)
!5163 = !DILocation(line: 253, column: 27, scope: !5146)
!5164 = !DILocation(line: 255, column: 2, scope: !5146)
!5165 = !DILocation(line: 257, column: 10, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5146, file: !762, line: 257, column: 6)
!5167 = !DILocation(line: 257, column: 22, scope: !5166)
!5168 = !DILocation(line: 257, column: 16, scope: !5166)
!5169 = !DILocation(line: 257, column: 6, scope: !5146)
!5170 = !DILocation(line: 258, column: 3, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5166, file: !762, line: 257, column: 27)
!5172 = !DILocation(line: 258, column: 18, scope: !5171)
!5173 = !DILocation(line: 259, column: 2, scope: !5171)
!5174 = !DILocation(line: 262, column: 1, scope: !5146)
!5175 = !DILocation(line: 261, column: 2, scope: !5146)
!5176 = distinct !DISubprogram(name: "str_out", scope: !762, file: !762, line: 223, type: !5177, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5180)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!103, !103, !5179}
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 32)
!5180 = !{!5181, !5182}
!5181 = !DILocalVariable(name: "c", arg: 1, scope: !5176, file: !762, line: 223, type: !103)
!5182 = !DILocalVariable(name: "ctx", arg: 2, scope: !5176, file: !762, line: 223, type: !5179)
!5183 = !DILocation(line: 0, scope: !5176)
!5184 = !DILocation(line: 225, column: 11, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5176, file: !762, line: 225, column: 6)
!5186 = !DILocation(line: 225, column: 15, scope: !5185)
!5187 = !DILocation(line: 0, scope: !5185)
!5188 = !DILocation(line: 225, column: 23, scope: !5185)
!5189 = !DILocation(line: 225, column: 45, scope: !5185)
!5190 = !DILocation(line: 225, column: 37, scope: !5185)
!5191 = !DILocation(line: 225, column: 6, scope: !5176)
!5192 = !DILocation(line: 226, column: 8, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5185, file: !762, line: 225, column: 50)
!5194 = !DILocation(line: 226, column: 13, scope: !5193)
!5195 = !DILocation(line: 227, column: 3, scope: !5193)
!5196 = !DILocation(line: 230, column: 29, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5176, file: !762, line: 230, column: 6)
!5198 = !DILocation(line: 230, column: 17, scope: !5197)
!5199 = !DILocation(line: 230, column: 6, scope: !5176)
!5200 = !DILocation(line: 231, column: 22, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !762, line: 230, column: 34)
!5202 = !DILocation(line: 231, column: 3, scope: !5201)
!5203 = !DILocation(line: 231, column: 26, scope: !5201)
!5204 = !DILocation(line: 232, column: 2, scope: !5201)
!5205 = !DILocation(line: 233, column: 28, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5197, file: !762, line: 232, column: 9)
!5207 = !DILocation(line: 233, column: 22, scope: !5206)
!5208 = !DILocation(line: 233, column: 3, scope: !5206)
!5209 = !DILocation(line: 233, column: 26, scope: !5206)
!5210 = !DILocation(line: 237, column: 1, scope: !5176)
!5211 = distinct !DISubprogram(name: "z_thread_entry", scope: !5212, file: !5212, line: 30, type: !5213, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3103, retainedNodes: !5215)
!5212 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5213 = !DISubroutineType(types: !5214)
!5214 = !{null, !310, !102, !102, !102}
!5215 = !{!5216, !5217, !5218, !5219}
!5216 = !DILocalVariable(name: "entry", arg: 1, scope: !5211, file: !5212, line: 30, type: !310)
!5217 = !DILocalVariable(name: "p1", arg: 2, scope: !5211, file: !5212, line: 31, type: !102)
!5218 = !DILocalVariable(name: "p2", arg: 3, scope: !5211, file: !5212, line: 31, type: !102)
!5219 = !DILocalVariable(name: "p3", arg: 4, scope: !5211, file: !5212, line: 31, type: !102)
!5220 = !DILocation(line: 0, scope: !5211)
!5221 = !DILocation(line: 36, column: 2, scope: !5211)
!5222 = !DILocation(line: 38, column: 17, scope: !5211)
!5223 = !DILocation(line: 38, column: 2, scope: !5211)
!5224 = !DILocation(line: 45, column: 2, scope: !5211)
!5225 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !5226, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3103, retainedNodes: !2571)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{!5228}
!5228 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !5229)
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 32)
!5230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !5231)
!5231 = !{!5232, !5290, !5302, !5303, !5304, !5305, !5311, !5326}
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5230, file: !199, line: 247, baseType: !5233, size: 384)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !5234)
!5234 = !{!5235, !5259, !5266, !5267, !5268, !5277, !5278, !5279}
!5235 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !199, line: 60, baseType: !5236, size: 64)
!5236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !199, line: 60, size: 64, elements: !5237)
!5237 = !{!5238, !5253}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5236, file: !199, line: 61, baseType: !5239, size: 64)
!5239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !5240)
!5240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !5241)
!5241 = !{!5242, !5248}
!5242 = !DIDerivedType(tag: DW_TAG_member, scope: !5240, file: !136, line: 38, baseType: !5243, size: 32)
!5243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5240, file: !136, line: 38, size: 32, elements: !5244)
!5244 = !{!5245, !5247}
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5243, file: !136, line: 39, baseType: !5246, size: 32)
!5246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 32)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5243, file: !136, line: 40, baseType: !5246, size: 32)
!5248 = !DIDerivedType(tag: DW_TAG_member, scope: !5240, file: !136, line: 42, baseType: !5249, size: 32, offset: 32)
!5249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5240, file: !136, line: 42, size: 32, elements: !5250)
!5250 = !{!5251, !5252}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5249, file: !136, line: 43, baseType: !5246, size: 32)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5249, file: !136, line: 44, baseType: !5246, size: 32)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5236, file: !199, line: 62, baseType: !5254, size: 64)
!5254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !5255)
!5255 = !{!5256}
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5254, file: !211, line: 50, baseType: !5257, size: 64)
!5257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5258, size: 64, elements: !216)
!5258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 32)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5233, file: !199, line: 68, baseType: !5260, size: 32, offset: 64)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 32)
!5261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !5262)
!5262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !5263)
!5263 = !{!5264}
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5262, file: !131, line: 232, baseType: !5265, size: 64)
!5265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !5240)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5233, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5233, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!5268 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !199, line: 90, baseType: !5269, size: 16, offset: 112)
!5269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !199, line: 90, size: 16, elements: !5270)
!5270 = !{!5271, !5276}
!5271 = !DIDerivedType(tag: DW_TAG_member, scope: !5269, file: !199, line: 91, baseType: !5272, size: 16)
!5272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5269, file: !199, line: 91, size: 16, elements: !5273)
!5273 = !{!5274, !5275}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5272, file: !199, line: 96, baseType: !229, size: 8)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5272, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5269, file: !199, line: 100, baseType: !181, size: 16)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5233, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5233, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5233, file: !199, line: 131, baseType: !5280, size: 192, offset: 192)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !5281)
!5281 = !{!5282, !5283, !5289}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5280, file: !131, line: 245, baseType: !5239, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5280, file: !131, line: 246, baseType: !5284, size: 32, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !5285)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 32)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{null, !5288}
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 32)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5280, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5230, file: !199, line: 250, baseType: !5291, size: 288, offset: 384)
!5291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !5292)
!5292 = !{!5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301}
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5291, file: !248, line: 26, baseType: !111, size: 32)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5291, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5291, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5291, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5291, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5291, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5291, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5291, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5291, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5230, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5230, file: !199, line: 256, baseType: !5261, size: 64, offset: 704)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5230, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5230, file: !199, line: 300, baseType: !5306, size: 96, offset: 800)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !5307)
!5307 = !{!5308, !5309, !5310}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5306, file: !199, line: 153, baseType: !22, size: 32)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5306, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5306, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5230, file: !199, line: 325, baseType: !5312, size: 32, offset: 896)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5313, size: 32)
!5313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !5314)
!5314 = !{!5315, !5321, !5322}
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5313, file: !127, line: 5074, baseType: !5316, size: 96)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !5317)
!5317 = !{!5318, !5319, !5320}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5316, file: !274, line: 57, baseType: !277, size: 32)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5316, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5316, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5313, file: !127, line: 5075, baseType: !5261, size: 64, offset: 96)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5313, file: !127, line: 5076, baseType: !5323, size: 32, offset: 160)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !5324)
!5324 = !{!5325}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5323, file: !152, line: 52, baseType: !22, size: 32)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5230, file: !199, line: 343, baseType: !5327, size: 64, offset: 928)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !5328)
!5328 = !{!5329, !5330}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5327, file: !248, line: 63, baseType: !111, size: 32)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5327, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!5331 = !DILocation(line: 535, column: 9, scope: !5225)
!5332 = !DILocation(line: 535, column: 2, scope: !5225)
!5333 = distinct !DISubprogram(name: "k_thread_abort", scope: !5334, file: !5334, line: 188, type: !5335, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3103, retainedNodes: !5337)
!5334 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!5335 = !DISubroutineType(types: !5336)
!5336 = !{null, !5228}
!5337 = !{!5338}
!5338 = !DILocalVariable(name: "thread", arg: 1, scope: !5333, file: !5334, line: 188, type: !5228)
!5339 = !DILocation(line: 0, scope: !5333)
!5340 = !DILocation(line: 197, column: 2, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5333, file: !5334, line: 197, column: 2)
!5342 = !{i64 2155066130}
!5343 = !DILocation(line: 198, column: 2, scope: !5333)
!5344 = !DILocation(line: 199, column: 1, scope: !5333)
!5345 = distinct !DISubprogram(name: "z_current_get", scope: !5334, file: !5334, line: 173, type: !5226, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3103, retainedNodes: !2571)
!5346 = !DILocation(line: 180, column: 2, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5345, file: !5334, line: 180, column: 2)
!5348 = !{i64 2155066062}
!5349 = !DILocation(line: 181, column: 9, scope: !5345)
!5350 = !DILocation(line: 181, column: 2, scope: !5345)
!5351 = distinct !DISubprogram(name: "sys_heap_free", scope: !5352, file: !5352, line: 163, type: !5353, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5361)
!5352 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5353 = !DISubroutineType(types: !5354)
!5354 = !{null, !5355, !102}
!5355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5356, size: 32)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !5357)
!5357 = !{!5358, !5359, !5360}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5356, file: !274, line: 57, baseType: !3122, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5356, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5356, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!5361 = !{!5362, !5363, !5364, !5365}
!5362 = !DILocalVariable(name: "heap", arg: 1, scope: !5351, file: !5352, line: 163, type: !5355)
!5363 = !DILocalVariable(name: "mem", arg: 2, scope: !5351, file: !5352, line: 163, type: !102)
!5364 = !DILocalVariable(name: "h", scope: !5351, file: !5352, line: 168, type: !3122)
!5365 = !DILocalVariable(name: "c", scope: !5351, file: !5352, line: 169, type: !3127)
!5366 = !DILocation(line: 0, scope: !5351)
!5367 = !DILocation(line: 165, column: 10, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5351, file: !5352, line: 165, column: 6)
!5369 = !DILocation(line: 165, column: 6, scope: !5351)
!5370 = !DILocation(line: 168, column: 27, scope: !5351)
!5371 = !DILocation(line: 169, column: 16, scope: !5351)
!5372 = !{i32 0, i32 536870912}
!5373 = !DILocation(line: 175, column: 2, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !5352, line: 175, column: 2)
!5375 = distinct !DILexicalBlock(scope: !5351, file: !5352, line: 175, column: 2)
!5376 = !DILocation(line: 175, column: 2, scope: !5375)
!5377 = !DILocation(line: 175, column: 2, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !5352, line: 175, column: 2)
!5379 = !DILocation(line: 183, column: 2, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5381, file: !5352, line: 183, column: 2)
!5381 = distinct !DILexicalBlock(scope: !5351, file: !5352, line: 183, column: 2)
!5382 = !DILocation(line: 183, column: 2, scope: !5381)
!5383 = !DILocation(line: 183, column: 2, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !5352, line: 183, column: 2)
!5385 = !DILocation(line: 187, column: 2, scope: !5351)
!5386 = !DILocation(line: 197, column: 2, scope: !5351)
!5387 = !DILocation(line: 198, column: 1, scope: !5351)
!5388 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5352, file: !5352, line: 157, type: !5389, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!3127, !3122, !102}
!5391 = !{!5392, !5393, !5394, !5395}
!5392 = !DILocalVariable(name: "h", arg: 1, scope: !5388, file: !5352, line: 157, type: !3122)
!5393 = !DILocalVariable(name: "p", arg: 2, scope: !5388, file: !5352, line: 157, type: !102)
!5394 = !DILocalVariable(name: "mem", scope: !5388, file: !5352, line: 159, type: !550)
!5395 = !DILocalVariable(name: "base", scope: !5388, file: !5352, line: 159, type: !550)
!5396 = !DILocation(line: 0, scope: !5388)
!5397 = !DILocation(line: 159, column: 39, scope: !5388)
!5398 = !DILocation(line: 160, column: 14, scope: !5388)
!5399 = !DILocation(line: 160, column: 38, scope: !5388)
!5400 = !DILocation(line: 160, column: 46, scope: !5388)
!5401 = !DILocation(line: 160, column: 2, scope: !5388)
!5402 = distinct !DISubprogram(name: "chunk_used", scope: !3109, file: !3109, line: 137, type: !5403, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5405)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{!122, !3122, !3127}
!5405 = !{!5406, !5407}
!5406 = !DILocalVariable(name: "h", arg: 1, scope: !5402, file: !3109, line: 137, type: !3122)
!5407 = !DILocalVariable(name: "c", arg: 2, scope: !5402, file: !3109, line: 137, type: !3127)
!5408 = !DILocation(line: 0, scope: !5402)
!5409 = !DILocation(line: 139, column: 9, scope: !5402)
!5410 = !DILocation(line: 139, column: 42, scope: !5402)
!5411 = !DILocation(line: 139, column: 2, scope: !5402)
!5412 = distinct !DISubprogram(name: "right_chunk", scope: !3109, file: !3109, line: 204, type: !5413, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5415)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{!3127, !3122, !3127}
!5415 = !{!5416, !5417}
!5416 = !DILocalVariable(name: "h", arg: 1, scope: !5412, file: !3109, line: 204, type: !3122)
!5417 = !DILocalVariable(name: "c", arg: 2, scope: !5412, file: !3109, line: 204, type: !3127)
!5418 = !DILocation(line: 0, scope: !5412)
!5419 = !DILocation(line: 206, column: 13, scope: !5412)
!5420 = !DILocation(line: 206, column: 11, scope: !5412)
!5421 = !DILocation(line: 206, column: 2, scope: !5412)
!5422 = distinct !DISubprogram(name: "left_chunk", scope: !3109, file: !3109, line: 199, type: !5413, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5423)
!5423 = !{!5424, !5425}
!5424 = !DILocalVariable(name: "h", arg: 1, scope: !5422, file: !3109, line: 199, type: !3122)
!5425 = !DILocalVariable(name: "c", arg: 2, scope: !5422, file: !3109, line: 199, type: !3127)
!5426 = !DILocation(line: 0, scope: !5422)
!5427 = !DILocation(line: 201, column: 13, scope: !5422)
!5428 = !DILocation(line: 201, column: 11, scope: !5422)
!5429 = !DILocation(line: 201, column: 2, scope: !5422)
!5430 = distinct !DISubprogram(name: "set_chunk_used", scope: !3109, file: !3109, line: 147, type: !5431, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5433)
!5431 = !DISubroutineType(types: !5432)
!5432 = !{null, !3122, !3127, !122}
!5433 = !{!5434, !5435, !5436, !5437, !5438}
!5434 = !DILocalVariable(name: "h", arg: 1, scope: !5430, file: !3109, line: 147, type: !3122)
!5435 = !DILocalVariable(name: "c", arg: 2, scope: !5430, file: !3109, line: 147, type: !3127)
!5436 = !DILocalVariable(name: "used", arg: 3, scope: !5430, file: !3109, line: 147, type: !122)
!5437 = !DILocalVariable(name: "buf", scope: !5430, file: !3109, line: 149, type: !3116)
!5438 = !DILocalVariable(name: "cmem", scope: !5430, file: !3109, line: 150, type: !102)
!5439 = !DILocation(line: 0, scope: !5430)
!5440 = !DILocation(line: 149, column: 22, scope: !5430)
!5441 = !DILocation(line: 0, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !3109, line: 159, column: 7)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !3109, line: 158, column: 9)
!5444 = distinct !DILexicalBlock(scope: !5430, file: !3109, line: 152, column: 6)
!5445 = !DILocation(line: 159, column: 7, scope: !5443)
!5446 = !DILocation(line: 165, column: 1, scope: !5430)
!5447 = distinct !DISubprogram(name: "free_chunk", scope: !5352, file: !5352, line: 133, type: !5448, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5450)
!5448 = !DISubroutineType(types: !5449)
!5449 = !{null, !3122, !3127}
!5450 = !{!5451, !5452}
!5451 = !DILocalVariable(name: "h", arg: 1, scope: !5447, file: !5352, line: 133, type: !3122)
!5452 = !DILocalVariable(name: "c", arg: 2, scope: !5447, file: !5352, line: 133, type: !3127)
!5453 = !DILocation(line: 0, scope: !5447)
!5454 = !DILocation(line: 136, column: 21, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5447, file: !5352, line: 136, column: 6)
!5456 = !DILocation(line: 136, column: 7, scope: !5455)
!5457 = !DILocation(line: 136, column: 6, scope: !5447)
!5458 = !DILocation(line: 137, column: 3, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5455, file: !5352, line: 136, column: 41)
!5460 = !DILocation(line: 138, column: 22, scope: !5459)
!5461 = !DILocation(line: 138, column: 3, scope: !5459)
!5462 = !DILocation(line: 139, column: 2, scope: !5459)
!5463 = !DILocation(line: 142, column: 21, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5447, file: !5352, line: 142, column: 6)
!5465 = !DILocation(line: 142, column: 7, scope: !5464)
!5466 = !DILocation(line: 142, column: 6, scope: !5447)
!5467 = !DILocation(line: 143, column: 3, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !5352, line: 142, column: 40)
!5469 = !DILocation(line: 144, column: 19, scope: !5468)
!5470 = !DILocation(line: 144, column: 3, scope: !5468)
!5471 = !DILocation(line: 145, column: 7, scope: !5468)
!5472 = !DILocation(line: 146, column: 2, scope: !5468)
!5473 = !DILocation(line: 148, column: 2, scope: !5447)
!5474 = !DILocation(line: 149, column: 1, scope: !5447)
!5475 = distinct !DISubprogram(name: "free_list_remove", scope: !5352, file: !5352, line: 60, type: !5448, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5476)
!5476 = !{!5477, !5478, !5479}
!5477 = !DILocalVariable(name: "h", arg: 1, scope: !5475, file: !5352, line: 60, type: !3122)
!5478 = !DILocalVariable(name: "c", arg: 2, scope: !5475, file: !5352, line: 60, type: !3127)
!5479 = !DILocalVariable(name: "bidx", scope: !5480, file: !5352, line: 63, type: !103)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !5352, line: 62, column: 31)
!5481 = distinct !DILexicalBlock(scope: !5475, file: !5352, line: 62, column: 6)
!5482 = !DILocation(line: 0, scope: !5475)
!5483 = !DILocation(line: 63, column: 28, scope: !5480)
!5484 = !{i32 0, i32 32768}
!5485 = !DILocation(line: 63, column: 14, scope: !5480)
!5486 = !DILocation(line: 0, scope: !5480)
!5487 = !DILocation(line: 64, column: 3, scope: !5480)
!5488 = !DILocation(line: 66, column: 1, scope: !5475)
!5489 = distinct !DISubprogram(name: "merge_chunks", scope: !5352, file: !5352, line: 125, type: !5490, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5492)
!5490 = !DISubroutineType(types: !5491)
!5491 = !{null, !3122, !3127, !3127}
!5492 = !{!5493, !5494, !5495, !5496}
!5493 = !DILocalVariable(name: "h", arg: 1, scope: !5489, file: !5352, line: 125, type: !3122)
!5494 = !DILocalVariable(name: "lc", arg: 2, scope: !5489, file: !5352, line: 125, type: !3127)
!5495 = !DILocalVariable(name: "rc", arg: 3, scope: !5489, file: !5352, line: 125, type: !3127)
!5496 = !DILocalVariable(name: "newsz", scope: !5489, file: !5352, line: 127, type: !5497)
!5497 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !3109, line: 62, baseType: !111)
!5498 = !DILocation(line: 0, scope: !5489)
!5499 = !DILocation(line: 127, column: 20, scope: !5489)
!5500 = !DILocation(line: 127, column: 40, scope: !5489)
!5501 = !DILocation(line: 127, column: 38, scope: !5489)
!5502 = !DILocation(line: 129, column: 2, scope: !5489)
!5503 = !DILocation(line: 130, column: 25, scope: !5489)
!5504 = !DILocation(line: 130, column: 2, scope: !5489)
!5505 = !DILocation(line: 131, column: 1, scope: !5489)
!5506 = distinct !DISubprogram(name: "free_list_add", scope: !5352, file: !5352, line: 98, type: !5448, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5507)
!5507 = !{!5508, !5509, !5510}
!5508 = !DILocalVariable(name: "h", arg: 1, scope: !5506, file: !5352, line: 98, type: !3122)
!5509 = !DILocalVariable(name: "c", arg: 2, scope: !5506, file: !5352, line: 98, type: !3127)
!5510 = !DILocalVariable(name: "bidx", scope: !5511, file: !5352, line: 101, type: !103)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !5352, line: 100, column: 31)
!5512 = distinct !DILexicalBlock(scope: !5506, file: !5352, line: 100, column: 6)
!5513 = !DILocation(line: 0, scope: !5506)
!5514 = !DILocation(line: 101, column: 28, scope: !5511)
!5515 = !DILocation(line: 101, column: 14, scope: !5511)
!5516 = !DILocation(line: 0, scope: !5511)
!5517 = !DILocation(line: 102, column: 3, scope: !5511)
!5518 = !DILocation(line: 104, column: 1, scope: !5506)
!5519 = distinct !DISubprogram(name: "chunk_size", scope: !3109, file: !3109, line: 142, type: !5520, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5522)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{!5497, !3122, !3127}
!5522 = !{!5523, !5524}
!5523 = !DILocalVariable(name: "h", arg: 1, scope: !5519, file: !3109, line: 142, type: !3122)
!5524 = !DILocalVariable(name: "c", arg: 2, scope: !5519, file: !3109, line: 142, type: !3127)
!5525 = !DILocation(line: 0, scope: !5519)
!5526 = !DILocation(line: 144, column: 9, scope: !5519)
!5527 = !DILocation(line: 144, column: 42, scope: !5519)
!5528 = !DILocation(line: 144, column: 2, scope: !5519)
!5529 = distinct !DISubprogram(name: "bucket_idx", scope: !3109, file: !3109, line: 250, type: !5530, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5532)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{!103, !3122, !5497}
!5532 = !{!5533, !5534, !5535}
!5533 = !DILocalVariable(name: "h", arg: 1, scope: !5529, file: !3109, line: 250, type: !3122)
!5534 = !DILocalVariable(name: "sz", arg: 2, scope: !5529, file: !3109, line: 250, type: !5497)
!5535 = !DILocalVariable(name: "usable_sz", scope: !5529, file: !3109, line: 252, type: !32)
!5536 = !DILocation(line: 0, scope: !5529)
!5537 = !DILocation(line: 252, column: 32, scope: !5529)
!5538 = !DILocation(line: 252, column: 30, scope: !5529)
!5539 = !DILocation(line: 252, column: 50, scope: !5529)
!5540 = !DILocation(line: 253, column: 14, scope: !5529)
!5541 = !{i32 0, i32 33}
!5542 = !DILocation(line: 253, column: 12, scope: !5529)
!5543 = !DILocation(line: 253, column: 2, scope: !5529)
!5544 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5352, file: !5352, line: 68, type: !5545, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5547)
!5545 = !DISubroutineType(types: !5546)
!5546 = !{null, !3122, !3127, !103}
!5547 = !{!5548, !5549, !5550, !5551, !5553, !5556}
!5548 = !DILocalVariable(name: "h", arg: 1, scope: !5544, file: !5352, line: 68, type: !3122)
!5549 = !DILocalVariable(name: "c", arg: 2, scope: !5544, file: !5352, line: 68, type: !3127)
!5550 = !DILocalVariable(name: "bidx", arg: 3, scope: !5544, file: !5352, line: 68, type: !103)
!5551 = !DILocalVariable(name: "b", scope: !5544, file: !5352, line: 70, type: !5552)
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 32)
!5553 = !DILocalVariable(name: "second", scope: !5554, file: !5352, line: 84, type: !3127)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !5352, line: 80, column: 9)
!5555 = distinct !DILexicalBlock(scope: !5544, file: !5352, line: 72, column: 6)
!5556 = !DILocalVariable(name: "first", scope: !5554, file: !5352, line: 85, type: !3127)
!5557 = !DILocation(line: 0, scope: !5544)
!5558 = !DILocation(line: 72, column: 9, scope: !5555)
!5559 = !DILocation(line: 72, column: 14, scope: !5555)
!5560 = !DILocation(line: 72, column: 6, scope: !5544)
!5561 = !DILocation(line: 76, column: 23, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5555, file: !5352, line: 72, column: 21)
!5563 = !DILocation(line: 76, column: 6, scope: !5562)
!5564 = !DILocation(line: 76, column: 20, scope: !5562)
!5565 = !DILocation(line: 77, column: 11, scope: !5562)
!5566 = !DILocation(line: 78, column: 3, scope: !5562)
!5567 = !DILocation(line: 79, column: 3, scope: !5562)
!5568 = !DILocation(line: 80, column: 2, scope: !5562)
!5569 = !DILocation(line: 0, scope: !5554)
!5570 = !DILocation(line: 85, column: 21, scope: !5554)
!5571 = !{i32 0, i32 65536}
!5572 = !DILocation(line: 87, column: 3, scope: !5554)
!5573 = !DILocation(line: 88, column: 3, scope: !5554)
!5574 = !DILocation(line: 89, column: 3, scope: !5554)
!5575 = !DILocation(line: 90, column: 3, scope: !5554)
!5576 = !DILocation(line: 96, column: 1, scope: !5544)
!5577 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !3109, file: !3109, line: 187, type: !5490, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5578)
!5578 = !{!5579, !5580, !5581}
!5579 = !DILocalVariable(name: "h", arg: 1, scope: !5577, file: !3109, line: 187, type: !3122)
!5580 = !DILocalVariable(name: "c", arg: 2, scope: !5577, file: !3109, line: 187, type: !3127)
!5581 = !DILocalVariable(name: "prev", arg: 3, scope: !5577, file: !3109, line: 188, type: !3127)
!5582 = !DILocation(line: 0, scope: !5577)
!5583 = !DILocation(line: 190, column: 2, scope: !5577)
!5584 = !DILocation(line: 191, column: 1, scope: !5577)
!5585 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !3109, file: !3109, line: 193, type: !5490, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5586)
!5586 = !{!5587, !5588, !5589}
!5587 = !DILocalVariable(name: "h", arg: 1, scope: !5585, file: !3109, line: 193, type: !3122)
!5588 = !DILocalVariable(name: "c", arg: 2, scope: !5585, file: !3109, line: 193, type: !3127)
!5589 = !DILocalVariable(name: "next", arg: 3, scope: !5585, file: !3109, line: 194, type: !3127)
!5590 = !DILocation(line: 0, scope: !5585)
!5591 = !DILocation(line: 196, column: 2, scope: !5585)
!5592 = !DILocation(line: 197, column: 1, scope: !5585)
!5593 = distinct !DISubprogram(name: "prev_free_chunk", scope: !3109, file: !3109, line: 177, type: !5413, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5594)
!5594 = !{!5595, !5596}
!5595 = !DILocalVariable(name: "h", arg: 1, scope: !5593, file: !3109, line: 177, type: !3122)
!5596 = !DILocalVariable(name: "c", arg: 2, scope: !5593, file: !3109, line: 177, type: !3127)
!5597 = !DILocation(line: 0, scope: !5593)
!5598 = !DILocation(line: 179, column: 9, scope: !5593)
!5599 = !DILocation(line: 179, column: 2, scope: !5593)
!5600 = distinct !DISubprogram(name: "chunk_field", scope: !3109, file: !3109, line: 107, type: !5601, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5603)
!5601 = !DISubroutineType(types: !5602)
!5602 = !{!3127, !3122, !3127, !3108}
!5603 = !{!5604, !5605, !5606, !5607, !5608}
!5604 = !DILocalVariable(name: "h", arg: 1, scope: !5600, file: !3109, line: 107, type: !3122)
!5605 = !DILocalVariable(name: "c", arg: 2, scope: !5600, file: !3109, line: 107, type: !3127)
!5606 = !DILocalVariable(name: "f", arg: 3, scope: !5600, file: !3109, line: 108, type: !3108)
!5607 = !DILocalVariable(name: "buf", scope: !5600, file: !3109, line: 110, type: !3116)
!5608 = !DILocalVariable(name: "cmem", scope: !5600, file: !3109, line: 111, type: !102)
!5609 = !DILocation(line: 0, scope: !5600)
!5610 = !DILocation(line: 110, column: 22, scope: !5600)
!5611 = !DILocation(line: 111, column: 15, scope: !5600)
!5612 = !DILocation(line: 116, column: 11, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5614, file: !3109, line: 115, column: 9)
!5614 = distinct !DILexicalBlock(scope: !5600, file: !3109, line: 113, column: 6)
!5615 = !DILocation(line: 116, column: 10, scope: !5613)
!5616 = !DILocation(line: 118, column: 1, scope: !5600)
!5617 = distinct !DISubprogram(name: "chunk_buf", scope: !3109, file: !3109, line: 101, type: !5618, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5620)
!5618 = !DISubroutineType(types: !5619)
!5619 = !{!3116, !3122}
!5620 = !{!5621}
!5621 = !DILocalVariable(name: "h", arg: 1, scope: !5617, file: !3109, line: 101, type: !3122)
!5622 = !DILocation(line: 0, scope: !5617)
!5623 = !DILocation(line: 104, column: 9, scope: !5617)
!5624 = !DILocation(line: 104, column: 2, scope: !5617)
!5625 = distinct !DISubprogram(name: "chunk_set", scope: !3109, file: !3109, line: 120, type: !5626, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5628)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{null, !3122, !3127, !3108, !3127}
!5628 = !{!5629, !5630, !5631, !5632, !5633, !5634}
!5629 = !DILocalVariable(name: "h", arg: 1, scope: !5625, file: !3109, line: 120, type: !3122)
!5630 = !DILocalVariable(name: "c", arg: 2, scope: !5625, file: !3109, line: 120, type: !3127)
!5631 = !DILocalVariable(name: "f", arg: 3, scope: !5625, file: !3109, line: 121, type: !3108)
!5632 = !DILocalVariable(name: "val", arg: 4, scope: !5625, file: !3109, line: 121, type: !3127)
!5633 = !DILocalVariable(name: "buf", scope: !5625, file: !3109, line: 125, type: !3116)
!5634 = !DILocalVariable(name: "cmem", scope: !5625, file: !3109, line: 126, type: !102)
!5635 = !DILocation(line: 0, scope: !5625)
!5636 = !DILocation(line: 125, column: 22, scope: !5625)
!5637 = !DILocation(line: 126, column: 15, scope: !5625)
!5638 = !DILocation(line: 133, column: 27, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !3109, line: 131, column: 9)
!5640 = distinct !DILexicalBlock(scope: !5625, file: !3109, line: 128, column: 6)
!5641 = !DILocation(line: 133, column: 4, scope: !5639)
!5642 = !DILocation(line: 133, column: 3, scope: !5639)
!5643 = !DILocation(line: 133, column: 25, scope: !5639)
!5644 = !DILocation(line: 135, column: 1, scope: !5625)
!5645 = distinct !DISubprogram(name: "min_chunk_size", scope: !3109, file: !3109, line: 240, type: !5646, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5648)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!5497, !3122}
!5648 = !{!5649}
!5649 = !DILocalVariable(name: "h", arg: 1, scope: !5645, file: !3109, line: 240, type: !3122)
!5650 = !DILocation(line: 0, scope: !5645)
!5651 = !DILocation(line: 242, column: 9, scope: !5645)
!5652 = !DILocation(line: 242, column: 2, scope: !5645)
!5653 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !3109, file: !3109, line: 235, type: !5654, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5656)
!5654 = !DISubroutineType(types: !5655)
!5655 = !{!5497, !3122, !156}
!5656 = !{!5657, !5658}
!5657 = !DILocalVariable(name: "h", arg: 1, scope: !5653, file: !3109, line: 235, type: !3122)
!5658 = !DILocalVariable(name: "bytes", arg: 2, scope: !5653, file: !3109, line: 235, type: !156)
!5659 = !DILocation(line: 0, scope: !5653)
!5660 = !DILocation(line: 237, column: 39, scope: !5653)
!5661 = !DILocation(line: 237, column: 9, scope: !5653)
!5662 = !DILocation(line: 237, column: 2, scope: !5653)
!5663 = distinct !DISubprogram(name: "chunksz", scope: !3109, file: !3109, line: 230, type: !5664, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5666)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!5497, !156}
!5666 = !{!5667}
!5667 = !DILocalVariable(name: "bytes", arg: 1, scope: !5663, file: !3109, line: 230, type: !156)
!5668 = !DILocation(line: 0, scope: !5663)
!5669 = !DILocation(line: 232, column: 29, scope: !5663)
!5670 = !DILocation(line: 232, column: 35, scope: !5663)
!5671 = !DILocation(line: 232, column: 2, scope: !5663)
!5672 = distinct !DISubprogram(name: "set_chunk_size", scope: !3109, file: !3109, line: 172, type: !5673, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5675)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{null, !3122, !3127, !5497}
!5675 = !{!5676, !5677, !5678}
!5676 = !DILocalVariable(name: "h", arg: 1, scope: !5672, file: !3109, line: 172, type: !3122)
!5677 = !DILocalVariable(name: "c", arg: 2, scope: !5672, file: !3109, line: 172, type: !3127)
!5678 = !DILocalVariable(name: "size", arg: 3, scope: !5672, file: !3109, line: 172, type: !5497)
!5679 = !DILocation(line: 0, scope: !5672)
!5680 = !DILocation(line: 174, column: 38, scope: !5672)
!5681 = !DILocation(line: 174, column: 2, scope: !5672)
!5682 = !DILocation(line: 175, column: 1, scope: !5672)
!5683 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !3109, file: !3109, line: 209, type: !5673, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5684)
!5684 = !{!5685, !5686, !5687}
!5685 = !DILocalVariable(name: "h", arg: 1, scope: !5683, file: !3109, line: 209, type: !3122)
!5686 = !DILocalVariable(name: "c", arg: 2, scope: !5683, file: !3109, line: 209, type: !3127)
!5687 = !DILocalVariable(name: "size", arg: 3, scope: !5683, file: !3109, line: 210, type: !5497)
!5688 = !DILocation(line: 0, scope: !5683)
!5689 = !DILocation(line: 212, column: 2, scope: !5683)
!5690 = !DILocation(line: 213, column: 1, scope: !5683)
!5691 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5352, file: !5352, line: 34, type: !5545, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5692)
!5692 = !{!5693, !5694, !5695, !5696, !5697, !5700}
!5693 = !DILocalVariable(name: "h", arg: 1, scope: !5691, file: !5352, line: 34, type: !3122)
!5694 = !DILocalVariable(name: "c", arg: 2, scope: !5691, file: !5352, line: 34, type: !3127)
!5695 = !DILocalVariable(name: "bidx", arg: 3, scope: !5691, file: !5352, line: 34, type: !103)
!5696 = !DILocalVariable(name: "b", scope: !5691, file: !5352, line: 36, type: !5552)
!5697 = !DILocalVariable(name: "first", scope: !5698, file: !5352, line: 47, type: !3127)
!5698 = distinct !DILexicalBlock(scope: !5699, file: !5352, line: 46, column: 9)
!5699 = distinct !DILexicalBlock(scope: !5691, file: !5352, line: 42, column: 6)
!5700 = !DILocalVariable(name: "second", scope: !5698, file: !5352, line: 48, type: !3127)
!5701 = !DILocation(line: 0, scope: !5691)
!5702 = !DILocation(line: 36, column: 29, scope: !5691)
!5703 = !DILocation(line: 42, column: 6, scope: !5699)
!5704 = !DILocation(line: 42, column: 28, scope: !5699)
!5705 = !DILocation(line: 42, column: 6, scope: !5691)
!5706 = !DILocation(line: 44, column: 24, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5699, file: !5352, line: 42, column: 34)
!5708 = !DILocation(line: 44, column: 23, scope: !5707)
!5709 = !DILocation(line: 44, column: 6, scope: !5707)
!5710 = !DILocation(line: 44, column: 20, scope: !5707)
!5711 = !DILocation(line: 45, column: 6, scope: !5707)
!5712 = !DILocation(line: 45, column: 11, scope: !5707)
!5713 = !DILocation(line: 46, column: 2, scope: !5707)
!5714 = !DILocation(line: 47, column: 21, scope: !5698)
!5715 = !DILocation(line: 0, scope: !5698)
!5716 = !DILocation(line: 50, column: 6, scope: !5698)
!5717 = !DILocation(line: 50, column: 11, scope: !5698)
!5718 = !DILocation(line: 51, column: 3, scope: !5698)
!5719 = !DILocation(line: 52, column: 3, scope: !5698)
!5720 = !DILocation(line: 58, column: 1, scope: !5691)
!5721 = distinct !DISubprogram(name: "next_free_chunk", scope: !3109, file: !3109, line: 182, type: !5413, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5722)
!5722 = !{!5723, !5724}
!5723 = !DILocalVariable(name: "h", arg: 1, scope: !5721, file: !3109, line: 182, type: !3122)
!5724 = !DILocalVariable(name: "c", arg: 2, scope: !5721, file: !3109, line: 182, type: !3127)
!5725 = !DILocation(line: 0, scope: !5721)
!5726 = !DILocation(line: 184, column: 9, scope: !5721)
!5727 = !DILocation(line: 184, column: 2, scope: !5721)
!5728 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5352, file: !5352, line: 200, type: !5729, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5731)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!156, !5355, !102}
!5731 = !{!5732, !5733, !5734, !5735, !5736, !5737, !5738}
!5732 = !DILocalVariable(name: "heap", arg: 1, scope: !5728, file: !5352, line: 200, type: !5355)
!5733 = !DILocalVariable(name: "mem", arg: 2, scope: !5728, file: !5352, line: 200, type: !102)
!5734 = !DILocalVariable(name: "h", scope: !5728, file: !5352, line: 202, type: !3122)
!5735 = !DILocalVariable(name: "c", scope: !5728, file: !5352, line: 203, type: !3127)
!5736 = !DILocalVariable(name: "addr", scope: !5728, file: !5352, line: 204, type: !156)
!5737 = !DILocalVariable(name: "chunk_base", scope: !5728, file: !5352, line: 205, type: !156)
!5738 = !DILocalVariable(name: "chunk_sz", scope: !5728, file: !5352, line: 206, type: !156)
!5739 = !DILocation(line: 0, scope: !5728)
!5740 = !DILocation(line: 202, column: 27, scope: !5728)
!5741 = !DILocation(line: 203, column: 16, scope: !5728)
!5742 = !DILocation(line: 204, column: 16, scope: !5728)
!5743 = !DILocation(line: 205, column: 31, scope: !5728)
!5744 = !DILocation(line: 205, column: 22, scope: !5728)
!5745 = !DILocation(line: 206, column: 20, scope: !5728)
!5746 = !DILocation(line: 206, column: 37, scope: !5728)
!5747 = !DILocation(line: 208, column: 26, scope: !5728)
!5748 = !DILocation(line: 208, column: 18, scope: !5728)
!5749 = !DILocation(line: 208, column: 2, scope: !5728)
!5750 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5352, file: !5352, line: 263, type: !5751, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5753)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!102, !5355, !156}
!5753 = !{!5754, !5755, !5756, !5757, !5758, !5759}
!5754 = !DILocalVariable(name: "heap", arg: 1, scope: !5750, file: !5352, line: 263, type: !5355)
!5755 = !DILocalVariable(name: "bytes", arg: 2, scope: !5750, file: !5352, line: 263, type: !156)
!5756 = !DILocalVariable(name: "h", scope: !5750, file: !5352, line: 265, type: !3122)
!5757 = !DILocalVariable(name: "mem", scope: !5750, file: !5352, line: 266, type: !102)
!5758 = !DILocalVariable(name: "chunk_sz", scope: !5750, file: !5352, line: 272, type: !5497)
!5759 = !DILocalVariable(name: "c", scope: !5750, file: !5352, line: 273, type: !3127)
!5760 = !DILocation(line: 0, scope: !5750)
!5761 = !DILocation(line: 265, column: 27, scope: !5750)
!5762 = !DILocation(line: 268, column: 12, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5750, file: !5352, line: 268, column: 6)
!5764 = !DILocation(line: 268, column: 18, scope: !5763)
!5765 = !DILocation(line: 268, column: 21, scope: !5763)
!5766 = !DILocation(line: 268, column: 6, scope: !5750)
!5767 = !DILocation(line: 272, column: 23, scope: !5750)
!5768 = !DILocation(line: 273, column: 16, scope: !5750)
!5769 = !DILocation(line: 274, column: 8, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5750, file: !5352, line: 274, column: 6)
!5771 = !DILocation(line: 274, column: 6, scope: !5750)
!5772 = !DILocation(line: 279, column: 6, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5750, file: !5352, line: 279, column: 6)
!5774 = !DILocation(line: 279, column: 23, scope: !5773)
!5775 = !DILocation(line: 279, column: 6, scope: !5750)
!5776 = !DILocation(line: 280, column: 24, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5773, file: !5352, line: 279, column: 35)
!5778 = !DILocation(line: 280, column: 3, scope: !5777)
!5779 = !DILocation(line: 281, column: 3, scope: !5777)
!5780 = !DILocation(line: 282, column: 2, scope: !5777)
!5781 = !DILocation(line: 284, column: 2, scope: !5750)
!5782 = !DILocation(line: 286, column: 8, scope: !5750)
!5783 = !DILocation(line: 298, column: 2, scope: !5750)
!5784 = !DILocation(line: 299, column: 1, scope: !5750)
!5785 = distinct !DISubprogram(name: "size_too_big", scope: !3109, file: !3109, line: 256, type: !5786, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5788)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{!122, !3122, !156}
!5788 = !{!5789, !5790}
!5789 = !DILocalVariable(name: "h", arg: 1, scope: !5785, file: !3109, line: 256, type: !3122)
!5790 = !DILocalVariable(name: "bytes", arg: 2, scope: !5785, file: !3109, line: 256, type: !156)
!5791 = !DILocation(line: 0, scope: !5785)
!5792 = !DILocation(line: 262, column: 16, scope: !5785)
!5793 = !DILocation(line: 262, column: 36, scope: !5785)
!5794 = !DILocation(line: 262, column: 30, scope: !5785)
!5795 = !DILocation(line: 262, column: 2, scope: !5785)
!5796 = distinct !DISubprogram(name: "alloc_chunk", scope: !5352, file: !5352, line: 211, type: !5797, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5799)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!3127, !3122, !5497}
!5799 = !{!5800, !5801, !5802, !5803, !5804, !5807, !5808, !5810, !5811, !5814}
!5800 = !DILocalVariable(name: "h", arg: 1, scope: !5796, file: !5352, line: 211, type: !3122)
!5801 = !DILocalVariable(name: "sz", arg: 2, scope: !5796, file: !5352, line: 211, type: !5497)
!5802 = !DILocalVariable(name: "bi", scope: !5796, file: !5352, line: 213, type: !103)
!5803 = !DILocalVariable(name: "b", scope: !5796, file: !5352, line: 214, type: !5552)
!5804 = !DILocalVariable(name: "first", scope: !5805, file: !5352, line: 233, type: !3127)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !5352, line: 232, column: 15)
!5806 = distinct !DILexicalBlock(scope: !5796, file: !5352, line: 232, column: 6)
!5807 = !DILocalVariable(name: "i", scope: !5805, file: !5352, line: 234, type: !103)
!5808 = !DILocalVariable(name: "c", scope: !5809, file: !5352, line: 236, type: !3127)
!5809 = distinct !DILexicalBlock(scope: !5805, file: !5352, line: 235, column: 6)
!5810 = !DILocalVariable(name: "bmask", scope: !5796, file: !5352, line: 249, type: !111)
!5811 = !DILocalVariable(name: "minbucket", scope: !5812, file: !5352, line: 252, type: !103)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !5352, line: 251, column: 19)
!5813 = distinct !DILexicalBlock(scope: !5796, file: !5352, line: 251, column: 6)
!5814 = !DILocalVariable(name: "c", scope: !5812, file: !5352, line: 253, type: !3127)
!5815 = !DILocation(line: 0, scope: !5796)
!5816 = !DILocation(line: 213, column: 11, scope: !5796)
!5817 = !DILocation(line: 232, column: 9, scope: !5806)
!5818 = !DILocation(line: 232, column: 6, scope: !5806)
!5819 = !DILocation(line: 232, column: 6, scope: !5796)
!5820 = !DILocation(line: 236, column: 21, scope: !5809)
!5821 = !DILocation(line: 0, scope: !5805)
!5822 = !DILocation(line: 0, scope: !5809)
!5823 = !DILocation(line: 237, column: 8, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5809, file: !5352, line: 237, column: 8)
!5825 = !DILocation(line: 237, column: 25, scope: !5824)
!5826 = !DILocation(line: 237, column: 8, scope: !5809)
!5827 = !DILocation(line: 238, column: 5, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5824, file: !5352, line: 237, column: 32)
!5829 = !DILocation(line: 241, column: 14, scope: !5809)
!5830 = !DILocation(line: 241, column: 12, scope: !5809)
!5831 = !DILocation(line: 243, column: 12, scope: !5805)
!5832 = !DILocation(line: 243, column: 16, scope: !5805)
!5833 = distinct !{!5833, !5834, !5835}
!5834 = !DILocation(line: 235, column: 3, scope: !5805)
!5835 = !DILocation(line: 243, column: 35, scope: !5805)
!5836 = !DILocation(line: 249, column: 22, scope: !5796)
!5837 = !DILocation(line: 249, column: 39, scope: !5796)
!5838 = !DILocation(line: 249, column: 36, scope: !5796)
!5839 = !DILocation(line: 251, column: 12, scope: !5813)
!5840 = !DILocation(line: 251, column: 6, scope: !5796)
!5841 = !DILocation(line: 252, column: 19, scope: !5812)
!5842 = !DILocation(line: 0, scope: !5812)
!5843 = !DILocation(line: 253, column: 39, scope: !5812)
!5844 = !DILocation(line: 255, column: 3, scope: !5812)
!5845 = !DILocation(line: 261, column: 1, scope: !5796)
!5846 = distinct !DISubprogram(name: "split_chunks", scope: !5352, file: !5352, line: 109, type: !5490, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5847)
!5847 = !{!5848, !5849, !5850, !5851, !5852, !5853}
!5848 = !DILocalVariable(name: "h", arg: 1, scope: !5846, file: !5352, line: 109, type: !3122)
!5849 = !DILocalVariable(name: "lc", arg: 2, scope: !5846, file: !5352, line: 109, type: !3127)
!5850 = !DILocalVariable(name: "rc", arg: 3, scope: !5846, file: !5352, line: 109, type: !3127)
!5851 = !DILocalVariable(name: "sz0", scope: !5846, file: !5352, line: 114, type: !5497)
!5852 = !DILocalVariable(name: "lsz", scope: !5846, file: !5352, line: 115, type: !5497)
!5853 = !DILocalVariable(name: "rsz", scope: !5846, file: !5352, line: 116, type: !5497)
!5854 = !DILocation(line: 0, scope: !5846)
!5855 = !DILocation(line: 114, column: 18, scope: !5846)
!5856 = !DILocation(line: 115, column: 21, scope: !5846)
!5857 = !DILocation(line: 116, column: 22, scope: !5846)
!5858 = !DILocation(line: 118, column: 2, scope: !5846)
!5859 = !DILocation(line: 119, column: 2, scope: !5846)
!5860 = !DILocation(line: 120, column: 2, scope: !5846)
!5861 = !DILocation(line: 121, column: 25, scope: !5846)
!5862 = !DILocation(line: 121, column: 2, scope: !5846)
!5863 = !DILocation(line: 122, column: 1, scope: !5846)
!5864 = distinct !DISubprogram(name: "chunk_mem", scope: !5352, file: !5352, line: 24, type: !5865, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5867)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{!102, !3122, !3127}
!5867 = !{!5868, !5869, !5870, !5871}
!5868 = !DILocalVariable(name: "h", arg: 1, scope: !5864, file: !5352, line: 24, type: !3122)
!5869 = !DILocalVariable(name: "c", arg: 2, scope: !5864, file: !5352, line: 24, type: !3127)
!5870 = !DILocalVariable(name: "buf", scope: !5864, file: !5352, line: 26, type: !3116)
!5871 = !DILocalVariable(name: "ret", scope: !5864, file: !5352, line: 27, type: !550)
!5872 = !DILocation(line: 0, scope: !5864)
!5873 = !DILocation(line: 26, column: 22, scope: !5864)
!5874 = !DILocation(line: 27, column: 38, scope: !5864)
!5875 = !DILocation(line: 31, column: 2, scope: !5864)
!5876 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5352, file: !5352, line: 301, type: !5877, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5879)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!102, !5355, !156, !156}
!5879 = !{!5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891}
!5880 = !DILocalVariable(name: "heap", arg: 1, scope: !5876, file: !5352, line: 301, type: !5355)
!5881 = !DILocalVariable(name: "align", arg: 2, scope: !5876, file: !5352, line: 301, type: !156)
!5882 = !DILocalVariable(name: "bytes", arg: 3, scope: !5876, file: !5352, line: 301, type: !156)
!5883 = !DILocalVariable(name: "h", scope: !5876, file: !5352, line: 303, type: !3122)
!5884 = !DILocalVariable(name: "gap", scope: !5876, file: !5352, line: 304, type: !156)
!5885 = !DILocalVariable(name: "rew", scope: !5876, file: !5352, line: 304, type: !156)
!5886 = !DILocalVariable(name: "padded_sz", scope: !5876, file: !5352, line: 335, type: !5497)
!5887 = !DILocalVariable(name: "c0", scope: !5876, file: !5352, line: 336, type: !3127)
!5888 = !DILocalVariable(name: "mem", scope: !5876, file: !5352, line: 341, type: !550)
!5889 = !DILocalVariable(name: "end", scope: !5876, file: !5352, line: 345, type: !3116)
!5890 = !DILocalVariable(name: "c", scope: !5876, file: !5352, line: 348, type: !3127)
!5891 = !DILocalVariable(name: "c_end", scope: !5876, file: !5352, line: 349, type: !3127)
!5892 = !DILocation(line: 0, scope: !5876)
!5893 = !DILocation(line: 303, column: 27, scope: !5876)
!5894 = !DILocation(line: 313, column: 16, scope: !5876)
!5895 = !DILocation(line: 313, column: 14, scope: !5876)
!5896 = !DILocation(line: 314, column: 12, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5876, file: !5352, line: 314, column: 6)
!5898 = !DILocation(line: 314, column: 6, scope: !5876)
!5899 = !DILocation(line: 315, column: 9, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5897, file: !5352, line: 314, column: 20)
!5901 = !DILocation(line: 316, column: 9, scope: !5900)
!5902 = !DILocation(line: 318, column: 13, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !5352, line: 318, column: 7)
!5904 = distinct !DILexicalBlock(scope: !5897, file: !5352, line: 317, column: 9)
!5905 = !DILocation(line: 318, column: 7, scope: !5904)
!5906 = !DILocation(line: 319, column: 11, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5903, file: !5352, line: 318, column: 39)
!5908 = !DILocation(line: 319, column: 4, scope: !5907)
!5909 = !DILocation(line: 0, scope: !5897)
!5910 = !DILocation(line: 324, column: 2, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !5352, line: 324, column: 2)
!5912 = distinct !DILexicalBlock(scope: !5876, file: !5352, line: 324, column: 2)
!5913 = !DILocation(line: 324, column: 2, scope: !5912)
!5914 = !DILocation(line: 324, column: 2, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5911, file: !5352, line: 324, column: 2)
!5916 = !DILocation(line: 326, column: 12, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5876, file: !5352, line: 326, column: 6)
!5918 = !DILocation(line: 326, column: 17, scope: !5917)
!5919 = !DILocation(line: 326, column: 20, scope: !5917)
!5920 = !DILocation(line: 326, column: 6, scope: !5876)
!5921 = !DILocation(line: 335, column: 50, scope: !5876)
!5922 = !DILocation(line: 335, column: 58, scope: !5876)
!5923 = !DILocation(line: 335, column: 24, scope: !5876)
!5924 = !DILocation(line: 336, column: 17, scope: !5876)
!5925 = !DILocation(line: 338, column: 9, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5876, file: !5352, line: 338, column: 6)
!5927 = !DILocation(line: 338, column: 6, scope: !5876)
!5928 = !DILocation(line: 341, column: 17, scope: !5876)
!5929 = !DILocation(line: 344, column: 20, scope: !5876)
!5930 = !DILocation(line: 344, column: 8, scope: !5876)
!5931 = !DILocation(line: 344, column: 47, scope: !5876)
!5932 = !DILocation(line: 345, column: 39, scope: !5876)
!5933 = !DILocation(line: 348, column: 16, scope: !5876)
!5934 = !DILocation(line: 349, column: 26, scope: !5876)
!5935 = !DILocation(line: 349, column: 24, scope: !5876)
!5936 = !DILocation(line: 353, column: 8, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5876, file: !5352, line: 353, column: 6)
!5938 = !DILocation(line: 353, column: 6, scope: !5876)
!5939 = !DILocation(line: 354, column: 3, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5937, file: !5352, line: 353, column: 14)
!5941 = !DILocation(line: 355, column: 3, scope: !5940)
!5942 = !DILocation(line: 356, column: 2, scope: !5940)
!5943 = !DILocation(line: 359, column: 6, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5876, file: !5352, line: 359, column: 6)
!5945 = !DILocation(line: 359, column: 24, scope: !5944)
!5946 = !DILocation(line: 359, column: 6, scope: !5876)
!5947 = !DILocation(line: 360, column: 3, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5944, file: !5352, line: 359, column: 33)
!5949 = !DILocation(line: 361, column: 3, scope: !5948)
!5950 = !DILocation(line: 362, column: 2, scope: !5948)
!5951 = !DILocation(line: 364, column: 2, scope: !5876)
!5952 = !DILocation(line: 377, column: 1, scope: !5876)
!5953 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5352, file: !5352, line: 379, type: !5954, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !5956)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{!102, !5355, !102, !156, !156}
!5956 = !{!5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965, !5966, !5972, !5973}
!5957 = !DILocalVariable(name: "heap", arg: 1, scope: !5953, file: !5352, line: 379, type: !5355)
!5958 = !DILocalVariable(name: "ptr", arg: 2, scope: !5953, file: !5352, line: 379, type: !102)
!5959 = !DILocalVariable(name: "align", arg: 3, scope: !5953, file: !5352, line: 380, type: !156)
!5960 = !DILocalVariable(name: "bytes", arg: 4, scope: !5953, file: !5352, line: 380, type: !156)
!5961 = !DILocalVariable(name: "h", scope: !5953, file: !5352, line: 382, type: !3122)
!5962 = !DILocalVariable(name: "c", scope: !5953, file: !5352, line: 399, type: !3127)
!5963 = !DILocalVariable(name: "rc", scope: !5953, file: !5352, line: 400, type: !3127)
!5964 = !DILocalVariable(name: "align_gap", scope: !5953, file: !5352, line: 401, type: !156)
!5965 = !DILocalVariable(name: "chunks_need", scope: !5953, file: !5352, line: 402, type: !5497)
!5966 = !DILocalVariable(name: "split_size", scope: !5967, file: !5352, line: 435, type: !5497)
!5967 = distinct !DILexicalBlock(scope: !5968, file: !5352, line: 433, column: 61)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !5352, line: 432, column: 13)
!5969 = distinct !DILexicalBlock(scope: !5970, file: !5352, line: 409, column: 13)
!5970 = distinct !DILexicalBlock(scope: !5971, file: !5352, line: 406, column: 13)
!5971 = distinct !DILexicalBlock(scope: !5953, file: !5352, line: 404, column: 6)
!5972 = !DILocalVariable(name: "ptr2", scope: !5953, file: !5352, line: 474, type: !102)
!5973 = !DILocalVariable(name: "prev_size", scope: !5974, file: !5352, line: 477, type: !156)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !5352, line: 476, column: 20)
!5975 = distinct !DILexicalBlock(scope: !5953, file: !5352, line: 476, column: 6)
!5976 = !DILocation(line: 0, scope: !5953)
!5977 = !DILocation(line: 382, column: 27, scope: !5953)
!5978 = !DILocation(line: 385, column: 10, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5953, file: !5352, line: 385, column: 6)
!5980 = !DILocation(line: 385, column: 6, scope: !5953)
!5981 = !DILocation(line: 386, column: 10, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5979, file: !5352, line: 385, column: 19)
!5983 = !DILocation(line: 386, column: 3, scope: !5982)
!5984 = !DILocation(line: 388, column: 12, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5953, file: !5352, line: 388, column: 6)
!5986 = !DILocation(line: 388, column: 6, scope: !5953)
!5987 = !DILocation(line: 389, column: 3, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !5352, line: 388, column: 18)
!5989 = !DILocation(line: 390, column: 3, scope: !5988)
!5990 = !DILocation(line: 393, column: 2, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !5352, line: 393, column: 2)
!5992 = distinct !DILexicalBlock(scope: !5953, file: !5352, line: 393, column: 2)
!5993 = !DILocation(line: 393, column: 2, scope: !5992)
!5994 = !DILocation(line: 393, column: 2, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5991, file: !5352, line: 393, column: 2)
!5996 = !DILocation(line: 395, column: 6, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5953, file: !5352, line: 395, column: 6)
!5998 = !DILocation(line: 395, column: 6, scope: !5953)
!5999 = !DILocation(line: 399, column: 16, scope: !5953)
!6000 = !DILocation(line: 400, column: 17, scope: !5953)
!6001 = !DILocation(line: 401, column: 49, scope: !5953)
!6002 = !DILocation(line: 401, column: 36, scope: !5953)
!6003 = !DILocation(line: 402, column: 52, scope: !5953)
!6004 = !DILocation(line: 402, column: 26, scope: !5953)
!6005 = !DILocation(line: 404, column: 6, scope: !5971)
!6006 = !DILocation(line: 404, column: 12, scope: !5971)
!6007 = !DILocation(line: 406, column: 13, scope: !5970)
!6008 = !DILocation(line: 406, column: 30, scope: !5970)
!6009 = !DILocation(line: 406, column: 13, scope: !5971)
!6010 = !DILocation(line: 409, column: 30, scope: !5969)
!6011 = !DILocation(line: 409, column: 13, scope: !5970)
!6012 = !DILocation(line: 420, column: 24, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5969, file: !5352, line: 409, column: 45)
!6014 = !DILocation(line: 420, column: 3, scope: !6013)
!6015 = !DILocation(line: 421, column: 3, scope: !6013)
!6016 = !DILocation(line: 422, column: 3, scope: !6013)
!6017 = !DILocation(line: 431, column: 3, scope: !6013)
!6018 = !DILocation(line: 432, column: 14, scope: !5968)
!6019 = !DILocation(line: 432, column: 32, scope: !5968)
!6020 = !DILocation(line: 433, column: 26, scope: !5968)
!6021 = !DILocation(line: 433, column: 24, scope: !5968)
!6022 = !DILocation(line: 433, column: 44, scope: !5968)
!6023 = !DILocation(line: 432, column: 13, scope: !5969)
!6024 = !DILocation(line: 435, column: 38, scope: !5967)
!6025 = !DILocation(line: 0, scope: !5967)
!6026 = !DILocation(line: 445, column: 3, scope: !5967)
!6027 = !DILocation(line: 447, column: 20, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5967, file: !5352, line: 447, column: 7)
!6029 = !DILocation(line: 447, column: 18, scope: !6028)
!6030 = !DILocation(line: 447, column: 7, scope: !5967)
!6031 = !DILocation(line: 448, column: 27, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6028, file: !5352, line: 447, column: 39)
!6033 = !DILocation(line: 448, column: 4, scope: !6032)
!6034 = !DILocation(line: 449, column: 4, scope: !6032)
!6035 = !DILocation(line: 450, column: 3, scope: !6032)
!6036 = !DILocation(line: 452, column: 3, scope: !5967)
!6037 = !DILocation(line: 453, column: 3, scope: !5967)
!6038 = !DILocation(line: 474, column: 15, scope: !5953)
!6039 = !DILocation(line: 476, column: 11, scope: !5975)
!6040 = !DILocation(line: 476, column: 6, scope: !5953)
!6041 = !DILocation(line: 477, column: 42, scope: !5974)
!6042 = !DILocation(line: 477, column: 22, scope: !5974)
!6043 = !DILocation(line: 477, column: 60, scope: !5974)
!6044 = !DILocation(line: 0, scope: !5974)
!6045 = !DILocation(line: 479, column: 21, scope: !5974)
!6046 = !DILocation(line: 479, column: 3, scope: !5974)
!6047 = !DILocation(line: 480, column: 3, scope: !5974)
!6048 = !DILocation(line: 481, column: 2, scope: !5974)
!6049 = !DILocation(line: 483, column: 1, scope: !5953)
!6050 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !3109, file: !3109, line: 245, type: !6051, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !6053)
!6051 = !DISubroutineType(types: !6052)
!6052 = !{!156, !3122, !5497}
!6053 = !{!6054, !6055}
!6054 = !DILocalVariable(name: "h", arg: 1, scope: !6050, file: !3109, line: 245, type: !3122)
!6055 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !6050, file: !3109, line: 245, type: !5497)
!6056 = !DILocation(line: 0, scope: !6050)
!6057 = !DILocation(line: 247, column: 20, scope: !6050)
!6058 = !DILocation(line: 247, column: 33, scope: !6050)
!6059 = !DILocation(line: 247, column: 2, scope: !6050)
!6060 = distinct !DISubprogram(name: "sys_heap_init", scope: !5352, file: !5352, line: 485, type: !6061, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !6063)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{null, !5355, !102, !156}
!6063 = !{!6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073}
!6064 = !DILocalVariable(name: "heap", arg: 1, scope: !6060, file: !5352, line: 485, type: !5355)
!6065 = !DILocalVariable(name: "mem", arg: 2, scope: !6060, file: !5352, line: 485, type: !102)
!6066 = !DILocalVariable(name: "bytes", arg: 3, scope: !6060, file: !5352, line: 485, type: !156)
!6067 = !DILocalVariable(name: "addr", scope: !6060, file: !5352, line: 502, type: !22)
!6068 = !DILocalVariable(name: "end", scope: !6060, file: !5352, line: 503, type: !22)
!6069 = !DILocalVariable(name: "heap_sz", scope: !6060, file: !5352, line: 504, type: !5497)
!6070 = !DILocalVariable(name: "h", scope: !6060, file: !5352, line: 509, type: !3122)
!6071 = !DILocalVariable(name: "nb_buckets", scope: !6060, file: !5352, line: 520, type: !103)
!6072 = !DILocalVariable(name: "chunk0_size", scope: !6060, file: !5352, line: 521, type: !5497)
!6073 = !DILocalVariable(name: "i", scope: !6074, file: !5352, line: 526, type: !103)
!6074 = distinct !DILexicalBlock(scope: !6060, file: !5352, line: 526, column: 2)
!6075 = !DILocation(line: 0, scope: !6060)
!6076 = !DILocation(line: 491, column: 3, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !5352, line: 491, column: 3)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !5352, line: 491, column: 3)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !5352, line: 489, column: 46)
!6080 = distinct !DILexicalBlock(scope: !6060, file: !5352, line: 489, column: 6)
!6081 = !DILocation(line: 491, column: 3, scope: !6078)
!6082 = !DILocation(line: 491, column: 3, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6077, file: !5352, line: 491, column: 3)
!6084 = !DILocation(line: 498, column: 2, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !5352, line: 498, column: 2)
!6086 = distinct !DILexicalBlock(scope: !6060, file: !5352, line: 498, column: 2)
!6087 = !DILocation(line: 498, column: 2, scope: !6086)
!6088 = !DILocation(line: 498, column: 2, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !5352, line: 498, column: 2)
!6090 = !DILocation(line: 499, column: 8, scope: !6060)
!6091 = !DILocation(line: 502, column: 19, scope: !6060)
!6092 = !DILocation(line: 503, column: 18, scope: !6060)
!6093 = !DILocation(line: 504, column: 27, scope: !6060)
!6094 = !DILocation(line: 504, column: 35, scope: !6060)
!6095 = !DILocation(line: 507, column: 2, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !5352, line: 507, column: 2)
!6097 = distinct !DILexicalBlock(scope: !6060, file: !5352, line: 507, column: 2)
!6098 = !DILocation(line: 507, column: 2, scope: !6097)
!6099 = !DILocation(line: 507, column: 2, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6096, file: !5352, line: 507, column: 2)
!6101 = !DILocation(line: 509, column: 21, scope: !6060)
!6102 = !DILocation(line: 510, column: 8, scope: !6060)
!6103 = !DILocation(line: 510, column: 13, scope: !6060)
!6104 = !DILocation(line: 511, column: 5, scope: !6060)
!6105 = !DILocation(line: 511, column: 15, scope: !6060)
!6106 = !DILocation(line: 512, column: 5, scope: !6060)
!6107 = !DILocation(line: 512, column: 19, scope: !6060)
!6108 = !DILocation(line: 520, column: 19, scope: !6060)
!6109 = !DILocation(line: 522, column: 21, scope: !6060)
!6110 = !DILocation(line: 521, column: 56, scope: !6060)
!6111 = !DILocation(line: 521, column: 26, scope: !6060)
!6112 = !DILocation(line: 524, column: 2, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !5352, line: 524, column: 2)
!6114 = distinct !DILexicalBlock(scope: !6060, file: !5352, line: 524, column: 2)
!6115 = !DILocation(line: 524, column: 2, scope: !6114)
!6116 = !DILocation(line: 0, scope: !6074)
!6117 = !DILocation(line: 526, column: 20, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6074, file: !5352, line: 526, column: 2)
!6119 = !DILocation(line: 526, column: 2, scope: !6074)
!6120 = !DILocation(line: 524, column: 2, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6113, file: !5352, line: 524, column: 2)
!6122 = !DILocation(line: 531, column: 2, scope: !6060)
!6123 = !DILocation(line: 532, column: 2, scope: !6060)
!6124 = !DILocation(line: 533, column: 2, scope: !6060)
!6125 = !DILocation(line: 536, column: 41, scope: !6060)
!6126 = !DILocation(line: 536, column: 2, scope: !6060)
!6127 = !DILocation(line: 537, column: 2, scope: !6060)
!6128 = !DILocation(line: 540, column: 2, scope: !6060)
!6129 = !DILocation(line: 541, column: 2, scope: !6060)
!6130 = !DILocation(line: 542, column: 2, scope: !6060)
!6131 = !DILocation(line: 544, column: 2, scope: !6060)
!6132 = !DILocation(line: 545, column: 1, scope: !6060)
!6133 = !DILocation(line: 527, column: 17, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6118, file: !5352, line: 526, column: 39)
!6135 = !DILocation(line: 527, column: 22, scope: !6134)
!6136 = !DILocation(line: 526, column: 35, scope: !6118)
!6137 = distinct !{!6137, !6119, !6138}
!6138 = !DILocation(line: 528, column: 2, scope: !6074)
!6139 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3142, file: !3142, line: 1338, type: !6140, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6148)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{!103, !4507, !102, !108, !6142, !111}
!6142 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4125, line: 99, baseType: !6143)
!6143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4125, line: 40, baseType: !6144)
!6144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3142, baseType: !6145)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6146)
!6146 = !{!6147}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6145, file: !3142, baseType: !102, size: 32)
!6148 = !{!6149, !6150, !6151, !6152, !6153, !6154, !6158, !6159, !6160, !6162, !6167, !6210, !6213, !6216, !6217, !6218, !6219, !6220, !6221, !6222, !6225, !6226, !6227, !6231, !6234, !6236, !6239, !6240, !6241, !6246, !6252, !6255, !6259, !6265, !6269, !6272, !6274, !6277}
!6149 = !DILocalVariable(name: "out", arg: 1, scope: !6139, file: !3142, line: 1338, type: !4507)
!6150 = !DILocalVariable(name: "ctx", arg: 2, scope: !6139, file: !3142, line: 1338, type: !102)
!6151 = !DILocalVariable(name: "fp", arg: 3, scope: !6139, file: !3142, line: 1338, type: !108)
!6152 = !DILocalVariable(name: "ap", arg: 4, scope: !6139, file: !3142, line: 1339, type: !6142)
!6153 = !DILocalVariable(name: "flags", arg: 5, scope: !6139, file: !3142, line: 1339, type: !111)
!6154 = !DILocalVariable(name: "buf", scope: !6139, file: !3142, line: 1341, type: !6155)
!6155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 176, elements: !6156)
!6156 = !{!6157}
!6157 = !DISubrange(count: 22)
!6158 = !DILocalVariable(name: "count", scope: !6139, file: !3142, line: 1342, type: !156)
!6159 = !DILocalVariable(name: "sint", scope: !6139, file: !3142, line: 1343, type: !3161)
!6160 = !DILocalVariable(name: "tagged_ap", scope: !6139, file: !3142, line: 1345, type: !6161)
!6161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!6162 = !DILocalVariable(name: "rc", scope: !6163, file: !3142, line: 1377, type: !103)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !3142, line: 1377, column: 4)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !3142, line: 1376, column: 19)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1376, column: 7)
!6166 = distinct !DILexicalBlock(scope: !6139, file: !3142, line: 1375, column: 19)
!6167 = !DILocalVariable(name: "state", scope: !6166, file: !3142, line: 1395, type: !6168)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6139, file: !3142, line: 1392, size: 192, elements: !6169)
!6169 = !{!6170, !6178}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6168, file: !3142, line: 1393, baseType: !6171, size: 64)
!6171 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3142, line: 166, size: 64, elements: !6172)
!6172 = !{!6173, !6174, !6175, !6176, !6177}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6171, file: !3142, line: 168, baseType: !3161, size: 64)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6171, file: !3142, line: 171, baseType: !3164, size: 64)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6171, file: !3142, line: 174, baseType: !742, size: 64)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6171, file: !3142, line: 177, baseType: !740, size: 64)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6171, file: !3142, line: 180, baseType: !102, size: 32)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6168, file: !3142, line: 1394, baseType: !6179, size: 96, offset: 64)
!6179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3142, line: 189, size: 96, elements: !6180)
!6180 = !{!6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6205}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6179, file: !3142, line: 191, baseType: !122, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6179, file: !3142, line: 194, baseType: !122, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6179, file: !3142, line: 197, baseType: !122, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6179, file: !3142, line: 200, baseType: !122, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6179, file: !3142, line: 203, baseType: !122, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6179, file: !3142, line: 206, baseType: !122, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6179, file: !3142, line: 209, baseType: !122, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6179, file: !3142, line: 212, baseType: !122, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6179, file: !3142, line: 219, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6179, file: !3142, line: 222, baseType: !122, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6179, file: !3142, line: 229, baseType: !122, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6179, file: !3142, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6179, file: !3142, line: 238, baseType: !122, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6179, file: !3142, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6179, file: !3142, line: 244, baseType: !122, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6179, file: !3142, line: 247, baseType: !122, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6179, file: !3142, line: 252, baseType: !122, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6179, file: !3142, line: 257, baseType: !122, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6179, file: !3142, line: 260, baseType: !167, size: 8, offset: 24)
!6200 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !3142, line: 262, baseType: !6201, size: 32, offset: 32)
!6201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !3142, line: 262, size: 32, elements: !6202)
!6202 = !{!6203, !6204}
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6201, file: !3142, line: 267, baseType: !103, size: 32)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6201, file: !3142, line: 289, baseType: !103, size: 32)
!6205 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !3142, line: 292, baseType: !6206, size: 32, offset: 64)
!6206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !3142, line: 292, size: 32, elements: !6207)
!6207 = !{!6208, !6209}
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6206, file: !3142, line: 297, baseType: !103, size: 32)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6206, file: !3142, line: 306, baseType: !103, size: 32)
!6210 = !DILocalVariable(name: "conv", scope: !6166, file: !3142, line: 1400, type: !6211)
!6211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6212)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6179, size: 32)
!6213 = !DILocalVariable(name: "value", scope: !6166, file: !3142, line: 1401, type: !6214)
!6214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6215)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 32)
!6216 = !DILocalVariable(name: "sp", scope: !6166, file: !3142, line: 1402, type: !108)
!6217 = !DILocalVariable(name: "width", scope: !6166, file: !3142, line: 1403, type: !103)
!6218 = !DILocalVariable(name: "precision", scope: !6166, file: !3142, line: 1404, type: !103)
!6219 = !DILocalVariable(name: "bps", scope: !6166, file: !3142, line: 1405, type: !108)
!6220 = !DILocalVariable(name: "bpe", scope: !6166, file: !3142, line: 1406, type: !108)
!6221 = !DILocalVariable(name: "sign", scope: !6166, file: !3142, line: 1407, type: !110)
!6222 = !DILocalVariable(name: "arg", scope: !6223, file: !3142, line: 1432, type: !103)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !3142, line: 1431, column: 24)
!6224 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1431, column: 7)
!6225 = !DILocalVariable(name: "specifier_cat", scope: !6166, file: !3142, line: 1468, type: !3141)
!6226 = !DILocalVariable(name: "length_mod", scope: !6166, file: !3142, line: 1470, type: !3149)
!6227 = !DILocalVariable(name: "rc", scope: !6228, file: !3142, line: 1575, type: !103)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !3142, line: 1575, column: 4)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !3142, line: 1574, column: 43)
!6230 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1574, column: 7)
!6231 = !DILocalVariable(name: "rc", scope: !6232, file: !3142, line: 1584, type: !103)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !3142, line: 1584, column: 4)
!6233 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1582, column: 28)
!6234 = !DILocalVariable(name: "len", scope: !6235, file: !3142, line: 1589, type: !156)
!6235 = distinct !DILexicalBlock(scope: !6233, file: !3142, line: 1586, column: 13)
!6236 = !DILocalVariable(name: "len", scope: !6237, file: !3142, line: 1641, type: !156)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !3142, line: 1640, column: 24)
!6238 = distinct !DILexicalBlock(scope: !6233, file: !3142, line: 1640, column: 8)
!6239 = !DILocalVariable(name: "nj_len", scope: !6166, file: !3142, line: 1722, type: !156)
!6240 = !DILocalVariable(name: "pad_len", scope: !6166, file: !3142, line: 1723, type: !103)
!6241 = !DILocalVariable(name: "pad", scope: !6242, file: !3142, line: 1751, type: !110)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !3142, line: 1750, column: 26)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !3142, line: 1750, column: 8)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !3142, line: 1747, column: 18)
!6245 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1747, column: 7)
!6246 = !DILocalVariable(name: "rc", scope: !6247, file: !3142, line: 1758, type: !103)
!6247 = distinct !DILexicalBlock(scope: !6248, file: !3142, line: 1758, column: 7)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !3142, line: 1757, column: 21)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !3142, line: 1757, column: 10)
!6250 = distinct !DILexicalBlock(scope: !6251, file: !3142, line: 1756, column: 26)
!6251 = distinct !DILexicalBlock(scope: !6242, file: !3142, line: 1756, column: 9)
!6252 = !DILocalVariable(name: "rc", scope: !6253, file: !3142, line: 1765, type: !103)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !3142, line: 1765, column: 6)
!6254 = distinct !DILexicalBlock(scope: !6242, file: !3142, line: 1764, column: 25)
!6255 = !DILocalVariable(name: "rc", scope: !6256, file: !3142, line: 1774, type: !103)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !3142, line: 1774, column: 4)
!6257 = distinct !DILexicalBlock(scope: !6258, file: !3142, line: 1773, column: 18)
!6258 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1773, column: 7)
!6259 = !DILocalVariable(name: "rc", scope: !6260, file: !3142, line: 1819, type: !103)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !3142, line: 1819, column: 5)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !3142, line: 1818, column: 44)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !3142, line: 1818, column: 8)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !3142, line: 1817, column: 10)
!6264 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1777, column: 7)
!6265 = !DILocalVariable(name: "rc", scope: !6266, file: !3142, line: 1823, type: !103)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !3142, line: 1823, column: 5)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !3142, line: 1822, column: 26)
!6268 = distinct !DILexicalBlock(scope: !6263, file: !3142, line: 1822, column: 8)
!6269 = !DILocalVariable(name: "rc", scope: !6270, file: !3142, line: 1828, type: !103)
!6270 = distinct !DILexicalBlock(scope: !6271, file: !3142, line: 1828, column: 5)
!6271 = distinct !DILexicalBlock(scope: !6263, file: !3142, line: 1827, column: 26)
!6272 = !DILocalVariable(name: "rc", scope: !6273, file: !3142, line: 1831, type: !103)
!6273 = distinct !DILexicalBlock(scope: !6263, file: !3142, line: 1831, column: 4)
!6274 = !DILocalVariable(name: "rc", scope: !6275, file: !3142, line: 1836, type: !103)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !3142, line: 1836, column: 4)
!6276 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1835, column: 21)
!6277 = !DILabel(scope: !6233, name: "prec_int_pad0", file: !3142, line: 1634)
!6278 = !DILocation(line: 0, scope: !6139)
!6279 = !DILocation(line: 1341, column: 2, scope: !6139)
!6280 = !DILocation(line: 1341, column: 7, scope: !6139)
!6281 = !DILocation(line: 1375, column: 2, scope: !6139)
!6282 = !DILocation(line: 1342, column: 9, scope: !6139)
!6283 = !DILocation(line: 1375, column: 9, scope: !6139)
!6284 = !DILocation(line: 1377, column: 4, scope: !6163)
!6285 = !DILocation(line: 0, scope: !6163)
!6286 = !DILocation(line: 1377, column: 4, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6163, file: !3142, line: 1377, column: 4)
!6288 = distinct !{!6288, !6281, !6289}
!6289 = !DILocation(line: 1839, column: 2, scope: !6139)
!6290 = !DILocation(line: 1392, column: 3, scope: !6166)
!6291 = !DILocation(line: 1395, column: 5, scope: !6166)
!6292 = !DILocation(line: 0, scope: !6166)
!6293 = !DILocation(line: 1409, column: 8, scope: !6166)
!6294 = !DILocation(line: 1414, column: 13, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1414, column: 7)
!6296 = !DILocation(line: 1414, column: 7, scope: !6166)
!6297 = !DILocation(line: 1415, column: 12, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6295, file: !3142, line: 1414, column: 25)
!6299 = !DILocation(line: 1417, column: 14, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6298, file: !3142, line: 1417, column: 8)
!6301 = !DILocation(line: 1417, column: 8, scope: !6298)
!6302 = !DILocation(line: 1418, column: 21, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6300, file: !3142, line: 1417, column: 19)
!6304 = !DILocation(line: 1419, column: 13, scope: !6303)
!6305 = !DILocation(line: 1420, column: 4, scope: !6303)
!6306 = !DILocation(line: 1421, column: 20, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6295, file: !3142, line: 1421, column: 14)
!6308 = !DILocation(line: 1421, column: 14, scope: !6295)
!6309 = !DILocation(line: 1431, column: 13, scope: !6224)
!6310 = !DILocation(line: 1431, column: 7, scope: !6166)
!6311 = !DILocation(line: 1432, column: 14, scope: !6223)
!6312 = !DILocation(line: 0, scope: !6223)
!6313 = !DILocation(line: 1434, column: 12, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6223, file: !3142, line: 1434, column: 8)
!6315 = !DILocation(line: 1434, column: 8, scope: !6223)
!6316 = !DILocation(line: 1435, column: 24, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6314, file: !3142, line: 1434, column: 17)
!6318 = !DILocation(line: 1436, column: 4, scope: !6317)
!6319 = !DILocation(line: 1439, column: 20, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6224, file: !3142, line: 1439, column: 14)
!6321 = !DILocation(line: 1439, column: 14, scope: !6224)
!6322 = !DILocation(line: 1469, column: 37, scope: !6166)
!6323 = !DILocation(line: 1448, column: 20, scope: !6166)
!6324 = !DILocation(line: 1449, column: 22, scope: !6166)
!6325 = !DILocation(line: 1471, column: 34, scope: !6166)
!6326 = !DILocation(line: 1478, column: 7, scope: !6166)
!6327 = !DILocation(line: 1479, column: 4, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !3142, line: 1478, column: 40)
!6329 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1478, column: 7)
!6330 = !DILocation(line: 1484, column: 19, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6328, file: !3142, line: 1479, column: 24)
!6332 = !DILocation(line: 1484, column: 17, scope: !6331)
!6333 = !DILocation(line: 1485, column: 5, scope: !6331)
!6334 = !DILocation(line: 1492, column: 20, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !3142, line: 1491, column: 12)
!6336 = distinct !DILexicalBlock(scope: !6331, file: !3142, line: 1487, column: 9)
!6337 = !DILocation(line: 1492, column: 18, scope: !6335)
!6338 = !DILocation(line: 1494, column: 5, scope: !6331)
!6339 = !DILocation(line: 1497, column: 23, scope: !6331)
!6340 = !DILocation(line: 1496, column: 17, scope: !6331)
!6341 = !DILocation(line: 1498, column: 5, scope: !6331)
!6342 = !DILocation(line: 1501, column: 23, scope: !6331)
!6343 = !DILocation(line: 1500, column: 17, scope: !6331)
!6344 = !DILocation(line: 1502, column: 5, scope: !6331)
!6345 = !DILocation(line: 1513, column: 23, scope: !6331)
!6346 = !DILocation(line: 1513, column: 6, scope: !6331)
!6347 = !DILocation(line: 1512, column: 17, scope: !6331)
!6348 = !DILocation(line: 1514, column: 5, scope: !6331)
!6349 = !DILocation(line: 0, scope: !6331)
!6350 = !DILocation(line: 1516, column: 8, scope: !6328)
!6351 = !DILocation(line: 1517, column: 19, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6353, file: !3142, line: 1516, column: 33)
!6353 = distinct !DILexicalBlock(scope: !6328, file: !3142, line: 1516, column: 8)
!6354 = !DILocation(line: 1517, column: 17, scope: !6352)
!6355 = !DILocation(line: 1518, column: 4, scope: !6352)
!6356 = !DILocation(line: 1519, column: 19, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !3142, line: 1518, column: 39)
!6358 = distinct !DILexicalBlock(scope: !6353, file: !3142, line: 1518, column: 15)
!6359 = !DILocation(line: 1519, column: 17, scope: !6357)
!6360 = !DILocation(line: 1520, column: 4, scope: !6357)
!6361 = !DILocation(line: 1522, column: 4, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6363, file: !3142, line: 1521, column: 47)
!6363 = distinct !DILexicalBlock(scope: !6329, file: !3142, line: 1521, column: 14)
!6364 = !DILocation(line: 1527, column: 19, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6362, file: !3142, line: 1522, column: 24)
!6366 = !DILocation(line: 1527, column: 17, scope: !6365)
!6367 = !DILocation(line: 1528, column: 5, scope: !6365)
!6368 = !DILocation(line: 0, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6365, file: !3142, line: 1530, column: 9)
!6370 = !DILocation(line: 1540, column: 23, scope: !6365)
!6371 = !DILocation(line: 1539, column: 17, scope: !6365)
!6372 = !DILocation(line: 1542, column: 5, scope: !6365)
!6373 = !DILocation(line: 1545, column: 23, scope: !6365)
!6374 = !DILocation(line: 1544, column: 17, scope: !6365)
!6375 = !DILocation(line: 1547, column: 5, scope: !6365)
!6376 = !DILocation(line: 1551, column: 23, scope: !6365)
!6377 = !DILocation(line: 1551, column: 6, scope: !6365)
!6378 = !DILocation(line: 1550, column: 17, scope: !6365)
!6379 = !DILocation(line: 1552, column: 5, scope: !6365)
!6380 = !DILocation(line: 0, scope: !6365)
!6381 = !DILocation(line: 1554, column: 8, scope: !6362)
!6382 = !DILocation(line: 1555, column: 19, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !3142, line: 1554, column: 33)
!6384 = distinct !DILexicalBlock(scope: !6362, file: !3142, line: 1554, column: 8)
!6385 = !DILocation(line: 1555, column: 17, scope: !6383)
!6386 = !DILocation(line: 1556, column: 4, scope: !6383)
!6387 = !DILocation(line: 1557, column: 19, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !3142, line: 1556, column: 39)
!6389 = distinct !DILexicalBlock(scope: !6384, file: !3142, line: 1556, column: 15)
!6390 = !DILocation(line: 1557, column: 17, scope: !6388)
!6391 = !DILocation(line: 1558, column: 4, scope: !6388)
!6392 = !DILocation(line: 0, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3142, line: 1560, column: 8)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !3142, line: 1559, column: 45)
!6395 = distinct !DILexicalBlock(scope: !6363, file: !3142, line: 1559, column: 14)
!6396 = !DILocation(line: 1566, column: 17, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3142, line: 1565, column: 46)
!6398 = distinct !DILexicalBlock(scope: !6395, file: !3142, line: 1565, column: 14)
!6399 = !DILocation(line: 1566, column: 15, scope: !6397)
!6400 = !DILocation(line: 1567, column: 3, scope: !6397)
!6401 = !DILocation(line: 1574, column: 21, scope: !6230)
!6402 = !DILocation(line: 1575, column: 4, scope: !6228)
!6403 = !DILocation(line: 0, scope: !6228)
!6404 = !DILocation(line: 1575, column: 4, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6228, file: !3142, line: 1575, column: 4)
!6406 = !DILocation(line: 1582, column: 17, scope: !6166)
!6407 = !DILocation(line: 1582, column: 3, scope: !6166)
!6408 = !DILocation(line: 1584, column: 4, scope: !6232)
!6409 = !DILocation(line: 0, scope: !6232)
!6410 = !DILocation(line: 1584, column: 4, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6232, file: !3142, line: 1584, column: 4)
!6412 = !DILocation(line: 1587, column: 31, scope: !6235)
!6413 = !DILocation(line: 1591, column: 18, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6235, file: !3142, line: 1591, column: 8)
!6415 = !DILocation(line: 1591, column: 8, scope: !6235)
!6416 = !DILocation(line: 1592, column: 11, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6414, file: !3142, line: 1591, column: 24)
!6418 = !DILocation(line: 0, scope: !6235)
!6419 = !DILocation(line: 1593, column: 4, scope: !6417)
!6420 = !DILocation(line: 1594, column: 11, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6414, file: !3142, line: 1593, column: 11)
!6422 = !DILocation(line: 1604, column: 51, scope: !6233)
!6423 = !DILocation(line: 1604, column: 13, scope: !6233)
!6424 = !DILocation(line: 1604, column: 11, scope: !6233)
!6425 = !DILocation(line: 1606, column: 4, scope: !6233)
!6426 = !DILocation(line: 1609, column: 14, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6233, file: !3142, line: 1609, column: 8)
!6428 = !DILocation(line: 1609, column: 8, scope: !6233)
!6429 = !DILocation(line: 1619, column: 18, scope: !6233)
!6430 = !DILocation(line: 1620, column: 13, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6233, file: !3142, line: 1620, column: 8)
!6432 = !DILocation(line: 1620, column: 8, scope: !6233)
!6433 = !DILocation(line: 1622, column: 36, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6431, file: !3142, line: 1620, column: 18)
!6435 = !DILocation(line: 1622, column: 17, scope: !6434)
!6436 = !DILocation(line: 1623, column: 4, scope: !6434)
!6437 = !DILocation(line: 1632, column: 29, scope: !6233)
!6438 = !DILocation(line: 1632, column: 10, scope: !6233)
!6439 = !DILocation(line: 1632, column: 4, scope: !6233)
!6440 = !DILocation(line: 1407, column: 8, scope: !6166)
!6441 = !DILocation(line: 0, scope: !6233)
!6442 = !DILocation(line: 1634, column: 3, scope: !6233)
!6443 = !DILocation(line: 1640, column: 18, scope: !6238)
!6444 = !DILocation(line: 1640, column: 8, scope: !6233)
!6445 = !DILocation(line: 1729, column: 13, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1729, column: 7)
!6447 = !DILocation(line: 1641, column: 22, scope: !6237)
!6448 = !DILocation(line: 0, scope: !6237)
!6449 = !DILocation(line: 1646, column: 21, scope: !6237)
!6450 = !DILocation(line: 1649, column: 13, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6237, file: !3142, line: 1649, column: 9)
!6452 = !DILocation(line: 1649, column: 9, scope: !6237)
!6453 = !DILocation(line: 1650, column: 35, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6451, file: !3142, line: 1649, column: 34)
!6455 = !DILocation(line: 1650, column: 23, scope: !6454)
!6456 = !DILocation(line: 1651, column: 5, scope: !6454)
!6457 = !DILocation(line: 1660, column: 15, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6233, file: !3142, line: 1660, column: 8)
!6459 = !DILocation(line: 1660, column: 19, scope: !6458)
!6460 = !DILocation(line: 1660, column: 8, scope: !6233)
!6461 = !DILocation(line: 1661, column: 23, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !3142, line: 1660, column: 28)
!6463 = !DILocation(line: 1661, column: 11, scope: !6462)
!6464 = !DILocation(line: 1665, column: 22, scope: !6462)
!6465 = !DILocation(line: 1666, column: 21, scope: !6462)
!6466 = !DILocation(line: 1668, column: 5, scope: !6462)
!6467 = !DILocation(line: 1677, column: 30, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !3142, line: 1676, column: 49)
!6469 = distinct !DILexicalBlock(scope: !6233, file: !3142, line: 1676, column: 8)
!6470 = !DILocation(line: 1677, column: 5, scope: !6468)
!6471 = !DILocation(line: 1680, column: 4, scope: !6233)
!6472 = !DILocation(line: 0, scope: !6414)
!6473 = !DILocation(line: 1597, column: 14, scope: !6235)
!6474 = !DILocation(line: 1699, column: 11, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1699, column: 7)
!6476 = !DILocation(line: 1699, column: 7, scope: !6166)
!6477 = !DILocation(line: 1725, column: 7, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1725, column: 7)
!6479 = !DILocation(line: 1725, column: 12, scope: !6478)
!6480 = !DILocation(line: 1747, column: 13, scope: !6245)
!6481 = !DILocation(line: 1747, column: 7, scope: !6166)
!6482 = !DILocation(line: 1722, column: 24, scope: !6166)
!6483 = !DILocation(line: 1725, column: 7, scope: !6166)
!6484 = !DILocation(line: 1729, column: 7, scope: !6166)
!6485 = !DILocation(line: 1736, column: 13, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6166, file: !3142, line: 1736, column: 7)
!6487 = !DILocation(line: 1735, column: 19, scope: !6166)
!6488 = !DILocation(line: 1736, column: 7, scope: !6166)
!6489 = !DILocation(line: 1748, column: 10, scope: !6244)
!6490 = !DILocation(line: 1750, column: 15, scope: !6243)
!6491 = !DILocation(line: 1750, column: 8, scope: !6244)
!6492 = !DILocation(line: 0, scope: !6242)
!6493 = !DILocation(line: 1756, column: 15, scope: !6251)
!6494 = !DILocation(line: 1756, column: 9, scope: !6242)
!6495 = !DILocation(line: 1758, column: 7, scope: !6247)
!6496 = !DILocation(line: 0, scope: !6247)
!6497 = !DILocation(line: 1758, column: 7, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6247, file: !3142, line: 1758, column: 7)
!6499 = !DILocation(line: 1764, column: 5, scope: !6242)
!6500 = !DILocation(line: 0, scope: !6244)
!6501 = !DILocation(line: 1764, column: 20, scope: !6242)
!6502 = !DILocation(line: 1764, column: 17, scope: !6242)
!6503 = !DILocation(line: 1765, column: 6, scope: !6253)
!6504 = !DILocation(line: 0, scope: !6253)
!6505 = !DILocation(line: 1765, column: 6, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6253, file: !3142, line: 1765, column: 6)
!6507 = distinct !{!6507, !6499, !6508}
!6508 = !DILocation(line: 1766, column: 5, scope: !6242)
!6509 = !DILocation(line: 1773, column: 12, scope: !6258)
!6510 = !DILocation(line: 1773, column: 7, scope: !6166)
!6511 = !DILocation(line: 1773, column: 7, scope: !6258)
!6512 = !DILocation(line: 1774, column: 4, scope: !6256)
!6513 = !DILocation(line: 0, scope: !6256)
!6514 = !DILocation(line: 1774, column: 4, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6256, file: !3142, line: 1774, column: 4)
!6516 = !DILocation(line: 1818, column: 8, scope: !6262)
!6517 = !DILocation(line: 1818, column: 27, scope: !6262)
!6518 = !DILocation(line: 1818, column: 25, scope: !6262)
!6519 = !DILocation(line: 1818, column: 8, scope: !6263)
!6520 = !DILocation(line: 1819, column: 5, scope: !6260)
!6521 = !DILocation(line: 0, scope: !6260)
!6522 = !DILocation(line: 1819, column: 5, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6260, file: !3142, line: 1819, column: 5)
!6524 = !DILocation(line: 1822, column: 14, scope: !6268)
!6525 = !DILocation(line: 1822, column: 8, scope: !6263)
!6526 = !DILocation(line: 1823, column: 5, scope: !6266)
!6527 = !DILocation(line: 0, scope: !6266)
!6528 = !DILocation(line: 1823, column: 5, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6266, file: !3142, line: 1823, column: 5)
!6530 = !DILocation(line: 1826, column: 20, scope: !6263)
!6531 = !DILocation(line: 1827, column: 4, scope: !6263)
!6532 = !DILocation(line: 0, scope: !6263)
!6533 = !DILocation(line: 1827, column: 21, scope: !6263)
!6534 = !DILocation(line: 1827, column: 18, scope: !6263)
!6535 = !DILocation(line: 1828, column: 5, scope: !6270)
!6536 = !DILocation(line: 0, scope: !6270)
!6537 = !DILocation(line: 1828, column: 5, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6270, file: !3142, line: 1828, column: 5)
!6539 = distinct !{!6539, !6531, !6540}
!6540 = !DILocation(line: 1829, column: 4, scope: !6263)
!6541 = !DILocation(line: 1831, column: 4, scope: !6273)
!6542 = !DILocation(line: 0, scope: !6273)
!6543 = !DILocation(line: 1831, column: 4, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6273, file: !3142, line: 1831, column: 4)
!6545 = !DILocation(line: 1835, column: 16, scope: !6166)
!6546 = !DILocation(line: 1835, column: 3, scope: !6166)
!6547 = !DILocation(line: 1836, column: 4, scope: !6275)
!6548 = !DILocation(line: 0, scope: !6275)
!6549 = !DILocation(line: 1836, column: 4, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6275, file: !3142, line: 1836, column: 4)
!6551 = !DILocation(line: 1837, column: 4, scope: !6276)
!6552 = distinct !{!6552, !6546, !6553}
!6553 = !DILocation(line: 1838, column: 3, scope: !6166)
!6554 = !DILocation(line: 1844, column: 1, scope: !6139)
!6555 = distinct !DISubprogram(name: "extract_conversion", scope: !3142, file: !3142, line: 642, type: !6556, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6558)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!108, !6212, !108}
!6558 = !{!6559, !6560}
!6559 = !DILocalVariable(name: "conv", arg: 1, scope: !6555, file: !3142, line: 642, type: !6212)
!6560 = !DILocalVariable(name: "sp", arg: 2, scope: !6555, file: !3142, line: 643, type: !108)
!6561 = !DILocation(line: 0, scope: !6555)
!6562 = !DILocation(line: 645, column: 10, scope: !6555)
!6563 = !DILocation(line: 653, column: 2, scope: !6555)
!6564 = !DILocation(line: 654, column: 6, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6555, file: !3142, line: 654, column: 6)
!6566 = !DILocation(line: 654, column: 10, scope: !6565)
!6567 = !DILocation(line: 654, column: 6, scope: !6555)
!6568 = !DILocation(line: 655, column: 24, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !3142, line: 654, column: 18)
!6570 = !DILocation(line: 655, column: 19, scope: !6569)
!6571 = !DILocation(line: 656, column: 3, scope: !6569)
!6572 = !DILocation(line: 659, column: 7, scope: !6555)
!6573 = !DILocation(line: 660, column: 7, scope: !6555)
!6574 = !DILocation(line: 661, column: 7, scope: !6555)
!6575 = !DILocation(line: 662, column: 7, scope: !6555)
!6576 = !DILocation(line: 663, column: 7, scope: !6555)
!6577 = !DILocation(line: 665, column: 2, scope: !6555)
!6578 = !DILocation(line: 666, column: 1, scope: !6555)
!6579 = distinct !DISubprogram(name: "outs", scope: !3142, file: !3142, line: 1319, type: !6580, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6582)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!103, !4507, !102, !108, !108}
!6582 = !{!6583, !6584, !6585, !6586, !6587, !6588}
!6583 = !DILocalVariable(name: "out", arg: 1, scope: !6579, file: !3142, line: 1319, type: !4507)
!6584 = !DILocalVariable(name: "ctx", arg: 2, scope: !6579, file: !3142, line: 1320, type: !102)
!6585 = !DILocalVariable(name: "sp", arg: 3, scope: !6579, file: !3142, line: 1321, type: !108)
!6586 = !DILocalVariable(name: "ep", arg: 4, scope: !6579, file: !3142, line: 1322, type: !108)
!6587 = !DILocalVariable(name: "count", scope: !6579, file: !3142, line: 1324, type: !156)
!6588 = !DILocalVariable(name: "rc", scope: !6589, file: !3142, line: 1327, type: !103)
!6589 = distinct !DILexicalBlock(scope: !6579, file: !3142, line: 1326, column: 45)
!6590 = !DILocation(line: 0, scope: !6579)
!6591 = !DILocation(line: 1326, column: 2, scope: !6579)
!6592 = !DILocation(line: 1324, column: 9, scope: !6579)
!6593 = !DILocation(line: 1326, column: 13, scope: !6579)
!6594 = !DILocation(line: 1326, column: 19, scope: !6579)
!6595 = !DILocation(line: 1327, column: 21, scope: !6589)
!6596 = !DILocation(line: 1326, column: 36, scope: !6579)
!6597 = !DILocation(line: 1326, column: 39, scope: !6579)
!6598 = !DILocation(line: 1327, column: 24, scope: !6589)
!6599 = !DILocation(line: 1327, column: 16, scope: !6589)
!6600 = !DILocation(line: 1327, column: 12, scope: !6589)
!6601 = !DILocation(line: 0, scope: !6589)
!6602 = !DILocation(line: 1329, column: 10, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6589, file: !3142, line: 1329, column: 7)
!6604 = !DILocation(line: 1329, column: 7, scope: !6589)
!6605 = distinct !{!6605, !6591, !6606}
!6606 = !DILocation(line: 1333, column: 2, scope: !6579)
!6607 = !DILocation(line: 1336, column: 1, scope: !6579)
!6608 = distinct !DISubprogram(name: "encode_uint", scope: !3142, file: !3142, line: 788, type: !6609, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6611)
!6609 = !DISubroutineType(types: !6610)
!6610 = !{!160, !3164, !6212, !160, !108}
!6611 = !{!6612, !6613, !6614, !6615, !6616, !6617, !6619, !6620}
!6612 = !DILocalVariable(name: "value", arg: 1, scope: !6608, file: !3142, line: 788, type: !3164)
!6613 = !DILocalVariable(name: "conv", arg: 2, scope: !6608, file: !3142, line: 789, type: !6212)
!6614 = !DILocalVariable(name: "bps", arg: 3, scope: !6608, file: !3142, line: 790, type: !160)
!6615 = !DILocalVariable(name: "bpe", arg: 4, scope: !6608, file: !3142, line: 791, type: !108)
!6616 = !DILocalVariable(name: "upcase", scope: !6608, file: !3142, line: 793, type: !122)
!6617 = !DILocalVariable(name: "radix", scope: !6608, file: !3142, line: 794, type: !6618)
!6618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6619 = !DILocalVariable(name: "bp", scope: !6608, file: !3142, line: 795, type: !160)
!6620 = !DILocalVariable(name: "lsv", scope: !6621, file: !3142, line: 798, type: !32)
!6621 = distinct !DILexicalBlock(scope: !6608, file: !3142, line: 797, column: 5)
!6622 = !DILocation(line: 0, scope: !6608)
!6623 = !DILocation(line: 793, column: 35, scope: !6608)
!6624 = !DILocation(line: 793, column: 24, scope: !6608)
!6625 = !DILocation(line: 793, column: 16, scope: !6608)
!6626 = !DILocation(line: 794, column: 29, scope: !6608)
!6627 = !DILocation(line: 795, column: 24, scope: !6608)
!6628 = !DILocation(line: 795, column: 17, scope: !6608)
!6629 = !DILocation(line: 797, column: 2, scope: !6608)
!6630 = !DILocation(line: 802, column: 9, scope: !6621)
!6631 = !DILocation(line: 798, column: 22, scope: !6621)
!6632 = !DILocation(line: 0, scope: !6621)
!6633 = !DILocation(line: 800, column: 16, scope: !6621)
!6634 = !DILocation(line: 800, column: 11, scope: !6621)
!6635 = !DILocation(line: 800, column: 4, scope: !6621)
!6636 = !DILocation(line: 800, column: 9, scope: !6621)
!6637 = !DILocation(line: 803, column: 18, scope: !6608)
!6638 = !DILocation(line: 803, column: 24, scope: !6608)
!6639 = !DILocation(line: 803, column: 2, scope: !6621)
!6640 = distinct !{!6640, !6629, !6641}
!6641 = !DILocation(line: 803, column: 37, scope: !6608)
!6642 = !DILocation(line: 808, column: 12, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6608, file: !3142, line: 808, column: 6)
!6644 = !DILocation(line: 808, column: 6, scope: !6608)
!6645 = !DILocation(line: 809, column: 7, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6643, file: !3142, line: 808, column: 23)
!6647 = !DILocation(line: 813, column: 3, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !3142, line: 811, column: 27)
!6649 = distinct !DILexicalBlock(scope: !6650, file: !3142, line: 811, column: 14)
!6650 = distinct !DILexicalBlock(scope: !6646, file: !3142, line: 809, column: 7)
!6651 = !DILocation(line: 0, scope: !6650)
!6652 = !DILocation(line: 818, column: 2, scope: !6608)
!6653 = distinct !DISubprogram(name: "store_count", scope: !3142, file: !3142, line: 1280, type: !6654, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6658)
!6654 = !DISubroutineType(types: !6655)
!6655 = !{null, !6656, !102, !103}
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 32)
!6657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6179)
!6658 = !{!6659, !6660, !6661}
!6659 = !DILocalVariable(name: "conv", arg: 1, scope: !6653, file: !3142, line: 1280, type: !6656)
!6660 = !DILocalVariable(name: "dp", arg: 2, scope: !6653, file: !3142, line: 1281, type: !102)
!6661 = !DILocalVariable(name: "count", arg: 3, scope: !6653, file: !3142, line: 1282, type: !103)
!6662 = !DILocation(line: 0, scope: !6653)
!6663 = !DILocation(line: 1284, column: 38, scope: !6653)
!6664 = !DILocation(line: 1284, column: 2, scope: !6653)
!6665 = !DILocation(line: 1286, column: 4, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6653, file: !3142, line: 1284, column: 50)
!6667 = !DILocation(line: 1286, column: 14, scope: !6666)
!6668 = !DILocation(line: 1287, column: 3, scope: !6666)
!6669 = !DILocation(line: 1289, column: 24, scope: !6666)
!6670 = !DILocation(line: 1289, column: 22, scope: !6666)
!6671 = !DILocation(line: 1290, column: 3, scope: !6666)
!6672 = !DILocation(line: 1292, column: 18, scope: !6666)
!6673 = !DILocation(line: 1292, column: 4, scope: !6666)
!6674 = !DILocation(line: 1292, column: 16, scope: !6666)
!6675 = !DILocation(line: 1293, column: 3, scope: !6666)
!6676 = !DILocation(line: 1295, column: 4, scope: !6666)
!6677 = !DILocation(line: 1295, column: 15, scope: !6666)
!6678 = !DILocation(line: 1296, column: 3, scope: !6666)
!6679 = !DILocation(line: 1298, column: 22, scope: !6666)
!6680 = !DILocation(line: 1298, column: 4, scope: !6666)
!6681 = !DILocation(line: 1298, column: 20, scope: !6666)
!6682 = !DILocation(line: 1299, column: 3, scope: !6666)
!6683 = !DILocation(line: 1301, column: 21, scope: !6666)
!6684 = !DILocation(line: 1301, column: 4, scope: !6666)
!6685 = !DILocation(line: 1301, column: 19, scope: !6666)
!6686 = !DILocation(line: 1302, column: 3, scope: !6666)
!6687 = !DILocation(line: 1304, column: 4, scope: !6666)
!6688 = !DILocation(line: 1304, column: 17, scope: !6666)
!6689 = !DILocation(line: 1305, column: 3, scope: !6666)
!6690 = !DILocation(line: 1307, column: 4, scope: !6666)
!6691 = !DILocation(line: 1307, column: 20, scope: !6666)
!6692 = !DILocation(line: 1308, column: 3, scope: !6666)
!6693 = !DILocation(line: 1316, column: 1, scope: !6653)
!6694 = distinct !DISubprogram(name: "isupper", scope: !6695, file: !6695, line: 16, type: !764, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6696)
!6695 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6696 = !{!6697}
!6697 = !DILocalVariable(name: "a", arg: 1, scope: !6694, file: !6695, line: 16, type: !103)
!6698 = !DILocation(line: 0, scope: !6694)
!6699 = !DILocation(line: 18, column: 29, scope: !6694)
!6700 = !DILocation(line: 18, column: 45, scope: !6694)
!6701 = !DILocation(line: 18, column: 2, scope: !6694)
!6702 = distinct !DISubprogram(name: "conversion_radix", scope: !3142, file: !3142, line: 761, type: !6703, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6705)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{!156, !110}
!6705 = !{!6706}
!6706 = !DILocalVariable(name: "specifier", arg: 1, scope: !6702, file: !3142, line: 761, type: !110)
!6707 = !DILocation(line: 0, scope: !6702)
!6708 = !DILocation(line: 763, column: 2, scope: !6702)
!6709 = !DILocation(line: 770, column: 3, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6702, file: !3142, line: 763, column: 21)
!6711 = !DILocation(line: 774, column: 3, scope: !6710)
!6712 = !DILocation(line: 0, scope: !6710)
!6713 = !DILocation(line: 776, column: 1, scope: !6702)
!6714 = distinct !DISubprogram(name: "extract_flags", scope: !3142, file: !3142, line: 339, type: !6556, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6715)
!6715 = !{!6716, !6717, !6718}
!6716 = !DILocalVariable(name: "conv", arg: 1, scope: !6714, file: !3142, line: 339, type: !6212)
!6717 = !DILocalVariable(name: "sp", arg: 2, scope: !6714, file: !3142, line: 340, type: !108)
!6718 = !DILocalVariable(name: "loop", scope: !6714, file: !3142, line: 342, type: !122)
!6719 = !DILocation(line: 0, scope: !6714)
!6720 = !DILocation(line: 344, column: 2, scope: !6714)
!6721 = !DILocation(line: 345, column: 11, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6714, file: !3142, line: 344, column: 5)
!6723 = !DILocation(line: 345, column: 3, scope: !6722)
!6724 = !DILocation(line: 351, column: 4, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6722, file: !3142, line: 345, column: 16)
!6726 = !DILocation(line: 354, column: 4, scope: !6725)
!6727 = !DILocation(line: 357, column: 4, scope: !6725)
!6728 = !DILocation(line: 360, column: 4, scope: !6725)
!6729 = !DILocation(line: 0, scope: !6725)
!6730 = !DILocation(line: 370, column: 12, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6714, file: !3142, line: 370, column: 6)
!6732 = !DILocation(line: 370, column: 22, scope: !6731)
!6733 = !DILocation(line: 371, column: 19, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6731, file: !3142, line: 370, column: 42)
!6735 = !DILocation(line: 372, column: 2, scope: !6734)
!6736 = !DILocation(line: 376, column: 2, scope: !6714)
!6737 = distinct !DISubprogram(name: "extract_width", scope: !3142, file: !3142, line: 388, type: !6556, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6738)
!6738 = !{!6739, !6740, !6741, !6742}
!6739 = !DILocalVariable(name: "conv", arg: 1, scope: !6737, file: !3142, line: 388, type: !6212)
!6740 = !DILocalVariable(name: "sp", arg: 2, scope: !6737, file: !3142, line: 389, type: !108)
!6741 = !DILocalVariable(name: "wp", scope: !6737, file: !3142, line: 398, type: !108)
!6742 = !DILocalVariable(name: "width", scope: !6737, file: !3142, line: 399, type: !156)
!6743 = !DILocation(line: 0, scope: !6737)
!6744 = !DILocation(line: 391, column: 8, scope: !6737)
!6745 = !DILocation(line: 391, column: 22, scope: !6737)
!6746 = !DILocation(line: 393, column: 6, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6737, file: !3142, line: 393, column: 6)
!6748 = !DILocation(line: 393, column: 10, scope: !6747)
!6749 = !DILocation(line: 393, column: 6, scope: !6737)
!6750 = !DILocation(line: 394, column: 20, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6747, file: !3142, line: 393, column: 18)
!6752 = !DILocation(line: 395, column: 10, scope: !6751)
!6753 = !DILocation(line: 395, column: 3, scope: !6751)
!6754 = !DILocation(line: 399, column: 17, scope: !6737)
!6755 = !DILocation(line: 401, column: 6, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6737, file: !3142, line: 401, column: 6)
!6757 = !DILocation(line: 401, column: 9, scope: !6756)
!6758 = !DILocation(line: 401, column: 6, scope: !6737)
!6759 = !DILocation(line: 402, column: 23, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6756, file: !3142, line: 401, column: 16)
!6761 = !DILocation(line: 403, column: 9, scope: !6760)
!6762 = !DILocation(line: 403, column: 21, scope: !6760)
!6763 = !DILocation(line: 405, column: 11, scope: !6760)
!6764 = !DILocation(line: 404, column: 21, scope: !6760)
!6765 = !DILocation(line: 406, column: 2, scope: !6760)
!6766 = !DILocation(line: 409, column: 1, scope: !6737)
!6767 = distinct !DISubprogram(name: "extract_prec", scope: !3142, file: !3142, line: 420, type: !6556, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6768)
!6768 = !{!6769, !6770, !6771}
!6769 = !DILocalVariable(name: "conv", arg: 1, scope: !6767, file: !3142, line: 420, type: !6212)
!6770 = !DILocalVariable(name: "sp", arg: 2, scope: !6767, file: !3142, line: 421, type: !108)
!6771 = !DILocalVariable(name: "prec", scope: !6767, file: !3142, line: 435, type: !156)
!6772 = !DILocation(line: 0, scope: !6767)
!6773 = !DILocation(line: 423, column: 24, scope: !6767)
!6774 = !DILocation(line: 423, column: 28, scope: !6767)
!6775 = !DILocation(line: 423, column: 8, scope: !6767)
!6776 = !DILocation(line: 423, column: 21, scope: !6767)
!6777 = !DILocation(line: 425, column: 6, scope: !6767)
!6778 = !DILocation(line: 428, column: 2, scope: !6767)
!6779 = !DILocation(line: 430, column: 6, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6767, file: !3142, line: 430, column: 6)
!6781 = !DILocation(line: 430, column: 10, scope: !6780)
!6782 = !DILocation(line: 430, column: 6, scope: !6767)
!6783 = !DILocation(line: 431, column: 19, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6780, file: !3142, line: 430, column: 18)
!6785 = !DILocation(line: 432, column: 10, scope: !6784)
!6786 = !DILocation(line: 432, column: 3, scope: !6784)
!6787 = !DILocation(line: 435, column: 16, scope: !6767)
!6788 = !DILocation(line: 437, column: 8, scope: !6767)
!6789 = !DILocation(line: 437, column: 19, scope: !6767)
!6790 = !DILocation(line: 439, column: 10, scope: !6767)
!6791 = !DILocation(line: 438, column: 20, scope: !6767)
!6792 = !DILocation(line: 441, column: 9, scope: !6767)
!6793 = !DILocation(line: 442, column: 1, scope: !6767)
!6794 = distinct !DISubprogram(name: "extract_length", scope: !3142, file: !3142, line: 453, type: !6556, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6795)
!6795 = !{!6796, !6797}
!6796 = !DILocalVariable(name: "conv", arg: 1, scope: !6794, file: !3142, line: 453, type: !6212)
!6797 = !DILocalVariable(name: "sp", arg: 2, scope: !6794, file: !3142, line: 454, type: !108)
!6798 = !DILocation(line: 0, scope: !6794)
!6799 = !DILocation(line: 456, column: 10, scope: !6794)
!6800 = !DILocation(line: 456, column: 2, scope: !6794)
!6801 = !DILocation(line: 458, column: 8, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !3142, line: 458, column: 7)
!6803 = distinct !DILexicalBlock(scope: !6794, file: !3142, line: 456, column: 15)
!6804 = !DILocation(line: 458, column: 7, scope: !6802)
!6805 = !DILocation(line: 458, column: 13, scope: !6802)
!6806 = !DILocation(line: 0, scope: !6802)
!6807 = !DILocation(line: 458, column: 7, scope: !6803)
!6808 = !DILocation(line: 459, column: 21, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6802, file: !3142, line: 458, column: 21)
!6810 = !DILocation(line: 460, column: 4, scope: !6809)
!6811 = !DILocation(line: 461, column: 3, scope: !6809)
!6812 = !DILocation(line: 462, column: 21, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6802, file: !3142, line: 461, column: 10)
!6814 = !DILocation(line: 466, column: 8, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6803, file: !3142, line: 466, column: 7)
!6816 = !DILocation(line: 466, column: 7, scope: !6815)
!6817 = !DILocation(line: 466, column: 13, scope: !6815)
!6818 = !DILocation(line: 0, scope: !6815)
!6819 = !DILocation(line: 466, column: 7, scope: !6803)
!6820 = !DILocation(line: 467, column: 21, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6815, file: !3142, line: 466, column: 21)
!6822 = !DILocation(line: 468, column: 4, scope: !6821)
!6823 = !DILocation(line: 469, column: 3, scope: !6821)
!6824 = !DILocation(line: 470, column: 21, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6815, file: !3142, line: 469, column: 10)
!6826 = !DILocation(line: 474, column: 9, scope: !6803)
!6827 = !DILocation(line: 474, column: 20, scope: !6803)
!6828 = !DILocation(line: 475, column: 3, scope: !6803)
!6829 = !DILocation(line: 476, column: 3, scope: !6803)
!6830 = !DILocation(line: 478, column: 9, scope: !6803)
!6831 = !DILocation(line: 478, column: 20, scope: !6803)
!6832 = !DILocation(line: 479, column: 3, scope: !6803)
!6833 = !DILocation(line: 480, column: 3, scope: !6803)
!6834 = !DILocation(line: 482, column: 9, scope: !6803)
!6835 = !DILocation(line: 482, column: 20, scope: !6803)
!6836 = !DILocation(line: 483, column: 3, scope: !6803)
!6837 = !DILocation(line: 484, column: 3, scope: !6803)
!6838 = !DILocation(line: 486, column: 9, scope: !6803)
!6839 = !DILocation(line: 486, column: 20, scope: !6803)
!6840 = !DILocation(line: 487, column: 3, scope: !6803)
!6841 = !DILocation(line: 492, column: 21, scope: !6803)
!6842 = !DILocation(line: 493, column: 3, scope: !6803)
!6843 = !DILocation(line: 495, column: 9, scope: !6803)
!6844 = !DILocation(line: 495, column: 20, scope: !6803)
!6845 = !DILocation(line: 496, column: 3, scope: !6803)
!6846 = !DILocation(line: 498, column: 2, scope: !6794)
!6847 = distinct !DISubprogram(name: "extract_specifier", scope: !3142, file: !3142, line: 513, type: !6556, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6848)
!6848 = !{!6849, !6850, !6851, !6852}
!6849 = !DILocalVariable(name: "conv", arg: 1, scope: !6847, file: !3142, line: 513, type: !6212)
!6850 = !DILocalVariable(name: "sp", arg: 2, scope: !6847, file: !3142, line: 514, type: !108)
!6851 = !DILocalVariable(name: "unsupported", scope: !6847, file: !3142, line: 516, type: !122)
!6852 = !DILabel(scope: !6853, name: "int_conv", file: !3142, line: 526)
!6853 = distinct !DILexicalBlock(scope: !6847, file: !3142, line: 520, column: 27)
!6854 = !DILocation(line: 0, scope: !6847)
!6855 = !DILocation(line: 518, column: 20, scope: !6847)
!6856 = !DILocation(line: 518, column: 8, scope: !6847)
!6857 = !DILocation(line: 518, column: 18, scope: !6847)
!6858 = !DILocation(line: 520, column: 2, scope: !6847)
!6859 = !DILocation(line: 525, column: 3, scope: !6853)
!6860 = !DILocation(line: 0, scope: !6853)
!6861 = !DILocation(line: 526, column: 1, scope: !6853)
!6862 = !DILocation(line: 528, column: 24, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6853, file: !3142, line: 528, column: 7)
!6864 = !DILocation(line: 528, column: 7, scope: !6853)
!6865 = !DILocation(line: 535, column: 23, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6853, file: !3142, line: 535, column: 7)
!6867 = !DILocation(line: 535, column: 7, scope: !6853)
!6868 = !DILocation(line: 536, column: 36, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6866, file: !3142, line: 535, column: 31)
!6870 = !DILocation(line: 537, column: 3, scope: !6869)
!6871 = !DILocation(line: 570, column: 9, scope: !6853)
!6872 = !DILocation(line: 570, column: 23, scope: !6853)
!6873 = !DILocation(line: 575, column: 4, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !3142, line: 573, column: 48)
!6875 = distinct !DILexicalBlock(scope: !6853, file: !3142, line: 573, column: 7)
!6876 = !DILocation(line: 603, column: 9, scope: !6853)
!6877 = !DILocation(line: 603, column: 23, scope: !6853)
!6878 = !DILocation(line: 605, column: 24, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6853, file: !3142, line: 605, column: 7)
!6880 = !DILocation(line: 605, column: 7, scope: !6853)
!6881 = !DILocation(line: 612, column: 9, scope: !6853)
!6882 = !DILocation(line: 612, column: 23, scope: !6853)
!6883 = !DILocation(line: 619, column: 24, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6853, file: !3142, line: 619, column: 7)
!6885 = !DILocation(line: 619, column: 7, scope: !6853)
!6886 = !DILocation(line: 625, column: 9, scope: !6853)
!6887 = !DILocation(line: 625, column: 17, scope: !6853)
!6888 = !DILocation(line: 626, column: 3, scope: !6853)
!6889 = !DILocation(line: 629, column: 20, scope: !6847)
!6890 = !DILocation(line: 629, column: 8, scope: !6847)
!6891 = !DILocation(line: 518, column: 23, scope: !6847)
!6892 = !DILocation(line: 631, column: 2, scope: !6847)
!6893 = distinct !DISubprogram(name: "extract_decimal", scope: !3142, file: !3142, line: 318, type: !6894, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6896)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{!156, !743}
!6896 = !{!6897, !6898, !6899}
!6897 = !DILocalVariable(name: "str", arg: 1, scope: !6893, file: !3142, line: 318, type: !743)
!6898 = !DILocalVariable(name: "sp", scope: !6893, file: !3142, line: 320, type: !108)
!6899 = !DILocalVariable(name: "val", scope: !6893, file: !3142, line: 321, type: !156)
!6900 = !DILocation(line: 0, scope: !6893)
!6901 = !DILocation(line: 320, column: 19, scope: !6893)
!6902 = !DILocation(line: 323, column: 37, scope: !6893)
!6903 = !DILocation(line: 323, column: 17, scope: !6893)
!6904 = !DILocation(line: 323, column: 9, scope: !6893)
!6905 = !DILocation(line: 323, column: 2, scope: !6893)
!6906 = !DILocation(line: 324, column: 13, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6893, file: !3142, line: 323, column: 43)
!6908 = !DILocation(line: 324, column: 24, scope: !6907)
!6909 = !DILocation(line: 324, column: 19, scope: !6907)
!6910 = !DILocation(line: 324, column: 27, scope: !6907)
!6911 = distinct !{!6911, !6905, !6912}
!6912 = !DILocation(line: 325, column: 2, scope: !6893)
!6913 = !DILocation(line: 326, column: 7, scope: !6893)
!6914 = !DILocation(line: 327, column: 2, scope: !6893)
!6915 = distinct !DISubprogram(name: "isdigit", scope: !6695, file: !6695, line: 43, type: !764, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !6916)
!6916 = !{!6917}
!6917 = !DILocalVariable(name: "a", arg: 1, scope: !6915, file: !6695, line: 43, type: !103)
!6918 = !DILocation(line: 0, scope: !6915)
!6919 = !DILocation(line: 45, column: 29, scope: !6915)
!6920 = !DILocation(line: 45, column: 45, scope: !6915)
!6921 = !DILocation(line: 45, column: 2, scope: !6915)
!6922 = distinct !DISubprogram(name: "assert_post_action", scope: !6923, file: !6923, line: 26, type: !6924, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !6926)
!6923 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6924 = !DISubroutineType(types: !6925)
!6925 = !{null, !108, !32}
!6926 = !{!6927, !6928}
!6927 = !DILocalVariable(name: "file", arg: 1, scope: !6922, file: !6923, line: 26, type: !108)
!6928 = !DILocalVariable(name: "line", arg: 2, scope: !6922, file: !6923, line: 26, type: !32)
!6929 = !DILocation(line: 0, scope: !6922)
!6930 = !DILocation(line: 43, column: 2, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6922, file: !6923, line: 43, column: 2)
!6932 = !{i64 2155071474, i64 2155071490, i64 2155071516, i64 2155071544, i64 2155071564}
!6933 = !DILocation(line: 44, column: 1, scope: !6922)
!6934 = distinct !DISubprogram(name: "assert_print", scope: !6923, file: !6923, line: 46, type: !5117, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !6935)
!6935 = !{!6936, !6937}
!6936 = !DILocalVariable(name: "fmt", arg: 1, scope: !6934, file: !6923, line: 46, type: !108)
!6937 = !DILocalVariable(name: "ap", scope: !6934, file: !6923, line: 48, type: !6938)
!6938 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4125, line: 99, baseType: !6939)
!6939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4125, line: 40, baseType: !6940)
!6940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6923, baseType: !6941)
!6941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6942)
!6942 = !{!6943}
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6941, file: !6923, line: 48, baseType: !102, size: 32)
!6944 = !DILocation(line: 0, scope: !6934)
!6945 = !DILocation(line: 48, column: 2, scope: !6934)
!6946 = !DILocation(line: 48, column: 10, scope: !6934)
!6947 = !DILocation(line: 50, column: 2, scope: !6934)
!6948 = !DILocation(line: 52, column: 2, scope: !6934)
!6949 = !DILocation(line: 54, column: 2, scope: !6934)
!6950 = !DILocation(line: 55, column: 1, scope: !6934)
!6951 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6952, file: !6952, line: 9, type: !323, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !2571)
!6952 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!6953 = !DILocation(line: 11, column: 1, scope: !6951)
!6954 = !{i64 2147565423, i64 2147565466, i64 2147565506}
!6955 = !DILocation(line: 12, column: 1, scope: !6951)
!6956 = !{i64 2147569650, i64 2147569693, i64 2147569733}
!6957 = !DILocation(line: 13, column: 1, scope: !6951)
!6958 = !{i64 2147569859, i64 2147569902, i64 2147569942}
!6959 = !DILocation(line: 14, column: 1, scope: !6951)
!6960 = !{i64 2147570028, i64 2147570071, i64 2147570111}
!6961 = !DILocation(line: 15, column: 1, scope: !6951)
!6962 = !{i64 2147570191, i64 2147570234, i64 2147570274}
!6963 = !DILocation(line: 16, column: 1, scope: !6951)
!6964 = !{i64 2147570375, i64 2147570418, i64 2147570458}
!6965 = !DILocation(line: 17, column: 1, scope: !6951)
!6966 = !{i64 2147570554, i64 2147570597, i64 2147570637}
!6967 = !DILocation(line: 18, column: 1, scope: !6951)
!6968 = !{i64 2147570796, i64 2147570839, i64 2147570879}
!6969 = !DILocation(line: 19, column: 1, scope: !6951)
!6970 = !{i64 2147571031, i64 2147571074, i64 2147571114}
!6971 = !DILocation(line: 20, column: 1, scope: !6951)
!6972 = !{i64 2147571217, i64 2147571260, i64 2147571300}
!6973 = !DILocation(line: 21, column: 1, scope: !6951)
!6974 = !{i64 2147571433, i64 2147571476, i64 2147571516}
!6975 = !DILocation(line: 22, column: 1, scope: !6951)
!6976 = !{i64 2147571636, i64 2147571679, i64 2147571719}
!6977 = !DILocation(line: 23, column: 1, scope: !6951)
!6978 = !{i64 2147571839, i64 2147571882, i64 2147571922}
!6979 = !DILocation(line: 24, column: 1, scope: !6951)
!6980 = !{i64 2147572014, i64 2147572057, i64 2147572097}
!6981 = !DILocation(line: 25, column: 1, scope: !6951)
!6982 = !{i64 2147572225, i64 2147572268, i64 2147572308}
!6983 = !DILocation(line: 26, column: 1, scope: !6951)
!6984 = !{i64 2147572429, i64 2147572472, i64 2147572512}
!6985 = !DILocation(line: 27, column: 1, scope: !6951)
!6986 = !{i64 2147572622, i64 2147572665, i64 2147572705}
!6987 = !DILocation(line: 28, column: 1, scope: !6951)
!6988 = !{i64 2147572824, i64 2147572867, i64 2147572907}
!6989 = !DILocation(line: 29, column: 1, scope: !6951)
!6990 = !{i64 2147573023, i64 2147573066, i64 2147573106}
!6991 = !DILocation(line: 30, column: 1, scope: !6951)
!6992 = !{i64 2147573250, i64 2147573293, i64 2147573333}
!6993 = !DILocation(line: 31, column: 1, scope: !6951)
!6994 = !{i64 2147573452, i64 2147573495, i64 2147573535}
!6995 = !DILocation(line: 32, column: 1, scope: !6951)
!6996 = !{i64 2147573667, i64 2147573710, i64 2147573750}
!6997 = !DILocation(line: 33, column: 1, scope: !6951)
!6998 = !{i64 2147573839, i64 2147573882, i64 2147573922}
!6999 = !DILocation(line: 34, column: 1, scope: !6951)
!7000 = !{i64 2147574041, i64 2147574084, i64 2147574124}
!7001 = !DILocation(line: 35, column: 1, scope: !6951)
!7002 = !{i64 2147574267, i64 2147574310, i64 2147574350}
!7003 = !DILocation(line: 36, column: 1, scope: !6951)
!7004 = !{i64 2147574466, i64 2147574509, i64 2147574549}
!7005 = !DILocation(line: 37, column: 1, scope: !6951)
!7006 = !{i64 2147574641, i64 2147574684, i64 2147574724}
!7007 = !DILocation(line: 38, column: 1, scope: !6951)
!7008 = !{i64 2147574894, i64 2147574937, i64 2147574977}
!7009 = !DILocation(line: 39, column: 1, scope: !6951)
!7010 = !{i64 2147575135, i64 2147575178, i64 2147575218}
!7011 = !DILocation(line: 40, column: 1, scope: !6951)
!7012 = !{i64 2147575370, i64 2147575413, i64 2147575453}
!7013 = !DILocation(line: 41, column: 1, scope: !6951)
!7014 = !{i64 2147575602, i64 2147575645, i64 2147575685}
!7015 = !DILocation(line: 42, column: 1, scope: !6951)
!7016 = !{i64 2147575828, i64 2147575871, i64 2147575911}
!7017 = !DILocation(line: 43, column: 1, scope: !6951)
!7018 = !{i64 2147576054, i64 2147576097, i64 2147576137}
!7019 = !DILocation(line: 44, column: 1, scope: !6951)
!7020 = !{i64 2147576280, i64 2147576323, i64 2147576363}
!7021 = !DILocation(line: 45, column: 1, scope: !6951)
!7022 = !{i64 2147576515, i64 2147576558, i64 2147576598}
!7023 = !DILocation(line: 46, column: 1, scope: !6951)
!7024 = !{i64 2147576759, i64 2147576802, i64 2147576842}
!7025 = !DILocation(line: 47, column: 1, scope: !6951)
!7026 = !{i64 2147577006, i64 2147577049, i64 2147577089}
!7027 = !DILocation(line: 48, column: 1, scope: !6951)
!7028 = !{i64 2147577238, i64 2147577281, i64 2147577321}
!7029 = !DILocation(line: 49, column: 1, scope: !6951)
!7030 = !{i64 2147577482, i64 2147577525, i64 2147577565}
!7031 = !DILocation(line: 50, column: 1, scope: !6951)
!7032 = !{i64 2147577720, i64 2147577763, i64 2147577803}
!7033 = !DILocation(line: 51, column: 1, scope: !6951)
!7034 = !{i64 2147577994, i64 2147578037, i64 2147578077}
!7035 = !DILocation(line: 52, column: 1, scope: !6951)
!7036 = !{i64 2147578232, i64 2147578275, i64 2147578315}
!7037 = !DILocation(line: 53, column: 1, scope: !6951)
!7038 = !{i64 2147582546, i64 2147582589, i64 2147582629}
!7039 = !DILocation(line: 54, column: 1, scope: !6951)
!7040 = !{i64 2147582790, i64 2147582833, i64 2147582873}
!7041 = !DILocation(line: 55, column: 1, scope: !6951)
!7042 = !{i64 2147583025, i64 2147583068, i64 2147583108}
!7043 = !DILocation(line: 56, column: 1, scope: !6951)
!7044 = !{i64 2147583275, i64 2147583318, i64 2147583358}
!7045 = !DILocation(line: 57, column: 1, scope: !6951)
!7046 = !{i64 2147583522, i64 2147583565, i64 2147583605}
!7047 = !DILocation(line: 58, column: 1, scope: !6951)
!7048 = !{i64 2147583757, i64 2147583800, i64 2147583840}
!7049 = !DILocation(line: 59, column: 1, scope: !6951)
!7050 = !{i64 2147583992, i64 2147584035, i64 2147584075}
!7051 = !DILocation(line: 60, column: 1, scope: !6951)
!7052 = !{i64 2147584227, i64 2147584270, i64 2147584310}
!7053 = !DILocation(line: 61, column: 1, scope: !6951)
!7054 = !{i64 2147584462, i64 2147584505, i64 2147584545}
!7055 = !DILocation(line: 62, column: 1, scope: !6951)
!7056 = !{i64 2147584706, i64 2147584749, i64 2147584789}
!7057 = !DILocation(line: 63, column: 1, scope: !6951)
!7058 = !{i64 2147584944, i64 2147584987, i64 2147585027}
!7059 = !DILocation(line: 64, column: 1, scope: !6951)
!7060 = !{i64 2147585185, i64 2147585228, i64 2147585268}
!7061 = !DILocation(line: 65, column: 1, scope: !6951)
!7062 = !{i64 2147585465, i64 2147585508, i64 2147585548}
!7063 = !DILocation(line: 66, column: 1, scope: !6951)
!7064 = !{i64 2147585724, i64 2147585767, i64 2147585807}
!7065 = !DILocation(line: 67, column: 1, scope: !6951)
!7066 = !{i64 2147585962, i64 2147586005, i64 2147586045}
!7067 = !DILocation(line: 68, column: 1, scope: !6951)
!7068 = !{i64 2147586191, i64 2147586234, i64 2147586274}
!7069 = !DILocation(line: 69, column: 1, scope: !6951)
!7070 = !{i64 2147586399, i64 2147586442, i64 2147586482}
!7071 = !DILocation(line: 70, column: 1, scope: !6951)
!7072 = !{i64 2147586610, i64 2147586653, i64 2147586693}
!7073 = !DILocation(line: 71, column: 1, scope: !6951)
!7074 = !{i64 2147586845, i64 2147586888, i64 2147586928}
!7075 = !DILocation(line: 72, column: 1, scope: !6951)
!7076 = !{i64 2147587074, i64 2147587117, i64 2147587157}
!7077 = !DILocation(line: 73, column: 1, scope: !6951)
!7078 = !{i64 2147587291, i64 2147587334, i64 2147587374}
!7079 = !DILocation(line: 74, column: 1, scope: !6951)
!7080 = !{i64 2147587520, i64 2147587563, i64 2147587603}
!7081 = !DILocation(line: 75, column: 1, scope: !6951)
!7082 = !{i64 2147587758, i64 2147587801, i64 2147587841}
!7083 = !DILocation(line: 76, column: 1, scope: !6951)
!7084 = !{i64 2147587990, i64 2147588033, i64 2147588073}
!7085 = !DILocation(line: 77, column: 1, scope: !6951)
!7086 = !{i64 2147588216, i64 2147588259, i64 2147588299}
!7087 = !DILocation(line: 78, column: 1, scope: !6951)
!7088 = !{i64 2147588433, i64 2147588476, i64 2147588516}
!7089 = !DILocation(line: 79, column: 1, scope: !6951)
!7090 = !{i64 2147588665, i64 2147588708, i64 2147588748}
!7091 = !DILocation(line: 80, column: 1, scope: !6951)
!7092 = !{i64 2147588891, i64 2147588934, i64 2147588974}
!7093 = !DILocation(line: 81, column: 1, scope: !6951)
!7094 = !{i64 2147589105, i64 2147589148, i64 2147589188}
!7095 = !DILocation(line: 82, column: 1, scope: !6951)
!7096 = !{i64 2147589325, i64 2147589368, i64 2147589408}
!7097 = !DILocation(line: 83, column: 1, scope: !6951)
!7098 = !{i64 2147589557, i64 2147589600, i64 2147589640}
!7099 = !DILocation(line: 84, column: 1, scope: !6951)
!7100 = !{i64 2147589765, i64 2147589808, i64 2147589848}
!7101 = !DILocation(line: 85, column: 1, scope: !6951)
!7102 = !{i64 2147589970, i64 2147590013, i64 2147590053}
!7103 = !DILocation(line: 86, column: 1, scope: !6951)
!7104 = !{i64 2147590187, i64 2147590230, i64 2147590270}
!7105 = !DILocation(line: 87, column: 1, scope: !6951)
!7106 = !{i64 2147590401, i64 2147590444, i64 2147590484}
!7107 = !DILocation(line: 88, column: 1, scope: !6951)
!7108 = !{i64 2147594688, i64 2147594731, i64 2147594771}
!7109 = !DILocation(line: 89, column: 1, scope: !6951)
!7110 = !{i64 2147594908, i64 2147594951, i64 2147594991}
!7111 = !DILocation(line: 90, column: 1, scope: !6951)
!7112 = !{i64 2147595113, i64 2147595156, i64 2147595196}
!7113 = !DILocation(line: 91, column: 1, scope: !6951)
!7114 = !{i64 2147595345, i64 2147595388, i64 2147595428}
!7115 = !DILocation(line: 92, column: 1, scope: !6951)
!7116 = !{i64 2147595580, i64 2147595623, i64 2147595663}
!7117 = !DILocation(line: 93, column: 1, scope: !6951)
!7118 = !{i64 2147595830, i64 2147595873, i64 2147595913}
!7119 = !DILocation(line: 94, column: 1, scope: !6951)
!7120 = !{i64 2147596080, i64 2147596123, i64 2147596163}
!7121 = !DILocation(line: 95, column: 1, scope: !6951)
!7122 = !{i64 2147596318, i64 2147596361, i64 2147596401}
!7123 = !DILocation(line: 96, column: 1, scope: !6951)
!7124 = !{i64 2147596529, i64 2147596572, i64 2147596612}
!7125 = !DILocation(line: 97, column: 1, scope: !6951)
!7126 = !{i64 2147596746, i64 2147596789, i64 2147596829}
!7127 = !DILocation(line: 98, column: 1, scope: !6951)
!7128 = !{i64 2147596942, i64 2147596985, i64 2147597025}
!7129 = !DILocation(line: 99, column: 1, scope: !6951)
!7130 = !{i64 2147597144, i64 2147597187, i64 2147597227}
!7131 = !DILocation(line: 100, column: 1, scope: !6951)
!7132 = !{i64 2147597337, i64 2147597380, i64 2147597420}
!7133 = !DILocation(line: 101, column: 1, scope: !6951)
!7134 = !{i64 2147597545, i64 2147597588, i64 2147597628}
!7135 = !DILocation(line: 102, column: 1, scope: !6951)
!7136 = !{i64 2147597741, i64 2147597784, i64 2147597824}
!7137 = !DILocation(line: 103, column: 1, scope: !6951)
!7138 = !{i64 2147597973, i64 2147598016, i64 2147598056}
!7139 = !DILocation(line: 104, column: 1, scope: !6951)
!7140 = !{i64 2147598184, i64 2147598227, i64 2147598267}
!7141 = !DILocation(line: 105, column: 1, scope: !6951)
!7142 = !{i64 2147598383, i64 2147598426, i64 2147598466}
!7143 = !DILocation(line: 106, column: 1, scope: !6951)
!7144 = !{i64 2147598558, i64 2147598601, i64 2147598641}
!7145 = !DILocation(line: 107, column: 1, scope: !6951)
!7146 = !{i64 2147598742, i64 2147598785, i64 2147598825}
!7147 = !DILocation(line: 108, column: 1, scope: !6951)
!7148 = !{i64 2147598944, i64 2147598987, i64 2147599027}
!7149 = !DILocation(line: 109, column: 1, scope: !6951)
!7150 = !{i64 2147599143, i64 2147599186, i64 2147599226}
!7151 = !DILocation(line: 110, column: 1, scope: !6951)
!7152 = !{i64 2147599348, i64 2147599391, i64 2147599431}
!7153 = !DILocation(line: 111, column: 1, scope: !6951)
!7154 = !{i64 2147599541, i64 2147599584, i64 2147599624}
!7155 = !DILocation(line: 112, column: 1, scope: !6951)
!7156 = !{i64 2147599707, i64 2147599750, i64 2147599790}
!7157 = !DILocation(line: 113, column: 1, scope: !6951)
!7158 = !{i64 2147599891, i64 2147599934, i64 2147599974}
!7159 = !DILocation(line: 114, column: 1, scope: !6951)
!7160 = !{i64 2147600081, i64 2147600124, i64 2147600164}
!7161 = !DILocation(line: 115, column: 1, scope: !6951)
!7162 = !{i64 2147600265, i64 2147600308, i64 2147600348}
!7163 = !DILocation(line: 116, column: 1, scope: !6951)
!7164 = !{i64 2147600479, i64 2147600522, i64 2147600562}
!7165 = !DILocation(line: 117, column: 1, scope: !6951)
!7166 = !{i64 2147600690, i64 2147600733, i64 2147600773}
!7167 = !DILocation(line: 118, column: 1, scope: !6951)
!7168 = !{i64 2147600913, i64 2147600956, i64 2147600996}
!7169 = !DILocation(line: 119, column: 1, scope: !6951)
!7170 = !{i64 2147601097, i64 2147601140, i64 2147601180}
!7171 = !DILocation(line: 120, column: 1, scope: !6951)
!7172 = !{i64 2147601311, i64 2147601354, i64 2147601394}
!7173 = !DILocation(line: 121, column: 1, scope: !6951)
!7174 = !{i64 2147601477, i64 2147601520, i64 2147601560}
!7175 = !DILocation(line: 122, column: 1, scope: !6951)
!7176 = !{i64 2147601658, i64 2147601701, i64 2147601741}
!7177 = !DILocation(line: 123, column: 1, scope: !6951)
!7178 = !{i64 2147601851, i64 2147601894, i64 2147601934}
!7179 = !DILocation(line: 124, column: 1, scope: !6951)
!7180 = !{i64 2147602077, i64 2147602120, i64 2147602160}
!7181 = !DILocation(line: 125, column: 1, scope: !6951)
!7182 = !{i64 2147602291, i64 2147602334, i64 2147602374}
!7183 = !DILocation(line: 126, column: 1, scope: !6951)
!7184 = !{i64 2147602517, i64 2147602560, i64 2147602600}
!7185 = !DILocation(line: 127, column: 1, scope: !6951)
!7186 = !{i64 2147602734, i64 2147602777, i64 2147602817}
!7187 = !DILocation(line: 128, column: 1, scope: !6951)
!7188 = !{i64 2147603011, i64 2147603054, i64 2147603094}
!7189 = !DILocation(line: 129, column: 1, scope: !6951)
!7190 = !{i64 2147603237, i64 2147603280, i64 2147603320}
!7191 = !DILocation(line: 130, column: 1, scope: !6951)
!7192 = !{i64 2147603445, i64 2147603488, i64 2147603528}
!7193 = !DILocation(line: 131, column: 1, scope: !6951)
!7194 = !{i64 2147603641, i64 2147603684, i64 2147603724}
!7195 = !DILocation(line: 132, column: 1, scope: !6951)
!7196 = !{i64 2147607967, i64 2147608010, i64 2147608050}
!7197 = !DILocation(line: 133, column: 1, scope: !6951)
!7198 = !{i64 2147608181, i64 2147608224, i64 2147608264}
!7199 = !DILocation(line: 134, column: 1, scope: !6951)
!7200 = !{i64 2147608356, i64 2147608399, i64 2147608439}
!7201 = !DILocation(line: 135, column: 1, scope: !6951)
!7202 = !{i64 2147608610, i64 2147608653, i64 2147608693}
!7203 = !DILocation(line: 136, column: 1, scope: !6951)
!7204 = !{i64 2147608809, i64 2147608852, i64 2147608892}
!7205 = !DILocation(line: 137, column: 1, scope: !6951)
!7206 = !{i64 2147609051, i64 2147609094, i64 2147609134}
!7207 = !DILocation(line: 138, column: 1, scope: !6951)
!7208 = !{i64 2147609214, i64 2147609257, i64 2147609297}
!7209 = !DILocation(line: 139, column: 1, scope: !6951)
!7210 = !{i64 2147609401, i64 2147609444, i64 2147609484}
!7211 = !DILocation(line: 140, column: 1, scope: !6951)
!7212 = !{i64 2147609609, i64 2147609652, i64 2147609692}
!7213 = !DILocation(line: 141, column: 1, scope: !6951)
!7214 = !{i64 2147609805, i64 2147609848, i64 2147609888}
!7215 = !DILocation(line: 142, column: 1, scope: !6951)
!7216 = !{i64 2147609998, i64 2147610041, i64 2147610081}
!7217 = !DILocation(line: 143, column: 1, scope: !6951)
!7218 = !{i64 2147610181, i64 2147610224, i64 2147610264}
!7219 = !DILocation(line: 144, column: 1, scope: !6951)
!7220 = !{i64 2147610395, i64 2147610438, i64 2147610478}
!7221 = !DILocation(line: 145, column: 1, scope: !6951)
!7222 = !{i64 2147610606, i64 2147610649, i64 2147610689}
!7223 = !DILocation(line: 146, column: 1, scope: !6951)
!7224 = !{i64 2147610826, i64 2147610869, i64 2147610909}
!7225 = !DILocation(line: 147, column: 1, scope: !6951)
!7226 = !{i64 2147611033, i64 2147611076, i64 2147611116}
!7227 = !DILocation(line: 148, column: 1, scope: !6951)
!7228 = !{i64 2147611306, i64 2147611349, i64 2147611389}
!7229 = !DILocation(line: 149, column: 1, scope: !6951)
!7230 = !{i64 2147611554, i64 2147611597, i64 2147611637}
!7231 = !DILocation(line: 150, column: 1, scope: !6951)
!7232 = !{i64 2147611753, i64 2147611796, i64 2147611836}
!7233 = !DILocation(line: 151, column: 1, scope: !6951)
!7234 = !{i64 2147611988, i64 2147612031, i64 2147612071}
!7235 = !DILocation(line: 152, column: 1, scope: !6951)
!7236 = !{i64 2147612238, i64 2147612281, i64 2147612321}
!7237 = !DILocation(line: 153, column: 1, scope: !6951)
!7238 = !{i64 2147612440, i64 2147612483, i64 2147612523}
!7239 = !DILocation(line: 154, column: 1, scope: !6951)
!7240 = !{i64 2147612663, i64 2147612706, i64 2147612746}
!7241 = !DILocation(line: 155, column: 1, scope: !6951)
!7242 = !{i64 2147612877, i64 2147612920, i64 2147612960}
!7243 = !DILocation(line: 156, column: 1, scope: !6951)
!7244 = !{i64 2147613121, i64 2147613164, i64 2147613204}
!7245 = !DILocation(line: 157, column: 1, scope: !6951)
!7246 = !{i64 2147613350, i64 2147613393, i64 2147613433}
!7247 = !DILocation(line: 158, column: 1, scope: !6951)
!7248 = !{i64 2147613579, i64 2147613622, i64 2147613662}
!7249 = !DILocation(line: 159, column: 1, scope: !6951)
!7250 = !{i64 2147613787, i64 2147613830, i64 2147613870}
!7251 = !DILocation(line: 160, column: 1, scope: !6951)
!7252 = !{i64 2147614025, i64 2147614068, i64 2147614108}
!7253 = !DILocation(line: 161, column: 1, scope: !6951)
!7254 = !{i64 2147614251, i64 2147614294, i64 2147614334}
!7255 = !DILocation(line: 162, column: 1, scope: !6951)
!7256 = !{i64 2147614510, i64 2147614553, i64 2147614593}
!7257 = !DILocation(line: 163, column: 1, scope: !6951)
!7258 = !{i64 2147614730, i64 2147614773, i64 2147614813}
!7259 = !DILocation(line: 164, column: 1, scope: !6951)
!7260 = !{i64 2147614962, i64 2147615005, i64 2147615045}
!7261 = !DILocation(line: 165, column: 1, scope: !6951)
!7262 = !{i64 2147615203, i64 2147615246, i64 2147615286}
!7263 = !DILocation(line: 166, column: 1, scope: !6951)
!7264 = !{i64 2147615444, i64 2147615487, i64 2147615527}
!7265 = !DILocation(line: 167, column: 1, scope: !6951)
!7266 = !{i64 2147615667, i64 2147615710, i64 2147615750}
!7267 = !DILocation(line: 168, column: 1, scope: !6951)
!7268 = !{i64 2147615884, i64 2147615927, i64 2147615967}
!7269 = !DILocation(line: 169, column: 1, scope: !6951)
!7270 = !{i64 2147616125, i64 2147616168, i64 2147616208}
!7271 = !DILocation(line: 170, column: 1, scope: !6951)
!7272 = !{i64 2147620373, i64 2147620416, i64 2147620456}
!7273 = !DILocation(line: 171, column: 1, scope: !6951)
!7274 = !{i64 2147620560, i64 2147620603, i64 2147620643}
!7275 = !DILocation(line: 172, column: 1, scope: !6951)
!7276 = !{i64 2147620723, i64 2147620766, i64 2147620806}
!7277 = !DILocation(line: 173, column: 1, scope: !6951)
!7278 = !{i64 2147620928, i64 2147620971, i64 2147621011}
!7279 = !DILocation(line: 174, column: 1, scope: !6951)
!7280 = !{i64 2147621121, i64 2147621164, i64 2147621204}
!7281 = !DILocation(line: 175, column: 1, scope: !6951)
!7282 = !{i64 2147621380, i64 2147621423, i64 2147621463}
!7283 = !DILocation(line: 176, column: 1, scope: !6951)
!7284 = !{i64 2147621603, i64 2147621646, i64 2147621686}
!7285 = !DILocation(line: 177, column: 1, scope: !6951)
!7286 = !{i64 2147621832, i64 2147621875, i64 2147621915}
!7287 = !DILocation(line: 178, column: 1, scope: !6951)
!7288 = !{i64 2147622046, i64 2147622089, i64 2147622129}
!7289 = !DILocation(line: 179, column: 1, scope: !6951)
!7290 = !{i64 2147622248, i64 2147622291, i64 2147622331}
!7291 = !DILocation(line: 180, column: 1, scope: !6951)
!7292 = !{i64 2147622444, i64 2147622487, i64 2147622527}
!7293 = !DILocation(line: 181, column: 1, scope: !6951)
!7294 = !{i64 2147622656, i64 2147622699, i64 2147622739}
!7295 = !DILocation(line: 182, column: 1, scope: !6951)
!7296 = !{i64 2147622877, i64 2147622920, i64 2147622960}
!7297 = !DILocation(line: 183, column: 1, scope: !6951)
!7298 = !{i64 2147623091, i64 2147623134, i64 2147623174}
!7299 = !DILocation(line: 184, column: 1, scope: !6951)
!7300 = !{i64 2147623281, i64 2147623324, i64 2147623364}
!7301 = !DILocation(line: 185, column: 1, scope: !6951)
!7302 = !{i64 2147623480, i64 2147623523, i64 2147623563}
!7303 = !DILocation(line: 186, column: 1, scope: !6951)
!7304 = !{i64 2147623685, i64 2147623728, i64 2147623768}
!7305 = !DILocation(line: 187, column: 1, scope: !6951)
!7306 = !{i64 2147623905, i64 2147623948, i64 2147623988}
!7307 = !DILocation(line: 188, column: 1, scope: !6951)
!7308 = !{i64 2147624106, i64 2147624149, i64 2147624189}
!7309 = !DILocation(line: 189, column: 1, scope: !6951)
!7310 = !{i64 2147624305, i64 2147624348, i64 2147624388}
!7311 = !DILocation(line: 190, column: 1, scope: !6951)
!7312 = !{i64 2147624510, i64 2147624553, i64 2147624593}
!7313 = !DILocation(line: 191, column: 1, scope: !6951)
!7314 = !{i64 2147624679, i64 2147624722, i64 2147624762}
!7315 = !DILocation(line: 192, column: 1, scope: !6951)
!7316 = !{i64 2147624863, i64 2147624906, i64 2147624946}
!7317 = !DILocation(line: 193, column: 1, scope: !6951)
!7318 = !{i64 2147625047, i64 2147625090, i64 2147625130}
!7319 = !DILocation(line: 194, column: 1, scope: !6951)
!7320 = !{i64 2147625231, i64 2147625274, i64 2147625314}
!7321 = !DILocation(line: 195, column: 1, scope: !6951)
!7322 = !{i64 2147625469, i64 2147625512, i64 2147625552}
!7323 = !DILocation(line: 196, column: 1, scope: !6951)
!7324 = !{i64 2147625699, i64 2147625742, i64 2147625782}
!7325 = !DILocation(line: 197, column: 1, scope: !6951)
!7326 = !{i64 2147625928, i64 2147625971, i64 2147626011}
!7327 = !DILocation(line: 198, column: 1, scope: !6951)
!7328 = !{i64 2147626115, i64 2147626158, i64 2147626198}
!7329 = !DILocation(line: 199, column: 1, scope: !6951)
!7330 = !{i64 2147626311, i64 2147626354, i64 2147626394}
!7331 = !DILocation(line: 200, column: 1, scope: !6951)
!7332 = !{i64 2147626519, i64 2147626562, i64 2147626602}
!7333 = !DILocation(line: 201, column: 1, scope: !6951)
!7334 = !{i64 2147626731, i64 2147626774, i64 2147626814}
!7335 = !DILocation(line: 202, column: 1, scope: !6951)
!7336 = !{i64 2147626930, i64 2147626973, i64 2147627013}
!7337 = !DILocation(line: 203, column: 1, scope: !6951)
!7338 = !{i64 2147627168, i64 2147627211, i64 2147627251}
!7339 = !DILocation(line: 204, column: 1, scope: !6951)
!7340 = !{i64 2147627364, i64 2147627407, i64 2147627447}
!7341 = !DILocation(line: 205, column: 1, scope: !6951)
!7342 = !{i64 2147627566, i64 2147627609, i64 2147627649}
!7343 = !DILocation(line: 206, column: 1, scope: !6951)
!7344 = !{i64 2147627759, i64 2147627802, i64 2147627842}
!7345 = !DILocation(line: 207, column: 1, scope: !6951)
!7346 = !{i64 2147627993, i64 2147628036, i64 2147628076}
!7347 = !DILocation(line: 208, column: 1, scope: !6951)
!7348 = !{i64 2147628156, i64 2147628199, i64 2147628239}
!7349 = !DILocation(line: 209, column: 1, scope: !6951)
!7350 = !{i64 2147628395, i64 2147628438, i64 2147628478}
!7351 = !DILocation(line: 210, column: 1, scope: !6951)
!7352 = !{i64 2147628634, i64 2147628677, i64 2147628717}
!7353 = !DILocation(line: 211, column: 1, scope: !6951)
!7354 = !{i64 2147628870, i64 2147628913, i64 2147628953}
!7355 = !DILocation(line: 212, column: 1, scope: !6951)
!7356 = !{i64 2147629100, i64 2147629143, i64 2147629183}
!7357 = !DILocation(line: 213, column: 1, scope: !6951)
!7358 = !{i64 2147629287, i64 2147629330, i64 2147629370}
!7359 = !DILocation(line: 214, column: 1, scope: !6951)
!7360 = !{i64 2147629486, i64 2147629529, i64 2147629569}
!7361 = !DILocation(line: 215, column: 1, scope: !6951)
!7362 = !{i64 2147633818, i64 2147633861, i64 2147633901}
!7363 = !DILocation(line: 216, column: 1, scope: !6951)
!7364 = !{i64 2147633993, i64 2147634036, i64 2147634076}
!7365 = !DILocation(line: 217, column: 1, scope: !6951)
!7366 = !{i64 2147634227, i64 2147634270, i64 2147634310}
!7367 = !DILocation(line: 218, column: 1, scope: !6951)
!7368 = !{i64 2147634435, i64 2147634478, i64 2147634518}
!7369 = !DILocation(line: 219, column: 1, scope: !6951)
!7370 = !{i64 2147634653, i64 2147634696, i64 2147634736}
!7371 = !DILocation(line: 220, column: 1, scope: !6951)
!7372 = !{i64 2147634843, i64 2147634886, i64 2147634926}
!7373 = !DILocation(line: 221, column: 1, scope: !6951)
!7374 = !{i64 2147635075, i64 2147635118, i64 2147635158}
!7375 = !DILocation(line: 222, column: 1, scope: !6951)
!7376 = !{i64 2147635295, i64 2147635338, i64 2147635378}
!7377 = !DILocation(line: 223, column: 1, scope: !6951)
!7378 = !{i64 2147635491, i64 2147635534, i64 2147635574}
!7379 = !DILocation(line: 224, column: 1, scope: !6951)
!7380 = !{i64 2147635697, i64 2147635740, i64 2147635780}
!7381 = !DILocation(line: 225, column: 1, scope: !6951)
!7382 = !{i64 2147635902, i64 2147635945, i64 2147635985}
!7383 = !DILocation(line: 226, column: 1, scope: !6951)
!7384 = !{i64 2147636116, i64 2147636159, i64 2147636199}
!7385 = !DILocation(line: 227, column: 1, scope: !6951)
!7386 = !{i64 2147636342, i64 2147636385, i64 2147636425}
!7387 = !DILocation(line: 228, column: 1, scope: !6951)
!7388 = !{i64 2147636550, i64 2147636593, i64 2147636633}
!7389 = !DILocation(line: 229, column: 1, scope: !6951)
!7390 = !{i64 2147636746, i64 2147636789, i64 2147636829}
!7391 = !DILocation(line: 230, column: 1, scope: !6951)
!7392 = !{i64 2147636978, i64 2147637021, i64 2147637061}
!7393 = !DILocation(line: 231, column: 1, scope: !6951)
!7394 = !{i64 2147637162, i64 2147637205, i64 2147637245}
!7395 = !DILocation(line: 232, column: 1, scope: !6951)
!7396 = !{i64 2147637371, i64 2147637414, i64 2147637454}
!7397 = !DILocation(line: 233, column: 1, scope: !6951)
!7398 = !{i64 2147637579, i64 2147637622, i64 2147637662}
!7399 = !DILocation(line: 234, column: 1, scope: !6951)
!7400 = !{i64 2147637775, i64 2147637818, i64 2147637858}
!7401 = !DILocation(line: 235, column: 1, scope: !6951)
!7402 = !{i64 2147637959, i64 2147638002, i64 2147638042}
!7403 = !DILocation(line: 236, column: 1, scope: !6951)
!7404 = !{i64 2147638185, i64 2147638228, i64 2147638268}
!7405 = !DILocation(line: 237, column: 1, scope: !6951)
!7406 = !{i64 2147638411, i64 2147638454, i64 2147638494}
!7407 = !DILocation(line: 238, column: 1, scope: !6951)
!7408 = !{i64 2147638637, i64 2147638680, i64 2147638720}
!7409 = !DILocation(line: 239, column: 1, scope: !6951)
!7410 = !{i64 2147638863, i64 2147638906, i64 2147638946}
!7411 = !DILocation(line: 240, column: 1, scope: !6951)
!7412 = !{i64 2147639089, i64 2147639132, i64 2147639172}
!7413 = !DILocation(line: 241, column: 1, scope: !6951)
!7414 = !{i64 2147639321, i64 2147639364, i64 2147639404}
!7415 = !DILocation(line: 242, column: 1, scope: !6951)
!7416 = !{i64 2147639559, i64 2147639602, i64 2147639642}
!7417 = !DILocation(line: 243, column: 1, scope: !6951)
!7418 = !{i64 2147639779, i64 2147639822, i64 2147639862}
!7419 = !DILocation(line: 244, column: 1, scope: !6951)
!7420 = !{i64 2147640023, i64 2147640066, i64 2147640106}
!7421 = !DILocation(line: 245, column: 1, scope: !6951)
!7422 = !{i64 2147640264, i64 2147640307, i64 2147640347}
!7423 = !DILocation(line: 246, column: 1, scope: !6951)
!7424 = !{i64 2147640499, i64 2147640542, i64 2147640582}
!7425 = !DILocation(line: 247, column: 1, scope: !6951)
!7426 = !{i64 2147640731, i64 2147640774, i64 2147640814}
!7427 = !DILocation(line: 248, column: 1, scope: !6951)
!7428 = !{i64 2147640933, i64 2147640976, i64 2147641016}
!7429 = !DILocation(line: 249, column: 1, scope: !6951)
!7430 = !{i64 2147641183, i64 2147641226, i64 2147641266}
!7431 = !DILocation(line: 250, column: 1, scope: !6951)
!7432 = !{i64 2147641421, i64 2147641464, i64 2147641504}
!7433 = !DILocation(line: 251, column: 1, scope: !6951)
!7434 = !{i64 2147641629, i64 2147641672, i64 2147641712}
!7435 = !DILocation(line: 252, column: 1, scope: !6951)
!7436 = !{i64 2147641825, i64 2147641868, i64 2147641908}
!7437 = !DILocation(line: 253, column: 1, scope: !6951)
!7438 = !{i64 2147642009, i64 2147642052, i64 2147642092}
!7439 = !DILocation(line: 254, column: 1, scope: !6951)
!7440 = !{i64 2147642226, i64 2147642269, i64 2147642309}
!7441 = !DILocation(line: 255, column: 1, scope: !6951)
!7442 = !{i64 2147646492, i64 2147646535, i64 2147646575}
!7443 = !DILocation(line: 256, column: 1, scope: !6951)
!7444 = !{i64 2147646727, i64 2147646770, i64 2147646810}
!7445 = !DILocation(line: 257, column: 1, scope: !6951)
!7446 = !{i64 2147646950, i64 2147646993, i64 2147647033}
!7447 = !DILocation(line: 258, column: 1, scope: !6951)
!7448 = !{i64 2147647174, i64 2147647217, i64 2147647257}
!7449 = !DILocation(line: 259, column: 1, scope: !6951)
!7450 = !{i64 2147647412, i64 2147647455, i64 2147647495}
!7451 = !DILocation(line: 260, column: 1, scope: !6951)
!7452 = !{i64 2147647650, i64 2147647693, i64 2147647733}
!7453 = !DILocation(line: 261, column: 1, scope: !6951)
!7454 = !{i64 2147647867, i64 2147647910, i64 2147647950}
!7455 = !DILocation(line: 262, column: 1, scope: !6951)
!7456 = !{i64 2147648072, i64 2147648115, i64 2147648155}
!7457 = !DILocation(line: 263, column: 1, scope: !6951)
!7458 = !{i64 2147648265, i64 2147648308, i64 2147648348}
!7459 = !DILocation(line: 264, column: 1, scope: !6951)
!7460 = !{i64 2147648518, i64 2147648561, i64 2147648601}
!7461 = !DILocation(line: 265, column: 1, scope: !6951)
!7462 = !{i64 2147648726, i64 2147648769, i64 2147648809}
!7463 = !DILocation(line: 266, column: 1, scope: !6951)
!7464 = !{i64 2147648922, i64 2147648965, i64 2147649005}
!7465 = !DILocation(line: 267, column: 1, scope: !6951)
!7466 = !{i64 2147649136, i64 2147649179, i64 2147649219}
!7467 = !DILocation(line: 268, column: 1, scope: !6951)
!7468 = !{i64 2147649344, i64 2147649387, i64 2147649427}
!7469 = !DILocation(line: 269, column: 1, scope: !6951)
!7470 = !{i64 2147649534, i64 2147649577, i64 2147649617}
!7471 = !DILocation(line: 270, column: 1, scope: !6951)
!7472 = !{i64 2147649748, i64 2147649791, i64 2147649831}
!7473 = !DILocation(line: 271, column: 1, scope: !6951)
!7474 = !{i64 2147650010, i64 2147650053, i64 2147650093}
!7475 = !DILocation(line: 272, column: 1, scope: !6951)
!7476 = !{i64 2147650221, i64 2147650264, i64 2147650304}
!7477 = !DILocation(line: 273, column: 1, scope: !6951)
!7478 = !{i64 2147650465, i64 2147650508, i64 2147650548}
!7479 = !DILocation(line: 274, column: 1, scope: !6951)
!7480 = !{i64 2147650676, i64 2147650719, i64 2147650759}
!7481 = !DILocation(line: 275, column: 1, scope: !6951)
!7482 = !{i64 2147650905, i64 2147650948, i64 2147650988}
!7483 = !DILocation(line: 276, column: 1, scope: !6951)
!7484 = !{i64 2147651170, i64 2147651213, i64 2147651253}
!7485 = !DILocation(line: 277, column: 1, scope: !6951)
!7486 = !{i64 2147651375, i64 2147651418, i64 2147651458}
!7487 = !DILocation(line: 278, column: 1, scope: !6951)
!7488 = !{i64 2147651571, i64 2147651614, i64 2147651654}
!7489 = !DILocation(line: 279, column: 1, scope: !6951)
!7490 = !{i64 2147651794, i64 2147651837, i64 2147651877}
!7491 = !DILocation(line: 280, column: 1, scope: !6951)
!7492 = !{i64 2147651957, i64 2147652000, i64 2147652040}
!7493 = !DILocation(line: 281, column: 1, scope: !6951)
!7494 = !{i64 2147652162, i64 2147652205, i64 2147652245}
!7495 = !DILocation(line: 282, column: 1, scope: !6951)
!7496 = !{i64 2147652382, i64 2147652425, i64 2147652465}
!7497 = !DILocation(line: 283, column: 1, scope: !6951)
!7498 = !{i64 2147652596, i64 2147652639, i64 2147652679}
!7499 = !DILocation(line: 284, column: 1, scope: !6951)
!7500 = !{i64 2147652840, i64 2147652883, i64 2147652923}
!7501 = !DILocation(line: 285, column: 1, scope: !6951)
!7502 = !{i64 2147653072, i64 2147653115, i64 2147653155}
!7503 = !DILocation(line: 286, column: 1, scope: !6951)
!7504 = !{i64 2147653286, i64 2147653329, i64 2147653369}
!7505 = !DILocation(line: 287, column: 1, scope: !6951)
!7506 = !{i64 2147653497, i64 2147653540, i64 2147653580}
!7507 = !DILocation(line: 288, column: 1, scope: !6951)
!7508 = !{i64 2147653690, i64 2147653733, i64 2147653773}
!7509 = !DILocation(line: 289, column: 1, scope: !6951)
!7510 = !{i64 2147653889, i64 2147653932, i64 2147653972}
!7511 = !DILocation(line: 290, column: 1, scope: !6951)
!7512 = !{i64 2147654061, i64 2147654104, i64 2147654144}
!7513 = !DILocation(line: 291, column: 1, scope: !6951)
!7514 = !{i64 2147654233, i64 2147654276, i64 2147654316}
!7515 = !DILocation(line: 292, column: 1, scope: !6951)
!7516 = !{i64 2147654423, i64 2147654466, i64 2147654506}
!7517 = !DILocation(line: 293, column: 1, scope: !6951)
!7518 = !{i64 2147654616, i64 2147654659, i64 2147654699}
!7519 = !DILocation(line: 294, column: 1, scope: !6951)
!7520 = !{i64 2147654812, i64 2147654855, i64 2147654895}
!7521 = !DILocation(line: 295, column: 1, scope: !6951)
!7522 = !{i64 2147654975, i64 2147655018, i64 2147655058}
!7523 = !DILocation(line: 296, column: 1, scope: !6951)
!7524 = !{i64 2147655177, i64 2147655220, i64 2147655260}
!7525 = !DILocation(line: 297, column: 1, scope: !6951)
!7526 = !{i64 2147659443, i64 2147659486, i64 2147659526}
!7527 = !DILocation(line: 298, column: 1, scope: !6951)
!7528 = !{i64 2147659651, i64 2147659694, i64 2147659734}
!7529 = !DILocation(line: 299, column: 1, scope: !6951)
!7530 = !{i64 2147659844, i64 2147659887, i64 2147659927}
!7531 = !DILocation(line: 300, column: 1, scope: !6951)
!7532 = !{i64 2147660031, i64 2147660074, i64 2147660114}
!7533 = !DILocation(line: 301, column: 1, scope: !6951)
!7534 = !{i64 2147660258, i64 2147660301, i64 2147660341}
!7535 = !DILocation(line: 302, column: 1, scope: !6951)
!7536 = !{i64 2147660424, i64 2147660467, i64 2147660507}
!7537 = !DILocation(line: 303, column: 1, scope: !6951)
!7538 = !{i64 2147660662, i64 2147660705, i64 2147660745}
!7539 = !DILocation(line: 304, column: 1, scope: !6951)
!7540 = !{i64 2147660867, i64 2147660910, i64 2147660950}
!7541 = !DILocation(line: 305, column: 1, scope: !6951)
!7542 = !{i64 2147661117, i64 2147661160, i64 2147661200}
!7543 = !DILocation(line: 306, column: 1, scope: !6951)
!7544 = !{i64 2147661325, i64 2147661368, i64 2147661408}
!7545 = !DILocation(line: 307, column: 1, scope: !6951)
!7546 = !{i64 2147661521, i64 2147661564, i64 2147661604}
!7547 = !DILocation(line: 308, column: 1, scope: !6951)
!7548 = !{i64 2147661738, i64 2147661781, i64 2147661821}
!7549 = !DILocation(line: 309, column: 1, scope: !6951)
!7550 = !{i64 2147662030, i64 2147662073, i64 2147662113}
!7551 = !DILocation(line: 310, column: 1, scope: !6951)
!7552 = !{i64 2147662262, i64 2147662305, i64 2147662345}
!7553 = !DILocation(line: 311, column: 1, scope: !6951)
!7554 = !{i64 2147662479, i64 2147662522, i64 2147662562}
!7555 = !DILocation(line: 312, column: 1, scope: !6951)
!7556 = !{i64 2147662686, i64 2147662729, i64 2147662769}
!7557 = !DILocation(line: 313, column: 1, scope: !6951)
!7558 = !{i64 2147662887, i64 2147662930, i64 2147662970}
!7559 = !DILocation(line: 314, column: 1, scope: !6951)
!7560 = !{i64 2147663119, i64 2147663162, i64 2147663202}
!7561 = !DILocation(line: 315, column: 1, scope: !6951)
!7562 = !{i64 2147663327, i64 2147663370, i64 2147663410}
!7563 = !DILocation(line: 316, column: 1, scope: !6951)
!7564 = !{i64 2147663517, i64 2147663560, i64 2147663600}
!7565 = !DILocation(line: 317, column: 1, scope: !6951)
!7566 = !{i64 2147663743, i64 2147663786, i64 2147663826}
!7567 = !DILocation(line: 318, column: 1, scope: !6951)
!7568 = !{i64 2147663932, i64 2147663975, i64 2147664015}
!7569 = !DILocation(line: 319, column: 1, scope: !6951)
!7570 = !{i64 2147664203, i64 2147664246, i64 2147664286}
!7571 = !DILocation(line: 320, column: 1, scope: !6951)
!7572 = !{i64 2147664423, i64 2147664466, i64 2147664506}
!7573 = !DILocation(line: 321, column: 1, scope: !6951)
!7574 = !{i64 2147664676, i64 2147664719, i64 2147664759}
!7575 = !DILocation(line: 322, column: 1, scope: !6951)
!7576 = !{i64 2147664884, i64 2147664927, i64 2147664967}
!7577 = !DILocation(line: 323, column: 1, scope: !6951)
!7578 = !{i64 2147665116, i64 2147665159, i64 2147665199}
!7579 = !DILocation(line: 324, column: 1, scope: !6951)
!7580 = !{i64 2147665327, i64 2147665370, i64 2147665410}
!7581 = !DILocation(line: 325, column: 1, scope: !6951)
!7582 = !{i64 2147665517, i64 2147665560, i64 2147665600}
!7583 = !DILocation(line: 326, column: 1, scope: !6951)
!7584 = !{i64 2147665731, i64 2147665774, i64 2147665814}
!7585 = !DILocation(line: 327, column: 1, scope: !6951)
!7586 = !{i64 2147665930, i64 2147665973, i64 2147666013}
!7587 = !DILocation(line: 328, column: 1, scope: !6951)
!7588 = !{i64 2147666117, i64 2147666160, i64 2147666200}
!7589 = !DILocation(line: 329, column: 1, scope: !6951)
!7590 = !{i64 2147666325, i64 2147666368, i64 2147666408}
!7591 = !DILocation(line: 330, column: 1, scope: !6951)
!7592 = !{i64 2147666554, i64 2147666597, i64 2147666637}
!7593 = !DILocation(line: 331, column: 1, scope: !6951)
!7594 = !{i64 2147666756, i64 2147666799, i64 2147666839}
!7595 = !DILocation(line: 332, column: 1, scope: !6951)
!7596 = !{i64 2147666955, i64 2147666998, i64 2147667038}
!7597 = !DILocation(line: 333, column: 1, scope: !6951)
!7598 = !{i64 2147667172, i64 2147667215, i64 2147667255}
!7599 = !DILocation(line: 335, column: 1, scope: !6951)
!7600 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !785, file: !785, line: 30, type: !792, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7601)
!7601 = !{!7602, !7603}
!7602 = !DILocalVariable(name: "arg", arg: 1, scope: !7600, file: !785, line: 30, type: !794)
!7603 = !DILocalVariable(name: "key", scope: !7600, file: !785, line: 32, type: !111)
!7604 = !DILocation(line: 0, scope: !7600)
!7605 = !DILocation(line: 37, column: 2, scope: !7600)
!7606 = !DILocation(line: 38, column: 2, scope: !7600)
!7607 = !DILocation(line: 55, column: 2, scope: !7608, inlinedAt: !7615)
!7608 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7612)
!7609 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7610 = !DISubroutineType(types: !7611)
!7611 = !{!32}
!7612 = !{!7613, !7614}
!7613 = !DILocalVariable(name: "key", scope: !7608, file: !7609, line: 44, type: !32)
!7614 = !DILocalVariable(name: "tmp", scope: !7608, file: !7609, line: 53, type: !32)
!7615 = distinct !DILocation(line: 40, column: 8, scope: !7600)
!7616 = !{i64 2189179}
!7617 = !DILocation(line: 0, scope: !7608, inlinedAt: !7615)
!7618 = !DILocalVariable(name: "key", arg: 1, scope: !7619, file: !7609, line: 84, type: !32)
!7619 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7622)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{null, !32}
!7622 = !{!7618}
!7623 = !DILocation(line: 0, scope: !7619, inlinedAt: !7624)
!7624 = distinct !DILocation(line: 47, column: 2, scope: !7600)
!7625 = !DILocation(line: 95, column: 2, scope: !7619, inlinedAt: !7624)
!7626 = !{i64 2189996}
!7627 = !DILocation(line: 51, column: 18, scope: !7600)
!7628 = !DILocation(line: 53, column: 2, scope: !7600)
!7629 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7630, file: !7630, line: 1609, type: !323, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !2571)
!7630 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7631 = !DILocation(line: 1611, column: 3, scope: !7629)
!7632 = !DILocation(line: 1612, column: 1, scope: !7629)
!7633 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7630, file: !7630, line: 1629, type: !323, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !2571)
!7634 = !DILocation(line: 1631, column: 3, scope: !7633)
!7635 = !DILocation(line: 1632, column: 1, scope: !7633)
!7636 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !821, file: !821, line: 26, type: !827, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !818, retainedNodes: !7637)
!7637 = !{!7638}
!7638 = !DILocalVariable(name: "dev", arg: 1, scope: !7636, file: !821, line: 26, type: !829)
!7639 = !DILocation(line: 0, scope: !7636)
!7640 = !DILocation(line: 68, column: 2, scope: !7636)
!7641 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7642, file: !7642, line: 14, type: !5117, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !7643)
!7642 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7643 = !{!7644, !7645}
!7644 = !DILocalVariable(name: "fmt", arg: 1, scope: !7641, file: !7642, line: 14, type: !108)
!7645 = !DILocalVariable(name: "ap", scope: !7641, file: !7642, line: 16, type: !7646)
!7646 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4125, line: 99, baseType: !7647)
!7647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4125, line: 40, baseType: !7648)
!7648 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7642, baseType: !7649)
!7649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7650)
!7650 = !{!7651}
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7649, file: !7642, line: 16, baseType: !102, size: 32)
!7652 = !DILocation(line: 0, scope: !7641)
!7653 = !DILocation(line: 16, column: 2, scope: !7641)
!7654 = !DILocation(line: 16, column: 10, scope: !7641)
!7655 = !DILocation(line: 18, column: 2, scope: !7641)
!7656 = !DILocation(line: 19, column: 2, scope: !7641)
!7657 = !DILocation(line: 20, column: 2, scope: !7641)
!7658 = !DILocation(line: 21, column: 1, scope: !7641)
!7659 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7642, file: !7642, line: 23, type: !7660, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !7662)
!7660 = !DISubroutineType(types: !7661)
!7661 = !{null, !108, !7646}
!7662 = !{!7663, !7664}
!7663 = !DILocalVariable(name: "fmt", arg: 1, scope: !7659, file: !7642, line: 23, type: !108)
!7664 = !DILocalVariable(name: "ap", arg: 2, scope: !7659, file: !7642, line: 23, type: !7646)
!7665 = !DILocation(line: 0, scope: !7659)
!7666 = !DILocation(line: 25, column: 2, scope: !7659)
!7667 = !DILocation(line: 26, column: 1, scope: !7659)
!7668 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7642, file: !7642, line: 52, type: !7669, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !7671)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{null, !103, !13, !156}
!7671 = !{!7672, !7673, !7674, !7675}
!7672 = !DILocalVariable(name: "level", arg: 1, scope: !7668, file: !7642, line: 52, type: !103)
!7673 = !DILocalVariable(name: "data", arg: 2, scope: !7668, file: !7642, line: 52, type: !13)
!7674 = !DILocalVariable(name: "size", arg: 3, scope: !7668, file: !7642, line: 52, type: !156)
!7675 = !DILocalVariable(name: "data_buffer", scope: !7668, file: !7642, line: 54, type: !108)
!7676 = !DILocation(line: 0, scope: !7668)
!7677 = !DILocation(line: 55, column: 14, scope: !7668)
!7678 = !DILocation(line: 55, column: 2, scope: !7668)
!7679 = !DILocation(line: 56, column: 3, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7668, file: !7642, line: 55, column: 20)
!7681 = !DILocation(line: 57, column: 3, scope: !7680)
!7682 = !DILocation(line: 59, column: 7, scope: !7680)
!7683 = distinct !{!7683, !7678, !7684}
!7684 = !DILocation(line: 65, column: 2, scope: !7668)
!7685 = !DILocation(line: 66, column: 1, scope: !7668)
!7686 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7687, file: !7687, line: 175, type: !7688, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !7690)
!7687 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!110, !103}
!7690 = !{!7691}
!7691 = !DILocalVariable(name: "level", arg: 1, scope: !7686, file: !7687, line: 175, type: !103)
!7692 = !DILocation(line: 0, scope: !7686)
!7693 = !DILocation(line: 177, column: 2, scope: !7686)
!7694 = !DILocation(line: 189, column: 1, scope: !7686)
!7695 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7642, file: !7642, line: 28, type: !7696, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !7698)
!7696 = !DISubroutineType(types: !7697)
!7697 = !{null, !108, !156}
!7698 = !{!7699, !7700, !7701, !7703, !7705}
!7699 = !DILocalVariable(name: "data", arg: 1, scope: !7695, file: !7642, line: 28, type: !108)
!7700 = !DILocalVariable(name: "length", arg: 2, scope: !7695, file: !7642, line: 28, type: !156)
!7701 = !DILocalVariable(name: "i", scope: !7702, file: !7642, line: 30, type: !156)
!7702 = distinct !DILexicalBlock(scope: !7695, file: !7642, line: 30, column: 2)
!7703 = !DILocalVariable(name: "i", scope: !7704, file: !7642, line: 40, type: !156)
!7704 = distinct !DILexicalBlock(scope: !7695, file: !7642, line: 40, column: 2)
!7705 = !DILocalVariable(name: "c", scope: !7706, file: !7642, line: 42, type: !167)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7642, line: 41, column: 19)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !7642, line: 41, column: 7)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !7642, line: 40, column: 54)
!7709 = distinct !DILexicalBlock(scope: !7704, file: !7642, line: 40, column: 2)
!7710 = !DILocation(line: 0, scope: !7695)
!7711 = !DILocation(line: 0, scope: !7702)
!7712 = !DILocation(line: 30, column: 2, scope: !7702)
!7713 = !DILocation(line: 38, column: 2, scope: !7695)
!7714 = !DILocation(line: 0, scope: !7704)
!7715 = !DILocation(line: 40, column: 2, scope: !7704)
!7716 = !DILocation(line: 31, column: 9, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !7642, line: 31, column: 7)
!7718 = distinct !DILexicalBlock(scope: !7719, file: !7642, line: 30, column: 54)
!7719 = distinct !DILexicalBlock(scope: !7702, file: !7642, line: 30, column: 2)
!7720 = !DILocation(line: 31, column: 7, scope: !7718)
!7721 = !DILocation(line: 32, column: 35, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !7642, line: 31, column: 19)
!7723 = !DILocation(line: 32, column: 20, scope: !7722)
!7724 = !DILocation(line: 32, column: 4, scope: !7722)
!7725 = !DILocation(line: 33, column: 3, scope: !7722)
!7726 = !DILocation(line: 34, column: 4, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7717, file: !7642, line: 33, column: 10)
!7728 = !DILocation(line: 30, column: 50, scope: !7719)
!7729 = !DILocation(line: 30, column: 24, scope: !7719)
!7730 = distinct !{!7730, !7712, !7731}
!7731 = !DILocation(line: 36, column: 2, scope: !7702)
!7732 = !DILocation(line: 49, column: 2, scope: !7695)
!7733 = !DILocation(line: 50, column: 1, scope: !7695)
!7734 = !DILocation(line: 41, column: 9, scope: !7707)
!7735 = !DILocation(line: 41, column: 7, scope: !7708)
!7736 = !DILocation(line: 42, column: 22, scope: !7706)
!7737 = !DILocation(line: 0, scope: !7706)
!7738 = !DILocation(line: 44, column: 25, scope: !7706)
!7739 = !DILocation(line: 44, column: 17, scope: !7706)
!7740 = !DILocation(line: 44, column: 33, scope: !7706)
!7741 = !DILocation(line: 44, column: 4, scope: !7706)
!7742 = !DILocation(line: 45, column: 3, scope: !7706)
!7743 = !DILocation(line: 46, column: 4, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7707, file: !7642, line: 45, column: 10)
!7745 = !DILocation(line: 40, column: 50, scope: !7709)
!7746 = !DILocation(line: 40, column: 24, scope: !7709)
!7747 = distinct !{!7747, !7715, !7748}
!7748 = !DILocation(line: 48, column: 2, scope: !7704)
!7749 = distinct !DISubprogram(name: "isprint", scope: !6695, file: !6695, line: 37, type: !764, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !7750)
!7750 = !{!7751}
!7751 = !DILocalVariable(name: "c", arg: 1, scope: !7749, file: !6695, line: 37, type: !103)
!7752 = !DILocation(line: 0, scope: !7749)
!7753 = !DILocation(line: 39, column: 38, scope: !7749)
!7754 = !DILocation(line: 39, column: 2, scope: !7749)
!7755 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7756, file: !7756, line: 57, type: !7757, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3179, retainedNodes: !7803)
!7756 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7757 = !DISubroutineType(types: !7758)
!7758 = !{null, !32, !7759}
!7759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7760, size: 32)
!7760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7761)
!7761 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3299, line: 141, baseType: !7762)
!7762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3299, line: 97, size: 256, elements: !7763)
!7763 = !{!7764}
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7762, file: !3299, line: 107, baseType: !7765, size: 256)
!7765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3299, line: 98, size: 256, elements: !7766)
!7766 = !{!7767, !7772, !7777, !7782, !7787, !7792, !7797, !7802}
!7767 = !DIDerivedType(tag: DW_TAG_member, scope: !7765, file: !3299, line: 99, baseType: !7768, size: 32)
!7768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7765, file: !3299, line: 99, size: 32, elements: !7769)
!7769 = !{!7770, !7771}
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7768, file: !3299, line: 99, baseType: !111, size: 32)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7768, file: !3299, line: 99, baseType: !111, size: 32)
!7772 = !DIDerivedType(tag: DW_TAG_member, scope: !7765, file: !3299, line: 100, baseType: !7773, size: 32, offset: 32)
!7773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7765, file: !3299, line: 100, size: 32, elements: !7774)
!7774 = !{!7775, !7776}
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7773, file: !3299, line: 100, baseType: !111, size: 32)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7773, file: !3299, line: 100, baseType: !111, size: 32)
!7777 = !DIDerivedType(tag: DW_TAG_member, scope: !7765, file: !3299, line: 101, baseType: !7778, size: 32, offset: 64)
!7778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7765, file: !3299, line: 101, size: 32, elements: !7779)
!7779 = !{!7780, !7781}
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7778, file: !3299, line: 101, baseType: !111, size: 32)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7778, file: !3299, line: 101, baseType: !111, size: 32)
!7782 = !DIDerivedType(tag: DW_TAG_member, scope: !7765, file: !3299, line: 102, baseType: !7783, size: 32, offset: 96)
!7783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7765, file: !3299, line: 102, size: 32, elements: !7784)
!7784 = !{!7785, !7786}
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7783, file: !3299, line: 102, baseType: !111, size: 32)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7783, file: !3299, line: 102, baseType: !111, size: 32)
!7787 = !DIDerivedType(tag: DW_TAG_member, scope: !7765, file: !3299, line: 103, baseType: !7788, size: 32, offset: 128)
!7788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7765, file: !3299, line: 103, size: 32, elements: !7789)
!7789 = !{!7790, !7791}
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7788, file: !3299, line: 103, baseType: !111, size: 32)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7788, file: !3299, line: 103, baseType: !111, size: 32)
!7792 = !DIDerivedType(tag: DW_TAG_member, scope: !7765, file: !3299, line: 104, baseType: !7793, size: 32, offset: 160)
!7793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7765, file: !3299, line: 104, size: 32, elements: !7794)
!7794 = !{!7795, !7796}
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7793, file: !3299, line: 104, baseType: !111, size: 32)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7793, file: !3299, line: 104, baseType: !111, size: 32)
!7797 = !DIDerivedType(tag: DW_TAG_member, scope: !7765, file: !3299, line: 105, baseType: !7798, size: 32, offset: 192)
!7798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7765, file: !3299, line: 105, size: 32, elements: !7799)
!7799 = !{!7800, !7801}
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7798, file: !3299, line: 105, baseType: !111, size: 32)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7798, file: !3299, line: 105, baseType: !111, size: 32)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7765, file: !3299, line: 106, baseType: !111, size: 32, offset: 224)
!7803 = !{!7804, !7805}
!7804 = !DILocalVariable(name: "reason", arg: 1, scope: !7755, file: !7756, line: 57, type: !32)
!7805 = !DILocalVariable(name: "esf", arg: 2, scope: !7755, file: !7756, line: 57, type: !7759)
!7806 = !DILocation(line: 0, scope: !7755)
!7807 = !DILocation(line: 60, column: 10, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7755, file: !7756, line: 60, column: 6)
!7809 = !DILocation(line: 60, column: 6, scope: !7755)
!7810 = !DILocation(line: 61, column: 3, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7808, file: !7756, line: 60, column: 19)
!7812 = !DILocation(line: 62, column: 2, scope: !7811)
!7813 = !DILocation(line: 63, column: 2, scope: !7755)
!7814 = !DILocation(line: 64, column: 1, scope: !7755)
!7815 = distinct !DISubprogram(name: "esf_dump", scope: !7756, file: !7756, line: 20, type: !7816, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3179, retainedNodes: !7818)
!7816 = !DISubroutineType(types: !7817)
!7817 = !{null, !7759}
!7818 = !{!7819}
!7819 = !DILocalVariable(name: "esf", arg: 1, scope: !7815, file: !7756, line: 20, type: !7759)
!7820 = !DILocation(line: 0, scope: !7815)
!7821 = !DILocation(line: 22, column: 2, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7756, line: 22, column: 2)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !7756, line: 22, column: 2)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7756, line: 22, column: 2)
!7825 = distinct !DILexicalBlock(scope: !7815, file: !7756, line: 22, column: 2)
!7826 = !DILocation(line: 24, column: 2, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !7756, line: 24, column: 2)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !7756, line: 24, column: 2)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !7756, line: 24, column: 2)
!7830 = distinct !DILexicalBlock(scope: !7815, file: !7756, line: 24, column: 2)
!7831 = !DILocation(line: 26, column: 2, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7756, line: 26, column: 2)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7756, line: 26, column: 2)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !7756, line: 26, column: 2)
!7835 = distinct !DILexicalBlock(scope: !7815, file: !7756, line: 26, column: 2)
!7836 = !DILocation(line: 53, column: 2, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !7756, line: 53, column: 2)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !7756, line: 53, column: 2)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !7756, line: 53, column: 2)
!7840 = distinct !DILexicalBlock(scope: !7815, file: !7756, line: 53, column: 2)
!7841 = !DILocation(line: 55, column: 1, scope: !7815)
!7842 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7756, file: !7756, line: 82, type: !7843, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3179, retainedNodes: !7858)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{null, !7759, !7845}
!7845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7846, size: 32)
!7846 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !7847)
!7847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !7848)
!7848 = !{!7849, !7850, !7851, !7852, !7853, !7854, !7855, !7856, !7857}
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7847, file: !248, line: 26, baseType: !111, size: 32)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7847, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7847, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7847, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7847, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7847, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7847, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7847, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7847, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!7858 = !{!7859, !7860, !7861}
!7859 = !DILocalVariable(name: "esf", arg: 1, scope: !7842, file: !7756, line: 82, type: !7759)
!7860 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7842, file: !7756, line: 82, type: !7845)
!7861 = !DILocalVariable(name: "reason", scope: !7842, file: !7756, line: 88, type: !32)
!7862 = !DILocation(line: 0, scope: !7842)
!7863 = !DILocation(line: 88, column: 35, scope: !7842)
!7864 = !DILocation(line: 108, column: 2, scope: !7842)
!7865 = !DILocation(line: 131, column: 1, scope: !7842)
!7866 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7756, file: !7756, line: 133, type: !7867, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3179, retainedNodes: !7869)
!7867 = !DISubroutineType(types: !7868)
!7868 = !{null, !102}
!7869 = !{!7870, !7871, !7872}
!7870 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7866, file: !7756, line: 133, type: !102)
!7871 = !DILocalVariable(name: "ssf_contents", scope: !7866, file: !7756, line: 135, type: !1370)
!7872 = !DILocalVariable(name: "oops_esf", scope: !7866, file: !7756, line: 136, type: !7761)
!7873 = !DILocation(line: 0, scope: !7866)
!7874 = !DILocation(line: 136, column: 2, scope: !7866)
!7875 = !DILocation(line: 136, column: 15, scope: !7866)
!7876 = !DILocation(line: 139, column: 22, scope: !7866)
!7877 = !DILocation(line: 139, column: 17, scope: !7866)
!7878 = !DILocation(line: 139, column: 20, scope: !7866)
!7879 = !DILocation(line: 141, column: 2, scope: !7866)
!7880 = !DILocation(line: 142, column: 2, scope: !7866)
!7881 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7882, file: !7882, line: 40, type: !7620, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7883)
!7882 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7883 = !{!7884}
!7884 = !DILocalVariable(name: "irq", arg: 1, scope: !7881, file: !7882, line: 40, type: !32)
!7885 = !DILocation(line: 0, scope: !7881)
!7886 = !DILocation(line: 42, column: 2, scope: !7881)
!7887 = !DILocation(line: 43, column: 1, scope: !7881)
!7888 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !992, file: !992, line: 1684, type: !7889, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7891)
!7889 = !DISubroutineType(types: !7890)
!7890 = !{null, !1268}
!7891 = !{!7892}
!7892 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7888, file: !992, line: 1684, type: !1268)
!7893 = !DILocation(line: 0, scope: !7888)
!7894 = !DILocation(line: 1686, column: 23, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7888, file: !992, line: 1686, column: 7)
!7896 = !DILocation(line: 1686, column: 7, scope: !7888)
!7897 = !DILocation(line: 1688, column: 5, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7895, file: !992, line: 1687, column: 3)
!7899 = !{i64 2151257955}
!7900 = !DILocation(line: 1689, column: 81, scope: !7898)
!7901 = !DILocation(line: 1689, column: 60, scope: !7898)
!7902 = !DILocation(line: 1689, column: 34, scope: !7898)
!7903 = !DILocation(line: 1689, column: 5, scope: !7898)
!7904 = !DILocation(line: 1689, column: 43, scope: !7898)
!7905 = !DILocation(line: 1690, column: 5, scope: !7898)
!7906 = !{i64 2151258069}
!7907 = !DILocation(line: 1691, column: 3, scope: !7898)
!7908 = !DILocation(line: 1692, column: 1, scope: !7888)
!7909 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7882, file: !7882, line: 45, type: !7620, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7910)
!7910 = !{!7911}
!7911 = !DILocalVariable(name: "irq", arg: 1, scope: !7909, file: !7882, line: 45, type: !32)
!7912 = !DILocation(line: 0, scope: !7909)
!7913 = !DILocation(line: 47, column: 2, scope: !7909)
!7914 = !DILocation(line: 48, column: 1, scope: !7909)
!7915 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !992, file: !992, line: 1722, type: !7889, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7916)
!7916 = !{!7917}
!7917 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7915, file: !992, line: 1722, type: !1268)
!7918 = !DILocation(line: 0, scope: !7915)
!7919 = !DILocation(line: 1724, column: 23, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7915, file: !992, line: 1724, column: 7)
!7921 = !DILocation(line: 1724, column: 7, scope: !7915)
!7922 = !DILocation(line: 1726, column: 81, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7920, file: !992, line: 1725, column: 3)
!7924 = !DILocation(line: 1726, column: 60, scope: !7923)
!7925 = !DILocation(line: 1726, column: 34, scope: !7923)
!7926 = !DILocation(line: 1726, column: 5, scope: !7923)
!7927 = !DILocation(line: 1726, column: 43, scope: !7923)
!7928 = !DILocation(line: 271, column: 3, scope: !7929, inlinedAt: !7931)
!7929 = distinct !DISubprogram(name: "__DSB", scope: !7930, file: !7930, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !2571)
!7930 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7931 = distinct !DILocation(line: 1727, column: 5, scope: !7923)
!7932 = !{i64 3712338}
!7933 = !DILocation(line: 260, column: 3, scope: !7934, inlinedAt: !7935)
!7934 = distinct !DISubprogram(name: "__ISB", scope: !7930, file: !7930, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !2571)
!7935 = distinct !DILocation(line: 1728, column: 5, scope: !7923)
!7936 = !{i64 3712055}
!7937 = !DILocation(line: 1729, column: 3, scope: !7923)
!7938 = !DILocation(line: 1730, column: 1, scope: !7915)
!7939 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7882, file: !7882, line: 50, type: !7940, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!103, !32}
!7942 = !{!7943}
!7943 = !DILocalVariable(name: "irq", arg: 1, scope: !7939, file: !7882, line: 50, type: !32)
!7944 = !DILocation(line: 0, scope: !7939)
!7945 = !DILocation(line: 52, column: 20, scope: !7939)
!7946 = !DILocation(line: 52, column: 9, scope: !7939)
!7947 = !DILocation(line: 52, column: 41, scope: !7939)
!7948 = !DILocation(line: 52, column: 39, scope: !7939)
!7949 = !DILocation(line: 52, column: 2, scope: !7939)
!7950 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7882, file: !7882, line: 64, type: !7951, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7953)
!7951 = !DISubroutineType(types: !7952)
!7952 = !{null, !32, !32, !111}
!7953 = !{!7954, !7955, !7956}
!7954 = !DILocalVariable(name: "irq", arg: 1, scope: !7950, file: !7882, line: 64, type: !32)
!7955 = !DILocalVariable(name: "prio", arg: 2, scope: !7950, file: !7882, line: 64, type: !32)
!7956 = !DILocalVariable(name: "flags", arg: 3, scope: !7950, file: !7882, line: 64, type: !111)
!7957 = !DILocation(line: 0, scope: !7950)
!7958 = !DILocation(line: 83, column: 8, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !7882, line: 82, column: 9)
!7960 = distinct !DILexicalBlock(scope: !7950, file: !7882, line: 76, column: 6)
!7961 = !DILocation(line: 91, column: 2, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7882, line: 91, column: 2)
!7963 = distinct !DILexicalBlock(scope: !7950, file: !7882, line: 91, column: 2)
!7964 = !DILocation(line: 91, column: 2, scope: !7963)
!7965 = !DILocation(line: 91, column: 2, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7962, file: !7882, line: 91, column: 2)
!7967 = !DILocation(line: 95, column: 2, scope: !7950)
!7968 = !DILocation(line: 96, column: 1, scope: !7950)
!7969 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7970, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{null, !1268, !111}
!7972 = !{!7973, !7974}
!7973 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7969, file: !992, line: 1814, type: !1268)
!7974 = !DILocalVariable(name: "priority", arg: 2, scope: !7969, file: !992, line: 1814, type: !111)
!7975 = !DILocation(line: 0, scope: !7969)
!7976 = !DILocation(line: 0, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7969, file: !992, line: 1816, column: 7)
!7978 = !DILocation(line: 1816, column: 7, scope: !7969)
!7979 = !DILocation(line: 1824, column: 1, scope: !7969)
!7980 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7882, file: !7882, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !7981)
!7981 = !{!7982}
!7982 = !DILocalVariable(name: "unused", arg: 1, scope: !7980, file: !7882, line: 155, type: !13)
!7983 = !DILocation(line: 0, scope: !7980)
!7984 = !DILocation(line: 159, column: 2, scope: !7980)
!7985 = !DILocation(line: 160, column: 1, scope: !7980)
!7986 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7987, file: !7987, line: 87, type: !323, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !2571)
!7987 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7988 = !DILocation(line: 89, column: 2, scope: !7986)
!7989 = !DILocation(line: 90, column: 2, scope: !7986)
!7990 = !DILocation(line: 91, column: 1, scope: !7986)
!7991 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7987, file: !7987, line: 23, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!7992 = !DISubprogram(name: "z_arm_int_exit", scope: !7993, file: !7993, line: 153, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!7993 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7994 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7995, file: !7995, line: 256, type: !323, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !2571)
!7995 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7996 = !DILocation(line: 258, column: 2, scope: !7994)
!7997 = !DILocation(line: 260, column: 2, scope: !7994)
!7998 = !DILocation(line: 262, column: 2, scope: !7994)
!7999 = !DILocation(line: 263, column: 2, scope: !7994)
!8000 = !DILocation(line: 267, column: 2, scope: !7994)
!8001 = !DILocation(line: 268, column: 2, scope: !7994)
!8002 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7995, file: !7995, line: 53, type: !323, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !2571)
!8003 = !DILocation(line: 55, column: 12, scope: !8002)
!8004 = !DILocation(line: 271, column: 3, scope: !8005, inlinedAt: !8006)
!8005 = distinct !DISubprogram(name: "__DSB", scope: !7930, file: !7930, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !2571)
!8006 = distinct !DILocation(line: 56, column: 2, scope: !8002)
!8007 = !{i64 3711009}
!8008 = !DILocation(line: 260, column: 3, scope: !8009, inlinedAt: !8010)
!8009 = distinct !DISubprogram(name: "__ISB", scope: !7930, file: !7930, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !2571)
!8010 = distinct !DILocation(line: 57, column: 2, scope: !8002)
!8011 = !{i64 3710726}
!8012 = !DILocation(line: 58, column: 1, scope: !8002)
!8013 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7995, file: !7995, line: 96, type: !323, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !2571)
!8014 = !DILocation(line: 103, column: 13, scope: !8013)
!8015 = !DILocation(line: 975, column: 3, scope: !8016, inlinedAt: !8021)
!8016 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7930, file: !7930, line: 971, type: !8017, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !8019)
!8017 = !DISubroutineType(types: !8018)
!8018 = !{!111}
!8019 = !{!8020}
!8020 = !DILocalVariable(name: "result", scope: !8016, file: !7930, line: 973, type: !111)
!8021 = distinct !DILocation(line: 189, column: 16, scope: !8013)
!8022 = !{i64 3731839}
!8023 = !DILocation(line: 0, scope: !8016, inlinedAt: !8021)
!8024 = !DILocation(line: 189, column: 32, scope: !8013)
!8025 = !DILocalVariable(name: "control", arg: 1, scope: !8026, file: !7930, line: 1001, type: !111)
!8026 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7930, file: !7930, line: 1001, type: !8027, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !8029)
!8027 = !DISubroutineType(types: !8028)
!8028 = !{null, !111}
!8029 = !{!8025}
!8030 = !DILocation(line: 0, scope: !8026, inlinedAt: !8031)
!8031 = distinct !DILocation(line: 189, column: 2, scope: !8013)
!8032 = !DILocation(line: 1003, column: 3, scope: !8026, inlinedAt: !8031)
!8033 = !{i64 3732559}
!8034 = !DILocation(line: 260, column: 3, scope: !8009, inlinedAt: !8035)
!8035 = distinct !DILocation(line: 1004, column: 3, scope: !8026, inlinedAt: !8031)
!8036 = !DILocation(line: 191, column: 1, scope: !8013)
!8037 = distinct !DISubprogram(name: "arch_swap", scope: !8038, file: !8038, line: 33, type: !7940, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3266, retainedNodes: !8039)
!8038 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8039 = !{!8040}
!8040 = !DILocalVariable(name: "key", arg: 1, scope: !8037, file: !8038, line: 33, type: !32)
!8041 = !DILocation(line: 0, scope: !8037)
!8042 = !DILocation(line: 36, column: 2, scope: !8037)
!8043 = !DILocation(line: 36, column: 17, scope: !8037)
!8044 = !DILocation(line: 36, column: 25, scope: !8037)
!8045 = !DILocation(line: 37, column: 37, scope: !8037)
!8046 = !DILocation(line: 37, column: 17, scope: !8037)
!8047 = !DILocation(line: 37, column: 35, scope: !8037)
!8048 = !DILocation(line: 41, column: 12, scope: !8037)
!8049 = !DILocalVariable(name: "key", arg: 1, scope: !8050, file: !7609, line: 84, type: !32)
!8050 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3266, retainedNodes: !8051)
!8051 = !{!8049}
!8052 = !DILocation(line: 0, scope: !8050, inlinedAt: !8053)
!8053 = distinct !DILocation(line: 44, column: 2, scope: !8037)
!8054 = !DILocation(line: 95, column: 2, scope: !8050, inlinedAt: !8053)
!8055 = !{i64 2281510}
!8056 = !DILocation(line: 53, column: 9, scope: !8037)
!8057 = !DILocation(line: 53, column: 24, scope: !8037)
!8058 = !DILocation(line: 53, column: 2, scope: !8037)
!8059 = distinct !DISubprogram(name: "arch_new_thread", scope: !8060, file: !8060, line: 56, type: !8061, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3294, retainedNodes: !8170)
!8060 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8061 = !DISubroutineType(types: !8062)
!8062 = !{null, !8063, !8165, !160, !310, !102, !102, !102}
!8063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8064, size: 32)
!8064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !8065)
!8065 = !{!8066, !8124, !8136, !8137, !8138, !8139, !8145, !8160}
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8064, file: !199, line: 247, baseType: !8067, size: 384)
!8067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !8068)
!8068 = !{!8069, !8093, !8100, !8101, !8102, !8111, !8112, !8113}
!8069 = !DIDerivedType(tag: DW_TAG_member, scope: !8067, file: !199, line: 60, baseType: !8070, size: 64)
!8070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8067, file: !199, line: 60, size: 64, elements: !8071)
!8071 = !{!8072, !8087}
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8070, file: !199, line: 61, baseType: !8073, size: 64)
!8073 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !8074)
!8074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !8075)
!8075 = !{!8076, !8082}
!8076 = !DIDerivedType(tag: DW_TAG_member, scope: !8074, file: !136, line: 38, baseType: !8077, size: 32)
!8077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8074, file: !136, line: 38, size: 32, elements: !8078)
!8078 = !{!8079, !8081}
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8077, file: !136, line: 39, baseType: !8080, size: 32)
!8080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 32)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8077, file: !136, line: 40, baseType: !8080, size: 32)
!8082 = !DIDerivedType(tag: DW_TAG_member, scope: !8074, file: !136, line: 42, baseType: !8083, size: 32, offset: 32)
!8083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8074, file: !136, line: 42, size: 32, elements: !8084)
!8084 = !{!8085, !8086}
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8083, file: !136, line: 43, baseType: !8080, size: 32)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8083, file: !136, line: 44, baseType: !8080, size: 32)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8070, file: !199, line: 62, baseType: !8088, size: 64)
!8088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !8089)
!8089 = !{!8090}
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8088, file: !211, line: 50, baseType: !8091, size: 64)
!8091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8092, size: 64, elements: !216)
!8092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8088, size: 32)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8067, file: !199, line: 68, baseType: !8094, size: 32, offset: 64)
!8094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8095, size: 32)
!8095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !8096)
!8096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !8097)
!8097 = !{!8098}
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8096, file: !131, line: 232, baseType: !8099, size: 64)
!8099 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !8074)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8067, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8067, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!8102 = !DIDerivedType(tag: DW_TAG_member, scope: !8067, file: !199, line: 90, baseType: !8103, size: 16, offset: 112)
!8103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8067, file: !199, line: 90, size: 16, elements: !8104)
!8104 = !{!8105, !8110}
!8105 = !DIDerivedType(tag: DW_TAG_member, scope: !8103, file: !199, line: 91, baseType: !8106, size: 16)
!8106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8103, file: !199, line: 91, size: 16, elements: !8107)
!8107 = !{!8108, !8109}
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8106, file: !199, line: 96, baseType: !229, size: 8)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8106, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8103, file: !199, line: 100, baseType: !181, size: 16)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8067, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8067, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8067, file: !199, line: 131, baseType: !8114, size: 192, offset: 192)
!8114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !8115)
!8115 = !{!8116, !8117, !8123}
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8114, file: !131, line: 245, baseType: !8073, size: 64)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8114, file: !131, line: 246, baseType: !8118, size: 32, offset: 64)
!8118 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !8119)
!8119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8120, size: 32)
!8120 = !DISubroutineType(types: !8121)
!8121 = !{null, !8122}
!8122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8114, size: 32)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8114, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8064, file: !199, line: 250, baseType: !8125, size: 288, offset: 384)
!8125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8126)
!8126 = !{!8127, !8128, !8129, !8130, !8131, !8132, !8133, !8134, !8135}
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8125, file: !248, line: 26, baseType: !111, size: 32)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8125, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8125, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8125, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8125, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8125, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8125, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8125, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8125, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8064, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8064, file: !199, line: 256, baseType: !8095, size: 64, offset: 704)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8064, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8064, file: !199, line: 300, baseType: !8140, size: 96, offset: 800)
!8140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !8141)
!8141 = !{!8142, !8143, !8144}
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8140, file: !199, line: 153, baseType: !22, size: 32)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8140, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8140, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8064, file: !199, line: 325, baseType: !8146, size: 32, offset: 896)
!8146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8147, size: 32)
!8147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !8148)
!8148 = !{!8149, !8155, !8156}
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8147, file: !127, line: 5074, baseType: !8150, size: 96)
!8150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !8151)
!8151 = !{!8152, !8153, !8154}
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8150, file: !274, line: 57, baseType: !277, size: 32)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8150, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8150, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8147, file: !127, line: 5075, baseType: !8095, size: 64, offset: 96)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8147, file: !127, line: 5076, baseType: !8157, size: 32, offset: 160)
!8157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !8158)
!8158 = !{!8159}
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8157, file: !152, line: 52, baseType: !22, size: 32)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8064, file: !199, line: 343, baseType: !8161, size: 64, offset: 928)
!8161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !8162)
!8162 = !{!8163, !8164}
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8161, file: !248, line: 63, baseType: !111, size: 32)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8161, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!8165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8166, size: 32)
!8166 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !8167)
!8167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !8168)
!8168 = !{!8169}
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8167, file: !305, line: 48, baseType: !110, size: 8)
!8170 = !{!8171, !8172, !8173, !8174, !8175, !8176, !8177, !8178}
!8171 = !DILocalVariable(name: "thread", arg: 1, scope: !8059, file: !8060, line: 56, type: !8063)
!8172 = !DILocalVariable(name: "stack", arg: 2, scope: !8059, file: !8060, line: 56, type: !8165)
!8173 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8059, file: !8060, line: 57, type: !160)
!8174 = !DILocalVariable(name: "entry", arg: 4, scope: !8059, file: !8060, line: 57, type: !310)
!8175 = !DILocalVariable(name: "p1", arg: 5, scope: !8059, file: !8060, line: 58, type: !102)
!8176 = !DILocalVariable(name: "p2", arg: 6, scope: !8059, file: !8060, line: 58, type: !102)
!8177 = !DILocalVariable(name: "p3", arg: 7, scope: !8059, file: !8060, line: 58, type: !102)
!8178 = !DILocalVariable(name: "iframe", scope: !8059, file: !8060, line: 60, type: !3297)
!8179 = !DILocation(line: 0, scope: !8059)
!8180 = !DILocation(line: 85, column: 11, scope: !8059)
!8181 = !DILocation(line: 93, column: 10, scope: !8059)
!8182 = !DILocation(line: 98, column: 13, scope: !8059)
!8183 = !DILocation(line: 100, column: 15, scope: !8059)
!8184 = !DILocation(line: 100, column: 10, scope: !8059)
!8185 = !DILocation(line: 100, column: 13, scope: !8059)
!8186 = !DILocation(line: 101, column: 15, scope: !8059)
!8187 = !DILocation(line: 101, column: 10, scope: !8059)
!8188 = !DILocation(line: 101, column: 13, scope: !8059)
!8189 = !DILocation(line: 102, column: 15, scope: !8059)
!8190 = !DILocation(line: 102, column: 10, scope: !8059)
!8191 = !DILocation(line: 102, column: 13, scope: !8059)
!8192 = !DILocation(line: 103, column: 15, scope: !8059)
!8193 = !DILocation(line: 103, column: 10, scope: !8059)
!8194 = !DILocation(line: 103, column: 13, scope: !8059)
!8195 = !DILocation(line: 106, column: 10, scope: !8059)
!8196 = !DILocation(line: 106, column: 15, scope: !8059)
!8197 = !DILocation(line: 122, column: 29, scope: !8059)
!8198 = !DILocation(line: 122, column: 23, scope: !8059)
!8199 = !DILocation(line: 122, column: 27, scope: !8059)
!8200 = !DILocation(line: 123, column: 15, scope: !8059)
!8201 = !DILocation(line: 123, column: 23, scope: !8059)
!8202 = !DILocation(line: 143, column: 1, scope: !8059)
!8203 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8060, file: !8060, line: 385, type: !8204, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3294, retainedNodes: !8207)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!111, !8206, !8206}
!8206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!8207 = !{!8208, !8209, !8210, !8213}
!8208 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8203, file: !8060, line: 385, type: !8206)
!8209 = !DILocalVariable(name: "psp", arg: 2, scope: !8203, file: !8060, line: 385, type: !8206)
!8210 = !DILocalVariable(name: "thread", scope: !8203, file: !8060, line: 388, type: !8211)
!8211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8212, size: 32)
!8212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8064)
!8213 = !DILocalVariable(name: "guard_len", scope: !8203, file: !8060, line: 405, type: !111)
!8214 = !DILocation(line: 0, scope: !8203)
!8215 = !DILocation(line: 388, column: 34, scope: !8203)
!8216 = !DILocation(line: 390, column: 13, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8203, file: !8060, line: 390, column: 6)
!8218 = !DILocation(line: 390, column: 6, scope: !8203)
!8219 = !DILocation(line: 438, column: 6, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8203, file: !8060, line: 438, column: 6)
!8221 = !DILocation(line: 438, column: 6, scope: !8203)
!8222 = !DILocation(line: 442, column: 3, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8220, file: !8060, line: 440, column: 22)
!8224 = !DILocation(line: 455, column: 1, scope: !8203)
!8225 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8060, file: !8060, line: 530, type: !8226, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3294, retainedNodes: !8228)
!8226 = !DISubroutineType(types: !8227)
!8227 = !{null, !8063, !160, !310}
!8228 = !{!8229, !8230, !8231}
!8229 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8225, file: !8060, line: 530, type: !8063)
!8230 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8225, file: !8060, line: 530, type: !160)
!8231 = !DILocalVariable(name: "_main", arg: 3, scope: !8225, file: !8060, line: 531, type: !310)
!8232 = !DILocation(line: 0, scope: !8225)
!8233 = !DILocation(line: 535, column: 11, scope: !8225)
!8234 = !DILocation(line: 560, column: 2, scope: !8225)
!8235 = !DILocation(line: 576, column: 2, scope: !8225)
!8236 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8237 = !DILocation(line: 603, column: 2, scope: !8225)
!8238 = distinct !DISubprogram(name: "z_arm_fault", scope: !8239, file: !8239, line: 1036, type: !8240, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8255)
!8239 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8240 = !DISubroutineType(types: !8241)
!8241 = !{null, !111, !111, !111, !8242}
!8242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8243, size: 32)
!8243 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !8244)
!8244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8245)
!8245 = !{!8246, !8247, !8248, !8249, !8250, !8251, !8252, !8253, !8254}
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8244, file: !248, line: 26, baseType: !111, size: 32)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8244, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8244, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8244, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8244, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8244, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8244, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8244, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8244, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8255 = !{!8256, !8257, !8258, !8259, !8260, !8261, !8262, !8263, !8264, !8265}
!8256 = !DILocalVariable(name: "msp", arg: 1, scope: !8238, file: !8239, line: 1036, type: !111)
!8257 = !DILocalVariable(name: "psp", arg: 2, scope: !8238, file: !8239, line: 1036, type: !111)
!8258 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8238, file: !8239, line: 1036, type: !111)
!8259 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8238, file: !8239, line: 1037, type: !8242)
!8260 = !DILocalVariable(name: "reason", scope: !8238, file: !8239, line: 1039, type: !111)
!8261 = !DILocalVariable(name: "fault", scope: !8238, file: !8239, line: 1040, type: !103)
!8262 = !DILocalVariable(name: "recoverable", scope: !8238, file: !8239, line: 1041, type: !122)
!8263 = !DILocalVariable(name: "nested_exc", scope: !8238, file: !8239, line: 1041, type: !122)
!8264 = !DILocalVariable(name: "esf", scope: !8238, file: !8239, line: 1042, type: !3365)
!8265 = !DILocalVariable(name: "esf_copy", scope: !8238, file: !8239, line: 1047, type: !3366)
!8266 = !DILocation(line: 0, scope: !8238)
!8267 = !DILocation(line: 1040, column: 19, scope: !8238)
!8268 = !DILocation(line: 1041, column: 2, scope: !8238)
!8269 = !DILocation(line: 1047, column: 2, scope: !8238)
!8270 = !DILocation(line: 1047, column: 15, scope: !8238)
!8271 = !DILocalVariable(name: "key", arg: 1, scope: !8272, file: !7609, line: 84, type: !32)
!8272 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8273)
!8273 = !{!8271}
!8274 = !DILocation(line: 0, scope: !8272, inlinedAt: !8275)
!8275 = distinct !DILocation(line: 1050, column: 2, scope: !8238)
!8276 = !DILocation(line: 95, column: 2, scope: !8272, inlinedAt: !8275)
!8277 = !{i64 2314754}
!8278 = !DILocation(line: 1055, column: 9, scope: !8238)
!8279 = !DILocation(line: 1056, column: 2, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !8239, line: 1056, column: 2)
!8281 = distinct !DILexicalBlock(scope: !8238, file: !8239, line: 1056, column: 2)
!8282 = !DILocation(line: 1056, column: 2, scope: !8281)
!8283 = !DILocation(line: 1056, column: 2, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8280, file: !8239, line: 1056, column: 2)
!8285 = !DILocation(line: 1040, column: 24, scope: !8238)
!8286 = !DILocation(line: 1063, column: 11, scope: !8238)
!8287 = !DILocation(line: 1064, column: 6, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8238, file: !8239, line: 1064, column: 6)
!8289 = !{i8 0, i8 2}
!8290 = !DILocation(line: 1064, column: 6, scope: !8238)
!8291 = !DILocation(line: 1070, column: 20, scope: !8238)
!8292 = !DILocation(line: 1070, column: 2, scope: !8238)
!8293 = !DILocation(line: 1089, column: 6, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8238, file: !8239, line: 1089, column: 6)
!8295 = !DILocation(line: 0, scope: !8294)
!8296 = !DILocation(line: 1089, column: 6, scope: !8238)
!8297 = !DILocation(line: 1090, column: 28, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !8239, line: 1090, column: 7)
!8299 = distinct !DILexicalBlock(scope: !8294, file: !8239, line: 1089, column: 18)
!8300 = !DILocation(line: 1090, column: 44, scope: !8298)
!8301 = !DILocation(line: 1090, column: 7, scope: !8299)
!8302 = !DILocation(line: 1091, column: 24, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8298, file: !8239, line: 1090, column: 50)
!8304 = !DILocation(line: 1092, column: 3, scope: !8303)
!8305 = !DILocation(line: 1094, column: 23, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8294, file: !8239, line: 1093, column: 9)
!8307 = !DILocation(line: 1097, column: 2, scope: !8238)
!8308 = !DILocation(line: 1098, column: 1, scope: !8238)
!8309 = distinct !DISubprogram(name: "get_esf", scope: !8239, file: !8239, line: 894, type: !8310, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8313)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{!3365, !111, !111, !111, !8312}
!8312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!8313 = !{!8314, !8315, !8316, !8317, !8318, !8319}
!8314 = !DILocalVariable(name: "msp", arg: 1, scope: !8309, file: !8239, line: 894, type: !111)
!8315 = !DILocalVariable(name: "psp", arg: 2, scope: !8309, file: !8239, line: 894, type: !111)
!8316 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8309, file: !8239, line: 894, type: !111)
!8317 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8309, file: !8239, line: 895, type: !8312)
!8318 = !DILocalVariable(name: "alternative_state_exc", scope: !8309, file: !8239, line: 897, type: !122)
!8319 = !DILocalVariable(name: "ptr_esf", scope: !8309, file: !8239, line: 898, type: !3365)
!8320 = !DILocation(line: 0, scope: !8309)
!8321 = !DILocation(line: 900, column: 14, scope: !8309)
!8322 = !DILocation(line: 902, column: 49, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8309, file: !8239, line: 902, column: 6)
!8324 = !DILocation(line: 902, column: 6, scope: !8309)
!8325 = !DILocation(line: 983, column: 44, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8309, file: !8239, line: 983, column: 6)
!8327 = !DILocation(line: 985, column: 3, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !8239, line: 985, column: 3)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !8239, line: 985, column: 3)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !8239, line: 985, column: 3)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !8239, line: 985, column: 3)
!8332 = distinct !DILexicalBlock(scope: !8326, file: !8239, line: 984, column: 47)
!8333 = !DILocation(line: 986, column: 3, scope: !8332)
!8334 = !DILocation(line: 983, column: 18, scope: !8326)
!8335 = !DILocation(line: 991, column: 7, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !8239, line: 990, column: 30)
!8337 = distinct !DILexicalBlock(scope: !8309, file: !8239, line: 990, column: 6)
!8338 = !DILocation(line: 998, column: 16, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !8239, line: 995, column: 10)
!8340 = distinct !DILexicalBlock(scope: !8336, file: !8239, line: 991, column: 7)
!8341 = !DILocation(line: 1002, column: 2, scope: !8309)
!8342 = !DILocation(line: 1003, column: 1, scope: !8309)
!8343 = distinct !DISubprogram(name: "fault_handle", scope: !8239, file: !8239, line: 786, type: !8344, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8346)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!111, !3365, !103, !8312}
!8346 = !{!8347, !8348, !8349, !8350}
!8347 = !DILocalVariable(name: "esf", arg: 1, scope: !8343, file: !8239, line: 786, type: !3365)
!8348 = !DILocalVariable(name: "fault", arg: 2, scope: !8343, file: !8239, line: 786, type: !103)
!8349 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8343, file: !8239, line: 786, type: !8312)
!8350 = !DILocalVariable(name: "reason", scope: !8343, file: !8239, line: 788, type: !111)
!8351 = !DILocation(line: 0, scope: !8343)
!8352 = !DILocation(line: 790, column: 15, scope: !8343)
!8353 = !DILocation(line: 792, column: 2, scope: !8343)
!8354 = !DILocation(line: 794, column: 12, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8343, file: !8239, line: 792, column: 17)
!8356 = !DILocation(line: 795, column: 3, scope: !8355)
!8357 = !DILocation(line: 800, column: 12, scope: !8355)
!8358 = !DILocation(line: 801, column: 3, scope: !8355)
!8359 = !DILocation(line: 803, column: 12, scope: !8355)
!8360 = !DILocation(line: 804, column: 3, scope: !8355)
!8361 = !DILocation(line: 806, column: 12, scope: !8355)
!8362 = !DILocation(line: 807, column: 3, scope: !8355)
!8363 = !DILocation(line: 814, column: 3, scope: !8355)
!8364 = !DILocation(line: 815, column: 3, scope: !8355)
!8365 = !DILocation(line: 820, column: 3, scope: !8355)
!8366 = !DILocation(line: 821, column: 3, scope: !8355)
!8367 = !DILocation(line: 829, column: 2, scope: !8343)
!8368 = distinct !DISubprogram(name: "hard_fault", scope: !8239, file: !8239, line: 709, type: !8369, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8371)
!8369 = !DISubroutineType(types: !8370)
!8370 = !{!111, !3365, !8312}
!8371 = !{!8372, !8373, !8374}
!8372 = !DILocalVariable(name: "esf", arg: 1, scope: !8368, file: !8239, line: 709, type: !3365)
!8373 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8368, file: !8239, line: 709, type: !8312)
!8374 = !DILocalVariable(name: "reason", scope: !8368, file: !8239, line: 711, type: !111)
!8375 = !DILocation(line: 0, scope: !8368)
!8376 = !DILocation(line: 713, column: 2, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !8239, line: 713, column: 2)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !8239, line: 713, column: 2)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !8239, line: 713, column: 2)
!8380 = distinct !DILexicalBlock(scope: !8368, file: !8239, line: 713, column: 2)
!8381 = !DILocation(line: 732, column: 15, scope: !8368)
!8382 = !DILocation(line: 734, column: 12, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8368, file: !8239, line: 734, column: 6)
!8384 = !DILocation(line: 734, column: 17, scope: !8383)
!8385 = !DILocation(line: 734, column: 41, scope: !8383)
!8386 = !DILocation(line: 734, column: 6, scope: !8368)
!8387 = !DILocation(line: 735, column: 3, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !8239, line: 735, column: 3)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !8239, line: 735, column: 3)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !8239, line: 735, column: 3)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !8239, line: 735, column: 3)
!8392 = distinct !DILexicalBlock(scope: !8383, file: !8239, line: 734, column: 47)
!8393 = !DILocation(line: 736, column: 2, scope: !8392)
!8394 = !DILocation(line: 736, column: 19, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8383, file: !8239, line: 736, column: 13)
!8396 = !DILocation(line: 736, column: 49, scope: !8395)
!8397 = !DILocation(line: 736, column: 13, scope: !8383)
!8398 = !DILocation(line: 737, column: 3, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !8239, line: 737, column: 3)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !8239, line: 737, column: 3)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !8239, line: 737, column: 3)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !8239, line: 737, column: 3)
!8403 = distinct !DILexicalBlock(scope: !8395, file: !8239, line: 736, column: 55)
!8404 = !DILocation(line: 738, column: 2, scope: !8403)
!8405 = !DILocation(line: 738, column: 19, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8395, file: !8239, line: 738, column: 13)
!8407 = !DILocation(line: 738, column: 24, scope: !8406)
!8408 = !DILocation(line: 738, column: 47, scope: !8406)
!8409 = !DILocation(line: 738, column: 13, scope: !8395)
!8410 = !DILocation(line: 739, column: 3, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !8239, line: 739, column: 3)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !8239, line: 739, column: 3)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !8239, line: 739, column: 3)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !8239, line: 739, column: 3)
!8415 = distinct !DILexicalBlock(scope: !8406, file: !8239, line: 738, column: 53)
!8416 = !DILocation(line: 740, column: 7, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8415, file: !8239, line: 740, column: 7)
!8418 = !DILocation(line: 740, column: 7, scope: !8415)
!8419 = !DILocation(line: 741, column: 4, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !8239, line: 741, column: 4)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !8239, line: 741, column: 4)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !8239, line: 741, column: 4)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !8239, line: 741, column: 4)
!8424 = distinct !DILexicalBlock(scope: !8417, file: !8239, line: 740, column: 38)
!8425 = !DILocation(line: 742, column: 24, scope: !8424)
!8426 = !DILocation(line: 743, column: 3, scope: !8424)
!8427 = !DILocation(line: 743, column: 20, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8417, file: !8239, line: 743, column: 14)
!8429 = !DILocation(line: 743, column: 25, scope: !8428)
!8430 = !DILocation(line: 743, column: 52, scope: !8428)
!8431 = !DILocation(line: 743, column: 14, scope: !8417)
!8432 = !DILocation(line: 744, column: 13, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8428, file: !8239, line: 743, column: 58)
!8434 = !DILocation(line: 745, column: 3, scope: !8433)
!8435 = !DILocation(line: 745, column: 20, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8428, file: !8239, line: 745, column: 14)
!8437 = !DILocation(line: 745, column: 25, scope: !8436)
!8438 = !DILocation(line: 745, column: 52, scope: !8436)
!8439 = !DILocation(line: 745, column: 14, scope: !8428)
!8440 = !DILocation(line: 746, column: 13, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8436, file: !8239, line: 745, column: 58)
!8442 = !DILocation(line: 747, column: 3, scope: !8441)
!8443 = !DILocation(line: 747, column: 20, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8436, file: !8239, line: 747, column: 14)
!8445 = !DILocation(line: 747, column: 52, scope: !8444)
!8446 = !DILocation(line: 747, column: 14, scope: !8436)
!8447 = !DILocation(line: 748, column: 13, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8444, file: !8239, line: 747, column: 58)
!8449 = !DILocation(line: 754, column: 4, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !8239, line: 754, column: 4)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !8239, line: 754, column: 4)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !8239, line: 754, column: 4)
!8453 = distinct !DILexicalBlock(scope: !8444, file: !8239, line: 753, column: 10)
!8454 = !DILocation(line: 758, column: 3, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !8239, line: 758, column: 3)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !8239, line: 758, column: 3)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !8239, line: 758, column: 3)
!8458 = distinct !DILexicalBlock(scope: !8406, file: !8239, line: 757, column: 9)
!8459 = !DILocation(line: 766, column: 2, scope: !8368)
!8460 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8239, file: !8239, line: 229, type: !8344, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8461)
!8461 = !{!8462, !8463, !8464, !8465, !8466, !8467, !8470}
!8462 = !DILocalVariable(name: "esf", arg: 1, scope: !8460, file: !8239, line: 229, type: !3365)
!8463 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8460, file: !8239, line: 229, type: !103)
!8464 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8460, file: !8239, line: 230, type: !8312)
!8465 = !DILocalVariable(name: "reason", scope: !8460, file: !8239, line: 232, type: !111)
!8466 = !DILocalVariable(name: "mmfar", scope: !8460, file: !8239, line: 233, type: !111)
!8467 = !DILocalVariable(name: "temp", scope: !8468, file: !8239, line: 254, type: !111)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !8239, line: 244, column: 48)
!8469 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 244, column: 6)
!8470 = !DILocalVariable(name: "min_stack_ptr", scope: !8471, file: !8239, line: 309, type: !111)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !8239, line: 308, column: 43)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !8239, line: 308, column: 7)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !8239, line: 289, column: 40)
!8474 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 288, column: 6)
!8475 = !DILocation(line: 0, scope: !8460)
!8476 = !DILocation(line: 235, column: 2, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !8239, line: 235, column: 2)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !8239, line: 235, column: 2)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !8239, line: 235, column: 2)
!8480 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 235, column: 2)
!8481 = !DILocation(line: 237, column: 12, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 237, column: 6)
!8483 = !DILocation(line: 237, column: 17, scope: !8482)
!8484 = !DILocation(line: 237, column: 41, scope: !8482)
!8485 = !DILocation(line: 237, column: 6, scope: !8460)
!8486 = !DILocation(line: 238, column: 3, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !8239, line: 238, column: 3)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !8239, line: 238, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !8239, line: 238, column: 3)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !8239, line: 238, column: 3)
!8491 = distinct !DILexicalBlock(scope: !8482, file: !8239, line: 237, column: 47)
!8492 = !DILocation(line: 240, column: 2, scope: !8491)
!8493 = !DILocation(line: 241, column: 12, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 241, column: 6)
!8495 = !DILocation(line: 241, column: 17, scope: !8494)
!8496 = !DILocation(line: 241, column: 43, scope: !8494)
!8497 = !DILocation(line: 241, column: 6, scope: !8460)
!8498 = !DILocation(line: 242, column: 3, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !8239, line: 242, column: 3)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !8239, line: 242, column: 3)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !8239, line: 242, column: 3)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !8239, line: 242, column: 3)
!8503 = distinct !DILexicalBlock(scope: !8494, file: !8239, line: 241, column: 49)
!8504 = !DILocation(line: 243, column: 2, scope: !8503)
!8505 = !DILocation(line: 244, column: 12, scope: !8469)
!8506 = !DILocation(line: 244, column: 17, scope: !8469)
!8507 = !DILocation(line: 244, column: 42, scope: !8469)
!8508 = !DILocation(line: 244, column: 6, scope: !8460)
!8509 = !DILocation(line: 245, column: 3, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !8239, line: 245, column: 3)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !8239, line: 245, column: 3)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !8239, line: 245, column: 3)
!8513 = distinct !DILexicalBlock(scope: !8468, file: !8239, line: 245, column: 3)
!8514 = !DILocation(line: 254, column: 24, scope: !8468)
!8515 = !DILocation(line: 0, scope: !8468)
!8516 = !DILocation(line: 256, column: 13, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8468, file: !8239, line: 256, column: 7)
!8518 = !DILocation(line: 256, column: 18, scope: !8517)
!8519 = !DILocation(line: 256, column: 44, scope: !8517)
!8520 = !DILocation(line: 256, column: 7, scope: !8468)
!8521 = !DILocation(line: 258, column: 4, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !8239, line: 258, column: 4)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !8239, line: 258, column: 4)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !8239, line: 258, column: 4)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !8239, line: 258, column: 4)
!8526 = distinct !DILexicalBlock(scope: !8517, file: !8239, line: 256, column: 50)
!8527 = !DILocation(line: 259, column: 24, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8526, file: !8239, line: 259, column: 8)
!8529 = !DILocation(line: 259, column: 8, scope: !8526)
!8530 = !DILocation(line: 261, column: 15, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8528, file: !8239, line: 259, column: 30)
!8532 = !DILocation(line: 262, column: 4, scope: !8531)
!8533 = !DILocation(line: 265, column: 12, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 265, column: 6)
!8535 = !DILocation(line: 265, column: 17, scope: !8534)
!8536 = !DILocation(line: 265, column: 42, scope: !8534)
!8537 = !DILocation(line: 265, column: 6, scope: !8460)
!8538 = !DILocation(line: 266, column: 3, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !8239, line: 266, column: 3)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !8239, line: 266, column: 3)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !8239, line: 266, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !8239, line: 266, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8534, file: !8239, line: 265, column: 48)
!8544 = !DILocation(line: 267, column: 2, scope: !8543)
!8545 = !DILocation(line: 269, column: 12, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 269, column: 6)
!8547 = !DILocation(line: 269, column: 17, scope: !8546)
!8548 = !DILocation(line: 269, column: 41, scope: !8546)
!8549 = !DILocation(line: 269, column: 6, scope: !8460)
!8550 = !DILocation(line: 270, column: 3, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !8239, line: 270, column: 3)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !8239, line: 270, column: 3)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !8239, line: 270, column: 3)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !8239, line: 270, column: 3)
!8555 = distinct !DILexicalBlock(scope: !8546, file: !8239, line: 269, column: 47)
!8556 = !DILocation(line: 272, column: 2, scope: !8555)
!8557 = !DILocation(line: 288, column: 12, scope: !8474)
!8558 = !DILocation(line: 288, column: 17, scope: !8474)
!8559 = !DILocation(line: 288, column: 41, scope: !8474)
!8560 = !DILocation(line: 289, column: 9, scope: !8474)
!8561 = !DILocation(line: 289, column: 14, scope: !8474)
!8562 = !DILocation(line: 288, column: 6, scope: !8460)
!8563 = !DILocation(line: 308, column: 12, scope: !8472)
!8564 = !DILocation(line: 308, column: 17, scope: !8472)
!8565 = !DILocation(line: 308, column: 7, scope: !8473)
!8566 = !DILocation(line: 310, column: 6, scope: !8471)
!8567 = !DILocation(line: 309, column: 29, scope: !8471)
!8568 = !DILocation(line: 0, scope: !8471)
!8569 = !DILocation(line: 312, column: 8, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8471, file: !8239, line: 312, column: 8)
!8571 = !DILocation(line: 312, column: 8, scope: !8471)
!8572 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8573, file: !7930, line: 1099, type: !111)
!8573 = distinct !DISubprogram(name: "__set_PSP", scope: !7930, file: !7930, line: 1099, type: !8027, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8574)
!8574 = !{!8572}
!8575 = !DILocation(line: 0, scope: !8573, inlinedAt: !8576)
!8576 = distinct !DILocation(line: 338, column: 5, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8570, file: !8239, line: 312, column: 23)
!8578 = !DILocation(line: 1101, column: 3, scope: !8573, inlinedAt: !8576)
!8579 = !{i64 3761978}
!8580 = !DILocation(line: 341, column: 4, scope: !8577)
!8581 = !DILocation(line: 342, column: 5, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !8239, line: 342, column: 5)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !8239, line: 342, column: 5)
!8584 = distinct !DILexicalBlock(scope: !8570, file: !8239, line: 341, column: 11)
!8585 = !DILocation(line: 342, column: 5, scope: !8583)
!8586 = !DILocation(line: 342, column: 5, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8582, file: !8239, line: 342, column: 5)
!8588 = !DILocation(line: 360, column: 12, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8460, file: !8239, line: 360, column: 6)
!8590 = !DILocation(line: 360, column: 17, scope: !8589)
!8591 = !DILocation(line: 360, column: 41, scope: !8589)
!8592 = !DILocation(line: 360, column: 6, scope: !8460)
!8593 = !DILocation(line: 361, column: 14, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8589, file: !8239, line: 360, column: 47)
!8595 = !DILocation(line: 362, column: 2, scope: !8594)
!8596 = !DILocation(line: 366, column: 12, scope: !8460)
!8597 = !DILocation(line: 369, column: 15, scope: !8460)
!8598 = !DILocation(line: 371, column: 2, scope: !8460)
!8599 = distinct !DISubprogram(name: "bus_fault", scope: !8239, file: !8239, line: 383, type: !8600, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8602)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{!103, !3365, !103, !8312}
!8602 = !{!8603, !8604, !8605, !8606, !8607}
!8603 = !DILocalVariable(name: "esf", arg: 1, scope: !8599, file: !8239, line: 383, type: !3365)
!8604 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8599, file: !8239, line: 383, type: !103)
!8605 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8599, file: !8239, line: 383, type: !8312)
!8606 = !DILocalVariable(name: "reason", scope: !8599, file: !8239, line: 385, type: !111)
!8607 = !DILocalVariable(name: "bfar", scope: !8608, file: !8239, line: 405, type: !111)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !8239, line: 395, column: 42)
!8609 = distinct !DILexicalBlock(scope: !8599, file: !8239, line: 395, column: 6)
!8610 = !DILocation(line: 0, scope: !8599)
!8611 = !DILocation(line: 387, column: 2, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !8239, line: 387, column: 2)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !8239, line: 387, column: 2)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !8239, line: 387, column: 2)
!8615 = distinct !DILexicalBlock(scope: !8599, file: !8239, line: 387, column: 2)
!8616 = !DILocation(line: 389, column: 11, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8599, file: !8239, line: 389, column: 6)
!8618 = !DILocation(line: 389, column: 16, scope: !8617)
!8619 = !DILocation(line: 389, column: 6, scope: !8599)
!8620 = !DILocation(line: 390, column: 3, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !8239, line: 390, column: 3)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8239, line: 390, column: 3)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !8239, line: 390, column: 3)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !8239, line: 390, column: 3)
!8625 = distinct !DILexicalBlock(scope: !8617, file: !8239, line: 389, column: 39)
!8626 = !DILocation(line: 391, column: 2, scope: !8625)
!8627 = !DILocation(line: 392, column: 11, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8599, file: !8239, line: 392, column: 6)
!8629 = !DILocation(line: 392, column: 16, scope: !8628)
!8630 = !DILocation(line: 392, column: 6, scope: !8599)
!8631 = !DILocation(line: 393, column: 3, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !8239, line: 393, column: 3)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !8239, line: 393, column: 3)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !8239, line: 393, column: 3)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !8239, line: 393, column: 3)
!8636 = distinct !DILexicalBlock(scope: !8628, file: !8239, line: 392, column: 41)
!8637 = !DILocation(line: 394, column: 2, scope: !8636)
!8638 = !DILocation(line: 395, column: 11, scope: !8609)
!8639 = !DILocation(line: 395, column: 16, scope: !8609)
!8640 = !DILocation(line: 395, column: 6, scope: !8599)
!8641 = !DILocation(line: 396, column: 3, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !8239, line: 396, column: 3)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !8239, line: 396, column: 3)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !8239, line: 396, column: 3)
!8645 = distinct !DILexicalBlock(scope: !8608, file: !8239, line: 396, column: 3)
!8646 = !DILocation(line: 405, column: 3, scope: !8608)
!8647 = !DILocation(line: 0, scope: !8608)
!8648 = !DILocation(line: 407, column: 13, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8608, file: !8239, line: 407, column: 7)
!8650 = !DILocation(line: 407, column: 18, scope: !8649)
!8651 = !DILocation(line: 407, column: 44, scope: !8649)
!8652 = !DILocation(line: 407, column: 7, scope: !8608)
!8653 = !DILocation(line: 408, column: 4, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !8239, line: 408, column: 4)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !8239, line: 408, column: 4)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8239, line: 408, column: 4)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !8239, line: 408, column: 4)
!8658 = distinct !DILexicalBlock(scope: !8649, file: !8239, line: 407, column: 50)
!8659 = !DILocation(line: 409, column: 24, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8658, file: !8239, line: 409, column: 8)
!8661 = !DILocation(line: 409, column: 8, scope: !8658)
!8662 = !DILocation(line: 411, column: 15, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8660, file: !8239, line: 409, column: 30)
!8664 = !DILocation(line: 412, column: 4, scope: !8663)
!8665 = !DILocation(line: 415, column: 11, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8599, file: !8239, line: 415, column: 6)
!8667 = !DILocation(line: 415, column: 16, scope: !8666)
!8668 = !DILocation(line: 415, column: 6, scope: !8599)
!8669 = !DILocation(line: 416, column: 3, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !8239, line: 416, column: 3)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !8239, line: 416, column: 3)
!8672 = distinct !DILexicalBlock(scope: !8673, file: !8239, line: 416, column: 3)
!8673 = distinct !DILexicalBlock(scope: !8674, file: !8239, line: 416, column: 3)
!8674 = distinct !DILexicalBlock(scope: !8666, file: !8239, line: 415, column: 44)
!8675 = !DILocation(line: 417, column: 2, scope: !8674)
!8676 = !DILocation(line: 418, column: 12, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8599, file: !8239, line: 418, column: 6)
!8678 = !DILocation(line: 418, column: 17, scope: !8677)
!8679 = !DILocation(line: 418, column: 41, scope: !8677)
!8680 = !DILocation(line: 418, column: 6, scope: !8599)
!8681 = !DILocation(line: 423, column: 18, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8677, file: !8239, line: 423, column: 13)
!8683 = !DILocation(line: 423, column: 23, scope: !8682)
!8684 = !DILocation(line: 423, column: 13, scope: !8677)
!8685 = !DILocation(line: 0, scope: !8677)
!8686 = !DILocation(line: 524, column: 12, scope: !8599)
!8687 = !DILocation(line: 526, column: 15, scope: !8599)
!8688 = !DILocation(line: 528, column: 2, scope: !8599)
!8689 = distinct !DISubprogram(name: "usage_fault", scope: !8239, file: !8239, line: 539, type: !8690, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8694)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{!111, !8692}
!8692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8693, size: 32)
!8693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3366)
!8694 = !{!8695, !8696}
!8695 = !DILocalVariable(name: "esf", arg: 1, scope: !8689, file: !8239, line: 539, type: !8692)
!8696 = !DILocalVariable(name: "reason", scope: !8689, file: !8239, line: 541, type: !111)
!8697 = !DILocation(line: 0, scope: !8689)
!8698 = !DILocation(line: 543, column: 2, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !8239, line: 543, column: 2)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !8239, line: 543, column: 2)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !8239, line: 543, column: 2)
!8702 = distinct !DILexicalBlock(scope: !8689, file: !8239, line: 543, column: 2)
!8703 = !DILocation(line: 546, column: 12, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8689, file: !8239, line: 546, column: 6)
!8705 = !DILocation(line: 546, column: 17, scope: !8704)
!8706 = !DILocation(line: 546, column: 43, scope: !8704)
!8707 = !DILocation(line: 546, column: 6, scope: !8689)
!8708 = !DILocation(line: 547, column: 3, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8710, file: !8239, line: 547, column: 3)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !8239, line: 547, column: 3)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !8239, line: 547, column: 3)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !8239, line: 547, column: 3)
!8713 = distinct !DILexicalBlock(scope: !8704, file: !8239, line: 546, column: 49)
!8714 = !DILocation(line: 548, column: 2, scope: !8713)
!8715 = !DILocation(line: 549, column: 12, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8689, file: !8239, line: 549, column: 6)
!8717 = !DILocation(line: 549, column: 17, scope: !8716)
!8718 = !DILocation(line: 549, column: 43, scope: !8716)
!8719 = !DILocation(line: 549, column: 6, scope: !8689)
!8720 = !DILocation(line: 550, column: 3, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !8239, line: 550, column: 3)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !8239, line: 550, column: 3)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !8239, line: 550, column: 3)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !8239, line: 550, column: 3)
!8725 = distinct !DILexicalBlock(scope: !8716, file: !8239, line: 549, column: 49)
!8726 = !DILocation(line: 551, column: 2, scope: !8725)
!8727 = !DILocation(line: 567, column: 12, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8689, file: !8239, line: 567, column: 6)
!8729 = !DILocation(line: 567, column: 17, scope: !8728)
!8730 = !DILocation(line: 567, column: 38, scope: !8728)
!8731 = !DILocation(line: 567, column: 6, scope: !8689)
!8732 = !DILocation(line: 568, column: 3, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !8239, line: 568, column: 3)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !8239, line: 568, column: 3)
!8735 = distinct !DILexicalBlock(scope: !8736, file: !8239, line: 568, column: 3)
!8736 = distinct !DILexicalBlock(scope: !8737, file: !8239, line: 568, column: 3)
!8737 = distinct !DILexicalBlock(scope: !8728, file: !8239, line: 567, column: 44)
!8738 = !DILocation(line: 569, column: 2, scope: !8737)
!8739 = !DILocation(line: 570, column: 12, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8689, file: !8239, line: 570, column: 6)
!8741 = !DILocation(line: 570, column: 17, scope: !8740)
!8742 = !DILocation(line: 570, column: 39, scope: !8740)
!8743 = !DILocation(line: 570, column: 6, scope: !8689)
!8744 = !DILocation(line: 571, column: 3, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !8239, line: 571, column: 3)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !8239, line: 571, column: 3)
!8747 = distinct !DILexicalBlock(scope: !8748, file: !8239, line: 571, column: 3)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !8239, line: 571, column: 3)
!8749 = distinct !DILexicalBlock(scope: !8740, file: !8239, line: 570, column: 45)
!8750 = !DILocation(line: 572, column: 2, scope: !8749)
!8751 = !DILocation(line: 573, column: 12, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8689, file: !8239, line: 573, column: 6)
!8753 = !DILocation(line: 573, column: 17, scope: !8752)
!8754 = !DILocation(line: 573, column: 42, scope: !8752)
!8755 = !DILocation(line: 573, column: 6, scope: !8689)
!8756 = !DILocation(line: 574, column: 3, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8239, line: 574, column: 3)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !8239, line: 574, column: 3)
!8759 = distinct !DILexicalBlock(scope: !8760, file: !8239, line: 574, column: 3)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !8239, line: 574, column: 3)
!8761 = distinct !DILexicalBlock(scope: !8752, file: !8239, line: 573, column: 48)
!8762 = !DILocation(line: 575, column: 2, scope: !8761)
!8763 = !DILocation(line: 576, column: 12, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8689, file: !8239, line: 576, column: 6)
!8765 = !DILocation(line: 576, column: 17, scope: !8764)
!8766 = !DILocation(line: 576, column: 44, scope: !8764)
!8767 = !DILocation(line: 576, column: 6, scope: !8689)
!8768 = !DILocation(line: 577, column: 3, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8770, file: !8239, line: 577, column: 3)
!8770 = distinct !DILexicalBlock(scope: !8771, file: !8239, line: 577, column: 3)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !8239, line: 577, column: 3)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !8239, line: 577, column: 3)
!8773 = distinct !DILexicalBlock(scope: !8764, file: !8239, line: 576, column: 50)
!8774 = !DILocation(line: 578, column: 2, scope: !8773)
!8775 = !DILocation(line: 581, column: 12, scope: !8689)
!8776 = !DILocation(line: 583, column: 2, scope: !8689)
!8777 = distinct !DISubprogram(name: "debug_monitor", scope: !8239, file: !8239, line: 632, type: !8778, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{null, !3365, !8312}
!8780 = !{!8781, !8782}
!8781 = !DILocalVariable(name: "esf", arg: 1, scope: !8777, file: !8239, line: 632, type: !3365)
!8782 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8777, file: !8239, line: 632, type: !8312)
!8783 = !DILocation(line: 0, scope: !8777)
!8784 = !DILocation(line: 634, column: 15, scope: !8777)
!8785 = !DILocation(line: 636, column: 2, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !8239, line: 636, column: 2)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !8239, line: 636, column: 2)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !8239, line: 636, column: 2)
!8789 = distinct !DILexicalBlock(scope: !8777, file: !8239, line: 636, column: 2)
!8790 = !DILocation(line: 652, column: 1, scope: !8777)
!8791 = distinct !DISubprogram(name: "reserved_exception", scope: !8239, file: !8239, line: 776, type: !8792, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8794)
!8792 = !DISubroutineType(types: !8793)
!8793 = !{null, !8692, !103}
!8794 = !{!8795, !8796}
!8795 = !DILocalVariable(name: "esf", arg: 1, scope: !8791, file: !8239, line: 776, type: !8692)
!8796 = !DILocalVariable(name: "fault", arg: 2, scope: !8791, file: !8239, line: 776, type: !103)
!8797 = !DILocation(line: 0, scope: !8791)
!8798 = !DILocation(line: 780, column: 2, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !8239, line: 780, column: 2)
!8800 = distinct !DILexicalBlock(scope: !8801, file: !8239, line: 780, column: 2)
!8801 = distinct !DILexicalBlock(scope: !8802, file: !8239, line: 780, column: 2)
!8802 = distinct !DILexicalBlock(scope: !8791, file: !8239, line: 780, column: 2)
!8803 = !DILocation(line: 783, column: 1, scope: !8791)
!8804 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8239, file: !8239, line: 658, type: !8805, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !8807)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!122, !3365}
!8807 = !{!8808, !8809, !8810}
!8808 = !DILocalVariable(name: "esf", arg: 1, scope: !8804, file: !8239, line: 658, type: !3365)
!8809 = !DILocalVariable(name: "ret_addr", scope: !8804, file: !8239, line: 660, type: !3137)
!8810 = !DILocalVariable(name: "fault_insn", scope: !8804, file: !8239, line: 686, type: !181)
!8811 = !DILocation(line: 0, scope: !8804)
!8812 = !DILocation(line: 660, column: 46, scope: !8804)
!8813 = !DILocation(line: 660, column: 23, scope: !8804)
!8814 = !DILocation(line: 682, column: 11, scope: !8804)
!8815 = !DILocation(line: 271, column: 3, scope: !8816, inlinedAt: !8817)
!8816 = distinct !DISubprogram(name: "__DSB", scope: !7930, file: !7930, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !2571)
!8817 = distinct !DILocation(line: 683, column: 2, scope: !8804)
!8818 = !{i64 3738113}
!8819 = !DILocation(line: 260, column: 3, scope: !8820, inlinedAt: !8821)
!8820 = distinct !DISubprogram(name: "__ISB", scope: !7930, file: !7930, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !2571)
!8821 = distinct !DILocation(line: 684, column: 2, scope: !8804)
!8822 = !{i64 3737830}
!8823 = !DILocation(line: 686, column: 35, scope: !8804)
!8824 = !DILocation(line: 686, column: 24, scope: !8804)
!8825 = !DILocation(line: 688, column: 11, scope: !8804)
!8826 = !DILocation(line: 271, column: 3, scope: !8816, inlinedAt: !8827)
!8827 = distinct !DILocation(line: 689, column: 2, scope: !8804)
!8828 = !DILocation(line: 260, column: 3, scope: !8820, inlinedAt: !8829)
!8829 = distinct !DILocation(line: 690, column: 2, scope: !8804)
!8830 = !DILocation(line: 693, column: 45, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8804, file: !8239, line: 693, column: 6)
!8832 = !DILocation(line: 699, column: 1, scope: !8804)
!8833 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8239, file: !8239, line: 1107, type: !323, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3337, retainedNodes: !2571)
!8834 = !DILocation(line: 1111, column: 11, scope: !8833)
!8835 = !DILocation(line: 1136, column: 1, scope: !8833)
!8836 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8837, file: !8837, line: 26, type: !323, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3408, retainedNodes: !8838)
!8837 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8838 = !{!8839}
!8839 = !DILocalVariable(name: "irq", scope: !8836, file: !8837, line: 28, type: !103)
!8840 = !DILocation(line: 0, scope: !8836)
!8841 = !DILocation(line: 30, column: 2, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8836, file: !8837, line: 30, column: 2)
!8843 = !DILocation(line: 31, column: 3, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !8837, line: 30, column: 39)
!8845 = distinct !DILexicalBlock(scope: !8842, file: !8837, line: 30, column: 2)
!8846 = !DILocation(line: 30, column: 35, scope: !8845)
!8847 = !DILocation(line: 30, column: 13, scope: !8845)
!8848 = distinct !{!8848, !8841, !8849}
!8849 = !DILocation(line: 32, column: 2, scope: !8842)
!8850 = !DILocation(line: 33, column: 1, scope: !8836)
!8851 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7970, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3408, retainedNodes: !8852)
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8851, file: !992, line: 1814, type: !1268)
!8854 = !DILocalVariable(name: "priority", arg: 2, scope: !8851, file: !992, line: 1814, type: !111)
!8855 = !DILocation(line: 0, scope: !8851)
!8856 = !DILocation(line: 1816, column: 7, scope: !8851)
!8857 = !DILocation(line: 0, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8851, file: !992, line: 1816, column: 7)
!8859 = !DILocation(line: 1824, column: 1, scope: !8851)
!8860 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8861, file: !8861, line: 27, type: !8862, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !8967)
!8861 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8862 = !DISubroutineType(types: !8863)
!8863 = !{null, !8864}
!8864 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !8865)
!8865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8866, size: 32)
!8866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !8867)
!8867 = !{!8868, !8926, !8938, !8939, !8940, !8941, !8947, !8962}
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8866, file: !199, line: 247, baseType: !8869, size: 384)
!8869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !8870)
!8870 = !{!8871, !8895, !8902, !8903, !8904, !8913, !8914, !8915}
!8871 = !DIDerivedType(tag: DW_TAG_member, scope: !8869, file: !199, line: 60, baseType: !8872, size: 64)
!8872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8869, file: !199, line: 60, size: 64, elements: !8873)
!8873 = !{!8874, !8889}
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8872, file: !199, line: 61, baseType: !8875, size: 64)
!8875 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !8876)
!8876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !8877)
!8877 = !{!8878, !8884}
!8878 = !DIDerivedType(tag: DW_TAG_member, scope: !8876, file: !136, line: 38, baseType: !8879, size: 32)
!8879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8876, file: !136, line: 38, size: 32, elements: !8880)
!8880 = !{!8881, !8883}
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8879, file: !136, line: 39, baseType: !8882, size: 32)
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8876, size: 32)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8879, file: !136, line: 40, baseType: !8882, size: 32)
!8884 = !DIDerivedType(tag: DW_TAG_member, scope: !8876, file: !136, line: 42, baseType: !8885, size: 32, offset: 32)
!8885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8876, file: !136, line: 42, size: 32, elements: !8886)
!8886 = !{!8887, !8888}
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8885, file: !136, line: 43, baseType: !8882, size: 32)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8885, file: !136, line: 44, baseType: !8882, size: 32)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8872, file: !199, line: 62, baseType: !8890, size: 64)
!8890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !8891)
!8891 = !{!8892}
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8890, file: !211, line: 50, baseType: !8893, size: 64)
!8893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8894, size: 64, elements: !216)
!8894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8890, size: 32)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8869, file: !199, line: 68, baseType: !8896, size: 32, offset: 64)
!8896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8897, size: 32)
!8897 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !8898)
!8898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !8899)
!8899 = !{!8900}
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8898, file: !131, line: 232, baseType: !8901, size: 64)
!8901 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !8876)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8869, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8869, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!8904 = !DIDerivedType(tag: DW_TAG_member, scope: !8869, file: !199, line: 90, baseType: !8905, size: 16, offset: 112)
!8905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8869, file: !199, line: 90, size: 16, elements: !8906)
!8906 = !{!8907, !8912}
!8907 = !DIDerivedType(tag: DW_TAG_member, scope: !8905, file: !199, line: 91, baseType: !8908, size: 16)
!8908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8905, file: !199, line: 91, size: 16, elements: !8909)
!8909 = !{!8910, !8911}
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8908, file: !199, line: 96, baseType: !229, size: 8)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8908, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8905, file: !199, line: 100, baseType: !181, size: 16)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8869, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8869, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8869, file: !199, line: 131, baseType: !8916, size: 192, offset: 192)
!8916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !8917)
!8917 = !{!8918, !8919, !8925}
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8916, file: !131, line: 245, baseType: !8875, size: 64)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8916, file: !131, line: 246, baseType: !8920, size: 32, offset: 64)
!8920 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !8921)
!8921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8922, size: 32)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !8924}
!8924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8916, size: 32)
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8916, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8866, file: !199, line: 250, baseType: !8927, size: 288, offset: 384)
!8927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8928)
!8928 = !{!8929, !8930, !8931, !8932, !8933, !8934, !8935, !8936, !8937}
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8927, file: !248, line: 26, baseType: !111, size: 32)
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8927, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8927, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8927, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8927, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8927, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8927, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8927, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8927, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8866, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8866, file: !199, line: 256, baseType: !8897, size: 64, offset: 704)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8866, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8866, file: !199, line: 300, baseType: !8942, size: 96, offset: 800)
!8942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !8943)
!8943 = !{!8944, !8945, !8946}
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8942, file: !199, line: 153, baseType: !22, size: 32)
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8942, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8942, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8866, file: !199, line: 325, baseType: !8948, size: 32, offset: 896)
!8948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8949, size: 32)
!8949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !8950)
!8950 = !{!8951, !8957, !8958}
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8949, file: !127, line: 5074, baseType: !8952, size: 96)
!8952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !8953)
!8953 = !{!8954, !8955, !8956}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8952, file: !274, line: 57, baseType: !277, size: 32)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8952, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8952, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8949, file: !127, line: 5075, baseType: !8897, size: 64, offset: 96)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8949, file: !127, line: 5076, baseType: !8959, size: 32, offset: 160)
!8959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !8960)
!8960 = !{!8961}
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8959, file: !152, line: 52, baseType: !22, size: 32)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8866, file: !199, line: 343, baseType: !8963, size: 64, offset: 928)
!8963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !8964)
!8964 = !{!8965, !8966}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8963, file: !248, line: 63, baseType: !111, size: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8963, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!8967 = !{!8968}
!8968 = !DILocalVariable(name: "thread", arg: 1, scope: !8860, file: !8861, line: 27, type: !8864)
!8969 = !DILocation(line: 0, scope: !8860)
!8970 = !DILocation(line: 29, column: 6, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8860, file: !8861, line: 29, column: 6)
!8972 = !DILocation(line: 29, column: 15, scope: !8971)
!8973 = !DILocation(line: 29, column: 6, scope: !8860)
!8974 = !DILocation(line: 1031, column: 3, scope: !8975, inlinedAt: !8978)
!8975 = distinct !DISubprogram(name: "__get_IPSR", scope: !7930, file: !7930, line: 1027, type: !8017, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !8976)
!8976 = !{!8977}
!8977 = !DILocalVariable(name: "result", scope: !8975, file: !7930, line: 1029, type: !111)
!8978 = distinct !DILocation(line: 48, column: 10, scope: !8979, inlinedAt: !8983)
!8979 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8980, file: !8980, line: 46, type: !8981, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !2571)
!8980 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8981 = !DISubroutineType(types: !8982)
!8982 = !{!122}
!8983 = distinct !DILocation(line: 30, column: 7, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !8861, line: 30, column: 7)
!8985 = distinct !DILexicalBlock(scope: !8971, file: !8861, line: 29, column: 26)
!8986 = !{i64 3726961}
!8987 = !DILocation(line: 0, scope: !8975, inlinedAt: !8978)
!8988 = !DILocation(line: 48, column: 9, scope: !8979, inlinedAt: !8983)
!8989 = !DILocation(line: 30, column: 7, scope: !8985)
!8990 = !DILocation(line: 42, column: 14, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8984, file: !8861, line: 30, column: 25)
!8992 = !DILocation(line: 48, column: 15, scope: !8991)
!8993 = !DILocation(line: 49, column: 3, scope: !8991)
!8994 = !DILocation(line: 52, column: 2, scope: !8860)
!8995 = !DILocation(line: 53, column: 1, scope: !8860)
!8996 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !854, file: !854, line: 127, type: !323, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !847, retainedNodes: !2571)
!8997 = !DILocation(line: 134, column: 2, scope: !8996)
!8998 = !DILocation(line: 156, column: 1, scope: !8996)
!8999 = !DILocation(line: 0, scope: !853)
!9000 = !DILocation(line: 289, column: 36, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !853, file: !854, line: 285, column: 2)
!9002 = !DILocation(line: 289, column: 42, scope: !9001)
!9003 = !DILocation(line: 300, column: 36, scope: !853)
!9004 = !DILocation(line: 301, column: 35, scope: !853)
!9005 = !DILocation(line: 302, column: 37, scope: !853)
!9006 = !DILocation(line: 311, column: 2, scope: !853)
!9007 = !DILocation(line: 316, column: 1, scope: !853)
!9008 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !1020, file: !1020, line: 180, type: !323, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2571)
!9009 = !DILocation(line: 188, column: 12, scope: !9008)
!9010 = !DILocation(line: 271, column: 3, scope: !9011, inlinedAt: !9012)
!9011 = distinct !DISubprogram(name: "__DSB", scope: !7930, file: !7930, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2571)
!9012 = distinct !DILocation(line: 192, column: 2, scope: !9008)
!9013 = !{i64 3917851}
!9014 = !DILocation(line: 260, column: 3, scope: !9015, inlinedAt: !9016)
!9015 = distinct !DISubprogram(name: "__ISB", scope: !7930, file: !7930, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2571)
!9016 = distinct !DILocation(line: 193, column: 2, scope: !9008)
!9017 = !{i64 3917568}
!9018 = !DILocation(line: 194, column: 1, scope: !9008)
!9019 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !1020, file: !1020, line: 199, type: !323, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2571)
!9020 = !DILocation(line: 282, column: 3, scope: !9021, inlinedAt: !9022)
!9021 = distinct !DISubprogram(name: "__DMB", scope: !7930, file: !7930, line: 280, type: !323, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !2571)
!9022 = distinct !DILocation(line: 202, column: 2, scope: !9019)
!9023 = !{i64 3918127}
!9024 = !DILocation(line: 205, column: 12, scope: !9019)
!9025 = !DILocation(line: 206, column: 1, scope: !9019)
!9026 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !1020, file: !1020, line: 275, type: !9027, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9040)
!9027 = !DISubroutineType(types: !9028)
!9028 = !{null, !9029, !2356, !8206, !8206}
!9029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9030, size: 32)
!9030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9031)
!9031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !966, line: 52, size: 96, elements: !9032)
!9032 = !{!9033, !9034, !9035}
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9031, file: !966, line: 53, baseType: !22, size: 32)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9031, file: !966, line: 54, baseType: !156, size: 32, offset: 32)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9031, file: !966, line: 55, baseType: !9036, size: 32, offset: 64)
!9036 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !972, line: 151, baseType: !9037)
!9037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !972, line: 149, size: 32, elements: !9038)
!9038 = !{!9039}
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9037, file: !972, line: 150, baseType: !111, size: 32)
!9040 = !{!9041, !9042, !9043, !9044}
!9041 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9026, file: !1020, line: 276, type: !9029)
!9042 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9026, file: !1020, line: 276, type: !2356)
!9043 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9026, file: !1020, line: 277, type: !8206)
!9044 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9026, file: !1020, line: 277, type: !8206)
!9045 = !DILocation(line: 0, scope: !9026)
!9046 = !DILocation(line: 279, column: 6, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9026, file: !1020, line: 279, column: 6)
!9048 = !DILocation(line: 280, column: 57, scope: !9047)
!9049 = !DILocation(line: 279, column: 6, scope: !9026)
!9050 = !DILocation(line: 282, column: 3, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !1020, line: 282, column: 3)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !1020, line: 282, column: 3)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !1020, line: 282, column: 3)
!9054 = distinct !DILexicalBlock(scope: !9047, file: !1020, line: 280, column: 69)
!9055 = !DILocation(line: 285, column: 1, scope: !9026)
!9056 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9057, file: !9057, line: 220, type: !9058, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9060)
!9057 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9058 = !DISubroutineType(types: !9059)
!9059 = !{!103, !9029, !2356, !8206, !8206}
!9060 = !{!9061, !9062, !9063, !9064, !9065}
!9061 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9056, file: !9057, line: 221, type: !9029)
!9062 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9056, file: !9057, line: 221, type: !2356)
!9063 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9056, file: !9057, line: 222, type: !8206)
!9064 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9056, file: !9057, line: 223, type: !8206)
!9065 = !DILocalVariable(name: "mpu_reg_index", scope: !9056, file: !9057, line: 225, type: !103)
!9066 = !DILocation(line: 0, scope: !9056)
!9067 = !DILocation(line: 225, column: 22, scope: !9056)
!9068 = !DILocation(line: 233, column: 18, scope: !9056)
!9069 = !DILocation(line: 236, column: 23, scope: !9056)
!9070 = !DILocation(line: 236, column: 21, scope: !9056)
!9071 = !DILocation(line: 238, column: 2, scope: !9056)
!9072 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !1020, file: !1020, line: 105, type: !9073, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9075)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{!103, !9029, !166, !166, !122}
!9075 = !{!9076, !9077, !9078, !9079, !9080, !9081}
!9076 = !DILocalVariable(name: "regions", arg: 1, scope: !9072, file: !1020, line: 106, type: !9029)
!9077 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9072, file: !1020, line: 106, type: !166)
!9078 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9072, file: !1020, line: 106, type: !166)
!9079 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9072, file: !1020, line: 107, type: !122)
!9080 = !DILocalVariable(name: "i", scope: !9072, file: !1020, line: 109, type: !103)
!9081 = !DILocalVariable(name: "reg_index", scope: !9072, file: !1020, line: 110, type: !103)
!9082 = !DILocation(line: 0, scope: !9072)
!9083 = !DILocation(line: 110, column: 18, scope: !9072)
!9084 = !DILocation(line: 112, column: 16, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !1020, line: 112, column: 2)
!9086 = distinct !DILexicalBlock(scope: !9072, file: !1020, line: 112, column: 2)
!9087 = !DILocation(line: 112, column: 2, scope: !9086)
!9088 = !DILocation(line: 113, column: 7, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9090, file: !1020, line: 113, column: 7)
!9090 = distinct !DILexicalBlock(scope: !9085, file: !1020, line: 112, column: 36)
!9091 = !DILocation(line: 113, column: 18, scope: !9089)
!9092 = !DILocation(line: 113, column: 23, scope: !9089)
!9093 = !DILocation(line: 113, column: 7, scope: !9090)
!9094 = !DILocation(line: 118, column: 23, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9090, file: !1020, line: 118, column: 7)
!9096 = !DILocation(line: 119, column: 7, scope: !9095)
!9097 = !DILocation(line: 118, column: 7, scope: !9090)
!9098 = !DILocation(line: 120, column: 4, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !1020, line: 120, column: 4)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !1020, line: 120, column: 4)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !1020, line: 120, column: 4)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !1020, line: 120, column: 4)
!9103 = distinct !DILexicalBlock(scope: !9095, file: !1020, line: 119, column: 45)
!9104 = !DILocation(line: 121, column: 4, scope: !9103)
!9105 = !DILocation(line: 124, column: 36, scope: !9090)
!9106 = !DILocation(line: 124, column: 15, scope: !9090)
!9107 = !DILocation(line: 126, column: 17, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9090, file: !1020, line: 126, column: 7)
!9109 = !DILocation(line: 126, column: 7, scope: !9090)
!9110 = !DILocation(line: 131, column: 12, scope: !9090)
!9111 = !DILocation(line: 132, column: 2, scope: !9090)
!9112 = !DILocation(line: 112, column: 32, scope: !9085)
!9113 = distinct !{!9113, !9087, !9114}
!9114 = !DILocation(line: 132, column: 2, scope: !9086)
!9115 = !DILocation(line: 135, column: 1, scope: !9072)
!9116 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9057, file: !9057, line: 63, type: !9117, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9119)
!9117 = !DISubroutineType(types: !9118)
!9118 = !{!103, !9029}
!9119 = !{!9120, !9121}
!9120 = !DILocalVariable(name: "part", arg: 1, scope: !9116, file: !9057, line: 63, type: !9029)
!9121 = !DILocalVariable(name: "partition_is_valid", scope: !9116, file: !9057, line: 70, type: !103)
!9122 = !DILocation(line: 0, scope: !9116)
!9123 = !DILocation(line: 71, column: 11, scope: !9116)
!9124 = !DILocation(line: 71, column: 37, scope: !9116)
!9125 = !DILocation(line: 72, column: 3, scope: !9116)
!9126 = !DILocation(line: 71, column: 30, scope: !9116)
!9127 = !DILocation(line: 75, column: 11, scope: !9116)
!9128 = !DILocation(line: 75, column: 17, scope: !9116)
!9129 = !DILocation(line: 75, column: 38, scope: !9116)
!9130 = !DILocation(line: 77, column: 2, scope: !9116)
!9131 = distinct !DISubprogram(name: "mpu_configure_region", scope: !1020, file: !1020, line: 79, type: !9132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9134)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!103, !2356, !9029}
!9134 = !{!9135, !9136, !9137}
!9135 = !DILocalVariable(name: "index", arg: 1, scope: !9131, file: !1020, line: 79, type: !2356)
!9136 = !DILocalVariable(name: "new_region", arg: 2, scope: !9131, file: !1020, line: 80, type: !9029)
!9137 = !DILocalVariable(name: "region_conf", scope: !9131, file: !1020, line: 82, type: !1009)
!9138 = !DILocation(line: 0, scope: !9131)
!9139 = !DILocation(line: 82, column: 2, scope: !9131)
!9140 = !DILocation(line: 82, column: 24, scope: !9131)
!9141 = !DILocation(line: 87, column: 33, scope: !9131)
!9142 = !DILocation(line: 87, column: 14, scope: !9131)
!9143 = !DILocation(line: 87, column: 19, scope: !9131)
!9144 = !DILocation(line: 91, column: 55, scope: !9131)
!9145 = !DILocation(line: 92, column: 16, scope: !9131)
!9146 = !DILocation(line: 92, column: 53, scope: !9131)
!9147 = !DILocation(line: 91, column: 2, scope: !9131)
!9148 = !DILocation(line: 95, column: 9, scope: !9131)
!9149 = !DILocation(line: 97, column: 1, scope: !9131)
!9150 = !DILocation(line: 95, column: 2, scope: !9131)
!9151 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9057, file: !9057, line: 113, type: !9152, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9157)
!9152 = !DISubroutineType(types: !9153)
!9153 = !{null, !9154, !9155, !111, !111}
!9154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9156, size: 32)
!9156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9036)
!9157 = !{!9158, !9159, !9160, !9161}
!9158 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9151, file: !9057, line: 114, type: !9154)
!9159 = !DILocalVariable(name: "attr", arg: 2, scope: !9151, file: !9057, line: 115, type: !9155)
!9160 = !DILocalVariable(name: "base", arg: 3, scope: !9151, file: !9057, line: 115, type: !111)
!9161 = !DILocalVariable(name: "size", arg: 4, scope: !9151, file: !9057, line: 115, type: !111)
!9162 = !DILocation(line: 0, scope: !9151)
!9163 = !DILocation(line: 127, column: 23, scope: !9151)
!9164 = !DILocation(line: 127, column: 35, scope: !9151)
!9165 = !DILocation(line: 127, column: 33, scope: !9151)
!9166 = !DILocation(line: 127, column: 10, scope: !9151)
!9167 = !DILocation(line: 127, column: 15, scope: !9151)
!9168 = !DILocation(line: 129, column: 1, scope: !9151)
!9169 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !1020, file: !1020, line: 57, type: !9170, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9172)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!103, !2356, !1007}
!9172 = !{!9173, !9174}
!9173 = !DILocalVariable(name: "index", arg: 1, scope: !9169, file: !1020, line: 57, type: !2356)
!9174 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9169, file: !1020, line: 58, type: !1007)
!9175 = !DILocation(line: 0, scope: !9169)
!9176 = !DILocation(line: 61, column: 6, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9169, file: !1020, line: 61, column: 6)
!9178 = !DILocation(line: 61, column: 12, scope: !9177)
!9179 = !DILocation(line: 61, column: 6, scope: !9169)
!9180 = !DILocation(line: 64, column: 3, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !1020, line: 64, column: 3)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !1020, line: 64, column: 3)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !1020, line: 64, column: 3)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !1020, line: 64, column: 3)
!9185 = distinct !DILexicalBlock(scope: !9177, file: !1020, line: 61, column: 40)
!9186 = !DILocation(line: 65, column: 3, scope: !9185)
!9187 = !DILocation(line: 71, column: 2, scope: !9169)
!9188 = !DILocation(line: 73, column: 2, scope: !9169)
!9189 = !DILocation(line: 74, column: 1, scope: !9169)
!9190 = distinct !DISubprogram(name: "region_init", scope: !9057, file: !9057, line: 29, type: !9191, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9193)
!9191 = !DISubroutineType(types: !9192)
!9192 = !{null, !8206, !1007}
!9193 = !{!9194, !9195}
!9194 = !DILocalVariable(name: "index", arg: 1, scope: !9190, file: !9057, line: 29, type: !8206)
!9195 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9190, file: !9057, line: 30, type: !1007)
!9196 = !DILocation(line: 0, scope: !9190)
!9197 = !DILocation(line: 33, column: 2, scope: !9190)
!9198 = !DILocation(line: 47, column: 28, scope: !9190)
!9199 = !DILocation(line: 47, column: 33, scope: !9190)
!9200 = !DILocation(line: 48, column: 26, scope: !9190)
!9201 = !DILocation(line: 47, column: 12, scope: !9190)
!9202 = !DILocation(line: 49, column: 32, scope: !9190)
!9203 = !DILocation(line: 49, column: 37, scope: !9190)
!9204 = !DILocation(line: 49, column: 12, scope: !9190)
!9205 = !DILocation(line: 53, column: 1, scope: !9190)
!9206 = distinct !DISubprogram(name: "set_region_number", scope: !9207, file: !9207, line: 32, type: !8027, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9208)
!9207 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9208 = !{!9209}
!9209 = !DILocalVariable(name: "index", arg: 1, scope: !9206, file: !9207, line: 32, type: !111)
!9210 = !DILocation(line: 0, scope: !9206)
!9211 = !DILocation(line: 34, column: 11, scope: !9206)
!9212 = !DILocation(line: 35, column: 1, scope: !9206)
!9213 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9057, file: !9057, line: 88, type: !9214, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9216)
!9214 = !DISubroutineType(types: !9215)
!9215 = !{!111, !111}
!9216 = !{!9217}
!9217 = !DILocalVariable(name: "size", arg: 1, scope: !9213, file: !9057, line: 88, type: !111)
!9218 = !DILocation(line: 0, scope: !9213)
!9219 = !DILocation(line: 91, column: 11, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9213, file: !9057, line: 91, column: 6)
!9221 = !DILocation(line: 91, column: 6, scope: !9213)
!9222 = !DILocation(line: 100, column: 11, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9213, file: !9057, line: 100, column: 6)
!9224 = !DILocation(line: 100, column: 6, scope: !9213)
!9225 = !DILocation(line: 104, column: 35, scope: !9213)
!9226 = !DILocation(line: 104, column: 16, scope: !9213)
!9227 = !DILocation(line: 104, column: 50, scope: !9213)
!9228 = !DILocation(line: 104, column: 72, scope: !9213)
!9229 = !DILocation(line: 104, column: 2, scope: !9213)
!9230 = !DILocation(line: 106, column: 1, scope: !9213)
!9231 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !1020, file: !1020, line: 307, type: !9232, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9234)
!9232 = !DISubroutineType(types: !9233)
!9233 = !{null, !9029, !166}
!9234 = !{!9235, !9236}
!9235 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9231, file: !1020, line: 308, type: !9029)
!9236 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9231, file: !1020, line: 308, type: !166)
!9237 = !DILocation(line: 0, scope: !9231)
!9238 = !DILocation(line: 310, column: 6, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9231, file: !1020, line: 310, column: 6)
!9240 = !DILocation(line: 311, column: 3, scope: !9239)
!9241 = !DILocation(line: 310, column: 6, scope: !9231)
!9242 = !DILocation(line: 313, column: 3, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !1020, line: 313, column: 3)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !1020, line: 313, column: 3)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !1020, line: 313, column: 3)
!9246 = distinct !DILexicalBlock(scope: !9239, file: !1020, line: 311, column: 15)
!9247 = !DILocation(line: 316, column: 1, scope: !9231)
!9248 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9057, file: !9057, line: 249, type: !9249, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9251)
!9249 = !DISubroutineType(types: !9250)
!9250 = !{!103, !9029, !166}
!9251 = !{!9252, !9253, !9254, !9255}
!9252 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9248, file: !9057, line: 250, type: !9029)
!9253 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9248, file: !9057, line: 250, type: !166)
!9254 = !DILocalVariable(name: "mpu_reg_index", scope: !9248, file: !9057, line: 252, type: !103)
!9255 = !DILocalVariable(name: "i", scope: !9256, file: !9057, line: 264, type: !103)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !9057, line: 264, column: 3)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !9057, line: 261, column: 32)
!9258 = distinct !DILexicalBlock(scope: !9248, file: !9057, line: 261, column: 6)
!9259 = !DILocation(line: 0, scope: !9248)
!9260 = !DILocation(line: 252, column: 22, scope: !9248)
!9261 = !DILocation(line: 258, column: 18, scope: !9248)
!9262 = !DILocation(line: 261, column: 20, scope: !9258)
!9263 = !DILocation(line: 261, column: 6, scope: !9248)
!9264 = !DILocation(line: 0, scope: !9256)
!9265 = !DILocation(line: 265, column: 4, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !9057, line: 264, column: 59)
!9267 = distinct !DILexicalBlock(scope: !9256, file: !9057, line: 264, column: 3)
!9268 = !DILocation(line: 264, column: 55, scope: !9267)
!9269 = !DILocation(line: 264, column: 33, scope: !9267)
!9270 = !DILocation(line: 264, column: 3, scope: !9256)
!9271 = distinct !{!9271, !9270, !9272}
!9272 = !DILocation(line: 266, column: 3, scope: !9256)
!9273 = !DILocation(line: 269, column: 2, scope: !9248)
!9274 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9275, file: !9275, line: 218, type: !8027, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9276)
!9275 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9276 = !{!9277}
!9277 = !DILocalVariable(name: "rnr", arg: 1, scope: !9274, file: !9275, line: 218, type: !111)
!9278 = !DILocation(line: 0, scope: !9274)
!9279 = !DILocation(line: 220, column: 12, scope: !9274)
!9280 = !DILocation(line: 221, column: 13, scope: !9274)
!9281 = !DILocation(line: 222, column: 1, scope: !9274)
!9282 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !1020, file: !1020, line: 326, type: !9283, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !987, retainedNodes: !9285)
!9283 = !DISubroutineType(types: !9284)
!9284 = !{!103}
!9285 = !{!9286}
!9286 = !DILocalVariable(name: "r_index", scope: !9282, file: !1020, line: 328, type: !111)
!9287 = !DILocation(line: 330, column: 17, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9282, file: !1020, line: 330, column: 6)
!9289 = !DILocation(line: 330, column: 29, scope: !9288)
!9290 = !DILocation(line: 330, column: 6, scope: !9282)
!9291 = !DILocation(line: 337, column: 3, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !1020, line: 337, column: 3)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !1020, line: 337, column: 3)
!9294 = distinct !DILexicalBlock(scope: !9295, file: !1020, line: 337, column: 3)
!9295 = distinct !DILexicalBlock(scope: !9288, file: !1020, line: 330, column: 50)
!9296 = !DILocation(line: 347, column: 2, scope: !9282)
!9297 = !DILocation(line: 0, scope: !9282)
!9298 = !DILocation(line: 364, column: 29, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9300, file: !1020, line: 364, column: 2)
!9300 = distinct !DILexicalBlock(scope: !9282, file: !1020, line: 364, column: 2)
!9301 = !DILocation(line: 364, column: 2, scope: !9300)
!9302 = !DILocation(line: 365, column: 25, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9299, file: !1020, line: 364, column: 66)
!9304 = !DILocation(line: 365, column: 3, scope: !9303)
!9305 = !DILocation(line: 364, column: 62, scope: !9299)
!9306 = distinct !{!9306, !9301, !9307}
!9307 = !DILocation(line: 366, column: 2, scope: !9300)
!9308 = !DILocation(line: 369, column: 23, scope: !9282)
!9309 = !DILocation(line: 369, column: 21, scope: !9282)
!9310 = !DILocation(line: 372, column: 2, scope: !9282)
!9311 = !DILocation(line: 433, column: 2, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !1020, line: 433, column: 2)
!9313 = distinct !DILexicalBlock(scope: !9282, file: !1020, line: 433, column: 2)
!9314 = !DILocation(line: 433, column: 2, scope: !9313)
!9315 = !DILocation(line: 433, column: 2, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9312, file: !1020, line: 433, column: 2)
!9317 = !DILocation(line: 444, column: 1, scope: !9282)
!9318 = distinct !DISubprogram(name: "strcpy", scope: !9319, file: !9319, line: 20, type: !9320, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9324)
!9319 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9320 = !DISubroutineType(types: !9321)
!9321 = !{!160, !9322, !9323}
!9322 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !160)
!9323 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!9324 = !{!9325, !9326, !9327}
!9325 = !DILocalVariable(name: "d", arg: 1, scope: !9318, file: !9319, line: 20, type: !9322)
!9326 = !DILocalVariable(name: "s", arg: 2, scope: !9318, file: !9319, line: 20, type: !9323)
!9327 = !DILocalVariable(name: "dest", scope: !9318, file: !9319, line: 22, type: !160)
!9328 = !DILocation(line: 0, scope: !9318)
!9329 = !DILocation(line: 24, column: 9, scope: !9318)
!9330 = !DILocation(line: 24, column: 12, scope: !9318)
!9331 = !DILocation(line: 24, column: 2, scope: !9318)
!9332 = !DILocation(line: 25, column: 6, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9318, file: !9319, line: 24, column: 21)
!9334 = !DILocation(line: 26, column: 4, scope: !9333)
!9335 = !DILocation(line: 27, column: 4, scope: !9333)
!9336 = distinct !{!9336, !9331, !9337}
!9337 = !DILocation(line: 28, column: 2, scope: !9318)
!9338 = !DILocation(line: 30, column: 5, scope: !9318)
!9339 = !DILocation(line: 32, column: 2, scope: !9318)
!9340 = distinct !DISubprogram(name: "strncpy", scope: !9319, file: !9319, line: 42, type: !9341, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!160, !9322, !9323, !156}
!9343 = !{!9344, !9345, !9346, !9347}
!9344 = !DILocalVariable(name: "d", arg: 1, scope: !9340, file: !9319, line: 42, type: !9322)
!9345 = !DILocalVariable(name: "s", arg: 2, scope: !9340, file: !9319, line: 42, type: !9323)
!9346 = !DILocalVariable(name: "n", arg: 3, scope: !9340, file: !9319, line: 42, type: !156)
!9347 = !DILocalVariable(name: "dest", scope: !9340, file: !9319, line: 44, type: !160)
!9348 = !DILocation(line: 0, scope: !9340)
!9349 = !DILocation(line: 46, column: 12, scope: !9340)
!9350 = !DILocation(line: 46, column: 17, scope: !9340)
!9351 = !DILocation(line: 46, column: 20, scope: !9340)
!9352 = !DILocation(line: 46, column: 23, scope: !9340)
!9353 = !DILocation(line: 46, column: 2, scope: !9340)
!9354 = !DILocation(line: 47, column: 6, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9340, file: !9319, line: 46, column: 32)
!9356 = !DILocation(line: 48, column: 4, scope: !9355)
!9357 = !DILocation(line: 49, column: 4, scope: !9355)
!9358 = !DILocation(line: 50, column: 4, scope: !9355)
!9359 = distinct !{!9359, !9353, !9360}
!9360 = !DILocation(line: 51, column: 2, scope: !9340)
!9361 = !DILocation(line: 54, column: 6, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9340, file: !9319, line: 53, column: 16)
!9363 = !DILocation(line: 55, column: 4, scope: !9362)
!9364 = !DILocation(line: 56, column: 4, scope: !9362)
!9365 = !DILocation(line: 53, column: 11, scope: !9340)
!9366 = !DILocation(line: 53, column: 2, scope: !9340)
!9367 = distinct !{!9367, !9366, !9368}
!9368 = !DILocation(line: 57, column: 2, scope: !9340)
!9369 = !DILocation(line: 59, column: 2, scope: !9340)
!9370 = distinct !DISubprogram(name: "strchr", scope: !9319, file: !9319, line: 69, type: !9371, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9373)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!160, !108, !103}
!9373 = !{!9374, !9375, !9376}
!9374 = !DILocalVariable(name: "s", arg: 1, scope: !9370, file: !9319, line: 69, type: !108)
!9375 = !DILocalVariable(name: "c", arg: 2, scope: !9370, file: !9319, line: 69, type: !103)
!9376 = !DILocalVariable(name: "tmp", scope: !9370, file: !9319, line: 71, type: !110)
!9377 = !DILocation(line: 0, scope: !9370)
!9378 = !DILocation(line: 73, column: 2, scope: !9370)
!9379 = !DILocation(line: 73, column: 10, scope: !9370)
!9380 = !DILocation(line: 73, column: 13, scope: !9370)
!9381 = !DILocation(line: 73, column: 21, scope: !9370)
!9382 = !DILocation(line: 74, column: 4, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9370, file: !9319, line: 73, column: 38)
!9384 = distinct !{!9384, !9378, !9385}
!9385 = !DILocation(line: 75, column: 2, scope: !9370)
!9386 = !DILocation(line: 77, column: 9, scope: !9370)
!9387 = !DILocation(line: 77, column: 2, scope: !9370)
!9388 = distinct !DISubprogram(name: "strrchr", scope: !9319, file: !9319, line: 87, type: !9371, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9389)
!9389 = !{!9390, !9391, !9392}
!9390 = !DILocalVariable(name: "s", arg: 1, scope: !9388, file: !9319, line: 87, type: !108)
!9391 = !DILocalVariable(name: "c", arg: 2, scope: !9388, file: !9319, line: 87, type: !103)
!9392 = !DILocalVariable(name: "match", scope: !9388, file: !9319, line: 89, type: !160)
!9393 = !DILocation(line: 0, scope: !9388)
!9394 = !DILocation(line: 91, column: 2, scope: !9388)
!9395 = !DILocation(line: 92, column: 7, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9397, file: !9319, line: 92, column: 7)
!9397 = distinct !DILexicalBlock(scope: !9388, file: !9319, line: 91, column: 5)
!9398 = !DILocation(line: 92, column: 10, scope: !9396)
!9399 = !DILocation(line: 92, column: 7, scope: !9397)
!9400 = !DILocation(line: 95, column: 13, scope: !9388)
!9401 = !DILocation(line: 95, column: 2, scope: !9397)
!9402 = distinct !{!9402, !9394, !9403}
!9403 = !DILocation(line: 95, column: 15, scope: !9388)
!9404 = !DILocation(line: 97, column: 2, scope: !9388)
!9405 = distinct !DISubprogram(name: "strlen", scope: !9319, file: !9319, line: 107, type: !9406, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9408)
!9406 = !DISubroutineType(types: !9407)
!9407 = !{!156, !108}
!9408 = !{!9409, !9410}
!9409 = !DILocalVariable(name: "s", arg: 1, scope: !9405, file: !9319, line: 107, type: !108)
!9410 = !DILocalVariable(name: "n", scope: !9405, file: !9319, line: 109, type: !156)
!9411 = !DILocation(line: 0, scope: !9405)
!9412 = !DILocation(line: 111, column: 9, scope: !9405)
!9413 = !DILocation(line: 111, column: 12, scope: !9405)
!9414 = !DILocation(line: 111, column: 2, scope: !9405)
!9415 = !DILocation(line: 112, column: 4, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9405, file: !9319, line: 111, column: 21)
!9417 = !DILocation(line: 113, column: 4, scope: !9416)
!9418 = distinct !{!9418, !9414, !9419}
!9419 = !DILocation(line: 114, column: 2, scope: !9405)
!9420 = !DILocation(line: 116, column: 2, scope: !9405)
!9421 = distinct !DISubprogram(name: "strnlen", scope: !9319, file: !9319, line: 126, type: !9422, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9424)
!9422 = !DISubroutineType(types: !9423)
!9423 = !{!156, !108, !156}
!9424 = !{!9425, !9426, !9427}
!9425 = !DILocalVariable(name: "s", arg: 1, scope: !9421, file: !9319, line: 126, type: !108)
!9426 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9421, file: !9319, line: 126, type: !156)
!9427 = !DILocalVariable(name: "n", scope: !9421, file: !9319, line: 128, type: !156)
!9428 = !DILocation(line: 0, scope: !9421)
!9429 = !DILocation(line: 130, column: 9, scope: !9421)
!9430 = !DILocation(line: 130, column: 12, scope: !9421)
!9431 = !DILocation(line: 130, column: 20, scope: !9421)
!9432 = !DILocation(line: 130, column: 2, scope: !9421)
!9433 = !DILocation(line: 131, column: 4, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9421, file: !9319, line: 130, column: 35)
!9435 = !DILocation(line: 132, column: 4, scope: !9434)
!9436 = distinct !{!9436, !9432, !9437}
!9437 = !DILocation(line: 133, column: 2, scope: !9421)
!9438 = !DILocation(line: 135, column: 2, scope: !9421)
!9439 = distinct !DISubprogram(name: "strcmp", scope: !9319, file: !9319, line: 145, type: !9440, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9442)
!9440 = !DISubroutineType(types: !9441)
!9441 = !{!103, !108, !108}
!9442 = !{!9443, !9444}
!9443 = !DILocalVariable(name: "s1", arg: 1, scope: !9439, file: !9319, line: 145, type: !108)
!9444 = !DILocalVariable(name: "s2", arg: 2, scope: !9439, file: !9319, line: 145, type: !108)
!9445 = !DILocation(line: 0, scope: !9439)
!9446 = !DILocation(line: 147, column: 10, scope: !9439)
!9447 = !DILocation(line: 147, column: 17, scope: !9439)
!9448 = !DILocation(line: 147, column: 14, scope: !9439)
!9449 = !DILocation(line: 147, column: 22, scope: !9439)
!9450 = !DILocation(line: 148, column: 5, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9439, file: !9319, line: 147, column: 40)
!9452 = !DILocation(line: 149, column: 5, scope: !9451)
!9453 = distinct !{!9453, !9454, !9455}
!9454 = !DILocation(line: 147, column: 2, scope: !9439)
!9455 = !DILocation(line: 150, column: 2, scope: !9439)
!9456 = !DILocation(line: 152, column: 9, scope: !9439)
!9457 = !DILocation(line: 152, column: 15, scope: !9439)
!9458 = !DILocation(line: 152, column: 13, scope: !9439)
!9459 = !DILocation(line: 152, column: 2, scope: !9439)
!9460 = distinct !DISubprogram(name: "strncmp", scope: !9319, file: !9319, line: 162, type: !9461, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9463)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!103, !108, !108, !156}
!9463 = !{!9464, !9465, !9466}
!9464 = !DILocalVariable(name: "s1", arg: 1, scope: !9460, file: !9319, line: 162, type: !108)
!9465 = !DILocalVariable(name: "s2", arg: 2, scope: !9460, file: !9319, line: 162, type: !108)
!9466 = !DILocalVariable(name: "n", arg: 3, scope: !9460, file: !9319, line: 162, type: !156)
!9467 = !DILocation(line: 0, scope: !9460)
!9468 = !DILocation(line: 164, column: 17, scope: !9460)
!9469 = !DILocation(line: 164, column: 21, scope: !9460)
!9470 = !DILocation(line: 164, column: 28, scope: !9460)
!9471 = !DILocation(line: 164, column: 25, scope: !9460)
!9472 = !DILocation(line: 164, column: 33, scope: !9460)
!9473 = !DILocation(line: 165, column: 5, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9460, file: !9319, line: 164, column: 51)
!9475 = !DILocation(line: 166, column: 5, scope: !9474)
!9476 = !DILocation(line: 167, column: 4, scope: !9474)
!9477 = distinct !{!9477, !9478, !9479}
!9478 = !DILocation(line: 164, column: 2, scope: !9460)
!9479 = !DILocation(line: 168, column: 2, scope: !9460)
!9480 = !DILocation(line: 170, column: 25, scope: !9460)
!9481 = !DILocation(line: 170, column: 31, scope: !9460)
!9482 = !DILocation(line: 170, column: 29, scope: !9460)
!9483 = !DILocation(line: 170, column: 9, scope: !9460)
!9484 = !DILocation(line: 170, column: 2, scope: !9460)
!9485 = distinct !DISubprogram(name: "strtok_r", scope: !9319, file: !9319, line: 180, type: !9486, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9488)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!160, !160, !108, !748}
!9488 = !{!9489, !9490, !9491, !9492, !9493}
!9489 = !DILocalVariable(name: "str", arg: 1, scope: !9485, file: !9319, line: 180, type: !160)
!9490 = !DILocalVariable(name: "sep", arg: 2, scope: !9485, file: !9319, line: 180, type: !108)
!9491 = !DILocalVariable(name: "state", arg: 3, scope: !9485, file: !9319, line: 180, type: !748)
!9492 = !DILocalVariable(name: "start", scope: !9485, file: !9319, line: 182, type: !160)
!9493 = !DILocalVariable(name: "end", scope: !9485, file: !9319, line: 182, type: !160)
!9494 = !DILocation(line: 0, scope: !9485)
!9495 = !DILocation(line: 184, column: 10, scope: !9485)
!9496 = !DILocation(line: 184, column: 22, scope: !9485)
!9497 = !DILocation(line: 187, column: 9, scope: !9485)
!9498 = !DILocation(line: 187, column: 16, scope: !9485)
!9499 = !DILocation(line: 187, column: 19, scope: !9485)
!9500 = !DILocation(line: 187, column: 2, scope: !9485)
!9501 = !DILocation(line: 188, column: 8, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9485, file: !9319, line: 187, column: 40)
!9503 = distinct !{!9503, !9500, !9504}
!9504 = !DILocation(line: 189, column: 2, scope: !9485)
!9505 = !DILocation(line: 198, column: 9, scope: !9485)
!9506 = !DILocation(line: 198, column: 18, scope: !9485)
!9507 = !DILocation(line: 198, column: 17, scope: !9485)
!9508 = !DILocation(line: 198, column: 2, scope: !9485)
!9509 = !DILocation(line: 199, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9485, file: !9319, line: 198, column: 37)
!9511 = !DILocation(line: 198, column: 14, scope: !9485)
!9512 = distinct !{!9512, !9508, !9513}
!9513 = !DILocation(line: 200, column: 2, scope: !9485)
!9514 = !DILocation(line: 203, column: 8, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9516, file: !9319, line: 202, column: 20)
!9516 = distinct !DILexicalBlock(scope: !9485, file: !9319, line: 202, column: 6)
!9517 = !DILocation(line: 204, column: 16, scope: !9515)
!9518 = !DILocation(line: 205, column: 2, scope: !9515)
!9519 = !DILocation(line: 210, column: 1, scope: !9485)
!9520 = distinct !DISubprogram(name: "strcat", scope: !9319, file: !9319, line: 212, type: !9320, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9521)
!9521 = !{!9522, !9523}
!9522 = !DILocalVariable(name: "dest", arg: 1, scope: !9520, file: !9319, line: 212, type: !9322)
!9523 = !DILocalVariable(name: "src", arg: 2, scope: !9520, file: !9319, line: 212, type: !9323)
!9524 = !DILocation(line: 0, scope: !9520)
!9525 = !DILocation(line: 214, column: 16, scope: !9520)
!9526 = !DILocation(line: 214, column: 14, scope: !9520)
!9527 = !DILocation(line: 214, column: 2, scope: !9520)
!9528 = !DILocation(line: 215, column: 2, scope: !9520)
!9529 = distinct !DISubprogram(name: "strncat", scope: !9319, file: !9319, line: 218, type: !9341, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9530)
!9530 = !{!9531, !9532, !9533, !9534, !9535}
!9531 = !DILocalVariable(name: "dest", arg: 1, scope: !9529, file: !9319, line: 218, type: !9322)
!9532 = !DILocalVariable(name: "src", arg: 2, scope: !9529, file: !9319, line: 218, type: !9323)
!9533 = !DILocalVariable(name: "n", arg: 3, scope: !9529, file: !9319, line: 219, type: !156)
!9534 = !DILocalVariable(name: "orig_dest", scope: !9529, file: !9319, line: 221, type: !160)
!9535 = !DILocalVariable(name: "len", scope: !9529, file: !9319, line: 222, type: !156)
!9536 = !DILocation(line: 0, scope: !9529)
!9537 = !DILocation(line: 222, column: 15, scope: !9529)
!9538 = !DILocation(line: 224, column: 7, scope: !9529)
!9539 = !DILocation(line: 225, column: 14, scope: !9529)
!9540 = !DILocation(line: 225, column: 19, scope: !9529)
!9541 = !DILocation(line: 225, column: 11, scope: !9529)
!9542 = !DILocation(line: 225, column: 23, scope: !9529)
!9543 = !DILocation(line: 225, column: 28, scope: !9529)
!9544 = !DILocation(line: 225, column: 2, scope: !9529)
!9545 = !DILocation(line: 226, column: 17, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9529, file: !9319, line: 225, column: 38)
!9547 = !DILocation(line: 226, column: 8, scope: !9546)
!9548 = !DILocation(line: 226, column: 11, scope: !9546)
!9549 = distinct !{!9549, !9544, !9550}
!9550 = !DILocation(line: 227, column: 2, scope: !9529)
!9551 = !DILocation(line: 228, column: 8, scope: !9529)
!9552 = !DILocation(line: 230, column: 2, scope: !9529)
!9553 = distinct !DISubprogram(name: "memcmp", scope: !9319, file: !9319, line: 239, type: !9554, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9556)
!9554 = !DISubroutineType(types: !9555)
!9555 = !{!103, !13, !13, !156}
!9556 = !{!9557, !9558, !9559, !9560, !9561}
!9557 = !DILocalVariable(name: "m1", arg: 1, scope: !9553, file: !9319, line: 239, type: !13)
!9558 = !DILocalVariable(name: "m2", arg: 2, scope: !9553, file: !9319, line: 239, type: !13)
!9559 = !DILocalVariable(name: "n", arg: 3, scope: !9553, file: !9319, line: 239, type: !156)
!9560 = !DILocalVariable(name: "c1", scope: !9553, file: !9319, line: 241, type: !108)
!9561 = !DILocalVariable(name: "c2", scope: !9553, file: !9319, line: 242, type: !108)
!9562 = !DILocation(line: 0, scope: !9553)
!9563 = !DILocation(line: 244, column: 7, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9553, file: !9319, line: 244, column: 6)
!9565 = !DILocation(line: 244, column: 6, scope: !9553)
!9566 = !DILocation(line: 248, column: 10, scope: !9553)
!9567 = !DILocation(line: 248, column: 14, scope: !9553)
!9568 = !DILocation(line: 248, column: 19, scope: !9553)
!9569 = !DILocation(line: 248, column: 2, scope: !9553)
!9570 = !DILocation(line: 248, column: 23, scope: !9553)
!9571 = !DILocation(line: 248, column: 30, scope: !9553)
!9572 = !DILocation(line: 248, column: 27, scope: !9553)
!9573 = !DILocation(line: 249, column: 5, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9553, file: !9319, line: 248, column: 36)
!9575 = !DILocation(line: 250, column: 5, scope: !9574)
!9576 = distinct !{!9576, !9569, !9577}
!9577 = !DILocation(line: 251, column: 2, scope: !9553)
!9578 = !DILocation(line: 253, column: 9, scope: !9553)
!9579 = !DILocation(line: 253, column: 15, scope: !9553)
!9580 = !DILocation(line: 253, column: 13, scope: !9553)
!9581 = !DILocation(line: 253, column: 2, scope: !9553)
!9582 = !DILocation(line: 254, column: 1, scope: !9553)
!9583 = distinct !DISubprogram(name: "memmove", scope: !9319, file: !9319, line: 263, type: !9584, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9586)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!102, !102, !13, !156}
!9586 = !{!9587, !9588, !9589, !9590, !9591}
!9587 = !DILocalVariable(name: "d", arg: 1, scope: !9583, file: !9319, line: 263, type: !102)
!9588 = !DILocalVariable(name: "s", arg: 2, scope: !9583, file: !9319, line: 263, type: !13)
!9589 = !DILocalVariable(name: "n", arg: 3, scope: !9583, file: !9319, line: 263, type: !156)
!9590 = !DILocalVariable(name: "dest", scope: !9583, file: !9319, line: 265, type: !160)
!9591 = !DILocalVariable(name: "src", scope: !9583, file: !9319, line: 266, type: !108)
!9592 = !DILocation(line: 0, scope: !9583)
!9593 = !DILocation(line: 268, column: 21, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9583, file: !9319, line: 268, column: 6)
!9595 = !DILocation(line: 268, column: 28, scope: !9594)
!9596 = !DILocation(line: 268, column: 6, scope: !9583)
!9597 = !DILocation(line: 280, column: 12, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9594, file: !9319, line: 278, column: 9)
!9599 = !DILocation(line: 280, column: 3, scope: !9598)
!9600 = !DILocation(line: 275, column: 5, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !9319, line: 274, column: 17)
!9602 = distinct !DILexicalBlock(scope: !9594, file: !9319, line: 268, column: 33)
!9603 = !DILocation(line: 276, column: 14, scope: !9601)
!9604 = !DILocation(line: 276, column: 4, scope: !9601)
!9605 = !DILocation(line: 276, column: 12, scope: !9601)
!9606 = !DILocation(line: 274, column: 12, scope: !9602)
!9607 = !DILocation(line: 274, column: 3, scope: !9602)
!9608 = distinct !{!9608, !9607, !9609}
!9609 = !DILocation(line: 277, column: 3, scope: !9602)
!9610 = !DILocation(line: 281, column: 12, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9598, file: !9319, line: 280, column: 17)
!9612 = !DILocation(line: 281, column: 10, scope: !9611)
!9613 = !DILocation(line: 282, column: 8, scope: !9611)
!9614 = !DILocation(line: 283, column: 7, scope: !9611)
!9615 = !DILocation(line: 284, column: 5, scope: !9611)
!9616 = distinct !{!9616, !9599, !9617}
!9617 = !DILocation(line: 285, column: 3, scope: !9598)
!9618 = !DILocation(line: 288, column: 2, scope: !9583)
!9619 = distinct !DISubprogram(name: "memcpy", scope: !9319, file: !9319, line: 298, type: !9620, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9624)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{!102, !9622, !9623, !156}
!9622 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9623 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9624 = !{!9625, !9626, !9627, !9628, !9629}
!9625 = !DILocalVariable(name: "d", arg: 1, scope: !9619, file: !9319, line: 298, type: !9622)
!9626 = !DILocalVariable(name: "s", arg: 2, scope: !9619, file: !9319, line: 298, type: !9623)
!9627 = !DILocalVariable(name: "n", arg: 3, scope: !9619, file: !9319, line: 298, type: !156)
!9628 = !DILocalVariable(name: "d_byte", scope: !9619, file: !9319, line: 302, type: !1475)
!9629 = !DILocalVariable(name: "s_byte", scope: !9619, file: !9319, line: 303, type: !3484)
!9630 = !DILocation(line: 0, scope: !9619)
!9631 = !DILocation(line: 337, column: 11, scope: !9619)
!9632 = !DILocation(line: 337, column: 2, scope: !9619)
!9633 = !DILocation(line: 338, column: 25, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9619, file: !9319, line: 337, column: 16)
!9635 = !DILocation(line: 338, column: 17, scope: !9634)
!9636 = !DILocation(line: 338, column: 11, scope: !9634)
!9637 = !DILocation(line: 338, column: 15, scope: !9634)
!9638 = !DILocation(line: 339, column: 4, scope: !9634)
!9639 = distinct !{!9639, !9632, !9640}
!9640 = !DILocation(line: 340, column: 2, scope: !9619)
!9641 = !DILocation(line: 342, column: 2, scope: !9619)
!9642 = distinct !DISubprogram(name: "memset", scope: !9319, file: !9319, line: 352, type: !9643, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9645)
!9643 = !DISubroutineType(types: !9644)
!9644 = !{!102, !102, !103, !156}
!9645 = !{!9646, !9647, !9648, !9649, !9650}
!9646 = !DILocalVariable(name: "buf", arg: 1, scope: !9642, file: !9319, line: 352, type: !102)
!9647 = !DILocalVariable(name: "c", arg: 2, scope: !9642, file: !9319, line: 352, type: !103)
!9648 = !DILocalVariable(name: "n", arg: 3, scope: !9642, file: !9319, line: 352, type: !156)
!9649 = !DILocalVariable(name: "d_byte", scope: !9642, file: !9319, line: 356, type: !1475)
!9650 = !DILocalVariable(name: "c_byte", scope: !9642, file: !9319, line: 357, type: !167)
!9651 = !DILocation(line: 0, scope: !9642)
!9652 = !DILocation(line: 357, column: 25, scope: !9642)
!9653 = !DILocation(line: 389, column: 11, scope: !9642)
!9654 = !DILocation(line: 389, column: 2, scope: !9642)
!9655 = !DILocation(line: 390, column: 11, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9642, file: !9319, line: 389, column: 16)
!9657 = !DILocation(line: 390, column: 15, scope: !9656)
!9658 = !DILocation(line: 391, column: 4, scope: !9656)
!9659 = distinct !{!9659, !9654, !9660}
!9660 = !DILocation(line: 392, column: 2, scope: !9642)
!9661 = !DILocation(line: 394, column: 2, scope: !9642)
!9662 = distinct !DISubprogram(name: "memchr", scope: !9319, file: !9319, line: 404, type: !9663, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3481, retainedNodes: !9665)
!9663 = !DISubroutineType(types: !9664)
!9664 = !{!102, !13, !103, !156}
!9665 = !{!9666, !9667, !9668, !9669}
!9666 = !DILocalVariable(name: "s", arg: 1, scope: !9662, file: !9319, line: 404, type: !13)
!9667 = !DILocalVariable(name: "c", arg: 2, scope: !9662, file: !9319, line: 404, type: !103)
!9668 = !DILocalVariable(name: "n", arg: 3, scope: !9662, file: !9319, line: 404, type: !156)
!9669 = !DILocalVariable(name: "p", scope: !9670, file: !9319, line: 407, type: !3484)
!9670 = distinct !DILexicalBlock(scope: !9671, file: !9319, line: 406, column: 14)
!9671 = distinct !DILexicalBlock(scope: !9662, file: !9319, line: 406, column: 6)
!9672 = !DILocation(line: 0, scope: !9662)
!9673 = !DILocation(line: 406, column: 8, scope: !9671)
!9674 = !DILocation(line: 406, column: 6, scope: !9662)
!9675 = !DILocation(line: 409, column: 3, scope: !9670)
!9676 = !DILocation(line: 0, scope: !9670)
!9677 = !DILocation(line: 410, column: 8, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !9319, line: 410, column: 8)
!9679 = distinct !DILexicalBlock(scope: !9670, file: !9319, line: 409, column: 6)
!9680 = !DILocation(line: 410, column: 13, scope: !9678)
!9681 = !DILocation(line: 410, column: 8, scope: !9679)
!9682 = distinct !{!9682, !9675, !9683}
!9683 = !DILocation(line: 414, column: 20, scope: !9670)
!9684 = !DILocation(line: 417, column: 2, scope: !9662)
!9685 = !DILocation(line: 418, column: 1, scope: !9662)
!9686 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1030, file: !1030, line: 23, type: !5041, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9687)
!9687 = !{!9688}
!9688 = !DILocalVariable(name: "hook", arg: 1, scope: !9686, file: !1030, line: 23, type: !763)
!9689 = !DILocation(line: 0, scope: !9686)
!9690 = !DILocation(line: 25, column: 15, scope: !9686)
!9691 = !DILocation(line: 26, column: 1, scope: !9686)
!9692 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1030, file: !1030, line: 14, type: !764, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9693)
!9693 = !{!9694}
!9694 = !DILocalVariable(name: "c", arg: 1, scope: !9692, file: !1030, line: 14, type: !103)
!9695 = !DILocation(line: 0, scope: !9692)
!9696 = !DILocation(line: 18, column: 2, scope: !9692)
!9697 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1030, file: !1030, line: 28, type: !9698, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9700)
!9698 = !DISubroutineType(types: !9699)
!9699 = !{!103, !103, !1026}
!9700 = !{!9701, !9702}
!9701 = !DILocalVariable(name: "c", arg: 1, scope: !9697, file: !1030, line: 28, type: !103)
!9702 = !DILocalVariable(name: "stream", arg: 2, scope: !9697, file: !1030, line: 28, type: !1026)
!9703 = !DILocation(line: 0, scope: !9697)
!9704 = !DILocation(line: 30, column: 27, scope: !9697)
!9705 = !DILocation(line: 30, column: 50, scope: !9697)
!9706 = !DILocation(line: 30, column: 9, scope: !9697)
!9707 = !DILocation(line: 30, column: 2, scope: !9697)
!9708 = distinct !DISubprogram(name: "fputc", scope: !1030, file: !1030, line: 41, type: !9698, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9709)
!9709 = !{!9710, !9711}
!9710 = !DILocalVariable(name: "c", arg: 1, scope: !9708, file: !1030, line: 41, type: !103)
!9711 = !DILocalVariable(name: "stream", arg: 2, scope: !9708, file: !1030, line: 41, type: !1026)
!9712 = !DILocation(line: 0, scope: !9708)
!9713 = !DILocation(line: 43, column: 9, scope: !9708)
!9714 = !DILocation(line: 43, column: 2, scope: !9708)
!9715 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9716, file: !9716, line: 72, type: !9698, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9717)
!9716 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!9717 = !{!9718, !9719}
!9718 = !DILocalVariable(name: "c", arg: 1, scope: !9715, file: !9716, line: 72, type: !103)
!9719 = !DILocalVariable(name: "stream", arg: 2, scope: !9715, file: !9716, line: 72, type: !1026)
!9720 = !DILocation(line: 0, scope: !9715)
!9721 = !DILocation(line: 81, column: 2, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9715, file: !9716, line: 81, column: 2)
!9723 = !{i64 2155131679}
!9724 = !DILocation(line: 82, column: 9, scope: !9715)
!9725 = !DILocation(line: 82, column: 2, scope: !9715)
!9726 = distinct !DISubprogram(name: "fputs", scope: !1030, file: !1030, line: 46, type: !9727, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9730)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{!103, !9323, !9729}
!9729 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1026)
!9730 = !{!9731, !9732, !9733, !9734}
!9731 = !DILocalVariable(name: "s", arg: 1, scope: !9726, file: !1030, line: 46, type: !9323)
!9732 = !DILocalVariable(name: "stream", arg: 2, scope: !9726, file: !1030, line: 46, type: !9729)
!9733 = !DILocalVariable(name: "len", scope: !9726, file: !1030, line: 48, type: !103)
!9734 = !DILocalVariable(name: "ret", scope: !9726, file: !1030, line: 49, type: !103)
!9735 = !DILocation(line: 0, scope: !9726)
!9736 = !DILocation(line: 48, column: 12, scope: !9726)
!9737 = !DILocation(line: 51, column: 8, scope: !9726)
!9738 = !DILocation(line: 53, column: 13, scope: !9726)
!9739 = !DILocation(line: 53, column: 9, scope: !9726)
!9740 = !DILocation(line: 53, column: 2, scope: !9726)
!9741 = distinct !DISubprogram(name: "fwrite", scope: !1030, file: !1030, line: 99, type: !9742, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{!156, !9623, !156, !156, !9729}
!9744 = !{!9745, !9746, !9747, !9748}
!9745 = !DILocalVariable(name: "ptr", arg: 1, scope: !9741, file: !1030, line: 99, type: !9623)
!9746 = !DILocalVariable(name: "size", arg: 2, scope: !9741, file: !1030, line: 99, type: !156)
!9747 = !DILocalVariable(name: "nitems", arg: 3, scope: !9741, file: !1030, line: 99, type: !156)
!9748 = !DILocalVariable(name: "stream", arg: 4, scope: !9741, file: !1030, line: 100, type: !9729)
!9749 = !DILocation(line: 0, scope: !9741)
!9750 = !DILocation(line: 102, column: 9, scope: !9741)
!9751 = !DILocation(line: 102, column: 2, scope: !9741)
!9752 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9716, file: !9716, line: 96, type: !9742, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9753)
!9753 = !{!9754, !9755, !9756, !9757}
!9754 = !DILocalVariable(name: "ptr", arg: 1, scope: !9752, file: !9716, line: 96, type: !9623)
!9755 = !DILocalVariable(name: "size", arg: 2, scope: !9752, file: !9716, line: 96, type: !156)
!9756 = !DILocalVariable(name: "nitems", arg: 3, scope: !9752, file: !9716, line: 96, type: !156)
!9757 = !DILocalVariable(name: "stream", arg: 4, scope: !9752, file: !9716, line: 96, type: !9729)
!9758 = !DILocation(line: 0, scope: !9752)
!9759 = !DILocation(line: 107, column: 2, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9752, file: !9716, line: 107, column: 2)
!9761 = !{i64 2155131783}
!9762 = !DILocation(line: 108, column: 9, scope: !9752)
!9763 = !DILocation(line: 108, column: 2, scope: !9752)
!9764 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1030, file: !1030, line: 56, type: !9742, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9765)
!9765 = !{!9766, !9767, !9768, !9769, !9770, !9771, !9772, !9773}
!9766 = !DILocalVariable(name: "ptr", arg: 1, scope: !9764, file: !1030, line: 56, type: !9623)
!9767 = !DILocalVariable(name: "size", arg: 2, scope: !9764, file: !1030, line: 56, type: !156)
!9768 = !DILocalVariable(name: "nitems", arg: 3, scope: !9764, file: !1030, line: 57, type: !156)
!9769 = !DILocalVariable(name: "stream", arg: 4, scope: !9764, file: !1030, line: 57, type: !9729)
!9770 = !DILocalVariable(name: "i", scope: !9764, file: !1030, line: 59, type: !156)
!9771 = !DILocalVariable(name: "j", scope: !9764, file: !1030, line: 60, type: !156)
!9772 = !DILocalVariable(name: "p", scope: !9764, file: !1030, line: 61, type: !3484)
!9773 = !DILabel(scope: !9764, name: "done", file: !1030, line: 82)
!9774 = !DILocation(line: 0, scope: !9764)
!9775 = !DILocation(line: 63, column: 14, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9764, file: !1030, line: 63, column: 6)
!9777 = !DILocation(line: 63, column: 24, scope: !9776)
!9778 = !DILocation(line: 72, column: 3, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9764, file: !1030, line: 70, column: 5)
!9780 = !DILocation(line: 0, scope: !9779)
!9781 = !DILocation(line: 73, column: 8, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9783, file: !1030, line: 73, column: 8)
!9783 = distinct !DILexicalBlock(scope: !9779, file: !1030, line: 72, column: 6)
!9784 = !DILocation(line: 73, column: 29, scope: !9782)
!9785 = !DILocation(line: 73, column: 27, scope: !9782)
!9786 = !DILocation(line: 73, column: 21, scope: !9782)
!9787 = !DILocation(line: 73, column: 33, scope: !9782)
!9788 = !DILocation(line: 73, column: 8, scope: !9783)
!9789 = !DILocation(line: 76, column: 5, scope: !9783)
!9790 = !DILocation(line: 77, column: 14, scope: !9779)
!9791 = !DILocation(line: 77, column: 3, scope: !9783)
!9792 = distinct !{!9792, !9778, !9793}
!9793 = !DILocation(line: 77, column: 17, scope: !9779)
!9794 = !DILocation(line: 79, column: 4, scope: !9779)
!9795 = !DILocation(line: 80, column: 13, scope: !9764)
!9796 = !DILocation(line: 80, column: 2, scope: !9779)
!9797 = distinct !{!9797, !9798, !9799}
!9798 = !DILocation(line: 70, column: 2, scope: !9764)
!9799 = !DILocation(line: 80, column: 16, scope: !9764)
!9800 = !DILocation(line: 82, column: 1, scope: !9764)
!9801 = !DILocation(line: 83, column: 17, scope: !9764)
!9802 = !DILocation(line: 83, column: 2, scope: !9764)
!9803 = !DILocation(line: 84, column: 1, scope: !9764)
!9804 = distinct !DISubprogram(name: "puts", scope: !1030, file: !1030, line: 106, type: !9805, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9807)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!103, !108}
!9807 = !{!9808}
!9808 = !DILocalVariable(name: "s", arg: 1, scope: !9804, file: !1030, line: 106, type: !108)
!9809 = !DILocation(line: 0, scope: !9804)
!9810 = !DILocation(line: 108, column: 6, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9804, file: !1030, line: 108, column: 6)
!9812 = !DILocation(line: 108, column: 23, scope: !9811)
!9813 = !DILocation(line: 108, column: 6, scope: !9804)
!9814 = !DILocation(line: 112, column: 9, scope: !9804)
!9815 = !DILocation(line: 112, column: 29, scope: !9804)
!9816 = !DILocation(line: 112, column: 2, scope: !9804)
!9817 = !DILocation(line: 113, column: 1, scope: !9804)
!9818 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1062, file: !1062, line: 12, type: !9819, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !9825)
!9819 = !DISubroutineType(types: !9820)
!9820 = !{!9821, !112}
!9821 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9822)
!9822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9823)
!9823 = !{!9824}
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9822, file: !105, line: 66, baseType: !104, size: 64)
!9825 = !{!9826, !9827}
!9826 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9818, file: !1062, line: 12, type: !112)
!9827 = !DILocalVariable(name: "now_ticks", scope: !9818, file: !1062, line: 14, type: !106)
!9828 = !DILocation(line: 0, scope: !9818)
!9829 = !DILocation(line: 14, column: 22, scope: !9818)
!9830 = !DILocation(line: 16, column: 9, scope: !9818)
!9831 = !DILocation(line: 17, column: 1, scope: !9818)
!9832 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1062, file: !1062, line: 103, type: !9833, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !9982)
!9833 = !DISubroutineType(types: !9834)
!9834 = !{!103, !9835, !13, !9821}
!9835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9836, size: 32)
!9836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9837)
!9837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !9838)
!9838 = !{!9839, !9840, !9841, !9842, !9843, !9844, !9954}
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9837, file: !119, line: 32, baseType: !178, size: 32)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9837, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9837, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9837, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9837, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9837, file: !119, line: 56, baseType: !9845, size: 32, offset: 160)
!9845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9846, size: 32)
!9846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !9847)
!9847 = !{!9848, !9867, !9952, !9953}
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9846, file: !127, line: 2722, baseType: !9849, size: 64)
!9849 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !9850)
!9850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !9851)
!9851 = !{!9852}
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9850, file: !131, line: 232, baseType: !9853, size: 64)
!9853 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !9854)
!9854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !9855)
!9855 = !{!9856, !9862}
!9856 = !DIDerivedType(tag: DW_TAG_member, scope: !9854, file: !136, line: 38, baseType: !9857, size: 32)
!9857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9854, file: !136, line: 38, size: 32, elements: !9858)
!9858 = !{!9859, !9861}
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9857, file: !136, line: 39, baseType: !9860, size: 32)
!9860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9854, size: 32)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9857, file: !136, line: 40, baseType: !9860, size: 32)
!9862 = !DIDerivedType(tag: DW_TAG_member, scope: !9854, file: !136, line: 42, baseType: !9863, size: 32, offset: 32)
!9863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9854, file: !136, line: 42, size: 32, elements: !9864)
!9864 = !{!9865, !9866}
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9863, file: !136, line: 43, baseType: !9860, size: 32)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9863, file: !136, line: 44, baseType: !9860, size: 32)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9846, file: !127, line: 2724, baseType: !9868, size: 32, offset: 64)
!9868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9869, size: 32)
!9869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !9870)
!9870 = !{!9871, !9911, !9923, !9924, !9925, !9926, !9932, !9947}
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9869, file: !199, line: 247, baseType: !9872, size: 384)
!9872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !9873)
!9873 = !{!9874, !9885, !9887, !9888, !9889, !9898, !9899, !9900}
!9874 = !DIDerivedType(tag: DW_TAG_member, scope: !9872, file: !199, line: 60, baseType: !9875, size: 64)
!9875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9872, file: !199, line: 60, size: 64, elements: !9876)
!9876 = !{!9877, !9879}
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9875, file: !199, line: 61, baseType: !9878, size: 64)
!9878 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !9854)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9875, file: !199, line: 62, baseType: !9880, size: 64)
!9880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !9881)
!9881 = !{!9882}
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9880, file: !211, line: 50, baseType: !9883, size: 64)
!9883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9884, size: 64, elements: !216)
!9884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9880, size: 32)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9872, file: !199, line: 68, baseType: !9886, size: 32, offset: 64)
!9886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9849, size: 32)
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9872, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9872, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!9889 = !DIDerivedType(tag: DW_TAG_member, scope: !9872, file: !199, line: 90, baseType: !9890, size: 16, offset: 112)
!9890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9872, file: !199, line: 90, size: 16, elements: !9891)
!9891 = !{!9892, !9897}
!9892 = !DIDerivedType(tag: DW_TAG_member, scope: !9890, file: !199, line: 91, baseType: !9893, size: 16)
!9893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9890, file: !199, line: 91, size: 16, elements: !9894)
!9894 = !{!9895, !9896}
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9893, file: !199, line: 96, baseType: !229, size: 8)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9893, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9890, file: !199, line: 100, baseType: !181, size: 16)
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9872, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9872, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9872, file: !199, line: 131, baseType: !9901, size: 192, offset: 192)
!9901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !9902)
!9902 = !{!9903, !9904, !9910}
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9901, file: !131, line: 245, baseType: !9878, size: 64)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9901, file: !131, line: 246, baseType: !9905, size: 32, offset: 64)
!9905 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !9906)
!9906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9907, size: 32)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{null, !9909}
!9909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9901, size: 32)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9901, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9869, file: !199, line: 250, baseType: !9912, size: 288, offset: 384)
!9912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !9913)
!9913 = !{!9914, !9915, !9916, !9917, !9918, !9919, !9920, !9921, !9922}
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9912, file: !248, line: 26, baseType: !111, size: 32)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9912, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9912, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9912, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9912, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9912, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9912, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9912, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9912, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9869, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9869, file: !199, line: 256, baseType: !9849, size: 64, offset: 704)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9869, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9869, file: !199, line: 300, baseType: !9927, size: 96, offset: 800)
!9927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !9928)
!9928 = !{!9929, !9930, !9931}
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9927, file: !199, line: 153, baseType: !22, size: 32)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9927, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9927, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9869, file: !199, line: 325, baseType: !9933, size: 32, offset: 896)
!9933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9934, size: 32)
!9934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !9935)
!9935 = !{!9936, !9942, !9943}
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9934, file: !127, line: 5074, baseType: !9937, size: 96)
!9937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !9938)
!9938 = !{!9939, !9940, !9941}
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9937, file: !274, line: 57, baseType: !277, size: 32)
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9937, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9937, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9934, file: !127, line: 5075, baseType: !9849, size: 64, offset: 96)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9934, file: !127, line: 5076, baseType: !9944, size: 32, offset: 160)
!9944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !9945)
!9945 = !{!9946}
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9944, file: !152, line: 52, baseType: !22, size: 32)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9869, file: !199, line: 343, baseType: !9948, size: 64, offset: 928)
!9948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !9949)
!9949 = !{!9950, !9951}
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9948, file: !248, line: 63, baseType: !111, size: 32)
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9948, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9846, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9846, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9837, file: !119, line: 67, baseType: !9955, size: 32, offset: 192)
!9955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9956, size: 32)
!9956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9957)
!9957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9958, size: 32)
!9958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9959)
!9959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !9960)
!9960 = !{!9961, !9962, !9977}
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9959, file: !119, line: 91, baseType: !122, size: 8)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9959, file: !119, line: 93, baseType: !9963, size: 32, offset: 32)
!9963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9964)
!9964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9965, size: 32)
!9965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !9966)
!9966 = !{!9967, !9968, !9969, !9970, !9971, !9972, !9973, !9974, !9975, !9976}
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9965, file: !127, line: 4206, baseType: !9849, size: 64)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9965, file: !127, line: 4208, baseType: !9944, size: 32, offset: 64)
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9965, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9965, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9965, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9965, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!9973 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9965, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!9974 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9965, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9965, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9965, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9959, file: !119, line: 96, baseType: !9978, size: 32, offset: 64)
!9978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9979)
!9979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9980, size: 32)
!9980 = !DISubroutineType(types: !9981)
!9981 = !{null, !9835}
!9982 = !{!9983, !9984, !9985, !9986, !9987}
!9983 = !DILocalVariable(name: "chan", arg: 1, scope: !9832, file: !1062, line: 103, type: !9835)
!9984 = !DILocalVariable(name: "msg", arg: 2, scope: !9832, file: !1062, line: 103, type: !13)
!9985 = !DILocalVariable(name: "timeout", arg: 3, scope: !9832, file: !1062, line: 103, type: !9821)
!9986 = !DILocalVariable(name: "err", scope: !9832, file: !1062, line: 105, type: !103)
!9987 = !DILocalVariable(name: "end_ticks", scope: !9832, file: !1062, line: 106, type: !112)
!9988 = !DILocation(line: 0, scope: !9832)
!9989 = !DILocation(line: 106, column: 23, scope: !9832)
!9990 = !DILocation(line: 108, column: 2, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !1062, line: 108, column: 2)
!9992 = distinct !DILexicalBlock(scope: !9832, file: !1062, line: 108, column: 2)
!9993 = !DILocation(line: 108, column: 2, scope: !9992)
!9994 = !DILocation(line: 108, column: 2, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9991, file: !1062, line: 108, column: 2)
!9996 = !DILocation(line: 109, column: 2, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !1062, line: 109, column: 2)
!9998 = distinct !DILexicalBlock(scope: !9832, file: !1062, line: 109, column: 2)
!9999 = !DILocation(line: 109, column: 2, scope: !9998)
!10000 = !DILocation(line: 109, column: 2, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !1062, line: 109, column: 2)
!10002 = !DILocation(line: 110, column: 2, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !1062, line: 110, column: 2)
!10004 = distinct !DILexicalBlock(scope: !9832, file: !1062, line: 110, column: 2)
!10005 = !DILocation(line: 110, column: 2, scope: !10004)
!10006 = !DILocation(line: 110, column: 2, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10003, file: !1062, line: 110, column: 2)
!10008 = !DILocation(line: 112, column: 12, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9832, file: !1062, line: 112, column: 6)
!10010 = !DILocation(line: 112, column: 22, scope: !10009)
!10011 = !DILocation(line: 112, column: 30, scope: !10009)
!10012 = !DILocation(line: 112, column: 61, scope: !10009)
!10013 = !DILocation(line: 112, column: 55, scope: !10009)
!10014 = !DILocation(line: 112, column: 34, scope: !10009)
!10015 = !DILocation(line: 112, column: 6, scope: !9832)
!10016 = !DILocation(line: 116, column: 27, scope: !9832)
!10017 = !DILocation(line: 116, column: 8, scope: !9832)
!10018 = !DILocation(line: 117, column: 6, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9832, file: !1062, line: 117, column: 6)
!10020 = !DILocation(line: 117, column: 6, scope: !9832)
!10021 = !DILocation(line: 121, column: 15, scope: !9832)
!10022 = !DILocation(line: 121, column: 35, scope: !9832)
!10023 = !DILocation(line: 121, column: 29, scope: !9832)
!10024 = !DILocation(line: 121, column: 2, scope: !9832)
!10025 = !DILocation(line: 123, column: 8, scope: !9832)
!10026 = !DILocation(line: 125, column: 23, scope: !9832)
!10027 = !DILocation(line: 125, column: 2, scope: !9832)
!10028 = !DILocation(line: 127, column: 2, scope: !9832)
!10029 = !DILocation(line: 128, column: 1, scope: !9832)
!10030 = distinct !DISubprogram(name: "k_mutex_lock", scope: !5334, file: !5334, line: 927, type: !10031, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10033)
!10031 = !DISubroutineType(types: !10032)
!10032 = !{!103, !9845, !9821}
!10033 = !{!10034, !10035}
!10034 = !DILocalVariable(name: "mutex", arg: 1, scope: !10030, file: !5334, line: 927, type: !9845)
!10035 = !DILocalVariable(name: "timeout", arg: 2, scope: !10030, file: !5334, line: 927, type: !9821)
!10036 = !DILocation(line: 0, scope: !10030)
!10037 = !DILocation(line: 936, column: 2, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10030, file: !5334, line: 936, column: 2)
!10039 = !{i64 2155073240}
!10040 = !DILocation(line: 937, column: 9, scope: !10030)
!10041 = !DILocation(line: 937, column: 2, scope: !10030)
!10042 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1062, file: !1062, line: 66, type: !10043, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10045)
!10043 = !DISubroutineType(types: !10044)
!10044 = !{!103, !9835, !112}
!10045 = !{!10046, !10047, !10048, !10049, !10050, !10052}
!10046 = !DILocalVariable(name: "chan", arg: 1, scope: !10042, file: !1062, line: 66, type: !9835)
!10047 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !10042, file: !1062, line: 66, type: !112)
!10048 = !DILocalVariable(name: "last_error", scope: !10042, file: !1062, line: 68, type: !103)
!10049 = !DILocalVariable(name: "err", scope: !10042, file: !1062, line: 68, type: !103)
!10050 = !DILocalVariable(name: "obs", scope: !10051, file: !1062, line: 70, type: !9955)
!10051 = distinct !DILexicalBlock(scope: !10042, file: !1062, line: 70, column: 2)
!10052 = !DILocalVariable(name: "obs", scope: !10053, file: !1062, line: 81, type: !9955)
!10053 = distinct !DILexicalBlock(scope: !10042, file: !1062, line: 81, column: 2)
!10054 = !DILocation(line: 0, scope: !10042)
!10055 = !DILocation(line: 70, column: 54, scope: !10051)
!10056 = !DILocation(line: 0, scope: !10051)
!10057 = !DILocation(line: 70, column: 65, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10051, file: !1062, line: 70, column: 2)
!10059 = !DILocation(line: 70, column: 70, scope: !10058)
!10060 = !DILocation(line: 70, column: 2, scope: !10051)
!10061 = !DILocation(line: 81, column: 54, scope: !10053)
!10062 = !DILocation(line: 81, column: 65, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10053, file: !1062, line: 81, column: 2)
!10064 = !DILocation(line: 0, scope: !10053)
!10065 = !DILocation(line: 81, column: 70, scope: !10063)
!10066 = !DILocation(line: 81, column: 2, scope: !10053)
!10067 = !DILocation(line: 71, column: 15, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10069, file: !1062, line: 71, column: 7)
!10069 = distinct !DILexicalBlock(scope: !10058, file: !1062, line: 70, column: 86)
!10070 = !DILocation(line: 71, column: 23, scope: !10068)
!10071 = !DILocation(line: 71, column: 35, scope: !10068)
!10072 = !DILocation(line: 71, column: 44, scope: !10068)
!10073 = !DILocation(line: 71, column: 7, scope: !10069)
!10074 = !DILocation(line: 72, column: 4, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10068, file: !1062, line: 71, column: 54)
!10076 = !DILocation(line: 73, column: 3, scope: !10075)
!10077 = !DILocation(line: 70, column: 79, scope: !10058)
!10078 = distinct !{!10078, !10060, !10079}
!10079 = !DILocation(line: 74, column: 2, scope: !10051)
!10080 = !DILocation(line: 100, column: 2, scope: !10042)
!10081 = !DILocation(line: 82, column: 15, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !1062, line: 82, column: 7)
!10083 = distinct !DILexicalBlock(scope: !10063, file: !1062, line: 81, column: 86)
!10084 = !DILocation(line: 82, column: 23, scope: !10082)
!10085 = !DILocation(line: 82, column: 35, scope: !10082)
!10086 = !DILocation(line: 82, column: 41, scope: !10082)
!10087 = !DILocation(line: 82, column: 7, scope: !10083)
!10088 = !DILocation(line: 83, column: 43, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10082, file: !1062, line: 82, column: 51)
!10090 = !DILocation(line: 83, column: 10, scope: !10089)
!10091 = !DILocation(line: 84, column: 4, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !1062, line: 84, column: 4)
!10093 = distinct !DILexicalBlock(scope: !10089, file: !1062, line: 84, column: 4)
!10094 = !DILocation(line: 84, column: 4, scope: !10093)
!10095 = !DILocation(line: 84, column: 4, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10092, file: !1062, line: 84, column: 4)
!10097 = !DILocation(line: 81, column: 79, scope: !10063)
!10098 = distinct !{!10098, !10066, !10099}
!10099 = !DILocation(line: 92, column: 2, scope: !10053)
!10100 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !5334, file: !5334, line: 944, type: !10101, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10103)
!10101 = !DISubroutineType(types: !10102)
!10102 = !{!103, !9845}
!10103 = !{!10104}
!10104 = !DILocalVariable(name: "mutex", arg: 1, scope: !10100, file: !5334, line: 944, type: !9845)
!10105 = !DILocation(line: 0, scope: !10100)
!10106 = !DILocation(line: 952, column: 2, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10100, file: !5334, line: 952, column: 2)
!10108 = !{i64 2155073308}
!10109 = !DILocation(line: 953, column: 9, scope: !10100)
!10110 = !DILocation(line: 953, column: 2, scope: !10100)
!10111 = distinct !DISubprogram(name: "k_msgq_put", scope: !5334, file: !5334, line: 1129, type: !10112, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10114)
!10112 = !DISubroutineType(types: !10113)
!10113 = !{!103, !9964, !13, !9821}
!10114 = !{!10115, !10116, !10117}
!10115 = !DILocalVariable(name: "msgq", arg: 1, scope: !10111, file: !5334, line: 1129, type: !9964)
!10116 = !DILocalVariable(name: "data", arg: 2, scope: !10111, file: !5334, line: 1129, type: !13)
!10117 = !DILocalVariable(name: "timeout", arg: 3, scope: !10111, file: !5334, line: 1129, type: !9821)
!10118 = !DILocation(line: 0, scope: !10111)
!10119 = !DILocation(line: 1139, column: 2, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10111, file: !5334, line: 1139, column: 2)
!10121 = !{i64 2155074056}
!10122 = !DILocation(line: 1140, column: 9, scope: !10111)
!10123 = !DILocation(line: 1140, column: 2, scope: !10111)
!10124 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1062, file: !1062, line: 130, type: !10125, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10127)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!103, !9835, !102, !9821}
!10127 = !{!10128, !10129, !10130, !10131}
!10128 = !DILocalVariable(name: "chan", arg: 1, scope: !10124, file: !1062, line: 130, type: !9835)
!10129 = !DILocalVariable(name: "msg", arg: 2, scope: !10124, file: !1062, line: 130, type: !102)
!10130 = !DILocalVariable(name: "timeout", arg: 3, scope: !10124, file: !1062, line: 130, type: !9821)
!10131 = !DILocalVariable(name: "err", scope: !10124, file: !1062, line: 132, type: !103)
!10132 = !DILocation(line: 0, scope: !10124)
!10133 = !DILocation(line: 134, column: 2, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10135, file: !1062, line: 134, column: 2)
!10135 = distinct !DILexicalBlock(scope: !10124, file: !1062, line: 134, column: 2)
!10136 = !DILocation(line: 134, column: 2, scope: !10135)
!10137 = !DILocation(line: 134, column: 2, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10134, file: !1062, line: 134, column: 2)
!10139 = !DILocation(line: 135, column: 2, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !1062, line: 135, column: 2)
!10141 = distinct !DILexicalBlock(scope: !10124, file: !1062, line: 135, column: 2)
!10142 = !DILocation(line: 135, column: 2, scope: !10141)
!10143 = !DILocation(line: 135, column: 2, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10140, file: !1062, line: 135, column: 2)
!10145 = !DILocation(line: 136, column: 2, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10147, file: !1062, line: 136, column: 2)
!10147 = distinct !DILexicalBlock(scope: !10124, file: !1062, line: 136, column: 2)
!10148 = !DILocation(line: 136, column: 2, scope: !10147)
!10149 = !DILocation(line: 136, column: 2, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !1062, line: 136, column: 2)
!10151 = !DILocation(line: 138, column: 27, scope: !10124)
!10152 = !DILocation(line: 138, column: 8, scope: !10124)
!10153 = !DILocation(line: 139, column: 6, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10124, file: !1062, line: 139, column: 6)
!10155 = !DILocation(line: 139, column: 6, scope: !10124)
!10156 = !DILocation(line: 143, column: 20, scope: !10124)
!10157 = !DILocation(line: 143, column: 35, scope: !10124)
!10158 = !DILocation(line: 143, column: 29, scope: !10124)
!10159 = !DILocation(line: 143, column: 2, scope: !10124)
!10160 = !DILocation(line: 145, column: 30, scope: !10124)
!10161 = !DILocation(line: 145, column: 9, scope: !10124)
!10162 = !DILocation(line: 145, column: 2, scope: !10124)
!10163 = !DILocation(line: 146, column: 1, scope: !10124)
!10164 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1062, file: !1062, line: 148, type: !10165, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10167)
!10165 = !DISubroutineType(types: !10166)
!10166 = !{!103, !9835, !9821}
!10167 = !{!10168, !10169, !10170, !10171}
!10168 = !DILocalVariable(name: "chan", arg: 1, scope: !10164, file: !1062, line: 148, type: !9835)
!10169 = !DILocalVariable(name: "timeout", arg: 2, scope: !10164, file: !1062, line: 148, type: !9821)
!10170 = !DILocalVariable(name: "err", scope: !10164, file: !1062, line: 150, type: !103)
!10171 = !DILocalVariable(name: "end_ticks", scope: !10164, file: !1062, line: 151, type: !112)
!10172 = !DILocation(line: 0, scope: !10164)
!10173 = !DILocation(line: 151, column: 23, scope: !10164)
!10174 = !DILocation(line: 153, column: 2, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10176, file: !1062, line: 153, column: 2)
!10176 = distinct !DILexicalBlock(scope: !10164, file: !1062, line: 153, column: 2)
!10177 = !DILocation(line: 153, column: 2, scope: !10176)
!10178 = !DILocation(line: 153, column: 2, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10175, file: !1062, line: 153, column: 2)
!10180 = !DILocation(line: 154, column: 2, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !1062, line: 154, column: 2)
!10182 = distinct !DILexicalBlock(scope: !10164, file: !1062, line: 154, column: 2)
!10183 = !DILocation(line: 154, column: 2, scope: !10182)
!10184 = !DILocation(line: 154, column: 2, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10181, file: !1062, line: 154, column: 2)
!10186 = !DILocation(line: 156, column: 27, scope: !10164)
!10187 = !DILocation(line: 156, column: 8, scope: !10164)
!10188 = !DILocation(line: 157, column: 6, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10164, file: !1062, line: 157, column: 6)
!10190 = !DILocation(line: 157, column: 6, scope: !10164)
!10191 = !DILocation(line: 161, column: 8, scope: !10164)
!10192 = !DILocation(line: 163, column: 23, scope: !10164)
!10193 = !DILocation(line: 163, column: 2, scope: !10164)
!10194 = !DILocation(line: 165, column: 2, scope: !10164)
!10195 = !DILocation(line: 166, column: 1, scope: !10164)
!10196 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1062, file: !1062, line: 168, type: !10165, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10197)
!10197 = !{!10198, !10199, !10200}
!10198 = !DILocalVariable(name: "chan", arg: 1, scope: !10196, file: !1062, line: 168, type: !9835)
!10199 = !DILocalVariable(name: "timeout", arg: 2, scope: !10196, file: !1062, line: 168, type: !9821)
!10200 = !DILocalVariable(name: "err", scope: !10196, file: !1062, line: 173, type: !103)
!10201 = !DILocation(line: 0, scope: !10196)
!10202 = !DILocation(line: 170, column: 2, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !1062, line: 170, column: 2)
!10204 = distinct !DILexicalBlock(scope: !10196, file: !1062, line: 170, column: 2)
!10205 = !DILocation(line: 170, column: 2, scope: !10204)
!10206 = !DILocation(line: 170, column: 2, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10203, file: !1062, line: 170, column: 2)
!10208 = !DILocation(line: 171, column: 2, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !1062, line: 171, column: 2)
!10210 = distinct !DILexicalBlock(scope: !10196, file: !1062, line: 171, column: 2)
!10211 = !DILocation(line: 171, column: 2, scope: !10210)
!10212 = !DILocation(line: 171, column: 2, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10209, file: !1062, line: 171, column: 2)
!10214 = !DILocation(line: 173, column: 31, scope: !10196)
!10215 = !DILocation(line: 173, column: 12, scope: !10196)
!10216 = !DILocation(line: 180, column: 1, scope: !10196)
!10217 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1062, file: !1062, line: 182, type: !10218, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10220)
!10218 = !DISubroutineType(types: !10219)
!10219 = !{!103, !9835}
!10220 = !{!10221, !10222}
!10221 = !DILocalVariable(name: "chan", arg: 1, scope: !10217, file: !1062, line: 182, type: !9835)
!10222 = !DILocalVariable(name: "err", scope: !10217, file: !1062, line: 187, type: !103)
!10223 = !DILocation(line: 0, scope: !10217)
!10224 = !DILocation(line: 184, column: 2, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10226, file: !1062, line: 184, column: 2)
!10226 = distinct !DILexicalBlock(scope: !10217, file: !1062, line: 184, column: 2)
!10227 = !DILocation(line: 184, column: 2, scope: !10226)
!10228 = !DILocation(line: 184, column: 2, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10225, file: !1062, line: 184, column: 2)
!10230 = !DILocation(line: 185, column: 2, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !1062, line: 185, column: 2)
!10232 = distinct !DILexicalBlock(scope: !10217, file: !1062, line: 185, column: 2)
!10233 = !DILocation(line: 185, column: 2, scope: !10232)
!10234 = !DILocation(line: 185, column: 2, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10231, file: !1062, line: 185, column: 2)
!10236 = !DILocation(line: 187, column: 33, scope: !10217)
!10237 = !DILocation(line: 187, column: 12, scope: !10217)
!10238 = !DILocation(line: 189, column: 2, scope: !10217)
!10239 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1062, file: !1062, line: 192, type: !10240, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10243)
!10240 = !DISubroutineType(types: !10241)
!10241 = !{!103, !9957, !10242, !9821}
!10242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9835, size: 32)
!10243 = !{!10244, !10245, !10246}
!10244 = !DILocalVariable(name: "sub", arg: 1, scope: !10239, file: !1062, line: 192, type: !9957)
!10245 = !DILocalVariable(name: "chan", arg: 2, scope: !10239, file: !1062, line: 192, type: !10242)
!10246 = !DILocalVariable(name: "timeout", arg: 3, scope: !10239, file: !1062, line: 193, type: !9821)
!10247 = !DILocation(line: 0, scope: !10239)
!10248 = !DILocation(line: 195, column: 2, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !1062, line: 195, column: 2)
!10250 = distinct !DILexicalBlock(scope: !10239, file: !1062, line: 195, column: 2)
!10251 = !DILocation(line: 195, column: 2, scope: !10250)
!10252 = !DILocation(line: 195, column: 2, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10249, file: !1062, line: 195, column: 2)
!10254 = !DILocation(line: 196, column: 2, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !1062, line: 196, column: 2)
!10256 = distinct !DILexicalBlock(scope: !10239, file: !1062, line: 196, column: 2)
!10257 = !DILocation(line: 196, column: 2, scope: !10256)
!10258 = !DILocation(line: 196, column: 2, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10255, file: !1062, line: 196, column: 2)
!10260 = !DILocation(line: 197, column: 2, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !1062, line: 197, column: 2)
!10262 = distinct !DILexicalBlock(scope: !10239, file: !1062, line: 197, column: 2)
!10263 = !DILocation(line: 197, column: 2, scope: !10262)
!10264 = !DILocation(line: 197, column: 2, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10261, file: !1062, line: 197, column: 2)
!10266 = !DILocation(line: 199, column: 11, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10239, file: !1062, line: 199, column: 6)
!10268 = !DILocation(line: 199, column: 17, scope: !10267)
!10269 = !DILocation(line: 199, column: 6, scope: !10239)
!10270 = !DILocation(line: 203, column: 32, scope: !10239)
!10271 = !DILocation(line: 203, column: 9, scope: !10239)
!10272 = !DILocation(line: 203, column: 2, scope: !10239)
!10273 = !DILocation(line: 204, column: 1, scope: !10239)
!10274 = distinct !DISubprogram(name: "k_msgq_get", scope: !5334, file: !5334, line: 1147, type: !10275, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !10277)
!10275 = !DISubroutineType(types: !10276)
!10276 = !{!103, !9964, !102, !9821}
!10277 = !{!10278, !10279, !10280}
!10278 = !DILocalVariable(name: "msgq", arg: 1, scope: !10274, file: !5334, line: 1147, type: !9964)
!10279 = !DILocalVariable(name: "data", arg: 2, scope: !10274, file: !5334, line: 1147, type: !102)
!10280 = !DILocalVariable(name: "timeout", arg: 3, scope: !10274, file: !5334, line: 1147, type: !9821)
!10281 = !DILocation(line: 0, scope: !10274)
!10282 = !DILocation(line: 1157, column: 2, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10274, file: !5334, line: 1157, column: 2)
!10284 = !{i64 2155074124}
!10285 = !DILocation(line: 1158, column: 9, scope: !10274)
!10286 = !DILocation(line: 1158, column: 2, scope: !10274)
!10287 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1183, file: !1183, line: 368, type: !1236, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10288)
!10288 = !{!10289}
!10289 = !DILocalVariable(name: "dev", arg: 1, scope: !10287, file: !1183, line: 368, type: !1212)
!10290 = !DILocation(line: 0, scope: !10287)
!10291 = !DILocation(line: 370, column: 2, scope: !10287)
!10292 = !DILocation(line: 371, column: 1, scope: !10287)
!10293 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1183, file: !1183, line: 243, type: !10294, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10296)
!10294 = !DISubroutineType(types: !10295)
!10295 = !{null, !103, !103, !1212}
!10296 = !{!10297, !10298, !10299, !10300, !10302}
!10297 = !DILocalVariable(name: "min", arg: 1, scope: !10293, file: !1183, line: 243, type: !103)
!10298 = !DILocalVariable(name: "max", arg: 2, scope: !10293, file: !1183, line: 243, type: !103)
!10299 = !DILocalVariable(name: "dev", arg: 3, scope: !10293, file: !1183, line: 243, type: !1212)
!10300 = !DILocalVariable(name: "data", scope: !10293, file: !1183, line: 245, type: !10301)
!10301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!10302 = !DILocalVariable(name: "line", scope: !10293, file: !1183, line: 246, type: !103)
!10303 = !DILocation(line: 0, scope: !10293)
!10304 = !DILocation(line: 245, column: 38, scope: !10293)
!10305 = !DILocation(line: 249, column: 24, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !1183, line: 249, column: 2)
!10307 = distinct !DILexicalBlock(scope: !10293, file: !1183, line: 249, column: 2)
!10308 = !DILocation(line: 249, column: 2, scope: !10307)
!10309 = !DILocation(line: 251, column: 7, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !1183, line: 251, column: 7)
!10311 = distinct !DILexicalBlock(scope: !10306, file: !1183, line: 249, column: 39)
!10312 = !DILocation(line: 251, column: 7, scope: !10311)
!10313 = !DILocation(line: 253, column: 4, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10310, file: !1183, line: 251, column: 36)
!10315 = !DILocation(line: 256, column: 24, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10314, file: !1183, line: 256, column: 8)
!10317 = !DILocation(line: 256, column: 9, scope: !10316)
!10318 = !DILocation(line: 256, column: 8, scope: !10314)
!10319 = !DILocation(line: 260, column: 43, scope: !10314)
!10320 = !DILocation(line: 260, column: 4, scope: !10314)
!10321 = !DILocation(line: 261, column: 3, scope: !10314)
!10322 = !DILocation(line: 249, column: 35, scope: !10306)
!10323 = distinct !{!10323, !10308, !10324}
!10324 = !DILocation(line: 262, column: 2, scope: !10307)
!10325 = !DILocation(line: 263, column: 1, scope: !10293)
!10326 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1183, file: !1183, line: 158, type: !764, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10327)
!10327 = !{!10328}
!10328 = !DILocalVariable(name: "line", arg: 1, scope: !10326, file: !1183, line: 158, type: !103)
!10329 = !DILocation(line: 0, scope: !10326)
!10330 = !DILocation(line: 170, column: 38, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10332, file: !1183, line: 160, column: 17)
!10332 = distinct !DILexicalBlock(scope: !10326, file: !1183, line: 160, column: 6)
!10333 = !DILocation(line: 170, column: 10, scope: !10331)
!10334 = !DILocation(line: 176, column: 1, scope: !10326)
!10335 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1183, file: !1183, line: 183, type: !10336, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10338)
!10336 = !DISubroutineType(types: !10337)
!10337 = !{null, !103}
!10338 = !{!10339}
!10339 = !DILocalVariable(name: "line", arg: 1, scope: !10335, file: !1183, line: 183, type: !103)
!10340 = !DILocation(line: 0, scope: !10335)
!10341 = !DILocation(line: 195, column: 28, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !1183, line: 185, column: 17)
!10343 = distinct !DILexicalBlock(scope: !10335, file: !1183, line: 185, column: 6)
!10344 = !DILocation(line: 195, column: 3, scope: !10342)
!10345 = !DILocation(line: 200, column: 1, scope: !10335)
!10346 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10347, file: !10347, line: 910, type: !8027, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10348)
!10347 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10348 = !{!10349}
!10349 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10346, file: !10347, line: 910, type: !111)
!10350 = !DILocation(line: 0, scope: !10346)
!10351 = !DILocation(line: 912, column: 3, scope: !10346)
!10352 = !DILocation(line: 913, column: 1, scope: !10346)
!10353 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10347, file: !10347, line: 834, type: !9214, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10354)
!10354 = !{!10355}
!10355 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10353, file: !10347, line: 834, type: !111)
!10356 = !DILocation(line: 0, scope: !10353)
!10357 = !DILocation(line: 836, column: 11, scope: !10353)
!10358 = !DILocation(line: 836, column: 40, scope: !10353)
!10359 = !DILocation(line: 836, column: 3, scope: !10353)
!10360 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1183, file: !1183, line: 304, type: !1236, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10361)
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "dev", arg: 1, scope: !10360, file: !1183, line: 304, type: !1212)
!10363 = !DILocation(line: 0, scope: !10360)
!10364 = !DILocation(line: 306, column: 2, scope: !10360)
!10365 = !DILocation(line: 307, column: 1, scope: !10360)
!10366 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1183, file: !1183, line: 299, type: !1236, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10367)
!10367 = !{!10368}
!10368 = !DILocalVariable(name: "dev", arg: 1, scope: !10366, file: !1183, line: 299, type: !1212)
!10369 = !DILocation(line: 0, scope: !10366)
!10370 = !DILocation(line: 301, column: 2, scope: !10366)
!10371 = !DILocation(line: 302, column: 1, scope: !10366)
!10372 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1183, file: !1183, line: 294, type: !1236, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10373)
!10373 = !{!10374}
!10374 = !DILocalVariable(name: "dev", arg: 1, scope: !10372, file: !1183, line: 294, type: !1212)
!10375 = !DILocation(line: 0, scope: !10372)
!10376 = !DILocation(line: 296, column: 2, scope: !10372)
!10377 = !DILocation(line: 297, column: 1, scope: !10372)
!10378 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1183, file: !1183, line: 397, type: !1236, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10379)
!10379 = !{!10380}
!10380 = !DILocalVariable(name: "dev", arg: 1, scope: !10378, file: !1183, line: 397, type: !1212)
!10381 = !DILocation(line: 0, scope: !10378)
!10382 = !DILocation(line: 399, column: 2, scope: !10378)
!10383 = !DILocation(line: 400, column: 1, scope: !10378)
!10384 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1183, file: !1183, line: 392, type: !1236, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10385)
!10385 = !{!10386}
!10386 = !DILocalVariable(name: "dev", arg: 1, scope: !10384, file: !1183, line: 392, type: !1212)
!10387 = !DILocation(line: 0, scope: !10384)
!10388 = !DILocation(line: 394, column: 2, scope: !10384)
!10389 = !DILocation(line: 395, column: 1, scope: !10384)
!10390 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1183, file: !1183, line: 289, type: !1236, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10391)
!10391 = !{!10392}
!10392 = !DILocalVariable(name: "dev", arg: 1, scope: !10390, file: !1183, line: 289, type: !1212)
!10393 = !DILocation(line: 0, scope: !10390)
!10394 = !DILocation(line: 291, column: 2, scope: !10390)
!10395 = !DILocation(line: 292, column: 1, scope: !10390)
!10396 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1183, file: !1183, line: 387, type: !1236, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10397)
!10397 = !{!10398}
!10398 = !DILocalVariable(name: "dev", arg: 1, scope: !10396, file: !1183, line: 387, type: !1212)
!10399 = !DILocation(line: 0, scope: !10396)
!10400 = !DILocation(line: 389, column: 2, scope: !10396)
!10401 = !DILocation(line: 390, column: 1, scope: !10396)
!10402 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1183, file: !1183, line: 382, type: !1236, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10403)
!10403 = !{!10404}
!10404 = !DILocalVariable(name: "dev", arg: 1, scope: !10402, file: !1183, line: 382, type: !1212)
!10405 = !DILocation(line: 0, scope: !10402)
!10406 = !DILocation(line: 384, column: 2, scope: !10402)
!10407 = !DILocation(line: 385, column: 1, scope: !10402)
!10408 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1183, file: !1183, line: 373, type: !1236, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10409)
!10409 = !{!10410}
!10410 = !DILocalVariable(name: "dev", arg: 1, scope: !10408, file: !1183, line: 373, type: !1212)
!10411 = !DILocation(line: 0, scope: !10408)
!10412 = !DILocation(line: 375, column: 2, scope: !10408)
!10413 = !DILocation(line: 376, column: 1, scope: !10408)
!10414 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1183, file: !1183, line: 284, type: !1236, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10415)
!10415 = !{!10416}
!10416 = !DILocalVariable(name: "dev", arg: 1, scope: !10414, file: !1183, line: 284, type: !1212)
!10417 = !DILocation(line: 0, scope: !10414)
!10418 = !DILocation(line: 286, column: 2, scope: !10414)
!10419 = !DILocation(line: 287, column: 1, scope: !10414)
!10420 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1183, file: !1183, line: 416, type: !1210, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10421)
!10421 = !{!10422}
!10422 = !DILocalVariable(name: "dev", arg: 1, scope: !10420, file: !1183, line: 416, type: !1212)
!10423 = !DILocation(line: 0, scope: !10420)
!10424 = !DILocation(line: 418, column: 2, scope: !10420)
!10425 = !DILocation(line: 420, column: 2, scope: !10420)
!10426 = !DILocation(line: 0, scope: !1235)
!10427 = !DILocation(line: 493, column: 2, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 493, column: 2)
!10429 = !DILocation(line: 497, column: 2, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 497, column: 2)
!10431 = !DILocation(line: 507, column: 2, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 507, column: 2)
!10433 = !DILocation(line: 512, column: 2, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 512, column: 2)
!10435 = !DILocation(line: 516, column: 2, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 516, column: 2)
!10437 = !DILocation(line: 523, column: 2, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 523, column: 2)
!10439 = !DILocation(line: 527, column: 2, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 527, column: 2)
!10441 = !DILocation(line: 581, column: 2, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 581, column: 2)
!10443 = !DILocation(line: 586, column: 2, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 586, column: 2)
!10445 = !DILocation(line: 591, column: 2, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 591, column: 2)
!10447 = !DILocation(line: 595, column: 2, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !1235, file: !1183, line: 595, column: 2)
!10449 = !DILocation(line: 607, column: 1, scope: !1235)
!10450 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1183, file: !1183, line: 112, type: !10336, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10451)
!10451 = !{!10452, !10453}
!10452 = !DILocalVariable(name: "line", arg: 1, scope: !10450, file: !1183, line: 112, type: !103)
!10453 = !DILocalVariable(name: "irqnum", scope: !10450, file: !1183, line: 114, type: !103)
!10454 = !DILocation(line: 0, scope: !10450)
!10455 = !DILocation(line: 122, column: 13, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10450, file: !1183, line: 122, column: 6)
!10457 = !DILocation(line: 122, column: 6, scope: !10450)
!10458 = !DILocation(line: 123, column: 3, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !1183, line: 123, column: 3)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !1183, line: 123, column: 3)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !1183, line: 123, column: 3)
!10462 = distinct !DILexicalBlock(scope: !10456, file: !1183, line: 122, column: 22)
!10463 = !DILocation(line: 121, column: 11, scope: !10450)
!10464 = !DILocation(line: 130, column: 26, scope: !10450)
!10465 = !DILocation(line: 130, column: 2, scope: !10450)
!10466 = !DILocation(line: 134, column: 2, scope: !10450)
!10467 = !DILocation(line: 135, column: 1, scope: !10450)
!10468 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10347, file: !10347, line: 268, type: !8027, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10469)
!10469 = !{!10470}
!10470 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10468, file: !10347, line: 268, type: !111)
!10471 = !DILocation(line: 0, scope: !10468)
!10472 = !DILocation(line: 270, column: 3, scope: !10468)
!10473 = !DILocation(line: 271, column: 1, scope: !10468)
!10474 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1183, file: !1183, line: 137, type: !10336, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10475)
!10475 = !{!10476}
!10476 = !DILocalVariable(name: "line", arg: 1, scope: !10474, file: !1183, line: 137, type: !103)
!10477 = !DILocation(line: 0, scope: !10474)
!10478 = !DILocation(line: 141, column: 11, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10474, file: !1183, line: 141, column: 6)
!10480 = !DILocation(line: 141, column: 6, scope: !10474)
!10481 = !DILocation(line: 145, column: 28, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10479, file: !1183, line: 141, column: 17)
!10483 = !DILocation(line: 145, column: 3, scope: !10482)
!10484 = !DILocation(line: 147, column: 2, scope: !10482)
!10485 = !DILocation(line: 151, column: 1, scope: !10474)
!10486 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10347, file: !10347, line: 309, type: !8027, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10487)
!10487 = !{!10488}
!10488 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10486, file: !10347, line: 309, type: !111)
!10489 = !DILocation(line: 0, scope: !10486)
!10490 = !DILocation(line: 311, column: 3, scope: !10486)
!10491 = !DILocation(line: 312, column: 1, scope: !10486)
!10492 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1183, file: !1183, line: 202, type: !10493, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10495)
!10493 = !DISubroutineType(types: !10494)
!10494 = !{null, !103, !103}
!10495 = !{!10496, !10497}
!10496 = !DILocalVariable(name: "line", arg: 1, scope: !10492, file: !1183, line: 202, type: !103)
!10497 = !DILocalVariable(name: "trigger", arg: 2, scope: !10492, file: !1183, line: 202, type: !103)
!10498 = !DILocation(line: 0, scope: !10492)
!10499 = !DILocation(line: 211, column: 2, scope: !10492)
!10500 = !DILocation(line: 213, column: 36, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10492, file: !1183, line: 211, column: 19)
!10502 = !DILocation(line: 213, column: 3, scope: !10501)
!10503 = !DILocation(line: 214, column: 3, scope: !10501)
!10504 = !DILocation(line: 215, column: 3, scope: !10501)
!10505 = !DILocation(line: 217, column: 35, scope: !10501)
!10506 = !DILocation(line: 217, column: 3, scope: !10501)
!10507 = !DILocation(line: 218, column: 3, scope: !10501)
!10508 = !DILocation(line: 219, column: 3, scope: !10501)
!10509 = !DILocation(line: 221, column: 36, scope: !10501)
!10510 = !DILocation(line: 221, column: 3, scope: !10501)
!10511 = !DILocation(line: 222, column: 3, scope: !10501)
!10512 = !DILocation(line: 223, column: 3, scope: !10501)
!10513 = !DILocation(line: 225, column: 35, scope: !10501)
!10514 = !DILocation(line: 225, column: 3, scope: !10501)
!10515 = !DILocation(line: 226, column: 3, scope: !10501)
!10516 = !DILocation(line: 227, column: 3, scope: !10501)
!10517 = !DILocation(line: 232, column: 1, scope: !10492)
!10518 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10347, file: !10347, line: 573, type: !8027, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10519)
!10519 = !{!10520}
!10520 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10518, file: !10347, line: 573, type: !111)
!10521 = !DILocation(line: 0, scope: !10518)
!10522 = !DILocation(line: 575, column: 3, scope: !10518)
!10523 = !DILocation(line: 577, column: 1, scope: !10518)
!10524 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10347, file: !10347, line: 703, type: !8027, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10525)
!10525 = !{!10526}
!10526 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10524, file: !10347, line: 703, type: !111)
!10527 = !DILocation(line: 0, scope: !10524)
!10528 = !DILocation(line: 705, column: 3, scope: !10524)
!10529 = !DILocation(line: 706, column: 1, scope: !10524)
!10530 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10347, file: !10347, line: 529, type: !8027, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10531)
!10531 = !{!10532}
!10532 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10530, file: !10347, line: 529, type: !111)
!10533 = !DILocation(line: 0, scope: !10530)
!10534 = !DILocation(line: 531, column: 3, scope: !10530)
!10535 = !DILocation(line: 533, column: 1, scope: !10530)
!10536 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10347, file: !10347, line: 661, type: !8027, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10537)
!10537 = !{!10538}
!10538 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10536, file: !10347, line: 661, type: !111)
!10539 = !DILocation(line: 0, scope: !10536)
!10540 = !DILocation(line: 663, column: 3, scope: !10536)
!10541 = !DILocation(line: 664, column: 1, scope: !10536)
!10542 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1183, file: !1183, line: 433, type: !10543, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10545)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{!103, !103, !1223, !102}
!10545 = !{!10546, !10547, !10548, !10549, !10551}
!10546 = !DILocalVariable(name: "line", arg: 1, scope: !10542, file: !1183, line: 433, type: !103)
!10547 = !DILocalVariable(name: "cb", arg: 2, scope: !10542, file: !1183, line: 433, type: !1223)
!10548 = !DILocalVariable(name: "arg", arg: 3, scope: !10542, file: !1183, line: 433, type: !102)
!10549 = !DILocalVariable(name: "dev", scope: !10542, file: !1183, line: 435, type: !10550)
!10550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1212)
!10551 = !DILocalVariable(name: "data", scope: !10542, file: !1183, line: 436, type: !10301)
!10552 = !DILocation(line: 0, scope: !10542)
!10553 = !DILocation(line: 438, column: 21, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10542, file: !1183, line: 438, column: 6)
!10555 = !DILocation(line: 438, column: 6, scope: !10554)
!10556 = !DILocation(line: 438, column: 6, scope: !10542)
!10557 = !DILocation(line: 442, column: 20, scope: !10542)
!10558 = !DILocation(line: 443, column: 17, scope: !10542)
!10559 = !DILocation(line: 443, column: 22, scope: !10542)
!10560 = !DILocation(line: 445, column: 2, scope: !10542)
!10561 = !DILocation(line: 446, column: 1, scope: !10542)
!10562 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1183, file: !1183, line: 448, type: !10336, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1070, retainedNodes: !10563)
!10563 = !{!10564, !10565, !10566}
!10564 = !DILocalVariable(name: "line", arg: 1, scope: !10562, file: !1183, line: 448, type: !103)
!10565 = !DILocalVariable(name: "dev", scope: !10562, file: !1183, line: 450, type: !10550)
!10566 = !DILocalVariable(name: "data", scope: !10562, file: !1183, line: 451, type: !10301)
!10567 = !DILocation(line: 0, scope: !10562)
!10568 = !DILocation(line: 453, column: 17, scope: !10562)
!10569 = !DILocation(line: 453, column: 20, scope: !10562)
!10570 = !DILocation(line: 454, column: 17, scope: !10562)
!10571 = !DILocation(line: 454, column: 22, scope: !10562)
!10572 = !DILocation(line: 455, column: 1, scope: !10562)
!10573 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1374, file: !1374, line: 183, type: !1412, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10574)
!10574 = !{!10575, !10576, !10577, !10578, !10579}
!10575 = !DILocalVariable(name: "dev", arg: 1, scope: !10573, file: !1374, line: 183, type: !1403)
!10576 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10573, file: !1374, line: 184, type: !1414)
!10577 = !DILocalVariable(name: "pclken", scope: !10573, file: !1374, line: 186, type: !1364)
!10578 = !DILocalVariable(name: "reg", scope: !10573, file: !1374, line: 187, type: !1954)
!10579 = !DILocalVariable(name: "reg_val", scope: !10573, file: !1374, line: 188, type: !111)
!10580 = !DILocation(line: 0, scope: !10573)
!10581 = !DILocation(line: 192, column: 6, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10573, file: !1374, line: 192, column: 6)
!10583 = !DILocation(line: 192, column: 6, scope: !10573)
!10584 = !DILocation(line: 197, column: 52, scope: !10573)
!10585 = !DILocation(line: 197, column: 8, scope: !10573)
!10586 = !DILocation(line: 198, column: 12, scope: !10573)
!10587 = !DILocation(line: 199, column: 21, scope: !10573)
!10588 = !DILocation(line: 199, column: 10, scope: !10573)
!10589 = !DILocation(line: 200, column: 7, scope: !10573)
!10590 = !DILocation(line: 202, column: 2, scope: !10573)
!10591 = !DILocation(line: 203, column: 1, scope: !10573)
!10592 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1374, file: !1374, line: 205, type: !1412, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10593)
!10593 = !{!10594, !10595, !10596, !10597, !10598}
!10594 = !DILocalVariable(name: "dev", arg: 1, scope: !10592, file: !1374, line: 205, type: !1403)
!10595 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10592, file: !1374, line: 206, type: !1414)
!10596 = !DILocalVariable(name: "pclken", scope: !10592, file: !1374, line: 208, type: !1364)
!10597 = !DILocalVariable(name: "reg", scope: !10592, file: !1374, line: 209, type: !1954)
!10598 = !DILocalVariable(name: "reg_val", scope: !10592, file: !1374, line: 210, type: !111)
!10599 = !DILocation(line: 0, scope: !10592)
!10600 = !DILocation(line: 214, column: 6, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10592, file: !1374, line: 214, column: 6)
!10602 = !DILocation(line: 214, column: 6, scope: !10592)
!10603 = !DILocation(line: 219, column: 52, scope: !10592)
!10604 = !DILocation(line: 219, column: 8, scope: !10592)
!10605 = !DILocation(line: 220, column: 12, scope: !10592)
!10606 = !DILocation(line: 221, column: 22, scope: !10592)
!10607 = !DILocation(line: 221, column: 13, scope: !10592)
!10608 = !DILocation(line: 221, column: 10, scope: !10592)
!10609 = !DILocation(line: 222, column: 7, scope: !10592)
!10610 = !DILocation(line: 224, column: 2, scope: !10592)
!10611 = !DILocation(line: 225, column: 1, scope: !10592)
!10612 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1374, file: !1374, line: 262, type: !1428, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10613)
!10613 = !{!10614, !10615, !10616, !10617, !10618, !10619, !10620, !10621}
!10614 = !DILocalVariable(name: "clock", arg: 1, scope: !10612, file: !1374, line: 262, type: !1403)
!10615 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10612, file: !1374, line: 263, type: !1414)
!10616 = !DILocalVariable(name: "rate", arg: 3, scope: !10612, file: !1374, line: 264, type: !1370)
!10617 = !DILocalVariable(name: "pclken", scope: !10612, file: !1374, line: 266, type: !1364)
!10618 = !DILocalVariable(name: "ahb_clock", scope: !10612, file: !1374, line: 273, type: !111)
!10619 = !DILocalVariable(name: "apb1_clock", scope: !10612, file: !1374, line: 274, type: !111)
!10620 = !DILocalVariable(name: "apb2_clock", scope: !10612, file: !1374, line: 276, type: !111)
!10621 = !DILocalVariable(name: "ahb3_clock", scope: !10612, file: !1374, line: 286, type: !111)
!10622 = !DILocation(line: 0, scope: !10612)
!10623 = !DILocation(line: 273, column: 23, scope: !10612)
!10624 = !DILocation(line: 299, column: 18, scope: !10612)
!10625 = !DILocation(line: 299, column: 2, scope: !10612)
!10626 = !DILocation(line: 274, column: 24, scope: !10612)
!10627 = !DILocation(line: 319, column: 3, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10612, file: !1374, line: 299, column: 23)
!10629 = !DILocation(line: 276, column: 24, scope: !10612)
!10630 = !DILocation(line: 323, column: 3, scope: !10628)
!10631 = !DILocation(line: 346, column: 33, scope: !10628)
!10632 = !DILocation(line: 346, column: 11, scope: !10628)
!10633 = !DILocation(line: 350, column: 3, scope: !10628)
!10634 = !DILocation(line: 354, column: 33, scope: !10628)
!10635 = !DILocation(line: 354, column: 11, scope: !10628)
!10636 = !DILocation(line: 358, column: 3, scope: !10628)
!10637 = !DILocation(line: 374, column: 3, scope: !10628)
!10638 = !DILocation(line: 379, column: 3, scope: !10628)
!10639 = !DILocation(line: 0, scope: !10628)
!10640 = !DILocation(line: 396, column: 1, scope: !10612)
!10641 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1374, file: !1374, line: 227, type: !1444, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10642)
!10642 = !{!10643, !10644, !10645, !10646, !10647, !10648, !10649, !10650}
!10643 = !DILocalVariable(name: "dev", arg: 1, scope: !10641, file: !1374, line: 227, type: !1403)
!10644 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10641, file: !1374, line: 228, type: !1414)
!10645 = !DILocalVariable(name: "data", arg: 3, scope: !10641, file: !1374, line: 229, type: !102)
!10646 = !DILocalVariable(name: "pclken", scope: !10641, file: !1374, line: 233, type: !1364)
!10647 = !DILocalVariable(name: "reg", scope: !10641, file: !1374, line: 234, type: !1954)
!10648 = !DILocalVariable(name: "reg_val", scope: !10641, file: !1374, line: 235, type: !111)
!10649 = !DILocalVariable(name: "dt_val", scope: !10641, file: !1374, line: 235, type: !111)
!10650 = !DILocalVariable(name: "err", scope: !10641, file: !1374, line: 236, type: !103)
!10651 = !DILocation(line: 0, scope: !10641)
!10652 = !DILocation(line: 241, column: 30, scope: !10641)
!10653 = !DILocation(line: 241, column: 8, scope: !10641)
!10654 = !DILocation(line: 242, column: 10, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10641, file: !1374, line: 242, column: 6)
!10656 = !DILocation(line: 242, column: 6, scope: !10641)
!10657 = !DILocation(line: 247, column: 11, scope: !10641)
!10658 = !DILocation(line: 248, column: 6, scope: !10641)
!10659 = !DILocation(line: 247, column: 44, scope: !10641)
!10660 = !DILocation(line: 250, column: 6, scope: !10641)
!10661 = !DILocation(line: 249, column: 52, scope: !10641)
!10662 = !DILocation(line: 249, column: 8, scope: !10641)
!10663 = !DILocation(line: 251, column: 12, scope: !10641)
!10664 = !DILocation(line: 252, column: 10, scope: !10641)
!10665 = !DILocation(line: 253, column: 7, scope: !10641)
!10666 = !DILocation(line: 255, column: 2, scope: !10641)
!10667 = !DILocation(line: 260, column: 1, scope: !10641)
!10668 = distinct !DISubprogram(name: "enabled_clock", scope: !1374, file: !1374, line: 100, type: !10669, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10671)
!10669 = !DISubroutineType(types: !10670)
!10670 = !{!103, !111}
!10671 = !{!10672, !10673}
!10672 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10668, file: !1374, line: 100, type: !111)
!10673 = !DILocalVariable(name: "r", scope: !10668, file: !1374, line: 102, type: !103)
!10674 = !DILocation(line: 0, scope: !10668)
!10675 = !DILocation(line: 104, column: 2, scope: !10668)
!10676 = !DILocation(line: 180, column: 2, scope: !10668)
!10677 = !DILocation(line: 181, column: 1, scope: !10668)
!10678 = distinct !DISubprogram(name: "get_bus_clock", scope: !1374, file: !1374, line: 79, type: !10679, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!111, !111, !111}
!10681 = !{!10682, !10683}
!10682 = !DILocalVariable(name: "clock", arg: 1, scope: !10678, file: !1374, line: 79, type: !111)
!10683 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10678, file: !1374, line: 79, type: !111)
!10684 = !DILocation(line: 0, scope: !10678)
!10685 = !DILocation(line: 81, column: 15, scope: !10678)
!10686 = !DILocation(line: 81, column: 2, scope: !10678)
!10687 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1374, file: !1374, line: 68, type: !10688, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10690)
!10688 = !DISubroutineType(types: !10689)
!10689 = !{!111, !111, !103, !103, !103}
!10690 = !{!10691, !10692, !10693, !10694}
!10691 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10687, file: !1374, line: 68, type: !111)
!10692 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10687, file: !1374, line: 69, type: !103)
!10693 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10687, file: !1374, line: 70, type: !103)
!10694 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10687, file: !1374, line: 71, type: !103)
!10695 = !DILocation(line: 0, scope: !10687)
!10696 = !DILocation(line: 75, column: 22, scope: !10687)
!10697 = !DILocation(line: 76, column: 13, scope: !10687)
!10698 = !DILocation(line: 75, column: 34, scope: !10687)
!10699 = !DILocation(line: 75, column: 2, scope: !10687)
!10700 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1374, file: !1374, line: 641, type: !1401, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10701)
!10701 = !{!10702, !10703, !10704}
!10702 = !DILocalVariable(name: "dev", arg: 1, scope: !10700, file: !1374, line: 641, type: !1403)
!10703 = !DILocalVariable(name: "old_flash_freq", scope: !10700, file: !1374, line: 664, type: !111)
!10704 = !DILocalVariable(name: "new_flash_freq", scope: !10700, file: !1374, line: 665, type: !111)
!10705 = !DILocation(line: 0, scope: !10700)
!10706 = !DILocation(line: 646, column: 2, scope: !10700)
!10707 = !DILocation(line: 667, column: 19, scope: !10700)
!10708 = !DILocation(line: 674, column: 21, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10700, file: !1374, line: 674, column: 6)
!10710 = !DILocation(line: 674, column: 6, scope: !10700)
!10711 = !DILocation(line: 675, column: 3, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10709, file: !1374, line: 674, column: 59)
!10713 = !DILocation(line: 676, column: 2, scope: !10712)
!10714 = !DILocation(line: 680, column: 2, scope: !10700)
!10715 = !DILocation(line: 683, column: 2, scope: !10700)
!10716 = !DILocation(line: 690, column: 3, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10718, file: !1374, line: 689, column: 9)
!10718 = distinct !DILexicalBlock(scope: !10700, file: !1374, line: 685, column: 6)
!10719 = !DILocation(line: 695, column: 2, scope: !10700)
!10720 = !DILocation(line: 696, column: 2, scope: !10700)
!10721 = !DILocation(line: 696, column: 9, scope: !10700)
!10722 = !DILocation(line: 696, column: 34, scope: !10700)
!10723 = distinct !{!10723, !10720, !10724}
!10724 = !DILocation(line: 697, column: 2, scope: !10700)
!10725 = !DILocation(line: 720, column: 21, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10700, file: !1374, line: 720, column: 6)
!10727 = !DILocation(line: 720, column: 6, scope: !10700)
!10728 = !DILocation(line: 721, column: 3, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10726, file: !1374, line: 720, column: 60)
!10730 = !DILocation(line: 722, column: 2, scope: !10729)
!10731 = !DILocation(line: 725, column: 18, scope: !10700)
!10732 = !DILocation(line: 728, column: 2, scope: !10700)
!10733 = !DILocation(line: 730, column: 2, scope: !10700)
!10734 = !DILocation(line: 745, column: 2, scope: !10700)
!10735 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10736, file: !10736, line: 3275, type: !8017, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10736 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10737 = !DILocation(line: 3277, column: 21, scope: !10735)
!10738 = !DILocation(line: 3277, column: 3, scope: !10735)
!10739 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1374, file: !1374, line: 507, type: !323, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10740 = !DILocation(line: 516, column: 4, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10742, file: !1374, line: 515, column: 10)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !1374, line: 513, column: 7)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !1374, line: 510, column: 37)
!10744 = distinct !DILexicalBlock(scope: !10739, file: !1374, line: 510, column: 6)
!10745 = !DILocation(line: 526, column: 3, scope: !10743)
!10746 = !DILocation(line: 527, column: 3, scope: !10743)
!10747 = !DILocation(line: 527, column: 10, scope: !10743)
!10748 = !DILocation(line: 527, column: 31, scope: !10743)
!10749 = distinct !{!10749, !10746, !10750}
!10750 = !DILocation(line: 529, column: 3, scope: !10743)
!10751 = !DILocation(line: 583, column: 3, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10753, file: !1374, line: 577, column: 37)
!10753 = distinct !DILexicalBlock(scope: !10739, file: !1374, line: 577, column: 6)
!10754 = !DILocation(line: 584, column: 3, scope: !10752)
!10755 = !DILocation(line: 584, column: 10, scope: !10752)
!10756 = !DILocation(line: 584, column: 31, scope: !10752)
!10757 = distinct !{!10757, !10754, !10758}
!10758 = !DILocation(line: 585, column: 3, scope: !10752)
!10759 = !DILocation(line: 627, column: 1, scope: !10739)
!10760 = distinct !DISubprogram(name: "set_up_plls", scope: !1374, file: !1374, line: 448, type: !323, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10761 = !DILocation(line: 460, column: 6, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10760, file: !1374, line: 460, column: 6)
!10763 = !DILocation(line: 460, column: 31, scope: !10762)
!10764 = !DILocation(line: 460, column: 6, scope: !10760)
!10765 = !DILocation(line: 461, column: 3, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10762, file: !1374, line: 460, column: 67)
!10767 = !DILocation(line: 462, column: 3, scope: !10766)
!10768 = !DILocation(line: 463, column: 2, scope: !10766)
!10769 = !DILocation(line: 464, column: 2, scope: !10760)
!10770 = !DILocation(line: 488, column: 2, scope: !10760)
!10771 = !DILocation(line: 492, column: 2, scope: !10760)
!10772 = !DILocation(line: 496, column: 2, scope: !10760)
!10773 = !DILocation(line: 499, column: 2, scope: !10760)
!10774 = !DILocation(line: 500, column: 2, scope: !10760)
!10775 = !DILocation(line: 500, column: 9, scope: !10760)
!10776 = !DILocation(line: 500, column: 30, scope: !10760)
!10777 = distinct !{!10777, !10774, !10778}
!10778 = !DILocation(line: 502, column: 2, scope: !10760)
!10779 = !DILocation(line: 505, column: 1, scope: !10760)
!10780 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10736, file: !10736, line: 3224, type: !8027, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10781)
!10781 = !{!10782}
!10782 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10780, file: !10736, line: 3224, type: !111)
!10783 = !DILocation(line: 0, scope: !10780)
!10784 = !DILocation(line: 3226, column: 3, scope: !10780)
!10785 = !DILocation(line: 3227, column: 1, scope: !10780)
!10786 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10736, file: !10736, line: 3188, type: !8027, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10787)
!10787 = !{!10788}
!10788 = !DILocalVariable(name: "Source", arg: 1, scope: !10786, file: !10736, line: 3188, type: !111)
!10789 = !DILocation(line: 0, scope: !10786)
!10790 = !DILocation(line: 3190, column: 3, scope: !10786)
!10791 = !DILocation(line: 3191, column: 1, scope: !10786)
!10792 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10736, file: !10736, line: 3204, type: !8017, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10793 = !DILocation(line: 3206, column: 21, scope: !10792)
!10794 = !DILocation(line: 3206, column: 3, scope: !10792)
!10795 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10736, file: !10736, line: 3240, type: !8027, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10796)
!10796 = !{!10797}
!10797 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10795, file: !10736, line: 3240, type: !111)
!10798 = !DILocation(line: 0, scope: !10795)
!10799 = !DILocation(line: 3242, column: 3, scope: !10795)
!10800 = !DILocation(line: 3243, column: 1, scope: !10795)
!10801 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10736, file: !10736, line: 3256, type: !8027, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !10802)
!10802 = !{!10803}
!10803 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10801, file: !10736, line: 3256, type: !111)
!10804 = !DILocation(line: 0, scope: !10801)
!10805 = !DILocation(line: 3258, column: 3, scope: !10801)
!10806 = !DILocation(line: 3259, column: 1, scope: !10801)
!10807 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1374, file: !1374, line: 409, type: !323, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10808 = !DILocation(line: 412, column: 6, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10807, file: !1374, line: 412, column: 6)
!10810 = !DILocation(line: 412, column: 27, scope: !10809)
!10811 = !DILocation(line: 412, column: 6, scope: !10807)
!10812 = !DILocation(line: 414, column: 3, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10809, file: !1374, line: 412, column: 33)
!10814 = !DILocation(line: 415, column: 3, scope: !10813)
!10815 = !DILocation(line: 415, column: 10, scope: !10813)
!10816 = !DILocation(line: 415, column: 31, scope: !10813)
!10817 = distinct !{!10817, !10814, !10818}
!10818 = !DILocation(line: 417, column: 3, scope: !10813)
!10819 = !DILocation(line: 421, column: 2, scope: !10807)
!10820 = !DILocation(line: 422, column: 2, scope: !10807)
!10821 = !DILocation(line: 422, column: 9, scope: !10807)
!10822 = !DILocation(line: 422, column: 34, scope: !10807)
!10823 = distinct !{!10823, !10820, !10824}
!10824 = !DILocation(line: 423, column: 2, scope: !10807)
!10825 = !DILocation(line: 424, column: 1, scope: !10807)
!10826 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10736, file: !10736, line: 4195, type: !323, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10827 = !DILocation(line: 4197, column: 3, scope: !10826)
!10828 = !DILocation(line: 4198, column: 1, scope: !10826)
!10829 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10736, file: !10736, line: 4184, type: !323, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10830 = !DILocation(line: 4186, column: 3, scope: !10829)
!10831 = !DILocation(line: 4187, column: 1, scope: !10829)
!10832 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10736, file: !10736, line: 4205, type: !8017, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10833 = !DILocation(line: 4207, column: 11, scope: !10832)
!10834 = !DILocation(line: 4207, column: 44, scope: !10832)
!10835 = !DILocation(line: 4207, column: 3, scope: !10832)
!10836 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10736, file: !10736, line: 3007, type: !8017, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10837 = !DILocation(line: 3009, column: 11, scope: !10836)
!10838 = !DILocation(line: 3009, column: 44, scope: !10836)
!10839 = !DILocation(line: 3009, column: 3, scope: !10836)
!10840 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10736, file: !10736, line: 2987, type: !323, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10841 = !DILocation(line: 2989, column: 3, scope: !10840)
!10842 = !DILocation(line: 2990, column: 1, scope: !10840)
!10843 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10736, file: !10736, line: 2939, type: !323, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10844 = !DILocation(line: 2941, column: 3, scope: !10843)
!10845 = !DILocation(line: 2942, column: 1, scope: !10843)
!10846 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10736, file: !10736, line: 2949, type: !323, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10847 = !DILocation(line: 2951, column: 3, scope: !10846)
!10848 = !DILocation(line: 2952, column: 1, scope: !10846)
!10849 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10736, file: !10736, line: 2969, type: !8017, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10850 = !DILocation(line: 2971, column: 11, scope: !10849)
!10851 = !DILocation(line: 2971, column: 44, scope: !10849)
!10852 = !DILocation(line: 2971, column: 3, scope: !10849)
!10853 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10736, file: !10736, line: 3143, type: !323, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10854 = !DILocation(line: 3145, column: 3, scope: !10853)
!10855 = !DILocation(line: 3146, column: 1, scope: !10853)
!10856 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10736, file: !10736, line: 3163, type: !8017, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1309, retainedNodes: !2571)
!10857 = !DILocation(line: 3165, column: 11, scope: !10856)
!10858 = !DILocation(line: 3165, column: 46, scope: !10856)
!10859 = !DILocation(line: 3165, column: 3, scope: !10856)
!10860 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10861, file: !10861, line: 40, type: !8017, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3486, retainedNodes: !2571)
!10861 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10862 = !DILocation(line: 45, column: 3, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !10861, line: 44, column: 44)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !10861, line: 44, column: 13)
!10865 = distinct !DILexicalBlock(scope: !10860, file: !10861, line: 42, column: 6)
!10866 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10861, file: !10861, line: 56, type: !323, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3486, retainedNodes: !2571)
!10867 = !DILocation(line: 58, column: 2, scope: !10866)
!10868 = !DILocation(line: 62, column: 1, scope: !10866)
!10869 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10736, file: !10736, line: 4304, type: !10870, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3486, retainedNodes: !10872)
!10870 = !DISubroutineType(types: !10871)
!10871 = !{null, !111, !111, !111, !111}
!10872 = !{!10873, !10874, !10875, !10876}
!10873 = !DILocalVariable(name: "Source", arg: 1, scope: !10869, file: !10736, line: 4304, type: !111)
!10874 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10869, file: !10736, line: 4304, type: !111)
!10875 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10869, file: !10736, line: 4304, type: !111)
!10876 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10869, file: !10736, line: 4304, type: !111)
!10877 = !DILocation(line: 0, scope: !10869)
!10878 = !DILocation(line: 4306, column: 3, scope: !10869)
!10879 = !DILocation(line: 4308, column: 3, scope: !10869)
!10880 = !DILocation(line: 4310, column: 3, scope: !10869)
!10881 = !DILocation(line: 4312, column: 1, scope: !10869)
!10882 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10861, file: !10861, line: 69, type: !323, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3486, retainedNodes: !2571)
!10883 = !DILocation(line: 72, column: 2, scope: !10882)
!10884 = !DILocation(line: 73, column: 1, scope: !10882)
!10885 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10886, file: !10886, line: 1185, type: !8027, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3486, retainedNodes: !10887)
!10886 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10887 = !{!10888, !10889}
!10888 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10885, file: !10886, line: 1185, type: !111)
!10889 = !DILocalVariable(name: "tmpreg", scope: !10885, file: !10886, line: 1187, type: !777)
!10890 = !DILocation(line: 0, scope: !10885)
!10891 = !DILocation(line: 1187, column: 3, scope: !10885)
!10892 = !DILocation(line: 1187, column: 17, scope: !10885)
!10893 = !DILocation(line: 1188, column: 3, scope: !10885)
!10894 = !DILocation(line: 1190, column: 12, scope: !10885)
!10895 = !DILocation(line: 1190, column: 10, scope: !10885)
!10896 = !DILocation(line: 1191, column: 9, scope: !10885)
!10897 = !DILocation(line: 1192, column: 1, scope: !10885)
!10898 = distinct !DISubprogram(name: "uart_console_init", scope: !1505, file: !1505, line: 588, type: !1482, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !10899)
!10899 = !{!10900}
!10900 = !DILocalVariable(name: "arg", arg: 1, scope: !10898, file: !1505, line: 588, type: !1460)
!10901 = !DILocation(line: 0, scope: !10898)
!10902 = !DILocation(line: 593, column: 7, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10898, file: !1505, line: 593, column: 6)
!10904 = !DILocation(line: 593, column: 6, scope: !10898)
!10905 = !DILocation(line: 597, column: 2, scope: !10898)
!10906 = !DILocation(line: 599, column: 2, scope: !10898)
!10907 = !DILocation(line: 600, column: 1, scope: !10898)
!10908 = distinct !DISubprogram(name: "device_is_ready", scope: !10909, file: !10909, line: 47, type: !10910, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !10912)
!10909 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!122, !1460}
!10912 = !{!10913}
!10913 = !DILocalVariable(name: "dev", arg: 1, scope: !10908, file: !10909, line: 47, type: !1460)
!10914 = !DILocation(line: 0, scope: !10908)
!10915 = !DILocation(line: 55, column: 2, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10908, file: !10909, line: 55, column: 2)
!10917 = !{i64 2155297760}
!10918 = !DILocation(line: 56, column: 9, scope: !10908)
!10919 = !DILocation(line: 56, column: 2, scope: !10908)
!10920 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1505, file: !1505, line: 573, type: !323, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !2571)
!10921 = !DILocation(line: 576, column: 2, scope: !10920)
!10922 = !DILocation(line: 579, column: 2, scope: !10920)
!10923 = !DILocation(line: 581, column: 1, scope: !10920)
!10924 = distinct !DISubprogram(name: "console_out", scope: !1505, file: !1505, line: 77, type: !764, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !10925)
!10925 = !{!10926}
!10926 = !DILocalVariable(name: "c", arg: 1, scope: !10924, file: !1505, line: 77, type: !103)
!10927 = !DILocation(line: 0, scope: !10924)
!10928 = !DILocation(line: 89, column: 11, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10924, file: !1505, line: 89, column: 6)
!10930 = !DILocation(line: 89, column: 6, scope: !10924)
!10931 = !DILocation(line: 90, column: 3, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10929, file: !1505, line: 89, column: 17)
!10933 = !DILocation(line: 91, column: 2, scope: !10932)
!10934 = !DILocation(line: 92, column: 34, scope: !10924)
!10935 = !DILocation(line: 92, column: 2, scope: !10924)
!10936 = !DILocation(line: 94, column: 2, scope: !10924)
!10937 = distinct !DISubprogram(name: "uart_poll_out", scope: !10938, file: !10938, line: 95, type: !1478, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !10939)
!10938 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/dyn_channel")
!10939 = !{!10940, !10941}
!10940 = !DILocalVariable(name: "dev", arg: 1, scope: !10937, file: !10938, line: 95, type: !1460)
!10941 = !DILocalVariable(name: "out_char", arg: 2, scope: !10937, file: !10938, line: 95, type: !167)
!10942 = !DILocation(line: 0, scope: !10937)
!10943 = !DILocation(line: 105, column: 2, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10937, file: !10938, line: 105, column: 2)
!10945 = !{i64 2155381151}
!10946 = !DILocation(line: 106, column: 2, scope: !10937)
!10947 = !DILocation(line: 107, column: 1, scope: !10937)
!10948 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1454, file: !1454, line: 574, type: !1478, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !10949)
!10949 = !{!10950, !10951, !10952}
!10950 = !DILocalVariable(name: "dev", arg: 1, scope: !10948, file: !1454, line: 574, type: !1460)
!10951 = !DILocalVariable(name: "out_char", arg: 2, scope: !10948, file: !1454, line: 575, type: !167)
!10952 = !DILocalVariable(name: "api", scope: !10948, file: !1454, line: 577, type: !1451)
!10953 = !DILocation(line: 0, scope: !10948)
!10954 = !DILocation(line: 578, column: 40, scope: !10948)
!10955 = !DILocation(line: 580, column: 7, scope: !10948)
!10956 = !DILocation(line: 580, column: 2, scope: !10948)
!10957 = !DILocation(line: 581, column: 1, scope: !10948)
!10958 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !10910, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !10959)
!10959 = !{!10960}
!10960 = !DILocalVariable(name: "dev", arg: 1, scope: !10958, file: !797, line: 730, type: !1460)
!10961 = !DILocation(line: 0, scope: !10958)
!10962 = !DILocation(line: 732, column: 9, scope: !10958)
!10963 = !DILocation(line: 732, column: 2, scope: !10958)
!10964 = distinct !DISubprogram(name: "uart_register_input", scope: !1505, file: !1505, line: 560, type: !10965, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1448, retainedNodes: !11012)
!10965 = !DISubroutineType(types: !10966)
!10966 = !{null, !10967, !10967, !11009}
!10967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10968, size: 32)
!10968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !127, line: 2208, size: 160, elements: !10969)
!10969 = !{!10970}
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10968, file: !127, line: 2209, baseType: !10971, size: 160)
!10971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !127, line: 1709, size: 160, elements: !10972)
!10972 = !{!10973, !10986, !10990}
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10971, file: !127, line: 1710, baseType: !10974, size: 64)
!10974 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10975, line: 46, baseType: !10976)
!10975 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10975, line: 41, size: 64, elements: !10977)
!10977 = !{!10978, !10985}
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10976, file: !10975, line: 42, baseType: !10979, size: 32)
!10979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10980, size: 32)
!10980 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10975, line: 39, baseType: !10981)
!10981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10975, line: 35, size: 32, elements: !10982)
!10982 = !{!10983}
!10983 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10981, file: !10975, line: 36, baseType: !10984, size: 32)
!10984 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10975, line: 32, baseType: !111)
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10976, file: !10975, line: 43, baseType: !10979, size: 32, offset: 32)
!10986 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10971, file: !127, line: 1711, baseType: !10987, size: 32, offset: 64)
!10987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !10988)
!10988 = !{!10989}
!10989 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10987, file: !152, line: 52, baseType: !22, size: 32)
!10990 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10971, file: !127, line: 1712, baseType: !10991, size: 64, offset: 96)
!10991 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !10992)
!10992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !10993)
!10993 = !{!10994}
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10992, file: !131, line: 232, baseType: !10995, size: 64)
!10995 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !10996)
!10996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !10997)
!10997 = !{!10998, !11004}
!10998 = !DIDerivedType(tag: DW_TAG_member, scope: !10996, file: !136, line: 38, baseType: !10999, size: 32)
!10999 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10996, file: !136, line: 38, size: 32, elements: !11000)
!11000 = !{!11001, !11003}
!11001 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10999, file: !136, line: 39, baseType: !11002, size: 32)
!11002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10996, size: 32)
!11003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10999, file: !136, line: 40, baseType: !11002, size: 32)
!11004 = !DIDerivedType(tag: DW_TAG_member, scope: !10996, file: !136, line: 42, baseType: !11005, size: 32, offset: 32)
!11005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10996, file: !136, line: 42, size: 32, elements: !11006)
!11006 = !{!11007, !11008}
!11007 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11005, file: !136, line: 43, baseType: !11002, size: 32)
!11008 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11005, file: !136, line: 44, baseType: !11002, size: 32)
!11009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11010, size: 32)
!11010 = !DISubroutineType(types: !11011)
!11011 = !{!166, !160, !166}
!11012 = !{!11013, !11014, !11015}
!11013 = !DILocalVariable(name: "avail", arg: 1, scope: !10964, file: !1505, line: 560, type: !10967)
!11014 = !DILocalVariable(name: "lines", arg: 2, scope: !10964, file: !1505, line: 560, type: !10967)
!11015 = !DILocalVariable(name: "completion", arg: 3, scope: !10964, file: !1505, line: 561, type: !11009)
!11016 = !DILocation(line: 0, scope: !10964)
!11017 = !DILocation(line: 566, column: 1, scope: !10964)
!11018 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1685, file: !1685, line: 523, type: !1541, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11019)
!11019 = !{!11020, !11021, !11022, !11023, !11024}
!11020 = !DILocalVariable(name: "dev", arg: 1, scope: !11018, file: !1685, line: 523, type: !1543)
!11021 = !DILocalVariable(name: "pin", arg: 2, scope: !11018, file: !1685, line: 524, type: !1558)
!11022 = !DILocalVariable(name: "flags", arg: 3, scope: !11018, file: !1685, line: 524, type: !1559)
!11023 = !DILocalVariable(name: "err", scope: !11018, file: !1685, line: 526, type: !103)
!11024 = !DILocalVariable(name: "pincfg", scope: !11018, file: !1685, line: 527, type: !103)
!11025 = !DILocation(line: 0, scope: !11018)
!11026 = !DILocation(line: 527, column: 2, scope: !11018)
!11027 = !DILocation(line: 532, column: 8, scope: !11018)
!11028 = !DILocation(line: 533, column: 10, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11018, file: !1685, line: 533, column: 6)
!11030 = !DILocation(line: 533, column: 6, scope: !11018)
!11031 = !DILocation(line: 543, column: 13, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11018, file: !1685, line: 543, column: 6)
!11033 = !DILocation(line: 543, column: 28, scope: !11032)
!11034 = !DILocation(line: 543, column: 6, scope: !11018)
!11035 = !DILocation(line: 544, column: 14, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !1685, line: 544, column: 7)
!11037 = distinct !DILexicalBlock(scope: !11032, file: !1685, line: 543, column: 34)
!11038 = !DILocation(line: 544, column: 39, scope: !11036)
!11039 = !DILocation(line: 544, column: 7, scope: !11037)
!11040 = !DILocation(line: 545, column: 38, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !1685, line: 544, column: 45)
!11042 = !DILocation(line: 545, column: 4, scope: !11041)
!11043 = !DILocation(line: 546, column: 3, scope: !11041)
!11044 = !DILocation(line: 546, column: 21, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11036, file: !1685, line: 546, column: 14)
!11046 = !DILocation(line: 546, column: 45, scope: !11045)
!11047 = !DILocation(line: 546, column: 14, scope: !11036)
!11048 = !DILocation(line: 547, column: 40, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11045, file: !1685, line: 546, column: 51)
!11050 = !DILocation(line: 547, column: 4, scope: !11049)
!11051 = !DILocation(line: 548, column: 3, scope: !11049)
!11052 = !DILocation(line: 551, column: 32, scope: !11018)
!11053 = !DILocation(line: 551, column: 37, scope: !11018)
!11054 = !DILocation(line: 551, column: 2, scope: !11018)
!11055 = !DILocation(line: 554, column: 6, scope: !11018)
!11056 = !DILocation(line: 562, column: 1, scope: !11018)
!11057 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1685, file: !1685, line: 410, type: !11058, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11060)
!11058 = !DISubroutineType(types: !11059)
!11059 = !{!103, !1543, !1370}
!11060 = !{!11061, !11062, !11063, !11065}
!11061 = !DILocalVariable(name: "dev", arg: 1, scope: !11057, file: !1685, line: 410, type: !1543)
!11062 = !DILocalVariable(name: "value", arg: 2, scope: !11057, file: !1685, line: 410, type: !1370)
!11063 = !DILocalVariable(name: "cfg", scope: !11057, file: !1685, line: 412, type: !11064)
!11064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!11065 = !DILocalVariable(name: "gpio", scope: !11057, file: !1685, line: 413, type: !1616)
!11066 = !DILocation(line: 0, scope: !11057)
!11067 = !DILocation(line: 412, column: 45, scope: !11057)
!11068 = !DILocation(line: 413, column: 44, scope: !11057)
!11069 = !DILocation(line: 415, column: 11, scope: !11057)
!11070 = !DILocation(line: 415, column: 9, scope: !11057)
!11071 = !DILocation(line: 417, column: 2, scope: !11057)
!11072 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1685, file: !1685, line: 420, type: !1568, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11073)
!11073 = !{!11074, !11075, !11076, !11077, !11078, !11079}
!11074 = !DILocalVariable(name: "dev", arg: 1, scope: !11072, file: !1685, line: 420, type: !1543)
!11075 = !DILocalVariable(name: "mask", arg: 2, scope: !11072, file: !1685, line: 421, type: !1570)
!11076 = !DILocalVariable(name: "value", arg: 3, scope: !11072, file: !1685, line: 422, type: !1565)
!11077 = !DILocalVariable(name: "cfg", scope: !11072, file: !1685, line: 424, type: !11064)
!11078 = !DILocalVariable(name: "gpio", scope: !11072, file: !1685, line: 425, type: !1616)
!11079 = !DILocalVariable(name: "port_value", scope: !11072, file: !1685, line: 426, type: !111)
!11080 = !DILocation(line: 0, scope: !11072)
!11081 = !DILocation(line: 424, column: 45, scope: !11072)
!11082 = !DILocation(line: 425, column: 44, scope: !11072)
!11083 = !DILocation(line: 430, column: 15, scope: !11072)
!11084 = !DILocation(line: 431, column: 46, scope: !11072)
!11085 = !DILocation(line: 431, column: 44, scope: !11072)
!11086 = !DILocation(line: 431, column: 61, scope: !11072)
!11087 = !DILocation(line: 431, column: 53, scope: !11072)
!11088 = !DILocation(line: 431, column: 2, scope: !11072)
!11089 = !DILocation(line: 435, column: 2, scope: !11072)
!11090 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1685, file: !1685, line: 438, type: !1573, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11091)
!11091 = !{!11092, !11093, !11094, !11095}
!11092 = !DILocalVariable(name: "dev", arg: 1, scope: !11090, file: !1685, line: 438, type: !1543)
!11093 = !DILocalVariable(name: "pins", arg: 2, scope: !11090, file: !1685, line: 439, type: !1570)
!11094 = !DILocalVariable(name: "cfg", scope: !11090, file: !1685, line: 441, type: !11064)
!11095 = !DILocalVariable(name: "gpio", scope: !11090, file: !1685, line: 442, type: !1616)
!11096 = !DILocation(line: 0, scope: !11090)
!11097 = !DILocation(line: 441, column: 45, scope: !11090)
!11098 = !DILocation(line: 442, column: 44, scope: !11090)
!11099 = !DILocation(line: 448, column: 2, scope: !11090)
!11100 = !DILocation(line: 450, column: 2, scope: !11090)
!11101 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1685, file: !1685, line: 453, type: !1573, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11102)
!11102 = !{!11103, !11104, !11105, !11106}
!11103 = !DILocalVariable(name: "dev", arg: 1, scope: !11101, file: !1685, line: 453, type: !1543)
!11104 = !DILocalVariable(name: "pins", arg: 2, scope: !11101, file: !1685, line: 454, type: !1570)
!11105 = !DILocalVariable(name: "cfg", scope: !11101, file: !1685, line: 456, type: !11064)
!11106 = !DILocalVariable(name: "gpio", scope: !11101, file: !1685, line: 457, type: !1616)
!11107 = !DILocation(line: 0, scope: !11101)
!11108 = !DILocation(line: 456, column: 45, scope: !11101)
!11109 = !DILocation(line: 457, column: 44, scope: !11101)
!11110 = !DILocation(line: 467, column: 2, scope: !11101)
!11111 = !DILocation(line: 470, column: 2, scope: !11101)
!11112 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1685, file: !1685, line: 473, type: !1573, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11113)
!11113 = !{!11114, !11115, !11116, !11117}
!11114 = !DILocalVariable(name: "dev", arg: 1, scope: !11112, file: !1685, line: 473, type: !1543)
!11115 = !DILocalVariable(name: "pins", arg: 2, scope: !11112, file: !1685, line: 474, type: !1570)
!11116 = !DILocalVariable(name: "cfg", scope: !11112, file: !1685, line: 476, type: !11064)
!11117 = !DILocalVariable(name: "gpio", scope: !11112, file: !1685, line: 477, type: !1616)
!11118 = !DILocation(line: 0, scope: !11112)
!11119 = !DILocation(line: 476, column: 45, scope: !11112)
!11120 = !DILocation(line: 477, column: 44, scope: !11112)
!11121 = !DILocation(line: 484, column: 2, scope: !11112)
!11122 = !DILocation(line: 487, column: 2, scope: !11112)
!11123 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1685, file: !1685, line: 594, type: !1579, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11124)
!11124 = !{!11125, !11126, !11127, !11128, !11129, !11130, !11132, !11133, !11134}
!11125 = !DILocalVariable(name: "dev", arg: 1, scope: !11123, file: !1685, line: 594, type: !1543)
!11126 = !DILocalVariable(name: "pin", arg: 2, scope: !11123, file: !1685, line: 595, type: !1558)
!11127 = !DILocalVariable(name: "mode", arg: 3, scope: !11123, file: !1685, line: 596, type: !1517)
!11128 = !DILocalVariable(name: "trig", arg: 4, scope: !11123, file: !1685, line: 597, type: !1523)
!11129 = !DILocalVariable(name: "cfg", scope: !11123, file: !1685, line: 599, type: !11064)
!11130 = !DILocalVariable(name: "data", scope: !11123, file: !1685, line: 600, type: !11131)
!11131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!11132 = !DILocalVariable(name: "edge", scope: !11123, file: !1685, line: 601, type: !103)
!11133 = !DILocalVariable(name: "err", scope: !11123, file: !1685, line: 602, type: !103)
!11134 = !DILabel(scope: !11123, name: "exit", file: !1685, line: 643)
!11135 = !DILocation(line: 0, scope: !11123)
!11136 = !DILocation(line: 599, column: 45, scope: !11123)
!11137 = !DILocation(line: 604, column: 6, scope: !11123)
!11138 = !DILocation(line: 605, column: 34, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !1685, line: 605, column: 7)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !1685, line: 604, column: 38)
!11141 = distinct !DILexicalBlock(scope: !11123, file: !1685, line: 604, column: 6)
!11142 = !DILocation(line: 605, column: 7, scope: !11139)
!11143 = !DILocation(line: 605, column: 47, scope: !11139)
!11144 = !DILocation(line: 605, column: 39, scope: !11139)
!11145 = !DILocation(line: 605, column: 7, scope: !11140)
!11146 = !DILocation(line: 606, column: 4, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11139, file: !1685, line: 605, column: 53)
!11148 = !DILocation(line: 607, column: 4, scope: !11147)
!11149 = !DILocation(line: 608, column: 4, scope: !11147)
!11150 = !DILocation(line: 609, column: 3, scope: !11147)
!11151 = !DILocation(line: 600, column: 38, scope: !11123)
!11152 = !DILocation(line: 620, column: 30, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11123, file: !1685, line: 620, column: 6)
!11154 = !DILocation(line: 620, column: 6, scope: !11153)
!11155 = !DILocation(line: 620, column: 57, scope: !11153)
!11156 = !DILocation(line: 620, column: 6, scope: !11123)
!11157 = !DILocation(line: 625, column: 29, scope: !11123)
!11158 = !DILocation(line: 625, column: 2, scope: !11123)
!11159 = !DILocation(line: 627, column: 2, scope: !11123)
!11160 = !DILocation(line: 630, column: 3, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11123, file: !1685, line: 627, column: 16)
!11162 = !DILocation(line: 633, column: 3, scope: !11161)
!11163 = !DILocation(line: 636, column: 3, scope: !11161)
!11164 = !DILocation(line: 639, column: 2, scope: !11123)
!11165 = !DILocation(line: 641, column: 2, scope: !11123)
!11166 = !DILocation(line: 643, column: 1, scope: !11123)
!11167 = !DILocation(line: 644, column: 2, scope: !11123)
!11168 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1685, file: !1685, line: 647, type: !1583, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11169)
!11169 = !{!11170, !11171, !11172, !11173}
!11170 = !DILocalVariable(name: "dev", arg: 1, scope: !11168, file: !1685, line: 647, type: !1543)
!11171 = !DILocalVariable(name: "callback", arg: 2, scope: !11168, file: !1685, line: 648, type: !1585)
!11172 = !DILocalVariable(name: "set", arg: 3, scope: !11168, file: !1685, line: 649, type: !122)
!11173 = !DILocalVariable(name: "data", scope: !11168, file: !1685, line: 651, type: !11131)
!11174 = !DILocation(line: 0, scope: !11168)
!11175 = !DILocation(line: 651, column: 38, scope: !11168)
!11176 = !DILocation(line: 653, column: 37, scope: !11168)
!11177 = !DILocation(line: 653, column: 9, scope: !11168)
!11178 = !DILocation(line: 653, column: 2, scope: !11168)
!11179 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11180, file: !11180, line: 38, type: !11181, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11184)
!11180 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11181 = !DISubroutineType(types: !11182)
!11182 = !{!103, !11183, !1585, !122}
!11183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!11184 = !{!11185, !11186, !11187}
!11185 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11179, file: !11180, line: 38, type: !11183)
!11186 = !DILocalVariable(name: "callback", arg: 2, scope: !11179, file: !11180, line: 39, type: !1585)
!11187 = !DILocalVariable(name: "set", arg: 3, scope: !11179, file: !11180, line: 40, type: !122)
!11188 = !DILocation(line: 0, scope: !11179)
!11189 = !DILocation(line: 42, column: 2, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !11180, line: 42, column: 2)
!11191 = distinct !DILexicalBlock(scope: !11179, file: !11180, line: 42, column: 2)
!11192 = !DILocation(line: 42, column: 2, scope: !11191)
!11193 = !DILocation(line: 42, column: 2, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11190, file: !11180, line: 42, column: 2)
!11195 = !DILocation(line: 43, column: 2, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11197, file: !11180, line: 43, column: 2)
!11197 = distinct !DILexicalBlock(scope: !11179, file: !11180, line: 43, column: 2)
!11198 = !DILocation(line: 43, column: 2, scope: !11197)
!11199 = !DILocation(line: 43, column: 2, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11196, file: !11180, line: 43, column: 2)
!11201 = !DILocation(line: 45, column: 7, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11179, file: !11180, line: 45, column: 6)
!11203 = !DILocation(line: 45, column: 6, scope: !11179)
!11204 = !DILocation(line: 46, column: 56, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !11180, line: 46, column: 7)
!11206 = distinct !DILexicalBlock(scope: !11202, file: !11180, line: 45, column: 38)
!11207 = !DILocation(line: 46, column: 8, scope: !11205)
!11208 = !DILocation(line: 46, column: 7, scope: !11206)
!11209 = !DILocation(line: 51, column: 13, scope: !11202)
!11210 = !DILocation(line: 56, column: 43, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11212, file: !11180, line: 55, column: 11)
!11212 = distinct !DILexicalBlock(scope: !11179, file: !11180, line: 55, column: 6)
!11213 = !DILocation(line: 56, column: 3, scope: !11211)
!11214 = !DILocation(line: 57, column: 2, scope: !11211)
!11215 = !DILocation(line: 60, column: 1, scope: !11179)
!11216 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1590, file: !1590, line: 261, type: !11217, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11219)
!11217 = !DISubroutineType(types: !11218)
!11218 = !{!122, !11183}
!11219 = !{!11220}
!11220 = !DILocalVariable(name: "list", arg: 1, scope: !11216, file: !1590, line: 261, type: !11183)
!11221 = !DILocation(line: 0, scope: !11216)
!11222 = !DILocation(line: 261, column: 1, scope: !11216)
!11223 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1590, file: !1590, line: 417, type: !11224, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11226)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{!122, !11183, !1758}
!11226 = !{!11227, !11228, !11229, !11230}
!11227 = !DILocalVariable(name: "list", arg: 1, scope: !11223, file: !1590, line: 417, type: !11183)
!11228 = !DILocalVariable(name: "node", arg: 2, scope: !11223, file: !1590, line: 417, type: !1758)
!11229 = !DILocalVariable(name: "prev", scope: !11223, file: !1590, line: 417, type: !1758)
!11230 = !DILocalVariable(name: "test", scope: !11223, file: !1590, line: 417, type: !1758)
!11231 = !DILocation(line: 0, scope: !11223)
!11232 = !DILocation(line: 417, column: 1, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11223, file: !1590, line: 417, column: 1)
!11234 = !DILocation(line: 417, column: 1, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11233, file: !1590, line: 417, column: 1)
!11236 = !DILocation(line: 417, column: 1, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !1590, line: 417, column: 1)
!11238 = distinct !DILexicalBlock(scope: !11235, file: !1590, line: 417, column: 1)
!11239 = !DILocation(line: 417, column: 1, scope: !11238)
!11240 = distinct !{!11240, !11232, !11232}
!11241 = !DILocation(line: 417, column: 1, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11237, file: !1590, line: 417, column: 1)
!11243 = !DILocation(line: 417, column: 1, scope: !11223)
!11244 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1590, file: !1590, line: 298, type: !11245, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11247)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{null, !11183, !1758}
!11247 = !{!11248, !11249}
!11248 = !DILocalVariable(name: "list", arg: 1, scope: !11244, file: !1590, line: 298, type: !11183)
!11249 = !DILocalVariable(name: "node", arg: 2, scope: !11244, file: !1590, line: 298, type: !1758)
!11250 = !DILocation(line: 0, scope: !11244)
!11251 = !DILocation(line: 298, column: 1, scope: !11244)
!11252 = !DILocation(line: 298, column: 1, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11244, file: !1590, line: 298, column: 1)
!11254 = !DILocation(line: 298, column: 1, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11253, file: !1590, line: 298, column: 1)
!11256 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1590, file: !1590, line: 231, type: !11257, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11259)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{!1758, !11183}
!11259 = !{!11260}
!11260 = !DILocalVariable(name: "list", arg: 1, scope: !11256, file: !1590, line: 231, type: !11183)
!11261 = !DILocation(line: 0, scope: !11256)
!11262 = !DILocation(line: 233, column: 15, scope: !11256)
!11263 = !DILocation(line: 233, column: 2, scope: !11256)
!11264 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1590, file: !1590, line: 209, type: !11265, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11267)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{null, !1758, !1758}
!11267 = !{!11268, !11269}
!11268 = !DILocalVariable(name: "parent", arg: 1, scope: !11264, file: !1590, line: 209, type: !1758)
!11269 = !DILocalVariable(name: "child", arg: 2, scope: !11264, file: !1590, line: 209, type: !1758)
!11270 = !DILocation(line: 0, scope: !11264)
!11271 = !DILocation(line: 211, column: 10, scope: !11264)
!11272 = !DILocation(line: 211, column: 15, scope: !11264)
!11273 = !DILocation(line: 212, column: 1, scope: !11264)
!11274 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1590, file: !1590, line: 214, type: !11245, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11275)
!11275 = !{!11276, !11277}
!11276 = !DILocalVariable(name: "list", arg: 1, scope: !11274, file: !1590, line: 214, type: !11183)
!11277 = !DILocalVariable(name: "node", arg: 2, scope: !11274, file: !1590, line: 214, type: !1758)
!11278 = !DILocation(line: 0, scope: !11274)
!11279 = !DILocation(line: 216, column: 8, scope: !11274)
!11280 = !DILocation(line: 216, column: 13, scope: !11274)
!11281 = !DILocation(line: 217, column: 1, scope: !11274)
!11282 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1590, file: !1590, line: 243, type: !11257, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11283)
!11283 = !{!11284}
!11284 = !DILocalVariable(name: "list", arg: 1, scope: !11282, file: !1590, line: 243, type: !11183)
!11285 = !DILocation(line: 0, scope: !11282)
!11286 = !DILocation(line: 245, column: 15, scope: !11282)
!11287 = !DILocation(line: 245, column: 2, scope: !11282)
!11288 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1590, file: !1590, line: 219, type: !11245, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11289)
!11289 = !{!11290, !11291}
!11290 = !DILocalVariable(name: "list", arg: 1, scope: !11288, file: !1590, line: 219, type: !11183)
!11291 = !DILocalVariable(name: "node", arg: 2, scope: !11288, file: !1590, line: 219, type: !1758)
!11292 = !DILocation(line: 0, scope: !11288)
!11293 = !DILocation(line: 221, column: 8, scope: !11288)
!11294 = !DILocation(line: 221, column: 13, scope: !11288)
!11295 = !DILocation(line: 222, column: 1, scope: !11288)
!11296 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1590, file: !1590, line: 401, type: !11297, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11299)
!11297 = !DISubroutineType(types: !11298)
!11298 = !{null, !11183, !1758, !1758}
!11299 = !{!11300, !11301, !11302}
!11300 = !DILocalVariable(name: "list", arg: 1, scope: !11296, file: !1590, line: 401, type: !11183)
!11301 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11296, file: !1590, line: 401, type: !1758)
!11302 = !DILocalVariable(name: "node", arg: 3, scope: !11296, file: !1590, line: 401, type: !1758)
!11303 = !DILocation(line: 0, scope: !11296)
!11304 = !DILocation(line: 401, column: 1, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11296, file: !1590, line: 401, column: 1)
!11306 = !DILocation(line: 0, scope: !11305)
!11307 = !DILocation(line: 401, column: 1, scope: !11296)
!11308 = !DILocation(line: 401, column: 1, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !1590, line: 401, column: 1)
!11310 = !DILocation(line: 401, column: 1, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11309, file: !1590, line: 401, column: 1)
!11312 = !DILocation(line: 401, column: 1, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11311, file: !1590, line: 401, column: 1)
!11314 = !DILocation(line: 401, column: 1, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11305, file: !1590, line: 401, column: 1)
!11316 = !DILocation(line: 401, column: 1, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11315, file: !1590, line: 401, column: 1)
!11318 = !DILocation(line: 401, column: 1, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11317, file: !1590, line: 401, column: 1)
!11320 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1590, file: !1590, line: 285, type: !11321, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11323)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{!1758, !1758}
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "node", arg: 1, scope: !11320, file: !1590, line: 285, type: !1758)
!11325 = !DILocation(line: 0, scope: !11320)
!11326 = !DILocation(line: 285, column: 1, scope: !11320)
!11327 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1590, file: !1590, line: 274, type: !11321, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11328)
!11328 = !{!11329}
!11329 = !DILocalVariable(name: "node", arg: 1, scope: !11327, file: !1590, line: 274, type: !1758)
!11330 = !DILocation(line: 0, scope: !11327)
!11331 = !DILocation(line: 274, column: 1, scope: !11327)
!11332 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1590, file: !1590, line: 204, type: !11321, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11333)
!11333 = !{!11334}
!11334 = !DILocalVariable(name: "node", arg: 1, scope: !11332, file: !1590, line: 204, type: !1758)
!11335 = !DILocation(line: 0, scope: !11332)
!11336 = !DILocation(line: 206, column: 15, scope: !11332)
!11337 = !DILocation(line: 206, column: 2, scope: !11332)
!11338 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1685, file: !1685, line: 342, type: !764, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11339)
!11339 = !{!11340, !11341, !11342}
!11340 = !DILocalVariable(name: "pin", arg: 1, scope: !11338, file: !1685, line: 342, type: !103)
!11341 = !DILocalVariable(name: "line", scope: !11338, file: !1685, line: 344, type: !111)
!11342 = !DILocalVariable(name: "port", scope: !11338, file: !1685, line: 345, type: !103)
!11343 = !DILocation(line: 0, scope: !11338)
!11344 = !DILocation(line: 344, column: 18, scope: !11338)
!11345 = !{i32 983040, i32 0}
!11346 = !DILocation(line: 356, column: 9, scope: !11338)
!11347 = !DILocation(line: 370, column: 2, scope: !11338)
!11348 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1685, file: !1685, line: 37, type: !1226, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11349)
!11349 = !{!11350, !11351, !11352}
!11350 = !DILocalVariable(name: "line", arg: 1, scope: !11348, file: !1685, line: 37, type: !103)
!11351 = !DILocalVariable(name: "arg", arg: 2, scope: !11348, file: !1685, line: 37, type: !102)
!11352 = !DILocalVariable(name: "data", scope: !11348, file: !1685, line: 39, type: !11131)
!11353 = !DILocation(line: 0, scope: !11348)
!11354 = !DILocation(line: 41, column: 29, scope: !11348)
!11355 = !DILocation(line: 41, column: 39, scope: !11348)
!11356 = !DILocation(line: 41, column: 44, scope: !11348)
!11357 = !DILocation(line: 41, column: 2, scope: !11348)
!11358 = !DILocation(line: 42, column: 1, scope: !11348)
!11359 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1685, file: !1685, line: 376, type: !11360, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11362)
!11360 = !DISubroutineType(types: !11361)
!11361 = !{!103, !103, !103}
!11362 = !{!11363, !11364, !11365, !11367, !11368}
!11363 = !DILocalVariable(name: "port", arg: 1, scope: !11359, file: !1685, line: 376, type: !103)
!11364 = !DILocalVariable(name: "pin", arg: 2, scope: !11359, file: !1685, line: 376, type: !103)
!11365 = !DILocalVariable(name: "clk", scope: !11359, file: !1685, line: 386, type: !11366)
!11366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!11367 = !DILocalVariable(name: "pclken", scope: !11359, file: !1685, line: 387, type: !1801)
!11368 = !DILocalVariable(name: "ret", scope: !11359, file: !1685, line: 396, type: !103)
!11369 = !DILocation(line: 0, scope: !11359)
!11370 = !DILocation(line: 387, column: 2, scope: !11359)
!11371 = !DILocation(line: 387, column: 22, scope: !11359)
!11372 = !DILocation(line: 399, column: 8, scope: !11359)
!11373 = !DILocation(line: 400, column: 10, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11359, file: !1685, line: 400, column: 6)
!11375 = !DILocation(line: 400, column: 6, scope: !11359)
!11376 = !DILocation(line: 405, column: 2, scope: !11359)
!11377 = !DILocation(line: 407, column: 2, scope: !11359)
!11378 = !DILocation(line: 408, column: 1, scope: !11359)
!11379 = distinct !DISubprogram(name: "clock_control_on", scope: !1318, file: !1318, line: 123, type: !1650, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11380)
!11380 = !{!11381, !11382, !11383}
!11381 = !DILocalVariable(name: "dev", arg: 1, scope: !11379, file: !1318, line: 123, type: !1543)
!11382 = !DILocalVariable(name: "sys", arg: 2, scope: !11379, file: !1318, line: 124, type: !1414)
!11383 = !DILocalVariable(name: "api", scope: !11379, file: !1318, line: 126, type: !1643)
!11384 = !DILocation(line: 0, scope: !11379)
!11385 = !DILocation(line: 127, column: 49, scope: !11379)
!11386 = !DILocation(line: 129, column: 14, scope: !11379)
!11387 = !DILocation(line: 129, column: 9, scope: !11379)
!11388 = !DILocation(line: 129, column: 2, scope: !11379)
!11389 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1685, file: !1685, line: 311, type: !10493, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11390)
!11390 = !{!11391, !11392, !11393}
!11391 = !DILocalVariable(name: "port", arg: 1, scope: !11389, file: !1685, line: 311, type: !103)
!11392 = !DILocalVariable(name: "pin", arg: 2, scope: !11389, file: !1685, line: 311, type: !103)
!11393 = !DILocalVariable(name: "line", scope: !11389, file: !1685, line: 313, type: !111)
!11394 = !DILocation(line: 0, scope: !11389)
!11395 = !DILocation(line: 313, column: 18, scope: !11389)
!11396 = !DILocation(line: 337, column: 2, scope: !11389)
!11397 = !DILocation(line: 340, column: 1, scope: !11389)
!11398 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1685, file: !1685, line: 295, type: !11399, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11401)
!11399 = !DISubroutineType(types: !11400)
!11400 = !{!111, !103}
!11401 = !{!11402}
!11402 = !DILocalVariable(name: "pin", arg: 1, scope: !11398, file: !1685, line: 295, type: !103)
!11403 = !DILocation(line: 0, scope: !11398)
!11404 = !DILocation(line: 307, column: 46, scope: !11398)
!11405 = !DILocation(line: 307, column: 27, scope: !11398)
!11406 = !DILocation(line: 307, column: 32, scope: !11398)
!11407 = !DILocation(line: 307, column: 14, scope: !11398)
!11408 = !DILocation(line: 307, column: 39, scope: !11398)
!11409 = !DILocation(line: 307, column: 2, scope: !11398)
!11410 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7630, file: !7630, line: 671, type: !11411, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11413)
!11411 = !DISubroutineType(types: !11412)
!11412 = !{null, !111, !111}
!11413 = !{!11414, !11415}
!11414 = !DILocalVariable(name: "Port", arg: 1, scope: !11410, file: !7630, line: 671, type: !111)
!11415 = !DILocalVariable(name: "Line", arg: 2, scope: !11410, file: !7630, line: 671, type: !111)
!11416 = !DILocation(line: 0, scope: !11410)
!11417 = !DILocation(line: 673, column: 3, scope: !11410)
!11418 = !DILocalVariable(name: "value", arg: 1, scope: !11419, file: !7930, line: 373, type: !111)
!11419 = distinct !DISubprogram(name: "__RBIT", scope: !7930, file: !7930, line: 373, type: !9214, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11420)
!11420 = !{!11418, !11421}
!11421 = !DILocalVariable(name: "result", scope: !11419, file: !7930, line: 375, type: !111)
!11422 = !DILocation(line: 0, scope: !11419, inlinedAt: !11423)
!11423 = distinct !DILocation(line: 673, column: 3, scope: !11410)
!11424 = !DILocation(line: 380, column: 4, scope: !11419, inlinedAt: !11423)
!11425 = !{i64 3734261}
!11426 = !DILocalVariable(name: "value", arg: 1, scope: !11427, file: !7930, line: 403, type: !111)
!11427 = distinct !DISubprogram(name: "__CLZ", scope: !7930, file: !7930, line: 403, type: !11428, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11430)
!11428 = !DISubroutineType(types: !11429)
!11429 = !{!166, !111}
!11430 = !{!11426}
!11431 = !DILocation(line: 0, scope: !11427, inlinedAt: !11432)
!11432 = distinct !DILocation(line: 673, column: 3, scope: !11410)
!11433 = !DILocation(line: 414, column: 7, scope: !11427, inlinedAt: !11432)
!11434 = !DILocation(line: 674, column: 1, scope: !11410)
!11435 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11180, file: !11180, line: 69, type: !11436, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11438)
!11436 = !DISubroutineType(types: !11437)
!11437 = !{null, !11183, !1543, !111}
!11438 = !{!11439, !11440, !11441, !11442, !11443}
!11439 = !DILocalVariable(name: "list", arg: 1, scope: !11435, file: !11180, line: 69, type: !11183)
!11440 = !DILocalVariable(name: "port", arg: 2, scope: !11435, file: !11180, line: 70, type: !1543)
!11441 = !DILocalVariable(name: "pins", arg: 3, scope: !11435, file: !11180, line: 71, type: !111)
!11442 = !DILocalVariable(name: "cb", scope: !11435, file: !11180, line: 73, type: !1585)
!11443 = !DILocalVariable(name: "tmp", scope: !11435, file: !11180, line: 73, type: !1585)
!11444 = !DILocation(line: 0, scope: !11435)
!11445 = !DILocation(line: 75, column: 2, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11435, file: !11180, line: 75, column: 2)
!11447 = !DILocation(line: 0, scope: !11446)
!11448 = !DILocation(line: 76, column: 11, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11450, file: !11180, line: 76, column: 7)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !11180, line: 75, column: 57)
!11451 = distinct !DILexicalBlock(scope: !11446, file: !11180, line: 75, column: 2)
!11452 = !DILocation(line: 76, column: 20, scope: !11449)
!11453 = !DILocation(line: 76, column: 7, scope: !11450)
!11454 = !DILocation(line: 77, column: 4, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !11180, line: 77, column: 4)
!11456 = distinct !DILexicalBlock(scope: !11457, file: !11180, line: 77, column: 4)
!11457 = distinct !DILexicalBlock(scope: !11449, file: !11180, line: 76, column: 28)
!11458 = !DILocation(line: 77, column: 4, scope: !11456)
!11459 = !DILocation(line: 77, column: 4, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11455, file: !11180, line: 77, column: 4)
!11461 = !DILocation(line: 78, column: 4, scope: !11457)
!11462 = !DILocation(line: 79, column: 3, scope: !11457)
!11463 = !DILocation(line: 75, column: 2, scope: !11451)
!11464 = !DILocation(line: 81, column: 1, scope: !11435)
!11465 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7630, file: !7630, line: 710, type: !9214, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11466)
!11466 = !{!11467}
!11467 = !DILocalVariable(name: "Line", arg: 1, scope: !11465, file: !7630, line: 710, type: !111)
!11468 = !DILocation(line: 0, scope: !11465)
!11469 = !DILocation(line: 712, column: 21, scope: !11465)
!11470 = !DILocation(line: 0, scope: !11419, inlinedAt: !11471)
!11471 = distinct !DILocation(line: 712, column: 76, scope: !11465)
!11472 = !DILocation(line: 380, column: 4, scope: !11419, inlinedAt: !11471)
!11473 = !DILocation(line: 0, scope: !11427, inlinedAt: !11474)
!11474 = distinct !DILocation(line: 712, column: 76, scope: !11465)
!11475 = !DILocation(line: 414, column: 7, scope: !11427, inlinedAt: !11474)
!11476 = !DILocation(line: 712, column: 73, scope: !11465)
!11477 = !DILocation(line: 712, column: 3, scope: !11465)
!11478 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11479, file: !11479, line: 910, type: !11480, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11482)
!11479 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11480 = !DISubroutineType(types: !11481)
!11481 = !{null, !1616, !111}
!11482 = !{!11483, !11484}
!11483 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11478, file: !11479, line: 910, type: !1616)
!11484 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11478, file: !11479, line: 910, type: !111)
!11485 = !DILocation(line: 0, scope: !11478)
!11486 = !DILocation(line: 912, column: 3, scope: !11478)
!11487 = !DILocation(line: 913, column: 1, scope: !11478)
!11488 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11479, file: !11479, line: 823, type: !11489, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11491)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{!111, !1616}
!11491 = !{!11492}
!11492 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11488, file: !11479, line: 823, type: !1616)
!11493 = !DILocation(line: 0, scope: !11488)
!11494 = !DILocation(line: 825, column: 21, scope: !11488)
!11495 = !DILocation(line: 825, column: 3, scope: !11488)
!11496 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11479, file: !11479, line: 812, type: !11480, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11497)
!11497 = !{!11498, !11499}
!11498 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11496, file: !11479, line: 812, type: !1616)
!11499 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11496, file: !11479, line: 812, type: !111)
!11500 = !DILocation(line: 0, scope: !11496)
!11501 = !DILocation(line: 814, column: 3, scope: !11496)
!11502 = !DILocation(line: 815, column: 1, scope: !11496)
!11503 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11479, file: !11479, line: 771, type: !11489, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11504)
!11504 = !{!11505}
!11505 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11503, file: !11479, line: 771, type: !1616)
!11506 = !DILocation(line: 0, scope: !11503)
!11507 = !DILocation(line: 773, column: 21, scope: !11503)
!11508 = !DILocation(line: 773, column: 3, scope: !11503)
!11509 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1685, file: !1685, line: 47, type: !11510, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11512)
!11510 = !DISubroutineType(types: !11511)
!11511 = !{!103, !1559, !744}
!11512 = !{!11513, !11514}
!11513 = !DILocalVariable(name: "flags", arg: 1, scope: !11509, file: !1685, line: 47, type: !1559)
!11514 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11509, file: !1685, line: 47, type: !744)
!11515 = !DILocation(line: 0, scope: !11509)
!11516 = !DILocation(line: 50, column: 13, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11509, file: !1685, line: 50, column: 6)
!11518 = !DILocation(line: 50, column: 28, scope: !11517)
!11519 = !DILocation(line: 50, column: 6, scope: !11509)
!11520 = !DILocation(line: 53, column: 11, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11517, file: !1685, line: 50, column: 34)
!11522 = !DILocation(line: 55, column: 14, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11521, file: !1685, line: 55, column: 7)
!11524 = !DILocation(line: 55, column: 35, scope: !11523)
!11525 = !DILocation(line: 55, column: 7, scope: !11521)
!11526 = !DILocation(line: 56, column: 14, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11528, file: !1685, line: 56, column: 8)
!11528 = distinct !DILexicalBlock(scope: !11523, file: !1685, line: 55, column: 41)
!11529 = !DILocation(line: 56, column: 8, scope: !11528)
!11530 = !DILocation(line: 0, scope: !11523)
!11531 = !DILocation(line: 66, column: 14, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11521, file: !1685, line: 66, column: 7)
!11533 = !DILocation(line: 66, column: 30, scope: !11532)
!11534 = !DILocation(line: 66, column: 7, scope: !11521)
!11535 = !DILocation(line: 67, column: 12, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11532, file: !1685, line: 66, column: 36)
!11537 = !DILocation(line: 68, column: 3, scope: !11536)
!11538 = !DILocation(line: 68, column: 21, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11532, file: !1685, line: 68, column: 14)
!11540 = !DILocation(line: 68, column: 39, scope: !11539)
!11541 = !DILocation(line: 68, column: 14, scope: !11532)
!11542 = !DILocation(line: 69, column: 12, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11539, file: !1685, line: 68, column: 45)
!11544 = !DILocation(line: 70, column: 3, scope: !11543)
!11545 = !DILocation(line: 72, column: 21, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11517, file: !1685, line: 72, column: 14)
!11547 = !DILocation(line: 72, column: 35, scope: !11546)
!11548 = !DILocation(line: 72, column: 14, scope: !11517)
!11549 = !DILocation(line: 77, column: 14, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !1685, line: 77, column: 7)
!11551 = distinct !DILexicalBlock(scope: !11546, file: !1685, line: 72, column: 41)
!11552 = !DILocation(line: 77, column: 30, scope: !11550)
!11553 = !DILocation(line: 77, column: 7, scope: !11551)
!11554 = !DILocation(line: 0, scope: !11517)
!11555 = !DILocation(line: 90, column: 1, scope: !11509)
!11556 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1685, file: !1685, line: 157, type: !11557, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11559)
!11557 = !DISubroutineType(types: !11558)
!11558 = !{null, !1543, !103, !103, !103}
!11559 = !{!11560, !11561, !11562, !11563, !11564, !11565, !11566, !11567, !11568, !11569, !11570}
!11560 = !DILocalVariable(name: "dev", arg: 1, scope: !11556, file: !1685, line: 157, type: !1543)
!11561 = !DILocalVariable(name: "pin", arg: 2, scope: !11556, file: !1685, line: 157, type: !103)
!11562 = !DILocalVariable(name: "conf", arg: 3, scope: !11556, file: !1685, line: 158, type: !103)
!11563 = !DILocalVariable(name: "func", arg: 4, scope: !11556, file: !1685, line: 158, type: !103)
!11564 = !DILocalVariable(name: "cfg", scope: !11556, file: !1685, line: 160, type: !11064)
!11565 = !DILocalVariable(name: "gpio", scope: !11556, file: !1685, line: 161, type: !1616)
!11566 = !DILocalVariable(name: "pin_ll", scope: !11556, file: !1685, line: 163, type: !103)
!11567 = !DILocalVariable(name: "mode", scope: !11556, file: !1685, line: 227, type: !32)
!11568 = !DILocalVariable(name: "otype", scope: !11556, file: !1685, line: 227, type: !32)
!11569 = !DILocalVariable(name: "ospeed", scope: !11556, file: !1685, line: 227, type: !32)
!11570 = !DILocalVariable(name: "pupd", scope: !11556, file: !1685, line: 227, type: !32)
!11571 = !DILocation(line: 0, scope: !11556)
!11572 = !DILocation(line: 160, column: 45, scope: !11556)
!11573 = !DILocation(line: 161, column: 44, scope: !11556)
!11574 = !DILocation(line: 163, column: 15, scope: !11556)
!11575 = !DILocation(line: 229, column: 14, scope: !11556)
!11576 = !DILocation(line: 246, column: 47, scope: !11556)
!11577 = !DILocation(line: 246, column: 2, scope: !11556)
!11578 = !DILocation(line: 248, column: 43, scope: !11556)
!11579 = !DILocation(line: 248, column: 2, scope: !11556)
!11580 = !DILocation(line: 250, column: 40, scope: !11556)
!11581 = !DILocation(line: 250, column: 2, scope: !11556)
!11582 = !DILocation(line: 252, column: 11, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11556, file: !1685, line: 252, column: 6)
!11584 = !DILocation(line: 252, column: 6, scope: !11556)
!11585 = !DILocation(line: 253, column: 11, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11587, file: !1685, line: 253, column: 7)
!11587 = distinct !DILexicalBlock(scope: !11583, file: !1685, line: 252, column: 36)
!11588 = !DILocation(line: 253, column: 7, scope: !11587)
!11589 = !DILocation(line: 254, column: 4, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11586, file: !1685, line: 253, column: 16)
!11591 = !DILocation(line: 255, column: 3, scope: !11590)
!11592 = !DILocation(line: 256, column: 4, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11586, file: !1685, line: 255, column: 10)
!11594 = !DILocation(line: 260, column: 40, scope: !11556)
!11595 = !DILocation(line: 260, column: 2, scope: !11556)
!11596 = !DILocation(line: 265, column: 1, scope: !11556)
!11597 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1685, file: !1685, line: 137, type: !11399, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11598)
!11598 = !{!11599, !11600}
!11599 = !DILocalVariable(name: "pin", arg: 1, scope: !11597, file: !1685, line: 137, type: !103)
!11600 = !DILocalVariable(name: "pinval", scope: !11597, file: !1685, line: 139, type: !111)
!11601 = !DILocation(line: 0, scope: !11597)
!11602 = !DILocation(line: 149, column: 13, scope: !11597)
!11603 = !DILocation(line: 151, column: 2, scope: !11597)
!11604 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11479, file: !11479, line: 342, type: !11605, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11607)
!11605 = !DISubroutineType(types: !11606)
!11606 = !{null, !1616, !111, !111}
!11607 = !{!11608, !11609, !11610}
!11608 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11604, file: !11479, line: 342, type: !1616)
!11609 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11604, file: !11479, line: 342, type: !111)
!11610 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11604, file: !11479, line: 342, type: !111)
!11611 = !DILocation(line: 0, scope: !11604)
!11612 = !DILocation(line: 344, column: 3, scope: !11604)
!11613 = !DILocation(line: 345, column: 1, scope: !11604)
!11614 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11479, file: !11479, line: 413, type: !11605, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11615)
!11615 = !{!11616, !11617, !11618}
!11616 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11614, file: !11479, line: 413, type: !1616)
!11617 = !DILocalVariable(name: "Pin", arg: 2, scope: !11614, file: !11479, line: 413, type: !111)
!11618 = !DILocalVariable(name: "Speed", arg: 3, scope: !11614, file: !11479, line: 413, type: !111)
!11619 = !DILocation(line: 0, scope: !11614)
!11620 = !DILocation(line: 415, column: 3, scope: !11614)
!11621 = !DILocation(line: 0, scope: !11419, inlinedAt: !11622)
!11622 = distinct !DILocation(line: 415, column: 3, scope: !11614)
!11623 = !DILocation(line: 380, column: 4, scope: !11419, inlinedAt: !11622)
!11624 = !DILocation(line: 0, scope: !11427, inlinedAt: !11625)
!11625 = distinct !DILocation(line: 415, column: 3, scope: !11614)
!11626 = !DILocation(line: 414, column: 7, scope: !11427, inlinedAt: !11625)
!11627 = !DILocation(line: 0, scope: !11419, inlinedAt: !11628)
!11628 = distinct !DILocation(line: 415, column: 3, scope: !11614)
!11629 = !DILocation(line: 0, scope: !11427, inlinedAt: !11630)
!11630 = distinct !DILocation(line: 415, column: 3, scope: !11614)
!11631 = !DILocation(line: 417, column: 1, scope: !11614)
!11632 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11479, file: !11479, line: 484, type: !11605, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11633)
!11633 = !{!11634, !11635, !11636}
!11634 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11632, file: !11479, line: 484, type: !1616)
!11635 = !DILocalVariable(name: "Pin", arg: 2, scope: !11632, file: !11479, line: 484, type: !111)
!11636 = !DILocalVariable(name: "Pull", arg: 3, scope: !11632, file: !11479, line: 484, type: !111)
!11637 = !DILocation(line: 0, scope: !11632)
!11638 = !DILocation(line: 486, column: 3, scope: !11632)
!11639 = !DILocation(line: 0, scope: !11419, inlinedAt: !11640)
!11640 = distinct !DILocation(line: 486, column: 3, scope: !11632)
!11641 = !DILocation(line: 380, column: 4, scope: !11419, inlinedAt: !11640)
!11642 = !DILocation(line: 0, scope: !11427, inlinedAt: !11643)
!11643 = distinct !DILocation(line: 486, column: 3, scope: !11632)
!11644 = !DILocation(line: 414, column: 7, scope: !11427, inlinedAt: !11643)
!11645 = !DILocation(line: 0, scope: !11419, inlinedAt: !11646)
!11646 = distinct !DILocation(line: 486, column: 3, scope: !11632)
!11647 = !DILocation(line: 0, scope: !11427, inlinedAt: !11648)
!11648 = distinct !DILocation(line: 486, column: 3, scope: !11632)
!11649 = !DILocation(line: 487, column: 1, scope: !11632)
!11650 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11479, file: !11479, line: 556, type: !11605, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11651)
!11651 = !{!11652, !11653, !11654}
!11652 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11650, file: !11479, line: 556, type: !1616)
!11653 = !DILocalVariable(name: "Pin", arg: 2, scope: !11650, file: !11479, line: 556, type: !111)
!11654 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11650, file: !11479, line: 556, type: !111)
!11655 = !DILocation(line: 0, scope: !11650)
!11656 = !DILocation(line: 558, column: 3, scope: !11650)
!11657 = !DILocation(line: 0, scope: !11419, inlinedAt: !11658)
!11658 = distinct !DILocation(line: 558, column: 3, scope: !11650)
!11659 = !DILocation(line: 380, column: 4, scope: !11419, inlinedAt: !11658)
!11660 = !DILocation(line: 0, scope: !11427, inlinedAt: !11661)
!11661 = distinct !DILocation(line: 558, column: 3, scope: !11650)
!11662 = !DILocation(line: 414, column: 7, scope: !11427, inlinedAt: !11661)
!11663 = !DILocation(line: 0, scope: !11419, inlinedAt: !11664)
!11664 = distinct !DILocation(line: 558, column: 3, scope: !11650)
!11665 = !DILocation(line: 0, scope: !11427, inlinedAt: !11666)
!11666 = distinct !DILocation(line: 558, column: 3, scope: !11650)
!11667 = !DILocation(line: 560, column: 1, scope: !11650)
!11668 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11479, file: !11479, line: 633, type: !11605, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11669)
!11669 = !{!11670, !11671, !11672}
!11670 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11668, file: !11479, line: 633, type: !1616)
!11671 = !DILocalVariable(name: "Pin", arg: 2, scope: !11668, file: !11479, line: 633, type: !111)
!11672 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11668, file: !11479, line: 633, type: !111)
!11673 = !DILocation(line: 0, scope: !11668)
!11674 = !DILocation(line: 635, column: 3, scope: !11668)
!11675 = !DILocation(line: 0, scope: !11419, inlinedAt: !11676)
!11676 = distinct !DILocation(line: 635, column: 3, scope: !11668)
!11677 = !DILocation(line: 380, column: 4, scope: !11419, inlinedAt: !11676)
!11678 = !DILocation(line: 0, scope: !11427, inlinedAt: !11679)
!11679 = distinct !DILocation(line: 635, column: 3, scope: !11668)
!11680 = !DILocation(line: 414, column: 7, scope: !11427, inlinedAt: !11679)
!11681 = !DILocation(line: 0, scope: !11419, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 635, column: 3, scope: !11668)
!11683 = !DILocation(line: 0, scope: !11427, inlinedAt: !11684)
!11684 = distinct !DILocation(line: 635, column: 3, scope: !11668)
!11685 = !DILocation(line: 637, column: 1, scope: !11668)
!11686 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11479, file: !11479, line: 273, type: !11605, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11687)
!11687 = !{!11688, !11689, !11690}
!11688 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11686, file: !11479, line: 273, type: !1616)
!11689 = !DILocalVariable(name: "Pin", arg: 2, scope: !11686, file: !11479, line: 273, type: !111)
!11690 = !DILocalVariable(name: "Mode", arg: 3, scope: !11686, file: !11479, line: 273, type: !111)
!11691 = !DILocation(line: 0, scope: !11686)
!11692 = !DILocation(line: 275, column: 3, scope: !11686)
!11693 = !DILocation(line: 0, scope: !11419, inlinedAt: !11694)
!11694 = distinct !DILocation(line: 275, column: 3, scope: !11686)
!11695 = !DILocation(line: 380, column: 4, scope: !11419, inlinedAt: !11694)
!11696 = !DILocation(line: 0, scope: !11427, inlinedAt: !11697)
!11697 = distinct !DILocation(line: 275, column: 3, scope: !11686)
!11698 = !DILocation(line: 414, column: 7, scope: !11427, inlinedAt: !11697)
!11699 = !DILocation(line: 0, scope: !11419, inlinedAt: !11700)
!11700 = distinct !DILocation(line: 275, column: 3, scope: !11686)
!11701 = !DILocation(line: 0, scope: !11427, inlinedAt: !11702)
!11702 = distinct !DILocation(line: 275, column: 3, scope: !11686)
!11703 = !DILocation(line: 276, column: 1, scope: !11686)
!11704 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1685, file: !1685, line: 698, type: !1698, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11705)
!11705 = !{!11706, !11707, !11708}
!11706 = !DILocalVariable(name: "dev", arg: 1, scope: !11704, file: !1685, line: 698, type: !1543)
!11707 = !DILocalVariable(name: "data", scope: !11704, file: !1685, line: 700, type: !11131)
!11708 = !DILocalVariable(name: "ret", scope: !11704, file: !1685, line: 701, type: !103)
!11709 = !DILocation(line: 0, scope: !11704)
!11710 = !DILocation(line: 700, column: 38, scope: !11704)
!11711 = !DILocation(line: 703, column: 8, scope: !11704)
!11712 = !DILocation(line: 703, column: 12, scope: !11704)
!11713 = !DILocation(line: 705, column: 7, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11704, file: !1685, line: 705, column: 6)
!11715 = !DILocation(line: 705, column: 6, scope: !11704)
!11716 = !DILocation(line: 722, column: 8, scope: !11704)
!11717 = !DILocation(line: 723, column: 10, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11704, file: !1685, line: 723, column: 6)
!11719 = !DILocation(line: 723, column: 6, scope: !11704)
!11720 = !DILocation(line: 731, column: 1, scope: !11704)
!11721 = distinct !DISubprogram(name: "device_is_ready", scope: !10909, file: !10909, line: 47, type: !11722, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11724)
!11722 = !DISubroutineType(types: !11723)
!11723 = !{!122, !1543}
!11724 = !{!11725}
!11725 = !DILocalVariable(name: "dev", arg: 1, scope: !11721, file: !10909, line: 47, type: !1543)
!11726 = !DILocation(line: 0, scope: !11721)
!11727 = !DILocation(line: 55, column: 2, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11721, file: !10909, line: 55, column: 2)
!11729 = !{i64 2155288967}
!11730 = !DILocation(line: 56, column: 9, scope: !11721)
!11731 = !DILocation(line: 56, column: 2, scope: !11721)
!11732 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1685, file: !1685, line: 270, type: !11733, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11735)
!11733 = !DISubroutineType(types: !11734)
!11734 = !{!103, !1543, !122}
!11735 = !{!11736, !11737, !11738, !11739, !11740}
!11736 = !DILocalVariable(name: "dev", arg: 1, scope: !11732, file: !1685, line: 270, type: !1543)
!11737 = !DILocalVariable(name: "on", arg: 2, scope: !11732, file: !1685, line: 270, type: !122)
!11738 = !DILocalVariable(name: "cfg", scope: !11732, file: !1685, line: 272, type: !11064)
!11739 = !DILocalVariable(name: "ret", scope: !11732, file: !1685, line: 273, type: !103)
!11740 = !DILocalVariable(name: "clk", scope: !11732, file: !1685, line: 278, type: !11366)
!11741 = !DILocation(line: 0, scope: !11732)
!11742 = !DILocation(line: 272, column: 45, scope: !11732)
!11743 = !DILocation(line: 282, column: 38, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11745, file: !1685, line: 280, column: 10)
!11745 = distinct !DILexicalBlock(scope: !11732, file: !1685, line: 280, column: 6)
!11746 = !DILocation(line: 282, column: 6, scope: !11744)
!11747 = !DILocation(line: 281, column: 9, scope: !11744)
!11748 = !DILocation(line: 293, column: 1, scope: !11732)
!11749 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !11722, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11750)
!11750 = !{!11751}
!11751 = !DILocalVariable(name: "dev", arg: 1, scope: !11749, file: !797, line: 730, type: !1543)
!11752 = !DILocation(line: 0, scope: !11749)
!11753 = !DILocation(line: 732, column: 9, scope: !11749)
!11754 = !DILocation(line: 732, column: 2, scope: !11749)
!11755 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1685, file: !1685, line: 496, type: !11756, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1514, retainedNodes: !11758)
!11756 = !DISubroutineType(types: !11757)
!11757 = !{!103, !1543, !103, !103, !103}
!11758 = !{!11759, !11760, !11761, !11762, !11763, !11764}
!11759 = !DILocalVariable(name: "dev", arg: 1, scope: !11755, file: !1685, line: 496, type: !1543)
!11760 = !DILocalVariable(name: "pin", arg: 2, scope: !11755, file: !1685, line: 496, type: !103)
!11761 = !DILocalVariable(name: "conf", arg: 3, scope: !11755, file: !1685, line: 496, type: !103)
!11762 = !DILocalVariable(name: "func", arg: 4, scope: !11755, file: !1685, line: 496, type: !103)
!11763 = !DILocalVariable(name: "ret", scope: !11755, file: !1685, line: 498, type: !103)
!11764 = !DILocalVariable(name: "gpio_out", scope: !11765, file: !1685, line: 508, type: !111)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !1685, line: 507, column: 27)
!11766 = distinct !DILexicalBlock(scope: !11755, file: !1685, line: 507, column: 6)
!11767 = !DILocation(line: 0, scope: !11755)
!11768 = !DILocation(line: 505, column: 2, scope: !11755)
!11769 = !DILocation(line: 507, column: 11, scope: !11766)
!11770 = !DILocation(line: 507, column: 6, scope: !11755)
!11771 = !DILocation(line: 508, column: 28, scope: !11765)
!11772 = !DILocation(line: 0, scope: !11765)
!11773 = !DILocation(line: 510, column: 16, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11765, file: !1685, line: 510, column: 7)
!11775 = !DILocation(line: 0, scope: !11774)
!11776 = !DILocation(line: 510, column: 7, scope: !11765)
!11777 = !DILocation(line: 511, column: 4, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11774, file: !1685, line: 510, column: 32)
!11779 = !DILocation(line: 512, column: 3, scope: !11778)
!11780 = !DILocation(line: 513, column: 4, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !1685, line: 512, column: 39)
!11782 = distinct !DILexicalBlock(scope: !11774, file: !1685, line: 512, column: 14)
!11783 = !DILocation(line: 514, column: 3, scope: !11781)
!11784 = !DILocation(line: 518, column: 1, scope: !11755)
!11785 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1958, file: !1958, line: 526, type: !1861, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11786)
!11786 = !{!11787, !11788, !11789}
!11787 = !DILocalVariable(name: "dev", arg: 1, scope: !11785, file: !1958, line: 526, type: !1863)
!11788 = !DILocalVariable(name: "c", arg: 2, scope: !11785, file: !1958, line: 526, type: !1475)
!11789 = !DILocalVariable(name: "config", scope: !11785, file: !1958, line: 528, type: !11790)
!11790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!11791 = !DILocation(line: 0, scope: !11785)
!11792 = !DILocation(line: 528, column: 48, scope: !11785)
!11793 = !DILocation(line: 531, column: 40, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11785, file: !1958, line: 531, column: 6)
!11795 = !DILocation(line: 531, column: 6, scope: !11794)
!11796 = !DILocation(line: 531, column: 6, scope: !11785)
!11797 = !DILocation(line: 532, column: 34, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11794, file: !1958, line: 531, column: 48)
!11799 = !DILocation(line: 532, column: 3, scope: !11798)
!11800 = !DILocation(line: 533, column: 2, scope: !11798)
!11801 = !DILocation(line: 539, column: 42, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11785, file: !1958, line: 539, column: 6)
!11803 = !DILocation(line: 539, column: 7, scope: !11802)
!11804 = !DILocation(line: 539, column: 6, scope: !11785)
!11805 = !DILocation(line: 543, column: 52, scope: !11785)
!11806 = !DILocation(line: 543, column: 22, scope: !11785)
!11807 = !DILocation(line: 543, column: 5, scope: !11785)
!11808 = !DILocation(line: 545, column: 2, scope: !11785)
!11809 = !DILocation(line: 546, column: 1, scope: !11785)
!11810 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1958, file: !1958, line: 548, type: !1880, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11811)
!11811 = !{!11812, !11813, !11814, !11815}
!11812 = !DILocalVariable(name: "dev", arg: 1, scope: !11810, file: !1958, line: 548, type: !1863)
!11813 = !DILocalVariable(name: "c", arg: 2, scope: !11810, file: !1958, line: 549, type: !167)
!11814 = !DILocalVariable(name: "config", scope: !11810, file: !1958, line: 551, type: !11790)
!11815 = !DILocalVariable(name: "key", scope: !11810, file: !1958, line: 555, type: !32)
!11816 = !DILocation(line: 0, scope: !11810)
!11817 = !DILocation(line: 551, column: 48, scope: !11810)
!11818 = !DILocation(line: 562, column: 2, scope: !11810)
!11819 = !DILocation(line: 563, column: 41, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !1958, line: 563, column: 7)
!11821 = distinct !DILexicalBlock(scope: !11810, file: !1958, line: 562, column: 12)
!11822 = !DILocation(line: 563, column: 7, scope: !11820)
!11823 = !DILocation(line: 563, column: 7, scope: !11821)
!11824 = !DILocation(line: 55, column: 2, scope: !11825, inlinedAt: !11829)
!11825 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11826)
!11826 = !{!11827, !11828}
!11827 = !DILocalVariable(name: "key", scope: !11825, file: !7609, line: 44, type: !32)
!11828 = !DILocalVariable(name: "tmp", scope: !11825, file: !7609, line: 53, type: !32)
!11829 = distinct !DILocation(line: 564, column: 10, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11820, file: !1958, line: 563, column: 49)
!11831 = !{i64 2331111}
!11832 = !DILocation(line: 0, scope: !11825, inlinedAt: !11829)
!11833 = !DILocation(line: 565, column: 42, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11830, file: !1958, line: 565, column: 8)
!11835 = !DILocation(line: 565, column: 8, scope: !11834)
!11836 = !DILocation(line: 565, column: 8, scope: !11830)
!11837 = !DILocalVariable(name: "key", arg: 1, scope: !11838, file: !7609, line: 84, type: !32)
!11838 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11839)
!11839 = !{!11837}
!11840 = !DILocation(line: 0, scope: !11838, inlinedAt: !11841)
!11841 = distinct !DILocation(line: 568, column: 4, scope: !11830)
!11842 = !DILocation(line: 95, column: 2, scope: !11838, inlinedAt: !11841)
!11843 = !{i64 2331928}
!11844 = !DILocation(line: 569, column: 3, scope: !11830)
!11845 = distinct !{!11845, !11818, !11846}
!11846 = !DILocation(line: 570, column: 2, scope: !11810)
!11847 = !DILocation(line: 592, column: 33, scope: !11810)
!11848 = !DILocation(line: 592, column: 2, scope: !11810)
!11849 = !DILocation(line: 0, scope: !11838, inlinedAt: !11850)
!11850 = distinct !DILocation(line: 593, column: 2, scope: !11810)
!11851 = !DILocation(line: 95, column: 2, scope: !11838, inlinedAt: !11850)
!11852 = !DILocation(line: 594, column: 1, scope: !11810)
!11853 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1958, file: !1958, line: 596, type: !1884, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11854)
!11854 = !{!11855, !11856, !11857}
!11855 = !DILocalVariable(name: "dev", arg: 1, scope: !11853, file: !1958, line: 596, type: !1863)
!11856 = !DILocalVariable(name: "config", scope: !11853, file: !1958, line: 598, type: !11790)
!11857 = !DILocalVariable(name: "err", scope: !11853, file: !1958, line: 599, type: !111)
!11858 = !DILocation(line: 0, scope: !11853)
!11859 = !DILocation(line: 598, column: 48, scope: !11853)
!11860 = !DILocation(line: 606, column: 40, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 606, column: 6)
!11862 = !DILocation(line: 606, column: 6, scope: !11861)
!11863 = !DILocation(line: 606, column: 6, scope: !11853)
!11864 = !DILocation(line: 610, column: 39, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 610, column: 6)
!11866 = !DILocation(line: 610, column: 6, scope: !11865)
!11867 = !DILocation(line: 610, column: 6, scope: !11853)
!11868 = !DILocation(line: 614, column: 39, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 614, column: 6)
!11870 = !DILocation(line: 614, column: 6, scope: !11869)
!11871 = !DILocation(line: 614, column: 6, scope: !11853)
!11872 = !DILocation(line: 619, column: 40, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 619, column: 6)
!11874 = !DILocation(line: 619, column: 6, scope: !11873)
!11875 = !DILocation(line: 619, column: 6, scope: !11853)
!11876 = !DILocation(line: 623, column: 10, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 623, column: 6)
!11878 = !DILocation(line: 623, column: 6, scope: !11853)
!11879 = !DILocation(line: 624, column: 34, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11877, file: !1958, line: 623, column: 24)
!11881 = !DILocation(line: 624, column: 3, scope: !11880)
!11882 = !DILocation(line: 625, column: 2, scope: !11880)
!11883 = !DILocation(line: 632, column: 10, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 632, column: 6)
!11885 = !DILocation(line: 632, column: 6, scope: !11853)
!11886 = !DILocation(line: 633, column: 34, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11884, file: !1958, line: 632, column: 32)
!11888 = !DILocation(line: 633, column: 3, scope: !11887)
!11889 = !DILocation(line: 634, column: 2, scope: !11887)
!11890 = !DILocation(line: 636, column: 10, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 636, column: 6)
!11892 = !DILocation(line: 636, column: 6, scope: !11853)
!11893 = !DILocation(line: 637, column: 33, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11891, file: !1958, line: 636, column: 31)
!11895 = !DILocation(line: 637, column: 3, scope: !11894)
!11896 = !DILocation(line: 638, column: 2, scope: !11894)
!11897 = !DILocation(line: 640, column: 10, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11853, file: !1958, line: 640, column: 6)
!11899 = !DILocation(line: 640, column: 6, scope: !11853)
!11900 = !DILocation(line: 641, column: 33, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11898, file: !1958, line: 640, column: 32)
!11902 = !DILocation(line: 641, column: 3, scope: !11901)
!11903 = !DILocation(line: 642, column: 2, scope: !11901)
!11904 = !DILocation(line: 646, column: 32, scope: !11853)
!11905 = !DILocation(line: 646, column: 2, scope: !11853)
!11906 = !DILocation(line: 648, column: 2, scope: !11853)
!11907 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1958, file: !1958, line: 419, type: !1888, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11908)
!11908 = !{!11909, !11910, !11911, !11912, !11914, !11915, !11916, !11917}
!11909 = !DILocalVariable(name: "dev", arg: 1, scope: !11907, file: !1958, line: 419, type: !1863)
!11910 = !DILocalVariable(name: "cfg", arg: 2, scope: !11907, file: !1958, line: 420, type: !1890)
!11911 = !DILocalVariable(name: "config", scope: !11907, file: !1958, line: 422, type: !11790)
!11912 = !DILocalVariable(name: "data", scope: !11907, file: !1958, line: 423, type: !11913)
!11913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 32)
!11914 = !DILocalVariable(name: "parity", scope: !11907, file: !1958, line: 424, type: !8206)
!11915 = !DILocalVariable(name: "stopbits", scope: !11907, file: !1958, line: 425, type: !8206)
!11916 = !DILocalVariable(name: "databits", scope: !11907, file: !1958, line: 426, type: !8206)
!11917 = !DILocalVariable(name: "flowctrl", scope: !11907, file: !1958, line: 428, type: !8206)
!11918 = !DILocation(line: 0, scope: !11907)
!11919 = !DILocation(line: 422, column: 48, scope: !11907)
!11920 = !DILocation(line: 423, column: 38, scope: !11907)
!11921 = !DILocation(line: 424, column: 56, scope: !11907)
!11922 = !DILocation(line: 424, column: 51, scope: !11907)
!11923 = !DILocation(line: 424, column: 26, scope: !11907)
!11924 = !DILocation(line: 425, column: 60, scope: !11907)
!11925 = !DILocation(line: 425, column: 55, scope: !11907)
!11926 = !DILocation(line: 425, column: 28, scope: !11907)
!11927 = !DILocation(line: 426, column: 60, scope: !11907)
!11928 = !DILocation(line: 426, column: 55, scope: !11907)
!11929 = !DILocation(line: 426, column: 28, scope: !11907)
!11930 = !DILocation(line: 428, column: 58, scope: !11907)
!11931 = !DILocation(line: 428, column: 53, scope: !11907)
!11932 = !DILocation(line: 428, column: 28, scope: !11907)
!11933 = !DILocation(line: 431, column: 44, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 431, column: 6)
!11935 = !DILocation(line: 438, column: 22, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 437, column: 6)
!11937 = !DILocation(line: 437, column: 6, scope: !11907)
!11938 = !DILocation(line: 448, column: 6, scope: !11907)
!11939 = !DILocation(line: 465, column: 47, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 465, column: 6)
!11941 = !DILocation(line: 475, column: 21, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 475, column: 6)
!11943 = !DILocation(line: 475, column: 6, scope: !11907)
!11944 = !DILocation(line: 476, column: 8, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !1958, line: 476, column: 7)
!11946 = distinct !DILexicalBlock(scope: !11942, file: !1958, line: 475, column: 49)
!11947 = !DILocation(line: 477, column: 34, scope: !11945)
!11948 = !DILocation(line: 476, column: 7, scope: !11946)
!11949 = !DILocation(line: 482, column: 27, scope: !11907)
!11950 = !DILocation(line: 482, column: 2, scope: !11907)
!11951 = !DILocation(line: 484, column: 16, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 484, column: 6)
!11953 = !DILocation(line: 484, column: 13, scope: !11952)
!11954 = !DILocation(line: 484, column: 6, scope: !11907)
!11955 = !DILocation(line: 485, column: 3, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11952, file: !1958, line: 484, column: 44)
!11957 = !DILocation(line: 486, column: 2, scope: !11956)
!11958 = !DILocation(line: 488, column: 18, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 488, column: 6)
!11960 = !DILocation(line: 488, column: 15, scope: !11959)
!11961 = !DILocation(line: 488, column: 6, scope: !11907)
!11962 = !DILocation(line: 489, column: 3, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11959, file: !1958, line: 488, column: 48)
!11964 = !DILocation(line: 490, column: 2, scope: !11963)
!11965 = !DILocation(line: 492, column: 18, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 492, column: 6)
!11967 = !DILocation(line: 492, column: 15, scope: !11966)
!11968 = !DILocation(line: 492, column: 6, scope: !11907)
!11969 = !DILocation(line: 493, column: 3, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !1958, line: 492, column: 48)
!11971 = !DILocation(line: 494, column: 2, scope: !11970)
!11972 = !DILocation(line: 496, column: 18, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 496, column: 6)
!11974 = !DILocation(line: 496, column: 15, scope: !11973)
!11975 = !DILocation(line: 496, column: 6, scope: !11907)
!11976 = !DILocation(line: 497, column: 3, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11973, file: !1958, line: 496, column: 46)
!11978 = !DILocation(line: 498, column: 2, scope: !11977)
!11979 = !DILocation(line: 500, column: 11, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11907, file: !1958, line: 500, column: 6)
!11981 = !DILocation(line: 500, column: 29, scope: !11980)
!11982 = !DILocation(line: 500, column: 20, scope: !11980)
!11983 = !DILocation(line: 500, column: 6, scope: !11907)
!11984 = !DILocation(line: 501, column: 3, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11980, file: !1958, line: 500, column: 40)
!11986 = !DILocation(line: 502, column: 26, scope: !11985)
!11987 = !DILocation(line: 502, column: 19, scope: !11985)
!11988 = !DILocation(line: 503, column: 2, scope: !11985)
!11989 = !DILocation(line: 505, column: 26, scope: !11907)
!11990 = !DILocation(line: 505, column: 2, scope: !11907)
!11991 = !DILocation(line: 506, column: 2, scope: !11907)
!11992 = !DILocation(line: 507, column: 1, scope: !11907)
!11993 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1958, file: !1958, line: 509, type: !1901, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !11994)
!11994 = !{!11995, !11996, !11997}
!11995 = !DILocalVariable(name: "dev", arg: 1, scope: !11993, file: !1958, line: 509, type: !1863)
!11996 = !DILocalVariable(name: "cfg", arg: 2, scope: !11993, file: !1958, line: 510, type: !1903)
!11997 = !DILocalVariable(name: "data", scope: !11993, file: !1958, line: 512, type: !11913)
!11998 = !DILocation(line: 0, scope: !11993)
!11999 = !DILocation(line: 512, column: 38, scope: !11993)
!12000 = !DILocation(line: 514, column: 24, scope: !11993)
!12001 = !DILocation(line: 514, column: 7, scope: !11993)
!12002 = !DILocation(line: 514, column: 16, scope: !11993)
!12003 = !DILocation(line: 515, column: 41, scope: !11993)
!12004 = !{i32 0, i32 1537}
!12005 = !DILocation(line: 515, column: 16, scope: !11993)
!12006 = !DILocation(line: 515, column: 7, scope: !11993)
!12007 = !DILocation(line: 515, column: 14, scope: !11993)
!12008 = !DILocation(line: 517, column: 3, scope: !11993)
!12009 = !{i32 0, i32 12289}
!12010 = !DILocation(line: 516, column: 19, scope: !11993)
!12011 = !DILocation(line: 516, column: 7, scope: !11993)
!12012 = !DILocation(line: 516, column: 17, scope: !11993)
!12013 = !DILocation(line: 519, column: 3, scope: !11993)
!12014 = !DILocation(line: 519, column: 33, scope: !11993)
!12015 = !DILocation(line: 518, column: 19, scope: !11993)
!12016 = !DILocation(line: 518, column: 7, scope: !11993)
!12017 = !DILocation(line: 518, column: 17, scope: !11993)
!12018 = !DILocation(line: 521, column: 3, scope: !11993)
!12019 = !{i32 0, i32 769}
!12020 = !DILocation(line: 520, column: 19, scope: !11993)
!12021 = !DILocation(line: 520, column: 7, scope: !11993)
!12022 = !DILocation(line: 520, column: 17, scope: !11993)
!12023 = !DILocation(line: 522, column: 2, scope: !11993)
!12024 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1958, file: !1958, line: 205, type: !12025, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12027)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{!111, !1863}
!12027 = !{!12028, !12029}
!12028 = !DILocalVariable(name: "dev", arg: 1, scope: !12024, file: !1958, line: 205, type: !1863)
!12029 = !DILocalVariable(name: "config", scope: !12024, file: !1958, line: 207, type: !11790)
!12030 = !DILocation(line: 0, scope: !12024)
!12031 = !DILocation(line: 207, column: 48, scope: !12024)
!12032 = !DILocation(line: 209, column: 36, scope: !12024)
!12033 = !DILocation(line: 209, column: 9, scope: !12024)
!12034 = !DILocation(line: 209, column: 2, scope: !12024)
!12035 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1958, file: !1958, line: 270, type: !12036, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12038)
!12036 = !DISubroutineType(types: !12037)
!12037 = !{!1829, !111}
!12038 = !{!12039}
!12039 = !DILocalVariable(name: "parity", arg: 1, scope: !12035, file: !1958, line: 270, type: !111)
!12040 = !DILocation(line: 0, scope: !12035)
!12041 = !DILocation(line: 272, column: 2, scope: !12035)
!12042 = !DILocation(line: 281, column: 1, scope: !12035)
!12043 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1958, file: !1958, line: 220, type: !12025, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12044)
!12044 = !{!12045, !12046}
!12045 = !DILocalVariable(name: "dev", arg: 1, scope: !12043, file: !1958, line: 220, type: !1863)
!12046 = !DILocalVariable(name: "config", scope: !12043, file: !1958, line: 222, type: !11790)
!12047 = !DILocation(line: 0, scope: !12043)
!12048 = !DILocation(line: 222, column: 48, scope: !12043)
!12049 = !DILocation(line: 224, column: 44, scope: !12043)
!12050 = !DILocation(line: 224, column: 9, scope: !12043)
!12051 = !DILocation(line: 224, column: 2, scope: !12043)
!12052 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1958, file: !1958, line: 304, type: !12053, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12055)
!12053 = !DISubroutineType(types: !12054)
!12054 = !{!1843, !111}
!12055 = !{!12056}
!12056 = !DILocalVariable(name: "sb", arg: 1, scope: !12052, file: !1958, line: 304, type: !111)
!12057 = !DILocation(line: 0, scope: !12052)
!12058 = !DILocation(line: 306, column: 2, scope: !12052)
!12059 = !DILocation(line: 0, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12052, file: !1958, line: 306, column: 14)
!12061 = !DILocation(line: 323, column: 1, scope: !12052)
!12062 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1958, file: !1958, line: 235, type: !12025, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12063)
!12063 = !{!12064, !12065}
!12064 = !DILocalVariable(name: "dev", arg: 1, scope: !12062, file: !1958, line: 235, type: !1863)
!12065 = !DILocalVariable(name: "config", scope: !12062, file: !1958, line: 237, type: !11790)
!12066 = !DILocation(line: 0, scope: !12062)
!12067 = !DILocation(line: 237, column: 48, scope: !12062)
!12068 = !DILocation(line: 239, column: 39, scope: !12062)
!12069 = !DILocation(line: 239, column: 9, scope: !12062)
!12070 = !DILocation(line: 239, column: 2, scope: !12062)
!12071 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1958, file: !1958, line: 355, type: !12072, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12074)
!12072 = !DISubroutineType(types: !12073)
!12073 = !{!1836, !111, !111}
!12074 = !{!12075, !12076}
!12075 = !DILocalVariable(name: "db", arg: 1, scope: !12071, file: !1958, line: 355, type: !111)
!12076 = !DILocalVariable(name: "p", arg: 2, scope: !12071, file: !1958, line: 356, type: !111)
!12077 = !DILocation(line: 0, scope: !12071)
!12078 = !DILocation(line: 358, column: 2, scope: !12071)
!12079 = !DILocation(line: 384, column: 1, scope: !12071)
!12080 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1958, file: !1958, line: 250, type: !12025, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12081)
!12081 = !{!12082, !12083}
!12082 = !DILocalVariable(name: "dev", arg: 1, scope: !12080, file: !1958, line: 250, type: !1863)
!12083 = !DILocalVariable(name: "config", scope: !12080, file: !1958, line: 252, type: !11790)
!12084 = !DILocation(line: 0, scope: !12080)
!12085 = !DILocation(line: 252, column: 48, scope: !12080)
!12086 = !DILocation(line: 254, column: 40, scope: !12080)
!12087 = !DILocation(line: 254, column: 9, scope: !12080)
!12088 = !DILocation(line: 254, column: 2, scope: !12080)
!12089 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1958, file: !1958, line: 409, type: !12090, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12092)
!12090 = !DISubroutineType(types: !12091)
!12091 = !{!1849, !111}
!12092 = !{!12093}
!12093 = !DILocalVariable(name: "fc", arg: 1, scope: !12089, file: !1958, line: 409, type: !111)
!12094 = !DILocation(line: 0, scope: !12089)
!12095 = !DILocation(line: 411, column: 9, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12089, file: !1958, line: 411, column: 6)
!12097 = !DILocation(line: 416, column: 1, scope: !12089)
!12098 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12099, file: !12099, line: 967, type: !12100, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12102)
!12099 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12100 = !DISubroutineType(types: !12101)
!12101 = !{!111, !1904}
!12102 = !{!12103}
!12103 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12098, file: !12099, line: 967, type: !1904)
!12104 = !DILocation(line: 0, scope: !12098)
!12105 = !DILocation(line: 969, column: 21, scope: !12098)
!12106 = !DILocation(line: 969, column: 3, scope: !12098)
!12107 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12099, file: !12099, line: 601, type: !12100, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12108)
!12108 = !{!12109}
!12109 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12107, file: !12099, line: 601, type: !1904)
!12110 = !DILocation(line: 0, scope: !12107)
!12111 = !DILocation(line: 603, column: 21, scope: !12107)
!12112 = !DILocation(line: 603, column: 3, scope: !12107)
!12113 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12099, file: !12099, line: 820, type: !12100, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12114)
!12114 = !{!12115}
!12115 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12113, file: !12099, line: 820, type: !1904)
!12116 = !DILocation(line: 0, scope: !12113)
!12117 = !DILocation(line: 822, column: 21, scope: !12113)
!12118 = !DILocation(line: 822, column: 3, scope: !12113)
!12119 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12099, file: !12099, line: 547, type: !12100, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12120)
!12120 = !{!12121}
!12121 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12119, file: !12099, line: 547, type: !1904)
!12122 = !DILocation(line: 0, scope: !12119)
!12123 = !DILocation(line: 549, column: 21, scope: !12119)
!12124 = !DILocation(line: 549, column: 3, scope: !12119)
!12125 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1958, file: !1958, line: 257, type: !12126, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12128)
!12126 = !DISubroutineType(types: !12127)
!12127 = !{!111, !1829}
!12128 = !{!12129}
!12129 = !DILocalVariable(name: "parity", arg: 1, scope: !12125, file: !1958, line: 257, type: !1829)
!12130 = !DILocation(line: 0, scope: !12125)
!12131 = !DILocation(line: 259, column: 2, scope: !12125)
!12132 = !DILocation(line: 268, column: 1, scope: !12125)
!12133 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1958, file: !1958, line: 283, type: !12134, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12136)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{!111, !1843}
!12136 = !{!12137}
!12137 = !DILocalVariable(name: "sb", arg: 1, scope: !12133, file: !1958, line: 283, type: !1843)
!12138 = !DILocation(line: 0, scope: !12133)
!12139 = !DILocation(line: 285, column: 2, scope: !12133)
!12140 = !DILocation(line: 0, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12133, file: !1958, line: 285, column: 14)
!12142 = !DILocation(line: 302, column: 1, scope: !12133)
!12143 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1958, file: !1958, line: 325, type: !12144, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12146)
!12144 = !DISubroutineType(types: !12145)
!12145 = !{!111, !1836, !1829}
!12146 = !{!12147, !12148}
!12147 = !DILocalVariable(name: "db", arg: 1, scope: !12143, file: !1958, line: 325, type: !1836)
!12148 = !DILocalVariable(name: "p", arg: 2, scope: !12143, file: !1958, line: 326, type: !1829)
!12149 = !DILocation(line: 0, scope: !12143)
!12150 = !DILocation(line: 328, column: 2, scope: !12143)
!12151 = !DILocation(line: 353, column: 1, scope: !12143)
!12152 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1958, file: !1958, line: 393, type: !12153, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12155)
!12153 = !DISubroutineType(types: !12154)
!12154 = !{!111, !1849}
!12155 = !{!12156}
!12156 = !DILocalVariable(name: "fc", arg: 1, scope: !12152, file: !1958, line: 393, type: !1849)
!12157 = !DILocation(line: 0, scope: !12152)
!12158 = !DILocation(line: 395, column: 9, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12152, file: !1958, line: 395, column: 6)
!12160 = !DILocation(line: 400, column: 1, scope: !12152)
!12161 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12099, file: !12099, line: 424, type: !12162, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12164)
!12162 = !DISubroutineType(types: !12163)
!12163 = !{null, !1904}
!12164 = !{!12165}
!12165 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12161, file: !12099, line: 424, type: !1904)
!12166 = !DILocation(line: 0, scope: !12161)
!12167 = !DILocation(line: 426, column: 3, scope: !12161)
!12168 = !DILocation(line: 427, column: 1, scope: !12161)
!12169 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1958, file: !1958, line: 197, type: !12170, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12172)
!12170 = !DISubroutineType(types: !12171)
!12171 = !{null, !1863, !111}
!12172 = !{!12173, !12174, !12175}
!12173 = !DILocalVariable(name: "dev", arg: 1, scope: !12169, file: !1958, line: 197, type: !1863)
!12174 = !DILocalVariable(name: "parity", arg: 2, scope: !12169, file: !1958, line: 198, type: !111)
!12175 = !DILocalVariable(name: "config", scope: !12169, file: !1958, line: 200, type: !11790)
!12176 = !DILocation(line: 0, scope: !12169)
!12177 = !DILocation(line: 200, column: 48, scope: !12169)
!12178 = !DILocation(line: 202, column: 29, scope: !12169)
!12179 = !DILocation(line: 202, column: 2, scope: !12169)
!12180 = !DILocation(line: 203, column: 1, scope: !12169)
!12181 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1958, file: !1958, line: 212, type: !12170, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12182)
!12182 = !{!12183, !12184, !12185}
!12183 = !DILocalVariable(name: "dev", arg: 1, scope: !12181, file: !1958, line: 212, type: !1863)
!12184 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12181, file: !1958, line: 213, type: !111)
!12185 = !DILocalVariable(name: "config", scope: !12181, file: !1958, line: 215, type: !11790)
!12186 = !DILocation(line: 0, scope: !12181)
!12187 = !DILocation(line: 215, column: 48, scope: !12181)
!12188 = !DILocation(line: 217, column: 37, scope: !12181)
!12189 = !DILocation(line: 217, column: 2, scope: !12181)
!12190 = !DILocation(line: 218, column: 1, scope: !12181)
!12191 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1958, file: !1958, line: 227, type: !12170, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12192)
!12192 = !{!12193, !12194, !12195}
!12193 = !DILocalVariable(name: "dev", arg: 1, scope: !12191, file: !1958, line: 227, type: !1863)
!12194 = !DILocalVariable(name: "databits", arg: 2, scope: !12191, file: !1958, line: 228, type: !111)
!12195 = !DILocalVariable(name: "config", scope: !12191, file: !1958, line: 230, type: !11790)
!12196 = !DILocation(line: 0, scope: !12191)
!12197 = !DILocation(line: 230, column: 48, scope: !12191)
!12198 = !DILocation(line: 232, column: 32, scope: !12191)
!12199 = !DILocation(line: 232, column: 2, scope: !12191)
!12200 = !DILocation(line: 233, column: 1, scope: !12191)
!12201 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1958, file: !1958, line: 242, type: !12170, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12202)
!12202 = !{!12203, !12204, !12205}
!12203 = !DILocalVariable(name: "dev", arg: 1, scope: !12201, file: !1958, line: 242, type: !1863)
!12204 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12201, file: !1958, line: 243, type: !111)
!12205 = !DILocalVariable(name: "config", scope: !12201, file: !1958, line: 245, type: !11790)
!12206 = !DILocation(line: 0, scope: !12201)
!12207 = !DILocation(line: 245, column: 48, scope: !12201)
!12208 = !DILocation(line: 247, column: 33, scope: !12201)
!12209 = !DILocation(line: 247, column: 2, scope: !12201)
!12210 = !DILocation(line: 248, column: 1, scope: !12201)
!12211 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1958, file: !1958, line: 107, type: !12170, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12212)
!12212 = !{!12213, !12214, !12215, !12216, !12217}
!12213 = !DILocalVariable(name: "dev", arg: 1, scope: !12211, file: !1958, line: 107, type: !1863)
!12214 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12211, file: !1958, line: 107, type: !111)
!12215 = !DILocalVariable(name: "config", scope: !12211, file: !1958, line: 109, type: !11790)
!12216 = !DILocalVariable(name: "data", scope: !12211, file: !1958, line: 110, type: !11913)
!12217 = !DILocalVariable(name: "clock_rate", scope: !12211, file: !1958, line: 112, type: !111)
!12218 = !DILocation(line: 0, scope: !12211)
!12219 = !DILocation(line: 109, column: 48, scope: !12211)
!12220 = !DILocation(line: 110, column: 38, scope: !12211)
!12221 = !DILocation(line: 112, column: 2, scope: !12211)
!12222 = !DILocation(line: 123, column: 36, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12224, file: !1958, line: 123, column: 7)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !1958, line: 122, column: 9)
!12225 = distinct !DILexicalBlock(scope: !12211, file: !1958, line: 115, column: 6)
!12226 = !DILocation(line: 124, column: 42, scope: !12223)
!12227 = !DILocation(line: 123, column: 7, scope: !12223)
!12228 = !DILocation(line: 125, column: 22, scope: !12223)
!12229 = !DILocation(line: 123, column: 7, scope: !12224)
!12230 = !DILocation(line: 126, column: 4, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12232, file: !1958, line: 126, column: 4)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !1958, line: 126, column: 4)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !1958, line: 126, column: 4)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !1958, line: 126, column: 4)
!12235 = distinct !DILexicalBlock(scope: !12223, file: !1958, line: 125, column: 27)
!12236 = !DILocation(line: 127, column: 4, scope: !12235)
!12237 = !DILocation(line: 176, column: 36, scope: !12211)
!12238 = !DILocation(line: 176, column: 3, scope: !12211)
!12239 = !DILocation(line: 179, column: 32, scope: !12211)
!12240 = !DILocation(line: 180, column: 10, scope: !12211)
!12241 = !DILocation(line: 179, column: 3, scope: !12211)
!12242 = !DILocation(line: 189, column: 3, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12244, file: !1958, line: 189, column: 3)
!12244 = distinct !DILexicalBlock(scope: !12211, file: !1958, line: 189, column: 3)
!12245 = !DILocation(line: 189, column: 3, scope: !12244)
!12246 = !DILocation(line: 189, column: 3, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12243, file: !1958, line: 189, column: 3)
!12248 = !DILocation(line: 195, column: 1, scope: !12211)
!12249 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12099, file: !12099, line: 410, type: !12162, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12250)
!12250 = !{!12251}
!12251 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12249, file: !12099, line: 410, type: !1904)
!12252 = !DILocation(line: 0, scope: !12249)
!12253 = !DILocation(line: 412, column: 3, scope: !12249)
!12254 = !DILocation(line: 413, column: 1, scope: !12249)
!12255 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1318, file: !1318, line: 216, type: !1937, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12256)
!12256 = !{!12257, !12258, !12259, !12260}
!12257 = !DILocalVariable(name: "dev", arg: 1, scope: !12255, file: !1318, line: 216, type: !1863)
!12258 = !DILocalVariable(name: "sys", arg: 2, scope: !12255, file: !1318, line: 217, type: !1414)
!12259 = !DILocalVariable(name: "rate", arg: 3, scope: !12255, file: !1318, line: 218, type: !1370)
!12260 = !DILocalVariable(name: "api", scope: !12255, file: !1318, line: 220, type: !1915)
!12261 = !DILocation(line: 0, scope: !12255)
!12262 = !DILocation(line: 221, column: 49, scope: !12255)
!12263 = !DILocation(line: 223, column: 11, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12255, file: !1318, line: 223, column: 6)
!12265 = !DILocation(line: 223, column: 20, scope: !12264)
!12266 = !DILocation(line: 223, column: 6, scope: !12255)
!12267 = !DILocation(line: 227, column: 9, scope: !12255)
!12268 = !DILocation(line: 227, column: 2, scope: !12255)
!12269 = !DILocation(line: 228, column: 1, scope: !12255)
!12270 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7687, file: !7687, line: 175, type: !7688, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12271)
!12271 = !{!12272}
!12272 = !DILocalVariable(name: "level", arg: 1, scope: !12270, file: !7687, line: 175, type: !103)
!12273 = !DILocation(line: 0, scope: !12270)
!12274 = !DILocation(line: 177, column: 2, scope: !12270)
!12275 = !DILocation(line: 189, column: 1, scope: !12270)
!12276 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12099, file: !12099, line: 615, type: !12277, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12279)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{null, !1904, !111}
!12279 = !{!12280, !12281}
!12280 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12276, file: !12099, line: 615, type: !1904)
!12281 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12276, file: !12099, line: 615, type: !111)
!12282 = !DILocation(line: 0, scope: !12276)
!12283 = !DILocation(line: 617, column: 3, scope: !12276)
!12284 = !DILocation(line: 618, column: 1, scope: !12276)
!12285 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12099, file: !12099, line: 1020, type: !12286, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12288)
!12286 = !DISubroutineType(types: !12287)
!12287 = !{null, !1904, !111, !111, !111}
!12288 = !{!12289, !12290, !12291, !12292}
!12289 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12285, file: !12099, line: 1020, type: !1904)
!12290 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12285, file: !12099, line: 1020, type: !111)
!12291 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12285, file: !12099, line: 1020, type: !111)
!12292 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12285, file: !12099, line: 1021, type: !111)
!12293 = !DILocation(line: 0, scope: !12285)
!12294 = !DILocation(line: 1029, column: 30, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !12099, line: 1028, column: 3)
!12296 = distinct !DILexicalBlock(scope: !12285, file: !12099, line: 1023, column: 7)
!12297 = !DILocation(line: 1029, column: 19, scope: !12295)
!12298 = !DILocation(line: 1029, column: 13, scope: !12295)
!12299 = !DILocation(line: 1029, column: 17, scope: !12295)
!12300 = !DILocation(line: 1031, column: 1, scope: !12285)
!12301 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12099, file: !12099, line: 949, type: !12277, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12302)
!12302 = !{!12303, !12304}
!12303 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12301, file: !12099, line: 949, type: !1904)
!12304 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12301, file: !12099, line: 949, type: !111)
!12305 = !DILocation(line: 0, scope: !12301)
!12306 = !DILocation(line: 951, column: 3, scope: !12301)
!12307 = !DILocation(line: 952, column: 1, scope: !12301)
!12308 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12099, file: !12099, line: 588, type: !12277, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12309)
!12309 = !{!12310, !12311}
!12310 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12308, file: !12099, line: 588, type: !1904)
!12311 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12308, file: !12099, line: 588, type: !111)
!12312 = !DILocation(line: 0, scope: !12308)
!12313 = !DILocation(line: 590, column: 3, scope: !12308)
!12314 = !DILocation(line: 591, column: 1, scope: !12308)
!12315 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12099, file: !12099, line: 805, type: !12277, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12316)
!12316 = !{!12317, !12318}
!12317 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12315, file: !12099, line: 805, type: !1904)
!12318 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12315, file: !12099, line: 805, type: !111)
!12319 = !DILocation(line: 0, scope: !12315)
!12320 = !DILocation(line: 807, column: 3, scope: !12315)
!12321 = !DILocation(line: 808, column: 1, scope: !12315)
!12322 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12099, file: !12099, line: 532, type: !12277, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12323)
!12323 = !{!12324, !12325}
!12324 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12322, file: !12099, line: 532, type: !1904)
!12325 = !DILocalVariable(name: "Parity", arg: 2, scope: !12322, file: !12099, line: 532, type: !111)
!12326 = !DILocation(line: 0, scope: !12322)
!12327 = !DILocation(line: 534, column: 3, scope: !12322)
!12328 = !DILocation(line: 535, column: 1, scope: !12322)
!12329 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12099, file: !12099, line: 1770, type: !12100, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12330)
!12330 = !{!12331}
!12331 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12329, file: !12099, line: 1770, type: !1904)
!12332 = !DILocation(line: 0, scope: !12329)
!12333 = !DILocation(line: 1772, column: 11, scope: !12329)
!12334 = !DILocation(line: 1772, column: 46, scope: !12329)
!12335 = !DILocation(line: 1772, column: 3, scope: !12329)
!12336 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12099, file: !12099, line: 1737, type: !12100, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12337)
!12337 = !{!12338}
!12338 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12336, file: !12099, line: 1737, type: !1904)
!12339 = !DILocation(line: 0, scope: !12336)
!12340 = !DILocation(line: 1739, column: 11, scope: !12336)
!12341 = !DILocation(line: 1739, column: 3, scope: !12336)
!12342 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12099, file: !12099, line: 1748, type: !12100, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12343)
!12343 = !{!12344}
!12344 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12342, file: !12099, line: 1748, type: !1904)
!12345 = !DILocation(line: 0, scope: !12342)
!12346 = !DILocation(line: 1750, column: 11, scope: !12342)
!12347 = !DILocation(line: 1750, column: 45, scope: !12342)
!12348 = !DILocation(line: 1750, column: 3, scope: !12342)
!12349 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12099, file: !12099, line: 1827, type: !12100, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12350)
!12350 = !{!12351}
!12351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12349, file: !12099, line: 1827, type: !1904)
!12352 = !DILocation(line: 0, scope: !12349)
!12353 = !DILocation(line: 1829, column: 11, scope: !12349)
!12354 = !DILocation(line: 1829, column: 46, scope: !12349)
!12355 = !DILocation(line: 1829, column: 3, scope: !12349)
!12356 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12099, file: !12099, line: 1992, type: !12162, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12357)
!12357 = !{!12358}
!12358 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12356, file: !12099, line: 1992, type: !1904)
!12359 = !DILocation(line: 0, scope: !12356)
!12360 = !DILocation(line: 1994, column: 3, scope: !12356)
!12361 = !DILocation(line: 1995, column: 1, scope: !12356)
!12362 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12099, file: !12099, line: 1934, type: !12162, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12363)
!12363 = !{!12364, !12365}
!12364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12362, file: !12099, line: 1934, type: !1904)
!12365 = !DILocalVariable(name: "tmpreg", scope: !12362, file: !12099, line: 1936, type: !777)
!12366 = !DILocation(line: 0, scope: !12362)
!12367 = !DILocation(line: 1936, column: 3, scope: !12362)
!12368 = !DILocation(line: 1936, column: 17, scope: !12362)
!12369 = !DILocation(line: 1937, column: 20, scope: !12362)
!12370 = !DILocation(line: 1937, column: 10, scope: !12362)
!12371 = !DILocation(line: 1938, column: 10, scope: !12362)
!12372 = !DILocation(line: 1939, column: 20, scope: !12362)
!12373 = !DILocation(line: 1939, column: 10, scope: !12362)
!12374 = !DILocation(line: 1940, column: 10, scope: !12362)
!12375 = !DILocation(line: 1941, column: 1, scope: !12362)
!12376 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12099, file: !12099, line: 1877, type: !12162, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12377)
!12377 = !{!12378, !12379}
!12378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12376, file: !12099, line: 1877, type: !1904)
!12379 = !DILocalVariable(name: "tmpreg", scope: !12376, file: !12099, line: 1879, type: !777)
!12380 = !DILocation(line: 0, scope: !12376)
!12381 = !DILocation(line: 1879, column: 3, scope: !12376)
!12382 = !DILocation(line: 1879, column: 17, scope: !12376)
!12383 = !DILocation(line: 1880, column: 20, scope: !12376)
!12384 = !DILocation(line: 1880, column: 10, scope: !12376)
!12385 = !DILocation(line: 1881, column: 10, scope: !12376)
!12386 = !DILocation(line: 1882, column: 20, scope: !12376)
!12387 = !DILocation(line: 1882, column: 10, scope: !12376)
!12388 = !DILocation(line: 1883, column: 10, scope: !12376)
!12389 = !DILocation(line: 1884, column: 1, scope: !12376)
!12390 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12099, file: !12099, line: 1896, type: !12162, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12391)
!12391 = !{!12392, !12393}
!12392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12390, file: !12099, line: 1896, type: !1904)
!12393 = !DILocalVariable(name: "tmpreg", scope: !12390, file: !12099, line: 1898, type: !777)
!12394 = !DILocation(line: 0, scope: !12390)
!12395 = !DILocation(line: 1898, column: 3, scope: !12390)
!12396 = !DILocation(line: 1898, column: 17, scope: !12390)
!12397 = !DILocation(line: 1899, column: 20, scope: !12390)
!12398 = !DILocation(line: 1899, column: 10, scope: !12390)
!12399 = !DILocation(line: 1900, column: 10, scope: !12390)
!12400 = !DILocation(line: 1901, column: 20, scope: !12390)
!12401 = !DILocation(line: 1901, column: 10, scope: !12390)
!12402 = !DILocation(line: 1902, column: 10, scope: !12390)
!12403 = !DILocation(line: 1903, column: 1, scope: !12390)
!12404 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12099, file: !12099, line: 1915, type: !12162, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12405)
!12405 = !{!12406, !12407}
!12406 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12404, file: !12099, line: 1915, type: !1904)
!12407 = !DILocalVariable(name: "tmpreg", scope: !12404, file: !12099, line: 1917, type: !777)
!12408 = !DILocation(line: 0, scope: !12404)
!12409 = !DILocation(line: 1917, column: 3, scope: !12404)
!12410 = !DILocation(line: 1917, column: 17, scope: !12404)
!12411 = !DILocation(line: 1918, column: 20, scope: !12404)
!12412 = !DILocation(line: 1918, column: 10, scope: !12404)
!12413 = !DILocation(line: 1919, column: 10, scope: !12404)
!12414 = !DILocation(line: 1920, column: 20, scope: !12404)
!12415 = !DILocation(line: 1920, column: 10, scope: !12404)
!12416 = !DILocation(line: 1921, column: 10, scope: !12404)
!12417 = !DILocation(line: 1922, column: 1, scope: !12404)
!12418 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12099, file: !12099, line: 1814, type: !12100, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12419)
!12419 = !{!12420}
!12420 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12418, file: !12099, line: 1814, type: !1904)
!12421 = !DILocation(line: 0, scope: !12418)
!12422 = !DILocation(line: 1816, column: 11, scope: !12418)
!12423 = !DILocation(line: 1816, column: 46, scope: !12418)
!12424 = !DILocation(line: 1816, column: 3, scope: !12418)
!12425 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12099, file: !12099, line: 2426, type: !12426, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12428)
!12426 = !DISubroutineType(types: !12427)
!12427 = !{null, !1904, !166}
!12428 = !{!12429, !12430}
!12429 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12425, file: !12099, line: 2426, type: !1904)
!12430 = !DILocalVariable(name: "Value", arg: 2, scope: !12425, file: !12099, line: 2426, type: !166)
!12431 = !DILocation(line: 0, scope: !12425)
!12432 = !DILocation(line: 2428, column: 16, scope: !12425)
!12433 = !DILocation(line: 2428, column: 11, scope: !12425)
!12434 = !DILocation(line: 2428, column: 14, scope: !12425)
!12435 = !DILocation(line: 2429, column: 1, scope: !12425)
!12436 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12099, file: !12099, line: 1792, type: !12100, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12437)
!12437 = !{!12438}
!12438 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12436, file: !12099, line: 1792, type: !1904)
!12439 = !DILocation(line: 0, scope: !12436)
!12440 = !DILocation(line: 1794, column: 11, scope: !12436)
!12441 = !DILocation(line: 1794, column: 47, scope: !12436)
!12442 = !DILocation(line: 1794, column: 3, scope: !12436)
!12443 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12099, file: !12099, line: 2403, type: !12444, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12446)
!12444 = !DISubroutineType(types: !12445)
!12445 = !{!166, !1904}
!12446 = !{!12447}
!12447 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12443, file: !12099, line: 2403, type: !1904)
!12448 = !DILocation(line: 0, scope: !12443)
!12449 = !DILocation(line: 2405, column: 20, scope: !12443)
!12450 = !DILocation(line: 2405, column: 10, scope: !12443)
!12451 = !DILocation(line: 2405, column: 3, scope: !12443)
!12452 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1958, file: !1958, line: 1583, type: !1884, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12453)
!12453 = !{!12454, !12455, !12456, !12457, !12458, !12459}
!12454 = !DILocalVariable(name: "dev", arg: 1, scope: !12452, file: !1958, line: 1583, type: !1863)
!12455 = !DILocalVariable(name: "config", scope: !12452, file: !1958, line: 1585, type: !11790)
!12456 = !DILocalVariable(name: "data", scope: !12452, file: !1958, line: 1586, type: !11913)
!12457 = !DILocalVariable(name: "ll_parity", scope: !12452, file: !1958, line: 1587, type: !111)
!12458 = !DILocalVariable(name: "ll_datawidth", scope: !12452, file: !1958, line: 1588, type: !111)
!12459 = !DILocalVariable(name: "err", scope: !12452, file: !1958, line: 1589, type: !103)
!12460 = !DILocation(line: 0, scope: !12452)
!12461 = !DILocation(line: 1585, column: 48, scope: !12452)
!12462 = !DILocation(line: 1586, column: 38, scope: !12452)
!12463 = !DILocation(line: 1591, column: 2, scope: !12452)
!12464 = !DILocation(line: 1593, column: 29, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12452, file: !1958, line: 1593, column: 6)
!12466 = !DILocation(line: 1593, column: 7, scope: !12465)
!12467 = !DILocation(line: 1593, column: 6, scope: !12452)
!12468 = !DILocation(line: 1594, column: 3, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12470, file: !1958, line: 1594, column: 3)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !1958, line: 1594, column: 3)
!12471 = distinct !DILexicalBlock(scope: !12472, file: !1958, line: 1594, column: 3)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !1958, line: 1594, column: 3)
!12473 = distinct !DILexicalBlock(scope: !12465, file: !1958, line: 1593, column: 37)
!12474 = !DILocation(line: 1595, column: 3, scope: !12473)
!12475 = !DILocation(line: 1599, column: 31, scope: !12452)
!12476 = !DILocation(line: 1599, column: 71, scope: !12452)
!12477 = !DILocation(line: 1599, column: 8, scope: !12452)
!12478 = !DILocation(line: 1600, column: 10, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12452, file: !1958, line: 1600, column: 6)
!12480 = !DILocation(line: 1600, column: 6, scope: !12452)
!12481 = !DILocation(line: 1601, column: 3, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !1958, line: 1601, column: 3)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !1958, line: 1601, column: 3)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !1958, line: 1601, column: 3)
!12485 = distinct !DILexicalBlock(scope: !12486, file: !1958, line: 1601, column: 3)
!12486 = distinct !DILexicalBlock(scope: !12479, file: !1958, line: 1600, column: 16)
!12487 = !DILocation(line: 1602, column: 3, scope: !12486)
!12488 = !DILocation(line: 1616, column: 36, scope: !12452)
!12489 = !DILocation(line: 1616, column: 8, scope: !12452)
!12490 = !DILocation(line: 1617, column: 10, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12452, file: !1958, line: 1617, column: 6)
!12492 = !DILocation(line: 1617, column: 6, scope: !12452)
!12493 = !DILocation(line: 1621, column: 27, scope: !12452)
!12494 = !DILocation(line: 1621, column: 2, scope: !12452)
!12495 = !DILocation(line: 1624, column: 40, scope: !12452)
!12496 = !DILocation(line: 1624, column: 2, scope: !12452)
!12497 = !DILocation(line: 1630, column: 14, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12452, file: !1958, line: 1630, column: 6)
!12499 = !DILocation(line: 1630, column: 6, scope: !12452)
!12500 = !DILocation(line: 1640, column: 4, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !1958, line: 1640, column: 4)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !1958, line: 1640, column: 4)
!12503 = distinct !DILexicalBlock(scope: !12504, file: !1958, line: 1640, column: 4)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !1958, line: 1640, column: 4)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !1958, line: 1639, column: 28)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !1958, line: 1639, column: 7)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !1958, line: 1638, column: 9)
!12508 = distinct !DILexicalBlock(scope: !12498, file: !1958, line: 1634, column: 13)
!12509 = !DILocation(line: 0, scope: !12498)
!12510 = !DILocation(line: 1649, column: 35, scope: !12452)
!12511 = !DILocation(line: 1649, column: 2, scope: !12452)
!12512 = !DILocation(line: 1654, column: 14, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12452, file: !1958, line: 1654, column: 6)
!12514 = !DILocation(line: 1654, column: 6, scope: !12452)
!12515 = !DILocation(line: 1655, column: 3, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12513, file: !1958, line: 1654, column: 31)
!12517 = !DILocation(line: 1656, column: 2, scope: !12516)
!12518 = !DILocation(line: 1659, column: 37, scope: !12452)
!12519 = !DILocation(line: 1659, column: 2, scope: !12452)
!12520 = !DILocation(line: 1662, column: 14, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12452, file: !1958, line: 1662, column: 6)
!12522 = !DILocation(line: 1662, column: 6, scope: !12452)
!12523 = !DILocation(line: 1663, column: 37, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12521, file: !1958, line: 1662, column: 27)
!12525 = !DILocation(line: 1663, column: 3, scope: !12524)
!12526 = !DILocation(line: 1664, column: 2, scope: !12524)
!12527 = !DILocation(line: 1684, column: 26, scope: !12452)
!12528 = !DILocation(line: 1684, column: 2, scope: !12452)
!12529 = !DILocation(line: 1722, column: 2, scope: !12452)
!12530 = !DILocation(line: 1724, column: 1, scope: !12452)
!12531 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1958, file: !1958, line: 651, type: !12532, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12534)
!12532 = !DISubroutineType(types: !12533)
!12533 = !{null, !1863}
!12534 = !{!12535, !12536, !12537}
!12535 = !DILocalVariable(name: "dev", arg: 1, scope: !12531, file: !1958, line: 651, type: !1863)
!12536 = !DILocalVariable(name: "data", scope: !12531, file: !1958, line: 653, type: !11913)
!12537 = !DILocalVariable(name: "clk", scope: !12531, file: !1958, line: 654, type: !12538)
!12538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1863)
!12539 = !DILocation(line: 0, scope: !12531)
!12540 = !DILocation(line: 653, column: 38, scope: !12531)
!12541 = !DILocation(line: 656, column: 8, scope: !12531)
!12542 = !DILocation(line: 656, column: 14, scope: !12531)
!12543 = !DILocation(line: 657, column: 1, scope: !12531)
!12544 = distinct !DISubprogram(name: "device_is_ready", scope: !10909, file: !10909, line: 47, type: !12545, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12547)
!12545 = !DISubroutineType(types: !12546)
!12546 = !{!122, !1863}
!12547 = !{!12548}
!12548 = !DILocalVariable(name: "dev", arg: 1, scope: !12544, file: !10909, line: 47, type: !1863)
!12549 = !DILocation(line: 0, scope: !12544)
!12550 = !DILocation(line: 55, column: 2, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12544, file: !10909, line: 55, column: 2)
!12552 = !{i64 2155380130}
!12553 = !DILocation(line: 56, column: 9, scope: !12544)
!12554 = !DILocation(line: 56, column: 2, scope: !12544)
!12555 = distinct !DISubprogram(name: "clock_control_on", scope: !1318, file: !1318, line: 123, type: !1922, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12556)
!12556 = !{!12557, !12558, !12559}
!12557 = !DILocalVariable(name: "dev", arg: 1, scope: !12555, file: !1318, line: 123, type: !1863)
!12558 = !DILocalVariable(name: "sys", arg: 2, scope: !12555, file: !1318, line: 124, type: !1414)
!12559 = !DILocalVariable(name: "api", scope: !12555, file: !1318, line: 126, type: !1915)
!12560 = !DILocation(line: 0, scope: !12555)
!12561 = !DILocation(line: 127, column: 49, scope: !12555)
!12562 = !DILocation(line: 129, column: 14, scope: !12555)
!12563 = !DILocation(line: 129, column: 9, scope: !12555)
!12564 = !DILocation(line: 129, column: 2, scope: !12555)
!12565 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2022, file: !2022, line: 342, type: !12566, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12568)
!12566 = !DISubroutineType(types: !12567)
!12567 = !{!103, !2019, !166}
!12568 = !{!12569, !12570, !12571, !12572}
!12569 = !DILocalVariable(name: "config", arg: 1, scope: !12565, file: !2022, line: 342, type: !2019)
!12570 = !DILocalVariable(name: "id", arg: 2, scope: !12565, file: !2022, line: 343, type: !166)
!12571 = !DILocalVariable(name: "ret", scope: !12565, file: !2022, line: 345, type: !103)
!12572 = !DILocalVariable(name: "state", scope: !12565, file: !2022, line: 346, type: !2025)
!12573 = !DILocation(line: 0, scope: !12565)
!12574 = !DILocation(line: 346, column: 2, scope: !12565)
!12575 = !DILocation(line: 348, column: 8, scope: !12565)
!12576 = !DILocation(line: 349, column: 10, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12565, file: !2022, line: 349, column: 6)
!12578 = !DILocation(line: 349, column: 6, scope: !12565)
!12579 = !DILocation(line: 353, column: 44, scope: !12565)
!12580 = !DILocation(line: 353, column: 9, scope: !12565)
!12581 = !DILocation(line: 353, column: 2, scope: !12565)
!12582 = !DILocation(line: 354, column: 1, scope: !12565)
!12583 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12099, file: !12099, line: 497, type: !12277, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12584)
!12584 = !{!12585, !12586, !12587}
!12585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12583, file: !12099, line: 497, type: !1904)
!12586 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12583, file: !12099, line: 497, type: !111)
!12587 = !DILocalVariable(name: "val", scope: !12588, file: !12099, line: 499, type: !111)
!12588 = distinct !DILexicalBlock(scope: !12583, file: !12099, line: 499, column: 3)
!12589 = !DILocation(line: 0, scope: !12583)
!12590 = !DILocation(line: 499, column: 3, scope: !12588)
!12591 = !DILocalVariable(name: "addr", arg: 1, scope: !12592, file: !7930, line: 476, type: !1954)
!12592 = distinct !DISubprogram(name: "__LDREXW", scope: !7930, file: !7930, line: 476, type: !12593, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12595)
!12593 = !DISubroutineType(types: !12594)
!12594 = !{!111, !1954}
!12595 = !{!12591, !12596}
!12596 = !DILocalVariable(name: "result", scope: !12592, file: !7930, line: 478, type: !111)
!12597 = !DILocation(line: 0, scope: !12592, inlinedAt: !12598)
!12598 = distinct !DILocation(line: 499, column: 3, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12588, file: !12099, line: 499, column: 3)
!12600 = !DILocation(line: 480, column: 4, scope: !12592, inlinedAt: !12598)
!12601 = !{i64 3761868}
!12602 = !DILocation(line: 499, column: 3, scope: !12599)
!12603 = !DILocation(line: 0, scope: !12588)
!12604 = !DILocalVariable(name: "value", arg: 1, scope: !12605, file: !7930, line: 527, type: !111)
!12605 = distinct !DISubprogram(name: "__STREXW", scope: !7930, file: !7930, line: 527, type: !12606, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12608)
!12606 = !DISubroutineType(types: !12607)
!12607 = !{!111, !111, !1954}
!12608 = !{!12604, !12609, !12610}
!12609 = !DILocalVariable(name: "addr", arg: 2, scope: !12605, file: !7930, line: 527, type: !1954)
!12610 = !DILocalVariable(name: "result", scope: !12605, file: !7930, line: 529, type: !111)
!12611 = !DILocation(line: 0, scope: !12605, inlinedAt: !12612)
!12612 = distinct !DILocation(line: 499, column: 3, scope: !12588)
!12613 = !DILocation(line: 531, column: 4, scope: !12605, inlinedAt: !12612)
!12614 = !{i64 3763304}
!12615 = distinct !{!12615, !12590, !12590}
!12616 = !DILocation(line: 500, column: 1, scope: !12583)
!12617 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12099, file: !12099, line: 850, type: !12286, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12618)
!12618 = !{!12619, !12620, !12621, !12622}
!12619 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12617, file: !12099, line: 850, type: !1904)
!12620 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12617, file: !12099, line: 850, type: !111)
!12621 = !DILocalVariable(name: "Parity", arg: 3, scope: !12617, file: !12099, line: 850, type: !111)
!12622 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12617, file: !12099, line: 851, type: !111)
!12623 = !DILocation(line: 0, scope: !12617)
!12624 = !DILocation(line: 853, column: 3, scope: !12617)
!12625 = !DILocation(line: 854, column: 3, scope: !12617)
!12626 = !DILocation(line: 855, column: 1, scope: !12617)
!12627 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12099, file: !12099, line: 1337, type: !12162, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12628)
!12628 = !{!12629}
!12629 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12627, file: !12099, line: 1337, type: !1904)
!12630 = !DILocation(line: 0, scope: !12627)
!12631 = !DILocation(line: 1339, column: 3, scope: !12627)
!12632 = !DILocation(line: 1340, column: 1, scope: !12627)
!12633 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2022, file: !2022, line: 316, type: !12634, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12636)
!12634 = !DISubroutineType(types: !12635)
!12635 = !{!103, !2019, !2025}
!12636 = !{!12637, !12638, !12639}
!12637 = !DILocalVariable(name: "config", arg: 1, scope: !12633, file: !2022, line: 317, type: !2019)
!12638 = !DILocalVariable(name: "state", arg: 2, scope: !12633, file: !2022, line: 318, type: !2025)
!12639 = !DILocalVariable(name: "reg", scope: !12633, file: !2022, line: 320, type: !22)
!12640 = !DILocation(line: 0, scope: !12633)
!12641 = !DILocation(line: 329, column: 39, scope: !12633)
!12642 = !DILocation(line: 329, column: 52, scope: !12633)
!12643 = !DILocation(line: 329, column: 9, scope: !12633)
!12644 = !DILocation(line: 329, column: 2, scope: !12633)
!12645 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !12545, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12646)
!12646 = !{!12647}
!12647 = !DILocalVariable(name: "dev", arg: 1, scope: !12645, file: !797, line: 730, type: !1863)
!12648 = !DILocation(line: 0, scope: !12645)
!12649 = !DILocation(line: 732, column: 9, scope: !12645)
!12650 = !DILocation(line: 732, column: 2, scope: !12645)
!12651 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2181, file: !2181, line: 270, type: !2187, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12652)
!12652 = !{!12653}
!12653 = !DILocalVariable(name: "dev", arg: 1, scope: !12651, file: !2181, line: 270, type: !2189)
!12654 = !DILocation(line: 0, scope: !12651)
!12655 = !DILocation(line: 274, column: 2, scope: !12651)
!12656 = !DILocation(line: 275, column: 12, scope: !12651)
!12657 = !DILocation(line: 276, column: 15, scope: !12651)
!12658 = !DILocation(line: 277, column: 16, scope: !12651)
!12659 = !DILocation(line: 278, column: 15, scope: !12651)
!12660 = !DILocation(line: 279, column: 16, scope: !12651)
!12661 = !DILocation(line: 282, column: 2, scope: !12651)
!12662 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7970, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12663)
!12663 = !{!12664, !12665}
!12664 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12662, file: !992, line: 1814, type: !1268)
!12665 = !DILocalVariable(name: "priority", arg: 2, scope: !12662, file: !992, line: 1814, type: !111)
!12666 = !DILocation(line: 0, scope: !12662)
!12667 = !DILocation(line: 1822, column: 46, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !992, line: 1821, column: 3)
!12669 = distinct !DILexicalBlock(scope: !12662, file: !992, line: 1816, column: 7)
!12670 = !DILocation(line: 1824, column: 1, scope: !12662)
!12671 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2181, file: !2181, line: 118, type: !7867, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12672)
!12672 = !{!12673, !12674}
!12673 = !DILocalVariable(name: "arg", arg: 1, scope: !12671, file: !2181, line: 118, type: !102)
!12674 = !DILocalVariable(name: "dticks", scope: !12671, file: !2181, line: 121, type: !111)
!12675 = !DILocation(line: 0, scope: !12671)
!12676 = !DILocation(line: 124, column: 2, scope: !12671)
!12677 = !DILocation(line: 129, column: 17, scope: !12671)
!12678 = !DILocation(line: 129, column: 14, scope: !12671)
!12679 = !DILocation(line: 130, column: 15, scope: !12671)
!12680 = !DILocation(line: 145, column: 27, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !2181, line: 132, column: 16)
!12682 = distinct !DILexicalBlock(scope: !12671, file: !2181, line: 132, column: 6)
!12683 = !DILocation(line: 145, column: 25, scope: !12681)
!12684 = !DILocation(line: 145, column: 45, scope: !12681)
!12685 = !DILocation(line: 146, column: 30, scope: !12681)
!12686 = !DILocation(line: 146, column: 20, scope: !12681)
!12687 = !DILocation(line: 147, column: 3, scope: !12681)
!12688 = !DILocation(line: 151, column: 2, scope: !12671)
!12689 = !DILocation(line: 152, column: 1, scope: !12671)
!12690 = distinct !DISubprogram(name: "elapsed", scope: !2181, file: !2181, line: 85, type: !8017, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12691)
!12691 = !{!12692, !12693, !12694}
!12692 = !DILocalVariable(name: "val1", scope: !12690, file: !2181, line: 87, type: !111)
!12693 = !DILocalVariable(name: "ctrl", scope: !12690, file: !2181, line: 88, type: !111)
!12694 = !DILocalVariable(name: "val2", scope: !12690, file: !2181, line: 89, type: !111)
!12695 = !DILocation(line: 87, column: 27, scope: !12690)
!12696 = !DILocation(line: 0, scope: !12690)
!12697 = !DILocation(line: 88, column: 27, scope: !12690)
!12698 = !DILocation(line: 89, column: 27, scope: !12690)
!12699 = !DILocation(line: 105, column: 12, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12690, file: !2181, line: 105, column: 6)
!12701 = !DILocation(line: 106, column: 6, scope: !12700)
!12702 = !DILocation(line: 107, column: 16, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12700, file: !2181, line: 106, column: 24)
!12704 = !DILocation(line: 111, column: 18, scope: !12703)
!12705 = !DILocation(line: 112, column: 2, scope: !12703)
!12706 = !DILocation(line: 114, column: 20, scope: !12690)
!12707 = !DILocation(line: 114, column: 30, scope: !12690)
!12708 = !DILocation(line: 114, column: 28, scope: !12690)
!12709 = !DILocation(line: 114, column: 2, scope: !12690)
!12710 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2181, file: !2181, line: 154, type: !12711, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12713)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{null, !320, !122}
!12713 = !{!12714, !12715, !12716, !12717, !12718, !12719, !12720, !12725, !12726}
!12714 = !DILocalVariable(name: "ticks", arg: 1, scope: !12710, file: !2181, line: 154, type: !320)
!12715 = !DILocalVariable(name: "idle", arg: 2, scope: !12710, file: !2181, line: 154, type: !122)
!12716 = !DILocalVariable(name: "delay", scope: !12710, file: !2181, line: 169, type: !111)
!12717 = !DILocalVariable(name: "val1", scope: !12710, file: !2181, line: 170, type: !111)
!12718 = !DILocalVariable(name: "val2", scope: !12710, file: !2181, line: 170, type: !111)
!12719 = !DILocalVariable(name: "last_load_", scope: !12710, file: !2181, line: 171, type: !111)
!12720 = !DILocalVariable(name: "key", scope: !12710, file: !2181, line: 176, type: !12721)
!12721 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !12722)
!12722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !12723)
!12723 = !{!12724}
!12724 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12722, file: !152, line: 33, baseType: !103, size: 32)
!12725 = !DILocalVariable(name: "pending", scope: !12710, file: !2181, line: 178, type: !111)
!12726 = !DILocalVariable(name: "unannounced", scope: !12710, file: !2181, line: 185, type: !111)
!12727 = !DILocation(line: 0, scope: !12710)
!12728 = !DILocation(line: 162, column: 49, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12710, file: !2181, line: 162, column: 6)
!12730 = !DILocation(line: 163, column: 17, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12729, file: !2181, line: 162, column: 78)
!12732 = !DILocation(line: 164, column: 13, scope: !12731)
!12733 = !DILocation(line: 165, column: 3, scope: !12731)
!12734 = !DILocation(line: 171, column: 24, scope: !12710)
!12735 = !DILocation(line: 173, column: 10, scope: !12710)
!12736 = !DILocation(line: 174, column: 10, scope: !12710)
!12737 = !DILocalVariable(name: "l", arg: 1, scope: !12738, file: !152, line: 136, type: !12741)
!12738 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !12739, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12742)
!12739 = !DISubroutineType(types: !12740)
!12740 = !{!12721, !12741}
!12741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!12742 = !{!12737, !12743}
!12743 = !DILocalVariable(name: "k", scope: !12738, file: !152, line: 139, type: !12721)
!12744 = !DILocation(line: 0, scope: !12738, inlinedAt: !12745)
!12745 = distinct !DILocation(line: 176, column: 25, scope: !12710)
!12746 = !DILocation(line: 55, column: 2, scope: !12747, inlinedAt: !12751)
!12747 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12748)
!12748 = !{!12749, !12750}
!12749 = !DILocalVariable(name: "key", scope: !12747, file: !7609, line: 44, type: !32)
!12750 = !DILocalVariable(name: "tmp", scope: !12747, file: !7609, line: 53, type: !32)
!12751 = distinct !DILocation(line: 145, column: 10, scope: !12738, inlinedAt: !12745)
!12752 = !{i64 2283466}
!12753 = !DILocation(line: 0, scope: !12747, inlinedAt: !12751)
!12754 = !DILocation(line: 148, column: 2, scope: !12755, inlinedAt: !12745)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !152, line: 148, column: 2)
!12756 = distinct !DILexicalBlock(scope: !12738, file: !152, line: 148, column: 2)
!12757 = !DILocation(line: 148, column: 2, scope: !12756, inlinedAt: !12745)
!12758 = !DILocation(line: 148, column: 2, scope: !12759, inlinedAt: !12745)
!12759 = distinct !DILexicalBlock(scope: !12755, file: !152, line: 148, column: 2)
!12760 = !DILocation(line: 160, column: 2, scope: !12738, inlinedAt: !12745)
!12761 = !DILocation(line: 178, column: 21, scope: !12710)
!12762 = !DILocation(line: 180, column: 18, scope: !12710)
!12763 = !DILocation(line: 182, column: 14, scope: !12710)
!12764 = !DILocation(line: 183, column: 15, scope: !12710)
!12765 = !DILocation(line: 185, column: 39, scope: !12710)
!12766 = !DILocation(line: 185, column: 37, scope: !12710)
!12767 = !DILocation(line: 187, column: 27, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12710, file: !2181, line: 187, column: 6)
!12769 = !DILocation(line: 187, column: 6, scope: !12710)
!12770 = !DILocation(line: 202, column: 27, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12768, file: !2181, line: 195, column: 9)
!12772 = !DILocation(line: 202, column: 48, scope: !12771)
!12773 = !DILocation(line: 203, column: 9, scope: !12771)
!12774 = !DILocation(line: 204, column: 11, scope: !12771)
!12775 = !DILocation(line: 205, column: 13, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12771, file: !2181, line: 205, column: 7)
!12777 = !DILocation(line: 205, column: 7, scope: !12771)
!12778 = !DILocation(line: 0, scope: !12768)
!12779 = !DILocation(line: 212, column: 18, scope: !12710)
!12780 = !DILocation(line: 214, column: 28, scope: !12710)
!12781 = !DILocation(line: 214, column: 16, scope: !12710)
!12782 = !DILocation(line: 215, column: 15, scope: !12710)
!12783 = !DILocation(line: 227, column: 11, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12710, file: !2181, line: 227, column: 6)
!12785 = !DILocation(line: 227, column: 6, scope: !12710)
!12786 = !DILocation(line: 228, column: 15, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12784, file: !2181, line: 227, column: 19)
!12788 = !DILocation(line: 228, column: 38, scope: !12787)
!12789 = !DILocation(line: 228, column: 24, scope: !12787)
!12790 = !DILocation(line: 229, column: 2, scope: !12787)
!12791 = !DILocation(line: 230, column: 24, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12784, file: !2181, line: 229, column: 9)
!12793 = !DILocation(line: 230, column: 15, scope: !12792)
!12794 = !DILocation(line: 0, scope: !12784)
!12795 = !DILocalVariable(name: "key", arg: 2, scope: !12796, file: !152, line: 190, type: !12721)
!12796 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !12797, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12799)
!12797 = !DISubroutineType(types: !12798)
!12798 = !{null, !12741, !12721}
!12799 = !{!12800, !12795}
!12800 = !DILocalVariable(name: "l", arg: 1, scope: !12796, file: !152, line: 189, type: !12741)
!12801 = !DILocation(line: 0, scope: !12796, inlinedAt: !12802)
!12802 = distinct !DILocation(line: 232, column: 2, scope: !12710)
!12803 = !DILocation(line: 194, column: 2, scope: !12804, inlinedAt: !12802)
!12804 = distinct !DILexicalBlock(scope: !12805, file: !152, line: 194, column: 2)
!12805 = distinct !DILexicalBlock(scope: !12796, file: !152, line: 194, column: 2)
!12806 = !DILocation(line: 194, column: 2, scope: !12805, inlinedAt: !12802)
!12807 = !DILocation(line: 194, column: 2, scope: !12808, inlinedAt: !12802)
!12808 = distinct !DILexicalBlock(scope: !12804, file: !152, line: 194, column: 2)
!12809 = !DILocalVariable(name: "key", arg: 1, scope: !12810, file: !7609, line: 84, type: !32)
!12810 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12811)
!12811 = !{!12809}
!12812 = !DILocation(line: 0, scope: !12810, inlinedAt: !12813)
!12813 = distinct !DILocation(line: 215, column: 2, scope: !12796, inlinedAt: !12802)
!12814 = !DILocation(line: 95, column: 2, scope: !12810, inlinedAt: !12813)
!12815 = !{i64 2284283}
!12816 = !DILocation(line: 234, column: 1, scope: !12710)
!12817 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2181, file: !2181, line: 236, type: !8017, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12818)
!12818 = !{!12819, !12820}
!12819 = !DILocalVariable(name: "key", scope: !12817, file: !2181, line: 242, type: !12721)
!12820 = !DILocalVariable(name: "cyc", scope: !12817, file: !2181, line: 243, type: !111)
!12821 = !DILocation(line: 0, scope: !12738, inlinedAt: !12822)
!12822 = distinct !DILocation(line: 242, column: 25, scope: !12817)
!12823 = !DILocation(line: 55, column: 2, scope: !12747, inlinedAt: !12824)
!12824 = distinct !DILocation(line: 145, column: 10, scope: !12738, inlinedAt: !12822)
!12825 = !DILocation(line: 0, scope: !12747, inlinedAt: !12824)
!12826 = !DILocation(line: 148, column: 2, scope: !12755, inlinedAt: !12822)
!12827 = !DILocation(line: 148, column: 2, scope: !12756, inlinedAt: !12822)
!12828 = !DILocation(line: 148, column: 2, scope: !12759, inlinedAt: !12822)
!12829 = !DILocation(line: 160, column: 2, scope: !12738, inlinedAt: !12822)
!12830 = !DILocation(line: 0, scope: !12817)
!12831 = !DILocation(line: 243, column: 17, scope: !12817)
!12832 = !DILocation(line: 243, column: 29, scope: !12817)
!12833 = !DILocation(line: 243, column: 43, scope: !12817)
!12834 = !DILocation(line: 0, scope: !12796, inlinedAt: !12835)
!12835 = distinct !DILocation(line: 245, column: 2, scope: !12817)
!12836 = !DILocation(line: 194, column: 2, scope: !12804, inlinedAt: !12835)
!12837 = !DILocation(line: 194, column: 2, scope: !12805, inlinedAt: !12835)
!12838 = !DILocation(line: 194, column: 2, scope: !12808, inlinedAt: !12835)
!12839 = !DILocation(line: 243, column: 27, scope: !12817)
!12840 = !DILocation(line: 243, column: 41, scope: !12817)
!12841 = !DILocation(line: 0, scope: !12810, inlinedAt: !12842)
!12842 = distinct !DILocation(line: 215, column: 2, scope: !12796, inlinedAt: !12835)
!12843 = !DILocation(line: 95, column: 2, scope: !12810, inlinedAt: !12842)
!12844 = !DILocation(line: 246, column: 13, scope: !12817)
!12845 = !DILocation(line: 246, column: 2, scope: !12817)
!12846 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2181, file: !2181, line: 249, type: !8017, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !12847)
!12847 = !{!12848, !12849}
!12848 = !DILocalVariable(name: "key", scope: !12846, file: !2181, line: 251, type: !12721)
!12849 = !DILocalVariable(name: "ret", scope: !12846, file: !2181, line: 252, type: !111)
!12850 = !DILocation(line: 0, scope: !12738, inlinedAt: !12851)
!12851 = distinct !DILocation(line: 251, column: 25, scope: !12846)
!12852 = !DILocation(line: 55, column: 2, scope: !12747, inlinedAt: !12853)
!12853 = distinct !DILocation(line: 145, column: 10, scope: !12738, inlinedAt: !12851)
!12854 = !DILocation(line: 0, scope: !12747, inlinedAt: !12853)
!12855 = !DILocation(line: 148, column: 2, scope: !12755, inlinedAt: !12851)
!12856 = !DILocation(line: 148, column: 2, scope: !12756, inlinedAt: !12851)
!12857 = !DILocation(line: 148, column: 2, scope: !12759, inlinedAt: !12851)
!12858 = !DILocation(line: 160, column: 2, scope: !12738, inlinedAt: !12851)
!12859 = !DILocation(line: 0, scope: !12846)
!12860 = !DILocation(line: 252, column: 17, scope: !12846)
!12861 = !DILocation(line: 252, column: 29, scope: !12846)
!12862 = !DILocation(line: 0, scope: !12796, inlinedAt: !12863)
!12863 = distinct !DILocation(line: 254, column: 2, scope: !12846)
!12864 = !DILocation(line: 194, column: 2, scope: !12804, inlinedAt: !12863)
!12865 = !DILocation(line: 194, column: 2, scope: !12805, inlinedAt: !12863)
!12866 = !DILocation(line: 194, column: 2, scope: !12808, inlinedAt: !12863)
!12867 = !DILocation(line: 252, column: 27, scope: !12846)
!12868 = !DILocation(line: 0, scope: !12810, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 215, column: 2, scope: !12796, inlinedAt: !12863)
!12870 = !DILocation(line: 95, column: 2, scope: !12810, inlinedAt: !12869)
!12871 = !DILocation(line: 255, column: 2, scope: !12846)
!12872 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2181, file: !2181, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !2571)
!12873 = !DILocation(line: 260, column: 6, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12872, file: !2181, line: 260, column: 6)
!12875 = !DILocation(line: 260, column: 16, scope: !12874)
!12876 = !DILocation(line: 260, column: 6, scope: !12872)
!12877 = !DILocation(line: 261, column: 17, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12874, file: !2181, line: 260, column: 34)
!12879 = !DILocation(line: 262, column: 2, scope: !12878)
!12880 = !DILocation(line: 263, column: 1, scope: !12872)
!12881 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2181, file: !2181, line: 265, type: !323, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2103, retainedNodes: !2571)
!12882 = !DILocation(line: 267, column: 16, scope: !12881)
!12883 = !DILocation(line: 268, column: 1, scope: !12881)
!12884 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12885, file: !12885, line: 9, type: !12886, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3527, retainedNodes: !12909)
!12885 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12886 = !DISubroutineType(types: !12887)
!12887 = !{!103, !12888, !166, !12908}
!12888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12889, size: 32)
!12889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12890)
!12890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2022, line: 60, size: 64, elements: !12891)
!12891 = !{!12892, !12907}
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12890, file: !2022, line: 69, baseType: !12893, size: 32)
!12893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12894, size: 32)
!12894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12895)
!12895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2022, line: 50, size: 64, elements: !12896)
!12896 = !{!12897, !12905, !12906}
!12897 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12895, file: !2022, line: 52, baseType: !12898, size: 32)
!12898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12899, size: 32)
!12899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12900)
!12900 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2033, line: 37, baseType: !12901)
!12901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2033, line: 32, size: 64, elements: !12902)
!12902 = !{!12903, !12904}
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12901, file: !2033, line: 34, baseType: !111, size: 32)
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12901, file: !2033, line: 36, baseType: !111, size: 32, offset: 32)
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12895, file: !2022, line: 54, baseType: !166, size: 8, offset: 32)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12895, file: !2022, line: 56, baseType: !166, size: 8, offset: 40)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12890, file: !2022, line: 71, baseType: !166, size: 8, offset: 32)
!12908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12893, size: 32)
!12909 = !{!12910, !12911, !12912}
!12910 = !DILocalVariable(name: "config", arg: 1, scope: !12884, file: !12885, line: 9, type: !12888)
!12911 = !DILocalVariable(name: "id", arg: 2, scope: !12884, file: !12885, line: 9, type: !166)
!12912 = !DILocalVariable(name: "state", arg: 3, scope: !12884, file: !12885, line: 10, type: !12908)
!12913 = !DILocation(line: 0, scope: !12884)
!12914 = !DILocation(line: 12, column: 20, scope: !12884)
!12915 = !DILocation(line: 13, column: 27, scope: !12884)
!12916 = !DILocation(line: 13, column: 42, scope: !12884)
!12917 = !DILocation(line: 13, column: 19, scope: !12884)
!12918 = !DILocation(line: 13, column: 16, scope: !12884)
!12919 = !DILocation(line: 13, column: 2, scope: !12884)
!12920 = distinct !{!12920, !12919, !12921}
!12921 = !DILocation(line: 19, column: 2, scope: !12884)
!12922 = !DILocation(line: 14, column: 23, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !12885, line: 14, column: 7)
!12924 = distinct !DILexicalBlock(scope: !12884, file: !12885, line: 13, column: 54)
!12925 = !DILocation(line: 14, column: 10, scope: !12923)
!12926 = !DILocation(line: 18, column: 11, scope: !12924)
!12927 = !DILocation(line: 14, column: 7, scope: !12924)
!12928 = !DILocation(line: 22, column: 1, scope: !12884)
!12929 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2300, file: !2300, line: 193, type: !12930, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12939)
!12930 = !DISubroutineType(types: !12931)
!12931 = !{!103, !12932, !166, !22}
!12932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12933, size: 32)
!12933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12934)
!12934 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2033, line: 37, baseType: !12935)
!12935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2033, line: 32, size: 64, elements: !12936)
!12936 = !{!12937, !12938}
!12937 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12935, file: !2033, line: 34, baseType: !111, size: 32)
!12938 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12935, file: !2033, line: 36, baseType: !111, size: 32, offset: 32)
!12939 = !{!12940, !12941, !12942, !12943, !12944, !12945, !12946, !12947, !12949}
!12940 = !DILocalVariable(name: "pins", arg: 1, scope: !12929, file: !2300, line: 193, type: !12932)
!12941 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12929, file: !2300, line: 193, type: !166)
!12942 = !DILocalVariable(name: "reg", arg: 3, scope: !12929, file: !2300, line: 194, type: !22)
!12943 = !DILocalVariable(name: "pin", scope: !12929, file: !2300, line: 196, type: !111)
!12944 = !DILocalVariable(name: "mux", scope: !12929, file: !2300, line: 196, type: !111)
!12945 = !DILocalVariable(name: "pin_cgf", scope: !12929, file: !2300, line: 197, type: !111)
!12946 = !DILocalVariable(name: "ret", scope: !12929, file: !2300, line: 198, type: !103)
!12947 = !DILocalVariable(name: "i", scope: !12948, file: !2300, line: 209, type: !166)
!12948 = distinct !DILexicalBlock(scope: !12929, file: !2300, line: 209, column: 2)
!12949 = !DILocalVariable(name: "gpio_out", scope: !12950, file: !2300, line: 239, type: !111)
!12950 = distinct !DILexicalBlock(scope: !12951, file: !2300, line: 238, column: 55)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !2300, line: 238, column: 14)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !2300, line: 236, column: 14)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !2300, line: 234, column: 7)
!12954 = distinct !DILexicalBlock(scope: !12955, file: !2300, line: 209, column: 41)
!12955 = distinct !DILexicalBlock(scope: !12948, file: !2300, line: 209, column: 2)
!12956 = !DILocation(line: 0, scope: !12929)
!12957 = !DILocation(line: 0, scope: !12948)
!12958 = !DILocation(line: 209, column: 25, scope: !12955)
!12959 = !DILocation(line: 209, column: 2, scope: !12948)
!12960 = distinct !{!12960, !12959, !12961}
!12961 = !DILocation(line: 259, column: 2, scope: !12948)
!12962 = !DILocation(line: 210, column: 17, scope: !12954)
!12963 = !DILocation(line: 234, column: 7, scope: !12953)
!12964 = !DILocation(line: 234, column: 33, scope: !12953)
!12965 = !DILocation(line: 234, column: 7, scope: !12954)
!12966 = !DILocation(line: 235, column: 22, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12953, file: !2300, line: 234, column: 49)
!12968 = !DILocation(line: 235, column: 29, scope: !12967)
!12969 = !DILocation(line: 236, column: 3, scope: !12967)
!12970 = !DILocation(line: 236, column: 14, scope: !12953)
!12971 = !DILocation(line: 239, column: 32, scope: !12950)
!12972 = !DILocation(line: 0, scope: !12950)
!12973 = !DILocation(line: 241, column: 8, scope: !12950)
!12974 = !DILocation(line: 246, column: 3, scope: !12950)
!12975 = !DILocation(line: 252, column: 9, scope: !12954)
!12976 = !DILocation(line: 255, column: 9, scope: !12954)
!12977 = !DILocation(line: 256, column: 11, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12954, file: !2300, line: 256, column: 7)
!12979 = !DILocation(line: 209, column: 37, scope: !12955)
!12980 = !DILocation(line: 256, column: 7, scope: !12954)
!12981 = !DILocation(line: 262, column: 1, scope: !12929)
!12982 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2300, file: !2300, line: 176, type: !12983, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !12985)
!12983 = !DISubroutineType(types: !12984)
!12984 = !{!103, !111, !111, !111}
!12985 = !{!12986, !12987, !12988, !12989}
!12986 = !DILocalVariable(name: "pin", arg: 1, scope: !12982, file: !2300, line: 176, type: !111)
!12987 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12982, file: !2300, line: 176, type: !111)
!12988 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12982, file: !2300, line: 176, type: !111)
!12989 = !DILocalVariable(name: "port_device", scope: !12982, file: !2300, line: 178, type: !2230)
!12990 = !DILocation(line: 0, scope: !12982)
!12991 = !DILocation(line: 180, column: 22, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12982, file: !2300, line: 180, column: 6)
!12993 = !DILocation(line: 180, column: 6, scope: !12982)
!12994 = !DILocation(line: 180, column: 6, scope: !12992)
!12995 = !DILocation(line: 184, column: 16, scope: !12982)
!12996 = !DILocation(line: 186, column: 19, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12982, file: !2300, line: 186, column: 6)
!12998 = !DILocation(line: 186, column: 28, scope: !12997)
!12999 = !DILocation(line: 186, column: 33, scope: !12997)
!13000 = !DILocation(line: 186, column: 6, scope: !12982)
!13001 = !DILocation(line: 190, column: 43, scope: !12982)
!13002 = !DILocation(line: 190, column: 9, scope: !12982)
!13003 = !DILocation(line: 190, column: 2, scope: !12982)
!13004 = !DILocation(line: 191, column: 1, scope: !12982)
!13005 = distinct !DISubprogram(name: "device_is_ready", scope: !10909, file: !10909, line: 47, type: !13006, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13008)
!13006 = !DISubroutineType(types: !13007)
!13007 = !{!122, !2230}
!13008 = !{!13009}
!13009 = !DILocalVariable(name: "dev", arg: 1, scope: !13005, file: !10909, line: 47, type: !2230)
!13010 = !DILocation(line: 0, scope: !13005)
!13011 = !DILocation(line: 55, column: 2, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13005, file: !10909, line: 55, column: 2)
!13013 = !{i64 2149517475}
!13014 = !DILocation(line: 56, column: 9, scope: !13005)
!13015 = !DILocation(line: 56, column: 2, scope: !13005)
!13016 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !797, file: !797, line: 730, type: !13006, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13017)
!13017 = !{!13018}
!13018 = !DILocalVariable(name: "dev", arg: 1, scope: !13016, file: !797, line: 730, type: !2230)
!13019 = !DILocation(line: 0, scope: !13016)
!13020 = !DILocation(line: 732, column: 9, scope: !13016)
!13021 = !DILocation(line: 732, column: 2, scope: !13016)
!13022 = distinct !DISubprogram(name: "SystemInit", scope: !2352, file: !2352, line: 167, type: !323, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2571)
!13023 = !DILocation(line: 182, column: 1, scope: !13022)
!13024 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2352, file: !2352, line: 220, type: !323, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !13025)
!13025 = !{!13026, !13027, !13028, !13029, !13030}
!13026 = !DILocalVariable(name: "tmp", scope: !13024, file: !2352, line: 222, type: !111)
!13027 = !DILocalVariable(name: "pllvco", scope: !13024, file: !2352, line: 222, type: !111)
!13028 = !DILocalVariable(name: "pllp", scope: !13024, file: !2352, line: 222, type: !111)
!13029 = !DILocalVariable(name: "pllsource", scope: !13024, file: !2352, line: 222, type: !111)
!13030 = !DILocalVariable(name: "pllm", scope: !13024, file: !2352, line: 222, type: !111)
!13031 = !DILocation(line: 0, scope: !13024)
!13032 = !DILocation(line: 225, column: 14, scope: !13024)
!13033 = !DILocation(line: 225, column: 19, scope: !13024)
!13034 = !DILocation(line: 227, column: 3, scope: !13024)
!13035 = !DILocation(line: 240, column: 25, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13024, file: !2352, line: 228, column: 3)
!13037 = !DILocation(line: 241, column: 19, scope: !13036)
!13038 = !DILocation(line: 241, column: 27, scope: !13036)
!13039 = !DILocation(line: 0, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13036, file: !2352, line: 243, column: 11)
!13041 = !DILocation(line: 254, column: 22, scope: !13036)
!13042 = !DILocation(line: 254, column: 62, scope: !13036)
!13043 = !DILocation(line: 255, column: 31, scope: !13036)
!13044 = !DILocation(line: 256, column: 7, scope: !13036)
!13045 = !DILocation(line: 0, scope: !13036)
!13046 = !DILocation(line: 263, column: 30, scope: !13024)
!13047 = !DILocation(line: 263, column: 52, scope: !13024)
!13048 = !DILocation(line: 263, column: 9, scope: !13024)
!13049 = !DILocation(line: 265, column: 19, scope: !13024)
!13050 = !DILocation(line: 266, column: 1, scope: !13024)
!13051 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !13052, file: !13052, line: 87, type: !13053, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13092)
!13052 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13053 = !DISubroutineType(types: !13054)
!13054 = !{!13055, !13056}
!13055 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3533, line: 44, baseType: !3532)
!13056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13057, size: 32)
!13057 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !13058, line: 172, baseType: !13059)
!13058 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13058, line: 121, size: 736, elements: !13060)
!13060 = !{!13061, !13062, !13071, !13079, !13080, !13081, !13082, !13083, !13084, !13085, !13086, !13087, !13088, !13089, !13090, !13091}
!13061 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !13059, file: !13058, line: 123, baseType: !111, size: 32)
!13062 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !13059, file: !13058, line: 126, baseType: !13063, size: 160, offset: 32)
!13063 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !13058, line: 97, baseType: !13064)
!13064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13058, line: 79, size: 160, elements: !13065)
!13065 = !{!13066, !13067, !13068, !13069, !13070}
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !13064, file: !13058, line: 81, baseType: !111, size: 32)
!13067 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !13064, file: !13058, line: 84, baseType: !111, size: 32, offset: 32)
!13068 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !13064, file: !13058, line: 87, baseType: !111, size: 32, offset: 64)
!13069 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !13064, file: !13058, line: 90, baseType: !111, size: 32, offset: 96)
!13070 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !13064, file: !13058, line: 94, baseType: !111, size: 32, offset: 128)
!13071 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !13059, file: !13058, line: 129, baseType: !13072, size: 128, offset: 192)
!13072 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !13058, line: 116, baseType: !13073)
!13073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13058, line: 102, size: 128, elements: !13074)
!13074 = !{!13075, !13076, !13077, !13078}
!13075 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !13073, file: !13058, line: 104, baseType: !111, size: 32)
!13076 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !13073, file: !13058, line: 107, baseType: !111, size: 32, offset: 32)
!13077 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !13073, file: !13058, line: 110, baseType: !111, size: 32, offset: 64)
!13078 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !13073, file: !13058, line: 113, baseType: !111, size: 32, offset: 96)
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !13059, file: !13058, line: 132, baseType: !111, size: 32, offset: 320)
!13080 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !13059, file: !13058, line: 136, baseType: !111, size: 32, offset: 352)
!13081 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !13059, file: !13058, line: 140, baseType: !111, size: 32, offset: 384)
!13082 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !13059, file: !13058, line: 143, baseType: !111, size: 32, offset: 416)
!13083 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !13059, file: !13058, line: 146, baseType: !111, size: 32, offset: 448)
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !13059, file: !13058, line: 149, baseType: !111, size: 32, offset: 480)
!13085 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !13059, file: !13058, line: 152, baseType: !111, size: 32, offset: 512)
!13086 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !13059, file: !13058, line: 155, baseType: !111, size: 32, offset: 544)
!13087 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !13059, file: !13058, line: 158, baseType: !111, size: 32, offset: 576)
!13088 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !13059, file: !13058, line: 161, baseType: !111, size: 32, offset: 608)
!13089 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !13059, file: !13058, line: 164, baseType: !111, size: 32, offset: 640)
!13090 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !13059, file: !13058, line: 167, baseType: !111, size: 32, offset: 672)
!13091 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !13059, file: !13058, line: 170, baseType: !166, size: 8, offset: 704)
!13092 = !{!13093, !13094, !13095, !13096, !13097, !13098, !13099, !13100, !13101, !13102, !13103}
!13093 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !13051, file: !13052, line: 87, type: !13056)
!13094 = !DILocalVariable(name: "tickstart", scope: !13051, file: !13052, line: 89, type: !111)
!13095 = !DILocalVariable(name: "tmpreg1", scope: !13051, file: !13052, line: 90, type: !111)
!13096 = !DILocalVariable(name: "plli2sp", scope: !13051, file: !13052, line: 91, type: !111)
!13097 = !DILocalVariable(name: "plli2sq", scope: !13051, file: !13052, line: 92, type: !111)
!13098 = !DILocalVariable(name: "plli2sr", scope: !13051, file: !13052, line: 93, type: !111)
!13099 = !DILocalVariable(name: "pllsaip", scope: !13051, file: !13052, line: 94, type: !111)
!13100 = !DILocalVariable(name: "pllsaiq", scope: !13051, file: !13052, line: 95, type: !111)
!13101 = !DILocalVariable(name: "plli2sused", scope: !13051, file: !13052, line: 96, type: !111)
!13102 = !DILocalVariable(name: "pllsaiused", scope: !13051, file: !13052, line: 97, type: !111)
!13103 = !DILocalVariable(name: "tmpreg", scope: !13104, file: !13052, line: 184, type: !777)
!13104 = distinct !DILexicalBlock(scope: !13105, file: !13052, line: 184, column: 5)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !13052, line: 179, column: 3)
!13106 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 178, column: 6)
!13107 = !DILocation(line: 0, scope: !13051)
!13108 = !DILocation(line: 103, column: 23, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 103, column: 6)
!13110 = !DILocation(line: 103, column: 45, scope: !13109)
!13111 = !DILocation(line: 103, column: 71, scope: !13109)
!13112 = !DILocation(line: 103, column: 6, scope: !13051)
!13113 = !DILocation(line: 109, column: 5, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13109, file: !13052, line: 104, column: 3)
!13115 = !DILocation(line: 111, column: 23, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13114, file: !13052, line: 111, column: 8)
!13117 = !DILocation(line: 111, column: 45, scope: !13116)
!13118 = !DILocation(line: 111, column: 8, scope: !13114)
!13119 = !DILocation(line: 119, column: 23, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 119, column: 6)
!13121 = !DILocation(line: 119, column: 45, scope: !13120)
!13122 = !DILocation(line: 119, column: 71, scope: !13120)
!13123 = !DILocation(line: 119, column: 6, scope: !13051)
!13124 = !DILocation(line: 125, column: 5, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13120, file: !13052, line: 120, column: 3)
!13126 = !DILocation(line: 127, column: 23, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13125, file: !13052, line: 127, column: 8)
!13128 = !DILocation(line: 127, column: 45, scope: !13127)
!13129 = !DILocation(line: 127, column: 8, scope: !13125)
!13130 = !DILocation(line: 135, column: 23, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 135, column: 6)
!13132 = !DILocation(line: 135, column: 45, scope: !13131)
!13133 = !DILocation(line: 135, column: 67, scope: !13131)
!13134 = !DILocation(line: 135, column: 6, scope: !13051)
!13135 = !DILocation(line: 141, column: 5, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13131, file: !13052, line: 136, column: 3)
!13137 = !DILocation(line: 143, column: 23, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13136, file: !13052, line: 143, column: 8)
!13139 = !DILocation(line: 143, column: 42, scope: !13138)
!13140 = !DILocation(line: 143, column: 8, scope: !13136)
!13141 = !DILocation(line: 148, column: 42, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13136, file: !13052, line: 148, column: 8)
!13143 = !DILocation(line: 148, column: 8, scope: !13136)
!13144 = !DILocation(line: 156, column: 23, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 156, column: 6)
!13146 = !DILocation(line: 156, column: 45, scope: !13145)
!13147 = !DILocation(line: 156, column: 67, scope: !13145)
!13148 = !DILocation(line: 156, column: 6, scope: !13051)
!13149 = !DILocation(line: 162, column: 5, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13145, file: !13052, line: 157, column: 3)
!13151 = !DILocation(line: 165, column: 23, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13150, file: !13052, line: 165, column: 8)
!13153 = !DILocation(line: 165, column: 42, scope: !13152)
!13154 = !DILocation(line: 165, column: 8, scope: !13150)
!13155 = !DILocation(line: 170, column: 42, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13150, file: !13052, line: 170, column: 8)
!13157 = !DILocation(line: 170, column: 8, scope: !13150)
!13158 = !DILocation(line: 178, column: 23, scope: !13106)
!13159 = !DILocation(line: 178, column: 45, scope: !13106)
!13160 = !DILocation(line: 178, column: 66, scope: !13106)
!13161 = !DILocation(line: 178, column: 6, scope: !13051)
!13162 = !DILocation(line: 184, column: 5, scope: !13104)
!13163 = !DILocation(line: 184, column: 5, scope: !13105)
!13164 = !DILocation(line: 187, column: 13, scope: !13105)
!13165 = !DILocation(line: 190, column: 17, scope: !13105)
!13166 = !DILocation(line: 192, column: 5, scope: !13105)
!13167 = !DILocation(line: 192, column: 17, scope: !13105)
!13168 = !DILocation(line: 192, column: 20, scope: !13105)
!13169 = !DILocation(line: 192, column: 34, scope: !13105)
!13170 = !DILocation(line: 194, column: 11, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !13052, line: 194, column: 10)
!13172 = distinct !DILexicalBlock(scope: !13105, file: !13052, line: 193, column: 5)
!13173 = !DILocation(line: 194, column: 25, scope: !13171)
!13174 = !DILocation(line: 194, column: 39, scope: !13171)
!13175 = !DILocation(line: 194, column: 10, scope: !13172)
!13176 = distinct !{!13176, !13166, !13177}
!13177 = !DILocation(line: 198, column: 5, scope: !13105)
!13178 = !DILocation(line: 200, column: 21, scope: !13105)
!13179 = !DILocation(line: 200, column: 26, scope: !13105)
!13180 = !DILocation(line: 201, column: 17, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13105, file: !13052, line: 201, column: 8)
!13182 = !DILocation(line: 201, column: 33, scope: !13181)
!13183 = !DILocation(line: 201, column: 66, scope: !13181)
!13184 = !DILocation(line: 201, column: 84, scope: !13181)
!13185 = !DILocation(line: 201, column: 47, scope: !13181)
!13186 = !DILocation(line: 201, column: 8, scope: !13105)
!13187 = !DILocation(line: 204, column: 23, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13181, file: !13052, line: 202, column: 5)
!13189 = !DILocation(line: 204, column: 28, scope: !13188)
!13190 = !DILocation(line: 206, column: 7, scope: !13188)
!13191 = !DILocation(line: 207, column: 7, scope: !13188)
!13192 = !DILocation(line: 209, column: 17, scope: !13188)
!13193 = !DILocation(line: 212, column: 10, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13188, file: !13052, line: 212, column: 10)
!13195 = !DILocation(line: 212, column: 10, scope: !13188)
!13196 = !DILocation(line: 215, column: 21, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13194, file: !13052, line: 213, column: 7)
!13198 = !DILocation(line: 218, column: 9, scope: !13197)
!13199 = !DILocation(line: 218, column: 15, scope: !13197)
!13200 = !DILocation(line: 218, column: 51, scope: !13197)
!13201 = !DILocation(line: 220, column: 15, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13203, file: !13052, line: 220, column: 14)
!13203 = distinct !DILexicalBlock(scope: !13197, file: !13052, line: 219, column: 9)
!13204 = !DILocation(line: 220, column: 29, scope: !13202)
!13205 = !DILocation(line: 220, column: 43, scope: !13202)
!13206 = !DILocation(line: 220, column: 14, scope: !13203)
!13207 = distinct !{!13207, !13198, !13208}
!13208 = !DILocation(line: 224, column: 9, scope: !13197)
!13209 = !DILocation(line: 227, column: 5, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13105, file: !13052, line: 227, column: 5)
!13211 = !DILocation(line: 232, column: 23, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 232, column: 6)
!13213 = !DILocation(line: 228, column: 3, scope: !13105)
!13214 = !DILocation(line: 232, column: 45, scope: !13212)
!13215 = !DILocation(line: 232, column: 66, scope: !13212)
!13216 = !DILocation(line: 232, column: 6, scope: !13051)
!13217 = !DILocation(line: 235, column: 5, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13212, file: !13052, line: 233, column: 3)
!13219 = !DILocation(line: 240, column: 23, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 240, column: 6)
!13221 = !DILocation(line: 236, column: 3, scope: !13218)
!13222 = !DILocation(line: 240, column: 45, scope: !13220)
!13223 = !DILocation(line: 240, column: 70, scope: !13220)
!13224 = !DILocation(line: 240, column: 6, scope: !13051)
!13225 = !DILocation(line: 246, column: 5, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13220, file: !13052, line: 241, column: 3)
!13227 = !DILocation(line: 251, column: 23, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 251, column: 6)
!13229 = !DILocation(line: 247, column: 3, scope: !13226)
!13230 = !DILocation(line: 251, column: 45, scope: !13228)
!13231 = !DILocation(line: 251, column: 66, scope: !13228)
!13232 = !DILocation(line: 251, column: 6, scope: !13051)
!13233 = !DILocation(line: 257, column: 5, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13228, file: !13052, line: 252, column: 3)
!13235 = !DILocation(line: 262, column: 23, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 262, column: 6)
!13237 = !DILocation(line: 258, column: 3, scope: !13234)
!13238 = !DILocation(line: 262, column: 45, scope: !13236)
!13239 = !DILocation(line: 262, column: 68, scope: !13236)
!13240 = !DILocation(line: 262, column: 6, scope: !13051)
!13241 = !DILocation(line: 268, column: 5, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13236, file: !13052, line: 263, column: 3)
!13243 = !DILocation(line: 271, column: 23, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13242, file: !13052, line: 271, column: 8)
!13245 = !DILocation(line: 271, column: 43, scope: !13244)
!13246 = !DILocation(line: 271, column: 8, scope: !13242)
!13247 = !DILocation(line: 279, column: 23, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 279, column: 6)
!13249 = !DILocation(line: 279, column: 45, scope: !13248)
!13250 = !DILocation(line: 279, column: 67, scope: !13248)
!13251 = !DILocation(line: 279, column: 6, scope: !13051)
!13252 = !DILocation(line: 285, column: 5, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13248, file: !13052, line: 280, column: 3)
!13254 = !DILocation(line: 290, column: 23, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 290, column: 6)
!13256 = !DILocation(line: 286, column: 3, scope: !13253)
!13257 = !DILocation(line: 290, column: 45, scope: !13255)
!13258 = !DILocation(line: 290, column: 70, scope: !13255)
!13259 = !DILocation(line: 290, column: 6, scope: !13051)
!13260 = !DILocation(line: 296, column: 5, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13255, file: !13052, line: 291, column: 3)
!13262 = !DILocation(line: 298, column: 23, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13261, file: !13052, line: 298, column: 8)
!13264 = !DILocation(line: 298, column: 43, scope: !13263)
!13265 = !DILocation(line: 298, column: 8, scope: !13261)
!13266 = !DILocation(line: 308, column: 44, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 308, column: 6)
!13268 = !DILocation(line: 308, column: 18, scope: !13267)
!13269 = !DILocation(line: 308, column: 25, scope: !13267)
!13270 = !DILocation(line: 308, column: 65, scope: !13267)
!13271 = !DILocation(line: 308, column: 6, scope: !13051)
!13272 = !DILocation(line: 311, column: 5, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13267, file: !13052, line: 309, column: 3)
!13274 = !DILocation(line: 313, column: 17, scope: !13273)
!13275 = !DILocation(line: 315, column: 5, scope: !13273)
!13276 = !DILocation(line: 315, column: 11, scope: !13273)
!13277 = !DILocation(line: 317, column: 11, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13279, file: !13052, line: 317, column: 10)
!13279 = distinct !DILexicalBlock(scope: !13273, file: !13052, line: 316, column: 5)
!13280 = !DILocation(line: 317, column: 25, scope: !13278)
!13281 = !DILocation(line: 317, column: 39, scope: !13278)
!13282 = !DILocation(line: 317, column: 10, scope: !13279)
!13283 = distinct !{!13283, !13275, !13284}
!13284 = !DILocation(line: 322, column: 5, scope: !13273)
!13285 = !DILocation(line: 329, column: 27, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13273, file: !13052, line: 329, column: 8)
!13287 = !DILocation(line: 329, column: 49, scope: !13286)
!13288 = !DILocation(line: 329, column: 75, scope: !13286)
!13289 = !DILocation(line: 329, column: 102, scope: !13286)
!13290 = !DILocation(line: 329, column: 121, scope: !13286)
!13291 = !DILocation(line: 329, column: 143, scope: !13286)
!13292 = !DILocation(line: 329, column: 176, scope: !13286)
!13293 = !DILocation(line: 330, column: 49, scope: !13286)
!13294 = !DILocation(line: 330, column: 75, scope: !13286)
!13295 = !DILocation(line: 330, column: 102, scope: !13286)
!13296 = !DILocation(line: 330, column: 121, scope: !13286)
!13297 = !DILocation(line: 330, column: 143, scope: !13286)
!13298 = !DILocation(line: 329, column: 8, scope: !13273)
!13299 = !DILocation(line: 336, column: 26, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13286, file: !13052, line: 331, column: 5)
!13301 = !DILocation(line: 336, column: 100, scope: !13300)
!13302 = !DILocation(line: 337, column: 24, scope: !13300)
!13303 = !DILocation(line: 337, column: 61, scope: !13300)
!13304 = !DILocation(line: 341, column: 7, scope: !13300)
!13305 = !DILocation(line: 345, column: 27, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13273, file: !13052, line: 345, column: 8)
!13307 = !DILocation(line: 342, column: 5, scope: !13300)
!13308 = !DILocation(line: 345, column: 49, scope: !13306)
!13309 = !DILocation(line: 345, column: 71, scope: !13306)
!13310 = !DILocation(line: 345, column: 94, scope: !13306)
!13311 = !DILocation(line: 345, column: 113, scope: !13306)
!13312 = !DILocation(line: 345, column: 132, scope: !13306)
!13313 = !DILocation(line: 345, column: 162, scope: !13306)
!13314 = !DILocation(line: 346, column: 49, scope: !13306)
!13315 = !DILocation(line: 346, column: 71, scope: !13306)
!13316 = !DILocation(line: 346, column: 94, scope: !13306)
!13317 = !DILocation(line: 346, column: 113, scope: !13306)
!13318 = !DILocation(line: 346, column: 132, scope: !13306)
!13319 = !DILocation(line: 345, column: 8, scope: !13273)
!13320 = !DILocation(line: 354, column: 26, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13306, file: !13052, line: 347, column: 5)
!13322 = !DILocation(line: 354, column: 100, scope: !13321)
!13323 = !DILocation(line: 355, column: 24, scope: !13321)
!13324 = !DILocation(line: 355, column: 61, scope: !13321)
!13325 = !DILocation(line: 360, column: 7, scope: !13321)
!13326 = !DILocation(line: 363, column: 7, scope: !13321)
!13327 = !DILocation(line: 367, column: 26, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13273, file: !13052, line: 367, column: 8)
!13329 = !DILocation(line: 364, column: 5, scope: !13321)
!13330 = !DILocation(line: 367, column: 48, scope: !13328)
!13331 = !DILocation(line: 367, column: 73, scope: !13328)
!13332 = !DILocation(line: 367, column: 99, scope: !13328)
!13333 = !DILocation(line: 367, column: 118, scope: !13328)
!13334 = !DILocation(line: 367, column: 138, scope: !13328)
!13335 = !DILocation(line: 367, column: 8, scope: !13273)
!13336 = !DILocation(line: 372, column: 26, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13328, file: !13052, line: 368, column: 5)
!13338 = !DILocation(line: 373, column: 24, scope: !13337)
!13339 = !DILocation(line: 373, column: 61, scope: !13337)
!13340 = !DILocation(line: 377, column: 7, scope: !13337)
!13341 = !DILocation(line: 381, column: 24, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13273, file: !13052, line: 381, column: 8)
!13343 = !DILocation(line: 378, column: 5, scope: !13337)
!13344 = !DILocation(line: 381, column: 45, scope: !13342)
!13345 = !DILocation(line: 381, column: 69, scope: !13342)
!13346 = !DILocation(line: 381, column: 8, scope: !13273)
!13347 = !DILocation(line: 390, column: 7, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13342, file: !13052, line: 382, column: 5)
!13349 = !DILocation(line: 391, column: 5, scope: !13348)
!13350 = !DILocation(line: 394, column: 5, scope: !13273)
!13351 = !DILocation(line: 396, column: 17, scope: !13273)
!13352 = !DILocation(line: 398, column: 5, scope: !13273)
!13353 = !DILocation(line: 398, column: 11, scope: !13273)
!13354 = !DILocation(line: 398, column: 51, scope: !13273)
!13355 = !DILocation(line: 400, column: 11, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13357, file: !13052, line: 400, column: 10)
!13357 = distinct !DILexicalBlock(scope: !13273, file: !13052, line: 399, column: 5)
!13358 = !DILocation(line: 400, column: 25, scope: !13356)
!13359 = !DILocation(line: 400, column: 39, scope: !13356)
!13360 = !DILocation(line: 400, column: 10, scope: !13357)
!13361 = distinct !{!13361, !13352, !13362}
!13362 = !DILocation(line: 405, column: 5, scope: !13273)
!13363 = !DILocation(line: 411, column: 17, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 411, column: 6)
!13365 = !DILocation(line: 411, column: 6, scope: !13051)
!13366 = !DILocation(line: 414, column: 5, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13364, file: !13052, line: 412, column: 3)
!13368 = !DILocation(line: 416, column: 17, scope: !13367)
!13369 = !DILocation(line: 418, column: 5, scope: !13367)
!13370 = !DILocation(line: 418, column: 11, scope: !13367)
!13371 = !DILocation(line: 420, column: 11, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !13052, line: 420, column: 10)
!13373 = distinct !DILexicalBlock(scope: !13367, file: !13052, line: 419, column: 5)
!13374 = !DILocation(line: 420, column: 25, scope: !13372)
!13375 = !DILocation(line: 420, column: 39, scope: !13372)
!13376 = !DILocation(line: 420, column: 10, scope: !13373)
!13377 = distinct !{!13377, !13369, !13378}
!13378 = !DILocation(line: 425, column: 5, scope: !13367)
!13379 = !DILocation(line: 432, column: 27, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13367, file: !13052, line: 432, column: 8)
!13381 = !DILocation(line: 432, column: 49, scope: !13380)
!13382 = !DILocation(line: 432, column: 71, scope: !13380)
!13383 = !DILocation(line: 432, column: 94, scope: !13380)
!13384 = !DILocation(line: 432, column: 113, scope: !13380)
!13385 = !DILocation(line: 432, column: 132, scope: !13380)
!13386 = !DILocation(line: 432, column: 162, scope: !13380)
!13387 = !DILocation(line: 433, column: 49, scope: !13380)
!13388 = !DILocation(line: 433, column: 71, scope: !13380)
!13389 = !DILocation(line: 433, column: 94, scope: !13380)
!13390 = !DILocation(line: 433, column: 113, scope: !13380)
!13391 = !DILocation(line: 433, column: 132, scope: !13380)
!13392 = !DILocation(line: 432, column: 8, scope: !13367)
!13393 = !DILocation(line: 441, column: 26, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13380, file: !13052, line: 434, column: 5)
!13395 = !DILocation(line: 441, column: 100, scope: !13394)
!13396 = !DILocation(line: 445, column: 7, scope: !13394)
!13397 = !DILocation(line: 448, column: 7, scope: !13394)
!13398 = !DILocation(line: 453, column: 26, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13367, file: !13052, line: 453, column: 8)
!13400 = !DILocation(line: 449, column: 5, scope: !13394)
!13401 = !DILocation(line: 453, column: 48, scope: !13399)
!13402 = !DILocation(line: 453, column: 71, scope: !13399)
!13403 = !DILocation(line: 453, column: 95, scope: !13399)
!13404 = !DILocation(line: 453, column: 114, scope: !13399)
!13405 = !DILocation(line: 453, column: 134, scope: !13399)
!13406 = !DILocation(line: 453, column: 8, scope: !13367)
!13407 = !DILocation(line: 458, column: 24, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13399, file: !13052, line: 454, column: 5)
!13409 = !DILocation(line: 458, column: 61, scope: !13408)
!13410 = !DILocation(line: 462, column: 7, scope: !13408)
!13411 = !DILocation(line: 463, column: 5, scope: !13408)
!13412 = !DILocation(line: 466, column: 5, scope: !13367)
!13413 = !DILocation(line: 468, column: 17, scope: !13367)
!13414 = !DILocation(line: 470, column: 5, scope: !13367)
!13415 = !DILocation(line: 470, column: 11, scope: !13367)
!13416 = !DILocation(line: 470, column: 39, scope: !13367)
!13417 = !DILocation(line: 472, column: 11, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !13052, line: 472, column: 10)
!13419 = distinct !DILexicalBlock(scope: !13367, file: !13052, line: 471, column: 5)
!13420 = !DILocation(line: 472, column: 25, scope: !13418)
!13421 = !DILocation(line: 472, column: 39, scope: !13418)
!13422 = !DILocation(line: 472, column: 10, scope: !13419)
!13423 = distinct !{!13423, !13414, !13424}
!13424 = !DILocation(line: 477, column: 5, scope: !13367)
!13425 = !DILocation(line: 480, column: 1, scope: !13051)
!13426 = !DISubprogram(name: "HAL_GetTick", scope: !13427, file: !13427, line: 234, type: !8017, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!13427 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13428 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !13052, file: !13052, line: 489, type: !13429, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13431)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{null, !13056}
!13431 = !{!13432, !13433}
!13432 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !13428, file: !13052, line: 489, type: !13056)
!13433 = !DILocalVariable(name: "tempreg", scope: !13428, file: !13052, line: 491, type: !111)
!13434 = !DILocation(line: 0, scope: !13428)
!13435 = !DILocation(line: 494, column: 18, scope: !13428)
!13436 = !DILocation(line: 494, column: 39, scope: !13428)
!13437 = !DILocation(line: 502, column: 52, scope: !13428)
!13438 = !DILocation(line: 502, column: 63, scope: !13428)
!13439 = !DILocation(line: 502, column: 25, scope: !13428)
!13440 = !DILocation(line: 502, column: 33, scope: !13428)
!13441 = !DILocation(line: 503, column: 52, scope: !13428)
!13442 = !DILocation(line: 503, column: 89, scope: !13428)
!13443 = !DILocation(line: 503, column: 25, scope: !13428)
!13444 = !DILocation(line: 503, column: 33, scope: !13428)
!13445 = !DILocation(line: 504, column: 54, scope: !13428)
!13446 = !DILocation(line: 504, column: 128, scope: !13428)
!13447 = !DILocation(line: 504, column: 25, scope: !13428)
!13448 = !DILocation(line: 504, column: 33, scope: !13428)
!13449 = !DILocation(line: 505, column: 52, scope: !13428)
!13450 = !DILocation(line: 505, column: 89, scope: !13428)
!13451 = !DILocation(line: 505, column: 25, scope: !13428)
!13452 = !DILocation(line: 505, column: 33, scope: !13428)
!13453 = !DILocation(line: 506, column: 52, scope: !13428)
!13454 = !DILocation(line: 506, column: 89, scope: !13428)
!13455 = !DILocation(line: 506, column: 25, scope: !13428)
!13456 = !DILocation(line: 506, column: 33, scope: !13428)
!13457 = !DILocation(line: 508, column: 52, scope: !13428)
!13458 = !DILocation(line: 508, column: 63, scope: !13428)
!13459 = !DILocation(line: 508, column: 25, scope: !13428)
!13460 = !DILocation(line: 508, column: 33, scope: !13428)
!13461 = !DILocation(line: 509, column: 52, scope: !13428)
!13462 = !DILocation(line: 509, column: 89, scope: !13428)
!13463 = !DILocation(line: 509, column: 25, scope: !13428)
!13464 = !DILocation(line: 509, column: 33, scope: !13428)
!13465 = !DILocation(line: 510, column: 54, scope: !13428)
!13466 = !DILocation(line: 510, column: 128, scope: !13428)
!13467 = !DILocation(line: 510, column: 25, scope: !13428)
!13468 = !DILocation(line: 510, column: 33, scope: !13428)
!13469 = !DILocation(line: 511, column: 52, scope: !13428)
!13470 = !DILocation(line: 511, column: 89, scope: !13428)
!13471 = !DILocation(line: 511, column: 25, scope: !13428)
!13472 = !DILocation(line: 511, column: 33, scope: !13428)
!13473 = !DILocation(line: 513, column: 48, scope: !13428)
!13474 = !DILocation(line: 513, column: 56, scope: !13428)
!13475 = !DILocation(line: 513, column: 18, scope: !13428)
!13476 = !DILocation(line: 513, column: 29, scope: !13428)
!13477 = !DILocation(line: 514, column: 48, scope: !13428)
!13478 = !DILocation(line: 514, column: 82, scope: !13428)
!13479 = !DILocation(line: 514, column: 18, scope: !13428)
!13480 = !DILocation(line: 514, column: 29, scope: !13428)
!13481 = !DILocation(line: 517, column: 39, scope: !13428)
!13482 = !DILocation(line: 517, column: 18, scope: !13428)
!13483 = !DILocation(line: 517, column: 37, scope: !13428)
!13484 = !DILocation(line: 520, column: 39, scope: !13428)
!13485 = !DILocation(line: 520, column: 18, scope: !13428)
!13486 = !DILocation(line: 520, column: 37, scope: !13428)
!13487 = !DILocation(line: 523, column: 42, scope: !13428)
!13488 = !DILocation(line: 523, column: 18, scope: !13428)
!13489 = !DILocation(line: 523, column: 40, scope: !13428)
!13490 = !DILocation(line: 526, column: 42, scope: !13428)
!13491 = !DILocation(line: 526, column: 18, scope: !13428)
!13492 = !DILocation(line: 526, column: 40, scope: !13428)
!13493 = !DILocation(line: 529, column: 19, scope: !13428)
!13494 = !DILocation(line: 529, column: 24, scope: !13428)
!13495 = !DILocation(line: 530, column: 67, scope: !13428)
!13496 = !DILocation(line: 530, column: 72, scope: !13428)
!13497 = !DILocation(line: 530, column: 59, scope: !13428)
!13498 = !DILocation(line: 530, column: 18, scope: !13428)
!13499 = !DILocation(line: 530, column: 36, scope: !13428)
!13500 = !DILocation(line: 533, column: 38, scope: !13428)
!13501 = !DILocation(line: 533, column: 18, scope: !13428)
!13502 = !DILocation(line: 533, column: 36, scope: !13428)
!13503 = !DILocation(line: 536, column: 42, scope: !13428)
!13504 = !DILocation(line: 536, column: 18, scope: !13428)
!13505 = !DILocation(line: 536, column: 40, scope: !13428)
!13506 = !DILocation(line: 539, column: 40, scope: !13428)
!13507 = !DILocation(line: 539, column: 18, scope: !13428)
!13508 = !DILocation(line: 539, column: 38, scope: !13428)
!13509 = !DILocation(line: 542, column: 39, scope: !13428)
!13510 = !DILocation(line: 542, column: 18, scope: !13428)
!13511 = !DILocation(line: 542, column: 37, scope: !13428)
!13512 = !DILocation(line: 545, column: 40, scope: !13428)
!13513 = !DILocation(line: 545, column: 18, scope: !13428)
!13514 = !DILocation(line: 545, column: 38, scope: !13428)
!13515 = !DILocation(line: 548, column: 13, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13428, file: !13052, line: 548, column: 7)
!13517 = !DILocation(line: 548, column: 7, scope: !13428)
!13518 = !DILocation(line: 550, column: 20, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13516, file: !13052, line: 549, column: 3)
!13520 = !DILocation(line: 550, column: 37, scope: !13519)
!13521 = !DILocation(line: 556, column: 1, scope: !13428)
!13522 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !13052, file: !13052, line: 569, type: !9214, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13523)
!13523 = !{!13524, !13525, !13526, !13527, !13528, !13529, !13530}
!13524 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !13522, file: !13052, line: 569, type: !111)
!13525 = !DILocalVariable(name: "tmpreg1", scope: !13522, file: !13052, line: 571, type: !111)
!13526 = !DILocalVariable(name: "frequency", scope: !13522, file: !13052, line: 573, type: !111)
!13527 = !DILocalVariable(name: "vcoinput", scope: !13522, file: !13052, line: 575, type: !111)
!13528 = !DILocalVariable(name: "saiclocksource", scope: !13522, file: !13052, line: 577, type: !111)
!13529 = !DILocalVariable(name: "srcclk", scope: !13522, file: !13052, line: 578, type: !111)
!13530 = !DILocalVariable(name: "vcooutput", scope: !13522, file: !13052, line: 580, type: !111)
!13531 = !DILocation(line: 0, scope: !13522)
!13532 = !DILocation(line: 581, column: 3, scope: !13522)
!13533 = !DILocation(line: 586, column: 29, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13535, file: !13052, line: 585, column: 5)
!13535 = distinct !DILexicalBlock(scope: !13522, file: !13052, line: 582, column: 3)
!13536 = !DILocation(line: 588, column: 7, scope: !13534)
!13537 = !DILocation(line: 594, column: 20, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !13052, line: 594, column: 14)
!13539 = distinct !DILexicalBlock(scope: !13540, file: !13052, line: 591, column: 9)
!13540 = distinct !DILexicalBlock(scope: !13534, file: !13052, line: 589, column: 7)
!13541 = !DILocation(line: 0, scope: !13538)
!13542 = !DILocation(line: 606, column: 27, scope: !13539)
!13543 = !DILocation(line: 606, column: 64, scope: !13539)
!13544 = !DILocation(line: 607, column: 42, scope: !13539)
!13545 = !DILocation(line: 607, column: 79, scope: !13539)
!13546 = !DILocation(line: 607, column: 33, scope: !13539)
!13547 = !DILocation(line: 607, column: 86, scope: !13539)
!13548 = !DILocation(line: 610, column: 29, scope: !13539)
!13549 = !DILocation(line: 610, column: 63, scope: !13539)
!13550 = !DILocation(line: 610, column: 70, scope: !13539)
!13551 = !DILocation(line: 611, column: 32, scope: !13539)
!13552 = !DILocation(line: 612, column: 11, scope: !13539)
!13553 = !DILocation(line: 619, column: 20, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !13052, line: 619, column: 14)
!13555 = distinct !DILexicalBlock(scope: !13540, file: !13052, line: 616, column: 9)
!13556 = !DILocation(line: 0, scope: !13554)
!13557 = !DILocation(line: 632, column: 27, scope: !13555)
!13558 = !DILocation(line: 632, column: 64, scope: !13555)
!13559 = !DILocation(line: 633, column: 42, scope: !13555)
!13560 = !DILocation(line: 633, column: 79, scope: !13555)
!13561 = !DILocation(line: 633, column: 33, scope: !13555)
!13562 = !DILocation(line: 633, column: 86, scope: !13555)
!13563 = !DILocation(line: 636, column: 28, scope: !13555)
!13564 = !DILocation(line: 636, column: 36, scope: !13555)
!13565 = !DILocation(line: 636, column: 62, scope: !13555)
!13566 = !DILocation(line: 637, column: 32, scope: !13555)
!13567 = !DILocation(line: 638, column: 11, scope: !13555)
!13568 = !DILocation(line: 645, column: 20, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !13052, line: 645, column: 14)
!13570 = distinct !DILexicalBlock(scope: !13540, file: !13052, line: 642, column: 9)
!13571 = !DILocation(line: 0, scope: !13569)
!13572 = !DILocation(line: 658, column: 27, scope: !13570)
!13573 = !DILocation(line: 658, column: 55, scope: !13570)
!13574 = !DILocation(line: 659, column: 42, scope: !13570)
!13575 = !DILocation(line: 659, column: 70, scope: !13570)
!13576 = !DILocation(line: 659, column: 33, scope: !13570)
!13577 = !DILocation(line: 659, column: 77, scope: !13570)
!13578 = !DILocation(line: 660, column: 11, scope: !13570)
!13579 = !DILocation(line: 665, column: 11, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13540, file: !13052, line: 663, column: 9)
!13581 = !DILocation(line: 669, column: 20, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !13052, line: 669, column: 14)
!13583 = distinct !DILexicalBlock(scope: !13540, file: !13052, line: 668, column: 9)
!13584 = !DILocation(line: 691, column: 16, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13535, file: !13052, line: 689, column: 5)
!13586 = !DILocation(line: 692, column: 7, scope: !13585)
!13587 = !DILocation(line: 706, column: 20, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !13052, line: 706, column: 14)
!13589 = distinct !DILexicalBlock(scope: !13590, file: !13052, line: 703, column: 9)
!13590 = distinct !DILexicalBlock(scope: !13585, file: !13052, line: 693, column: 7)
!13591 = !DILocation(line: 0, scope: !13588)
!13592 = !DILocation(line: 718, column: 53, scope: !13589)
!13593 = !DILocation(line: 718, column: 90, scope: !13589)
!13594 = !DILocation(line: 718, column: 43, scope: !13589)
!13595 = !DILocation(line: 720, column: 53, scope: !13589)
!13596 = !DILocation(line: 720, column: 90, scope: !13589)
!13597 = !DILocation(line: 720, column: 44, scope: !13589)
!13598 = !DILocation(line: 721, column: 11, scope: !13589)
!13599 = !DILocation(line: 728, column: 20, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !13052, line: 728, column: 14)
!13601 = distinct !DILexicalBlock(scope: !13590, file: !13052, line: 725, column: 9)
!13602 = !DILocation(line: 0, scope: !13600)
!13603 = !DILocation(line: 740, column: 53, scope: !13601)
!13604 = !DILocation(line: 740, column: 81, scope: !13601)
!13605 = !DILocation(line: 740, column: 43, scope: !13601)
!13606 = !DILocation(line: 742, column: 53, scope: !13601)
!13607 = !DILocation(line: 742, column: 81, scope: !13601)
!13608 = !DILocation(line: 742, column: 44, scope: !13601)
!13609 = !DILocation(line: 743, column: 11, scope: !13601)
!13610 = !DILocation(line: 748, column: 20, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !13052, line: 748, column: 14)
!13612 = distinct !DILexicalBlock(scope: !13590, file: !13052, line: 747, column: 9)
!13613 = !DILocation(line: 770, column: 16, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13535, file: !13052, line: 768, column: 5)
!13615 = !DILocation(line: 771, column: 7, scope: !13614)
!13616 = !DILocation(line: 785, column: 20, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13618, file: !13052, line: 785, column: 14)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !13052, line: 782, column: 9)
!13619 = distinct !DILexicalBlock(scope: !13614, file: !13052, line: 772, column: 7)
!13620 = !DILocation(line: 0, scope: !13617)
!13621 = !DILocation(line: 797, column: 53, scope: !13618)
!13622 = !DILocation(line: 797, column: 90, scope: !13618)
!13623 = !DILocation(line: 797, column: 43, scope: !13618)
!13624 = !DILocation(line: 799, column: 53, scope: !13618)
!13625 = !DILocation(line: 799, column: 90, scope: !13618)
!13626 = !DILocation(line: 799, column: 44, scope: !13618)
!13627 = !DILocation(line: 800, column: 11, scope: !13618)
!13628 = !DILocation(line: 807, column: 20, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13630, file: !13052, line: 807, column: 14)
!13630 = distinct !DILexicalBlock(scope: !13619, file: !13052, line: 804, column: 9)
!13631 = !DILocation(line: 0, scope: !13629)
!13632 = !DILocation(line: 819, column: 53, scope: !13630)
!13633 = !DILocation(line: 819, column: 81, scope: !13630)
!13634 = !DILocation(line: 819, column: 43, scope: !13630)
!13635 = !DILocation(line: 821, column: 53, scope: !13630)
!13636 = !DILocation(line: 821, column: 81, scope: !13630)
!13637 = !DILocation(line: 821, column: 44, scope: !13630)
!13638 = !DILocation(line: 822, column: 11, scope: !13630)
!13639 = !DILocation(line: 827, column: 20, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13641, file: !13052, line: 827, column: 14)
!13641 = distinct !DILexicalBlock(scope: !13619, file: !13052, line: 826, column: 9)
!13642 = !DILocation(line: 847, column: 3, scope: !13522)
!13643 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !13052, file: !13052, line: 2766, type: !13644, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13646)
!13644 = !DISubroutineType(types: !13645)
!13645 = !{null, !166}
!13646 = !{!13647}
!13647 = !DILocalVariable(name: "Mode", arg: 1, scope: !13643, file: !13052, line: 2766, type: !166)
!13648 = !DILocation(line: 0, scope: !13643)
!13649 = !DILocation(line: 2770, column: 11, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13643, file: !13052, line: 2770, column: 6)
!13651 = !DILocation(line: 0, scope: !13650)
!13652 = !DILocation(line: 2770, column: 6, scope: !13643)
!13653 = !DILocation(line: 2778, column: 1, scope: !13643)
!13654 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !13052, file: !13052, line: 2803, type: !13655, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13658)
!13655 = !DISubroutineType(types: !13656)
!13656 = !{!13055, !13657}
!13657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13063, size: 32)
!13658 = !{!13659, !13660}
!13659 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !13654, file: !13052, line: 2803, type: !13657)
!13660 = !DILocalVariable(name: "tickstart", scope: !13654, file: !13052, line: 2805, type: !111)
!13661 = !DILocation(line: 0, scope: !13654)
!13662 = !DILocation(line: 2821, column: 3, scope: !13654)
!13663 = !DILocation(line: 2824, column: 15, scope: !13654)
!13664 = !DILocation(line: 2825, column: 3, scope: !13654)
!13665 = !DILocation(line: 2825, column: 9, scope: !13654)
!13666 = !DILocation(line: 2827, column: 9, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !13052, line: 2827, column: 8)
!13668 = distinct !DILexicalBlock(scope: !13654, file: !13052, line: 2826, column: 3)
!13669 = !DILocation(line: 2827, column: 23, scope: !13667)
!13670 = !DILocation(line: 2827, column: 37, scope: !13667)
!13671 = !DILocation(line: 2827, column: 8, scope: !13668)
!13672 = distinct !{!13672, !13664, !13673}
!13673 = !DILocation(line: 2832, column: 3, scope: !13654)
!13674 = !DILocation(line: 2840, column: 3, scope: !13654)
!13675 = !DILocation(line: 2866, column: 3, scope: !13654)
!13676 = !DILocation(line: 2869, column: 15, scope: !13654)
!13677 = !DILocation(line: 2870, column: 3, scope: !13654)
!13678 = !DILocation(line: 2870, column: 9, scope: !13654)
!13679 = !DILocation(line: 2870, column: 48, scope: !13654)
!13680 = !DILocation(line: 2872, column: 9, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13682, file: !13052, line: 2872, column: 8)
!13682 = distinct !DILexicalBlock(scope: !13654, file: !13052, line: 2871, column: 3)
!13683 = !DILocation(line: 2872, column: 23, scope: !13681)
!13684 = !DILocation(line: 2872, column: 37, scope: !13681)
!13685 = !DILocation(line: 2872, column: 8, scope: !13682)
!13686 = distinct !{!13686, !13677, !13687}
!13687 = !DILocation(line: 2877, column: 3, scope: !13654)
!13688 = !DILocation(line: 2880, column: 1, scope: !13654)
!13689 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !13052, file: !13052, line: 2886, type: !13690, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13692)
!13690 = !DISubroutineType(types: !13691)
!13691 = !{!13055}
!13692 = !{!13693}
!13693 = !DILocalVariable(name: "tickstart", scope: !13689, file: !13052, line: 2888, type: !111)
!13694 = !DILocation(line: 2891, column: 3, scope: !13689)
!13695 = !DILocation(line: 2894, column: 15, scope: !13689)
!13696 = !DILocation(line: 0, scope: !13689)
!13697 = !DILocation(line: 2895, column: 3, scope: !13689)
!13698 = !DILocation(line: 2895, column: 9, scope: !13689)
!13699 = !DILocation(line: 2895, column: 45, scope: !13689)
!13700 = !DILocation(line: 2897, column: 9, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13702, file: !13052, line: 2897, column: 8)
!13702 = distinct !DILexicalBlock(scope: !13689, file: !13052, line: 2896, column: 3)
!13703 = !DILocation(line: 2897, column: 23, scope: !13701)
!13704 = !DILocation(line: 2897, column: 36, scope: !13701)
!13705 = !DILocation(line: 2897, column: 8, scope: !13702)
!13706 = distinct !{!13706, !13697, !13707}
!13707 = !DILocation(line: 2902, column: 3, scope: !13689)
!13708 = !DILocation(line: 2905, column: 1, scope: !13689)
!13709 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !13052, file: !13052, line: 2916, type: !13710, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13713)
!13710 = !DISubroutineType(types: !13711)
!13711 = !{!13055, !13712}
!13712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13072, size: 32)
!13713 = !{!13714, !13715}
!13714 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !13709, file: !13052, line: 2916, type: !13712)
!13715 = !DILocalVariable(name: "tickstart", scope: !13709, file: !13052, line: 2918, type: !111)
!13716 = !DILocation(line: 0, scope: !13709)
!13717 = !DILocation(line: 2934, column: 3, scope: !13709)
!13718 = !DILocation(line: 2937, column: 15, scope: !13709)
!13719 = !DILocation(line: 2938, column: 3, scope: !13709)
!13720 = !DILocation(line: 2938, column: 9, scope: !13709)
!13721 = !DILocation(line: 2940, column: 9, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13723, file: !13052, line: 2940, column: 8)
!13723 = distinct !DILexicalBlock(scope: !13709, file: !13052, line: 2939, column: 3)
!13724 = !DILocation(line: 2940, column: 23, scope: !13722)
!13725 = !DILocation(line: 2940, column: 37, scope: !13722)
!13726 = !DILocation(line: 2940, column: 8, scope: !13723)
!13727 = distinct !{!13727, !13719, !13728}
!13728 = !DILocation(line: 2945, column: 3, scope: !13709)
!13729 = !DILocation(line: 2953, column: 3, scope: !13709)
!13730 = !DILocation(line: 2970, column: 3, scope: !13709)
!13731 = !DILocation(line: 2973, column: 15, scope: !13709)
!13732 = !DILocation(line: 2974, column: 3, scope: !13709)
!13733 = !DILocation(line: 2974, column: 9, scope: !13709)
!13734 = !DILocation(line: 2974, column: 37, scope: !13709)
!13735 = !DILocation(line: 2976, column: 9, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13737, file: !13052, line: 2976, column: 8)
!13737 = distinct !DILexicalBlock(scope: !13709, file: !13052, line: 2975, column: 3)
!13738 = !DILocation(line: 2976, column: 23, scope: !13736)
!13739 = !DILocation(line: 2976, column: 37, scope: !13736)
!13740 = !DILocation(line: 2976, column: 8, scope: !13737)
!13741 = distinct !{!13741, !13732, !13742}
!13742 = !DILocation(line: 2981, column: 3, scope: !13709)
!13743 = !DILocation(line: 2984, column: 1, scope: !13709)
!13744 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !13052, file: !13052, line: 2990, type: !13690, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13745)
!13745 = !{!13746}
!13746 = !DILocalVariable(name: "tickstart", scope: !13744, file: !13052, line: 2992, type: !111)
!13747 = !DILocation(line: 2995, column: 3, scope: !13744)
!13748 = !DILocation(line: 2998, column: 15, scope: !13744)
!13749 = !DILocation(line: 0, scope: !13744)
!13750 = !DILocation(line: 2999, column: 3, scope: !13744)
!13751 = !DILocation(line: 2999, column: 9, scope: !13744)
!13752 = !DILocation(line: 3001, column: 9, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13754, file: !13052, line: 3001, column: 8)
!13754 = distinct !DILexicalBlock(scope: !13744, file: !13052, line: 3000, column: 3)
!13755 = !DILocation(line: 3001, column: 23, scope: !13753)
!13756 = !DILocation(line: 3001, column: 36, scope: !13753)
!13757 = !DILocation(line: 3001, column: 8, scope: !13754)
!13758 = distinct !{!13758, !13750, !13759}
!13759 = !DILocation(line: 3006, column: 3, scope: !13744)
!13760 = !DILocation(line: 3009, column: 1, scope: !13744)
!13761 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13052, file: !13052, line: 3051, type: !8017, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13762)
!13762 = !{!13763, !13764, !13765, !13766, !13767}
!13763 = !DILocalVariable(name: "pllm", scope: !13761, file: !13052, line: 3053, type: !111)
!13764 = !DILocalVariable(name: "pllvco", scope: !13761, file: !13052, line: 3054, type: !111)
!13765 = !DILocalVariable(name: "pllp", scope: !13761, file: !13052, line: 3055, type: !111)
!13766 = !DILocalVariable(name: "pllr", scope: !13761, file: !13052, line: 3056, type: !111)
!13767 = !DILocalVariable(name: "sysclockfreq", scope: !13761, file: !13052, line: 3057, type: !111)
!13768 = !DILocation(line: 0, scope: !13761)
!13769 = !DILocation(line: 3060, column: 16, scope: !13761)
!13770 = !DILocation(line: 3060, column: 3, scope: !13761)
!13771 = !DILocation(line: 3076, column: 19, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13773, file: !13052, line: 3073, column: 5)
!13773 = distinct !DILexicalBlock(scope: !13761, file: !13052, line: 3061, column: 3)
!13774 = !DILocation(line: 3076, column: 27, scope: !13772)
!13775 = !DILocation(line: 3077, column: 10, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13772, file: !13052, line: 3077, column: 10)
!13777 = !DILocation(line: 0, scope: !13776)
!13778 = !DILocation(line: 3087, column: 23, scope: !13772)
!13779 = !DILocation(line: 3087, column: 82, scope: !13772)
!13780 = !DILocation(line: 3089, column: 28, scope: !13772)
!13781 = !DILocation(line: 3090, column: 7, scope: !13772)
!13782 = !DILocation(line: 3096, column: 19, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13773, file: !13052, line: 3093, column: 5)
!13784 = !DILocation(line: 3096, column: 27, scope: !13783)
!13785 = !DILocation(line: 3097, column: 10, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13783, file: !13052, line: 3097, column: 10)
!13787 = !DILocation(line: 0, scope: !13786)
!13788 = !DILocation(line: 3107, column: 21, scope: !13783)
!13789 = !DILocation(line: 3107, column: 49, scope: !13783)
!13790 = !DILocation(line: 3109, column: 28, scope: !13783)
!13791 = !DILocation(line: 3110, column: 7, scope: !13783)
!13792 = !DILocation(line: 0, scope: !13773)
!13793 = !DILocation(line: 3118, column: 3, scope: !13761)
!13794 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13052, file: !13052, line: 3143, type: !13690, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13795)
!13795 = !{!13796}
!13796 = !DILocalVariable(name: "tickstart", scope: !13794, file: !13052, line: 3145, type: !111)
!13797 = !DILocation(line: 3148, column: 15, scope: !13794)
!13798 = !DILocation(line: 0, scope: !13794)
!13799 = !DILocation(line: 3151, column: 3, scope: !13794)
!13800 = !DILocation(line: 3154, column: 3, scope: !13794)
!13801 = !DILocation(line: 3154, column: 10, scope: !13794)
!13802 = !DILocation(line: 3154, column: 43, scope: !13794)
!13803 = !DILocation(line: 3156, column: 10, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13805, file: !13052, line: 3156, column: 9)
!13805 = distinct !DILexicalBlock(scope: !13794, file: !13052, line: 3155, column: 3)
!13806 = !DILocation(line: 3156, column: 24, scope: !13804)
!13807 = !DILocation(line: 3156, column: 37, scope: !13804)
!13808 = !DILocation(line: 3156, column: 9, scope: !13805)
!13809 = distinct !{!13809, !13800, !13810}
!13810 = !DILocation(line: 3160, column: 3, scope: !13794)
!13811 = !DILocation(line: 3163, column: 3, scope: !13794)
!13812 = !DILocation(line: 3166, column: 15, scope: !13794)
!13813 = !DILocation(line: 3169, column: 3, scope: !13794)
!13814 = !DILocation(line: 3172, column: 3, scope: !13794)
!13815 = !DILocation(line: 3172, column: 10, scope: !13794)
!13816 = !DILocation(line: 3172, column: 44, scope: !13794)
!13817 = !DILocation(line: 3174, column: 24, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !13052, line: 3174, column: 9)
!13819 = distinct !DILexicalBlock(scope: !13794, file: !13052, line: 3173, column: 3)
!13820 = !DILocation(line: 3174, column: 37, scope: !13818)
!13821 = !DILocation(line: 3174, column: 9, scope: !13819)
!13822 = distinct !{!13822, !13814, !13823}
!13823 = !DILocation(line: 3178, column: 3, scope: !13794)
!13824 = !DILocation(line: 3184, column: 3, scope: !13794)
!13825 = !DILocation(line: 3187, column: 3, scope: !13794)
!13826 = !DILocation(line: 3187, column: 10, scope: !13794)
!13827 = !DILocation(line: 3187, column: 43, scope: !13794)
!13828 = !DILocation(line: 3189, column: 24, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13830, file: !13052, line: 3189, column: 9)
!13830 = distinct !DILexicalBlock(scope: !13794, file: !13052, line: 3188, column: 3)
!13831 = !DILocation(line: 3189, column: 37, scope: !13829)
!13832 = !DILocation(line: 3189, column: 9, scope: !13830)
!13833 = distinct !{!13833, !13825, !13834}
!13834 = !DILocation(line: 3193, column: 3, scope: !13794)
!13835 = !DILocation(line: 3199, column: 3, scope: !13794)
!13836 = !DILocation(line: 3202, column: 3, scope: !13794)
!13837 = !DILocation(line: 3202, column: 10, scope: !13794)
!13838 = !DILocation(line: 3202, column: 43, scope: !13794)
!13839 = !DILocation(line: 3204, column: 24, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !13052, line: 3204, column: 9)
!13841 = distinct !DILexicalBlock(scope: !13794, file: !13052, line: 3203, column: 3)
!13842 = !DILocation(line: 3204, column: 37, scope: !13840)
!13843 = !DILocation(line: 3204, column: 9, scope: !13841)
!13844 = distinct !{!13844, !13836, !13845}
!13845 = !DILocation(line: 3208, column: 3, scope: !13794)
!13846 = !DILocation(line: 3215, column: 3, scope: !13794)
!13847 = !DILocation(line: 3218, column: 3, scope: !13794)
!13848 = !DILocation(line: 3218, column: 10, scope: !13794)
!13849 = !DILocation(line: 3218, column: 46, scope: !13794)
!13850 = !DILocation(line: 3220, column: 24, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !13052, line: 3220, column: 9)
!13852 = distinct !DILexicalBlock(scope: !13794, file: !13052, line: 3219, column: 3)
!13853 = !DILocation(line: 3220, column: 37, scope: !13851)
!13854 = !DILocation(line: 3220, column: 9, scope: !13852)
!13855 = distinct !{!13855, !13847, !13856}
!13856 = !DILocation(line: 3224, column: 3, scope: !13794)
!13857 = !DILocation(line: 3232, column: 3, scope: !13794)
!13858 = !DILocation(line: 3235, column: 3, scope: !13794)
!13859 = !DILocation(line: 3235, column: 10, scope: !13794)
!13860 = !DILocation(line: 3235, column: 46, scope: !13794)
!13861 = !DILocation(line: 3237, column: 10, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13863, file: !13052, line: 3237, column: 9)
!13863 = distinct !DILexicalBlock(scope: !13794, file: !13052, line: 3236, column: 3)
!13864 = !DILocation(line: 3237, column: 24, scope: !13862)
!13865 = !DILocation(line: 3237, column: 37, scope: !13862)
!13866 = !DILocation(line: 3237, column: 9, scope: !13863)
!13867 = distinct !{!13867, !13858, !13868}
!13868 = !DILocation(line: 3241, column: 3, scope: !13794)
!13869 = !DILocation(line: 3247, column: 16, scope: !13794)
!13870 = !DILocation(line: 3257, column: 19, scope: !13794)
!13871 = !DILocation(line: 3270, column: 19, scope: !13794)
!13872 = !DILocation(line: 3274, column: 3, scope: !13794)
!13873 = !DILocation(line: 3277, column: 3, scope: !13794)
!13874 = !DILocation(line: 3281, column: 3, scope: !13794)
!13875 = !DILocation(line: 3285, column: 3, scope: !13794)
!13876 = !DILocation(line: 3288, column: 3, scope: !13794)
!13877 = !DILocation(line: 3292, column: 3, scope: !13794)
!13878 = !DILocation(line: 3296, column: 3, scope: !13794)
!13879 = !DILocation(line: 3299, column: 3, scope: !13794)
!13880 = !DILocation(line: 3302, column: 19, scope: !13794)
!13881 = !DILocation(line: 3305, column: 19, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13794, file: !13052, line: 3305, column: 6)
!13883 = !DILocation(line: 3305, column: 6, scope: !13882)
!13884 = !DILocation(line: 3305, column: 31, scope: !13882)
!13885 = !DILocation(line: 0, scope: !13882)
!13886 = !DILocation(line: 3313, column: 1, scope: !13794)
!13887 = !DISubprogram(name: "HAL_InitTick", scope: !13427, file: !13427, line: 223, type: !13888, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!13888 = !DISubroutineType(types: !13889)
!13889 = !{!13055, !111}
!13890 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13052, file: !13052, line: 3333, type: !13891, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !13915)
!13891 = !DISubroutineType(types: !13892)
!13892 = !{!13055, !13893}
!13893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13894, size: 32)
!13894 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13895, line: 70, baseType: !13896)
!13895 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13895, line: 49, size: 416, elements: !13897)
!13897 = !{!13898, !13899, !13900, !13901, !13902, !13903, !13904}
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13896, file: !13895, line: 51, baseType: !111, size: 32)
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13896, file: !13895, line: 54, baseType: !111, size: 32, offset: 32)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13896, file: !13895, line: 57, baseType: !111, size: 32, offset: 64)
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13896, file: !13895, line: 60, baseType: !111, size: 32, offset: 96)
!13902 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13896, file: !13895, line: 63, baseType: !111, size: 32, offset: 128)
!13903 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13896, file: !13895, line: 66, baseType: !111, size: 32, offset: 160)
!13904 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13896, file: !13895, line: 69, baseType: !13905, size: 224, offset: 192)
!13905 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13058, line: 73, baseType: !13906)
!13906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13058, line: 45, size: 224, elements: !13907)
!13907 = !{!13908, !13909, !13910, !13911, !13912, !13913, !13914}
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13906, file: !13058, line: 47, baseType: !111, size: 32)
!13909 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13906, file: !13058, line: 50, baseType: !111, size: 32, offset: 32)
!13910 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13906, file: !13058, line: 53, baseType: !111, size: 32, offset: 64)
!13911 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13906, file: !13058, line: 56, baseType: !111, size: 32, offset: 96)
!13912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13906, file: !13058, line: 60, baseType: !111, size: 32, offset: 128)
!13913 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13906, file: !13058, line: 63, baseType: !111, size: 32, offset: 160)
!13914 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13906, file: !13058, line: 68, baseType: !111, size: 32, offset: 192)
!13915 = !{!13916, !13917, !13918, !13919, !13923}
!13916 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13890, file: !13052, line: 3333, type: !13893)
!13917 = !DILocalVariable(name: "tickstart", scope: !13890, file: !13052, line: 3335, type: !111)
!13918 = !DILocalVariable(name: "pll_config", scope: !13890, file: !13052, line: 3335, type: !111)
!13919 = !DILocalVariable(name: "pwrclkchanged", scope: !13920, file: !13052, line: 3517, type: !13922)
!13920 = distinct !DILexicalBlock(scope: !13921, file: !13052, line: 3516, column: 3)
!13921 = distinct !DILexicalBlock(scope: !13890, file: !13052, line: 3515, column: 6)
!13922 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1313, line: 188, baseType: !3539)
!13923 = !DILocalVariable(name: "tmpreg", scope: !13924, file: !13052, line: 3526, type: !777)
!13924 = distinct !DILexicalBlock(scope: !13925, file: !13052, line: 3526, column: 7)
!13925 = distinct !DILexicalBlock(scope: !13926, file: !13052, line: 3525, column: 5)
!13926 = distinct !DILexicalBlock(scope: !13920, file: !13052, line: 3524, column: 8)
!13927 = !DILocation(line: 0, scope: !13890)
!13928 = !DILocation(line: 3338, column: 24, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13890, file: !13052, line: 3338, column: 6)
!13930 = !DILocation(line: 3338, column: 6, scope: !13890)
!13931 = !DILocation(line: 3346, column: 27, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13890, file: !13052, line: 3346, column: 6)
!13933 = !DILocation(line: 3346, column: 43, scope: !13932)
!13934 = !DILocation(line: 3346, column: 69, scope: !13932)
!13935 = !DILocation(line: 3346, column: 6, scope: !13890)
!13936 = !DILocation(line: 3352, column: 9, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !13052, line: 3352, column: 8)
!13938 = distinct !DILexicalBlock(scope: !13932, file: !13052, line: 3347, column: 3)
!13939 = !DILocation(line: 3352, column: 39, scope: !13937)
!13940 = !DILocation(line: 3352, column: 128, scope: !13937)
!13941 = !DILocation(line: 3353, column: 9, scope: !13937)
!13942 = !DILocation(line: 3353, column: 39, scope: !13937)
!13943 = !DILocation(line: 3353, column: 60, scope: !13937)
!13944 = !DILocation(line: 3353, column: 70, scope: !13937)
!13945 = !DILocation(line: 3353, column: 78, scope: !13937)
!13946 = !DILocation(line: 3353, column: 100, scope: !13937)
!13947 = !DILocation(line: 3353, column: 128, scope: !13937)
!13948 = !DILocation(line: 3354, column: 9, scope: !13937)
!13949 = !DILocation(line: 3354, column: 39, scope: !13937)
!13950 = !DILocation(line: 3354, column: 61, scope: !13937)
!13951 = !DILocation(line: 3354, column: 71, scope: !13937)
!13952 = !DILocation(line: 3354, column: 79, scope: !13937)
!13953 = !DILocation(line: 3354, column: 101, scope: !13937)
!13954 = !DILocation(line: 3352, column: 8, scope: !13938)
!13955 = !DILocation(line: 3360, column: 11, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13957, file: !13052, line: 3360, column: 10)
!13957 = distinct !DILexicalBlock(scope: !13937, file: !13052, line: 3359, column: 5)
!13958 = !DILocation(line: 3360, column: 57, scope: !13956)
!13959 = !DILocation(line: 3360, column: 80, scope: !13956)
!13960 = !DILocation(line: 3360, column: 89, scope: !13956)
!13961 = !DILocation(line: 3360, column: 10, scope: !13957)
!13962 = !DILocation(line: 3368, column: 7, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13964, file: !13052, line: 3368, column: 7)
!13964 = distinct !DILexicalBlock(scope: !13965, file: !13052, line: 3368, column: 7)
!13965 = distinct !DILexicalBlock(scope: !13937, file: !13052, line: 3366, column: 5)
!13966 = !DILocation(line: 3368, column: 7, scope: !13964)
!13967 = !DILocation(line: 3368, column: 7, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13963, file: !13052, line: 3368, column: 7)
!13969 = !DILocation(line: 3368, column: 7, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !13052, line: 3368, column: 7)
!13971 = distinct !DILexicalBlock(scope: !13963, file: !13052, line: 3368, column: 7)
!13972 = !DILocation(line: 3368, column: 7, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13971, file: !13052, line: 3368, column: 7)
!13974 = !DILocation(line: 0, scope: !13963)
!13975 = !DILocation(line: 3371, column: 30, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13965, file: !13052, line: 3371, column: 10)
!13977 = !DILocation(line: 3371, column: 40, scope: !13976)
!13978 = !DILocation(line: 0, scope: !13976)
!13979 = !DILocation(line: 3371, column: 10, scope: !13965)
!13980 = !DILocation(line: 3377, column: 15, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13976, file: !13052, line: 3372, column: 7)
!13982 = !DILocation(line: 3377, column: 51, scope: !13981)
!13983 = !DILocation(line: 3377, column: 9, scope: !13981)
!13984 = !DILocation(line: 3379, column: 15, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !13052, line: 3379, column: 14)
!13986 = distinct !DILexicalBlock(scope: !13981, file: !13052, line: 3378, column: 9)
!13987 = !DILocation(line: 3379, column: 29, scope: !13985)
!13988 = !DILocation(line: 3379, column: 43, scope: !13985)
!13989 = !DILocation(line: 3379, column: 14, scope: !13986)
!13990 = distinct !{!13990, !13983, !13991}
!13991 = !DILocation(line: 3383, column: 9, scope: !13981)
!13992 = !DILocation(line: 3391, column: 15, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13976, file: !13052, line: 3386, column: 7)
!13994 = !DILocation(line: 3391, column: 9, scope: !13993)
!13995 = !DILocation(line: 3393, column: 15, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13997, file: !13052, line: 3393, column: 14)
!13997 = distinct !DILexicalBlock(scope: !13993, file: !13052, line: 3392, column: 9)
!13998 = !DILocation(line: 3393, column: 29, scope: !13996)
!13999 = !DILocation(line: 3393, column: 43, scope: !13996)
!14000 = !DILocation(line: 3393, column: 14, scope: !13997)
!14001 = distinct !{!14001, !13994, !14002}
!14002 = !DILocation(line: 3397, column: 9, scope: !13993)
!14003 = !DILocation(line: 3402, column: 27, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !13890, file: !13052, line: 3402, column: 6)
!14005 = !DILocation(line: 3402, column: 43, scope: !14004)
!14006 = !DILocation(line: 3402, column: 69, scope: !14004)
!14007 = !DILocation(line: 3402, column: 6, scope: !13890)
!14008 = !DILocation(line: 3410, column: 9, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !13052, line: 3410, column: 8)
!14010 = distinct !DILexicalBlock(scope: !14004, file: !13052, line: 3403, column: 3)
!14011 = !DILocation(line: 3410, column: 39, scope: !14009)
!14012 = !DILocation(line: 3410, column: 128, scope: !14009)
!14013 = !DILocation(line: 3411, column: 9, scope: !14009)
!14014 = !DILocation(line: 3411, column: 39, scope: !14009)
!14015 = !DILocation(line: 3411, column: 60, scope: !14009)
!14016 = !DILocation(line: 3411, column: 70, scope: !14009)
!14017 = !DILocation(line: 3411, column: 78, scope: !14009)
!14018 = !DILocation(line: 3411, column: 100, scope: !14009)
!14019 = !DILocation(line: 3411, column: 128, scope: !14009)
!14020 = !DILocation(line: 3412, column: 9, scope: !14009)
!14021 = !DILocation(line: 3412, column: 39, scope: !14009)
!14022 = !DILocation(line: 3412, column: 61, scope: !14009)
!14023 = !DILocation(line: 3412, column: 71, scope: !14009)
!14024 = !DILocation(line: 3412, column: 79, scope: !14009)
!14025 = !DILocation(line: 3412, column: 101, scope: !14009)
!14026 = !DILocation(line: 3410, column: 8, scope: !14010)
!14027 = !DILocation(line: 3419, column: 11, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14029, file: !13052, line: 3419, column: 10)
!14029 = distinct !DILexicalBlock(scope: !14009, file: !13052, line: 3417, column: 5)
!14030 = !DILocation(line: 3419, column: 57, scope: !14028)
!14031 = !DILocation(line: 3419, column: 80, scope: !14028)
!14032 = !DILocation(line: 3419, column: 89, scope: !14028)
!14033 = !DILocation(line: 3419, column: 10, scope: !14029)
!14034 = !DILocation(line: 3433, column: 30, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14036, file: !13052, line: 3433, column: 10)
!14036 = distinct !DILexicalBlock(scope: !14009, file: !13052, line: 3431, column: 5)
!14037 = !DILocation(line: 3433, column: 39, scope: !14035)
!14038 = !DILocation(line: 3433, column: 10, scope: !14036)
!14039 = !DILocation(line: 3436, column: 9, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14035, file: !13052, line: 3434, column: 7)
!14041 = !DILocation(line: 3439, column: 21, scope: !14040)
!14042 = !DILocation(line: 3442, column: 9, scope: !14040)
!14043 = !DILocation(line: 3442, column: 15, scope: !14040)
!14044 = !DILocation(line: 3442, column: 51, scope: !14040)
!14045 = !DILocation(line: 3444, column: 15, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14047, file: !13052, line: 3444, column: 14)
!14047 = distinct !DILexicalBlock(scope: !14040, file: !13052, line: 3443, column: 9)
!14048 = !DILocation(line: 3444, column: 29, scope: !14046)
!14049 = !DILocation(line: 3444, column: 43, scope: !14046)
!14050 = !DILocation(line: 3444, column: 14, scope: !14047)
!14051 = distinct !{!14051, !14042, !14052}
!14052 = !DILocation(line: 3448, column: 9, scope: !14040)
!14053 = !DILocation(line: 3456, column: 9, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14035, file: !13052, line: 3454, column: 7)
!14055 = !DILocation(line: 3459, column: 21, scope: !14054)
!14056 = !DILocation(line: 3462, column: 9, scope: !14054)
!14057 = !DILocation(line: 3462, column: 15, scope: !14054)
!14058 = !DILocation(line: 3464, column: 15, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !13052, line: 3464, column: 14)
!14060 = distinct !DILexicalBlock(scope: !14054, file: !13052, line: 3463, column: 9)
!14061 = !DILocation(line: 3464, column: 29, scope: !14059)
!14062 = !DILocation(line: 3464, column: 43, scope: !14059)
!14063 = !DILocation(line: 3464, column: 14, scope: !14060)
!14064 = distinct !{!14064, !14056, !14065}
!14065 = !DILocation(line: 3468, column: 9, scope: !14054)
!14066 = !DILocation(line: 0, scope: !14009)
!14067 = !DILocation(line: 3473, column: 27, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !13890, file: !13052, line: 3473, column: 6)
!14069 = !DILocation(line: 3473, column: 43, scope: !14068)
!14070 = !DILocation(line: 3473, column: 69, scope: !14068)
!14071 = !DILocation(line: 3473, column: 6, scope: !13890)
!14072 = !DILocation(line: 3479, column: 28, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14074, file: !13052, line: 3479, column: 8)
!14074 = distinct !DILexicalBlock(scope: !14068, file: !13052, line: 3474, column: 3)
!14075 = !DILocation(line: 3479, column: 37, scope: !14073)
!14076 = !DILocation(line: 3479, column: 8, scope: !14074)
!14077 = !DILocation(line: 3482, column: 7, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14073, file: !13052, line: 3480, column: 5)
!14079 = !DILocation(line: 3485, column: 19, scope: !14078)
!14080 = !DILocation(line: 3488, column: 7, scope: !14078)
!14081 = !DILocation(line: 3488, column: 13, scope: !14078)
!14082 = !DILocation(line: 3488, column: 49, scope: !14078)
!14083 = !DILocation(line: 3490, column: 13, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14085, file: !13052, line: 3490, column: 12)
!14085 = distinct !DILexicalBlock(scope: !14078, file: !13052, line: 3489, column: 7)
!14086 = !DILocation(line: 3490, column: 27, scope: !14084)
!14087 = !DILocation(line: 3490, column: 41, scope: !14084)
!14088 = !DILocation(line: 3490, column: 12, scope: !14085)
!14089 = distinct !{!14089, !14080, !14090}
!14090 = !DILocation(line: 3494, column: 7, scope: !14078)
!14091 = !DILocation(line: 3499, column: 7, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14073, file: !13052, line: 3497, column: 5)
!14093 = !DILocation(line: 3502, column: 19, scope: !14092)
!14094 = !DILocation(line: 3505, column: 7, scope: !14092)
!14095 = !DILocation(line: 3505, column: 13, scope: !14092)
!14096 = !DILocation(line: 3507, column: 13, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14098, file: !13052, line: 3507, column: 12)
!14098 = distinct !DILexicalBlock(scope: !14092, file: !13052, line: 3506, column: 7)
!14099 = !DILocation(line: 3507, column: 27, scope: !14097)
!14100 = !DILocation(line: 3507, column: 41, scope: !14097)
!14101 = !DILocation(line: 3507, column: 12, scope: !14098)
!14102 = distinct !{!14102, !14094, !14103}
!14103 = !DILocation(line: 3511, column: 7, scope: !14092)
!14104 = !DILocation(line: 3515, column: 27, scope: !13921)
!14105 = !DILocation(line: 3515, column: 43, scope: !13921)
!14106 = !DILocation(line: 3515, column: 69, scope: !13921)
!14107 = !DILocation(line: 3515, column: 6, scope: !13890)
!14108 = !DILocation(line: 0, scope: !13920)
!14109 = !DILocation(line: 3524, column: 8, scope: !13926)
!14110 = !DILocation(line: 3524, column: 8, scope: !13920)
!14111 = !DILocation(line: 3526, column: 7, scope: !13924)
!14112 = !DILocation(line: 3526, column: 7, scope: !13925)
!14113 = !DILocation(line: 3528, column: 5, scope: !13925)
!14114 = !DILocation(line: 3530, column: 8, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !13920, file: !13052, line: 3530, column: 8)
!14116 = !DILocation(line: 3530, column: 8, scope: !13920)
!14117 = !DILocation(line: 3533, column: 7, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14115, file: !13052, line: 3531, column: 5)
!14119 = !DILocation(line: 3536, column: 19, scope: !14118)
!14120 = !DILocation(line: 3538, column: 7, scope: !14118)
!14121 = !DILocation(line: 3538, column: 13, scope: !14118)
!14122 = !DILocation(line: 3540, column: 13, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14124, file: !13052, line: 3540, column: 12)
!14124 = distinct !DILexicalBlock(scope: !14118, file: !13052, line: 3539, column: 7)
!14125 = !DILocation(line: 3540, column: 27, scope: !14123)
!14126 = !DILocation(line: 3540, column: 40, scope: !14123)
!14127 = !DILocation(line: 3540, column: 12, scope: !14124)
!14128 = distinct !{!14128, !14120, !14129}
!14129 = !DILocation(line: 3544, column: 7, scope: !14118)
!14130 = !DILocation(line: 3548, column: 5, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14132, file: !13052, line: 3548, column: 5)
!14132 = distinct !DILexicalBlock(scope: !13920, file: !13052, line: 3548, column: 5)
!14133 = !DILocation(line: 3548, column: 5, scope: !14132)
!14134 = !DILocation(line: 3548, column: 5, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14131, file: !13052, line: 3548, column: 5)
!14136 = !DILocation(line: 3548, column: 5, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14138, file: !13052, line: 3548, column: 5)
!14138 = distinct !DILexicalBlock(scope: !14131, file: !13052, line: 3548, column: 5)
!14139 = !DILocation(line: 3548, column: 5, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14138, file: !13052, line: 3548, column: 5)
!14141 = !DILocation(line: 0, scope: !14131)
!14142 = !DILocation(line: 3550, column: 28, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !13920, file: !13052, line: 3550, column: 8)
!14144 = !DILocation(line: 3550, column: 38, scope: !14143)
!14145 = !DILocation(line: 0, scope: !14143)
!14146 = !DILocation(line: 3550, column: 8, scope: !13920)
!14147 = !DILocation(line: 3556, column: 13, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14143, file: !13052, line: 3551, column: 5)
!14149 = !DILocation(line: 3556, column: 49, scope: !14148)
!14150 = !DILocation(line: 3556, column: 7, scope: !14148)
!14151 = !DILocation(line: 3558, column: 13, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14153, file: !13052, line: 3558, column: 12)
!14153 = distinct !DILexicalBlock(scope: !14148, file: !13052, line: 3557, column: 7)
!14154 = !DILocation(line: 3558, column: 27, scope: !14152)
!14155 = !DILocation(line: 3558, column: 41, scope: !14152)
!14156 = !DILocation(line: 3558, column: 12, scope: !14153)
!14157 = distinct !{!14157, !14150, !14158}
!14158 = !DILocation(line: 3562, column: 7, scope: !14148)
!14159 = !DILocation(line: 3570, column: 13, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14143, file: !13052, line: 3565, column: 5)
!14161 = !DILocation(line: 3570, column: 7, scope: !14160)
!14162 = !DILocation(line: 3572, column: 13, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14164, file: !13052, line: 3572, column: 12)
!14164 = distinct !DILexicalBlock(scope: !14160, file: !13052, line: 3571, column: 7)
!14165 = !DILocation(line: 3572, column: 27, scope: !14163)
!14166 = !DILocation(line: 3572, column: 41, scope: !14163)
!14167 = !DILocation(line: 3572, column: 12, scope: !14164)
!14168 = distinct !{!14168, !14161, !14169}
!14169 = !DILocation(line: 3576, column: 7, scope: !14160)
!14170 = !DILocation(line: 3580, column: 8, scope: !13920)
!14171 = !DILocation(line: 3582, column: 7, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14173, file: !13052, line: 3581, column: 5)
!14173 = distinct !DILexicalBlock(scope: !13920, file: !13052, line: 3580, column: 8)
!14174 = !DILocation(line: 3583, column: 5, scope: !14172)
!14175 = !DILocation(line: 3588, column: 31, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !13890, file: !13052, line: 3588, column: 7)
!14177 = !DILocation(line: 3588, column: 41, scope: !14176)
!14178 = !DILocation(line: 3588, column: 7, scope: !13890)
!14179 = !DILocation(line: 3591, column: 8, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !13052, line: 3591, column: 8)
!14181 = distinct !DILexicalBlock(scope: !14176, file: !13052, line: 3589, column: 3)
!14182 = !DILocation(line: 3591, column: 38, scope: !14180)
!14183 = !DILocation(line: 3591, column: 8, scope: !14181)
!14184 = !DILocation(line: 3593, column: 44, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !13052, line: 3593, column: 10)
!14186 = distinct !DILexicalBlock(scope: !14180, file: !13052, line: 3592, column: 5)
!14187 = !DILocation(line: 0, scope: !14185)
!14188 = !DILocation(line: 3593, column: 10, scope: !14186)
!14189 = !DILocation(line: 3610, column: 15, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14185, file: !13052, line: 3594, column: 7)
!14191 = !DILocation(line: 3610, column: 9, scope: !14190)
!14192 = !DILocation(line: 3612, column: 15, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14194, file: !13052, line: 3612, column: 14)
!14194 = distinct !DILexicalBlock(scope: !14190, file: !13052, line: 3611, column: 9)
!14195 = !DILocation(line: 3612, column: 29, scope: !14193)
!14196 = !DILocation(line: 3612, column: 43, scope: !14193)
!14197 = !DILocation(line: 3612, column: 14, scope: !14194)
!14198 = distinct !{!14198, !14191, !14199}
!14199 = !DILocation(line: 3616, column: 9, scope: !14190)
!14200 = !DILocation(line: 3619, column: 9, scope: !14190)
!14201 = !DILocation(line: 3626, column: 9, scope: !14190)
!14202 = !DILocation(line: 3629, column: 21, scope: !14190)
!14203 = !DILocation(line: 3632, column: 9, scope: !14190)
!14204 = !DILocation(line: 3632, column: 15, scope: !14190)
!14205 = !DILocation(line: 3632, column: 51, scope: !14190)
!14206 = !DILocation(line: 3634, column: 15, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14208, file: !13052, line: 3634, column: 14)
!14208 = distinct !DILexicalBlock(scope: !14190, file: !13052, line: 3633, column: 9)
!14209 = !DILocation(line: 3634, column: 29, scope: !14207)
!14210 = !DILocation(line: 3634, column: 43, scope: !14207)
!14211 = !DILocation(line: 3634, column: 14, scope: !14208)
!14212 = distinct !{!14212, !14203, !14213}
!14213 = !DILocation(line: 3638, column: 9, scope: !14190)
!14214 = !DILocation(line: 3649, column: 15, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14185, file: !13052, line: 3641, column: 7)
!14216 = !DILocation(line: 3649, column: 9, scope: !14215)
!14217 = !DILocation(line: 3651, column: 15, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14219, file: !13052, line: 3651, column: 14)
!14219 = distinct !DILexicalBlock(scope: !14215, file: !13052, line: 3650, column: 9)
!14220 = !DILocation(line: 3651, column: 29, scope: !14218)
!14221 = !DILocation(line: 3651, column: 43, scope: !14218)
!14222 = !DILocation(line: 3651, column: 14, scope: !14219)
!14223 = distinct !{!14223, !14216, !14224}
!14224 = !DILocation(line: 3655, column: 9, scope: !14215)
!14225 = !DILocation(line: 3661, column: 44, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14227, file: !13052, line: 3661, column: 10)
!14227 = distinct !DILexicalBlock(scope: !14180, file: !13052, line: 3659, column: 5)
!14228 = !DILocation(line: 3661, column: 10, scope: !14227)
!14229 = !DILocation(line: 3668, column: 27, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14226, file: !13052, line: 3666, column: 7)
!14231 = !DILocation(line: 3671, column: 14, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14230, file: !13052, line: 3670, column: 13)
!14233 = !DILocation(line: 3671, column: 81, scope: !14232)
!14234 = !DILocation(line: 3671, column: 55, scope: !14232)
!14235 = !DILocation(line: 3671, column: 92, scope: !14232)
!14236 = !DILocation(line: 3672, column: 14, scope: !14232)
!14237 = !DILocation(line: 3672, column: 80, scope: !14232)
!14238 = !DILocation(line: 3672, column: 53, scope: !14232)
!14239 = !DILocation(line: 3672, column: 111, scope: !14232)
!14240 = !DILocation(line: 3673, column: 14, scope: !14232)
!14241 = !DILocation(line: 3673, column: 80, scope: !14232)
!14242 = !DILocation(line: 3673, column: 86, scope: !14232)
!14243 = !DILocation(line: 3673, column: 53, scope: !14232)
!14244 = !DILocation(line: 3673, column: 111, scope: !14232)
!14245 = !DILocation(line: 3674, column: 14, scope: !14232)
!14246 = !DILocation(line: 3674, column: 82, scope: !14232)
!14247 = !DILocation(line: 3674, column: 101, scope: !14232)
!14248 = !DILocation(line: 3674, column: 53, scope: !14232)
!14249 = !DILocation(line: 3674, column: 126, scope: !14232)
!14250 = !DILocation(line: 3675, column: 14, scope: !14232)
!14251 = !DILocation(line: 3675, column: 80, scope: !14232)
!14252 = !DILocation(line: 3675, column: 85, scope: !14232)
!14253 = !DILocation(line: 3675, column: 53, scope: !14232)
!14254 = !DILocation(line: 3675, column: 111, scope: !14232)
!14255 = !DILocation(line: 3676, column: 14, scope: !14232)
!14256 = !DILocation(line: 3676, column: 80, scope: !14232)
!14257 = !DILocation(line: 3676, column: 85, scope: !14232)
!14258 = !DILocation(line: 3676, column: 53, scope: !14232)
!14259 = !DILocation(line: 3670, column: 13, scope: !14230)
!14260 = !DILocation(line: 3691, column: 3, scope: !13890)
!14261 = !DILocation(line: 3692, column: 1, scope: !13890)
!14262 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13052, file: !13052, line: 3703, type: !14263, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3529, retainedNodes: !14265)
!14263 = !DISubroutineType(types: !14264)
!14264 = !{null, !13893}
!14265 = !{!14266}
!14266 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14262, file: !13052, line: 3703, type: !13893)
!14267 = !DILocation(line: 0, scope: !14262)
!14268 = !DILocation(line: 3706, column: 22, scope: !14262)
!14269 = !DILocation(line: 3706, column: 37, scope: !14262)
!14270 = !DILocation(line: 3709, column: 12, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14262, file: !13052, line: 3709, column: 6)
!14272 = !DILocation(line: 3709, column: 15, scope: !14271)
!14273 = !DILocation(line: 3709, column: 31, scope: !14271)
!14274 = !DILocation(line: 3709, column: 6, scope: !14262)
!14275 = !DILocation(line: 3711, column: 24, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14271, file: !13052, line: 3710, column: 3)
!14277 = !DILocation(line: 3711, column: 33, scope: !14276)
!14278 = !DILocation(line: 3712, column: 3, scope: !14276)
!14279 = !DILocation(line: 3713, column: 17, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14271, file: !13052, line: 3713, column: 11)
!14281 = !DILocation(line: 3713, column: 20, scope: !14280)
!14282 = !DILocation(line: 3713, column: 35, scope: !14280)
!14283 = !DILocation(line: 0, scope: !14280)
!14284 = !DILocation(line: 3713, column: 11, scope: !14271)
!14285 = !DILocation(line: 3715, column: 33, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14280, file: !13052, line: 3714, column: 3)
!14287 = !DILocation(line: 3716, column: 3, scope: !14286)
!14288 = !DILocation(line: 3719, column: 33, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14280, file: !13052, line: 3718, column: 3)
!14290 = !DILocation(line: 3723, column: 12, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14262, file: !13052, line: 3723, column: 6)
!14292 = !DILocation(line: 3723, column: 15, scope: !14291)
!14293 = !DILocation(line: 3729, column: 24, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14291, file: !13052, line: 3728, column: 3)
!14295 = !DILocation(line: 3729, column: 33, scope: !14294)
!14296 = !DILocation(line: 3732, column: 61, scope: !14262)
!14297 = !DILocation(line: 3732, column: 81, scope: !14262)
!14298 = !DILocation(line: 3732, column: 22, scope: !14262)
!14299 = !DILocation(line: 3732, column: 42, scope: !14262)
!14300 = !DILocation(line: 3735, column: 12, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14262, file: !13052, line: 3735, column: 6)
!14302 = !DILocation(line: 3735, column: 17, scope: !14301)
!14303 = !DILocation(line: 3735, column: 35, scope: !14301)
!14304 = !DILocation(line: 3735, column: 6, scope: !14262)
!14305 = !DILocation(line: 3737, column: 24, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14301, file: !13052, line: 3736, column: 3)
!14307 = !DILocation(line: 3737, column: 33, scope: !14306)
!14308 = !DILocation(line: 3738, column: 3, scope: !14306)
!14309 = !DILocation(line: 3739, column: 17, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14301, file: !13052, line: 3739, column: 11)
!14311 = !DILocation(line: 3739, column: 22, scope: !14310)
!14312 = !DILocation(line: 3739, column: 39, scope: !14310)
!14313 = !DILocation(line: 0, scope: !14310)
!14314 = !DILocation(line: 3739, column: 11, scope: !14301)
!14315 = !DILocation(line: 3741, column: 33, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14310, file: !13052, line: 3740, column: 3)
!14317 = !DILocation(line: 3742, column: 3, scope: !14316)
!14318 = !DILocation(line: 3745, column: 33, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14310, file: !13052, line: 3744, column: 3)
!14320 = !DILocation(line: 3749, column: 12, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14262, file: !13052, line: 3749, column: 6)
!14322 = !DILocation(line: 3749, column: 16, scope: !14321)
!14323 = !DILocation(line: 3755, column: 24, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14321, file: !13052, line: 3754, column: 3)
!14325 = !DILocation(line: 3755, column: 33, scope: !14324)
!14326 = !DILocation(line: 3759, column: 12, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14262, file: !13052, line: 3759, column: 6)
!14328 = !DILocation(line: 3759, column: 15, scope: !14327)
!14329 = !DILocation(line: 3759, column: 30, scope: !14327)
!14330 = !DILocation(line: 3759, column: 6, scope: !14262)
!14331 = !DILocation(line: 3765, column: 28, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14327, file: !13052, line: 3764, column: 3)
!14333 = !DILocation(line: 3765, column: 37, scope: !14332)
!14334 = !DILocation(line: 3767, column: 54, scope: !14262)
!14335 = !DILocation(line: 3767, column: 62, scope: !14262)
!14336 = !DILocation(line: 3767, column: 26, scope: !14262)
!14337 = !DILocation(line: 3767, column: 36, scope: !14262)
!14338 = !DILocation(line: 3768, column: 49, scope: !14262)
!14339 = !DILocation(line: 3768, column: 57, scope: !14262)
!14340 = !DILocation(line: 3768, column: 26, scope: !14262)
!14341 = !DILocation(line: 3768, column: 31, scope: !14262)
!14342 = !DILocation(line: 3769, column: 50, scope: !14262)
!14343 = !DILocation(line: 3769, column: 78, scope: !14262)
!14344 = !DILocation(line: 3769, column: 26, scope: !14262)
!14345 = !DILocation(line: 3769, column: 31, scope: !14262)
!14346 = !DILocation(line: 3770, column: 52, scope: !14262)
!14347 = !DILocation(line: 3770, column: 102, scope: !14262)
!14348 = !DILocation(line: 3770, column: 109, scope: !14262)
!14349 = !DILocation(line: 3770, column: 26, scope: !14262)
!14350 = !DILocation(line: 3770, column: 31, scope: !14262)
!14351 = !DILocation(line: 3771, column: 50, scope: !14262)
!14352 = !DILocation(line: 3771, column: 78, scope: !14262)
!14353 = !DILocation(line: 3771, column: 26, scope: !14262)
!14354 = !DILocation(line: 3771, column: 31, scope: !14262)
!14355 = !DILocation(line: 3772, column: 50, scope: !14262)
!14356 = !DILocation(line: 3772, column: 78, scope: !14262)
!14357 = !DILocation(line: 3772, column: 26, scope: !14262)
!14358 = !DILocation(line: 3772, column: 31, scope: !14262)
!14359 = !DILocation(line: 3773, column: 1, scope: !14262)
!14360 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14361, file: !14361, line: 257, type: !8027, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14362)
!14361 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14362 = !{!14363}
!14363 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14360, file: !14361, line: 257, type: !111)
!14364 = !DILocation(line: 0, scope: !14360)
!14365 = !DILocation(line: 260, column: 3, scope: !14360)
!14366 = !DILocation(line: 261, column: 1, scope: !14360)
!14367 = distinct !DISubprogram(name: "LL_InitTick", scope: !14368, file: !14368, line: 260, type: !11411, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14369)
!14368 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14369 = !{!14370, !14371}
!14370 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14367, file: !14368, line: 260, type: !111)
!14371 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14367, file: !14368, line: 260, type: !111)
!14372 = !DILocation(line: 0, scope: !14367)
!14373 = !DILocation(line: 263, column: 46, scope: !14367)
!14374 = !DILocation(line: 263, column: 55, scope: !14367)
!14375 = !DILocation(line: 263, column: 18, scope: !14367)
!14376 = !DILocation(line: 264, column: 18, scope: !14367)
!14377 = !DILocation(line: 265, column: 18, scope: !14367)
!14378 = !DILocation(line: 267, column: 1, scope: !14367)
!14379 = distinct !DISubprogram(name: "LL_mDelay", scope: !14361, file: !14361, line: 273, type: !8027, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14380)
!14380 = !{!14381, !14382}
!14381 = !DILocalVariable(name: "Delay", arg: 1, scope: !14379, file: !14361, line: 273, type: !111)
!14382 = !DILocalVariable(name: "tmp", scope: !14379, file: !14361, line: 275, type: !777)
!14383 = !DILocation(line: 0, scope: !14379)
!14384 = !DILocation(line: 275, column: 3, scope: !14379)
!14385 = !DILocation(line: 275, column: 18, scope: !14379)
!14386 = !DILocation(line: 275, column: 33, scope: !14379)
!14387 = !DILocation(line: 277, column: 10, scope: !14379)
!14388 = !DILocation(line: 280, column: 12, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14379, file: !14361, line: 280, column: 6)
!14390 = !DILocation(line: 285, column: 3, scope: !14379)
!14391 = !DILocation(line: 287, column: 18, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14393, file: !14361, line: 287, column: 8)
!14393 = distinct !DILexicalBlock(scope: !14379, file: !14361, line: 286, column: 3)
!14394 = !DILocation(line: 292, column: 1, scope: !14379)
!14395 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14361, file: !14361, line: 323, type: !8027, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14396)
!14396 = !{!14397}
!14397 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14395, file: !14361, line: 323, type: !111)
!14398 = !DILocation(line: 0, scope: !14395)
!14399 = !DILocation(line: 326, column: 19, scope: !14395)
!14400 = !DILocation(line: 327, column: 1, scope: !14395)
!14401 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14361, file: !14361, line: 338, type: !14402, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14405)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{!14404, !111}
!14404 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1313, line: 201, baseType: !1312)
!14405 = !{!14406, !14407, !14408, !14409, !14410}
!14406 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14401, file: !14361, line: 338, type: !111)
!14407 = !DILocalVariable(name: "timeout", scope: !14401, file: !14361, line: 340, type: !111)
!14408 = !DILocalVariable(name: "getlatency", scope: !14401, file: !14361, line: 341, type: !111)
!14409 = !DILocalVariable(name: "latency", scope: !14401, file: !14361, line: 342, type: !111)
!14410 = !DILocalVariable(name: "status", scope: !14401, file: !14361, line: 343, type: !14404)
!14411 = !DILocation(line: 0, scope: !14401)
!14412 = !DILocation(line: 347, column: 21, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14401, file: !14361, line: 347, column: 6)
!14414 = !DILocation(line: 347, column: 6, scope: !14401)
!14415 = !DILocation(line: 353, column: 8, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !14417, file: !14361, line: 353, column: 8)
!14417 = distinct !DILexicalBlock(scope: !14413, file: !14361, line: 352, column: 3)
!14418 = !DILocation(line: 353, column: 40, scope: !14416)
!14419 = !DILocation(line: 353, column: 8, scope: !14417)
!14420 = !DILocation(line: 356, column: 26, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !14361, line: 356, column: 10)
!14422 = distinct !DILexicalBlock(scope: !14416, file: !14361, line: 354, column: 5)
!14423 = !DILocation(line: 356, column: 55, scope: !14421)
!14424 = !DILocation(line: 362, column: 55, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14422, file: !14361, line: 362, column: 10)
!14426 = !DILocation(line: 368, column: 55, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14422, file: !14361, line: 368, column: 10)
!14428 = !DILocation(line: 374, column: 26, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14422, file: !14361, line: 374, column: 10)
!14430 = !DILocation(line: 374, column: 55, scope: !14429)
!14431 = !DILocation(line: 380, column: 28, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14433, file: !14361, line: 380, column: 12)
!14433 = distinct !DILexicalBlock(scope: !14429, file: !14361, line: 379, column: 7)
!14434 = !DILocation(line: 380, column: 57, scope: !14432)
!14435 = !DILocation(line: 387, column: 8, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14417, file: !14361, line: 387, column: 8)
!14437 = !DILocation(line: 387, column: 40, scope: !14436)
!14438 = !DILocation(line: 387, column: 8, scope: !14417)
!14439 = !DILocation(line: 390, column: 26, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14441, file: !14361, line: 390, column: 10)
!14441 = distinct !DILexicalBlock(scope: !14436, file: !14361, line: 388, column: 5)
!14442 = !DILocation(line: 390, column: 55, scope: !14440)
!14443 = !DILocation(line: 396, column: 26, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14441, file: !14361, line: 396, column: 10)
!14445 = !DILocation(line: 396, column: 55, scope: !14444)
!14446 = !DILocation(line: 402, column: 26, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !14441, file: !14361, line: 402, column: 10)
!14448 = !DILocation(line: 402, column: 55, scope: !14447)
!14449 = !DILocation(line: 407, column: 26, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14441, file: !14361, line: 407, column: 10)
!14451 = !DILocation(line: 407, column: 55, scope: !14450)
!14452 = !DILocation(line: 413, column: 28, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14454, file: !14361, line: 413, column: 12)
!14454 = distinct !DILexicalBlock(scope: !14450, file: !14361, line: 412, column: 7)
!14455 = !DILocation(line: 413, column: 57, scope: !14453)
!14456 = !DILocation(line: 0, scope: !14417)
!14457 = !DILocation(line: 420, column: 8, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14417, file: !14361, line: 420, column: 8)
!14459 = !DILocation(line: 420, column: 40, scope: !14458)
!14460 = !DILocation(line: 420, column: 8, scope: !14417)
!14461 = !DILocation(line: 423, column: 26, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14463, file: !14361, line: 423, column: 10)
!14463 = distinct !DILexicalBlock(scope: !14458, file: !14361, line: 421, column: 5)
!14464 = !DILocation(line: 423, column: 55, scope: !14462)
!14465 = !DILocation(line: 429, column: 26, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14463, file: !14361, line: 429, column: 10)
!14467 = !DILocation(line: 429, column: 55, scope: !14466)
!14468 = !DILocation(line: 435, column: 28, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14470, file: !14361, line: 435, column: 12)
!14470 = distinct !DILexicalBlock(scope: !14466, file: !14361, line: 434, column: 7)
!14471 = !DILocation(line: 435, column: 57, scope: !14469)
!14472 = !DILocation(line: 444, column: 5, scope: !14417)
!14473 = !DILocation(line: 448, column: 5, scope: !14417)
!14474 = !DILocation(line: 451, column: 18, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14417, file: !14361, line: 449, column: 5)
!14476 = !DILocation(line: 452, column: 12, scope: !14475)
!14477 = !DILocation(line: 453, column: 26, scope: !14417)
!14478 = !DILocation(line: 453, column: 38, scope: !14417)
!14479 = !DILocation(line: 453, column: 5, scope: !14475)
!14480 = distinct !{!14480, !14473, !14481}
!14481 = !DILocation(line: 453, column: 54, scope: !14417)
!14482 = !DILocation(line: 0, scope: !14413)
!14483 = !DILocation(line: 464, column: 3, scope: !14401)
!14484 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !14485, file: !14485, line: 519, type: !8017, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14485 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14486 = !DILocation(line: 521, column: 21, scope: !14484)
!14487 = !DILocation(line: 521, column: 3, scope: !14484)
!14488 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7630, file: !7630, line: 1543, type: !8027, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14489)
!14489 = !{!14490}
!14490 = !DILocalVariable(name: "Latency", arg: 1, scope: !14488, file: !7630, line: 1543, type: !111)
!14491 = !DILocation(line: 0, scope: !14488)
!14492 = !DILocation(line: 1545, column: 3, scope: !14488)
!14493 = !DILocation(line: 1546, column: 1, scope: !14488)
!14494 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7630, file: !7630, line: 1569, type: !8017, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14495 = !DILocation(line: 1571, column: 21, scope: !14494)
!14496 = !DILocation(line: 1571, column: 3, scope: !14494)
!14497 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14361, file: !14361, line: 483, type: !14498, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14514)
!14498 = !DISubroutineType(types: !14499)
!14499 = !{!14404, !14500, !14507}
!14500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14501, size: 32)
!14501 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14368, line: 114, baseType: !14502)
!14502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14368, line: 94, size: 96, elements: !14503)
!14503 = !{!14504, !14505, !14506}
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14502, file: !14368, line: 96, baseType: !111, size: 32)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14502, file: !14368, line: 102, baseType: !111, size: 32, offset: 32)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14502, file: !14368, line: 109, baseType: !111, size: 32, offset: 64)
!14507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14508, size: 32)
!14508 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14368, line: 139, baseType: !14509)
!14509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14368, line: 119, size: 96, elements: !14510)
!14510 = !{!14511, !14512, !14513}
!14511 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14509, file: !14368, line: 121, baseType: !111, size: 32)
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14509, file: !14368, line: 127, baseType: !111, size: 32, offset: 32)
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14509, file: !14368, line: 133, baseType: !111, size: 32, offset: 64)
!14514 = !{!14515, !14516, !14517, !14518}
!14515 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14497, file: !14361, line: 483, type: !14500)
!14516 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14497, file: !14361, line: 484, type: !14507)
!14517 = !DILocalVariable(name: "status", scope: !14497, file: !14361, line: 486, type: !14404)
!14518 = !DILocalVariable(name: "pllfreq", scope: !14497, file: !14361, line: 487, type: !111)
!14519 = !DILocation(line: 0, scope: !14497)
!14520 = !DILocation(line: 490, column: 6, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14497, file: !14361, line: 490, column: 6)
!14522 = !DILocation(line: 490, column: 25, scope: !14521)
!14523 = !DILocation(line: 490, column: 6, scope: !14497)
!14524 = !DILocation(line: 493, column: 15, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14521, file: !14361, line: 491, column: 3)
!14526 = !DILocation(line: 496, column: 8, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14525, file: !14361, line: 496, column: 8)
!14528 = !DILocation(line: 496, column: 29, scope: !14527)
!14529 = !DILocation(line: 496, column: 8, scope: !14525)
!14530 = !DILocation(line: 498, column: 7, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14527, file: !14361, line: 497, column: 5)
!14532 = !DILocation(line: 499, column: 7, scope: !14531)
!14533 = !DILocation(line: 499, column: 14, scope: !14531)
!14534 = !DILocation(line: 499, column: 35, scope: !14531)
!14535 = distinct !{!14535, !14532, !14536}
!14536 = !DILocation(line: 502, column: 7, scope: !14531)
!14537 = !DILocation(line: 506, column: 76, scope: !14525)
!14538 = !DILocation(line: 506, column: 103, scope: !14525)
!14539 = !DILocation(line: 507, column: 54, scope: !14525)
!14540 = !DILocation(line: 506, column: 5, scope: !14525)
!14541 = !DILocation(line: 510, column: 14, scope: !14525)
!14542 = !DILocation(line: 511, column: 3, scope: !14525)
!14543 = !DILocation(line: 0, scope: !14521)
!14544 = !DILocation(line: 518, column: 3, scope: !14497)
!14545 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14361, file: !14361, line: 642, type: !14546, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14548)
!14546 = !DISubroutineType(types: !14547)
!14547 = !{!14404}
!14548 = !{!14549}
!14549 = !DILocalVariable(name: "status", scope: !14545, file: !14361, line: 644, type: !14404)
!14550 = !DILocation(line: 0, scope: !14545)
!14551 = !DILocation(line: 647, column: 6, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14545, file: !14361, line: 647, column: 6)
!14553 = !DILocation(line: 647, column: 27, scope: !14552)
!14554 = !DILocation(line: 655, column: 6, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14545, file: !14361, line: 655, column: 6)
!14556 = !DILocation(line: 655, column: 30, scope: !14555)
!14557 = !DILocation(line: 663, column: 6, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14545, file: !14361, line: 663, column: 6)
!14559 = !DILocation(line: 663, column: 30, scope: !14558)
!14560 = !DILocation(line: 663, column: 6, scope: !14545)
!14561 = !DILocation(line: 669, column: 3, scope: !14545)
!14562 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14361, file: !14361, line: 611, type: !14563, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14565)
!14563 = !DISubroutineType(types: !14564)
!14564 = !{!111, !111, !14500}
!14565 = !{!14566, !14567, !14568}
!14566 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14562, file: !14361, line: 611, type: !111)
!14567 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14562, file: !14361, line: 611, type: !14500)
!14568 = !DILocalVariable(name: "pllfreq", scope: !14562, file: !14361, line: 613, type: !111)
!14569 = !DILocation(line: 0, scope: !14562)
!14570 = !DILocation(line: 622, column: 56, scope: !14562)
!14571 = !DILocation(line: 622, column: 61, scope: !14562)
!14572 = !DILocation(line: 622, column: 32, scope: !14562)
!14573 = !DILocation(line: 626, column: 45, scope: !14562)
!14574 = !DILocation(line: 626, column: 50, scope: !14562)
!14575 = !DILocation(line: 626, column: 21, scope: !14562)
!14576 = !DILocation(line: 630, column: 47, scope: !14562)
!14577 = !DILocation(line: 630, column: 82, scope: !14562)
!14578 = !DILocation(line: 630, column: 21, scope: !14562)
!14579 = !DILocation(line: 633, column: 3, scope: !14562)
!14580 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10736, file: !10736, line: 3007, type: !8017, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14581 = !DILocation(line: 3009, column: 11, scope: !14580)
!14582 = !DILocation(line: 3009, column: 44, scope: !14580)
!14583 = !DILocation(line: 3009, column: 3, scope: !14580)
!14584 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10736, file: !10736, line: 2987, type: !323, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14585 = !DILocation(line: 2989, column: 3, scope: !14584)
!14586 = !DILocation(line: 2990, column: 1, scope: !14584)
!14587 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10736, file: !10736, line: 4304, type: !10870, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14588)
!14588 = !{!14589, !14590, !14591, !14592}
!14589 = !DILocalVariable(name: "Source", arg: 1, scope: !14587, file: !10736, line: 4304, type: !111)
!14590 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14587, file: !10736, line: 4304, type: !111)
!14591 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14587, file: !10736, line: 4304, type: !111)
!14592 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14587, file: !10736, line: 4304, type: !111)
!14593 = !DILocation(line: 0, scope: !14587)
!14594 = !DILocation(line: 4306, column: 3, scope: !14587)
!14595 = !DILocation(line: 4308, column: 3, scope: !14587)
!14596 = !DILocation(line: 4310, column: 3, scope: !14587)
!14597 = !DILocation(line: 4312, column: 1, scope: !14587)
!14598 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14361, file: !14361, line: 681, type: !14599, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14601)
!14599 = !DISubroutineType(types: !14600)
!14600 = !{!14404, !111, !14507}
!14601 = !{!14602, !14603, !14604, !14605}
!14602 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14598, file: !14361, line: 681, type: !111)
!14603 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14598, file: !14361, line: 681, type: !14507)
!14604 = !DILocalVariable(name: "status", scope: !14598, file: !14361, line: 683, type: !14404)
!14605 = !DILocalVariable(name: "hclk_frequency", scope: !14598, file: !14361, line: 684, type: !111)
!14606 = !DILocation(line: 0, scope: !14598)
!14607 = !DILocation(line: 691, column: 20, scope: !14598)
!14608 = !DILocation(line: 694, column: 6, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14598, file: !14361, line: 694, column: 6)
!14610 = !DILocation(line: 694, column: 22, scope: !14609)
!14611 = !DILocation(line: 694, column: 6, scope: !14598)
!14612 = !DILocation(line: 697, column: 14, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14609, file: !14361, line: 695, column: 3)
!14614 = !DILocation(line: 701, column: 13, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14598, file: !14361, line: 701, column: 6)
!14616 = !DILocation(line: 701, column: 6, scope: !14598)
!14617 = !DILocation(line: 704, column: 5, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14615, file: !14361, line: 702, column: 3)
!14619 = !DILocation(line: 705, column: 5, scope: !14618)
!14620 = !DILocation(line: 705, column: 12, scope: !14618)
!14621 = !DILocation(line: 705, column: 33, scope: !14618)
!14622 = distinct !{!14622, !14619, !14623}
!14623 = !DILocation(line: 708, column: 5, scope: !14618)
!14624 = !DILocation(line: 711, column: 49, scope: !14618)
!14625 = !DILocation(line: 711, column: 5, scope: !14618)
!14626 = !DILocation(line: 712, column: 5, scope: !14618)
!14627 = !DILocation(line: 713, column: 5, scope: !14618)
!14628 = !DILocation(line: 713, column: 12, scope: !14618)
!14629 = !DILocation(line: 713, column: 37, scope: !14618)
!14630 = distinct !{!14630, !14627, !14631}
!14631 = !DILocation(line: 716, column: 5, scope: !14618)
!14632 = !DILocation(line: 719, column: 50, scope: !14618)
!14633 = !DILocation(line: 719, column: 5, scope: !14618)
!14634 = !DILocation(line: 720, column: 50, scope: !14618)
!14635 = !DILocation(line: 720, column: 5, scope: !14618)
!14636 = !DILocation(line: 721, column: 3, scope: !14618)
!14637 = !DILocation(line: 724, column: 6, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14598, file: !14361, line: 724, column: 6)
!14639 = !DILocation(line: 724, column: 22, scope: !14638)
!14640 = !DILocation(line: 724, column: 6, scope: !14598)
!14641 = !DILocation(line: 727, column: 14, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14638, file: !14361, line: 725, column: 3)
!14643 = !DILocation(line: 728, column: 3, scope: !14642)
!14644 = !DILocation(line: 731, column: 13, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14598, file: !14361, line: 731, column: 6)
!14646 = !DILocation(line: 731, column: 6, scope: !14598)
!14647 = !DILocation(line: 733, column: 5, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14645, file: !14361, line: 732, column: 3)
!14649 = !DILocation(line: 734, column: 3, scope: !14648)
!14650 = !DILocation(line: 736, column: 3, scope: !14598)
!14651 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10736, file: !10736, line: 4184, type: !323, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14652 = !DILocation(line: 4186, column: 3, scope: !14651)
!14653 = !DILocation(line: 4187, column: 1, scope: !14651)
!14654 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10736, file: !10736, line: 4205, type: !8017, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14655 = !DILocation(line: 4207, column: 11, scope: !14654)
!14656 = !DILocation(line: 4207, column: 44, scope: !14654)
!14657 = !DILocation(line: 4207, column: 3, scope: !14654)
!14658 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10736, file: !10736, line: 3224, type: !8027, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14659)
!14659 = !{!14660}
!14660 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14658, file: !10736, line: 3224, type: !111)
!14661 = !DILocation(line: 0, scope: !14658)
!14662 = !DILocation(line: 3226, column: 3, scope: !14658)
!14663 = !DILocation(line: 3227, column: 1, scope: !14658)
!14664 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10736, file: !10736, line: 3188, type: !8027, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14665)
!14665 = !{!14666}
!14666 = !DILocalVariable(name: "Source", arg: 1, scope: !14664, file: !10736, line: 3188, type: !111)
!14667 = !DILocation(line: 0, scope: !14664)
!14668 = !DILocation(line: 3190, column: 3, scope: !14664)
!14669 = !DILocation(line: 3191, column: 1, scope: !14664)
!14670 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10736, file: !10736, line: 3204, type: !8017, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14671 = !DILocation(line: 3206, column: 21, scope: !14670)
!14672 = !DILocation(line: 3206, column: 3, scope: !14670)
!14673 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10736, file: !10736, line: 3240, type: !8027, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14674)
!14674 = !{!14675}
!14675 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14673, file: !10736, line: 3240, type: !111)
!14676 = !DILocation(line: 0, scope: !14673)
!14677 = !DILocation(line: 3242, column: 3, scope: !14673)
!14678 = !DILocation(line: 3243, column: 1, scope: !14673)
!14679 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10736, file: !10736, line: 3256, type: !8027, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14680)
!14680 = !{!14681}
!14681 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14679, file: !10736, line: 3256, type: !111)
!14682 = !DILocation(line: 0, scope: !14679)
!14683 = !DILocation(line: 3258, column: 3, scope: !14679)
!14684 = !DILocation(line: 3259, column: 1, scope: !14679)
!14685 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10736, file: !10736, line: 5969, type: !8017, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14686 = !DILocation(line: 5971, column: 11, scope: !14685)
!14687 = !DILocation(line: 5971, column: 47, scope: !14685)
!14688 = !DILocation(line: 5971, column: 3, scope: !14685)
!14689 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10736, file: !10736, line: 5153, type: !8017, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14690 = !DILocation(line: 5155, column: 11, scope: !14689)
!14691 = !DILocation(line: 5155, column: 47, scope: !14689)
!14692 = !DILocation(line: 5155, column: 3, scope: !14689)
!14693 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14361, file: !14361, line: 540, type: !14694, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !14696)
!14694 = !DISubroutineType(types: !14695)
!14695 = !{!14404, !111, !111, !14500, !14507}
!14696 = !{!14697, !14698, !14699, !14700, !14701, !14702}
!14697 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14693, file: !14361, line: 540, type: !111)
!14698 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14693, file: !14361, line: 540, type: !111)
!14699 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14693, file: !14361, line: 541, type: !14500)
!14700 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14693, file: !14361, line: 541, type: !14507)
!14701 = !DILocalVariable(name: "status", scope: !14693, file: !14361, line: 543, type: !14404)
!14702 = !DILocalVariable(name: "pllfreq", scope: !14693, file: !14361, line: 544, type: !111)
!14703 = !DILocation(line: 0, scope: !14693)
!14704 = !DILocation(line: 551, column: 6, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14693, file: !14361, line: 551, column: 6)
!14706 = !DILocation(line: 551, column: 25, scope: !14705)
!14707 = !DILocation(line: 551, column: 6, scope: !14693)
!14708 = !DILocation(line: 554, column: 15, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14705, file: !14361, line: 552, column: 3)
!14710 = !DILocation(line: 557, column: 8, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14709, file: !14361, line: 557, column: 8)
!14712 = !DILocation(line: 557, column: 29, scope: !14711)
!14713 = !DILocation(line: 557, column: 8, scope: !14709)
!14714 = !DILocation(line: 560, column: 20, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14716, file: !14361, line: 560, column: 10)
!14716 = distinct !DILexicalBlock(scope: !14711, file: !14361, line: 558, column: 5)
!14717 = !DILocation(line: 560, column: 10, scope: !14716)
!14718 = !DILocation(line: 562, column: 9, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14715, file: !14361, line: 561, column: 7)
!14720 = !DILocation(line: 563, column: 7, scope: !14719)
!14721 = !DILocation(line: 566, column: 9, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14715, file: !14361, line: 565, column: 7)
!14723 = !DILocation(line: 570, column: 7, scope: !14716)
!14724 = !DILocation(line: 571, column: 7, scope: !14716)
!14725 = !DILocation(line: 571, column: 14, scope: !14716)
!14726 = !DILocation(line: 571, column: 35, scope: !14716)
!14727 = distinct !{!14727, !14724, !14728}
!14728 = !DILocation(line: 574, column: 7, scope: !14716)
!14729 = !DILocation(line: 578, column: 76, scope: !14709)
!14730 = !DILocation(line: 578, column: 103, scope: !14709)
!14731 = !DILocation(line: 579, column: 54, scope: !14709)
!14732 = !DILocation(line: 578, column: 5, scope: !14709)
!14733 = !DILocation(line: 582, column: 14, scope: !14709)
!14734 = !DILocation(line: 583, column: 3, scope: !14709)
!14735 = !DILocation(line: 0, scope: !14705)
!14736 = !DILocation(line: 590, column: 3, scope: !14693)
!14737 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10736, file: !10736, line: 2969, type: !8017, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14738 = !DILocation(line: 2971, column: 11, scope: !14737)
!14739 = !DILocation(line: 2971, column: 44, scope: !14737)
!14740 = !DILocation(line: 2971, column: 3, scope: !14737)
!14741 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10736, file: !10736, line: 2929, type: !323, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14742 = !DILocation(line: 2931, column: 3, scope: !14741)
!14743 = !DILocation(line: 2932, column: 1, scope: !14741)
!14744 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10736, file: !10736, line: 2939, type: !323, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14745 = !DILocation(line: 2941, column: 3, scope: !14744)
!14746 = !DILocation(line: 2942, column: 1, scope: !14744)
!14747 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10736, file: !10736, line: 2949, type: !323, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3592, retainedNodes: !2571)
!14748 = !DILocation(line: 2951, column: 3, scope: !14747)
!14749 = !DILocation(line: 2952, column: 1, scope: !14747)
!14750 = distinct !DISubprogram(name: "z_device_state_init", scope: !14751, file: !14751, line: 23, type: !323, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14752)
!14751 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14752 = !{!14753}
!14753 = !DILocalVariable(name: "dev", scope: !14750, file: !14751, line: 25, type: !14754)
!14754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14755, size: 32)
!14755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14756)
!14756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !797, line: 378, size: 192, elements: !14757)
!14757 = !{!14758, !14759, !14760, !14761, !14767, !14768}
!14758 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14756, file: !797, line: 380, baseType: !108, size: 32)
!14759 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14756, file: !797, line: 382, baseType: !13, size: 32, offset: 32)
!14760 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14756, file: !797, line: 384, baseType: !13, size: 32, offset: 64)
!14761 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14756, file: !797, line: 386, baseType: !14762, size: 32, offset: 96)
!14762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14763, size: 32)
!14763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !797, line: 351, size: 16, elements: !14764)
!14764 = !{!14765, !14766}
!14765 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14763, file: !797, line: 359, baseType: !166, size: 8)
!14766 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14763, file: !797, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14767 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14756, file: !797, line: 388, baseType: !102, size: 32, offset: 128)
!14768 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14756, file: !797, line: 396, baseType: !810, size: 32, offset: 160)
!14769 = !DILocation(line: 0, scope: !14750)
!14770 = !DILocation(line: 31, column: 1, scope: !14750)
!14771 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14751, file: !14751, line: 33, type: !14772, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14774)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!14754, !108}
!14774 = !{!14775, !14776}
!14775 = !DILocalVariable(name: "name", arg: 1, scope: !14771, file: !14751, line: 33, type: !108)
!14776 = !DILocalVariable(name: "dev", scope: !14771, file: !14751, line: 35, type: !14754)
!14777 = !DILocation(line: 0, scope: !14771)
!14778 = !DILocation(line: 40, column: 12, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14771, file: !14751, line: 40, column: 6)
!14780 = !DILocation(line: 40, column: 21, scope: !14779)
!14781 = !DILocation(line: 40, column: 25, scope: !14779)
!14782 = !DILocation(line: 40, column: 33, scope: !14779)
!14783 = !DILocation(line: 40, column: 6, scope: !14771)
!14784 = !DILocation(line: 55, column: 2, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14771, file: !14751, line: 55, column: 2)
!14786 = !DILocation(line: 50, column: 7, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14788, file: !14751, line: 50, column: 7)
!14788 = distinct !DILexicalBlock(scope: !14789, file: !14751, line: 49, column: 57)
!14789 = distinct !DILexicalBlock(scope: !14790, file: !14751, line: 49, column: 2)
!14790 = distinct !DILexicalBlock(scope: !14771, file: !14751, line: 49, column: 2)
!14791 = !DILocation(line: 50, column: 30, scope: !14787)
!14792 = !DILocation(line: 50, column: 39, scope: !14787)
!14793 = !DILocation(line: 50, column: 44, scope: !14787)
!14794 = !DILocation(line: 50, column: 7, scope: !14788)
!14795 = !DILocation(line: 49, column: 53, scope: !14789)
!14796 = !DILocation(line: 49, column: 33, scope: !14789)
!14797 = !DILocation(line: 49, column: 2, scope: !14790)
!14798 = distinct !{!14798, !14797, !14799}
!14799 = !DILocation(line: 53, column: 2, scope: !14790)
!14800 = !DILocation(line: 56, column: 7, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14802, file: !14751, line: 56, column: 7)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !14751, line: 55, column: 57)
!14803 = distinct !DILexicalBlock(scope: !14785, file: !14751, line: 55, column: 2)
!14804 = !DILocation(line: 56, column: 30, scope: !14801)
!14805 = !DILocation(line: 56, column: 52, scope: !14801)
!14806 = !DILocation(line: 56, column: 34, scope: !14801)
!14807 = !DILocation(line: 56, column: 58, scope: !14801)
!14808 = !DILocation(line: 56, column: 7, scope: !14802)
!14809 = !DILocation(line: 55, column: 53, scope: !14803)
!14810 = !DILocation(line: 55, column: 33, scope: !14803)
!14811 = distinct !{!14811, !14784, !14812}
!14812 = !DILocation(line: 59, column: 2, scope: !14785)
!14813 = !DILocation(line: 62, column: 1, scope: !14771)
!14814 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14751, file: !14751, line: 93, type: !14815, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14817)
!14815 = !DISubroutineType(types: !14816)
!14816 = !{!122, !14754}
!14817 = !{!14818}
!14818 = !DILocalVariable(name: "dev", arg: 1, scope: !14814, file: !14751, line: 93, type: !14754)
!14819 = !DILocation(line: 0, scope: !14814)
!14820 = !DILocation(line: 99, column: 10, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14814, file: !14751, line: 99, column: 6)
!14822 = !DILocation(line: 99, column: 6, scope: !14814)
!14823 = !DILocation(line: 103, column: 14, scope: !14814)
!14824 = !DILocation(line: 103, column: 21, scope: !14814)
!14825 = !DILocation(line: 103, column: 33, scope: !14814)
!14826 = !DILocation(line: 103, column: 49, scope: !14814)
!14827 = !DILocation(line: 103, column: 58, scope: !14814)
!14828 = !DILocation(line: 104, column: 1, scope: !14814)
!14829 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14751, file: !14751, line: 87, type: !14830, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14833)
!14830 = !DISubroutineType(types: !14831)
!14831 = !{!156, !14832}
!14832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14754, size: 32)
!14833 = !{!14834}
!14834 = !DILocalVariable(name: "devices", arg: 1, scope: !14829, file: !14751, line: 87, type: !14832)
!14835 = !DILocation(line: 0, scope: !14829)
!14836 = !DILocation(line: 89, column: 11, scope: !14829)
!14837 = !DILocation(line: 90, column: 2, scope: !14829)
!14838 = distinct !DISubprogram(name: "device_required_foreach", scope: !14751, file: !14751, line: 125, type: !14839, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14845)
!14839 = !DISubroutineType(types: !14840)
!14840 = !{!103, !14754, !14841, !102}
!14841 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !797, line: 471, baseType: !14842)
!14842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14843, size: 32)
!14843 = !DISubroutineType(types: !14844)
!14844 = !{!103, !14754, !102}
!14845 = !{!14846, !14847, !14848, !14849, !14850}
!14846 = !DILocalVariable(name: "dev", arg: 1, scope: !14838, file: !14751, line: 125, type: !14754)
!14847 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14838, file: !14751, line: 126, type: !14841)
!14848 = !DILocalVariable(name: "context", arg: 3, scope: !14838, file: !14751, line: 127, type: !102)
!14849 = !DILocalVariable(name: "handle_count", scope: !14838, file: !14751, line: 129, type: !156)
!14850 = !DILocalVariable(name: "handles", scope: !14838, file: !14751, line: 130, type: !810)
!14851 = !DILocation(line: 0, scope: !14838)
!14852 = !DILocation(line: 129, column: 2, scope: !14838)
!14853 = !DILocation(line: 129, column: 9, scope: !14838)
!14854 = !DILocation(line: 130, column: 35, scope: !14838)
!14855 = !DILocation(line: 132, column: 33, scope: !14838)
!14856 = !DILocation(line: 132, column: 9, scope: !14838)
!14857 = !DILocation(line: 133, column: 1, scope: !14838)
!14858 = !DILocation(line: 132, column: 2, scope: !14838)
!14859 = distinct !DISubprogram(name: "device_required_handles_get", scope: !797, file: !797, line: 493, type: !14860, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14862)
!14860 = !DISubroutineType(types: !14861)
!14861 = !{!810, !14754, !3169}
!14862 = !{!14863, !14864, !14865, !14866}
!14863 = !DILocalVariable(name: "dev", arg: 1, scope: !14859, file: !797, line: 493, type: !14754)
!14864 = !DILocalVariable(name: "count", arg: 2, scope: !14859, file: !797, line: 493, type: !3169)
!14865 = !DILocalVariable(name: "rv", scope: !14859, file: !797, line: 495, type: !810)
!14866 = !DILocalVariable(name: "i", scope: !14867, file: !797, line: 498, type: !156)
!14867 = distinct !DILexicalBlock(scope: !14868, file: !797, line: 497, column: 18)
!14868 = distinct !DILexicalBlock(scope: !14859, file: !797, line: 497, column: 6)
!14869 = !DILocation(line: 0, scope: !14859)
!14870 = !DILocation(line: 495, column: 35, scope: !14859)
!14871 = !DILocation(line: 497, column: 9, scope: !14868)
!14872 = !DILocation(line: 497, column: 6, scope: !14859)
!14873 = !DILocation(line: 0, scope: !14867)
!14874 = !DILocation(line: 500, column: 11, scope: !14867)
!14875 = !DILocation(line: 500, column: 40, scope: !14867)
!14876 = !DILocation(line: 502, column: 4, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14867, file: !797, line: 501, column: 40)
!14878 = distinct !{!14878, !14879, !14880}
!14879 = !DILocation(line: 500, column: 3, scope: !14867)
!14880 = !DILocation(line: 503, column: 3, scope: !14867)
!14881 = !DILocation(line: 504, column: 10, scope: !14867)
!14882 = !DILocation(line: 505, column: 2, scope: !14867)
!14883 = !DILocation(line: 507, column: 2, scope: !14859)
!14884 = distinct !DISubprogram(name: "device_visitor", scope: !14751, file: !14751, line: 106, type: !14885, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14887)
!14885 = !DISubroutineType(types: !14886)
!14886 = !{!103, !810, !156, !14841, !102}
!14887 = !{!14888, !14889, !14890, !14891, !14892, !14894, !14897, !14898}
!14888 = !DILocalVariable(name: "handles", arg: 1, scope: !14884, file: !14751, line: 106, type: !810)
!14889 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14884, file: !14751, line: 107, type: !156)
!14890 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14884, file: !14751, line: 108, type: !14841)
!14891 = !DILocalVariable(name: "context", arg: 4, scope: !14884, file: !14751, line: 109, type: !102)
!14892 = !DILocalVariable(name: "i", scope: !14893, file: !14751, line: 112, type: !156)
!14893 = distinct !DILexicalBlock(scope: !14884, file: !14751, line: 112, column: 2)
!14894 = !DILocalVariable(name: "dh", scope: !14895, file: !14751, line: 113, type: !812)
!14895 = distinct !DILexicalBlock(scope: !14896, file: !14751, line: 112, column: 44)
!14896 = distinct !DILexicalBlock(scope: !14893, file: !14751, line: 112, column: 2)
!14897 = !DILocalVariable(name: "rdev", scope: !14895, file: !14751, line: 114, type: !14754)
!14898 = !DILocalVariable(name: "rc", scope: !14895, file: !14751, line: 115, type: !103)
!14899 = !DILocation(line: 0, scope: !14884)
!14900 = !DILocation(line: 0, scope: !14893)
!14901 = !DILocation(line: 112, column: 23, scope: !14896)
!14902 = !DILocation(line: 112, column: 2, scope: !14893)
!14903 = distinct !{!14903, !14902, !14904}
!14904 = !DILocation(line: 120, column: 2, scope: !14893)
!14905 = !DILocation(line: 113, column: 24, scope: !14895)
!14906 = !DILocation(line: 0, scope: !14895)
!14907 = !DILocation(line: 114, column: 31, scope: !14895)
!14908 = !DILocation(line: 115, column: 12, scope: !14895)
!14909 = !DILocation(line: 117, column: 10, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14895, file: !14751, line: 117, column: 7)
!14911 = !DILocation(line: 112, column: 39, scope: !14896)
!14912 = !DILocation(line: 123, column: 1, scope: !14884)
!14913 = distinct !DISubprogram(name: "device_from_handle", scope: !797, file: !797, line: 439, type: !14914, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14916)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{!14754, !812}
!14916 = !{!14917, !14918, !14919}
!14917 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14913, file: !797, line: 439, type: !812)
!14918 = !DILocalVariable(name: "dev", scope: !14913, file: !797, line: 443, type: !14754)
!14919 = !DILocalVariable(name: "numdev", scope: !14913, file: !797, line: 444, type: !156)
!14920 = !DILocation(line: 0, scope: !14913)
!14921 = !DILocation(line: 446, column: 7, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14913, file: !797, line: 446, column: 6)
!14923 = !DILocation(line: 446, column: 18, scope: !14922)
!14924 = !DILocation(line: 446, column: 23, scope: !14922)
!14925 = !DILocation(line: 450, column: 2, scope: !14913)
!14926 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14751, file: !14751, line: 135, type: !14839, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14927)
!14927 = !{!14928, !14929, !14930, !14931, !14932}
!14928 = !DILocalVariable(name: "dev", arg: 1, scope: !14926, file: !14751, line: 135, type: !14754)
!14929 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14926, file: !14751, line: 136, type: !14841)
!14930 = !DILocalVariable(name: "context", arg: 3, scope: !14926, file: !14751, line: 137, type: !102)
!14931 = !DILocalVariable(name: "handle_count", scope: !14926, file: !14751, line: 139, type: !156)
!14932 = !DILocalVariable(name: "handles", scope: !14926, file: !14751, line: 140, type: !810)
!14933 = !DILocation(line: 0, scope: !14926)
!14934 = !DILocation(line: 139, column: 2, scope: !14926)
!14935 = !DILocation(line: 139, column: 9, scope: !14926)
!14936 = !DILocation(line: 140, column: 35, scope: !14926)
!14937 = !DILocation(line: 142, column: 33, scope: !14926)
!14938 = !DILocation(line: 142, column: 9, scope: !14926)
!14939 = !DILocation(line: 143, column: 1, scope: !14926)
!14940 = !DILocation(line: 142, column: 2, scope: !14926)
!14941 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !797, file: !797, line: 573, type: !14860, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3659, retainedNodes: !14942)
!14942 = !{!14943, !14944, !14945, !14946, !14947}
!14943 = !DILocalVariable(name: "dev", arg: 1, scope: !14941, file: !797, line: 573, type: !14754)
!14944 = !DILocalVariable(name: "count", arg: 2, scope: !14941, file: !797, line: 573, type: !3169)
!14945 = !DILocalVariable(name: "rv", scope: !14941, file: !797, line: 575, type: !810)
!14946 = !DILocalVariable(name: "region", scope: !14941, file: !797, line: 576, type: !156)
!14947 = !DILocalVariable(name: "i", scope: !14941, file: !797, line: 577, type: !156)
!14948 = !DILocation(line: 0, scope: !14941)
!14949 = !DILocation(line: 575, column: 35, scope: !14941)
!14950 = !DILocation(line: 579, column: 9, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14941, file: !797, line: 579, column: 6)
!14952 = !DILocation(line: 579, column: 6, scope: !14941)
!14953 = !DILocation(line: 582, column: 8, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14955, file: !797, line: 582, column: 8)
!14955 = distinct !DILexicalBlock(scope: !14956, file: !797, line: 581, column: 23)
!14956 = distinct !DILexicalBlock(scope: !14951, file: !797, line: 579, column: 18)
!14957 = !DILocation(line: 582, column: 12, scope: !14954)
!14958 = !DILocation(line: 585, column: 6, scope: !14955)
!14959 = !DILocation(line: 0, scope: !14956)
!14960 = !DILocation(line: 581, column: 17, scope: !14956)
!14961 = !DILocation(line: 581, column: 3, scope: !14956)
!14962 = !DILocation(line: 588, column: 10, scope: !14956)
!14963 = !DILocation(line: 588, column: 16, scope: !14956)
!14964 = !DILocation(line: 589, column: 4, scope: !14965)
!14965 = distinct !DILexicalBlock(scope: !14956, file: !797, line: 588, column: 39)
!14966 = !DILocation(line: 588, column: 3, scope: !14956)
!14967 = distinct !{!14967, !14966, !14968}
!14968 = !DILocation(line: 590, column: 3, scope: !14956)
!14969 = !DILocation(line: 591, column: 10, scope: !14956)
!14970 = !DILocation(line: 592, column: 2, scope: !14956)
!14971 = !DILocation(line: 575, column: 25, scope: !14941)
!14972 = !DILocation(line: 594, column: 2, scope: !14941)
!14973 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2363, file: !2363, line: 49, type: !14974, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !2571)
!14974 = !DISubroutineType(types: !14975)
!14975 = !{!744}
!14976 = !DILocation(line: 51, column: 10, scope: !14973)
!14977 = !DILocation(line: 51, column: 20, scope: !14973)
!14978 = !DILocation(line: 51, column: 2, scope: !14973)
!14979 = distinct !DISubprogram(name: "coredump", scope: !3666, file: !3666, line: 209, type: !14980, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15128)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{null, !32, !14982, !15026}
!14982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14983, size: 32)
!14983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14984)
!14984 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3299, line: 141, baseType: !14985)
!14985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3299, line: 97, size: 256, elements: !14986)
!14986 = !{!14987}
!14987 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14985, file: !3299, line: 107, baseType: !14988, size: 256)
!14988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3299, line: 98, size: 256, elements: !14989)
!14989 = !{!14990, !14995, !15000, !15005, !15010, !15015, !15020, !15025}
!14990 = !DIDerivedType(tag: DW_TAG_member, scope: !14988, file: !3299, line: 99, baseType: !14991, size: 32)
!14991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14988, file: !3299, line: 99, size: 32, elements: !14992)
!14992 = !{!14993, !14994}
!14993 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14991, file: !3299, line: 99, baseType: !111, size: 32)
!14994 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14991, file: !3299, line: 99, baseType: !111, size: 32)
!14995 = !DIDerivedType(tag: DW_TAG_member, scope: !14988, file: !3299, line: 100, baseType: !14996, size: 32, offset: 32)
!14996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14988, file: !3299, line: 100, size: 32, elements: !14997)
!14997 = !{!14998, !14999}
!14998 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14996, file: !3299, line: 100, baseType: !111, size: 32)
!14999 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14996, file: !3299, line: 100, baseType: !111, size: 32)
!15000 = !DIDerivedType(tag: DW_TAG_member, scope: !14988, file: !3299, line: 101, baseType: !15001, size: 32, offset: 64)
!15001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14988, file: !3299, line: 101, size: 32, elements: !15002)
!15002 = !{!15003, !15004}
!15003 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !15001, file: !3299, line: 101, baseType: !111, size: 32)
!15004 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !15001, file: !3299, line: 101, baseType: !111, size: 32)
!15005 = !DIDerivedType(tag: DW_TAG_member, scope: !14988, file: !3299, line: 102, baseType: !15006, size: 32, offset: 96)
!15006 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14988, file: !3299, line: 102, size: 32, elements: !15007)
!15007 = !{!15008, !15009}
!15008 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !15006, file: !3299, line: 102, baseType: !111, size: 32)
!15009 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !15006, file: !3299, line: 102, baseType: !111, size: 32)
!15010 = !DIDerivedType(tag: DW_TAG_member, scope: !14988, file: !3299, line: 103, baseType: !15011, size: 32, offset: 128)
!15011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14988, file: !3299, line: 103, size: 32, elements: !15012)
!15012 = !{!15013, !15014}
!15013 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !15011, file: !3299, line: 103, baseType: !111, size: 32)
!15014 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !15011, file: !3299, line: 103, baseType: !111, size: 32)
!15015 = !DIDerivedType(tag: DW_TAG_member, scope: !14988, file: !3299, line: 104, baseType: !15016, size: 32, offset: 160)
!15016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14988, file: !3299, line: 104, size: 32, elements: !15017)
!15017 = !{!15018, !15019}
!15018 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !15016, file: !3299, line: 104, baseType: !111, size: 32)
!15019 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !15016, file: !3299, line: 104, baseType: !111, size: 32)
!15020 = !DIDerivedType(tag: DW_TAG_member, scope: !14988, file: !3299, line: 105, baseType: !15021, size: 32, offset: 192)
!15021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14988, file: !3299, line: 105, size: 32, elements: !15022)
!15022 = !{!15023, !15024}
!15023 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !15021, file: !3299, line: 105, baseType: !111, size: 32)
!15024 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !15021, file: !3299, line: 105, baseType: !111, size: 32)
!15025 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14988, file: !3299, line: 106, baseType: !111, size: 32, offset: 224)
!15026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15027, size: 32)
!15027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !15028)
!15028 = !{!15029, !15087, !15099, !15100, !15101, !15102, !15108, !15123}
!15029 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15027, file: !199, line: 247, baseType: !15030, size: 384)
!15030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !15031)
!15031 = !{!15032, !15056, !15063, !15064, !15065, !15074, !15075, !15076}
!15032 = !DIDerivedType(tag: DW_TAG_member, scope: !15030, file: !199, line: 60, baseType: !15033, size: 64)
!15033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15030, file: !199, line: 60, size: 64, elements: !15034)
!15034 = !{!15035, !15050}
!15035 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15033, file: !199, line: 61, baseType: !15036, size: 64)
!15036 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !15037)
!15037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !15038)
!15038 = !{!15039, !15045}
!15039 = !DIDerivedType(tag: DW_TAG_member, scope: !15037, file: !136, line: 38, baseType: !15040, size: 32)
!15040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15037, file: !136, line: 38, size: 32, elements: !15041)
!15041 = !{!15042, !15044}
!15042 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !15040, file: !136, line: 39, baseType: !15043, size: 32)
!15043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15037, size: 32)
!15044 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15040, file: !136, line: 40, baseType: !15043, size: 32)
!15045 = !DIDerivedType(tag: DW_TAG_member, scope: !15037, file: !136, line: 42, baseType: !15046, size: 32, offset: 32)
!15046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15037, file: !136, line: 42, size: 32, elements: !15047)
!15047 = !{!15048, !15049}
!15048 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !15046, file: !136, line: 43, baseType: !15043, size: 32)
!15049 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15046, file: !136, line: 44, baseType: !15043, size: 32)
!15050 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15033, file: !199, line: 62, baseType: !15051, size: 64)
!15051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !15052)
!15052 = !{!15053}
!15053 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15051, file: !211, line: 50, baseType: !15054, size: 64)
!15054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15055, size: 64, elements: !216)
!15055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15051, size: 32)
!15056 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15030, file: !199, line: 68, baseType: !15057, size: 32, offset: 64)
!15057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15058, size: 32)
!15058 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !15059)
!15059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !15060)
!15060 = !{!15061}
!15061 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15059, file: !131, line: 232, baseType: !15062, size: 64)
!15062 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !15037)
!15063 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15030, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!15064 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15030, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!15065 = !DIDerivedType(tag: DW_TAG_member, scope: !15030, file: !199, line: 90, baseType: !15066, size: 16, offset: 112)
!15066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15030, file: !199, line: 90, size: 16, elements: !15067)
!15067 = !{!15068, !15073}
!15068 = !DIDerivedType(tag: DW_TAG_member, scope: !15066, file: !199, line: 91, baseType: !15069, size: 16)
!15069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15066, file: !199, line: 91, size: 16, elements: !15070)
!15070 = !{!15071, !15072}
!15071 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15069, file: !199, line: 96, baseType: !229, size: 8)
!15072 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15069, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15066, file: !199, line: 100, baseType: !181, size: 16)
!15074 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15030, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!15075 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15030, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!15076 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15030, file: !199, line: 131, baseType: !15077, size: 192, offset: 192)
!15077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !15078)
!15078 = !{!15079, !15080, !15086}
!15079 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15077, file: !131, line: 245, baseType: !15036, size: 64)
!15080 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15077, file: !131, line: 246, baseType: !15081, size: 32, offset: 64)
!15081 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !15082)
!15082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15083, size: 32)
!15083 = !DISubroutineType(types: !15084)
!15084 = !{null, !15085}
!15085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15077, size: 32)
!15086 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15077, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!15087 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15027, file: !199, line: 250, baseType: !15088, size: 288, offset: 384)
!15088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !15089)
!15089 = !{!15090, !15091, !15092, !15093, !15094, !15095, !15096, !15097, !15098}
!15090 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15088, file: !248, line: 26, baseType: !111, size: 32)
!15091 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15088, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!15092 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15088, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!15093 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15088, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!15094 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15088, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!15095 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15088, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!15096 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15088, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!15097 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15088, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!15098 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15088, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!15099 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15027, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!15100 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15027, file: !199, line: 256, baseType: !15058, size: 64, offset: 704)
!15101 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15027, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!15102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15027, file: !199, line: 300, baseType: !15103, size: 96, offset: 800)
!15103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !15104)
!15104 = !{!15105, !15106, !15107}
!15105 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15103, file: !199, line: 153, baseType: !22, size: 32)
!15106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15103, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!15107 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15103, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!15108 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15027, file: !199, line: 325, baseType: !15109, size: 32, offset: 896)
!15109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15110, size: 32)
!15110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !15111)
!15111 = !{!15112, !15118, !15119}
!15112 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15110, file: !127, line: 5074, baseType: !15113, size: 96)
!15113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !15114)
!15114 = !{!15115, !15116, !15117}
!15115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15113, file: !274, line: 57, baseType: !277, size: 32)
!15116 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15113, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!15117 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15113, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!15118 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15110, file: !127, line: 5075, baseType: !15058, size: 64, offset: 96)
!15119 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15110, file: !127, line: 5076, baseType: !15120, size: 32, offset: 160)
!15120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !15121)
!15121 = !{!15122}
!15122 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !15120, file: !152, line: 52, baseType: !22, size: 32)
!15123 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15027, file: !199, line: 343, baseType: !15124, size: 64, offset: 928)
!15124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !15125)
!15125 = !{!15126, !15127}
!15126 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15124, file: !248, line: 63, baseType: !111, size: 32)
!15127 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15124, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!15128 = !{!15129, !15130, !15131}
!15129 = !DILocalVariable(name: "reason", arg: 1, scope: !14979, file: !3666, line: 209, type: !32)
!15130 = !DILocalVariable(name: "esf", arg: 2, scope: !14979, file: !3666, line: 209, type: !14982)
!15131 = !DILocalVariable(name: "thread", arg: 3, scope: !14979, file: !3666, line: 210, type: !15026)
!15132 = !DILocation(line: 0, scope: !14979)
!15133 = !DILocation(line: 212, column: 1, scope: !14979)
!15134 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3666, file: !3666, line: 214, type: !15135, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15137)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{null, !22, !22}
!15137 = !{!15138, !15139}
!15138 = !DILocalVariable(name: "start_addr", arg: 1, scope: !15134, file: !3666, line: 214, type: !22)
!15139 = !DILocalVariable(name: "end_addr", arg: 2, scope: !15134, file: !3666, line: 214, type: !22)
!15140 = !DILocation(line: 0, scope: !15134)
!15141 = !DILocation(line: 216, column: 1, scope: !15134)
!15142 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3666, file: !3666, line: 218, type: !15143, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15145)
!15143 = !DISubroutineType(types: !15144)
!15144 = !{null, !550, !156}
!15145 = !{!15146, !15147}
!15146 = !DILocalVariable(name: "buf", arg: 1, scope: !15142, file: !3666, line: 218, type: !550)
!15147 = !DILocalVariable(name: "buflen", arg: 2, scope: !15142, file: !3666, line: 218, type: !156)
!15148 = !DILocation(line: 0, scope: !15142)
!15149 = !DILocation(line: 220, column: 1, scope: !15142)
!15150 = distinct !DISubprogram(name: "coredump_query", scope: !3666, file: !3666, line: 222, type: !15151, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15153)
!15151 = !DISubroutineType(types: !15152)
!15152 = !{!103, !3665, !102}
!15153 = !{!15154, !15155}
!15154 = !DILocalVariable(name: "query_id", arg: 1, scope: !15150, file: !3666, line: 222, type: !3665)
!15155 = !DILocalVariable(name: "arg", arg: 2, scope: !15150, file: !3666, line: 222, type: !102)
!15156 = !DILocation(line: 0, scope: !15150)
!15157 = !DILocation(line: 224, column: 2, scope: !15150)
!15158 = distinct !DISubprogram(name: "coredump_cmd", scope: !3666, file: !3666, line: 227, type: !15159, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15161)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{!103, !3672, !102}
!15161 = !{!15162, !15163}
!15162 = !DILocalVariable(name: "query_id", arg: 1, scope: !15158, file: !3666, line: 227, type: !3672)
!15163 = !DILocalVariable(name: "arg", arg: 2, scope: !15158, file: !3666, line: 227, type: !102)
!15164 = !DILocation(line: 0, scope: !15158)
!15165 = !DILocation(line: 229, column: 2, scope: !15158)
!15166 = distinct !DISubprogram(name: "arch_system_halt", scope: !15167, file: !15167, line: 23, type: !7620, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15168)
!15167 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15168 = !{!15169}
!15169 = !DILocalVariable(name: "reason", arg: 1, scope: !15166, file: !15167, line: 23, type: !32)
!15170 = !DILocation(line: 0, scope: !15166)
!15171 = !DILocation(line: 55, column: 2, scope: !15172, inlinedAt: !15176)
!15172 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15173)
!15173 = !{!15174, !15175}
!15174 = !DILocalVariable(name: "key", scope: !15172, file: !7609, line: 44, type: !32)
!15175 = !DILocalVariable(name: "tmp", scope: !15172, file: !7609, line: 53, type: !32)
!15176 = distinct !DILocation(line: 31, column: 8, scope: !15166)
!15177 = !{i64 2283671}
!15178 = !DILocation(line: 0, scope: !15172, inlinedAt: !15176)
!15179 = !DILocation(line: 32, column: 2, scope: !15166)
!15180 = !DILocation(line: 32, column: 2, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15182, file: !15167, line: 32, column: 2)
!15182 = distinct !DILexicalBlock(scope: !15166, file: !15167, line: 32, column: 2)
!15183 = distinct !{!15183, !15184, !15185}
!15184 = !DILocation(line: 32, column: 2, scope: !15182)
!15185 = !DILocation(line: 34, column: 2, scope: !15182)
!15186 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !15167, file: !15167, line: 39, type: !15187, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15189)
!15187 = !DISubroutineType(types: !15188)
!15188 = !{null, !32, !14982}
!15189 = !{!15190, !15191}
!15190 = !DILocalVariable(name: "reason", arg: 1, scope: !15186, file: !15167, line: 39, type: !32)
!15191 = !DILocalVariable(name: "esf", arg: 2, scope: !15186, file: !15167, line: 40, type: !14982)
!15192 = !DILocation(line: 0, scope: !15186)
!15193 = !DILocation(line: 45, column: 2, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15195, file: !15167, line: 45, column: 2)
!15195 = distinct !DILexicalBlock(scope: !15196, file: !15167, line: 45, column: 2)
!15196 = distinct !DILexicalBlock(scope: !15197, file: !15167, line: 45, column: 2)
!15197 = distinct !DILexicalBlock(scope: !15186, file: !15167, line: 45, column: 2)
!15198 = !DILocation(line: 46, column: 2, scope: !15186)
!15199 = distinct !DISubprogram(name: "k_fatal_halt", scope: !15167, file: !15167, line: 81, type: !7620, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15200)
!15200 = !{!15201}
!15201 = !DILocalVariable(name: "reason", arg: 1, scope: !15199, file: !15167, line: 81, type: !32)
!15202 = !DILocation(line: 0, scope: !15199)
!15203 = !DILocation(line: 83, column: 2, scope: !15199)
!15204 = distinct !DISubprogram(name: "z_fatal_error", scope: !15167, file: !15167, line: 96, type: !15187, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15205)
!15205 = !{!15206, !15207, !15208, !15209}
!15206 = !DILocalVariable(name: "reason", arg: 1, scope: !15204, file: !15167, line: 96, type: !32)
!15207 = !DILocalVariable(name: "esf", arg: 2, scope: !15204, file: !15167, line: 96, type: !14982)
!15208 = !DILocalVariable(name: "key", scope: !15204, file: !15167, line: 102, type: !32)
!15209 = !DILocalVariable(name: "thread", scope: !15204, file: !15167, line: 103, type: !15026)
!15210 = !DILocation(line: 0, scope: !15204)
!15211 = !DILocation(line: 55, column: 2, scope: !15172, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 102, column: 21, scope: !15204)
!15213 = !DILocation(line: 0, scope: !15172, inlinedAt: !15212)
!15214 = !DILocation(line: 104, column: 4, scope: !15204)
!15215 = !DILocation(line: 109, column: 2, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15217, file: !15167, line: 109, column: 2)
!15217 = distinct !DILexicalBlock(scope: !15218, file: !15167, line: 109, column: 2)
!15218 = distinct !DILexicalBlock(scope: !15219, file: !15167, line: 109, column: 2)
!15219 = distinct !DILexicalBlock(scope: !15204, file: !15167, line: 109, column: 2)
!15220 = !DILocation(line: 119, column: 11, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15204, file: !15167, line: 119, column: 6)
!15222 = !DILocation(line: 119, column: 20, scope: !15221)
!15223 = !DILocalVariable(name: "esf", arg: 1, scope: !15224, file: !8980, line: 71, type: !14982)
!15224 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8980, file: !8980, line: 71, type: !15225, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15227)
!15225 = !DISubroutineType(types: !15226)
!15226 = !{!122, !14982}
!15227 = !{!15223}
!15228 = !DILocation(line: 0, scope: !15224, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 119, column: 23, scope: !15221)
!15230 = !DILocation(line: 73, column: 21, scope: !15224, inlinedAt: !15229)
!15231 = !DILocation(line: 73, column: 26, scope: !15224, inlinedAt: !15229)
!15232 = !DILocation(line: 73, column: 9, scope: !15224, inlinedAt: !15229)
!15233 = !DILocation(line: 119, column: 6, scope: !15204)
!15234 = !DILocation(line: 120, column: 3, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15236, file: !15167, line: 120, column: 3)
!15236 = distinct !DILexicalBlock(scope: !15237, file: !15167, line: 120, column: 3)
!15237 = distinct !DILexicalBlock(scope: !15238, file: !15167, line: 120, column: 3)
!15238 = distinct !DILexicalBlock(scope: !15239, file: !15167, line: 120, column: 3)
!15239 = distinct !DILexicalBlock(scope: !15221, file: !15167, line: 119, column: 57)
!15240 = !DILocation(line: 121, column: 2, scope: !15239)
!15241 = !DILocation(line: 124, column: 2, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15243, file: !15167, line: 124, column: 2)
!15243 = distinct !DILexicalBlock(scope: !15244, file: !15167, line: 124, column: 2)
!15244 = distinct !DILexicalBlock(scope: !15245, file: !15167, line: 124, column: 2)
!15245 = distinct !DILexicalBlock(scope: !15204, file: !15167, line: 124, column: 2)
!15246 = !DILocation(line: 131, column: 2, scope: !15204)
!15247 = !DILocation(line: 147, column: 3, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15249, file: !15167, line: 147, column: 3)
!15249 = distinct !DILexicalBlock(scope: !15250, file: !15167, line: 147, column: 3)
!15250 = distinct !DILexicalBlock(scope: !15251, file: !15167, line: 146, column: 32)
!15251 = distinct !DILexicalBlock(scope: !15204, file: !15167, line: 146, column: 6)
!15252 = !DILocation(line: 147, column: 3, scope: !15249)
!15253 = !DILocation(line: 147, column: 3, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15248, file: !15167, line: 147, column: 3)
!15255 = !DILocalVariable(name: "key", arg: 1, scope: !15256, file: !7609, line: 84, type: !32)
!15256 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15257)
!15257 = !{!15255}
!15258 = !DILocation(line: 0, scope: !15256, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 186, column: 2, scope: !15204)
!15260 = !DILocation(line: 95, column: 2, scope: !15256, inlinedAt: !15259)
!15261 = !{i64 2284488}
!15262 = !DILocation(line: 189, column: 3, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15264, file: !15167, line: 188, column: 41)
!15264 = distinct !DILexicalBlock(scope: !15204, file: !15167, line: 188, column: 6)
!15265 = !DILocation(line: 191, column: 1, scope: !15204)
!15266 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !15267, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !2571)
!15267 = !DISubroutineType(types: !15268)
!15268 = !{!15269}
!15269 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !15026)
!15270 = !DILocation(line: 535, column: 9, scope: !15266)
!15271 = !DILocation(line: 535, column: 2, scope: !15266)
!15272 = distinct !DISubprogram(name: "reason_to_str", scope: !15167, file: !15167, line: 62, type: !15273, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15275)
!15273 = !DISubroutineType(types: !15274)
!15274 = !{!108, !32}
!15275 = !{!15276}
!15276 = !DILocalVariable(name: "reason", arg: 1, scope: !15272, file: !15167, line: 62, type: !32)
!15277 = !DILocation(line: 0, scope: !15272)
!15278 = !DILocation(line: 64, column: 2, scope: !15272)
!15279 = !DILocation(line: 0, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15272, file: !15167, line: 64, column: 18)
!15281 = !DILocation(line: 78, column: 1, scope: !15272)
!15282 = distinct !DISubprogram(name: "thread_name_get", scope: !15167, file: !15167, line: 51, type: !15283, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15285)
!15283 = !DISubroutineType(types: !15284)
!15284 = !{!108, !15026}
!15285 = !{!15286, !15287}
!15286 = !DILocalVariable(name: "thread", arg: 1, scope: !15282, file: !15167, line: 51, type: !15026)
!15287 = !DILocalVariable(name: "thread_name", scope: !15282, file: !15167, line: 53, type: !108)
!15288 = !DILocation(line: 0, scope: !15282)
!15289 = !DILocation(line: 53, column: 36, scope: !15282)
!15290 = !DILocation(line: 53, column: 28, scope: !15282)
!15291 = !DILocation(line: 53, column: 47, scope: !15282)
!15292 = !DILocation(line: 55, column: 19, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15282, file: !15167, line: 55, column: 6)
!15294 = !DILocation(line: 55, column: 28, scope: !15293)
!15295 = !DILocation(line: 55, column: 32, scope: !15293)
!15296 = !DILocation(line: 55, column: 47, scope: !15293)
!15297 = !DILocation(line: 55, column: 6, scope: !15282)
!15298 = !DILocation(line: 57, column: 2, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15293, file: !15167, line: 55, column: 57)
!15300 = !DILocation(line: 59, column: 2, scope: !15282)
!15301 = distinct !DISubprogram(name: "k_thread_abort", scope: !5334, file: !5334, line: 188, type: !15302, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !15304)
!15302 = !DISubroutineType(types: !15303)
!15303 = !{null, !15269}
!15304 = !{!15305}
!15305 = !DILocalVariable(name: "thread", arg: 1, scope: !15301, file: !5334, line: 188, type: !15269)
!15306 = !DILocation(line: 0, scope: !15301)
!15307 = !DILocation(line: 197, column: 2, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15301, file: !5334, line: 197, column: 2)
!15309 = !{i64 2155069835}
!15310 = !DILocation(line: 198, column: 2, scope: !15301)
!15311 = !DILocation(line: 199, column: 1, scope: !15301)
!15312 = distinct !DISubprogram(name: "z_current_get", scope: !5334, file: !5334, line: 173, type: !15267, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3662, retainedNodes: !2571)
!15313 = !DILocation(line: 180, column: 2, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15312, file: !5334, line: 180, column: 2)
!15315 = !{i64 2155069767}
!15316 = !DILocation(line: 181, column: 9, scope: !15312)
!15317 = !DILocation(line: 181, column: 2, scope: !15312)
!15318 = distinct !DISubprogram(name: "z_early_memset", scope: !2371, file: !2371, line: 108, type: !15319, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15321)
!15319 = !DISubroutineType(types: !15320)
!15320 = !{null, !102, !103, !156}
!15321 = !{!15322, !15323, !15324}
!15322 = !DILocalVariable(name: "dst", arg: 1, scope: !15318, file: !2371, line: 108, type: !102)
!15323 = !DILocalVariable(name: "c", arg: 2, scope: !15318, file: !2371, line: 108, type: !103)
!15324 = !DILocalVariable(name: "n", arg: 3, scope: !15318, file: !2371, line: 108, type: !156)
!15325 = !DILocation(line: 0, scope: !15318)
!15326 = !DILocation(line: 110, column: 9, scope: !15318)
!15327 = !DILocation(line: 111, column: 1, scope: !15318)
!15328 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2371, file: !2371, line: 121, type: !15329, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15331)
!15329 = !DISubroutineType(types: !15330)
!15330 = !{null, !102, !13, !156}
!15331 = !{!15332, !15333, !15334}
!15332 = !DILocalVariable(name: "dst", arg: 1, scope: !15328, file: !2371, line: 121, type: !102)
!15333 = !DILocalVariable(name: "src", arg: 2, scope: !15328, file: !2371, line: 121, type: !13)
!15334 = !DILocalVariable(name: "n", arg: 3, scope: !15328, file: !2371, line: 121, type: !156)
!15335 = !DILocation(line: 0, scope: !15328)
!15336 = !DILocation(line: 123, column: 9, scope: !15328)
!15337 = !DILocation(line: 124, column: 1, scope: !15328)
!15338 = distinct !DISubprogram(name: "z_bss_zero", scope: !2371, file: !2371, line: 132, type: !323, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !2571)
!15339 = !DILocation(line: 143, column: 2, scope: !15338)
!15340 = !DILocation(line: 168, column: 1, scope: !15338)
!15341 = distinct !DISubprogram(name: "z_init_cpu", scope: !2371, file: !2371, line: 372, type: !10336, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15342)
!15342 = !{!15343}
!15343 = !DILocalVariable(name: "id", arg: 1, scope: !15341, file: !2371, line: 372, type: !103)
!15344 = !DILocation(line: 0, scope: !15341)
!15345 = !DILocation(line: 374, column: 2, scope: !15341)
!15346 = !DILocation(line: 375, column: 34, scope: !15341)
!15347 = !DILocation(line: 375, column: 19, scope: !15341)
!15348 = !DILocation(line: 375, column: 31, scope: !15341)
!15349 = !DILocation(line: 376, column: 24, scope: !15341)
!15350 = !DILocation(line: 376, column: 19, scope: !15341)
!15351 = !DILocation(line: 376, column: 22, scope: !15341)
!15352 = !DILocation(line: 378, column: 26, scope: !15341)
!15353 = !DILocation(line: 378, column: 4, scope: !15341)
!15354 = !DILocation(line: 378, column: 50, scope: !15341)
!15355 = !DILocation(line: 377, column: 19, scope: !15341)
!15356 = !DILocation(line: 377, column: 29, scope: !15341)
!15357 = !DILocation(line: 384, column: 1, scope: !15341)
!15358 = distinct !DISubprogram(name: "init_idle_thread", scope: !2371, file: !2371, line: 343, type: !10336, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15359)
!15359 = !{!15360, !15361, !15362, !15365}
!15360 = !DILocalVariable(name: "i", arg: 1, scope: !15358, file: !2371, line: 343, type: !103)
!15361 = !DILocalVariable(name: "thread", scope: !15358, file: !2371, line: 345, type: !2463)
!15362 = !DILocalVariable(name: "stack", scope: !15358, file: !2371, line: 346, type: !15363)
!15363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15364, size: 32)
!15364 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !2580)
!15365 = !DILocalVariable(name: "tname", scope: !15358, file: !2371, line: 358, type: !160)
!15366 = !DILocation(line: 0, scope: !15358)
!15367 = !DILocation(line: 345, column: 29, scope: !15358)
!15368 = !DILocation(line: 346, column: 28, scope: !15358)
!15369 = !DILocation(line: 362, column: 37, scope: !15358)
!15370 = !DILocation(line: 362, column: 36, scope: !15358)
!15371 = !DILocation(line: 361, column: 2, scope: !15358)
!15372 = !DILocation(line: 365, column: 2, scope: !15358)
!15373 = !DILocation(line: 370, column: 1, scope: !15358)
!15374 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !305, file: !305, line: 331, type: !15375, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15377)
!15375 = !DISubroutineType(types: !15376)
!15376 = !{!160, !15363}
!15377 = !{!15378}
!15378 = !DILocalVariable(name: "sym", arg: 1, scope: !15374, file: !305, line: 331, type: !15363)
!15379 = !DILocation(line: 0, scope: !15374)
!15380 = !DILocation(line: 333, column: 21, scope: !15374)
!15381 = !DILocation(line: 333, column: 2, scope: !15374)
!15382 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15383, file: !15383, line: 155, type: !15384, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15386)
!15383 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15384 = !DISubroutineType(types: !15385)
!15385 = !{null, !2463}
!15386 = !{!15387}
!15387 = !DILocalVariable(name: "thread", arg: 1, scope: !15382, file: !15383, line: 155, type: !2463)
!15388 = !DILocation(line: 0, scope: !15382)
!15389 = !DILocation(line: 157, column: 15, scope: !15382)
!15390 = !DILocation(line: 157, column: 28, scope: !15382)
!15391 = !DILocation(line: 158, column: 1, scope: !15382)
!15392 = distinct !DISubprogram(name: "z_cstart", scope: !2371, file: !2371, line: 501, type: !323, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15393)
!15393 = !{!15394}
!15394 = !DILocalVariable(name: "dummy_thread", scope: !15392, file: !2371, line: 518, type: !2464)
!15395 = !DILocation(line: 507, column: 2, scope: !15392)
!15396 = !DILocation(line: 43, column: 14, scope: !15397, inlinedAt: !15401)
!15397 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15398, file: !15398, line: 40, type: !323, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15399)
!15398 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15399 = !{!15400}
!15400 = !DILocalVariable(name: "msp", scope: !15397, file: !15398, line: 42, type: !111)
!15401 = distinct !DILocation(line: 44, column: 2, scope: !15402, inlinedAt: !15404)
!15402 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15403, file: !15403, line: 42, type: !323, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !2571)
!15403 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15404 = distinct !DILocation(line: 510, column: 2, scope: !15392)
!15405 = !DILocation(line: 43, column: 3, scope: !15397, inlinedAt: !15401)
!15406 = !DILocation(line: 43, column: 60, scope: !15397, inlinedAt: !15401)
!15407 = !DILocation(line: 0, scope: !15397, inlinedAt: !15401)
!15408 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15409, file: !7930, line: 1153, type: !111)
!15409 = distinct !DISubprogram(name: "__set_MSP", scope: !7930, file: !7930, line: 1153, type: !8027, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15410)
!15410 = !{!15408}
!15411 = !DILocation(line: 0, scope: !15409, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 46, column: 2, scope: !15397, inlinedAt: !15401)
!15413 = !DILocation(line: 1155, column: 3, scope: !15409, inlinedAt: !15412)
!15414 = !{i64 3749610}
!15415 = !DILocation(line: 62, column: 11, scope: !15397, inlinedAt: !15401)
!15416 = !DILocation(line: 102, column: 2, scope: !15417, inlinedAt: !15418)
!15417 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8980, file: !8980, line: 97, type: !323, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !2571)
!15418 = distinct !DILocation(line: 45, column: 2, scope: !15402, inlinedAt: !15404)
!15419 = !DILocation(line: 108, column: 2, scope: !15417, inlinedAt: !15418)
!15420 = !DILocation(line: 112, column: 2, scope: !15417, inlinedAt: !15418)
!15421 = !DILocation(line: 113, column: 2, scope: !15417, inlinedAt: !15418)
!15422 = !DILocation(line: 114, column: 2, scope: !15417, inlinedAt: !15418)
!15423 = !DILocation(line: 116, column: 2, scope: !15417, inlinedAt: !15418)
!15424 = !DILocation(line: 123, column: 13, scope: !15417, inlinedAt: !15418)
!15425 = !DILocation(line: 46, column: 2, scope: !15402, inlinedAt: !15404)
!15426 = !DILocation(line: 47, column: 2, scope: !15402, inlinedAt: !15404)
!15427 = !DILocation(line: 174, column: 12, scope: !15428, inlinedAt: !15429)
!15428 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8980, file: !8980, line: 169, type: !323, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !2571)
!15429 = distinct !DILocation(line: 48, column: 2, scope: !15402, inlinedAt: !15404)
!15430 = !DILocation(line: 179, column: 12, scope: !15428, inlinedAt: !15429)
!15431 = !DILocation(line: 50, column: 2, scope: !15402, inlinedAt: !15404)
!15432 = !DILocation(line: 57, column: 2, scope: !15402, inlinedAt: !15404)
!15433 = !DILocation(line: 518, column: 2, scope: !15392)
!15434 = !DILocation(line: 518, column: 18, scope: !15392)
!15435 = !DILocation(line: 520, column: 2, scope: !15392)
!15436 = !DILocation(line: 523, column: 2, scope: !15392)
!15437 = !DILocation(line: 526, column: 2, scope: !15392)
!15438 = !DILocation(line: 527, column: 2, scope: !15392)
!15439 = !DILocation(line: 543, column: 24, scope: !15392)
!15440 = !DILocation(line: 543, column: 2, scope: !15392)
!15441 = !DILocation(line: 0, scope: !2602)
!15442 = !DILocation(line: 246, column: 15, scope: !2620)
!15443 = !DILocation(line: 246, column: 36, scope: !2619)
!15444 = !DILocation(line: 246, column: 2, scope: !2620)
!15445 = !DILocation(line: 247, column: 37, scope: !2618)
!15446 = !DILocation(line: 0, scope: !2618)
!15447 = !DILocation(line: 248, column: 19, scope: !2618)
!15448 = !DILocation(line: 248, column: 12, scope: !2618)
!15449 = !DILocation(line: 250, column: 11, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !2618, file: !2371, line: 250, column: 7)
!15451 = !DILocation(line: 250, column: 7, scope: !2618)
!15452 = !DILocation(line: 254, column: 11, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15454, file: !2371, line: 254, column: 8)
!15454 = distinct !DILexicalBlock(scope: !15450, file: !2371, line: 250, column: 20)
!15455 = !DILocation(line: 254, column: 8, scope: !15454)
!15456 = !DILocation(line: 255, column: 9, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15453, file: !2371, line: 254, column: 17)
!15458 = !DILocation(line: 258, column: 9, scope: !15457)
!15459 = !DILocation(line: 261, column: 28, scope: !15457)
!15460 = !DILocation(line: 261, column: 10, scope: !15457)
!15461 = !DILocation(line: 261, column: 17, scope: !15457)
!15462 = !DILocation(line: 261, column: 26, scope: !15457)
!15463 = !DILocation(line: 262, column: 4, scope: !15457)
!15464 = !DILocation(line: 263, column: 9, scope: !15454)
!15465 = !DILocation(line: 263, column: 16, scope: !15454)
!15466 = !DILocation(line: 263, column: 28, scope: !15454)
!15467 = !DILocation(line: 264, column: 3, scope: !15454)
!15468 = !DILocation(line: 246, column: 60, scope: !2619)
!15469 = distinct !{!15469, !15444, !15470}
!15470 = !DILocation(line: 265, column: 2, scope: !2620)
!15471 = !DILocation(line: 266, column: 1, scope: !2602)
!15472 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !992, file: !992, line: 1814, type: !7970, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15473)
!15473 = !{!15474, !15475}
!15474 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15472, file: !992, line: 1814, type: !1268)
!15475 = !DILocalVariable(name: "priority", arg: 2, scope: !15472, file: !992, line: 1814, type: !111)
!15476 = !DILocation(line: 0, scope: !15472)
!15477 = !DILocation(line: 1822, column: 48, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15479, file: !992, line: 1821, column: 3)
!15479 = distinct !DILexicalBlock(scope: !15472, file: !992, line: 1816, column: 7)
!15480 = !DILocation(line: 1822, column: 32, scope: !15478)
!15481 = !DILocation(line: 1822, column: 40, scope: !15478)
!15482 = !DILocation(line: 1822, column: 5, scope: !15478)
!15483 = !DILocation(line: 1822, column: 46, scope: !15478)
!15484 = !DILocation(line: 1824, column: 1, scope: !15472)
!15485 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15403, file: !15403, line: 32, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!15486 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15487, file: !15487, line: 215, type: !15384, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15488)
!15487 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15488 = !{!15489}
!15489 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15486, file: !15487, line: 215, type: !2463)
!15490 = !DILocation(line: 0, scope: !15486)
!15491 = !DILocation(line: 217, column: 21, scope: !15486)
!15492 = !DILocation(line: 217, column: 34, scope: !15486)
!15493 = !DILocation(line: 221, column: 21, scope: !15486)
!15494 = !DILocation(line: 221, column: 34, scope: !15486)
!15495 = !DILocation(line: 223, column: 27, scope: !15486)
!15496 = !DILocation(line: 223, column: 33, scope: !15486)
!15497 = !DILocation(line: 224, column: 27, scope: !15486)
!15498 = !DILocation(line: 224, column: 32, scope: !15486)
!15499 = !DILocation(line: 230, column: 2, scope: !15486)
!15500 = !DILocation(line: 239, column: 24, scope: !15486)
!15501 = !DILocation(line: 240, column: 1, scope: !15486)
!15502 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2371, file: !2371, line: 399, type: !15503, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15505)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!160}
!15505 = !{!15506}
!15506 = !DILocalVariable(name: "stack_ptr", scope: !15502, file: !2371, line: 401, type: !160)
!15507 = !DILocation(line: 404, column: 2, scope: !15502)
!15508 = !DILocation(line: 416, column: 24, scope: !15502)
!15509 = !DILocation(line: 418, column: 14, scope: !15502)
!15510 = !DILocation(line: 0, scope: !15502)
!15511 = !DILocation(line: 423, column: 2, scope: !15502)
!15512 = !DILocation(line: 424, column: 2, scope: !15502)
!15513 = !DILocation(line: 426, column: 2, scope: !15502)
!15514 = !DILocation(line: 428, column: 2, scope: !15502)
!15515 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2371, file: !2371, line: 432, type: !15516, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15518)
!15516 = !DISubroutineType(types: !15517)
!15517 = !{null, !160}
!15518 = !{!15519}
!15519 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15515, file: !2371, line: 432, type: !160)
!15520 = !DILocation(line: 0, scope: !15515)
!15521 = !DILocation(line: 435, column: 2, scope: !15515)
!15522 = !DILocation(line: 445, column: 2, scope: !15515)
!15523 = distinct !DISubprogram(name: "bg_thread_main", scope: !2371, file: !2371, line: 277, type: !312, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2367, retainedNodes: !15524)
!15524 = !{!15525, !15526, !15527}
!15525 = !DILocalVariable(name: "unused1", arg: 1, scope: !15523, file: !2371, line: 277, type: !102)
!15526 = !DILocalVariable(name: "unused2", arg: 2, scope: !15523, file: !2371, line: 277, type: !102)
!15527 = !DILocalVariable(name: "unused3", arg: 3, scope: !15523, file: !2371, line: 277, type: !102)
!15528 = !DILocation(line: 0, scope: !15523)
!15529 = !DILocation(line: 291, column: 20, scope: !15523)
!15530 = !DILocation(line: 293, column: 2, scope: !15523)
!15531 = !DILocation(line: 297, column: 2, scope: !15523)
!15532 = !DILocation(line: 305, column: 2, scope: !15523)
!15533 = !DILocation(line: 307, column: 2, scope: !15523)
!15534 = !DILocation(line: 330, column: 8, scope: !15523)
!15535 = !DILocation(line: 333, column: 34, scope: !15523)
!15536 = !DILocation(line: 339, column: 1, scope: !15523)
!15537 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2633, file: !2633, line: 45, type: !15538, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15546)
!15538 = !DISubroutineType(types: !15539)
!15539 = !{null, !15540, !102}
!15540 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !127, line: 103, baseType: !15541)
!15541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15542, size: 32)
!15542 = !DISubroutineType(types: !15543)
!15543 = !{null, !15544, !102}
!15544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15545, size: 32)
!15545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2638)
!15546 = !{!15547, !15548}
!15547 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15537, file: !2633, line: 45, type: !15540)
!15548 = !DILocalVariable(name: "user_data", arg: 2, scope: !15537, file: !2633, line: 45, type: !102)
!15549 = !DILocation(line: 0, scope: !15537)
!15550 = !DILocation(line: 71, column: 1, scope: !15537)
!15551 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2633, file: !2633, line: 73, type: !15538, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15552)
!15552 = !{!15553, !15554}
!15553 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15551, file: !2633, line: 73, type: !15540)
!15554 = !DILocalVariable(name: "user_data", arg: 2, scope: !15551, file: !2633, line: 73, type: !102)
!15555 = !DILocation(line: 0, scope: !15551)
!15556 = !DILocation(line: 95, column: 1, scope: !15551)
!15557 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2633, file: !2633, line: 97, type: !8981, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !2571)
!15558 = !DILocation(line: 1031, column: 3, scope: !15559, inlinedAt: !15562)
!15559 = distinct !DISubprogram(name: "__get_IPSR", scope: !7930, file: !7930, line: 1027, type: !8017, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15560)
!15560 = !{!15561}
!15561 = !DILocalVariable(name: "result", scope: !15559, file: !7930, line: 1029, type: !111)
!15562 = distinct !DILocation(line: 48, column: 10, scope: !15563, inlinedAt: !15564)
!15563 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8980, file: !8980, line: 46, type: !8981, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !2571)
!15564 = distinct !DILocation(line: 99, column: 9, scope: !15557)
!15565 = !{i64 3755261}
!15566 = !DILocation(line: 0, scope: !15559, inlinedAt: !15562)
!15567 = !DILocation(line: 48, column: 9, scope: !15563, inlinedAt: !15564)
!15568 = !DILocation(line: 99, column: 2, scope: !15557)
!15569 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2633, file: !2633, line: 106, type: !323, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !2571)
!15570 = !DILocation(line: 108, column: 2, scope: !15569)
!15571 = !DILocation(line: 108, column: 17, scope: !15569)
!15572 = !DILocation(line: 108, column: 30, scope: !15569)
!15573 = !DILocation(line: 109, column: 1, scope: !15569)
!15574 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2633, file: !2633, line: 116, type: !323, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !2571)
!15575 = !DILocation(line: 118, column: 2, scope: !15574)
!15576 = !DILocation(line: 118, column: 17, scope: !15574)
!15577 = !DILocation(line: 118, column: 30, scope: !15574)
!15578 = !DILocation(line: 119, column: 1, scope: !15574)
!15579 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2633, file: !2633, line: 126, type: !8981, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !2571)
!15580 = !DILocation(line: 128, column: 10, scope: !15579)
!15581 = !DILocation(line: 128, column: 25, scope: !15579)
!15582 = !DILocation(line: 128, column: 38, scope: !15579)
!15583 = !DILocation(line: 128, column: 53, scope: !15579)
!15584 = !DILocation(line: 128, column: 2, scope: !15579)
!15585 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2633, file: !2633, line: 187, type: !15586, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15588)
!15586 = !DISubroutineType(types: !15587)
!15587 = !{!103, !2637, !108}
!15588 = !{!15589, !15590}
!15589 = !DILocalVariable(name: "thread", arg: 1, scope: !15585, file: !2633, line: 187, type: !2637)
!15590 = !DILocalVariable(name: "value", arg: 2, scope: !15585, file: !2633, line: 187, type: !108)
!15591 = !DILocation(line: 0, scope: !15585)
!15592 = !DILocation(line: 206, column: 2, scope: !15585)
!15593 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2633, file: !2633, line: 238, type: !15594, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15596)
!15594 = !DISubroutineType(types: !15595)
!15595 = !{!108, !2637}
!15596 = !{!15597}
!15597 = !DILocalVariable(name: "thread", arg: 1, scope: !15593, file: !2633, line: 238, type: !2637)
!15598 = !DILocation(line: 0, scope: !15593)
!15599 = !DILocation(line: 244, column: 2, scope: !15593)
!15600 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2633, file: !2633, line: 248, type: !15601, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15603)
!15601 = !DISubroutineType(types: !15602)
!15602 = !{!103, !2636, !160, !156}
!15603 = !{!15604, !15605, !15606}
!15604 = !DILocalVariable(name: "thread", arg: 1, scope: !15600, file: !2633, line: 248, type: !2636)
!15605 = !DILocalVariable(name: "buf", arg: 2, scope: !15600, file: !2633, line: 248, type: !160)
!15606 = !DILocalVariable(name: "size", arg: 3, scope: !15600, file: !2633, line: 248, type: !156)
!15607 = !DILocation(line: 0, scope: !15600)
!15608 = !DILocation(line: 257, column: 2, scope: !15600)
!15609 = !DILocation(line: 0, scope: !2632)
!15610 = !DILocation(line: 281, column: 11, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !2632, file: !2633, line: 281, column: 6)
!15612 = !DILocation(line: 281, column: 20, scope: !15611)
!15613 = !DILocation(line: 275, column: 45, scope: !2632)
!15614 = !DILocation(line: 285, column: 10, scope: !2632)
!15615 = !DILocation(line: 0, scope: !2755)
!15616 = !DILocation(line: 293, column: 39, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !2755, file: !2633, line: 293, column: 2)
!15618 = !DILocation(line: 293, column: 2, scope: !2755)
!15619 = !DILocation(line: 273, column: 14, scope: !2632)
!15620 = !DILocation(line: 309, column: 2, scope: !2632)
!15621 = !DILocation(line: 309, column: 11, scope: !2632)
!15622 = !DILocation(line: 311, column: 2, scope: !2632)
!15623 = !DILocation(line: 293, column: 26, scope: !15617)
!15624 = !DILocation(line: 294, column: 9, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15617, file: !2633, line: 293, column: 54)
!15626 = !DILocation(line: 295, column: 21, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15625, file: !2633, line: 295, column: 7)
!15628 = !DILocation(line: 295, column: 28, scope: !15627)
!15629 = !DILocation(line: 295, column: 7, scope: !15625)
!15630 = !DILocation(line: 299, column: 25, scope: !15625)
!15631 = !DILocation(line: 299, column: 41, scope: !15625)
!15632 = !DILocation(line: 300, column: 7, scope: !15625)
!15633 = !DILocation(line: 300, column: 26, scope: !15625)
!15634 = !DILocation(line: 299, column: 10, scope: !15625)
!15635 = !DILocation(line: 299, column: 7, scope: !15625)
!15636 = !DILocation(line: 302, column: 16, scope: !15625)
!15637 = !DILocation(line: 304, column: 20, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15625, file: !2633, line: 304, column: 7)
!15639 = !DILocation(line: 304, column: 7, scope: !15625)
!15640 = !DILocation(line: 305, column: 26, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15638, file: !2633, line: 304, column: 26)
!15642 = !DILocation(line: 305, column: 42, scope: !15641)
!15643 = !DILocation(line: 305, column: 11, scope: !15641)
!15644 = !DILocation(line: 305, column: 8, scope: !15641)
!15645 = !DILocation(line: 306, column: 3, scope: !15641)
!15646 = !DILocation(line: 293, column: 50, scope: !15617)
!15647 = !DILocation(line: 312, column: 1, scope: !2632)
!15648 = distinct !DISubprogram(name: "copy_bytes", scope: !2633, file: !2633, line: 261, type: !15649, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15651)
!15649 = !DISubroutineType(types: !15650)
!15650 = !{!156, !160, !156, !108, !156}
!15651 = !{!15652, !15653, !15654, !15655, !15656}
!15652 = !DILocalVariable(name: "dest", arg: 1, scope: !15648, file: !2633, line: 261, type: !160)
!15653 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15648, file: !2633, line: 261, type: !156)
!15654 = !DILocalVariable(name: "src", arg: 3, scope: !15648, file: !2633, line: 261, type: !108)
!15655 = !DILocalVariable(name: "src_size", arg: 4, scope: !15648, file: !2633, line: 261, type: !156)
!15656 = !DILocalVariable(name: "bytes_to_copy", scope: !15648, file: !2633, line: 263, type: !156)
!15657 = !DILocation(line: 0, scope: !15648)
!15658 = !DILocation(line: 265, column: 18, scope: !15648)
!15659 = !DILocation(line: 266, column: 2, scope: !15648)
!15660 = !DILocation(line: 268, column: 2, scope: !15648)
!15661 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2633, file: !2633, line: 383, type: !15662, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15664)
!15662 = !DISubroutineType(types: !15663)
!15663 = !{null, !2637}
!15664 = !{!15665}
!15665 = !DILocalVariable(name: "thread", arg: 1, scope: !15661, file: !2633, line: 383, type: !2637)
!15666 = !DILocation(line: 0, scope: !15661)
!15667 = !DILocation(line: 387, column: 2, scope: !15661)
!15668 = !DILocation(line: 388, column: 1, scope: !15661)
!15669 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2633, file: !2633, line: 528, type: !15670, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15677)
!15670 = !DISubroutineType(types: !15671)
!15671 = !{!160, !2637, !15672, !156, !310, !102, !102, !102, !103, !111, !108}
!15672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15673, size: 32)
!15673 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !15674)
!15674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !15675)
!15675 = !{!15676}
!15676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15674, file: !305, line: 48, baseType: !110, size: 8)
!15677 = !{!15678, !15679, !15680, !15681, !15682, !15683, !15684, !15685, !15686, !15687, !15688}
!15678 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15669, file: !2633, line: 528, type: !2637)
!15679 = !DILocalVariable(name: "stack", arg: 2, scope: !15669, file: !2633, line: 529, type: !15672)
!15680 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15669, file: !2633, line: 529, type: !156)
!15681 = !DILocalVariable(name: "entry", arg: 4, scope: !15669, file: !2633, line: 530, type: !310)
!15682 = !DILocalVariable(name: "p1", arg: 5, scope: !15669, file: !2633, line: 531, type: !102)
!15683 = !DILocalVariable(name: "p2", arg: 6, scope: !15669, file: !2633, line: 531, type: !102)
!15684 = !DILocalVariable(name: "p3", arg: 7, scope: !15669, file: !2633, line: 531, type: !102)
!15685 = !DILocalVariable(name: "prio", arg: 8, scope: !15669, file: !2633, line: 532, type: !103)
!15686 = !DILocalVariable(name: "options", arg: 9, scope: !15669, file: !2633, line: 532, type: !111)
!15687 = !DILocalVariable(name: "name", arg: 10, scope: !15669, file: !2633, line: 532, type: !108)
!15688 = !DILocalVariable(name: "stack_ptr", scope: !15669, file: !2633, line: 534, type: !160)
!15689 = !DILocation(line: 0, scope: !15669)
!15690 = !DILocation(line: 536, column: 2, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15692, file: !2633, line: 536, column: 2)
!15692 = distinct !DILexicalBlock(scope: !15693, file: !2633, line: 536, column: 2)
!15693 = distinct !DILexicalBlock(scope: !15669, file: !2633, line: 536, column: 2)
!15694 = !DILocation(line: 536, column: 2, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15691, file: !2633, line: 536, column: 2)
!15696 = !DILocation(line: 550, column: 28, scope: !15669)
!15697 = !DILocation(line: 550, column: 2, scope: !15669)
!15698 = !DILocation(line: 553, column: 34, scope: !15669)
!15699 = !DILocation(line: 553, column: 2, scope: !15669)
!15700 = !DILocation(line: 554, column: 14, scope: !15669)
!15701 = !DILocation(line: 564, column: 2, scope: !15669)
!15702 = !DILocation(line: 567, column: 14, scope: !15669)
!15703 = !DILocation(line: 567, column: 24, scope: !15669)
!15704 = !DILocation(line: 612, column: 7, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15669, file: !2633, line: 612, column: 6)
!15706 = !DILocation(line: 612, column: 6, scope: !15669)
!15707 = !DILocation(line: 627, column: 40, scope: !15669)
!15708 = !DILocation(line: 637, column: 2, scope: !15669)
!15709 = !DILocation(line: 613, column: 15, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15705, file: !2633, line: 612, column: 17)
!15711 = !DILocation(line: 613, column: 29, scope: !15710)
!15712 = !DILocation(line: 638, column: 1, scope: !15669)
!15713 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !15383, file: !15383, line: 78, type: !15714, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15716)
!15714 = !DISubroutineType(types: !15715)
!15715 = !{!122, !102}
!15716 = !{!15717}
!15717 = !DILocalVariable(name: "entry_point", arg: 1, scope: !15713, file: !15383, line: 78, type: !102)
!15718 = !DILocation(line: 0, scope: !15713)
!15719 = !DILocation(line: 80, column: 21, scope: !15713)
!15720 = !DILocation(line: 80, column: 2, scope: !15713)
!15721 = distinct !DISubprogram(name: "z_waitq_init", scope: !15722, file: !15722, line: 47, type: !15723, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15725)
!15722 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15723 = !DISubroutineType(types: !15724)
!15724 = !{null, !2668}
!15725 = !{!15726}
!15726 = !DILocalVariable(name: "w", arg: 1, scope: !15721, file: !15722, line: 47, type: !2668)
!15727 = !DILocation(line: 0, scope: !15721)
!15728 = !DILocation(line: 49, column: 21, scope: !15721)
!15729 = !DILocation(line: 49, column: 2, scope: !15721)
!15730 = !DILocation(line: 50, column: 1, scope: !15721)
!15731 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2633, file: !2633, line: 791, type: !15732, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15735)
!15732 = !DISubroutineType(types: !15733)
!15733 = !{null, !15734, !103, !111, !32}
!15734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!15735 = !{!15736, !15737, !15738, !15739}
!15736 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15731, file: !2633, line: 791, type: !15734)
!15737 = !DILocalVariable(name: "priority", arg: 2, scope: !15731, file: !2633, line: 791, type: !103)
!15738 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15731, file: !2633, line: 792, type: !111)
!15739 = !DILocalVariable(name: "options", arg: 4, scope: !15731, file: !2633, line: 792, type: !32)
!15740 = !DILocation(line: 0, scope: !15731)
!15741 = !DILocation(line: 795, column: 15, scope: !15731)
!15742 = !DILocation(line: 795, column: 25, scope: !15731)
!15743 = !DILocation(line: 796, column: 30, scope: !15731)
!15744 = !DILocation(line: 796, column: 15, scope: !15731)
!15745 = !DILocation(line: 796, column: 28, scope: !15731)
!15746 = !DILocation(line: 797, column: 30, scope: !15731)
!15747 = !DILocation(line: 797, column: 15, scope: !15731)
!15748 = !DILocation(line: 797, column: 28, scope: !15731)
!15749 = !DILocation(line: 799, column: 22, scope: !15731)
!15750 = !DILocation(line: 799, column: 15, scope: !15731)
!15751 = !DILocation(line: 799, column: 20, scope: !15731)
!15752 = !DILocation(line: 801, column: 15, scope: !15731)
!15753 = !DILocation(line: 801, column: 28, scope: !15731)
!15754 = !DILocation(line: 814, column: 2, scope: !15731)
!15755 = !DILocation(line: 815, column: 1, scope: !15731)
!15756 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2633, file: !2633, line: 449, type: !15757, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15759)
!15757 = !DISubroutineType(types: !15758)
!15758 = !{!160, !2637, !15672, !156}
!15759 = !{!15760, !15761, !15762, !15763, !15764, !15765, !15766, !15767}
!15760 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15756, file: !2633, line: 449, type: !2637)
!15761 = !DILocalVariable(name: "stack", arg: 2, scope: !15756, file: !2633, line: 450, type: !15672)
!15762 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15756, file: !2633, line: 450, type: !156)
!15763 = !DILocalVariable(name: "stack_obj_size", scope: !15756, file: !2633, line: 452, type: !156)
!15764 = !DILocalVariable(name: "stack_buf_size", scope: !15756, file: !2633, line: 452, type: !156)
!15765 = !DILocalVariable(name: "stack_ptr", scope: !15756, file: !2633, line: 453, type: !160)
!15766 = !DILocalVariable(name: "stack_buf_start", scope: !15756, file: !2633, line: 453, type: !160)
!15767 = !DILocalVariable(name: "delta", scope: !15756, file: !2633, line: 454, type: !156)
!15768 = !DILocation(line: 0, scope: !15756)
!15769 = !DILocation(line: 465, column: 20, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15756, file: !2633, line: 463, column: 2)
!15771 = !DILocation(line: 466, column: 21, scope: !15770)
!15772 = !DILocation(line: 473, column: 28, scope: !15756)
!15773 = !DILocation(line: 514, column: 33, scope: !15756)
!15774 = !DILocation(line: 514, column: 25, scope: !15756)
!15775 = !DILocation(line: 514, column: 31, scope: !15756)
!15776 = !DILocation(line: 515, column: 25, scope: !15756)
!15777 = !DILocation(line: 515, column: 30, scope: !15756)
!15778 = !DILocation(line: 516, column: 25, scope: !15756)
!15779 = !DILocation(line: 516, column: 31, scope: !15756)
!15780 = !DILocation(line: 520, column: 2, scope: !15756)
!15781 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !305, file: !305, line: 331, type: !15782, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15784)
!15782 = !DISubroutineType(types: !15783)
!15783 = !{!160, !15672}
!15784 = !{!15785}
!15785 = !DILocalVariable(name: "sym", arg: 1, scope: !15781, file: !305, line: 331, type: !15672)
!15786 = !DILocation(line: 0, scope: !15781)
!15787 = !DILocation(line: 333, column: 21, scope: !15781)
!15788 = !DILocation(line: 333, column: 2, scope: !15781)
!15789 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15790, file: !15790, line: 40, type: !15791, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15793)
!15790 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15791 = !DISubroutineType(types: !15792)
!15792 = !{null, !15734}
!15793 = !{!15794}
!15794 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15789, file: !15790, line: 40, type: !15734)
!15795 = !DILocation(line: 0, scope: !15789)
!15796 = !DILocation(line: 42, column: 31, scope: !15789)
!15797 = !DILocation(line: 42, column: 2, scope: !15789)
!15798 = !DILocation(line: 43, column: 1, scope: !15789)
!15799 = distinct !DISubprogram(name: "z_init_timeout", scope: !15790, file: !15790, line: 25, type: !2694, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15800)
!15800 = !{!15801}
!15801 = !DILocalVariable(name: "to", arg: 1, scope: !15799, file: !15790, line: 25, type: !2696)
!15802 = !DILocation(line: 0, scope: !15799)
!15803 = !DILocation(line: 27, column: 22, scope: !15799)
!15804 = !DILocation(line: 27, column: 2, scope: !15799)
!15805 = !DILocation(line: 28, column: 1, scope: !15799)
!15806 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !15807, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15809)
!15807 = !DISubroutineType(types: !15808)
!15808 = !{null, !2742}
!15809 = !{!15810}
!15810 = !DILocalVariable(name: "node", arg: 1, scope: !15806, file: !136, line: 211, type: !2742)
!15811 = !DILocation(line: 0, scope: !15806)
!15812 = !DILocation(line: 213, column: 8, scope: !15806)
!15813 = !DILocation(line: 213, column: 13, scope: !15806)
!15814 = !DILocation(line: 214, column: 8, scope: !15806)
!15815 = !DILocation(line: 214, column: 13, scope: !15806)
!15816 = !DILocation(line: 215, column: 1, scope: !15806)
!15817 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !15818, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15821)
!15818 = !DISubroutineType(types: !15819)
!15819 = !{null, !15820}
!15820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!15821 = !{!15822}
!15822 = !DILocalVariable(name: "list", arg: 1, scope: !15817, file: !136, line: 197, type: !15820)
!15823 = !DILocation(line: 0, scope: !15817)
!15824 = !DILocation(line: 199, column: 8, scope: !15817)
!15825 = !DILocation(line: 199, column: 13, scope: !15817)
!15826 = !DILocation(line: 200, column: 8, scope: !15817)
!15827 = !DILocation(line: 200, column: 13, scope: !15817)
!15828 = !DILocation(line: 201, column: 1, scope: !15817)
!15829 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2633, file: !2633, line: 641, type: !15830, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15836)
!15830 = !DISubroutineType(types: !15831)
!15831 = !{!2636, !2637, !15672, !156, !310, !102, !102, !102, !103, !111, !15832}
!15832 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15833)
!15833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15834)
!15834 = !{!15835}
!15835 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15833, file: !105, line: 66, baseType: !104, size: 64)
!15836 = !{!15837, !15838, !15839, !15840, !15841, !15842, !15843, !15844, !15845, !15846}
!15837 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15829, file: !2633, line: 641, type: !2637)
!15838 = !DILocalVariable(name: "stack", arg: 2, scope: !15829, file: !2633, line: 642, type: !15672)
!15839 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15829, file: !2633, line: 643, type: !156)
!15840 = !DILocalVariable(name: "entry", arg: 4, scope: !15829, file: !2633, line: 643, type: !310)
!15841 = !DILocalVariable(name: "p1", arg: 5, scope: !15829, file: !2633, line: 644, type: !102)
!15842 = !DILocalVariable(name: "p2", arg: 6, scope: !15829, file: !2633, line: 644, type: !102)
!15843 = !DILocalVariable(name: "p3", arg: 7, scope: !15829, file: !2633, line: 644, type: !102)
!15844 = !DILocalVariable(name: "prio", arg: 8, scope: !15829, file: !2633, line: 645, type: !103)
!15845 = !DILocalVariable(name: "options", arg: 9, scope: !15829, file: !2633, line: 645, type: !111)
!15846 = !DILocalVariable(name: "delay", arg: 10, scope: !15829, file: !2633, line: 645, type: !15832)
!15847 = !DILocation(line: 0, scope: !15829)
!15848 = !DILocation(line: 1031, column: 3, scope: !15559, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 48, column: 10, scope: !15563, inlinedAt: !15850)
!15850 = distinct !DILocation(line: 647, column: 2, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15852, file: !2633, line: 647, column: 2)
!15852 = distinct !DILexicalBlock(scope: !15829, file: !2633, line: 647, column: 2)
!15853 = !DILocation(line: 0, scope: !15559, inlinedAt: !15849)
!15854 = !DILocation(line: 48, column: 9, scope: !15563, inlinedAt: !15850)
!15855 = !DILocation(line: 647, column: 2, scope: !15852)
!15856 = !DILocation(line: 647, column: 2, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15851, file: !2633, line: 647, column: 2)
!15858 = !DILocation(line: 649, column: 2, scope: !15829)
!15859 = !DILocation(line: 652, column: 7, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15829, file: !2633, line: 652, column: 6)
!15861 = !DILocation(line: 652, column: 6, scope: !15829)
!15862 = !DILocation(line: 653, column: 3, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15860, file: !2633, line: 652, column: 39)
!15864 = !DILocation(line: 654, column: 2, scope: !15863)
!15865 = !DILocation(line: 656, column: 2, scope: !15829)
!15866 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2633, file: !2633, line: 401, type: !15867, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15869)
!15867 = !DISubroutineType(types: !15868)
!15868 = !{null, !2637, !15832}
!15869 = !{!15870, !15871}
!15870 = !DILocalVariable(name: "thread", arg: 1, scope: !15866, file: !2633, line: 401, type: !2637)
!15871 = !DILocalVariable(name: "delay", arg: 2, scope: !15866, file: !2633, line: 401, type: !15832)
!15872 = !DILocation(line: 0, scope: !15866)
!15873 = !DILocation(line: 404, column: 6, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15866, file: !2633, line: 404, column: 6)
!15875 = !DILocation(line: 404, column: 6, scope: !15866)
!15876 = !DILocation(line: 405, column: 3, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15874, file: !2633, line: 404, column: 38)
!15878 = !DILocation(line: 406, column: 2, scope: !15877)
!15879 = !DILocation(line: 407, column: 3, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15874, file: !2633, line: 406, column: 9)
!15881 = !DILocation(line: 413, column: 1, scope: !15866)
!15882 = distinct !DISubprogram(name: "k_thread_start", scope: !5334, file: !5334, line: 205, type: !15883, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15885)
!15883 = !DISubroutineType(types: !15884)
!15884 = !{null, !2636}
!15885 = !{!15886}
!15886 = !DILocalVariable(name: "thread", arg: 1, scope: !15882, file: !5334, line: 205, type: !2636)
!15887 = !DILocation(line: 0, scope: !15882)
!15888 = !DILocation(line: 214, column: 2, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15882, file: !5334, line: 214, column: 2)
!15890 = !{i64 2155095059}
!15891 = !DILocation(line: 215, column: 2, scope: !15882)
!15892 = !DILocation(line: 216, column: 1, scope: !15882)
!15893 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15790, file: !15790, line: 47, type: !15867, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15894)
!15894 = !{!15895, !15896}
!15895 = !DILocalVariable(name: "thread", arg: 1, scope: !15893, file: !15790, line: 47, type: !2637)
!15896 = !DILocalVariable(name: "ticks", arg: 2, scope: !15893, file: !15790, line: 47, type: !15832)
!15897 = !DILocation(line: 0, scope: !15893)
!15898 = !DILocation(line: 49, column: 30, scope: !15893)
!15899 = !DILocation(line: 49, column: 2, scope: !15893)
!15900 = !DILocation(line: 50, column: 1, scope: !15893)
!15901 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2633, file: !2633, line: 748, type: !323, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15902)
!15902 = !{!15903, !15920}
!15903 = !DILocalVariable(name: "thread_data", scope: !15904, file: !2633, line: 750, type: !15905)
!15904 = distinct !DILexicalBlock(scope: !15901, file: !2633, line: 750, column: 2)
!15905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15906, size: 32)
!15906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !15907)
!15907 = !{!15908, !15909, !15910, !15911, !15912, !15913, !15914, !15915, !15916, !15917, !15918, !15919}
!15908 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15906, file: !127, line: 621, baseType: !2637, size: 32)
!15909 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15906, file: !127, line: 622, baseType: !15672, size: 32, offset: 32)
!15910 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15906, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!15911 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15906, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!15912 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15906, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!15913 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15906, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!15914 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15906, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!15915 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15906, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!15916 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15906, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!15917 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15906, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!15918 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15906, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!15919 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15906, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!15920 = !DILocalVariable(name: "thread_data", scope: !15921, file: !2633, line: 781, type: !15905)
!15921 = distinct !DILexicalBlock(scope: !15901, file: !2633, line: 781, column: 2)
!15922 = !DILocation(line: 0, scope: !15904)
!15923 = !DILocation(line: 750, column: 2, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15925, file: !2633, line: 750, column: 2)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2633, line: 750, column: 2)
!15926 = distinct !DILexicalBlock(scope: !15904, file: !2633, line: 750, column: 2)
!15927 = !DILocation(line: 750, column: 2, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15929, file: !2633, line: 750, column: 2)
!15929 = distinct !DILexicalBlock(scope: !15924, file: !2633, line: 750, column: 2)
!15930 = !DILocation(line: 750, column: 2, scope: !15925)
!15931 = !DILocation(line: 750, column: 2, scope: !15904)
!15932 = !DILocation(line: 780, column: 2, scope: !15901)
!15933 = !DILocation(line: 0, scope: !15921)
!15934 = !DILocation(line: 781, column: 2, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15936, file: !2633, line: 781, column: 2)
!15936 = distinct !DILexicalBlock(scope: !15937, file: !2633, line: 781, column: 2)
!15937 = distinct !DILexicalBlock(scope: !15921, file: !2633, line: 781, column: 2)
!15938 = !DILocation(line: 752, column: 17, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15926, file: !2633, line: 750, column: 38)
!15940 = !DILocation(line: 753, column: 17, scope: !15939)
!15941 = !DILocation(line: 754, column: 17, scope: !15939)
!15942 = !DILocation(line: 755, column: 17, scope: !15939)
!15943 = !DILocation(line: 756, column: 17, scope: !15939)
!15944 = !DILocation(line: 757, column: 17, scope: !15939)
!15945 = !DILocation(line: 758, column: 17, scope: !15939)
!15946 = !DILocation(line: 759, column: 17, scope: !15939)
!15947 = !DILocation(line: 760, column: 17, scope: !15939)
!15948 = !DILocation(line: 751, column: 3, scope: !15939)
!15949 = !DILocation(line: 763, column: 16, scope: !15939)
!15950 = !DILocation(line: 763, column: 29, scope: !15939)
!15951 = !DILocation(line: 763, column: 39, scope: !15939)
!15952 = !DILocation(line: 750, column: 2, scope: !15926)
!15953 = !DILocation(line: 750, column: 2, scope: !15929)
!15954 = distinct !{!15954, !15931, !15955}
!15955 = !DILocation(line: 764, column: 2, scope: !15904)
!15956 = !DILocation(line: 781, column: 2, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15958, file: !2633, line: 781, column: 2)
!15958 = distinct !DILexicalBlock(scope: !15935, file: !2633, line: 781, column: 2)
!15959 = !DILocation(line: 781, column: 2, scope: !15936)
!15960 = !DILocation(line: 781, column: 2, scope: !15921)
!15961 = !DILocation(line: 787, column: 2, scope: !15901)
!15962 = !DILocation(line: 788, column: 1, scope: !15901)
!15963 = !DILocation(line: 782, column: 20, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15965, file: !2633, line: 782, column: 7)
!15965 = distinct !DILexicalBlock(scope: !15937, file: !2633, line: 781, column: 38)
!15966 = !DILocation(line: 782, column: 31, scope: !15964)
!15967 = !DILocation(line: 782, column: 7, scope: !15965)
!15968 = !DILocation(line: 783, column: 37, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15964, file: !2633, line: 782, column: 51)
!15970 = !DILocation(line: 784, column: 10, scope: !15969)
!15971 = !DILocation(line: 783, column: 4, scope: !15969)
!15972 = !DILocation(line: 785, column: 3, scope: !15969)
!15973 = !DILocation(line: 781, column: 2, scope: !15937)
!15974 = !DILocation(line: 781, column: 2, scope: !15958)
!15975 = distinct !{!15975, !15960, !15976}
!15976 = !DILocation(line: 786, column: 2, scope: !15921)
!15977 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3974, file: !3974, line: 403, type: !3975, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15978)
!15978 = !{!15979}
!15979 = !DILocalVariable(name: "t", arg: 1, scope: !15977, file: !3974, line: 403, type: !112)
!15980 = !DILocation(line: 0, scope: !15977)
!15981 = !DILocalVariable(name: "t", arg: 1, scope: !15982, file: !3974, line: 102, type: !112)
!15982 = distinct !DISubprogram(name: "z_tmcvt", scope: !3974, file: !3974, line: 102, type: !3982, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !15983)
!15983 = !{!15981, !15984, !15985, !15986, !15987, !15988, !15989, !15990, !15991, !15992, !15993}
!15984 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15982, file: !3974, line: 102, type: !111)
!15985 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15982, file: !3974, line: 103, type: !111)
!15986 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15982, file: !3974, line: 103, type: !122)
!15987 = !DILocalVariable(name: "result32", arg: 5, scope: !15982, file: !3974, line: 104, type: !122)
!15988 = !DILocalVariable(name: "round_up", arg: 6, scope: !15982, file: !3974, line: 104, type: !122)
!15989 = !DILocalVariable(name: "round_off", arg: 7, scope: !15982, file: !3974, line: 105, type: !122)
!15990 = !DILocalVariable(name: "mul_ratio", scope: !15982, file: !3974, line: 107, type: !122)
!15991 = !DILocalVariable(name: "div_ratio", scope: !15982, file: !3974, line: 109, type: !122)
!15992 = !DILocalVariable(name: "off", scope: !15982, file: !3974, line: 116, type: !112)
!15993 = !DILocalVariable(name: "rdivisor", scope: !15994, file: !3974, line: 119, type: !111)
!15994 = distinct !DILexicalBlock(scope: !15995, file: !3974, line: 118, column: 18)
!15995 = distinct !DILexicalBlock(scope: !15982, file: !3974, line: 118, column: 6)
!15996 = !DILocation(line: 0, scope: !15982, inlinedAt: !15997)
!15997 = distinct !DILocation(line: 406, column: 9, scope: !15977)
!15998 = !DILocation(line: 145, column: 13, scope: !15999, inlinedAt: !15997)
!15999 = distinct !DILexicalBlock(scope: !16000, file: !3974, line: 144, column: 10)
!16000 = distinct !DILexicalBlock(scope: !16001, file: !3974, line: 142, column: 7)
!16001 = distinct !DILexicalBlock(scope: !16002, file: !3974, line: 141, column: 24)
!16002 = distinct !DILexicalBlock(scope: !16003, file: !3974, line: 141, column: 13)
!16003 = distinct !DILexicalBlock(scope: !15982, file: !3974, line: 134, column: 6)
!16004 = !DILocation(line: 406, column: 2, scope: !15977)
!16005 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2633, file: !2633, line: 817, type: !5213, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16006)
!16006 = !{!16007, !16008, !16009, !16010}
!16007 = !DILocalVariable(name: "entry", arg: 1, scope: !16005, file: !2633, line: 817, type: !310)
!16008 = !DILocalVariable(name: "p1", arg: 2, scope: !16005, file: !2633, line: 818, type: !102)
!16009 = !DILocalVariable(name: "p2", arg: 3, scope: !16005, file: !2633, line: 818, type: !102)
!16010 = !DILocalVariable(name: "p3", arg: 4, scope: !16005, file: !2633, line: 818, type: !102)
!16011 = !DILocation(line: 0, scope: !16005)
!16012 = !DILocation(line: 822, column: 2, scope: !16005)
!16013 = !DILocation(line: 822, column: 17, scope: !16005)
!16014 = !DILocation(line: 822, column: 30, scope: !16005)
!16015 = !DILocation(line: 823, column: 2, scope: !16005)
!16016 = !DILocation(line: 845, column: 2, scope: !16005)
!16017 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2633, file: !2633, line: 853, type: !16018, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16021)
!16018 = !DISubroutineType(types: !16019)
!16019 = !{!122, !16020}
!16020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!16021 = !{!16022, !16023}
!16022 = !DILocalVariable(name: "l", arg: 1, scope: !16017, file: !2633, line: 853, type: !16020)
!16023 = !DILocalVariable(name: "thread_cpu", scope: !16017, file: !2633, line: 855, type: !22)
!16024 = !DILocation(line: 0, scope: !16017)
!16025 = !DILocation(line: 855, column: 28, scope: !16017)
!16026 = !DILocation(line: 857, column: 17, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !16017, file: !2633, line: 857, column: 6)
!16028 = !DILocation(line: 857, column: 6, scope: !16017)
!16029 = !DILocation(line: 858, column: 19, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16031, file: !2633, line: 858, column: 7)
!16031 = distinct !DILexicalBlock(scope: !16027, file: !2633, line: 857, column: 24)
!16032 = !DILocation(line: 858, column: 42, scope: !16030)
!16033 = !DILocation(line: 858, column: 28, scope: !16030)
!16034 = !DILocation(line: 858, column: 25, scope: !16030)
!16035 = !DILocation(line: 858, column: 7, scope: !16031)
!16036 = !DILocation(line: 862, column: 2, scope: !16017)
!16037 = !DILocation(line: 863, column: 1, scope: !16017)
!16038 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2633, file: !2633, line: 865, type: !16018, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16039)
!16039 = !{!16040}
!16040 = !DILocalVariable(name: "l", arg: 1, scope: !16038, file: !2633, line: 865, type: !16020)
!16041 = !DILocation(line: 0, scope: !16038)
!16042 = !DILocation(line: 867, column: 9, scope: !16043)
!16043 = distinct !DILexicalBlock(scope: !16038, file: !2633, line: 867, column: 6)
!16044 = !DILocation(line: 867, column: 38, scope: !16043)
!16045 = !DILocation(line: 867, column: 24, scope: !16043)
!16046 = !DILocation(line: 867, column: 54, scope: !16043)
!16047 = !DILocation(line: 867, column: 43, scope: !16043)
!16048 = !DILocation(line: 867, column: 41, scope: !16043)
!16049 = !DILocation(line: 867, column: 20, scope: !16043)
!16050 = !DILocation(line: 867, column: 6, scope: !16038)
!16051 = !DILocation(line: 870, column: 16, scope: !16038)
!16052 = !DILocation(line: 871, column: 2, scope: !16038)
!16053 = !DILocation(line: 872, column: 1, scope: !16038)
!16054 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2633, file: !2633, line: 874, type: !16055, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16057)
!16055 = !DISubroutineType(types: !16056)
!16056 = !{null, !16020}
!16057 = !{!16058}
!16058 = !DILocalVariable(name: "l", arg: 1, scope: !16054, file: !2633, line: 874, type: !16020)
!16059 = !DILocation(line: 0, scope: !16054)
!16060 = !DILocation(line: 876, column: 32, scope: !16054)
!16061 = !DILocation(line: 876, column: 18, scope: !16054)
!16062 = !DILocation(line: 876, column: 48, scope: !16054)
!16063 = !DILocation(line: 876, column: 37, scope: !16054)
!16064 = !DILocation(line: 876, column: 35, scope: !16054)
!16065 = !DILocation(line: 876, column: 5, scope: !16054)
!16066 = !DILocation(line: 876, column: 16, scope: !16054)
!16067 = !DILocation(line: 877, column: 1, scope: !16054)
!16068 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2633, file: !2633, line: 888, type: !16069, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16071)
!16069 = !DISubroutineType(types: !16070)
!16070 = !{!103, !2637}
!16071 = !{!16072}
!16072 = !DILocalVariable(name: "thread", arg: 1, scope: !16068, file: !2633, line: 888, type: !2637)
!16073 = !DILocation(line: 0, scope: !16068)
!16074 = !DILocation(line: 893, column: 2, scope: !16068)
!16075 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2633, file: !2633, line: 897, type: !16076, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16078)
!16076 = !DISubroutineType(types: !16077)
!16077 = !{!103, !2637, !32}
!16078 = !{!16079, !16080}
!16079 = !DILocalVariable(name: "thread", arg: 1, scope: !16075, file: !2633, line: 897, type: !2637)
!16080 = !DILocalVariable(name: "options", arg: 2, scope: !16075, file: !2633, line: 897, type: !32)
!16081 = !DILocation(line: 0, scope: !16075)
!16082 = !DILocation(line: 902, column: 2, scope: !16075)
!16083 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2633, file: !2633, line: 1072, type: !16084, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16089)
!16084 = !DISubroutineType(types: !16085)
!16085 = !{!103, !2636, !16086}
!16086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16087, size: 32)
!16087 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !199, line: 234, baseType: !16088)
!16088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !199, line: 192, elements: !2571)
!16089 = !{!16090, !16091}
!16090 = !DILocalVariable(name: "thread", arg: 1, scope: !16083, file: !2633, line: 1072, type: !2636)
!16091 = !DILocalVariable(name: "stats", arg: 2, scope: !16083, file: !2633, line: 1073, type: !16086)
!16092 = !DILocation(line: 0, scope: !16083)
!16093 = !DILocation(line: 1075, column: 14, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16083, file: !2633, line: 1075, column: 6)
!16095 = !DILocation(line: 1075, column: 23, scope: !16094)
!16096 = !DILocation(line: 1086, column: 1, scope: !16083)
!16097 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2633, file: !2633, line: 1088, type: !16098, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !16100)
!16098 = !DISubroutineType(types: !16099)
!16099 = !{!103, !16086}
!16100 = !{!16101}
!16101 = !DILocalVariable(name: "stats", arg: 1, scope: !16097, file: !2633, line: 1088, type: !16086)
!16102 = !DILocation(line: 0, scope: !16097)
!16103 = !DILocation(line: 1094, column: 12, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16097, file: !2633, line: 1094, column: 6)
!16105 = !DILocation(line: 1120, column: 1, scope: !16097)
!16106 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !16107, file: !16107, line: 20, type: !323, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3680, retainedNodes: !2571)
!16107 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16108 = !DILocation(line: 30, column: 2, scope: !16106)
!16109 = !DILocation(line: 31, column: 1, scope: !16106)
!16110 = distinct !DISubprogram(name: "idle", scope: !16107, file: !16107, line: 33, type: !312, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3680, retainedNodes: !16111)
!16111 = !{!16112, !16113, !16114}
!16112 = !DILocalVariable(name: "unused1", arg: 1, scope: !16110, file: !16107, line: 33, type: !102)
!16113 = !DILocalVariable(name: "unused2", arg: 2, scope: !16110, file: !16107, line: 33, type: !102)
!16114 = !DILocalVariable(name: "unused3", arg: 3, scope: !16110, file: !16107, line: 33, type: !102)
!16115 = !DILocation(line: 0, scope: !16110)
!16116 = !DILocation(line: 39, column: 2, scope: !16117)
!16117 = distinct !DILexicalBlock(scope: !16118, file: !16107, line: 39, column: 2)
!16118 = distinct !DILexicalBlock(scope: !16110, file: !16107, line: 39, column: 2)
!16119 = !DILocation(line: 39, column: 2, scope: !16118)
!16120 = !DILocation(line: 39, column: 2, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16117, file: !16107, line: 39, column: 2)
!16122 = !DILocation(line: 55, column: 2, scope: !16123, inlinedAt: !16127)
!16123 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3680, retainedNodes: !16124)
!16124 = !{!16125, !16126}
!16125 = !DILocalVariable(name: "key", scope: !16123, file: !7609, line: 44, type: !32)
!16126 = !DILocalVariable(name: "tmp", scope: !16123, file: !7609, line: 53, type: !32)
!16127 = distinct !DILocation(line: 62, column: 10, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16110, file: !16107, line: 41, column: 15)
!16129 = !{i64 2282013}
!16130 = !DILocation(line: 0, scope: !16123, inlinedAt: !16127)
!16131 = !DILocation(line: 86, column: 3, scope: !16128)
!16132 = !DILocation(line: 41, column: 2, scope: !16110)
!16133 = distinct !{!16133, !16132, !16134}
!16134 = !DILocation(line: 105, column: 2, scope: !16110)
!16135 = distinct !DISubprogram(name: "k_cpu_idle", scope: !127, file: !127, line: 5627, type: !323, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3680, retainedNodes: !2571)
!16136 = !DILocation(line: 5629, column: 2, scope: !16135)
!16137 = !DILocation(line: 5630, column: 1, scope: !16135)
!16138 = !DISubprogram(name: "arch_cpu_idle", scope: !303, file: !303, line: 167, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!16139 = distinct !DISubprogram(name: "k_msgq_init", scope: !16140, file: !16140, line: 35, type: !16141, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16156)
!16140 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16141 = !DISubroutineType(types: !16142)
!16142 = !{null, !16143, !160, !156, !111}
!16143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16144, size: 32)
!16144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !16145)
!16145 = !{!16146, !16147, !16148, !16149, !16150, !16151, !16152, !16153, !16154, !16155}
!16146 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16144, file: !127, line: 4206, baseType: !3718, size: 64)
!16147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16144, file: !127, line: 4208, baseType: !3780, size: 32, offset: 64)
!16148 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !16144, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!16149 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !16144, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!16150 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !16144, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!16151 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !16144, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!16152 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !16144, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!16153 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !16144, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!16154 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !16144, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!16155 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !16144, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!16156 = !{!16157, !16158, !16159, !16160}
!16157 = !DILocalVariable(name: "msgq", arg: 1, scope: !16139, file: !16140, line: 35, type: !16143)
!16158 = !DILocalVariable(name: "buffer", arg: 2, scope: !16139, file: !16140, line: 35, type: !160)
!16159 = !DILocalVariable(name: "msg_size", arg: 3, scope: !16139, file: !16140, line: 35, type: !156)
!16160 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !16139, file: !16140, line: 36, type: !111)
!16161 = !DILocation(line: 0, scope: !16139)
!16162 = !DILocation(line: 38, column: 8, scope: !16139)
!16163 = !DILocation(line: 38, column: 17, scope: !16139)
!16164 = !DILocation(line: 39, column: 8, scope: !16139)
!16165 = !DILocation(line: 39, column: 17, scope: !16139)
!16166 = !DILocation(line: 40, column: 8, scope: !16139)
!16167 = !DILocation(line: 40, column: 21, scope: !16139)
!16168 = !DILocation(line: 41, column: 40, scope: !16139)
!16169 = !DILocation(line: 41, column: 28, scope: !16139)
!16170 = !DILocation(line: 41, column: 8, scope: !16139)
!16171 = !DILocation(line: 41, column: 19, scope: !16139)
!16172 = !DILocation(line: 42, column: 8, scope: !16139)
!16173 = !DILocation(line: 42, column: 17, scope: !16139)
!16174 = !DILocation(line: 43, column: 8, scope: !16139)
!16175 = !DILocation(line: 43, column: 18, scope: !16139)
!16176 = !DILocation(line: 44, column: 8, scope: !16139)
!16177 = !DILocation(line: 44, column: 18, scope: !16139)
!16178 = !DILocation(line: 45, column: 8, scope: !16139)
!16179 = !DILocation(line: 45, column: 14, scope: !16139)
!16180 = !DILocation(line: 46, column: 22, scope: !16139)
!16181 = !DILocation(line: 46, column: 2, scope: !16139)
!16182 = !DILocation(line: 47, column: 15, scope: !16139)
!16183 = !DILocation(line: 55, column: 1, scope: !16139)
!16184 = distinct !DISubprogram(name: "z_waitq_init", scope: !15722, file: !15722, line: 47, type: !16185, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16187)
!16185 = !DISubroutineType(types: !16186)
!16186 = !{null, !3717}
!16187 = !{!16188}
!16188 = !DILocalVariable(name: "w", arg: 1, scope: !16184, file: !15722, line: 47, type: !3717)
!16189 = !DILocation(line: 0, scope: !16184)
!16190 = !DILocation(line: 49, column: 21, scope: !16184)
!16191 = !DILocation(line: 49, column: 2, scope: !16184)
!16192 = !DILocation(line: 50, column: 1, scope: !16184)
!16193 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !16194, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16197)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{null, !16196}
!16196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 32)
!16197 = !{!16198}
!16198 = !DILocalVariable(name: "list", arg: 1, scope: !16193, file: !136, line: 197, type: !16196)
!16199 = !DILocation(line: 0, scope: !16193)
!16200 = !DILocation(line: 199, column: 8, scope: !16193)
!16201 = !DILocation(line: 199, column: 13, scope: !16193)
!16202 = !DILocation(line: 200, column: 8, scope: !16193)
!16203 = !DILocation(line: 200, column: 13, scope: !16193)
!16204 = !DILocation(line: 201, column: 1, scope: !16193)
!16205 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !16140, file: !16140, line: 57, type: !16206, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16208)
!16206 = !DISubroutineType(types: !16207)
!16207 = !{!103, !16143, !156, !111}
!16208 = !{!16209, !16210, !16211, !16212, !16213, !16214}
!16209 = !DILocalVariable(name: "msgq", arg: 1, scope: !16205, file: !16140, line: 57, type: !16143)
!16210 = !DILocalVariable(name: "msg_size", arg: 2, scope: !16205, file: !16140, line: 57, type: !156)
!16211 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !16205, file: !16140, line: 58, type: !111)
!16212 = !DILocalVariable(name: "buffer", scope: !16205, file: !16140, line: 60, type: !102)
!16213 = !DILocalVariable(name: "ret", scope: !16205, file: !16140, line: 61, type: !103)
!16214 = !DILocalVariable(name: "total_size", scope: !16205, file: !16140, line: 62, type: !156)
!16215 = !DILocation(line: 0, scope: !16205)
!16216 = !DILocation(line: 62, column: 2, scope: !16205)
!16217 = !DILocation(line: 66, column: 6, scope: !16218)
!16218 = distinct !DILexicalBlock(scope: !16205, file: !16140, line: 66, column: 6)
!16219 = !DILocation(line: 66, column: 6, scope: !16205)
!16220 = !DILocation(line: 69, column: 28, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16218, file: !16140, line: 68, column: 9)
!16222 = !DILocation(line: 69, column: 12, scope: !16221)
!16223 = !DILocation(line: 70, column: 14, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16221, file: !16140, line: 70, column: 7)
!16225 = !DILocation(line: 70, column: 7, scope: !16221)
!16226 = !DILocation(line: 71, column: 4, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16224, file: !16140, line: 70, column: 23)
!16228 = !DILocation(line: 72, column: 10, scope: !16227)
!16229 = !DILocation(line: 72, column: 16, scope: !16227)
!16230 = !DILocation(line: 74, column: 3, scope: !16227)
!16231 = !DILocation(line: 0, scope: !16218)
!16232 = !DILocation(line: 82, column: 1, scope: !16205)
!16233 = !DILocation(line: 81, column: 2, scope: !16205)
!16234 = distinct !DISubprogram(name: "size_mul_overflow", scope: !16235, file: !16235, line: 105, type: !16236, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16238)
!16235 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16236 = !DISubroutineType(types: !16237)
!16237 = !{!122, !156, !156, !3169}
!16238 = !{!16239, !16240, !16241}
!16239 = !DILocalVariable(name: "a", arg: 1, scope: !16234, file: !16235, line: 105, type: !156)
!16240 = !DILocalVariable(name: "b", arg: 2, scope: !16234, file: !16235, line: 105, type: !156)
!16241 = !DILocalVariable(name: "result", arg: 3, scope: !16234, file: !16235, line: 105, type: !3169)
!16242 = !DILocation(line: 0, scope: !16234)
!16243 = !DILocation(line: 107, column: 9, scope: !16234)
!16244 = !DILocation(line: 107, column: 2, scope: !16234)
!16245 = distinct !DISubprogram(name: "z_thread_malloc", scope: !16246, file: !16246, line: 102, type: !16247, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16248)
!16246 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16247 = !DISubroutineType(types: !3661)
!16248 = !{!16249}
!16249 = !DILocalVariable(name: "size", arg: 1, scope: !16245, file: !16246, line: 102, type: !156)
!16250 = !DILocation(line: 0, scope: !16245)
!16251 = !DILocation(line: 104, column: 9, scope: !16245)
!16252 = !DILocation(line: 104, column: 2, scope: !16245)
!16253 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !16140, file: !16140, line: 95, type: !16254, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16256)
!16254 = !DISubroutineType(types: !16255)
!16255 = !{!103, !16143}
!16256 = !{!16257}
!16257 = !DILocalVariable(name: "msgq", arg: 1, scope: !16253, file: !16140, line: 95, type: !16143)
!16258 = !DILocation(line: 0, scope: !16253)
!16259 = !DILocation(line: 99, column: 2, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16253, file: !16140, line: 99, column: 2)
!16261 = !DILocation(line: 99, column: 2, scope: !16253)
!16262 = !DILocation(line: 105, column: 13, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16253, file: !16140, line: 105, column: 6)
!16264 = !DILocation(line: 105, column: 19, scope: !16263)
!16265 = !DILocation(line: 105, column: 40, scope: !16263)
!16266 = !DILocation(line: 105, column: 6, scope: !16253)
!16267 = !DILocation(line: 106, column: 16, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16263, file: !16140, line: 105, column: 47)
!16269 = !DILocation(line: 106, column: 3, scope: !16268)
!16270 = !DILocation(line: 107, column: 15, scope: !16268)
!16271 = !DILocation(line: 108, column: 2, scope: !16268)
!16272 = !DILocation(line: 113, column: 1, scope: !16253)
!16273 = distinct !DISubprogram(name: "z_waitq_head", scope: !15722, file: !15722, line: 52, type: !16274, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16276)
!16274 = !DISubroutineType(types: !16275)
!16275 = !{!3700, !3717}
!16276 = !{!16277}
!16277 = !DILocalVariable(name: "w", arg: 1, scope: !16273, file: !15722, line: 52, type: !3717)
!16278 = !DILocation(line: 0, scope: !16273)
!16279 = !DILocation(line: 54, column: 52, scope: !16273)
!16280 = !DILocation(line: 54, column: 28, scope: !16273)
!16281 = !DILocation(line: 54, column: 9, scope: !16273)
!16282 = !DILocation(line: 54, column: 2, scope: !16273)
!16283 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !16284, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16286)
!16284 = !DISubroutineType(types: !16285)
!16285 = !{!3685, !16196}
!16286 = !{!16287}
!16287 = !DILocalVariable(name: "list", arg: 1, scope: !16283, file: !136, line: 294, type: !16196)
!16288 = !DILocation(line: 0, scope: !16283)
!16289 = !DILocation(line: 296, column: 9, scope: !16283)
!16290 = !DILocation(line: 296, column: 49, scope: !16283)
!16291 = !DILocation(line: 296, column: 2, scope: !16283)
!16292 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !16293, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16295)
!16293 = !DISubroutineType(types: !16294)
!16294 = !{!122, !16196}
!16295 = !{!16296}
!16296 = !DILocalVariable(name: "list", arg: 1, scope: !16292, file: !136, line: 266, type: !16196)
!16297 = !DILocation(line: 0, scope: !16292)
!16298 = !DILocation(line: 268, column: 15, scope: !16292)
!16299 = !DILocation(line: 268, column: 20, scope: !16292)
!16300 = !DILocation(line: 268, column: 2, scope: !16292)
!16301 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !16140, file: !16140, line: 116, type: !16302, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16308)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{!103, !16143, !13, !16304}
!16304 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16305)
!16305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16306)
!16306 = !{!16307}
!16307 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16305, file: !105, line: 66, baseType: !104, size: 64)
!16308 = !{!16309, !16310, !16311, !16312, !16313, !16318}
!16309 = !DILocalVariable(name: "msgq", arg: 1, scope: !16301, file: !16140, line: 116, type: !16143)
!16310 = !DILocalVariable(name: "data", arg: 2, scope: !16301, file: !16140, line: 116, type: !13)
!16311 = !DILocalVariable(name: "timeout", arg: 3, scope: !16301, file: !16140, line: 116, type: !16304)
!16312 = !DILocalVariable(name: "pending_thread", scope: !16301, file: !16140, line: 120, type: !3700)
!16313 = !DILocalVariable(name: "key", scope: !16301, file: !16140, line: 121, type: !16314)
!16314 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !16315)
!16315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !16316)
!16316 = !{!16317}
!16317 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16315, file: !152, line: 33, baseType: !103, size: 32)
!16318 = !DILocalVariable(name: "result", scope: !16301, file: !16140, line: 122, type: !103)
!16319 = !DILocation(line: 0, scope: !16301)
!16320 = !DILocation(line: 1031, column: 3, scope: !16321, inlinedAt: !16324)
!16321 = distinct !DISubprogram(name: "__get_IPSR", scope: !7930, file: !7930, line: 1027, type: !8017, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16322)
!16322 = !{!16323}
!16323 = !DILocalVariable(name: "result", scope: !16321, file: !7930, line: 1029, type: !111)
!16324 = distinct !DILocation(line: 48, column: 10, scope: !16325, inlinedAt: !16326)
!16325 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8980, file: !8980, line: 46, type: !8981, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !2571)
!16326 = distinct !DILocation(line: 118, column: 2, scope: !16327)
!16327 = distinct !DILexicalBlock(scope: !16328, file: !16140, line: 118, column: 2)
!16328 = distinct !DILexicalBlock(scope: !16301, file: !16140, line: 118, column: 2)
!16329 = !{i64 3734584}
!16330 = !DILocation(line: 0, scope: !16321, inlinedAt: !16324)
!16331 = !DILocation(line: 48, column: 9, scope: !16325, inlinedAt: !16326)
!16332 = !DILocation(line: 118, column: 2, scope: !16327)
!16333 = !DILocation(line: 118, column: 2, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16327, file: !16140, line: 118, column: 2)
!16335 = !DILocation(line: 124, column: 27, scope: !16301)
!16336 = !DILocalVariable(name: "l", arg: 1, scope: !16337, file: !152, line: 136, type: !16340)
!16337 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !16338, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16341)
!16338 = !DISubroutineType(types: !16339)
!16339 = !{!16314, !16340}
!16340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 32)
!16341 = !{!16336, !16342}
!16342 = !DILocalVariable(name: "k", scope: !16337, file: !152, line: 139, type: !16314)
!16343 = !DILocation(line: 0, scope: !16337, inlinedAt: !16344)
!16344 = distinct !DILocation(line: 124, column: 8, scope: !16301)
!16345 = !DILocation(line: 55, column: 2, scope: !16346, inlinedAt: !16350)
!16346 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16347)
!16347 = !{!16348, !16349}
!16348 = !DILocalVariable(name: "key", scope: !16346, file: !7609, line: 44, type: !32)
!16349 = !DILocalVariable(name: "tmp", scope: !16346, file: !7609, line: 53, type: !32)
!16350 = distinct !DILocation(line: 145, column: 10, scope: !16337, inlinedAt: !16344)
!16351 = !{i64 2288150}
!16352 = !DILocation(line: 0, scope: !16346, inlinedAt: !16350)
!16353 = !DILocation(line: 148, column: 2, scope: !16354, inlinedAt: !16344)
!16354 = distinct !DILexicalBlock(scope: !16355, file: !152, line: 148, column: 2)
!16355 = distinct !DILexicalBlock(scope: !16337, file: !152, line: 148, column: 2)
!16356 = !DILocation(line: 148, column: 2, scope: !16355, inlinedAt: !16344)
!16357 = !DILocation(line: 148, column: 2, scope: !16358, inlinedAt: !16344)
!16358 = distinct !DILexicalBlock(scope: !16354, file: !152, line: 148, column: 2)
!16359 = !DILocation(line: 160, column: 2, scope: !16337, inlinedAt: !16344)
!16360 = !DILocation(line: 128, column: 12, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16301, file: !16140, line: 128, column: 6)
!16362 = !DILocation(line: 128, column: 30, scope: !16361)
!16363 = !DILocation(line: 128, column: 22, scope: !16361)
!16364 = !DILocation(line: 128, column: 6, scope: !16301)
!16365 = !DILocation(line: 130, column: 49, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16361, file: !16140, line: 128, column: 40)
!16367 = !DILocation(line: 130, column: 20, scope: !16366)
!16368 = !DILocation(line: 131, column: 22, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16366, file: !16140, line: 131, column: 7)
!16370 = !DILocation(line: 131, column: 7, scope: !16366)
!16371 = !DILocation(line: 135, column: 38, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16369, file: !16140, line: 131, column: 31)
!16373 = !DILocation(line: 136, column: 17, scope: !16372)
!16374 = !DILocation(line: 135, column: 10, scope: !16372)
!16375 = !DILocalVariable(name: "thread", arg: 1, scope: !16376, file: !15403, line: 65, type: !3700)
!16376 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15403, file: !15403, line: 65, type: !16377, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16379)
!16377 = !DISubroutineType(types: !16378)
!16378 = !{null, !3700, !32}
!16379 = !{!16375, !16380}
!16380 = !DILocalVariable(name: "value", arg: 2, scope: !16376, file: !15403, line: 65, type: !32)
!16381 = !DILocation(line: 0, scope: !16376, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 138, column: 4, scope: !16372)
!16383 = !DILocation(line: 67, column: 15, scope: !16376, inlinedAt: !16382)
!16384 = !DILocation(line: 67, column: 33, scope: !16376, inlinedAt: !16382)
!16385 = !DILocation(line: 139, column: 4, scope: !16372)
!16386 = !DILocation(line: 140, column: 4, scope: !16372)
!16387 = !DILocation(line: 141, column: 4, scope: !16372)
!16388 = !DILocation(line: 144, column: 23, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16369, file: !16140, line: 142, column: 10)
!16390 = !DILocation(line: 144, column: 46, scope: !16389)
!16391 = !DILocation(line: 144, column: 10, scope: !16389)
!16392 = !DILocation(line: 145, column: 29, scope: !16389)
!16393 = !DILocation(line: 145, column: 20, scope: !16389)
!16394 = !DILocation(line: 146, column: 33, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16389, file: !16140, line: 146, column: 8)
!16396 = !DILocation(line: 146, column: 24, scope: !16395)
!16397 = !DILocation(line: 146, column: 8, scope: !16389)
!16398 = !DILocation(line: 147, column: 29, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16395, file: !16140, line: 146, column: 45)
!16400 = !DILocation(line: 147, column: 21, scope: !16399)
!16401 = !DILocation(line: 148, column: 4, scope: !16399)
!16402 = !DILocation(line: 149, column: 19, scope: !16389)
!16403 = !DILocation(line: 155, column: 2, scope: !16366)
!16404 = !DILocation(line: 155, column: 13, scope: !16361)
!16405 = !DILocation(line: 162, column: 3, scope: !16406)
!16406 = distinct !DILexicalBlock(scope: !16407, file: !16140, line: 158, column: 9)
!16407 = distinct !DILexicalBlock(scope: !16361, file: !16140, line: 155, column: 13)
!16408 = !DILocation(line: 162, column: 18, scope: !16406)
!16409 = !DILocation(line: 162, column: 28, scope: !16406)
!16410 = !DILocation(line: 164, column: 49, scope: !16406)
!16411 = !DILocation(line: 164, column: 12, scope: !16406)
!16412 = !DILocation(line: 166, column: 3, scope: !16406)
!16413 = !DILocation(line: 0, scope: !16361)
!16414 = !DILocalVariable(name: "key", arg: 2, scope: !16415, file: !152, line: 190, type: !16314)
!16415 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !16416, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16418)
!16416 = !DISubroutineType(types: !16417)
!16417 = !{null, !16340, !16314}
!16418 = !{!16419, !16414}
!16419 = !DILocalVariable(name: "l", arg: 1, scope: !16415, file: !152, line: 189, type: !16340)
!16420 = !DILocation(line: 0, scope: !16415, inlinedAt: !16421)
!16421 = distinct !DILocation(line: 171, column: 2, scope: !16301)
!16422 = !DILocation(line: 194, column: 2, scope: !16423, inlinedAt: !16421)
!16423 = distinct !DILexicalBlock(scope: !16424, file: !152, line: 194, column: 2)
!16424 = distinct !DILexicalBlock(scope: !16415, file: !152, line: 194, column: 2)
!16425 = !DILocation(line: 194, column: 2, scope: !16424, inlinedAt: !16421)
!16426 = !DILocation(line: 194, column: 2, scope: !16427, inlinedAt: !16421)
!16427 = distinct !DILexicalBlock(scope: !16423, file: !152, line: 194, column: 2)
!16428 = !DILocalVariable(name: "key", arg: 1, scope: !16429, file: !7609, line: 84, type: !32)
!16429 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16430)
!16430 = !{!16428}
!16431 = !DILocation(line: 0, scope: !16429, inlinedAt: !16432)
!16432 = distinct !DILocation(line: 215, column: 2, scope: !16415, inlinedAt: !16421)
!16433 = !DILocation(line: 95, column: 2, scope: !16429, inlinedAt: !16432)
!16434 = !{i64 2288967}
!16435 = !DILocation(line: 173, column: 2, scope: !16301)
!16436 = !DILocation(line: 174, column: 1, scope: !16301)
!16437 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !16140, file: !16140, line: 188, type: !16438, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16446)
!16438 = !DISubroutineType(types: !16439)
!16439 = !{null, !16143, !16440}
!16440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16441, size: 32)
!16441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !127, line: 4259, size: 96, elements: !16442)
!16442 = !{!16443, !16444, !16445}
!16443 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !16441, file: !127, line: 4261, baseType: !156, size: 32)
!16444 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !16441, file: !127, line: 4263, baseType: !111, size: 32, offset: 32)
!16445 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !16441, file: !127, line: 4265, baseType: !111, size: 32, offset: 64)
!16446 = !{!16447, !16448}
!16447 = !DILocalVariable(name: "msgq", arg: 1, scope: !16437, file: !16140, line: 188, type: !16143)
!16448 = !DILocalVariable(name: "attrs", arg: 2, scope: !16437, file: !16140, line: 188, type: !16440)
!16449 = !DILocation(line: 0, scope: !16437)
!16450 = !DILocation(line: 190, column: 26, scope: !16437)
!16451 = !DILocation(line: 190, column: 9, scope: !16437)
!16452 = !DILocation(line: 190, column: 18, scope: !16437)
!16453 = !DILocation(line: 191, column: 26, scope: !16437)
!16454 = !DILocation(line: 191, column: 9, scope: !16437)
!16455 = !DILocation(line: 191, column: 18, scope: !16437)
!16456 = !DILocation(line: 192, column: 27, scope: !16437)
!16457 = !DILocation(line: 192, column: 9, scope: !16437)
!16458 = !DILocation(line: 192, column: 19, scope: !16437)
!16459 = !DILocation(line: 193, column: 1, scope: !16437)
!16460 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !16140, file: !16140, line: 206, type: !16461, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16463)
!16461 = !DISubroutineType(types: !16462)
!16462 = !{!103, !16143, !102, !16304}
!16463 = !{!16464, !16465, !16466, !16467, !16468, !16469}
!16464 = !DILocalVariable(name: "msgq", arg: 1, scope: !16460, file: !16140, line: 206, type: !16143)
!16465 = !DILocalVariable(name: "data", arg: 2, scope: !16460, file: !16140, line: 206, type: !102)
!16466 = !DILocalVariable(name: "timeout", arg: 3, scope: !16460, file: !16140, line: 206, type: !16304)
!16467 = !DILocalVariable(name: "key", scope: !16460, file: !16140, line: 210, type: !16314)
!16468 = !DILocalVariable(name: "pending_thread", scope: !16460, file: !16140, line: 211, type: !3700)
!16469 = !DILocalVariable(name: "result", scope: !16460, file: !16140, line: 212, type: !103)
!16470 = !DILocation(line: 0, scope: !16460)
!16471 = !DILocation(line: 1031, column: 3, scope: !16321, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 48, column: 10, scope: !16325, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 208, column: 2, scope: !16474)
!16474 = distinct !DILexicalBlock(scope: !16475, file: !16140, line: 208, column: 2)
!16475 = distinct !DILexicalBlock(scope: !16460, file: !16140, line: 208, column: 2)
!16476 = !DILocation(line: 0, scope: !16321, inlinedAt: !16472)
!16477 = !DILocation(line: 48, column: 9, scope: !16325, inlinedAt: !16473)
!16478 = !DILocation(line: 208, column: 2, scope: !16474)
!16479 = !DILocation(line: 208, column: 2, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16474, file: !16140, line: 208, column: 2)
!16481 = !DILocation(line: 214, column: 27, scope: !16460)
!16482 = !DILocation(line: 0, scope: !16337, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 214, column: 8, scope: !16460)
!16484 = !DILocation(line: 55, column: 2, scope: !16346, inlinedAt: !16485)
!16485 = distinct !DILocation(line: 145, column: 10, scope: !16337, inlinedAt: !16483)
!16486 = !DILocation(line: 0, scope: !16346, inlinedAt: !16485)
!16487 = !DILocation(line: 148, column: 2, scope: !16354, inlinedAt: !16483)
!16488 = !DILocation(line: 148, column: 2, scope: !16355, inlinedAt: !16483)
!16489 = !DILocation(line: 148, column: 2, scope: !16358, inlinedAt: !16483)
!16490 = !DILocation(line: 160, column: 2, scope: !16337, inlinedAt: !16483)
!16491 = !DILocation(line: 218, column: 12, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16460, file: !16140, line: 218, column: 6)
!16493 = !DILocation(line: 218, column: 22, scope: !16492)
!16494 = !DILocation(line: 218, column: 6, scope: !16460)
!16495 = !DILocation(line: 220, column: 28, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16492, file: !16140, line: 218, column: 28)
!16497 = !DILocation(line: 220, column: 44, scope: !16496)
!16498 = !DILocation(line: 220, column: 9, scope: !16496)
!16499 = !DILocation(line: 221, column: 27, scope: !16496)
!16500 = !DILocation(line: 221, column: 18, scope: !16496)
!16501 = !DILocation(line: 222, column: 31, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16496, file: !16140, line: 222, column: 7)
!16503 = !DILocation(line: 222, column: 22, scope: !16502)
!16504 = !DILocation(line: 222, column: 7, scope: !16496)
!16505 = !DILocation(line: 223, column: 27, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16502, file: !16140, line: 222, column: 43)
!16507 = !DILocation(line: 223, column: 19, scope: !16506)
!16508 = !DILocation(line: 224, column: 3, scope: !16506)
!16509 = !DILocation(line: 225, column: 18, scope: !16496)
!16510 = !DILocation(line: 228, column: 49, scope: !16496)
!16511 = !DILocation(line: 228, column: 20, scope: !16496)
!16512 = !DILocation(line: 229, column: 22, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16496, file: !16140, line: 229, column: 7)
!16514 = !DILocation(line: 229, column: 7, scope: !16496)
!16515 = !DILocation(line: 233, column: 23, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16513, file: !16140, line: 229, column: 31)
!16517 = !DILocation(line: 233, column: 55, scope: !16516)
!16518 = !DILocation(line: 234, column: 17, scope: !16516)
!16519 = !DILocation(line: 233, column: 10, scope: !16516)
!16520 = !DILocation(line: 235, column: 29, scope: !16516)
!16521 = !DILocation(line: 235, column: 20, scope: !16516)
!16522 = !DILocation(line: 236, column: 33, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16516, file: !16140, line: 236, column: 8)
!16524 = !DILocation(line: 236, column: 24, scope: !16523)
!16525 = !DILocation(line: 236, column: 8, scope: !16516)
!16526 = !DILocation(line: 237, column: 29, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16523, file: !16140, line: 236, column: 45)
!16528 = !DILocation(line: 237, column: 21, scope: !16527)
!16529 = !DILocation(line: 238, column: 4, scope: !16527)
!16530 = !DILocation(line: 239, column: 19, scope: !16516)
!16531 = !DILocation(line: 0, scope: !16376, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 242, column: 4, scope: !16516)
!16533 = !DILocation(line: 67, column: 15, scope: !16376, inlinedAt: !16532)
!16534 = !DILocation(line: 67, column: 33, scope: !16376, inlinedAt: !16532)
!16535 = !DILocation(line: 243, column: 4, scope: !16516)
!16536 = !DILocation(line: 244, column: 4, scope: !16516)
!16537 = !DILocation(line: 248, column: 4, scope: !16516)
!16538 = !DILocation(line: 251, column: 13, scope: !16492)
!16539 = !DILocation(line: 258, column: 3, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !16140, line: 254, column: 9)
!16541 = distinct !DILexicalBlock(scope: !16492, file: !16140, line: 251, column: 13)
!16542 = !DILocation(line: 258, column: 18, scope: !16540)
!16543 = !DILocation(line: 258, column: 28, scope: !16540)
!16544 = !DILocation(line: 260, column: 49, scope: !16540)
!16545 = !DILocation(line: 260, column: 12, scope: !16540)
!16546 = !DILocation(line: 262, column: 3, scope: !16540)
!16547 = !DILocation(line: 0, scope: !16492)
!16548 = !DILocation(line: 0, scope: !16415, inlinedAt: !16549)
!16549 = distinct !DILocation(line: 267, column: 2, scope: !16460)
!16550 = !DILocation(line: 194, column: 2, scope: !16423, inlinedAt: !16549)
!16551 = !DILocation(line: 194, column: 2, scope: !16424, inlinedAt: !16549)
!16552 = !DILocation(line: 194, column: 2, scope: !16427, inlinedAt: !16549)
!16553 = !DILocation(line: 0, scope: !16429, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 215, column: 2, scope: !16415, inlinedAt: !16549)
!16555 = !DILocation(line: 95, column: 2, scope: !16429, inlinedAt: !16554)
!16556 = !DILocation(line: 269, column: 2, scope: !16460)
!16557 = !DILocation(line: 270, column: 1, scope: !16460)
!16558 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !16140, file: !16140, line: 284, type: !16559, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16561)
!16559 = !DISubroutineType(types: !16560)
!16560 = !{!103, !16143, !102}
!16561 = !{!16562, !16563, !16564, !16565}
!16562 = !DILocalVariable(name: "msgq", arg: 1, scope: !16558, file: !16140, line: 284, type: !16143)
!16563 = !DILocalVariable(name: "data", arg: 2, scope: !16558, file: !16140, line: 284, type: !102)
!16564 = !DILocalVariable(name: "key", scope: !16558, file: !16140, line: 286, type: !16314)
!16565 = !DILocalVariable(name: "result", scope: !16558, file: !16140, line: 287, type: !103)
!16566 = !DILocation(line: 0, scope: !16558)
!16567 = !DILocation(line: 289, column: 27, scope: !16558)
!16568 = !DILocation(line: 0, scope: !16337, inlinedAt: !16569)
!16569 = distinct !DILocation(line: 289, column: 8, scope: !16558)
!16570 = !DILocation(line: 55, column: 2, scope: !16346, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 145, column: 10, scope: !16337, inlinedAt: !16569)
!16572 = !DILocation(line: 0, scope: !16346, inlinedAt: !16571)
!16573 = !DILocation(line: 148, column: 2, scope: !16354, inlinedAt: !16569)
!16574 = !DILocation(line: 148, column: 2, scope: !16355, inlinedAt: !16569)
!16575 = !DILocation(line: 148, column: 2, scope: !16358, inlinedAt: !16569)
!16576 = !DILocation(line: 160, column: 2, scope: !16337, inlinedAt: !16569)
!16577 = !DILocation(line: 291, column: 12, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16558, file: !16140, line: 291, column: 6)
!16579 = !DILocation(line: 291, column: 22, scope: !16578)
!16580 = !DILocation(line: 291, column: 6, scope: !16558)
!16581 = !DILocation(line: 293, column: 28, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16578, file: !16140, line: 291, column: 28)
!16583 = !DILocation(line: 293, column: 44, scope: !16582)
!16584 = !DILocation(line: 293, column: 9, scope: !16582)
!16585 = !DILocation(line: 295, column: 2, scope: !16582)
!16586 = !DILocation(line: 0, scope: !16578)
!16587 = !DILocation(line: 0, scope: !16415, inlinedAt: !16588)
!16588 = distinct !DILocation(line: 302, column: 2, scope: !16558)
!16589 = !DILocation(line: 194, column: 2, scope: !16423, inlinedAt: !16588)
!16590 = !DILocation(line: 194, column: 2, scope: !16424, inlinedAt: !16588)
!16591 = !DILocation(line: 194, column: 2, scope: !16427, inlinedAt: !16588)
!16592 = !DILocation(line: 0, scope: !16429, inlinedAt: !16593)
!16593 = distinct !DILocation(line: 215, column: 2, scope: !16415, inlinedAt: !16588)
!16594 = !DILocation(line: 95, column: 2, scope: !16429, inlinedAt: !16593)
!16595 = !DILocation(line: 304, column: 2, scope: !16558)
!16596 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !16140, file: !16140, line: 318, type: !16597, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3682, retainedNodes: !16599)
!16597 = !DISubroutineType(types: !16598)
!16598 = !{null, !16143}
!16599 = !{!16600, !16601, !16602}
!16600 = !DILocalVariable(name: "msgq", arg: 1, scope: !16596, file: !16140, line: 318, type: !16143)
!16601 = !DILocalVariable(name: "key", scope: !16596, file: !16140, line: 320, type: !16314)
!16602 = !DILocalVariable(name: "pending_thread", scope: !16596, file: !16140, line: 321, type: !3700)
!16603 = !DILocation(line: 0, scope: !16596)
!16604 = !DILocation(line: 323, column: 27, scope: !16596)
!16605 = !DILocation(line: 0, scope: !16337, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 323, column: 8, scope: !16596)
!16607 = !DILocation(line: 55, column: 2, scope: !16346, inlinedAt: !16608)
!16608 = distinct !DILocation(line: 145, column: 10, scope: !16337, inlinedAt: !16606)
!16609 = !DILocation(line: 0, scope: !16346, inlinedAt: !16608)
!16610 = !DILocation(line: 148, column: 2, scope: !16354, inlinedAt: !16606)
!16611 = !DILocation(line: 148, column: 2, scope: !16355, inlinedAt: !16606)
!16612 = !DILocation(line: 148, column: 2, scope: !16358, inlinedAt: !16606)
!16613 = !DILocation(line: 160, column: 2, scope: !16337, inlinedAt: !16606)
!16614 = !DILocation(line: 328, column: 27, scope: !16596)
!16615 = !DILocation(line: 328, column: 65, scope: !16596)
!16616 = !DILocation(line: 328, column: 2, scope: !16596)
!16617 = !DILocation(line: 0, scope: !16376, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 329, column: 3, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16596, file: !16140, line: 328, column: 74)
!16620 = !DILocation(line: 67, column: 15, scope: !16376, inlinedAt: !16618)
!16621 = !DILocation(line: 67, column: 33, scope: !16376, inlinedAt: !16618)
!16622 = !DILocation(line: 330, column: 3, scope: !16619)
!16623 = distinct !{!16623, !16616, !16624}
!16624 = !DILocation(line: 331, column: 2, scope: !16596)
!16625 = !DILocation(line: 333, column: 8, scope: !16596)
!16626 = !DILocation(line: 333, column: 18, scope: !16596)
!16627 = !DILocation(line: 334, column: 25, scope: !16596)
!16628 = !DILocation(line: 334, column: 8, scope: !16596)
!16629 = !DILocation(line: 334, column: 17, scope: !16596)
!16630 = !DILocation(line: 336, column: 2, scope: !16596)
!16631 = !DILocation(line: 337, column: 1, scope: !16596)
!16632 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2866, file: !2866, line: 49, type: !16633, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16642)
!16633 = !DISubroutineType(types: !16634)
!16634 = !{!103, !16635}
!16635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16636, size: 32)
!16636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !16637)
!16637 = !{!16638, !16639, !16640, !16641}
!16638 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16636, file: !127, line: 2722, baseType: !2795, size: 64)
!16639 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16636, file: !127, line: 2724, baseType: !2777, size: 32, offset: 64)
!16640 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16636, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!16641 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16636, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!16642 = !{!16643}
!16643 = !DILocalVariable(name: "mutex", arg: 1, scope: !16632, file: !2866, line: 49, type: !16635)
!16644 = !DILocation(line: 0, scope: !16632)
!16645 = !DILocation(line: 51, column: 9, scope: !16632)
!16646 = !DILocation(line: 51, column: 15, scope: !16632)
!16647 = !DILocation(line: 52, column: 9, scope: !16632)
!16648 = !DILocation(line: 52, column: 20, scope: !16632)
!16649 = !DILocation(line: 54, column: 23, scope: !16632)
!16650 = !DILocation(line: 54, column: 2, scope: !16632)
!16651 = !DILocation(line: 60, column: 2, scope: !16632)
!16652 = distinct !DISubprogram(name: "z_waitq_init", scope: !15722, file: !15722, line: 47, type: !16653, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16655)
!16653 = !DISubroutineType(types: !16654)
!16654 = !{null, !2794}
!16655 = !{!16656}
!16656 = !DILocalVariable(name: "w", arg: 1, scope: !16652, file: !15722, line: 47, type: !2794)
!16657 = !DILocation(line: 0, scope: !16652)
!16658 = !DILocation(line: 49, column: 21, scope: !16652)
!16659 = !DILocation(line: 49, column: 2, scope: !16652)
!16660 = !DILocation(line: 50, column: 1, scope: !16652)
!16661 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !16662, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16665)
!16662 = !DISubroutineType(types: !16663)
!16663 = !{null, !16664}
!16664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 32)
!16665 = !{!16666}
!16666 = !DILocalVariable(name: "list", arg: 1, scope: !16661, file: !136, line: 197, type: !16664)
!16667 = !DILocation(line: 0, scope: !16661)
!16668 = !DILocation(line: 199, column: 8, scope: !16661)
!16669 = !DILocation(line: 199, column: 13, scope: !16661)
!16670 = !DILocation(line: 200, column: 8, scope: !16661)
!16671 = !DILocation(line: 200, column: 13, scope: !16661)
!16672 = !DILocation(line: 201, column: 1, scope: !16661)
!16673 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2866, file: !2866, line: 95, type: !16674, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16680)
!16674 = !DISubroutineType(types: !16675)
!16675 = !{!103, !16635, !16676}
!16676 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16677)
!16677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16678)
!16678 = !{!16679}
!16679 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16677, file: !105, line: 66, baseType: !104, size: 64)
!16680 = !{!16681, !16682, !16683, !16684, !16689, !16690, !16691}
!16681 = !DILocalVariable(name: "mutex", arg: 1, scope: !16673, file: !2866, line: 95, type: !16635)
!16682 = !DILocalVariable(name: "timeout", arg: 2, scope: !16673, file: !2866, line: 95, type: !16676)
!16683 = !DILocalVariable(name: "new_prio", scope: !16673, file: !2866, line: 97, type: !103)
!16684 = !DILocalVariable(name: "key", scope: !16673, file: !2866, line: 98, type: !16685)
!16685 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !16686)
!16686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !16687)
!16687 = !{!16688}
!16688 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16686, file: !152, line: 33, baseType: !103, size: 32)
!16689 = !DILocalVariable(name: "resched", scope: !16673, file: !2866, line: 99, type: !122)
!16690 = !DILocalVariable(name: "got_mutex", scope: !16673, file: !2866, line: 146, type: !103)
!16691 = !DILocalVariable(name: "waiter", scope: !16692, file: !2866, line: 169, type: !2777)
!16692 = distinct !DILexicalBlock(scope: !16693, file: !2866, line: 168, column: 36)
!16693 = distinct !DILexicalBlock(scope: !16673, file: !2866, line: 168, column: 6)
!16694 = !DILocation(line: 0, scope: !16673)
!16695 = !DILocation(line: 1031, column: 3, scope: !16696, inlinedAt: !16699)
!16696 = distinct !DISubprogram(name: "__get_IPSR", scope: !7930, file: !7930, line: 1027, type: !8017, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16697)
!16697 = !{!16698}
!16698 = !DILocalVariable(name: "result", scope: !16696, file: !7930, line: 1029, type: !111)
!16699 = distinct !DILocation(line: 48, column: 10, scope: !16700, inlinedAt: !16701)
!16700 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8980, file: !8980, line: 46, type: !8981, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !2571)
!16701 = distinct !DILocation(line: 101, column: 2, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16703, file: !2866, line: 101, column: 2)
!16703 = distinct !DILexicalBlock(scope: !16673, file: !2866, line: 101, column: 2)
!16704 = !{i64 3732855}
!16705 = !DILocation(line: 0, scope: !16696, inlinedAt: !16699)
!16706 = !DILocation(line: 48, column: 9, scope: !16700, inlinedAt: !16701)
!16707 = !DILocation(line: 101, column: 2, scope: !16703)
!16708 = !DILocation(line: 101, column: 2, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16702, file: !2866, line: 101, column: 2)
!16710 = !DILocalVariable(name: "l", arg: 1, scope: !16711, file: !152, line: 136, type: !16714)
!16711 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !16712, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16715)
!16712 = !DISubroutineType(types: !16713)
!16713 = !{!16685, !16714}
!16714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!16715 = !{!16710, !16716}
!16716 = !DILocalVariable(name: "k", scope: !16711, file: !152, line: 139, type: !16685)
!16717 = !DILocation(line: 0, scope: !16711, inlinedAt: !16718)
!16718 = distinct !DILocation(line: 105, column: 8, scope: !16673)
!16719 = !DILocation(line: 55, column: 2, scope: !16720, inlinedAt: !16724)
!16720 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16721)
!16721 = !{!16722, !16723}
!16722 = !DILocalVariable(name: "key", scope: !16720, file: !7609, line: 44, type: !32)
!16723 = !DILocalVariable(name: "tmp", scope: !16720, file: !7609, line: 53, type: !32)
!16724 = distinct !DILocation(line: 145, column: 10, scope: !16711, inlinedAt: !16718)
!16725 = !{i64 2286421}
!16726 = !DILocation(line: 0, scope: !16720, inlinedAt: !16724)
!16727 = !DILocation(line: 148, column: 2, scope: !16728, inlinedAt: !16718)
!16728 = distinct !DILexicalBlock(scope: !16729, file: !152, line: 148, column: 2)
!16729 = distinct !DILexicalBlock(scope: !16711, file: !152, line: 148, column: 2)
!16730 = !DILocation(line: 148, column: 2, scope: !16729, inlinedAt: !16718)
!16731 = !DILocation(line: 148, column: 2, scope: !16732, inlinedAt: !16718)
!16732 = distinct !DILexicalBlock(scope: !16728, file: !152, line: 148, column: 2)
!16733 = !DILocation(line: 160, column: 2, scope: !16711, inlinedAt: !16718)
!16734 = !DILocation(line: 107, column: 6, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16673, file: !2866, line: 107, column: 6)
!16736 = !DILocation(line: 107, column: 6, scope: !16673)
!16737 = !{!"branch_weights", i32 2000, i32 1}
!16738 = !DILocation(line: 110, column: 6, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16735, file: !2866, line: 107, column: 71)
!16740 = !DILocation(line: 110, column: 21, scope: !16739)
!16741 = !DILocation(line: 109, column: 28, scope: !16739)
!16742 = !DILocation(line: 111, column: 13, scope: !16739)
!16743 = !DILocation(line: 114, column: 18, scope: !16739)
!16744 = !DILocation(line: 109, column: 10, scope: !16739)
!16745 = !DILocation(line: 109, column: 26, scope: !16739)
!16746 = !DILocation(line: 113, column: 20, scope: !16739)
!16747 = !DILocation(line: 114, column: 10, scope: !16739)
!16748 = !DILocation(line: 114, column: 16, scope: !16739)
!16749 = !DILocalVariable(name: "key", arg: 2, scope: !16750, file: !152, line: 190, type: !16685)
!16750 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !16751, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16753)
!16751 = !DISubroutineType(types: !16752)
!16752 = !{null, !16714, !16685}
!16753 = !{!16754, !16749}
!16754 = !DILocalVariable(name: "l", arg: 1, scope: !16750, file: !152, line: 189, type: !16714)
!16755 = !DILocation(line: 0, scope: !16750, inlinedAt: !16756)
!16756 = distinct !DILocation(line: 120, column: 3, scope: !16739)
!16757 = !DILocation(line: 194, column: 2, scope: !16758, inlinedAt: !16756)
!16758 = distinct !DILexicalBlock(scope: !16759, file: !152, line: 194, column: 2)
!16759 = distinct !DILexicalBlock(scope: !16750, file: !152, line: 194, column: 2)
!16760 = !DILocation(line: 194, column: 2, scope: !16759, inlinedAt: !16756)
!16761 = !DILocation(line: 194, column: 2, scope: !16762, inlinedAt: !16756)
!16762 = distinct !DILexicalBlock(scope: !16758, file: !152, line: 194, column: 2)
!16763 = !DILocalVariable(name: "key", arg: 1, scope: !16764, file: !7609, line: 84, type: !32)
!16764 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16765)
!16765 = !{!16763}
!16766 = !DILocation(line: 0, scope: !16764, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 215, column: 2, scope: !16750, inlinedAt: !16756)
!16768 = !DILocation(line: 95, column: 2, scope: !16764, inlinedAt: !16767)
!16769 = !{i64 2287238}
!16770 = !DILocation(line: 124, column: 3, scope: !16739)
!16771 = !DILocation(line: 127, column: 6, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16673, file: !2866, line: 127, column: 6)
!16773 = !DILocation(line: 127, column: 6, scope: !16673)
!16774 = !{!"branch_weights", i32 1, i32 2000}
!16775 = !DILocation(line: 0, scope: !16750, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 128, column: 3, scope: !16777)
!16777 = distinct !DILexicalBlock(scope: !16772, file: !2866, line: 127, column: 50)
!16778 = !DILocation(line: 194, column: 2, scope: !16758, inlinedAt: !16776)
!16779 = !DILocation(line: 194, column: 2, scope: !16759, inlinedAt: !16776)
!16780 = !DILocation(line: 194, column: 2, scope: !16762, inlinedAt: !16776)
!16781 = !DILocation(line: 0, scope: !16764, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 215, column: 2, scope: !16750, inlinedAt: !16776)
!16783 = !DILocation(line: 95, column: 2, scope: !16764, inlinedAt: !16782)
!16784 = !DILocation(line: 132, column: 3, scope: !16777)
!16785 = !DILocation(line: 137, column: 53, scope: !16673)
!16786 = !DILocation(line: 137, column: 38, scope: !16673)
!16787 = !DILocation(line: 138, column: 29, scope: !16673)
!16788 = !DILocation(line: 138, column: 10, scope: !16673)
!16789 = !DILocation(line: 137, column: 13, scope: !16673)
!16790 = !DILocation(line: 142, column: 6, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16673, file: !2866, line: 142, column: 6)
!16792 = !DILocation(line: 142, column: 6, scope: !16673)
!16793 = !DILocation(line: 143, column: 13, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16791, file: !2866, line: 142, column: 59)
!16795 = !DILocation(line: 144, column: 2, scope: !16794)
!16796 = !DILocation(line: 146, column: 50, scope: !16673)
!16797 = !DILocation(line: 146, column: 18, scope: !16673)
!16798 = !DILocation(line: 153, column: 16, scope: !16799)
!16799 = distinct !DILexicalBlock(scope: !16673, file: !2866, line: 153, column: 6)
!16800 = !DILocation(line: 153, column: 6, scope: !16673)
!16801 = !DILocation(line: 0, scope: !16711, inlinedAt: !16802)
!16802 = distinct !DILocation(line: 162, column: 8, scope: !16673)
!16803 = !DILocation(line: 55, column: 2, scope: !16720, inlinedAt: !16804)
!16804 = distinct !DILocation(line: 145, column: 10, scope: !16711, inlinedAt: !16802)
!16805 = !DILocation(line: 0, scope: !16720, inlinedAt: !16804)
!16806 = !DILocation(line: 148, column: 2, scope: !16728, inlinedAt: !16802)
!16807 = !DILocation(line: 148, column: 2, scope: !16729, inlinedAt: !16802)
!16808 = !DILocation(line: 148, column: 2, scope: !16732, inlinedAt: !16802)
!16809 = !DILocation(line: 160, column: 2, scope: !16711, inlinedAt: !16802)
!16810 = !DILocation(line: 168, column: 6, scope: !16693)
!16811 = !DILocation(line: 168, column: 6, scope: !16673)
!16812 = !DILocation(line: 169, column: 29, scope: !16692)
!16813 = !DILocation(line: 0, scope: !16692)
!16814 = !DILocation(line: 171, column: 22, scope: !16692)
!16815 = !DILocation(line: 171, column: 14, scope: !16692)
!16816 = !DILocation(line: 172, column: 42, scope: !16692)
!16817 = !DILocation(line: 172, column: 29, scope: !16692)
!16818 = !DILocation(line: 172, column: 55, scope: !16692)
!16819 = !DILocation(line: 172, column: 4, scope: !16692)
!16820 = !DILocation(line: 173, column: 11, scope: !16692)
!16821 = !DILocation(line: 177, column: 13, scope: !16692)
!16822 = !DILocation(line: 177, column: 48, scope: !16692)
!16823 = !DILocation(line: 180, column: 6, scope: !16673)
!16824 = !DILocation(line: 181, column: 3, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16826, file: !2866, line: 180, column: 15)
!16826 = distinct !DILexicalBlock(scope: !16673, file: !2866, line: 180, column: 6)
!16827 = !DILocation(line: 182, column: 2, scope: !16825)
!16828 = !DILocation(line: 0, scope: !16750, inlinedAt: !16829)
!16829 = distinct !DILocation(line: 183, column: 3, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16826, file: !2866, line: 182, column: 9)
!16831 = !DILocation(line: 194, column: 2, scope: !16758, inlinedAt: !16829)
!16832 = !DILocation(line: 194, column: 2, scope: !16759, inlinedAt: !16829)
!16833 = !DILocation(line: 194, column: 2, scope: !16762, inlinedAt: !16829)
!16834 = !DILocation(line: 0, scope: !16764, inlinedAt: !16835)
!16835 = distinct !DILocation(line: 215, column: 2, scope: !16750, inlinedAt: !16829)
!16836 = !DILocation(line: 95, column: 2, scope: !16764, inlinedAt: !16835)
!16837 = !DILocation(line: 189, column: 1, scope: !16673)
!16838 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2866, file: !2866, line: 72, type: !16839, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16841)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{!320, !320, !320}
!16841 = !{!16842, !16843, !16844}
!16842 = !DILocalVariable(name: "target", arg: 1, scope: !16838, file: !2866, line: 72, type: !320)
!16843 = !DILocalVariable(name: "limit", arg: 2, scope: !16838, file: !2866, line: 72, type: !320)
!16844 = !DILocalVariable(name: "new_prio", scope: !16838, file: !2866, line: 74, type: !103)
!16845 = !DILocation(line: 0, scope: !16838)
!16846 = !DILocation(line: 74, column: 17, scope: !16838)
!16847 = !DILocation(line: 76, column: 13, scope: !16838)
!16848 = !DILocation(line: 78, column: 2, scope: !16838)
!16849 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15383, file: !15383, line: 211, type: !16850, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16852)
!16850 = !DISubroutineType(types: !16851)
!16851 = !{!122, !103, !103}
!16852 = !{!16853, !16854}
!16853 = !DILocalVariable(name: "prio", arg: 1, scope: !16849, file: !15383, line: 211, type: !103)
!16854 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16849, file: !15383, line: 211, type: !103)
!16855 = !DILocation(line: 0, scope: !16849)
!16856 = !DILocation(line: 213, column: 9, scope: !16849)
!16857 = !DILocation(line: 213, column: 2, scope: !16849)
!16858 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2866, file: !2866, line: 81, type: !16859, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16861)
!16859 = !DISubroutineType(types: !16860)
!16860 = !{!122, !16635, !320}
!16861 = !{!16862, !16863}
!16862 = !DILocalVariable(name: "mutex", arg: 1, scope: !16858, file: !2866, line: 81, type: !16635)
!16863 = !DILocalVariable(name: "new_prio", arg: 2, scope: !16858, file: !2866, line: 81, type: !320)
!16864 = !DILocation(line: 0, scope: !16858)
!16865 = !DILocation(line: 83, column: 13, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16858, file: !2866, line: 83, column: 6)
!16867 = !DILocation(line: 83, column: 25, scope: !16866)
!16868 = !DILocation(line: 83, column: 6, scope: !16866)
!16869 = !DILocation(line: 83, column: 30, scope: !16866)
!16870 = !DILocation(line: 83, column: 6, scope: !16858)
!16871 = !DILocation(line: 90, column: 10, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16866, file: !2866, line: 83, column: 43)
!16873 = !DILocation(line: 90, column: 3, scope: !16872)
!16874 = !DILocation(line: 93, column: 1, scope: !16858)
!16875 = distinct !DISubprogram(name: "z_waitq_head", scope: !15722, file: !15722, line: 52, type: !16876, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16878)
!16876 = !DISubroutineType(types: !16877)
!16877 = !{!2777, !2794}
!16878 = !{!16879}
!16879 = !DILocalVariable(name: "w", arg: 1, scope: !16875, file: !15722, line: 52, type: !2794)
!16880 = !DILocation(line: 0, scope: !16875)
!16881 = !DILocation(line: 54, column: 52, scope: !16875)
!16882 = !DILocation(line: 54, column: 28, scope: !16875)
!16883 = !DILocation(line: 54, column: 9, scope: !16875)
!16884 = !DILocation(line: 54, column: 2, scope: !16875)
!16885 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !16886, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16888)
!16886 = !DISubroutineType(types: !16887)
!16887 = !{!2762, !16664}
!16888 = !{!16889}
!16889 = !DILocalVariable(name: "list", arg: 1, scope: !16885, file: !136, line: 294, type: !16664)
!16890 = !DILocation(line: 0, scope: !16885)
!16891 = !DILocation(line: 296, column: 9, scope: !16885)
!16892 = !DILocation(line: 296, column: 49, scope: !16885)
!16893 = !DILocation(line: 296, column: 2, scope: !16885)
!16894 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !16895, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16897)
!16895 = !DISubroutineType(types: !16896)
!16896 = !{!122, !16664}
!16897 = !{!16898}
!16898 = !DILocalVariable(name: "list", arg: 1, scope: !16894, file: !136, line: 266, type: !16664)
!16899 = !DILocation(line: 0, scope: !16894)
!16900 = !DILocation(line: 268, column: 15, scope: !16894)
!16901 = !DILocation(line: 268, column: 20, scope: !16894)
!16902 = !DILocation(line: 268, column: 2, scope: !16894)
!16903 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15383, file: !15383, line: 206, type: !16850, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16904)
!16904 = !{!16905, !16906}
!16905 = !DILocalVariable(name: "prio1", arg: 1, scope: !16903, file: !15383, line: 206, type: !103)
!16906 = !DILocalVariable(name: "prio2", arg: 2, scope: !16903, file: !15383, line: 206, type: !103)
!16907 = !DILocation(line: 0, scope: !16903)
!16908 = !DILocation(line: 208, column: 15, scope: !16903)
!16909 = !DILocation(line: 208, column: 2, scope: !16903)
!16910 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !15383, file: !15383, line: 186, type: !764, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16911)
!16911 = !{!16912}
!16912 = !DILocalVariable(name: "prio", arg: 1, scope: !16910, file: !15383, line: 186, type: !103)
!16913 = !DILocation(line: 0, scope: !16910)
!16914 = !DILocation(line: 188, column: 9, scope: !16910)
!16915 = !DILocation(line: 188, column: 2, scope: !16910)
!16916 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !15383, file: !15383, line: 181, type: !16917, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16919)
!16917 = !DISubroutineType(types: !16918)
!16918 = !{!122, !103}
!16919 = !{!16920}
!16920 = !DILocalVariable(name: "prio", arg: 1, scope: !16916, file: !15383, line: 181, type: !103)
!16921 = !DILocation(line: 0, scope: !16916)
!16922 = !DILocation(line: 183, column: 14, scope: !16916)
!16923 = !DILocation(line: 183, column: 2, scope: !16916)
!16924 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2866, file: !2866, line: 201, type: !16633, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16925)
!16925 = !{!16926, !16927, !16928, !16929}
!16926 = !DILocalVariable(name: "mutex", arg: 1, scope: !16924, file: !2866, line: 201, type: !16635)
!16927 = !DILocalVariable(name: "new_owner", scope: !16924, file: !2866, line: 203, type: !2777)
!16928 = !DILocalVariable(name: "key", scope: !16924, file: !2866, line: 242, type: !16685)
!16929 = !DILabel(scope: !16924, name: "k_mutex_unlock_return", file: !2866, line: 270)
!16930 = !DILocation(line: 0, scope: !16924)
!16931 = !DILocation(line: 1031, column: 3, scope: !16696, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 48, column: 10, scope: !16700, inlinedAt: !16933)
!16933 = distinct !DILocation(line: 205, column: 2, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16935, file: !2866, line: 205, column: 2)
!16935 = distinct !DILexicalBlock(scope: !16924, file: !2866, line: 205, column: 2)
!16936 = !DILocation(line: 0, scope: !16696, inlinedAt: !16932)
!16937 = !DILocation(line: 48, column: 9, scope: !16700, inlinedAt: !16933)
!16938 = !DILocation(line: 205, column: 2, scope: !16935)
!16939 = !DILocation(line: 205, column: 2, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16934, file: !2866, line: 205, column: 2)
!16941 = !DILocation(line: 209, column: 2, scope: !16942)
!16942 = distinct !DILexicalBlock(scope: !16924, file: !2866, line: 209, column: 2)
!16943 = !DILocation(line: 209, column: 2, scope: !16924)
!16944 = !DILocation(line: 217, column: 2, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16924, file: !2866, line: 217, column: 2)
!16946 = !DILocation(line: 217, column: 2, scope: !16924)
!16947 = !DILocation(line: 229, column: 2, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16949, file: !2866, line: 229, column: 2)
!16949 = distinct !DILexicalBlock(scope: !16924, file: !2866, line: 229, column: 2)
!16950 = !DILocation(line: 229, column: 2, scope: !16949)
!16951 = !DILocation(line: 229, column: 2, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16948, file: !2866, line: 229, column: 2)
!16953 = !DILocation(line: 238, column: 20, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16955, file: !2866, line: 237, column: 30)
!16955 = distinct !DILexicalBlock(scope: !16924, file: !2866, line: 237, column: 6)
!16956 = !DILocation(line: 239, column: 3, scope: !16954)
!16957 = !DILocation(line: 0, scope: !16711, inlinedAt: !16958)
!16958 = distinct !DILocation(line: 242, column: 25, scope: !16924)
!16959 = !DILocation(line: 55, column: 2, scope: !16720, inlinedAt: !16960)
!16960 = distinct !DILocation(line: 145, column: 10, scope: !16711, inlinedAt: !16958)
!16961 = !DILocation(line: 0, scope: !16720, inlinedAt: !16960)
!16962 = !DILocation(line: 148, column: 2, scope: !16728, inlinedAt: !16958)
!16963 = !DILocation(line: 148, column: 2, scope: !16729, inlinedAt: !16958)
!16964 = !DILocation(line: 148, column: 2, scope: !16732, inlinedAt: !16958)
!16965 = !DILocation(line: 160, column: 2, scope: !16711, inlinedAt: !16958)
!16966 = !DILocation(line: 244, column: 34, scope: !16924)
!16967 = !DILocation(line: 244, column: 2, scope: !16924)
!16968 = !DILocation(line: 247, column: 44, scope: !16924)
!16969 = !DILocation(line: 247, column: 14, scope: !16924)
!16970 = !DILocation(line: 249, column: 15, scope: !16924)
!16971 = !DILocation(line: 254, column: 16, scope: !16972)
!16972 = distinct !DILexicalBlock(scope: !16924, file: !2866, line: 254, column: 6)
!16973 = !DILocation(line: 254, column: 6, scope: !16924)
!16974 = !DILocation(line: 260, column: 44, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16972, file: !2866, line: 254, column: 25)
!16976 = !DILocation(line: 260, column: 28, scope: !16975)
!16977 = !DILocation(line: 260, column: 26, scope: !16975)
!16978 = !DILocalVariable(name: "thread", arg: 1, scope: !16979, file: !15403, line: 65, type: !2777)
!16979 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15403, file: !15403, line: 65, type: !16980, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !16982)
!16980 = !DISubroutineType(types: !16981)
!16981 = !{null, !2777, !32}
!16982 = !{!16978, !16983}
!16983 = !DILocalVariable(name: "value", arg: 2, scope: !16979, file: !15403, line: 65, type: !32)
!16984 = !DILocation(line: 0, scope: !16979, inlinedAt: !16985)
!16985 = distinct !DILocation(line: 261, column: 3, scope: !16975)
!16986 = !DILocation(line: 67, column: 15, scope: !16979, inlinedAt: !16985)
!16987 = !DILocation(line: 67, column: 33, scope: !16979, inlinedAt: !16985)
!16988 = !DILocation(line: 262, column: 3, scope: !16975)
!16989 = !DILocation(line: 263, column: 3, scope: !16975)
!16990 = !DILocation(line: 264, column: 2, scope: !16975)
!16991 = !DILocation(line: 265, column: 21, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16972, file: !2866, line: 264, column: 9)
!16993 = !DILocation(line: 0, scope: !16750, inlinedAt: !16994)
!16994 = distinct !DILocation(line: 266, column: 3, scope: !16992)
!16995 = !DILocation(line: 194, column: 2, scope: !16758, inlinedAt: !16994)
!16996 = !DILocation(line: 194, column: 2, scope: !16759, inlinedAt: !16994)
!16997 = !DILocation(line: 194, column: 2, scope: !16762, inlinedAt: !16994)
!16998 = !DILocation(line: 0, scope: !16764, inlinedAt: !16999)
!16999 = distinct !DILocation(line: 215, column: 2, scope: !16750, inlinedAt: !16994)
!17000 = !DILocation(line: 95, column: 2, scope: !16764, inlinedAt: !16999)
!17001 = !DILocation(line: 274, column: 1, scope: !16924)
!17002 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2979, file: !2979, line: 93, type: !17003, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17005)
!17003 = !DISubroutineType(types: !17004)
!17004 = !{!320, !2872, !2872}
!17005 = !{!17006, !17007, !17008, !17009}
!17006 = !DILocalVariable(name: "thread_1", arg: 1, scope: !17002, file: !2979, line: 93, type: !2872)
!17007 = !DILocalVariable(name: "thread_2", arg: 2, scope: !17002, file: !2979, line: 94, type: !2872)
!17008 = !DILocalVariable(name: "b1", scope: !17002, file: !2979, line: 97, type: !320)
!17009 = !DILocalVariable(name: "b2", scope: !17002, file: !2979, line: 98, type: !320)
!17010 = !DILocation(line: 0, scope: !17002)
!17011 = !DILocation(line: 97, column: 30, scope: !17002)
!17012 = !DILocation(line: 98, column: 30, scope: !17002)
!17013 = !DILocation(line: 100, column: 9, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !17002, file: !2979, line: 100, column: 6)
!17015 = !DILocation(line: 100, column: 6, scope: !17002)
!17016 = !DILocation(line: 125, column: 1, scope: !17002)
!17017 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2979, file: !2979, line: 428, type: !17018, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17020)
!17018 = !DISubroutineType(types: !17019)
!17019 = !{null, !2872}
!17020 = !{!17021}
!17021 = !DILocalVariable(name: "curr", arg: 1, scope: !17017, file: !2979, line: 428, type: !2872)
!17022 = !DILocation(line: 0, scope: !17017)
!17023 = !DILocation(line: 434, column: 6, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17017, file: !2979, line: 434, column: 6)
!17025 = !DILocation(line: 434, column: 23, scope: !17024)
!17026 = !DILocation(line: 434, column: 6, scope: !17017)
!17027 = !DILocation(line: 435, column: 50, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17024, file: !2979, line: 434, column: 29)
!17029 = !DILocation(line: 435, column: 48, scope: !17028)
!17030 = !DILocation(line: 435, column: 29, scope: !17028)
!17031 = !DILocation(line: 436, column: 24, scope: !17028)
!17032 = !DILocation(line: 436, column: 3, scope: !17028)
!17033 = !DILocation(line: 437, column: 2, scope: !17028)
!17034 = !DILocation(line: 438, column: 1, scope: !17017)
!17035 = distinct !DISubprogram(name: "slice_time", scope: !2979, file: !2979, line: 407, type: !17036, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17038)
!17036 = !DISubroutineType(types: !17037)
!17037 = !{!103, !2872}
!17038 = !{!17039, !17040}
!17039 = !DILocalVariable(name: "curr", arg: 1, scope: !17035, file: !2979, line: 407, type: !2872)
!17040 = !DILocalVariable(name: "ret", scope: !17035, file: !2979, line: 409, type: !103)
!17041 = !DILocation(line: 0, scope: !17035)
!17042 = !DILocation(line: 409, column: 12, scope: !17035)
!17043 = !DILocation(line: 416, column: 2, scope: !17035)
!17044 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2979, file: !2979, line: 440, type: !17045, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17047)
!17045 = !DISubroutineType(types: !17046)
!17046 = !{null, !320, !103}
!17047 = !{!17048, !17049, !17050, !17056}
!17048 = !DILocalVariable(name: "slice", arg: 1, scope: !17044, file: !2979, line: 440, type: !320)
!17049 = !DILocalVariable(name: "prio", arg: 2, scope: !17044, file: !2979, line: 440, type: !103)
!17050 = !DILocalVariable(name: "__i", scope: !17051, file: !2979, line: 442, type: !17052)
!17051 = distinct !DILexicalBlock(scope: !17044, file: !2979, line: 442, column: 2)
!17052 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !17053)
!17053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !17054)
!17054 = !{!17055}
!17055 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17053, file: !152, line: 33, baseType: !103, size: 32)
!17056 = !DILocalVariable(name: "__key", scope: !17051, file: !2979, line: 442, type: !17052)
!17057 = !DILocation(line: 0, scope: !17044)
!17058 = !DILocation(line: 0, scope: !17051)
!17059 = !DILocalVariable(name: "l", arg: 1, scope: !17060, file: !152, line: 136, type: !17063)
!17060 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !17061, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17064)
!17061 = !DISubroutineType(types: !17062)
!17062 = !{!17052, !17063}
!17063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 32)
!17064 = !{!17059, !17065}
!17065 = !DILocalVariable(name: "k", scope: !17060, file: !152, line: 139, type: !17052)
!17066 = !DILocation(line: 0, scope: !17060, inlinedAt: !17067)
!17067 = distinct !DILocation(line: 442, column: 2, scope: !17051)
!17068 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17073)
!17069 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17070)
!17070 = !{!17071, !17072}
!17071 = !DILocalVariable(name: "key", scope: !17069, file: !7609, line: 44, type: !32)
!17072 = !DILocalVariable(name: "tmp", scope: !17069, file: !7609, line: 53, type: !32)
!17073 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17067)
!17074 = !{i64 2325984}
!17075 = !DILocation(line: 0, scope: !17069, inlinedAt: !17073)
!17076 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17067)
!17077 = distinct !DILexicalBlock(scope: !17078, file: !152, line: 148, column: 2)
!17078 = distinct !DILexicalBlock(scope: !17060, file: !152, line: 148, column: 2)
!17079 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17067)
!17080 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17067)
!17081 = distinct !DILexicalBlock(scope: !17077, file: !152, line: 148, column: 2)
!17082 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17067)
!17083 = !DILocation(line: 443, column: 29, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17085, file: !2979, line: 442, column: 26)
!17085 = distinct !DILexicalBlock(scope: !17051, file: !2979, line: 442, column: 2)
!17086 = !DILocation(line: 444, column: 17, scope: !17084)
!17087 = !DILocation(line: 445, column: 51, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17084, file: !2979, line: 445, column: 7)
!17089 = !DILocation(line: 445, column: 7, scope: !17084)
!17090 = !DILocation(line: 0, scope: !17084)
!17091 = !DILocation(line: 451, column: 18, scope: !17084)
!17092 = !DILocation(line: 452, column: 3, scope: !17084)
!17093 = !DILocalVariable(name: "key", arg: 2, scope: !17094, file: !152, line: 190, type: !17052)
!17094 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !17095, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17097)
!17095 = !DISubroutineType(types: !17096)
!17096 = !{null, !17063, !17052}
!17097 = !{!17098, !17093}
!17098 = !DILocalVariable(name: "l", arg: 1, scope: !17094, file: !152, line: 189, type: !17063)
!17099 = !DILocation(line: 0, scope: !17094, inlinedAt: !17100)
!17100 = distinct !DILocation(line: 442, column: 2, scope: !17085)
!17101 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17100)
!17102 = distinct !DILexicalBlock(scope: !17103, file: !152, line: 194, column: 2)
!17103 = distinct !DILexicalBlock(scope: !17094, file: !152, line: 194, column: 2)
!17104 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17100)
!17105 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17100)
!17106 = distinct !DILexicalBlock(scope: !17102, file: !152, line: 194, column: 2)
!17107 = !DILocalVariable(name: "key", arg: 1, scope: !17108, file: !7609, line: 84, type: !32)
!17108 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17109)
!17109 = !{!17107}
!17110 = !DILocation(line: 0, scope: !17108, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17100)
!17112 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17111)
!17113 = !{i64 2326801}
!17114 = !DILocation(line: 454, column: 1, scope: !17044)
!17115 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3974, file: !3974, line: 389, type: !9214, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17116)
!17116 = !{!17117}
!17117 = !DILocalVariable(name: "t", arg: 1, scope: !17115, file: !3974, line: 389, type: !111)
!17118 = !DILocation(line: 0, scope: !17115)
!17119 = !DILocalVariable(name: "t", arg: 1, scope: !17120, file: !3974, line: 102, type: !112)
!17120 = distinct !DISubprogram(name: "z_tmcvt", scope: !3974, file: !3974, line: 102, type: !3982, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17121)
!17121 = !{!17119, !17122, !17123, !17124, !17125, !17126, !17127, !17128, !17129, !17130, !17131}
!17122 = !DILocalVariable(name: "from_hz", arg: 2, scope: !17120, file: !3974, line: 102, type: !111)
!17123 = !DILocalVariable(name: "to_hz", arg: 3, scope: !17120, file: !3974, line: 103, type: !111)
!17124 = !DILocalVariable(name: "const_hz", arg: 4, scope: !17120, file: !3974, line: 103, type: !122)
!17125 = !DILocalVariable(name: "result32", arg: 5, scope: !17120, file: !3974, line: 104, type: !122)
!17126 = !DILocalVariable(name: "round_up", arg: 6, scope: !17120, file: !3974, line: 104, type: !122)
!17127 = !DILocalVariable(name: "round_off", arg: 7, scope: !17120, file: !3974, line: 105, type: !122)
!17128 = !DILocalVariable(name: "mul_ratio", scope: !17120, file: !3974, line: 107, type: !122)
!17129 = !DILocalVariable(name: "div_ratio", scope: !17120, file: !3974, line: 109, type: !122)
!17130 = !DILocalVariable(name: "off", scope: !17120, file: !3974, line: 116, type: !112)
!17131 = !DILocalVariable(name: "rdivisor", scope: !17132, file: !3974, line: 119, type: !111)
!17132 = distinct !DILexicalBlock(scope: !17133, file: !3974, line: 118, column: 18)
!17133 = distinct !DILexicalBlock(scope: !17120, file: !3974, line: 118, column: 6)
!17134 = !DILocation(line: 0, scope: !17120, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 392, column: 9, scope: !17115)
!17136 = !DILocation(line: 143, column: 25, scope: !17137, inlinedAt: !17135)
!17137 = distinct !DILexicalBlock(scope: !17138, file: !3974, line: 142, column: 17)
!17138 = distinct !DILexicalBlock(scope: !17139, file: !3974, line: 142, column: 7)
!17139 = distinct !DILexicalBlock(scope: !17140, file: !3974, line: 141, column: 24)
!17140 = distinct !DILexicalBlock(scope: !17141, file: !3974, line: 141, column: 13)
!17141 = distinct !DILexicalBlock(scope: !17120, file: !3974, line: 134, column: 6)
!17142 = !DILocation(line: 392, column: 2, scope: !17115)
!17143 = distinct !DISubprogram(name: "z_time_slice", scope: !2979, file: !2979, line: 502, type: !10336, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17144)
!17144 = !{!17145, !17146}
!17145 = !DILocalVariable(name: "ticks", arg: 1, scope: !17143, file: !2979, line: 502, type: !103)
!17146 = !DILocalVariable(name: "key", scope: !17143, file: !2979, line: 511, type: !17052)
!17147 = !DILocation(line: 0, scope: !17143)
!17148 = !DILocation(line: 0, scope: !17060, inlinedAt: !17149)
!17149 = distinct !DILocation(line: 511, column: 25, scope: !17143)
!17150 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17151)
!17151 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17149)
!17152 = !DILocation(line: 0, scope: !17069, inlinedAt: !17151)
!17153 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17149)
!17154 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17149)
!17155 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17149)
!17156 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17149)
!17157 = !DILocation(line: 514, column: 6, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17143, file: !2979, line: 514, column: 6)
!17159 = !DILocation(line: 514, column: 25, scope: !17158)
!17160 = !DILocation(line: 514, column: 22, scope: !17158)
!17161 = !DILocation(line: 514, column: 6, scope: !17143)
!17162 = !DILocation(line: 515, column: 3, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17158, file: !2979, line: 514, column: 35)
!17164 = !DILocation(line: 0, scope: !17094, inlinedAt: !17165)
!17165 = distinct !DILocation(line: 516, column: 3, scope: !17163)
!17166 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17165)
!17167 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17165)
!17168 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17165)
!17169 = !DILocation(line: 0, scope: !17108, inlinedAt: !17170)
!17170 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17165)
!17171 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17170)
!17172 = !DILocation(line: 517, column: 3, scope: !17163)
!17173 = !DILocation(line: 519, column: 18, scope: !17143)
!17174 = !DILocation(line: 522, column: 6, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17143, file: !2979, line: 522, column: 6)
!17176 = !DILocation(line: 522, column: 27, scope: !17175)
!17177 = !DILocation(line: 522, column: 30, scope: !17175)
!17178 = !DILocation(line: 522, column: 6, scope: !17143)
!17179 = !DILocation(line: 523, column: 30, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17181, file: !2979, line: 523, column: 7)
!17181 = distinct !DILexicalBlock(scope: !17175, file: !2979, line: 522, column: 51)
!17182 = !DILocation(line: 523, column: 13, scope: !17180)
!17183 = !DILocation(line: 523, column: 7, scope: !17181)
!17184 = !DILocation(line: 530, column: 10, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17180, file: !2979, line: 523, column: 43)
!17186 = !DILocation(line: 531, column: 3, scope: !17185)
!17187 = !DILocation(line: 532, column: 30, scope: !17188)
!17188 = distinct !DILexicalBlock(scope: !17180, file: !2979, line: 531, column: 10)
!17189 = !DILocation(line: 535, column: 29, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17175, file: !2979, line: 534, column: 9)
!17191 = !DILocation(line: 0, scope: !17094, inlinedAt: !17192)
!17192 = distinct !DILocation(line: 537, column: 2, scope: !17143)
!17193 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17192)
!17194 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17192)
!17195 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17192)
!17196 = !DILocation(line: 0, scope: !17108, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17192)
!17198 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17197)
!17199 = !DILocation(line: 538, column: 1, scope: !17143)
!17200 = distinct !DISubprogram(name: "sliceable", scope: !2979, file: !2979, line: 468, type: !17201, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17203)
!17201 = !DISubroutineType(types: !17202)
!17202 = !{!122, !2872}
!17203 = !{!17204, !17205}
!17204 = !DILocalVariable(name: "thread", arg: 1, scope: !17200, file: !2979, line: 468, type: !2872)
!17205 = !DILocalVariable(name: "ret", scope: !17200, file: !2979, line: 470, type: !122)
!17206 = !DILocation(line: 0, scope: !17200)
!17207 = !DILocation(line: 470, column: 13, scope: !17200)
!17208 = !DILocation(line: 471, column: 3, scope: !17200)
!17209 = !DILocation(line: 471, column: 7, scope: !17200)
!17210 = !DILocation(line: 472, column: 3, scope: !17200)
!17211 = !DILocation(line: 472, column: 37, scope: !17200)
!17212 = !DILocation(line: 472, column: 24, scope: !17200)
!17213 = !DILocation(line: 472, column: 43, scope: !17200)
!17214 = !DILocation(line: 472, column: 7, scope: !17200)
!17215 = !DILocation(line: 473, column: 3, scope: !17200)
!17216 = !DILocation(line: 473, column: 7, scope: !17200)
!17217 = !DILocation(line: 473, column: 6, scope: !17200)
!17218 = !DILocation(line: 479, column: 2, scope: !17200)
!17219 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2979, file: !2979, line: 482, type: !17220, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17222)
!17220 = !DISubroutineType(types: !17221)
!17221 = !{!17052, !17052}
!17222 = !{!17223, !17224}
!17223 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !17219, file: !2979, line: 482, type: !17052)
!17224 = !DILocalVariable(name: "curr", scope: !17219, file: !2979, line: 484, type: !2872)
!17225 = !DILocation(line: 0, scope: !17219)
!17226 = !DILocation(line: 484, column: 26, scope: !17219)
!17227 = !DILocation(line: 493, column: 7, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17219, file: !2979, line: 493, column: 6)
!17229 = !DILocation(line: 493, column: 6, scope: !17219)
!17230 = !DILocation(line: 494, column: 3, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17228, file: !2979, line: 493, column: 49)
!17232 = !DILocation(line: 495, column: 2, scope: !17231)
!17233 = !DILocation(line: 496, column: 2, scope: !17219)
!17234 = !DILocation(line: 499, column: 1, scope: !17219)
!17235 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15383, file: !15383, line: 106, type: !17201, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17236)
!17236 = !{!17237, !17238}
!17237 = !DILocalVariable(name: "thread", arg: 1, scope: !17235, file: !15383, line: 106, type: !2872)
!17238 = !DILocalVariable(name: "state", scope: !17235, file: !15383, line: 108, type: !166)
!17239 = !DILocation(line: 0, scope: !17235)
!17240 = !DILocation(line: 108, column: 31, scope: !17235)
!17241 = !DILocation(line: 110, column: 16, scope: !17235)
!17242 = !DILocation(line: 111, column: 41, scope: !17235)
!17243 = !DILocation(line: 110, column: 2, scope: !17235)
!17244 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2979, file: !2979, line: 393, type: !17018, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17245)
!17245 = !{!17246}
!17246 = !DILocalVariable(name: "thread", arg: 1, scope: !17244, file: !2979, line: 393, type: !2872)
!17247 = !DILocation(line: 0, scope: !17244)
!17248 = !DILocation(line: 395, column: 6, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17244, file: !2979, line: 395, column: 6)
!17250 = !DILocation(line: 395, column: 6, scope: !17244)
!17251 = !DILocalVariable(name: "thread", arg: 1, scope: !17252, file: !2979, line: 264, type: !2872)
!17252 = distinct !DISubprogram(name: "dequeue_thread", scope: !2979, file: !2979, line: 264, type: !17018, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17253)
!17253 = !{!17251}
!17254 = !DILocation(line: 0, scope: !17252, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 396, column: 3, scope: !17256)
!17256 = distinct !DILexicalBlock(scope: !17249, file: !2979, line: 395, column: 34)
!17257 = !DILocation(line: 266, column: 15, scope: !17252, inlinedAt: !17255)
!17258 = !DILocation(line: 266, column: 28, scope: !17252, inlinedAt: !17255)
!17259 = !DILocalVariable(name: "thread", arg: 1, scope: !17260, file: !2979, line: 232, type: !2872)
!17260 = distinct !DISubprogram(name: "runq_remove", scope: !2979, file: !2979, line: 232, type: !17018, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17261)
!17261 = !{!17259}
!17262 = !DILocation(line: 0, scope: !17260, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 268, column: 3, scope: !17264, inlinedAt: !17255)
!17264 = distinct !DILexicalBlock(scope: !17265, file: !2979, line: 267, column: 35)
!17265 = distinct !DILexicalBlock(scope: !17252, file: !2979, line: 267, column: 6)
!17266 = !DILocation(line: 234, column: 2, scope: !17260, inlinedAt: !17263)
!17267 = !DILocation(line: 397, column: 2, scope: !17256)
!17268 = !DILocalVariable(name: "thread", arg: 1, scope: !17269, file: !2979, line: 250, type: !2872)
!17269 = distinct !DISubprogram(name: "queue_thread", scope: !2979, file: !2979, line: 250, type: !17018, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17270)
!17270 = !{!17268}
!17271 = !DILocation(line: 0, scope: !17269, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 398, column: 2, scope: !17244)
!17273 = !DILocation(line: 252, column: 15, scope: !17269, inlinedAt: !17272)
!17274 = !DILocation(line: 252, column: 28, scope: !17269, inlinedAt: !17272)
!17275 = !DILocalVariable(name: "thread", arg: 1, scope: !17276, file: !2979, line: 227, type: !2872)
!17276 = distinct !DISubprogram(name: "runq_add", scope: !2979, file: !2979, line: 227, type: !17018, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17277)
!17277 = !{!17275}
!17278 = !DILocation(line: 0, scope: !17276, inlinedAt: !17279)
!17279 = distinct !DILocation(line: 254, column: 3, scope: !17280, inlinedAt: !17272)
!17280 = distinct !DILexicalBlock(scope: !17281, file: !2979, line: 253, column: 35)
!17281 = distinct !DILexicalBlock(scope: !17269, file: !2979, line: 253, column: 6)
!17282 = !DILocalVariable(name: "pq", arg: 1, scope: !17283, file: !2979, line: 181, type: !17286)
!17283 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2979, file: !2979, line: 181, type: !17284, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17287)
!17284 = !DISubroutineType(types: !17285)
!17285 = !{null, !17286, !2872}
!17286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 32)
!17287 = !{!17282, !17288, !17289}
!17288 = !DILocalVariable(name: "thread", arg: 2, scope: !17283, file: !2979, line: 182, type: !2872)
!17289 = !DILocalVariable(name: "t", scope: !17283, file: !2979, line: 184, type: !2872)
!17290 = !DILocation(line: 0, scope: !17283, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 229, column: 2, scope: !17276, inlinedAt: !17279)
!17292 = !DILocation(line: 186, column: 2, scope: !17293, inlinedAt: !17291)
!17293 = distinct !DILexicalBlock(scope: !17294, file: !2979, line: 186, column: 2)
!17294 = distinct !DILexicalBlock(scope: !17283, file: !2979, line: 186, column: 2)
!17295 = !DILocation(line: 186, column: 2, scope: !17294, inlinedAt: !17291)
!17296 = !DILocation(line: 186, column: 2, scope: !17297, inlinedAt: !17291)
!17297 = distinct !DILexicalBlock(scope: !17293, file: !2979, line: 186, column: 2)
!17298 = !DILocation(line: 188, column: 2, scope: !17299, inlinedAt: !17291)
!17299 = distinct !DILexicalBlock(scope: !17283, file: !2979, line: 188, column: 2)
!17300 = !DILocation(line: 188, column: 2, scope: !17301, inlinedAt: !17291)
!17301 = distinct !DILexicalBlock(scope: !17299, file: !2979, line: 188, column: 2)
!17302 = !DILocation(line: 0, scope: !17299, inlinedAt: !17291)
!17303 = !DILocation(line: 189, column: 7, scope: !17304, inlinedAt: !17291)
!17304 = distinct !DILexicalBlock(scope: !17305, file: !2979, line: 189, column: 7)
!17305 = distinct !DILexicalBlock(scope: !17301, file: !2979, line: 188, column: 56)
!17306 = !DILocation(line: 189, column: 35, scope: !17304, inlinedAt: !17291)
!17307 = !DILocation(line: 189, column: 7, scope: !17305, inlinedAt: !17291)
!17308 = !DILocation(line: 191, column: 21, scope: !17309, inlinedAt: !17291)
!17309 = distinct !DILexicalBlock(scope: !17304, file: !2979, line: 189, column: 40)
!17310 = !DILocation(line: 190, column: 4, scope: !17309, inlinedAt: !17291)
!17311 = !DILocation(line: 192, column: 4, scope: !17309, inlinedAt: !17291)
!17312 = distinct !{!17312, !17298, !17313}
!17313 = !DILocation(line: 194, column: 2, scope: !17299, inlinedAt: !17291)
!17314 = !DILocation(line: 196, column: 37, scope: !17283, inlinedAt: !17291)
!17315 = !DILocation(line: 196, column: 2, scope: !17283, inlinedAt: !17291)
!17316 = !DILocation(line: 197, column: 1, scope: !17283, inlinedAt: !17291)
!17317 = !DILocation(line: 399, column: 25, scope: !17244)
!17318 = !DILocation(line: 399, column: 22, scope: !17244)
!17319 = !DILocation(line: 399, column: 2, scope: !17244)
!17320 = !DILocation(line: 400, column: 1, scope: !17244)
!17321 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15383, file: !15383, line: 136, type: !17201, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17322)
!17322 = !{!17323}
!17323 = !DILocalVariable(name: "thread", arg: 1, scope: !17321, file: !15383, line: 136, type: !2872)
!17324 = !DILocation(line: 0, scope: !17321)
!17325 = !DILocation(line: 138, column: 9, scope: !17321)
!17326 = !DILocation(line: 138, column: 2, scope: !17321)
!17327 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2979, file: !2979, line: 1137, type: !17284, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17328)
!17328 = !{!17329, !17330}
!17329 = !DILocalVariable(name: "pq", arg: 1, scope: !17327, file: !2979, line: 1137, type: !17286)
!17330 = !DILocalVariable(name: "thread", arg: 2, scope: !17327, file: !2979, line: 1137, type: !2872)
!17331 = !DILocation(line: 0, scope: !17327)
!17332 = !DILocation(line: 1139, column: 2, scope: !17333)
!17333 = distinct !DILexicalBlock(scope: !17334, file: !2979, line: 1139, column: 2)
!17334 = distinct !DILexicalBlock(scope: !17327, file: !2979, line: 1139, column: 2)
!17335 = !DILocation(line: 1139, column: 2, scope: !17334)
!17336 = !DILocation(line: 1139, column: 2, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17333, file: !2979, line: 1139, column: 2)
!17338 = !DILocation(line: 1141, column: 33, scope: !17327)
!17339 = !DILocation(line: 1141, column: 2, scope: !17327)
!17340 = !DILocation(line: 1142, column: 1, scope: !17327)
!17341 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15383, file: !15383, line: 83, type: !17201, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17342)
!17342 = !{!17343}
!17343 = !DILocalVariable(name: "thread", arg: 1, scope: !17341, file: !15383, line: 83, type: !2872)
!17344 = !DILocation(line: 0, scope: !17341)
!17345 = !DILocation(line: 89, column: 16, scope: !17341)
!17346 = !DILocation(line: 89, column: 2, scope: !17341)
!17347 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !17348, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17350)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{!2975, !17286}
!17350 = !{!17351}
!17351 = !DILocalVariable(name: "list", arg: 1, scope: !17347, file: !136, line: 294, type: !17286)
!17352 = !DILocation(line: 0, scope: !17347)
!17353 = !DILocation(line: 296, column: 9, scope: !17347)
!17354 = !DILocation(line: 296, column: 49, scope: !17347)
!17355 = !DILocation(line: 296, column: 2, scope: !17347)
!17356 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !17357, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17359)
!17357 = !DISubroutineType(types: !17358)
!17358 = !{null, !2975, !2975}
!17359 = !{!17360, !17361, !17362}
!17360 = !DILocalVariable(name: "successor", arg: 1, scope: !17356, file: !136, line: 443, type: !2975)
!17361 = !DILocalVariable(name: "node", arg: 2, scope: !17356, file: !136, line: 443, type: !2975)
!17362 = !DILocalVariable(name: "prev", scope: !17356, file: !136, line: 445, type: !17363)
!17363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2975)
!17364 = !DILocation(line: 0, scope: !17356)
!17365 = !DILocation(line: 445, column: 39, scope: !17356)
!17366 = !DILocation(line: 447, column: 8, scope: !17356)
!17367 = !DILocation(line: 447, column: 13, scope: !17356)
!17368 = !DILocation(line: 448, column: 8, scope: !17356)
!17369 = !DILocation(line: 448, column: 13, scope: !17356)
!17370 = !DILocation(line: 449, column: 8, scope: !17356)
!17371 = !DILocation(line: 449, column: 13, scope: !17356)
!17372 = !DILocation(line: 450, column: 18, scope: !17356)
!17373 = !DILocation(line: 451, column: 1, scope: !17356)
!17374 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !17375, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17377)
!17375 = !DISubroutineType(types: !17376)
!17376 = !{!2975, !17286, !2975}
!17377 = !{!17378, !17379}
!17378 = !DILocalVariable(name: "list", arg: 1, scope: !17374, file: !136, line: 341, type: !17286)
!17379 = !DILocalVariable(name: "node", arg: 2, scope: !17374, file: !136, line: 342, type: !2975)
!17380 = !DILocation(line: 0, scope: !17374)
!17381 = !DILocation(line: 344, column: 15, scope: !17374)
!17382 = !DILocation(line: 344, column: 9, scope: !17374)
!17383 = !DILocation(line: 344, column: 26, scope: !17374)
!17384 = !DILocation(line: 344, column: 2, scope: !17374)
!17385 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !17386, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17388)
!17386 = !DISubroutineType(types: !17387)
!17387 = !{null, !17286, !2975}
!17388 = !{!17389, !17390, !17391}
!17389 = !DILocalVariable(name: "list", arg: 1, scope: !17385, file: !136, line: 404, type: !17286)
!17390 = !DILocalVariable(name: "node", arg: 2, scope: !17385, file: !136, line: 404, type: !2975)
!17391 = !DILocalVariable(name: "tail", scope: !17385, file: !136, line: 406, type: !17363)
!17392 = !DILocation(line: 0, scope: !17385)
!17393 = !DILocation(line: 406, column: 34, scope: !17385)
!17394 = !DILocation(line: 408, column: 8, scope: !17385)
!17395 = !DILocation(line: 408, column: 13, scope: !17385)
!17396 = !DILocation(line: 409, column: 8, scope: !17385)
!17397 = !DILocation(line: 409, column: 13, scope: !17385)
!17398 = !DILocation(line: 411, column: 8, scope: !17385)
!17399 = !DILocation(line: 411, column: 13, scope: !17385)
!17400 = !DILocation(line: 412, column: 13, scope: !17385)
!17401 = !DILocation(line: 413, column: 1, scope: !17385)
!17402 = distinct !DISubprogram(name: "update_cache", scope: !2979, file: !2979, line: 559, type: !10336, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17403)
!17403 = !{!17404, !17405}
!17404 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !17402, file: !2979, line: 559, type: !103)
!17405 = !DILocalVariable(name: "thread", scope: !17402, file: !2979, line: 562, type: !2872)
!17406 = !DILocation(line: 0, scope: !17402)
!17407 = !DILocation(line: 239, column: 9, scope: !17408, inlinedAt: !17411)
!17408 = distinct !DISubprogram(name: "runq_best", scope: !2979, file: !2979, line: 237, type: !17409, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!17409 = !DISubroutineType(types: !17410)
!17410 = !{!2872}
!17411 = distinct !DILocation(line: 314, column: 28, scope: !17412, inlinedAt: !17415)
!17412 = distinct !DISubprogram(name: "next_up", scope: !2979, file: !2979, line: 312, type: !17409, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17413)
!17413 = !{!17414}
!17414 = !DILocalVariable(name: "thread", scope: !17412, file: !2979, line: 314, type: !2872)
!17415 = distinct !DILocation(line: 562, column: 28, scope: !17402)
!17416 = !DILocation(line: 0, scope: !17412, inlinedAt: !17415)
!17417 = !DILocation(line: 340, column: 17, scope: !17412, inlinedAt: !17415)
!17418 = !DILocation(line: 340, column: 9, scope: !17412, inlinedAt: !17415)
!17419 = !DILocalVariable(name: "thread", arg: 1, scope: !17420, file: !2979, line: 127, type: !2872)
!17420 = distinct !DISubprogram(name: "should_preempt", scope: !2979, file: !2979, line: 127, type: !17421, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17423)
!17421 = !DISubroutineType(types: !17422)
!17422 = !{!122, !2872, !103}
!17423 = !{!17419, !17424}
!17424 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !17420, file: !2979, line: 128, type: !103)
!17425 = !DILocation(line: 0, scope: !17420, inlinedAt: !17426)
!17426 = distinct !DILocation(line: 564, column: 6, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17402, file: !2979, line: 564, column: 6)
!17428 = !DILocation(line: 133, column: 17, scope: !17429, inlinedAt: !17426)
!17429 = distinct !DILexicalBlock(scope: !17420, file: !2979, line: 133, column: 6)
!17430 = !DILocation(line: 0, scope: !17427)
!17431 = !DILocation(line: 133, column: 6, scope: !17420, inlinedAt: !17426)
!17432 = !DILocation(line: 137, column: 2, scope: !17433, inlinedAt: !17426)
!17433 = distinct !DILexicalBlock(scope: !17434, file: !2979, line: 137, column: 2)
!17434 = distinct !DILexicalBlock(scope: !17420, file: !2979, line: 137, column: 2)
!17435 = !DILocation(line: 137, column: 2, scope: !17434, inlinedAt: !17426)
!17436 = !DILocation(line: 137, column: 2, scope: !17437, inlinedAt: !17426)
!17437 = distinct !DILexicalBlock(scope: !17433, file: !2979, line: 137, column: 2)
!17438 = !DILocation(line: 140, column: 6, scope: !17439, inlinedAt: !17426)
!17439 = distinct !DILexicalBlock(scope: !17420, file: !2979, line: 140, column: 6)
!17440 = !DILocation(line: 140, column: 6, scope: !17420, inlinedAt: !17426)
!17441 = !DILocation(line: 150, column: 9, scope: !17442, inlinedAt: !17426)
!17442 = distinct !DILexicalBlock(scope: !17420, file: !2979, line: 149, column: 6)
!17443 = !DILocation(line: 149, column: 6, scope: !17420, inlinedAt: !17426)
!17444 = !DILocation(line: 157, column: 6, scope: !17445, inlinedAt: !17426)
!17445 = distinct !DILexicalBlock(scope: !17420, file: !2979, line: 157, column: 6)
!17446 = !DILocation(line: 564, column: 6, scope: !17402)
!17447 = !DILocation(line: 566, column: 14, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17449, file: !2979, line: 566, column: 7)
!17449 = distinct !DILexicalBlock(scope: !17427, file: !2979, line: 564, column: 42)
!17450 = !DILocation(line: 566, column: 7, scope: !17449)
!17451 = !DILocation(line: 567, column: 4, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17448, file: !2979, line: 566, column: 27)
!17453 = !DILocation(line: 568, column: 3, scope: !17452)
!17454 = !DILocation(line: 585, column: 1, scope: !17402)
!17455 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2979, file: !2979, line: 1144, type: !17456, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17458)
!17456 = !DISubroutineType(types: !17457)
!17457 = !{!2872, !17286}
!17458 = !{!17459, !17460, !17461}
!17459 = !DILocalVariable(name: "pq", arg: 1, scope: !17455, file: !2979, line: 1144, type: !17286)
!17460 = !DILocalVariable(name: "thread", scope: !17455, file: !2979, line: 1146, type: !2872)
!17461 = !DILocalVariable(name: "n", scope: !17455, file: !2979, line: 1147, type: !2975)
!17462 = !DILocation(line: 0, scope: !17455)
!17463 = !DILocation(line: 1147, column: 19, scope: !17455)
!17464 = !DILocation(line: 1152, column: 2, scope: !17455)
!17465 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15383, file: !15383, line: 115, type: !17201, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17466)
!17466 = !{!17467}
!17467 = !DILocalVariable(name: "thread", arg: 1, scope: !17465, file: !15383, line: 115, type: !2872)
!17468 = !DILocation(line: 0, scope: !17465)
!17469 = !DILocation(line: 117, column: 46, scope: !17465)
!17470 = !DILocation(line: 117, column: 10, scope: !17465)
!17471 = !DILocation(line: 117, column: 9, scope: !17465)
!17472 = !DILocation(line: 117, column: 2, scope: !17465)
!17473 = distinct !DISubprogram(name: "is_preempt", scope: !2979, file: !2979, line: 62, type: !17036, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17474)
!17474 = !{!17475}
!17475 = !DILocalVariable(name: "thread", arg: 1, scope: !17473, file: !2979, line: 62, type: !2872)
!17476 = !DILocation(line: 0, scope: !17473)
!17477 = !DILocation(line: 65, column: 22, scope: !17473)
!17478 = !DILocation(line: 65, column: 30, scope: !17473)
!17479 = !DILocation(line: 65, column: 2, scope: !17473)
!17480 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15790, file: !15790, line: 35, type: !17481, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17485)
!17481 = !DISubroutineType(types: !17482)
!17482 = !{!122, !17483}
!17483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17484, size: 32)
!17484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2923)
!17485 = !{!17486}
!17486 = !DILocalVariable(name: "to", arg: 1, scope: !17480, file: !15790, line: 35, type: !17483)
!17487 = !DILocation(line: 0, scope: !17480)
!17488 = !DILocation(line: 37, column: 35, scope: !17480)
!17489 = !DILocation(line: 37, column: 10, scope: !17480)
!17490 = !DILocation(line: 37, column: 9, scope: !17480)
!17491 = !DILocation(line: 37, column: 2, scope: !17480)
!17492 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !17493, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17497)
!17493 = !DISubroutineType(types: !17494)
!17494 = !{!122, !17495}
!17495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17496, size: 32)
!17496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2882)
!17497 = !{!17498}
!17498 = !DILocalVariable(name: "node", arg: 1, scope: !17492, file: !136, line: 225, type: !17495)
!17499 = !DILocation(line: 0, scope: !17492)
!17500 = !DILocation(line: 227, column: 15, scope: !17492)
!17501 = !DILocation(line: 227, column: 20, scope: !17492)
!17502 = !DILocation(line: 227, column: 2, scope: !17492)
!17503 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !17375, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17504)
!17504 = !{!17505, !17506}
!17505 = !DILocalVariable(name: "list", arg: 1, scope: !17503, file: !136, line: 325, type: !17286)
!17506 = !DILocalVariable(name: "node", arg: 2, scope: !17503, file: !136, line: 326, type: !2975)
!17507 = !DILocation(line: 0, scope: !17503)
!17508 = !DILocation(line: 328, column: 24, scope: !17503)
!17509 = !DILocation(line: 328, column: 15, scope: !17503)
!17510 = !DILocation(line: 328, column: 9, scope: !17503)
!17511 = !DILocation(line: 328, column: 45, scope: !17503)
!17512 = !DILocation(line: 328, column: 2, scope: !17503)
!17513 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !17514, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17516)
!17514 = !DISubroutineType(types: !17515)
!17515 = !{!122, !17286}
!17516 = !{!17517}
!17517 = !DILocalVariable(name: "list", arg: 1, scope: !17513, file: !136, line: 266, type: !17286)
!17518 = !DILocation(line: 0, scope: !17513)
!17519 = !DILocation(line: 268, column: 15, scope: !17513)
!17520 = !DILocation(line: 268, column: 20, scope: !17513)
!17521 = !DILocation(line: 268, column: 2, scope: !17513)
!17522 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !17523, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17525)
!17523 = !DISubroutineType(types: !17524)
!17524 = !{null, !2975}
!17525 = !{!17526, !17527, !17528}
!17526 = !DILocalVariable(name: "node", arg: 1, scope: !17522, file: !136, line: 496, type: !2975)
!17527 = !DILocalVariable(name: "prev", scope: !17522, file: !136, line: 498, type: !17363)
!17528 = !DILocalVariable(name: "next", scope: !17522, file: !136, line: 499, type: !17363)
!17529 = !DILocation(line: 0, scope: !17522)
!17530 = !DILocation(line: 498, column: 34, scope: !17522)
!17531 = !DILocation(line: 499, column: 34, scope: !17522)
!17532 = !DILocation(line: 501, column: 8, scope: !17522)
!17533 = !DILocation(line: 501, column: 13, scope: !17522)
!17534 = !DILocation(line: 502, column: 8, scope: !17522)
!17535 = !DILocation(line: 502, column: 13, scope: !17522)
!17536 = !DILocation(line: 503, column: 2, scope: !17522)
!17537 = !DILocation(line: 504, column: 1, scope: !17522)
!17538 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !17523, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17539)
!17539 = !{!17540}
!17540 = !DILocalVariable(name: "node", arg: 1, scope: !17538, file: !136, line: 211, type: !2975)
!17541 = !DILocation(line: 0, scope: !17538)
!17542 = !DILocation(line: 213, column: 8, scope: !17538)
!17543 = !DILocation(line: 213, column: 13, scope: !17538)
!17544 = !DILocation(line: 214, column: 8, scope: !17538)
!17545 = !DILocation(line: 214, column: 13, scope: !17538)
!17546 = !DILocation(line: 215, column: 1, scope: !17538)
!17547 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15383, file: !15383, line: 131, type: !17548, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17550)
!17548 = !DISubroutineType(types: !17549)
!17549 = !{!122, !2872, !111}
!17550 = !{!17551, !17552}
!17551 = !DILocalVariable(name: "thread", arg: 1, scope: !17547, file: !15383, line: 131, type: !2872)
!17552 = !DILocalVariable(name: "state", arg: 2, scope: !17547, file: !15383, line: 131, type: !111)
!17553 = !DILocation(line: 0, scope: !17547)
!17554 = !DILocation(line: 133, column: 23, scope: !17547)
!17555 = !DILocation(line: 133, column: 10, scope: !17547)
!17556 = !DILocation(line: 133, column: 36, scope: !17547)
!17557 = !DILocation(line: 133, column: 45, scope: !17547)
!17558 = !DILocation(line: 133, column: 2, scope: !17547)
!17559 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15383, file: !15383, line: 211, type: !16850, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17560)
!17560 = !{!17561, !17562}
!17561 = !DILocalVariable(name: "prio", arg: 1, scope: !17559, file: !15383, line: 211, type: !103)
!17562 = !DILocalVariable(name: "test_prio", arg: 2, scope: !17559, file: !15383, line: 211, type: !103)
!17563 = !DILocation(line: 0, scope: !17559)
!17564 = !DILocation(line: 213, column: 9, scope: !17559)
!17565 = !DILocation(line: 213, column: 2, scope: !17559)
!17566 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15383, file: !15383, line: 206, type: !16850, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17567)
!17567 = !{!17568, !17569}
!17568 = !DILocalVariable(name: "prio1", arg: 1, scope: !17566, file: !15383, line: 206, type: !103)
!17569 = !DILocalVariable(name: "prio2", arg: 2, scope: !17566, file: !15383, line: 206, type: !103)
!17570 = !DILocation(line: 0, scope: !17566)
!17571 = !DILocation(line: 208, column: 15, scope: !17566)
!17572 = !DILocation(line: 208, column: 2, scope: !17566)
!17573 = distinct !DISubprogram(name: "z_ready_thread", scope: !2979, file: !2979, line: 635, type: !17018, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17574)
!17574 = !{!17575, !17576, !17578}
!17575 = !DILocalVariable(name: "thread", arg: 1, scope: !17573, file: !2979, line: 635, type: !2872)
!17576 = !DILocalVariable(name: "__i", scope: !17577, file: !2979, line: 637, type: !17052)
!17577 = distinct !DILexicalBlock(scope: !17573, file: !2979, line: 637, column: 2)
!17578 = !DILocalVariable(name: "__key", scope: !17577, file: !2979, line: 637, type: !17052)
!17579 = !DILocation(line: 0, scope: !17573)
!17580 = !DILocation(line: 0, scope: !17577)
!17581 = !DILocation(line: 0, scope: !17060, inlinedAt: !17582)
!17582 = distinct !DILocation(line: 637, column: 2, scope: !17577)
!17583 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17584)
!17584 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17582)
!17585 = !DILocation(line: 0, scope: !17069, inlinedAt: !17584)
!17586 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17582)
!17587 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17582)
!17588 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17582)
!17589 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17582)
!17590 = !DILocation(line: 639, column: 4, scope: !17591)
!17591 = distinct !DILexicalBlock(scope: !17592, file: !2979, line: 638, column: 41)
!17592 = distinct !DILexicalBlock(scope: !17593, file: !2979, line: 638, column: 7)
!17593 = distinct !DILexicalBlock(scope: !17594, file: !2979, line: 637, column: 26)
!17594 = distinct !DILexicalBlock(scope: !17577, file: !2979, line: 637, column: 2)
!17595 = !DILocation(line: 0, scope: !17094, inlinedAt: !17596)
!17596 = distinct !DILocation(line: 637, column: 2, scope: !17594)
!17597 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17596)
!17598 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17596)
!17599 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17596)
!17600 = !DILocation(line: 0, scope: !17108, inlinedAt: !17601)
!17601 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17596)
!17602 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17601)
!17603 = !DILocation(line: 642, column: 1, scope: !17573)
!17604 = distinct !DISubprogram(name: "ready_thread", scope: !2979, file: !2979, line: 617, type: !17018, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17605)
!17605 = !{!17606}
!17606 = !DILocalVariable(name: "thread", arg: 1, scope: !17604, file: !2979, line: 617, type: !2872)
!17607 = !DILocation(line: 0, scope: !17604)
!17608 = !DILocation(line: 626, column: 7, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17604, file: !2979, line: 626, column: 6)
!17610 = !DILocation(line: 626, column: 34, scope: !17609)
!17611 = !DILocation(line: 626, column: 37, scope: !17609)
!17612 = !DILocation(line: 626, column: 6, scope: !17604)
!17613 = !DILocation(line: 0, scope: !17269, inlinedAt: !17614)
!17614 = distinct !DILocation(line: 629, column: 3, scope: !17615)
!17615 = distinct !DILexicalBlock(scope: !17609, file: !2979, line: 626, column: 64)
!17616 = !DILocation(line: 252, column: 15, scope: !17269, inlinedAt: !17614)
!17617 = !DILocation(line: 252, column: 28, scope: !17269, inlinedAt: !17614)
!17618 = !DILocation(line: 0, scope: !17276, inlinedAt: !17619)
!17619 = distinct !DILocation(line: 254, column: 3, scope: !17280, inlinedAt: !17614)
!17620 = !DILocation(line: 0, scope: !17283, inlinedAt: !17621)
!17621 = distinct !DILocation(line: 229, column: 2, scope: !17276, inlinedAt: !17619)
!17622 = !DILocation(line: 186, column: 2, scope: !17293, inlinedAt: !17621)
!17623 = !DILocation(line: 186, column: 2, scope: !17294, inlinedAt: !17621)
!17624 = !DILocation(line: 186, column: 2, scope: !17297, inlinedAt: !17621)
!17625 = !DILocation(line: 188, column: 2, scope: !17299, inlinedAt: !17621)
!17626 = !DILocation(line: 188, column: 2, scope: !17301, inlinedAt: !17621)
!17627 = !DILocation(line: 0, scope: !17299, inlinedAt: !17621)
!17628 = !DILocation(line: 189, column: 7, scope: !17304, inlinedAt: !17621)
!17629 = !DILocation(line: 189, column: 35, scope: !17304, inlinedAt: !17621)
!17630 = !DILocation(line: 189, column: 7, scope: !17305, inlinedAt: !17621)
!17631 = !DILocation(line: 191, column: 21, scope: !17309, inlinedAt: !17621)
!17632 = !DILocation(line: 190, column: 4, scope: !17309, inlinedAt: !17621)
!17633 = !DILocation(line: 192, column: 4, scope: !17309, inlinedAt: !17621)
!17634 = distinct !{!17634, !17625, !17635}
!17635 = !DILocation(line: 194, column: 2, scope: !17299, inlinedAt: !17621)
!17636 = !DILocation(line: 196, column: 37, scope: !17283, inlinedAt: !17621)
!17637 = !DILocation(line: 196, column: 2, scope: !17283, inlinedAt: !17621)
!17638 = !DILocation(line: 197, column: 1, scope: !17283, inlinedAt: !17621)
!17639 = !DILocation(line: 630, column: 3, scope: !17615)
!17640 = !DILocation(line: 632, column: 2, scope: !17615)
!17641 = !DILocation(line: 633, column: 1, scope: !17604)
!17642 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15383, file: !15383, line: 120, type: !17201, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17643)
!17643 = !{!17644}
!17644 = !DILocalVariable(name: "thread", arg: 1, scope: !17642, file: !15383, line: 120, type: !2872)
!17645 = !DILocation(line: 0, scope: !17642)
!17646 = !DILocation(line: 122, column: 12, scope: !17642)
!17647 = !DILocation(line: 122, column: 62, scope: !17642)
!17648 = !DILocation(line: 123, column: 4, scope: !17642)
!17649 = !DILocation(line: 122, column: 2, scope: !17642)
!17650 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2979, file: !2979, line: 644, type: !17018, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17651)
!17651 = !{!17652, !17653, !17655}
!17652 = !DILocalVariable(name: "thread", arg: 1, scope: !17650, file: !2979, line: 644, type: !2872)
!17653 = !DILocalVariable(name: "__i", scope: !17654, file: !2979, line: 646, type: !17052)
!17654 = distinct !DILexicalBlock(scope: !17650, file: !2979, line: 646, column: 2)
!17655 = !DILocalVariable(name: "__key", scope: !17654, file: !2979, line: 646, type: !17052)
!17656 = !DILocation(line: 0, scope: !17650)
!17657 = !DILocation(line: 0, scope: !17654)
!17658 = !DILocation(line: 0, scope: !17060, inlinedAt: !17659)
!17659 = distinct !DILocation(line: 646, column: 2, scope: !17654)
!17660 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17661)
!17661 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17659)
!17662 = !DILocation(line: 0, scope: !17069, inlinedAt: !17661)
!17663 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17659)
!17664 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17659)
!17665 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17659)
!17666 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17659)
!17667 = !DILocation(line: 647, column: 3, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17669, file: !2979, line: 646, column: 26)
!17669 = distinct !DILexicalBlock(scope: !17654, file: !2979, line: 646, column: 2)
!17670 = !DILocation(line: 0, scope: !17094, inlinedAt: !17671)
!17671 = distinct !DILocation(line: 646, column: 2, scope: !17669)
!17672 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17671)
!17673 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17671)
!17674 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17671)
!17675 = !DILocation(line: 0, scope: !17108, inlinedAt: !17676)
!17676 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17671)
!17677 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17676)
!17678 = !DILocation(line: 649, column: 1, scope: !17650)
!17679 = distinct !DISubprogram(name: "z_sched_start", scope: !2979, file: !2979, line: 651, type: !17018, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17680)
!17680 = !{!17681, !17682}
!17681 = !DILocalVariable(name: "thread", arg: 1, scope: !17679, file: !2979, line: 651, type: !2872)
!17682 = !DILocalVariable(name: "key", scope: !17679, file: !2979, line: 653, type: !17052)
!17683 = !DILocation(line: 0, scope: !17679)
!17684 = !DILocation(line: 0, scope: !17060, inlinedAt: !17685)
!17685 = distinct !DILocation(line: 653, column: 25, scope: !17679)
!17686 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17687)
!17687 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17685)
!17688 = !DILocation(line: 0, scope: !17069, inlinedAt: !17687)
!17689 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17685)
!17690 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17685)
!17691 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17685)
!17692 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17685)
!17693 = !DILocation(line: 655, column: 6, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17679, file: !2979, line: 655, column: 6)
!17695 = !DILocation(line: 655, column: 6, scope: !17679)
!17696 = !DILocation(line: 0, scope: !17094, inlinedAt: !17697)
!17697 = distinct !DILocation(line: 656, column: 3, scope: !17698)
!17698 = distinct !DILexicalBlock(scope: !17694, file: !2979, line: 655, column: 36)
!17699 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17697)
!17700 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17697)
!17701 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17697)
!17702 = !DILocation(line: 0, scope: !17108, inlinedAt: !17703)
!17703 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17697)
!17704 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17703)
!17705 = !DILocation(line: 657, column: 3, scope: !17698)
!17706 = !DILocation(line: 660, column: 2, scope: !17679)
!17707 = !DILocation(line: 661, column: 2, scope: !17679)
!17708 = !DILocation(line: 662, column: 2, scope: !17679)
!17709 = !DILocation(line: 663, column: 1, scope: !17679)
!17710 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15383, file: !15383, line: 126, type: !17201, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17711)
!17711 = !{!17712}
!17712 = !DILocalVariable(name: "thread", arg: 1, scope: !17710, file: !15383, line: 126, type: !2872)
!17713 = !DILocation(line: 0, scope: !17710)
!17714 = !DILocation(line: 128, column: 23, scope: !17710)
!17715 = !DILocation(line: 128, column: 36, scope: !17710)
!17716 = !DILocation(line: 128, column: 56, scope: !17710)
!17717 = !DILocation(line: 128, column: 2, scope: !17710)
!17718 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15383, file: !15383, line: 155, type: !17018, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17719)
!17719 = !{!17720}
!17720 = !DILocalVariable(name: "thread", arg: 1, scope: !17718, file: !15383, line: 155, type: !2872)
!17721 = !DILocation(line: 0, scope: !17718)
!17722 = !DILocation(line: 157, column: 15, scope: !17718)
!17723 = !DILocation(line: 157, column: 28, scope: !17718)
!17724 = !DILocation(line: 158, column: 1, scope: !17718)
!17725 = distinct !DISubprogram(name: "z_reschedule", scope: !2979, file: !2979, line: 967, type: !17095, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17726)
!17726 = !{!17727, !17728}
!17727 = !DILocalVariable(name: "lock", arg: 1, scope: !17725, file: !2979, line: 967, type: !17063)
!17728 = !DILocalVariable(name: "key", arg: 2, scope: !17725, file: !2979, line: 967, type: !17052)
!17729 = !DILocation(line: 0, scope: !17725)
!17730 = !DILocation(line: 969, column: 6, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17725, file: !2979, line: 969, column: 6)
!17732 = !DILocation(line: 969, column: 23, scope: !17731)
!17733 = !DILocation(line: 969, column: 26, scope: !17731)
!17734 = !DILocation(line: 969, column: 6, scope: !17725)
!17735 = !DILocalVariable(name: "key", arg: 2, scope: !17736, file: !15487, line: 193, type: !17052)
!17736 = distinct !DISubprogram(name: "z_swap", scope: !15487, file: !15487, line: 193, type: !17737, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17739)
!17737 = !DISubroutineType(types: !17738)
!17738 = !{!103, !17063, !17052}
!17739 = !{!17740, !17735}
!17740 = !DILocalVariable(name: "lock", arg: 1, scope: !17736, file: !15487, line: 193, type: !17063)
!17741 = !DILocation(line: 0, scope: !17736, inlinedAt: !17742)
!17742 = distinct !DILocation(line: 970, column: 3, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17731, file: !2979, line: 969, column: 39)
!17744 = !DILocalVariable(name: "l", arg: 1, scope: !17745, file: !152, line: 221, type: !17063)
!17745 = distinct !DISubprogram(name: "k_spin_release", scope: !152, file: !152, line: 221, type: !17746, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17748)
!17746 = !DISubroutineType(types: !17747)
!17747 = !{null, !17063}
!17748 = !{!17744}
!17749 = !DILocation(line: 0, scope: !17745, inlinedAt: !17750)
!17750 = distinct !DILocation(line: 195, column: 2, scope: !17736, inlinedAt: !17742)
!17751 = !DILocation(line: 225, column: 2, scope: !17752, inlinedAt: !17750)
!17752 = distinct !DILexicalBlock(scope: !17753, file: !152, line: 225, column: 2)
!17753 = distinct !DILexicalBlock(scope: !17745, file: !152, line: 225, column: 2)
!17754 = !DILocation(line: 225, column: 2, scope: !17753, inlinedAt: !17750)
!17755 = !DILocation(line: 225, column: 2, scope: !17756, inlinedAt: !17750)
!17756 = distinct !DILexicalBlock(scope: !17752, file: !152, line: 225, column: 2)
!17757 = !DILocation(line: 196, column: 9, scope: !17736, inlinedAt: !17742)
!17758 = !DILocation(line: 971, column: 2, scope: !17743)
!17759 = !DILocation(line: 0, scope: !17094, inlinedAt: !17760)
!17760 = distinct !DILocation(line: 972, column: 3, scope: !17761)
!17761 = distinct !DILexicalBlock(scope: !17731, file: !2979, line: 971, column: 9)
!17762 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17760)
!17763 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17760)
!17764 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17760)
!17765 = !DILocation(line: 0, scope: !17108, inlinedAt: !17766)
!17766 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17760)
!17767 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17766)
!17768 = !DILocation(line: 975, column: 1, scope: !17725)
!17769 = distinct !DISubprogram(name: "resched", scope: !2979, file: !2979, line: 940, type: !17770, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17772)
!17770 = !DISubroutineType(types: !17771)
!17771 = !{!122, !111}
!17772 = !{!17773}
!17773 = !DILocalVariable(name: "key", arg: 1, scope: !17769, file: !2979, line: 940, type: !111)
!17774 = !DILocation(line: 0, scope: !17769)
!17775 = !DILocalVariable(name: "key", arg: 1, scope: !17776, file: !7609, line: 112, type: !32)
!17776 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7609, file: !7609, line: 112, type: !17777, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17779)
!17777 = !DISubroutineType(types: !17778)
!17778 = !{!122, !32}
!17779 = !{!17775}
!17780 = !DILocation(line: 0, scope: !17776, inlinedAt: !17781)
!17781 = distinct !DILocation(line: 946, column: 9, scope: !17769)
!17782 = !DILocation(line: 115, column: 13, scope: !17776, inlinedAt: !17781)
!17783 = !DILocation(line: 946, column: 32, scope: !17769)
!17784 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !17788)
!17785 = distinct !DISubprogram(name: "__get_IPSR", scope: !7930, file: !7930, line: 1027, type: !8017, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17786)
!17786 = !{!17787}
!17787 = !DILocalVariable(name: "result", scope: !17785, file: !7930, line: 1029, type: !111)
!17788 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !17790)
!17789 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8980, file: !8980, line: 46, type: !8981, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!17790 = distinct !DILocation(line: 946, column: 36, scope: !17769)
!17791 = !{i64 3772418}
!17792 = !DILocation(line: 0, scope: !17785, inlinedAt: !17788)
!17793 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !17790)
!17794 = !DILocation(line: 946, column: 2, scope: !17769)
!17795 = distinct !DISubprogram(name: "need_swap", scope: !2979, file: !2979, line: 953, type: !8981, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17796)
!17796 = !{!17797}
!17797 = !DILocalVariable(name: "new_thread", scope: !17795, file: !2979, line: 959, type: !2872)
!17798 = !DILocation(line: 962, column: 31, scope: !17795)
!17799 = !DILocation(line: 0, scope: !17795)
!17800 = !DILocation(line: 963, column: 23, scope: !17795)
!17801 = !DILocation(line: 963, column: 20, scope: !17795)
!17802 = !DILocation(line: 963, column: 2, scope: !17795)
!17803 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15487, file: !15487, line: 181, type: !7940, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17804)
!17804 = !{!17805, !17806}
!17805 = !DILocalVariable(name: "key", arg: 1, scope: !17803, file: !15487, line: 181, type: !32)
!17806 = !DILocalVariable(name: "ret", scope: !17803, file: !15487, line: 183, type: !103)
!17807 = !DILocation(line: 0, scope: !17803)
!17808 = !DILocation(line: 185, column: 8, scope: !17803)
!17809 = !DILocation(line: 186, column: 2, scope: !17803)
!17810 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2979, file: !2979, line: 665, type: !17018, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17811)
!17811 = !{!17812, !17813, !17815}
!17812 = !DILocalVariable(name: "thread", arg: 1, scope: !17810, file: !2979, line: 665, type: !2872)
!17813 = !DILocalVariable(name: "__i", scope: !17814, file: !2979, line: 671, type: !17052)
!17814 = distinct !DILexicalBlock(scope: !17810, file: !2979, line: 671, column: 2)
!17815 = !DILocalVariable(name: "__key", scope: !17814, file: !2979, line: 671, type: !17052)
!17816 = !DILocation(line: 0, scope: !17810)
!17817 = !DILocation(line: 669, column: 8, scope: !17810)
!17818 = !DILocation(line: 0, scope: !17814)
!17819 = !DILocation(line: 0, scope: !17060, inlinedAt: !17820)
!17820 = distinct !DILocation(line: 671, column: 2, scope: !17814)
!17821 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17822)
!17822 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17820)
!17823 = !DILocation(line: 0, scope: !17069, inlinedAt: !17822)
!17824 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17820)
!17825 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17820)
!17826 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17820)
!17827 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17820)
!17828 = !DILocation(line: 672, column: 7, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17830, file: !2979, line: 672, column: 7)
!17830 = distinct !DILexicalBlock(scope: !17831, file: !2979, line: 671, column: 26)
!17831 = distinct !DILexicalBlock(scope: !17814, file: !2979, line: 671, column: 2)
!17832 = !DILocation(line: 672, column: 7, scope: !17830)
!17833 = !DILocation(line: 0, scope: !17252, inlinedAt: !17834)
!17834 = distinct !DILocation(line: 673, column: 4, scope: !17835)
!17835 = distinct !DILexicalBlock(scope: !17829, file: !2979, line: 672, column: 35)
!17836 = !DILocation(line: 266, column: 15, scope: !17252, inlinedAt: !17834)
!17837 = !DILocation(line: 266, column: 28, scope: !17252, inlinedAt: !17834)
!17838 = !DILocation(line: 0, scope: !17260, inlinedAt: !17839)
!17839 = distinct !DILocation(line: 268, column: 3, scope: !17264, inlinedAt: !17834)
!17840 = !DILocation(line: 234, column: 2, scope: !17260, inlinedAt: !17839)
!17841 = !DILocation(line: 674, column: 3, scope: !17835)
!17842 = !DILocation(line: 675, column: 3, scope: !17830)
!17843 = !DILocation(line: 676, column: 26, scope: !17830)
!17844 = !DILocation(line: 676, column: 23, scope: !17830)
!17845 = !DILocation(line: 676, column: 3, scope: !17830)
!17846 = !DILocation(line: 0, scope: !17094, inlinedAt: !17847)
!17847 = distinct !DILocation(line: 671, column: 2, scope: !17831)
!17848 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17847)
!17849 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17847)
!17850 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17847)
!17851 = !DILocation(line: 0, scope: !17108, inlinedAt: !17852)
!17852 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17847)
!17853 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17852)
!17854 = !DILocation(line: 679, column: 16, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17810, file: !2979, line: 679, column: 6)
!17856 = !DILocation(line: 679, column: 13, scope: !17855)
!17857 = !DILocation(line: 679, column: 6, scope: !17810)
!17858 = !DILocation(line: 680, column: 3, scope: !17859)
!17859 = distinct !DILexicalBlock(scope: !17855, file: !2979, line: 679, column: 26)
!17860 = !DILocation(line: 681, column: 2, scope: !17859)
!17861 = !DILocation(line: 684, column: 1, scope: !17810)
!17862 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15790, file: !15790, line: 52, type: !17036, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17863)
!17863 = !{!17864}
!17864 = !DILocalVariable(name: "thread", arg: 1, scope: !17862, file: !15790, line: 52, type: !2872)
!17865 = !DILocation(line: 0, scope: !17862)
!17866 = !DILocation(line: 54, column: 39, scope: !17862)
!17867 = !DILocation(line: 54, column: 9, scope: !17862)
!17868 = !DILocation(line: 54, column: 2, scope: !17862)
!17869 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15383, file: !15383, line: 141, type: !17018, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17870)
!17870 = !{!17871}
!17871 = !DILocalVariable(name: "thread", arg: 1, scope: !17869, file: !15383, line: 141, type: !2872)
!17872 = !DILocation(line: 0, scope: !17869)
!17873 = !DILocation(line: 143, column: 15, scope: !17869)
!17874 = !DILocation(line: 143, column: 28, scope: !17869)
!17875 = !DILocation(line: 146, column: 1, scope: !17869)
!17876 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15383, file: !15383, line: 73, type: !323, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!17877 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17878)
!17878 = distinct !DILocation(line: 75, column: 30, scope: !17876)
!17879 = !DILocation(line: 0, scope: !17069, inlinedAt: !17878)
!17880 = !DILocation(line: 75, column: 9, scope: !17876)
!17881 = !DILocation(line: 76, column: 1, scope: !17876)
!17882 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2979, file: !2979, line: 977, type: !8027, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17883)
!17883 = !{!17884}
!17884 = !DILocalVariable(name: "key", arg: 1, scope: !17882, file: !2979, line: 977, type: !111)
!17885 = !DILocation(line: 0, scope: !17882)
!17886 = !DILocation(line: 979, column: 6, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17882, file: !2979, line: 979, column: 6)
!17888 = !DILocation(line: 979, column: 6, scope: !17882)
!17889 = !DILocation(line: 980, column: 3, scope: !17890)
!17890 = distinct !DILexicalBlock(scope: !17887, file: !2979, line: 979, column: 20)
!17891 = !DILocation(line: 981, column: 2, scope: !17890)
!17892 = !DILocation(line: 0, scope: !17108, inlinedAt: !17893)
!17893 = distinct !DILocation(line: 982, column: 3, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !17887, file: !2979, line: 981, column: 9)
!17895 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17893)
!17896 = !DILocation(line: 985, column: 1, scope: !17882)
!17897 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2979, file: !2979, line: 695, type: !17018, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17898)
!17898 = !{!17899, !17900}
!17899 = !DILocalVariable(name: "thread", arg: 1, scope: !17897, file: !2979, line: 695, type: !2872)
!17900 = !DILocalVariable(name: "key", scope: !17897, file: !2979, line: 699, type: !17052)
!17901 = !DILocation(line: 0, scope: !17897)
!17902 = !DILocation(line: 0, scope: !17060, inlinedAt: !17903)
!17903 = distinct !DILocation(line: 699, column: 25, scope: !17897)
!17904 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17905)
!17905 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17903)
!17906 = !DILocation(line: 0, scope: !17069, inlinedAt: !17905)
!17907 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17903)
!17908 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17903)
!17909 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17903)
!17910 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17903)
!17911 = !DILocation(line: 702, column: 7, scope: !17912)
!17912 = distinct !DILexicalBlock(scope: !17897, file: !2979, line: 702, column: 6)
!17913 = !DILocation(line: 702, column: 6, scope: !17897)
!17914 = !DILocation(line: 0, scope: !17094, inlinedAt: !17915)
!17915 = distinct !DILocation(line: 703, column: 3, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17912, file: !2979, line: 702, column: 38)
!17917 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17915)
!17918 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17915)
!17919 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17915)
!17920 = !DILocation(line: 0, scope: !17108, inlinedAt: !17921)
!17921 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17915)
!17922 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17921)
!17923 = !DILocation(line: 704, column: 3, scope: !17916)
!17924 = !DILocation(line: 707, column: 2, scope: !17897)
!17925 = !DILocation(line: 708, column: 2, scope: !17897)
!17926 = !DILocation(line: 710, column: 2, scope: !17897)
!17927 = !DILocation(line: 713, column: 1, scope: !17897)
!17928 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15383, file: !15383, line: 96, type: !17201, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17929)
!17929 = !{!17930}
!17930 = !DILocalVariable(name: "thread", arg: 1, scope: !17928, file: !15383, line: 96, type: !2872)
!17931 = !DILocation(line: 0, scope: !17928)
!17932 = !DILocation(line: 98, column: 23, scope: !17928)
!17933 = !DILocation(line: 98, column: 36, scope: !17928)
!17934 = !DILocation(line: 98, column: 57, scope: !17928)
!17935 = !DILocation(line: 98, column: 2, scope: !17928)
!17936 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15383, file: !15383, line: 148, type: !17018, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17937)
!17937 = !{!17938}
!17938 = !DILocalVariable(name: "thread", arg: 1, scope: !17936, file: !15383, line: 148, type: !2872)
!17939 = !DILocation(line: 0, scope: !17936)
!17940 = !DILocation(line: 150, column: 15, scope: !17936)
!17941 = !DILocation(line: 150, column: 28, scope: !17936)
!17942 = !DILocation(line: 153, column: 1, scope: !17936)
!17943 = distinct !DISubprogram(name: "z_pend_thread", scope: !2979, file: !2979, line: 770, type: !17944, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17950)
!17944 = !DISubroutineType(types: !17945)
!17945 = !{null, !2872, !2903, !17946}
!17946 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17947)
!17947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17948)
!17948 = !{!17949}
!17949 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17947, file: !105, line: 66, baseType: !104, size: 64)
!17950 = !{!17951, !17952, !17953, !17954, !17956}
!17951 = !DILocalVariable(name: "thread", arg: 1, scope: !17943, file: !2979, line: 770, type: !2872)
!17952 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17943, file: !2979, line: 770, type: !2903)
!17953 = !DILocalVariable(name: "timeout", arg: 3, scope: !17943, file: !2979, line: 771, type: !17946)
!17954 = !DILocalVariable(name: "__i", scope: !17955, file: !2979, line: 774, type: !17052)
!17955 = distinct !DILexicalBlock(scope: !17943, file: !2979, line: 774, column: 2)
!17956 = !DILocalVariable(name: "__key", scope: !17955, file: !2979, line: 774, type: !17052)
!17957 = !DILocation(line: 0, scope: !17943)
!17958 = !DILocation(line: 773, column: 2, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17960, file: !2979, line: 773, column: 2)
!17960 = distinct !DILexicalBlock(scope: !17943, file: !2979, line: 773, column: 2)
!17961 = !DILocation(line: 773, column: 2, scope: !17960)
!17962 = !DILocation(line: 773, column: 2, scope: !17963)
!17963 = distinct !DILexicalBlock(scope: !17959, file: !2979, line: 773, column: 2)
!17964 = !DILocation(line: 0, scope: !17955)
!17965 = !DILocation(line: 0, scope: !17060, inlinedAt: !17966)
!17966 = distinct !DILocation(line: 774, column: 2, scope: !17955)
!17967 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !17968)
!17968 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !17966)
!17969 = !DILocation(line: 0, scope: !17069, inlinedAt: !17968)
!17970 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !17966)
!17971 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !17966)
!17972 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !17966)
!17973 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !17966)
!17974 = !DILocation(line: 775, column: 3, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17976, file: !2979, line: 774, column: 26)
!17976 = distinct !DILexicalBlock(scope: !17955, file: !2979, line: 774, column: 2)
!17977 = !DILocation(line: 0, scope: !17094, inlinedAt: !17978)
!17978 = distinct !DILocation(line: 774, column: 2, scope: !17976)
!17979 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !17978)
!17980 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !17978)
!17981 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !17978)
!17982 = !DILocation(line: 0, scope: !17108, inlinedAt: !17983)
!17983 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !17978)
!17984 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17983)
!17985 = !DILocation(line: 777, column: 1, scope: !17943)
!17986 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2979, file: !2979, line: 79, type: !17201, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17987)
!17987 = !{!17988}
!17988 = !DILocalVariable(name: "thread", arg: 1, scope: !17986, file: !2979, line: 79, type: !2872)
!17989 = !DILocation(line: 0, scope: !17986)
!17990 = !DILocation(line: 81, column: 23, scope: !17986)
!17991 = !DILocation(line: 81, column: 36, scope: !17986)
!17992 = !DILocation(line: 81, column: 53, scope: !17986)
!17993 = !DILocation(line: 81, column: 2, scope: !17986)
!17994 = distinct !DISubprogram(name: "pend_locked", scope: !2979, file: !2979, line: 760, type: !17944, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !17995)
!17995 = !{!17996, !17997, !17998}
!17996 = !DILocalVariable(name: "thread", arg: 1, scope: !17994, file: !2979, line: 760, type: !2872)
!17997 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17994, file: !2979, line: 760, type: !2903)
!17998 = !DILocalVariable(name: "timeout", arg: 3, scope: !17994, file: !2979, line: 761, type: !17946)
!17999 = !DILocation(line: 0, scope: !17994)
!18000 = !DILocation(line: 766, column: 2, scope: !17994)
!18001 = !DILocation(line: 767, column: 2, scope: !17994)
!18002 = !DILocation(line: 768, column: 1, scope: !17994)
!18003 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2979, file: !2979, line: 740, type: !18004, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18006)
!18004 = !DISubroutineType(types: !18005)
!18005 = !{null, !2872, !2903}
!18006 = !{!18007, !18008}
!18007 = !DILocalVariable(name: "thread", arg: 1, scope: !18003, file: !2979, line: 740, type: !2872)
!18008 = !DILocalVariable(name: "wait_q", arg: 2, scope: !18003, file: !2979, line: 740, type: !2903)
!18009 = !DILocation(line: 0, scope: !18003)
!18010 = !DILocation(line: 742, column: 2, scope: !18003)
!18011 = !DILocation(line: 743, column: 2, scope: !18003)
!18012 = !DILocation(line: 747, column: 13, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18003, file: !2979, line: 747, column: 6)
!18014 = !DILocation(line: 747, column: 6, scope: !18003)
!18015 = !DILocation(line: 748, column: 16, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18013, file: !2979, line: 747, column: 22)
!18017 = !DILocation(line: 748, column: 26, scope: !18016)
!18018 = !DILocation(line: 749, column: 28, scope: !18016)
!18019 = !DILocation(line: 0, scope: !17283, inlinedAt: !18020)
!18020 = distinct !DILocation(line: 749, column: 3, scope: !18016)
!18021 = !DILocation(line: 186, column: 2, scope: !17293, inlinedAt: !18020)
!18022 = !DILocation(line: 186, column: 2, scope: !17294, inlinedAt: !18020)
!18023 = !DILocation(line: 186, column: 2, scope: !17297, inlinedAt: !18020)
!18024 = !DILocation(line: 188, column: 2, scope: !17299, inlinedAt: !18020)
!18025 = !DILocation(line: 188, column: 2, scope: !17301, inlinedAt: !18020)
!18026 = !DILocation(line: 0, scope: !17299, inlinedAt: !18020)
!18027 = !DILocation(line: 189, column: 7, scope: !17304, inlinedAt: !18020)
!18028 = !DILocation(line: 189, column: 35, scope: !17304, inlinedAt: !18020)
!18029 = !DILocation(line: 189, column: 7, scope: !17305, inlinedAt: !18020)
!18030 = !DILocation(line: 191, column: 21, scope: !17309, inlinedAt: !18020)
!18031 = !DILocation(line: 190, column: 4, scope: !17309, inlinedAt: !18020)
!18032 = !DILocation(line: 192, column: 4, scope: !17309, inlinedAt: !18020)
!18033 = distinct !{!18033, !18024, !18034}
!18034 = !DILocation(line: 194, column: 2, scope: !17299, inlinedAt: !18020)
!18035 = !DILocation(line: 196, column: 37, scope: !17283, inlinedAt: !18020)
!18036 = !DILocation(line: 196, column: 2, scope: !17283, inlinedAt: !18020)
!18037 = !DILocation(line: 197, column: 1, scope: !17283, inlinedAt: !18020)
!18038 = !DILocation(line: 751, column: 1, scope: !18003)
!18039 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2979, file: !2979, line: 753, type: !18040, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18042)
!18040 = !DISubroutineType(types: !18041)
!18041 = !{null, !2872, !17946}
!18042 = !{!18043, !18044}
!18043 = !DILocalVariable(name: "thread", arg: 1, scope: !18039, file: !2979, line: 753, type: !2872)
!18044 = !DILocalVariable(name: "timeout", arg: 2, scope: !18039, file: !2979, line: 753, type: !17946)
!18045 = !DILocation(line: 0, scope: !18039)
!18046 = !DILocation(line: 755, column: 7, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18039, file: !2979, line: 755, column: 6)
!18048 = !DILocation(line: 755, column: 6, scope: !18039)
!18049 = !DILocation(line: 756, column: 3, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18047, file: !2979, line: 755, column: 41)
!18051 = !DILocation(line: 757, column: 2, scope: !18050)
!18052 = !DILocation(line: 758, column: 1, scope: !18039)
!18053 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15790, file: !15790, line: 47, type: !18040, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18054)
!18054 = !{!18055, !18056}
!18055 = !DILocalVariable(name: "thread", arg: 1, scope: !18053, file: !15790, line: 47, type: !2872)
!18056 = !DILocalVariable(name: "ticks", arg: 2, scope: !18053, file: !15790, line: 47, type: !17946)
!18057 = !DILocation(line: 0, scope: !18053)
!18058 = !DILocation(line: 49, column: 30, scope: !18053)
!18059 = !DILocation(line: 49, column: 2, scope: !18053)
!18060 = !DILocation(line: 50, column: 1, scope: !18053)
!18061 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2979, file: !2979, line: 795, type: !2929, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18062)
!18062 = !{!18063, !18064, !18065, !18067, !18068}
!18063 = !DILocalVariable(name: "timeout", arg: 1, scope: !18061, file: !2979, line: 795, type: !2931)
!18064 = !DILocalVariable(name: "thread", scope: !18061, file: !2979, line: 797, type: !2872)
!18065 = !DILocalVariable(name: "__i", scope: !18066, file: !2979, line: 800, type: !17052)
!18066 = distinct !DILexicalBlock(scope: !18061, file: !2979, line: 800, column: 2)
!18067 = !DILocalVariable(name: "__key", scope: !18066, file: !2979, line: 800, type: !17052)
!18068 = !DILocalVariable(name: "killed", scope: !18069, file: !2979, line: 801, type: !122)
!18069 = distinct !DILexicalBlock(scope: !18070, file: !2979, line: 800, column: 26)
!18070 = distinct !DILexicalBlock(scope: !18066, file: !2979, line: 800, column: 2)
!18071 = !DILocation(line: 0, scope: !18061)
!18072 = !DILocation(line: 797, column: 28, scope: !18061)
!18073 = !DILocation(line: 0, scope: !18066)
!18074 = !DILocation(line: 0, scope: !17060, inlinedAt: !18075)
!18075 = distinct !DILocation(line: 800, column: 2, scope: !18066)
!18076 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18077)
!18077 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18075)
!18078 = !DILocation(line: 0, scope: !17069, inlinedAt: !18077)
!18079 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18075)
!18080 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18075)
!18081 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18075)
!18082 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18075)
!18083 = !DILocation(line: 801, column: 27, scope: !18069)
!18084 = !DILocation(line: 801, column: 32, scope: !18069)
!18085 = !DILocation(line: 801, column: 61, scope: !18069)
!18086 = !DILocation(line: 0, scope: !18069)
!18087 = !DILocation(line: 804, column: 7, scope: !18069)
!18088 = !DILocation(line: 805, column: 21, scope: !18089)
!18089 = distinct !DILexicalBlock(scope: !18090, file: !2979, line: 805, column: 8)
!18090 = distinct !DILexicalBlock(scope: !18091, file: !2979, line: 804, column: 16)
!18091 = distinct !DILexicalBlock(scope: !18069, file: !2979, line: 804, column: 7)
!18092 = !DILocation(line: 805, column: 31, scope: !18089)
!18093 = !DILocation(line: 805, column: 8, scope: !18090)
!18094 = !DILocation(line: 806, column: 5, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18089, file: !2979, line: 805, column: 40)
!18096 = !DILocation(line: 807, column: 4, scope: !18095)
!18097 = !DILocation(line: 808, column: 4, scope: !18090)
!18098 = !DILocation(line: 809, column: 4, scope: !18090)
!18099 = !DILocation(line: 810, column: 4, scope: !18090)
!18100 = !DILocation(line: 811, column: 3, scope: !18090)
!18101 = !DILocation(line: 0, scope: !17094, inlinedAt: !18102)
!18102 = distinct !DILocation(line: 800, column: 2, scope: !18070)
!18103 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18102)
!18104 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18102)
!18105 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18102)
!18106 = !DILocation(line: 0, scope: !17108, inlinedAt: !18107)
!18107 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18102)
!18108 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18107)
!18109 = !DILocation(line: 813, column: 1, scope: !18061)
!18110 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2979, file: !2979, line: 779, type: !17018, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18111)
!18111 = !{!18112}
!18112 = !DILocalVariable(name: "thread", arg: 1, scope: !18110, file: !2979, line: 779, type: !2872)
!18113 = !DILocation(line: 0, scope: !18110)
!18114 = !DILocation(line: 781, column: 21, scope: !18110)
!18115 = !DILocation(line: 781, column: 2, scope: !18110)
!18116 = !DILocation(line: 782, column: 2, scope: !18110)
!18117 = !DILocation(line: 783, column: 15, scope: !18110)
!18118 = !DILocation(line: 783, column: 25, scope: !18110)
!18119 = !DILocation(line: 784, column: 1, scope: !18110)
!18120 = distinct !DISubprogram(name: "pended_on_thread", scope: !2979, file: !2979, line: 724, type: !18121, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18123)
!18121 = !DISubroutineType(types: !18122)
!18122 = !{!2903, !2872}
!18123 = !{!18124}
!18124 = !DILocalVariable(name: "thread", arg: 1, scope: !18120, file: !2979, line: 724, type: !2872)
!18125 = !DILocation(line: 0, scope: !18120)
!18126 = !DILocation(line: 726, column: 2, scope: !18127)
!18127 = distinct !DILexicalBlock(scope: !18128, file: !2979, line: 726, column: 2)
!18128 = distinct !DILexicalBlock(scope: !18120, file: !2979, line: 726, column: 2)
!18129 = !DILocation(line: 726, column: 2, scope: !18128)
!18130 = !DILocation(line: 726, column: 2, scope: !18131)
!18131 = distinct !DILexicalBlock(scope: !18127, file: !2979, line: 726, column: 2)
!18132 = !DILocation(line: 728, column: 2, scope: !18120)
!18133 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15383, file: !15383, line: 165, type: !17018, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18134)
!18134 = !{!18135}
!18135 = !DILocalVariable(name: "thread", arg: 1, scope: !18133, file: !15383, line: 165, type: !2872)
!18136 = !DILocation(line: 0, scope: !18133)
!18137 = !DILocation(line: 167, column: 15, scope: !18133)
!18138 = !DILocation(line: 167, column: 28, scope: !18133)
!18139 = !DILocation(line: 168, column: 1, scope: !18133)
!18140 = distinct !DISubprogram(name: "unready_thread", scope: !2979, file: !2979, line: 731, type: !17018, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18141)
!18141 = !{!18142}
!18142 = !DILocalVariable(name: "thread", arg: 1, scope: !18140, file: !2979, line: 731, type: !2872)
!18143 = !DILocation(line: 0, scope: !18140)
!18144 = !DILocation(line: 733, column: 6, scope: !18145)
!18145 = distinct !DILexicalBlock(scope: !18140, file: !2979, line: 733, column: 6)
!18146 = !DILocation(line: 733, column: 6, scope: !18140)
!18147 = !DILocation(line: 0, scope: !17252, inlinedAt: !18148)
!18148 = distinct !DILocation(line: 734, column: 3, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !18145, file: !2979, line: 733, column: 34)
!18150 = !DILocation(line: 266, column: 15, scope: !17252, inlinedAt: !18148)
!18151 = !DILocation(line: 266, column: 28, scope: !17252, inlinedAt: !18148)
!18152 = !DILocation(line: 0, scope: !17260, inlinedAt: !18153)
!18153 = distinct !DILocation(line: 268, column: 3, scope: !17264, inlinedAt: !18148)
!18154 = !DILocation(line: 234, column: 2, scope: !17260, inlinedAt: !18153)
!18155 = !DILocation(line: 735, column: 2, scope: !18149)
!18156 = !DILocation(line: 736, column: 25, scope: !18140)
!18157 = !DILocation(line: 736, column: 22, scope: !18140)
!18158 = !DILocation(line: 736, column: 2, scope: !18140)
!18159 = !DILocation(line: 737, column: 1, scope: !18140)
!18160 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15383, file: !15383, line: 160, type: !17018, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18161)
!18161 = !{!18162}
!18162 = !DILocalVariable(name: "thread", arg: 1, scope: !18160, file: !15383, line: 160, type: !2872)
!18163 = !DILocation(line: 0, scope: !18160)
!18164 = !DILocation(line: 162, column: 15, scope: !18160)
!18165 = !DILocation(line: 162, column: 28, scope: !18160)
!18166 = !DILocation(line: 163, column: 1, scope: !18160)
!18167 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2979, file: !2979, line: 786, type: !17018, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18168)
!18168 = !{!18169, !18170, !18172}
!18169 = !DILocalVariable(name: "thread", arg: 1, scope: !18167, file: !2979, line: 786, type: !2872)
!18170 = !DILocalVariable(name: "__i", scope: !18171, file: !2979, line: 788, type: !17052)
!18171 = distinct !DILexicalBlock(scope: !18167, file: !2979, line: 788, column: 2)
!18172 = !DILocalVariable(name: "__key", scope: !18171, file: !2979, line: 788, type: !17052)
!18173 = !DILocation(line: 0, scope: !18167)
!18174 = !DILocation(line: 0, scope: !18171)
!18175 = !DILocation(line: 0, scope: !17060, inlinedAt: !18176)
!18176 = distinct !DILocation(line: 788, column: 2, scope: !18171)
!18177 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18178)
!18178 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18176)
!18179 = !DILocation(line: 0, scope: !17069, inlinedAt: !18178)
!18180 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18176)
!18181 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18176)
!18182 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18176)
!18183 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18176)
!18184 = !DILocation(line: 789, column: 3, scope: !18185)
!18185 = distinct !DILexicalBlock(scope: !18186, file: !2979, line: 788, column: 26)
!18186 = distinct !DILexicalBlock(scope: !18171, file: !2979, line: 788, column: 2)
!18187 = !DILocation(line: 0, scope: !17094, inlinedAt: !18188)
!18188 = distinct !DILocation(line: 788, column: 2, scope: !18186)
!18189 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18188)
!18190 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18188)
!18191 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18188)
!18192 = !DILocation(line: 0, scope: !17108, inlinedAt: !18193)
!18193 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18188)
!18194 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18193)
!18195 = !DILocation(line: 791, column: 1, scope: !18167)
!18196 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2979, file: !2979, line: 816, type: !18197, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18199)
!18197 = !DISubroutineType(types: !18198)
!18198 = !{!103, !111, !2903, !17946}
!18199 = !{!18200, !18201, !18202, !18203, !18204, !18206}
!18200 = !DILocalVariable(name: "key", arg: 1, scope: !18196, file: !2979, line: 816, type: !111)
!18201 = !DILocalVariable(name: "wait_q", arg: 2, scope: !18196, file: !2979, line: 816, type: !2903)
!18202 = !DILocalVariable(name: "timeout", arg: 3, scope: !18196, file: !2979, line: 816, type: !17946)
!18203 = !DILocalVariable(name: "ret", scope: !18196, file: !2979, line: 828, type: !103)
!18204 = !DILocalVariable(name: "__i", scope: !18205, file: !2979, line: 829, type: !17052)
!18205 = distinct !DILexicalBlock(scope: !18196, file: !2979, line: 829, column: 2)
!18206 = !DILocalVariable(name: "__key", scope: !18205, file: !2979, line: 829, type: !17052)
!18207 = !DILocation(line: 0, scope: !18196)
!18208 = !DILocation(line: 823, column: 14, scope: !18196)
!18209 = !DILocation(line: 823, column: 2, scope: !18196)
!18210 = !DILocation(line: 826, column: 20, scope: !18196)
!18211 = !DILocation(line: 826, column: 18, scope: !18196)
!18212 = !DILocation(line: 828, column: 12, scope: !18196)
!18213 = !DILocation(line: 0, scope: !18205)
!18214 = !DILocation(line: 0, scope: !17060, inlinedAt: !18215)
!18215 = distinct !DILocation(line: 829, column: 2, scope: !18205)
!18216 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18217)
!18217 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18215)
!18218 = !DILocation(line: 0, scope: !17069, inlinedAt: !18217)
!18219 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18215)
!18220 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18215)
!18221 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18215)
!18222 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18215)
!18223 = !DILocation(line: 830, column: 7, scope: !18224)
!18224 = distinct !DILexicalBlock(scope: !18225, file: !2979, line: 830, column: 7)
!18225 = distinct !DILexicalBlock(scope: !18226, file: !2979, line: 829, column: 26)
!18226 = distinct !DILexicalBlock(scope: !18205, file: !2979, line: 829, column: 2)
!18227 = !DILocation(line: 830, column: 26, scope: !18224)
!18228 = !DILocation(line: 830, column: 23, scope: !18224)
!18229 = !DILocation(line: 830, column: 7, scope: !18225)
!18230 = !DILocation(line: 831, column: 20, scope: !18231)
!18231 = distinct !DILexicalBlock(scope: !18224, file: !2979, line: 830, column: 36)
!18232 = !DILocation(line: 832, column: 3, scope: !18231)
!18233 = !DILocation(line: 0, scope: !17094, inlinedAt: !18234)
!18234 = distinct !DILocation(line: 829, column: 2, scope: !18226)
!18235 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18234)
!18236 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18234)
!18237 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18234)
!18238 = !DILocation(line: 0, scope: !17108, inlinedAt: !18239)
!18239 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18234)
!18240 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18239)
!18241 = !DILocation(line: 834, column: 2, scope: !18196)
!18242 = distinct !DISubprogram(name: "z_pend_curr", scope: !2979, file: !2979, line: 840, type: !18243, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18245)
!18243 = !DISubroutineType(types: !18244)
!18244 = !{!103, !17063, !17052, !2903, !17946}
!18245 = !{!18246, !18247, !18248, !18249}
!18246 = !DILocalVariable(name: "lock", arg: 1, scope: !18242, file: !2979, line: 840, type: !17063)
!18247 = !DILocalVariable(name: "key", arg: 2, scope: !18242, file: !2979, line: 840, type: !17052)
!18248 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18242, file: !2979, line: 841, type: !2903)
!18249 = !DILocalVariable(name: "timeout", arg: 4, scope: !18242, file: !2979, line: 841, type: !17946)
!18250 = !DILocation(line: 0, scope: !18242)
!18251 = !DILocation(line: 844, column: 20, scope: !18242)
!18252 = !DILocation(line: 844, column: 18, scope: !18242)
!18253 = !DILocation(line: 846, column: 2, scope: !18254)
!18254 = distinct !DILexicalBlock(scope: !18255, file: !2979, line: 846, column: 2)
!18255 = distinct !DILexicalBlock(scope: !18242, file: !2979, line: 846, column: 2)
!18256 = !DILocation(line: 846, column: 2, scope: !18255)
!18257 = !DILocation(line: 846, column: 2, scope: !18258)
!18258 = distinct !DILexicalBlock(scope: !18254, file: !2979, line: 846, column: 2)
!18259 = !DILocation(line: 0, scope: !17060, inlinedAt: !18260)
!18260 = distinct !DILocation(line: 856, column: 9, scope: !18242)
!18261 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18262)
!18262 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18260)
!18263 = !DILocation(line: 0, scope: !17069, inlinedAt: !18262)
!18264 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18260)
!18265 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18260)
!18266 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18260)
!18267 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18260)
!18268 = !DILocation(line: 857, column: 14, scope: !18242)
!18269 = !DILocation(line: 857, column: 2, scope: !18242)
!18270 = !DILocation(line: 0, scope: !17745, inlinedAt: !18271)
!18271 = distinct !DILocation(line: 858, column: 2, scope: !18242)
!18272 = !DILocation(line: 225, column: 2, scope: !17752, inlinedAt: !18271)
!18273 = !DILocation(line: 225, column: 2, scope: !17753, inlinedAt: !18271)
!18274 = !DILocation(line: 225, column: 2, scope: !17756, inlinedAt: !18271)
!18275 = !DILocation(line: 0, scope: !17736, inlinedAt: !18276)
!18276 = distinct !DILocation(line: 859, column: 9, scope: !18242)
!18277 = !DILocation(line: 0, scope: !17745, inlinedAt: !18278)
!18278 = distinct !DILocation(line: 195, column: 2, scope: !17736, inlinedAt: !18276)
!18279 = !DILocation(line: 225, column: 2, scope: !17752, inlinedAt: !18278)
!18280 = !DILocation(line: 225, column: 2, scope: !17753, inlinedAt: !18278)
!18281 = !DILocation(line: 225, column: 2, scope: !17756, inlinedAt: !18278)
!18282 = !DILocation(line: 196, column: 9, scope: !17736, inlinedAt: !18276)
!18283 = !DILocation(line: 859, column: 2, scope: !18242)
!18284 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2979, file: !2979, line: 862, type: !18285, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18287)
!18285 = !DISubroutineType(types: !18286)
!18286 = !{!2872, !2903}
!18287 = !{!18288, !18289, !18290, !18292}
!18288 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18284, file: !2979, line: 862, type: !2903)
!18289 = !DILocalVariable(name: "thread", scope: !18284, file: !2979, line: 864, type: !2872)
!18290 = !DILocalVariable(name: "__i", scope: !18291, file: !2979, line: 866, type: !17052)
!18291 = distinct !DILexicalBlock(scope: !18284, file: !2979, line: 866, column: 2)
!18292 = !DILocalVariable(name: "__key", scope: !18291, file: !2979, line: 866, type: !17052)
!18293 = !DILocation(line: 0, scope: !18284)
!18294 = !DILocation(line: 0, scope: !18291)
!18295 = !DILocation(line: 0, scope: !17060, inlinedAt: !18296)
!18296 = distinct !DILocation(line: 866, column: 2, scope: !18291)
!18297 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18298)
!18298 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18296)
!18299 = !DILocation(line: 0, scope: !17069, inlinedAt: !18298)
!18300 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18296)
!18301 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18296)
!18302 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18296)
!18303 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18296)
!18304 = !DILocation(line: 867, column: 12, scope: !18305)
!18305 = distinct !DILexicalBlock(scope: !18306, file: !2979, line: 866, column: 26)
!18306 = distinct !DILexicalBlock(scope: !18291, file: !2979, line: 866, column: 2)
!18307 = !DILocation(line: 869, column: 14, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18305, file: !2979, line: 869, column: 7)
!18309 = !DILocation(line: 869, column: 7, scope: !18305)
!18310 = !DILocation(line: 870, column: 4, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18308, file: !2979, line: 869, column: 23)
!18312 = !DILocation(line: 871, column: 3, scope: !18311)
!18313 = !DILocation(line: 0, scope: !17094, inlinedAt: !18314)
!18314 = distinct !DILocation(line: 866, column: 2, scope: !18306)
!18315 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18314)
!18316 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18314)
!18317 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18314)
!18318 = !DILocation(line: 0, scope: !17108, inlinedAt: !18319)
!18319 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18314)
!18320 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18319)
!18321 = !DILocation(line: 874, column: 2, scope: !18284)
!18322 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2979, file: !2979, line: 877, type: !18285, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18323)
!18323 = !{!18324, !18325, !18326, !18328}
!18324 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18322, file: !2979, line: 877, type: !2903)
!18325 = !DILocalVariable(name: "thread", scope: !18322, file: !2979, line: 879, type: !2872)
!18326 = !DILocalVariable(name: "__i", scope: !18327, file: !2979, line: 881, type: !17052)
!18327 = distinct !DILexicalBlock(scope: !18322, file: !2979, line: 881, column: 2)
!18328 = !DILocalVariable(name: "__key", scope: !18327, file: !2979, line: 881, type: !17052)
!18329 = !DILocation(line: 0, scope: !18322)
!18330 = !DILocation(line: 0, scope: !18327)
!18331 = !DILocation(line: 0, scope: !17060, inlinedAt: !18332)
!18332 = distinct !DILocation(line: 881, column: 2, scope: !18327)
!18333 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18334)
!18334 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18332)
!18335 = !DILocation(line: 0, scope: !17069, inlinedAt: !18334)
!18336 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18332)
!18337 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18332)
!18338 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18332)
!18339 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18332)
!18340 = !DILocation(line: 882, column: 12, scope: !18341)
!18341 = distinct !DILexicalBlock(scope: !18342, file: !2979, line: 881, column: 26)
!18342 = distinct !DILexicalBlock(scope: !18327, file: !2979, line: 881, column: 2)
!18343 = !DILocation(line: 884, column: 14, scope: !18344)
!18344 = distinct !DILexicalBlock(scope: !18341, file: !2979, line: 884, column: 7)
!18345 = !DILocation(line: 884, column: 7, scope: !18341)
!18346 = !DILocation(line: 885, column: 4, scope: !18347)
!18347 = distinct !DILexicalBlock(scope: !18344, file: !2979, line: 884, column: 23)
!18348 = !DILocation(line: 886, column: 10, scope: !18347)
!18349 = !DILocation(line: 887, column: 3, scope: !18347)
!18350 = !DILocation(line: 0, scope: !17094, inlinedAt: !18351)
!18351 = distinct !DILocation(line: 881, column: 2, scope: !18342)
!18352 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18351)
!18353 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18351)
!18354 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18351)
!18355 = !DILocation(line: 0, scope: !17108, inlinedAt: !18356)
!18356 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18351)
!18357 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18356)
!18358 = !DILocation(line: 890, column: 2, scope: !18322)
!18359 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2979, file: !2979, line: 893, type: !17018, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18360)
!18360 = !{!18361}
!18361 = !DILocalVariable(name: "thread", arg: 1, scope: !18359, file: !2979, line: 893, type: !2872)
!18362 = !DILocation(line: 0, scope: !18359)
!18363 = !DILocation(line: 0, scope: !18167, inlinedAt: !18364)
!18364 = distinct !DILocation(line: 895, column: 2, scope: !18359)
!18365 = !DILocation(line: 0, scope: !18171, inlinedAt: !18364)
!18366 = !DILocation(line: 0, scope: !17060, inlinedAt: !18367)
!18367 = distinct !DILocation(line: 788, column: 2, scope: !18171, inlinedAt: !18364)
!18368 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18369)
!18369 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18367)
!18370 = !DILocation(line: 0, scope: !17069, inlinedAt: !18369)
!18371 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18367)
!18372 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18367)
!18373 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18367)
!18374 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18367)
!18375 = !DILocation(line: 789, column: 3, scope: !18185, inlinedAt: !18364)
!18376 = !DILocation(line: 0, scope: !17094, inlinedAt: !18377)
!18377 = distinct !DILocation(line: 788, column: 2, scope: !18186, inlinedAt: !18364)
!18378 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18377)
!18379 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18377)
!18380 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18377)
!18381 = !DILocation(line: 0, scope: !17108, inlinedAt: !18382)
!18382 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18377)
!18383 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18382)
!18384 = !DILocation(line: 896, column: 8, scope: !18359)
!18385 = !DILocation(line: 897, column: 1, scope: !18359)
!18386 = distinct !DISubprogram(name: "z_set_prio", scope: !2979, file: !2979, line: 902, type: !17421, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18387)
!18387 = !{!18388, !18389, !18390, !18391, !18393}
!18388 = !DILocalVariable(name: "thread", arg: 1, scope: !18386, file: !2979, line: 902, type: !2872)
!18389 = !DILocalVariable(name: "prio", arg: 2, scope: !18386, file: !2979, line: 902, type: !103)
!18390 = !DILocalVariable(name: "need_sched", scope: !18386, file: !2979, line: 904, type: !122)
!18391 = !DILocalVariable(name: "__i", scope: !18392, file: !2979, line: 906, type: !17052)
!18392 = distinct !DILexicalBlock(scope: !18386, file: !2979, line: 906, column: 2)
!18393 = !DILocalVariable(name: "__key", scope: !18392, file: !2979, line: 906, type: !17052)
!18394 = !DILocation(line: 0, scope: !18386)
!18395 = !DILocation(line: 0, scope: !18392)
!18396 = !DILocation(line: 0, scope: !17060, inlinedAt: !18397)
!18397 = distinct !DILocation(line: 906, column: 2, scope: !18392)
!18398 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18399)
!18399 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18397)
!18400 = !DILocation(line: 0, scope: !17069, inlinedAt: !18399)
!18401 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18397)
!18402 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18397)
!18403 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18397)
!18404 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18397)
!18405 = !DILocation(line: 907, column: 16, scope: !18406)
!18406 = distinct !DILexicalBlock(scope: !18407, file: !2979, line: 906, column: 26)
!18407 = distinct !DILexicalBlock(scope: !18392, file: !2979, line: 906, column: 2)
!18408 = !DILocation(line: 909, column: 7, scope: !18406)
!18409 = !DILocation(line: 0, scope: !17252, inlinedAt: !18410)
!18410 = distinct !DILocation(line: 912, column: 5, scope: !18411)
!18411 = distinct !DILexicalBlock(scope: !18412, file: !2979, line: 911, column: 63)
!18412 = distinct !DILexicalBlock(scope: !18413, file: !2979, line: 911, column: 8)
!18413 = distinct !DILexicalBlock(scope: !18414, file: !2979, line: 909, column: 19)
!18414 = distinct !DILexicalBlock(scope: !18406, file: !2979, line: 909, column: 7)
!18415 = !DILocation(line: 266, column: 28, scope: !17252, inlinedAt: !18410)
!18416 = !DILocation(line: 0, scope: !17260, inlinedAt: !18417)
!18417 = distinct !DILocation(line: 268, column: 3, scope: !17264, inlinedAt: !18410)
!18418 = !DILocation(line: 234, column: 2, scope: !17260, inlinedAt: !18417)
!18419 = !DILocation(line: 913, column: 23, scope: !18411)
!18420 = !DILocation(line: 0, scope: !17269, inlinedAt: !18421)
!18421 = distinct !DILocation(line: 914, column: 5, scope: !18411)
!18422 = !DILocation(line: 252, column: 28, scope: !17269, inlinedAt: !18421)
!18423 = !DILocation(line: 0, scope: !17276, inlinedAt: !18424)
!18424 = distinct !DILocation(line: 254, column: 3, scope: !17280, inlinedAt: !18421)
!18425 = !DILocation(line: 0, scope: !17283, inlinedAt: !18426)
!18426 = distinct !DILocation(line: 229, column: 2, scope: !17276, inlinedAt: !18424)
!18427 = !DILocation(line: 186, column: 2, scope: !17293, inlinedAt: !18426)
!18428 = !DILocation(line: 186, column: 2, scope: !17294, inlinedAt: !18426)
!18429 = !DILocation(line: 186, column: 2, scope: !17297, inlinedAt: !18426)
!18430 = !DILocation(line: 188, column: 2, scope: !17299, inlinedAt: !18426)
!18431 = !DILocation(line: 188, column: 2, scope: !17301, inlinedAt: !18426)
!18432 = !DILocation(line: 0, scope: !17299, inlinedAt: !18426)
!18433 = !DILocation(line: 189, column: 7, scope: !17304, inlinedAt: !18426)
!18434 = !DILocation(line: 189, column: 35, scope: !17304, inlinedAt: !18426)
!18435 = !DILocation(line: 189, column: 7, scope: !17305, inlinedAt: !18426)
!18436 = !DILocation(line: 190, column: 4, scope: !17309, inlinedAt: !18426)
!18437 = !DILocation(line: 192, column: 4, scope: !17309, inlinedAt: !18426)
!18438 = distinct !{!18438, !18430, !18439}
!18439 = !DILocation(line: 194, column: 2, scope: !17299, inlinedAt: !18426)
!18440 = !DILocation(line: 196, column: 2, scope: !17283, inlinedAt: !18426)
!18441 = !DILocation(line: 197, column: 1, scope: !17283, inlinedAt: !18426)
!18442 = !DILocation(line: 918, column: 4, scope: !18413)
!18443 = !DILocation(line: 919, column: 3, scope: !18413)
!18444 = !DILocation(line: 920, column: 22, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18414, file: !2979, line: 919, column: 10)
!18446 = !DILocation(line: 0, scope: !17094, inlinedAt: !18447)
!18447 = distinct !DILocation(line: 906, column: 2, scope: !18407)
!18448 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18447)
!18449 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18447)
!18450 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18447)
!18451 = !DILocation(line: 0, scope: !17108, inlinedAt: !18452)
!18452 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18447)
!18453 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18452)
!18454 = !DILocation(line: 926, column: 2, scope: !18386)
!18455 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2979, file: !2979, line: 929, type: !18456, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18458)
!18456 = !DISubroutineType(types: !18457)
!18457 = !{null, !2872, !103}
!18458 = !{!18459, !18460, !18461}
!18459 = !DILocalVariable(name: "thread", arg: 1, scope: !18455, file: !2979, line: 929, type: !2872)
!18460 = !DILocalVariable(name: "prio", arg: 2, scope: !18455, file: !2979, line: 929, type: !103)
!18461 = !DILocalVariable(name: "need_sched", scope: !18455, file: !2979, line: 931, type: !122)
!18462 = !DILocation(line: 0, scope: !18455)
!18463 = !DILocation(line: 931, column: 20, scope: !18455)
!18464 = !DILocation(line: 935, column: 17, scope: !18465)
!18465 = distinct !DILexicalBlock(scope: !18455, file: !2979, line: 935, column: 6)
!18466 = !DILocation(line: 935, column: 20, scope: !18465)
!18467 = !DILocation(line: 935, column: 35, scope: !18465)
!18468 = !DILocation(line: 935, column: 48, scope: !18465)
!18469 = !DILocation(line: 935, column: 6, scope: !18455)
!18470 = !DILocation(line: 936, column: 3, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18465, file: !2979, line: 935, column: 55)
!18472 = !DILocation(line: 937, column: 2, scope: !18471)
!18473 = !DILocation(line: 938, column: 1, scope: !18455)
!18474 = distinct !DISubprogram(name: "k_sched_lock", scope: !2979, file: !2979, line: 987, type: !323, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18475)
!18475 = !{!18476, !18478}
!18476 = !DILocalVariable(name: "__i", scope: !18477, file: !2979, line: 989, type: !17052)
!18477 = distinct !DILexicalBlock(scope: !18474, file: !2979, line: 989, column: 2)
!18478 = !DILocalVariable(name: "__key", scope: !18477, file: !2979, line: 989, type: !17052)
!18479 = !DILocation(line: 0, scope: !18477)
!18480 = !DILocation(line: 0, scope: !17060, inlinedAt: !18481)
!18481 = distinct !DILocation(line: 989, column: 2, scope: !18477)
!18482 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18483)
!18483 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18481)
!18484 = !DILocation(line: 0, scope: !17069, inlinedAt: !18483)
!18485 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18481)
!18486 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18481)
!18487 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18481)
!18488 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18481)
!18489 = !DILocation(line: 992, column: 3, scope: !18490)
!18490 = distinct !DILexicalBlock(scope: !18491, file: !2979, line: 989, column: 26)
!18491 = distinct !DILexicalBlock(scope: !18477, file: !2979, line: 989, column: 2)
!18492 = !DILocation(line: 0, scope: !17094, inlinedAt: !18493)
!18493 = distinct !DILocation(line: 989, column: 2, scope: !18491)
!18494 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18493)
!18495 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18493)
!18496 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18493)
!18497 = !DILocation(line: 0, scope: !17108, inlinedAt: !18498)
!18498 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18493)
!18499 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18498)
!18500 = !DILocation(line: 994, column: 1, scope: !18474)
!18501 = distinct !DISubprogram(name: "z_sched_lock", scope: !15383, file: !15383, line: 251, type: !323, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!18502 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !18503)
!18503 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !18504)
!18504 = distinct !DILocation(line: 253, column: 2, scope: !18505)
!18505 = distinct !DILexicalBlock(scope: !18506, file: !15383, line: 253, column: 2)
!18506 = distinct !DILexicalBlock(scope: !18501, file: !15383, line: 253, column: 2)
!18507 = !DILocation(line: 0, scope: !17785, inlinedAt: !18503)
!18508 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !18504)
!18509 = !DILocation(line: 253, column: 2, scope: !18506)
!18510 = !DILocation(line: 253, column: 2, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18505, file: !15383, line: 253, column: 2)
!18512 = !DILocation(line: 254, column: 2, scope: !18513)
!18513 = distinct !DILexicalBlock(scope: !18514, file: !15383, line: 254, column: 2)
!18514 = distinct !DILexicalBlock(scope: !18501, file: !15383, line: 254, column: 2)
!18515 = !DILocation(line: 254, column: 2, scope: !18514)
!18516 = !DILocation(line: 254, column: 2, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18513, file: !15383, line: 254, column: 2)
!18518 = !DILocation(line: 256, column: 2, scope: !18501)
!18519 = !DILocation(line: 258, column: 2, scope: !18520)
!18520 = distinct !DILexicalBlock(scope: !18501, file: !15383, line: 258, column: 2)
!18521 = !{i64 2155196466}
!18522 = !DILocation(line: 259, column: 1, scope: !18501)
!18523 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2979, file: !2979, line: 996, type: !323, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18524)
!18524 = !{!18525, !18527}
!18525 = !DILocalVariable(name: "__i", scope: !18526, file: !2979, line: 998, type: !17052)
!18526 = distinct !DILexicalBlock(scope: !18523, file: !2979, line: 998, column: 2)
!18527 = !DILocalVariable(name: "__key", scope: !18526, file: !2979, line: 998, type: !17052)
!18528 = !DILocation(line: 0, scope: !18526)
!18529 = !DILocation(line: 0, scope: !17060, inlinedAt: !18530)
!18530 = distinct !DILocation(line: 998, column: 2, scope: !18526)
!18531 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18532)
!18532 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18530)
!18533 = !DILocation(line: 0, scope: !17069, inlinedAt: !18532)
!18534 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18530)
!18535 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18530)
!18536 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18530)
!18537 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18530)
!18538 = !DILocation(line: 999, column: 3, scope: !18539)
!18539 = distinct !DILexicalBlock(scope: !18540, file: !2979, line: 999, column: 3)
!18540 = distinct !DILexicalBlock(scope: !18541, file: !2979, line: 999, column: 3)
!18541 = distinct !DILexicalBlock(scope: !18542, file: !2979, line: 998, column: 26)
!18542 = distinct !DILexicalBlock(scope: !18526, file: !2979, line: 998, column: 2)
!18543 = !DILocation(line: 999, column: 3, scope: !18540)
!18544 = !DILocation(line: 999, column: 3, scope: !18545)
!18545 = distinct !DILexicalBlock(scope: !18539, file: !2979, line: 999, column: 3)
!18546 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !18547)
!18547 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !18548)
!18548 = distinct !DILocation(line: 1000, column: 3, scope: !18549)
!18549 = distinct !DILexicalBlock(scope: !18550, file: !2979, line: 1000, column: 3)
!18550 = distinct !DILexicalBlock(scope: !18541, file: !2979, line: 1000, column: 3)
!18551 = !DILocation(line: 0, scope: !17785, inlinedAt: !18547)
!18552 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !18548)
!18553 = !DILocation(line: 1000, column: 3, scope: !18550)
!18554 = !DILocation(line: 1000, column: 3, scope: !18555)
!18555 = distinct !DILexicalBlock(scope: !18549, file: !2979, line: 1000, column: 3)
!18556 = !DILocation(line: 1002, column: 5, scope: !18541)
!18557 = !DILocation(line: 1002, column: 20, scope: !18541)
!18558 = !DILocation(line: 1002, column: 3, scope: !18541)
!18559 = !DILocation(line: 1003, column: 3, scope: !18541)
!18560 = !DILocation(line: 0, scope: !17094, inlinedAt: !18561)
!18561 = distinct !DILocation(line: 998, column: 2, scope: !18542)
!18562 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !18561)
!18563 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !18561)
!18564 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !18561)
!18565 = !DILocation(line: 0, scope: !17108, inlinedAt: !18566)
!18566 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !18561)
!18567 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !18566)
!18568 = !DILocation(line: 1011, column: 2, scope: !18523)
!18569 = !DILocation(line: 1012, column: 1, scope: !18523)
!18570 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2979, file: !2979, line: 1014, type: !17409, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!18571 = !DILocation(line: 1028, column: 25, scope: !18570)
!18572 = !DILocation(line: 1028, column: 2, scope: !18570)
!18573 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2979, file: !2979, line: 1155, type: !18574, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18576)
!18574 = !DISubroutineType(types: !18575)
!18575 = !{!122, !2901, !2901}
!18576 = !{!18577, !18578, !18579, !18580, !18581}
!18577 = !DILocalVariable(name: "a", arg: 1, scope: !18573, file: !2979, line: 1155, type: !2901)
!18578 = !DILocalVariable(name: "b", arg: 2, scope: !18573, file: !2979, line: 1155, type: !2901)
!18579 = !DILocalVariable(name: "thread_a", scope: !18573, file: !2979, line: 1157, type: !2872)
!18580 = !DILocalVariable(name: "thread_b", scope: !18573, file: !2979, line: 1157, type: !2872)
!18581 = !DILocalVariable(name: "cmp", scope: !18573, file: !2979, line: 1158, type: !320)
!18582 = !DILocation(line: 0, scope: !18573)
!18583 = !DILocation(line: 1160, column: 13, scope: !18573)
!18584 = !DILocation(line: 1161, column: 13, scope: !18573)
!18585 = !DILocation(line: 1163, column: 8, scope: !18573)
!18586 = !DILocation(line: 1165, column: 10, scope: !18587)
!18587 = distinct !DILexicalBlock(scope: !18573, file: !2979, line: 1165, column: 6)
!18588 = !DILocation(line: 1165, column: 6, scope: !18573)
!18589 = !DILocation(line: 1167, column: 17, scope: !18590)
!18590 = distinct !DILexicalBlock(scope: !18587, file: !2979, line: 1167, column: 13)
!18591 = !DILocation(line: 1167, column: 13, scope: !18587)
!18592 = !DILocation(line: 1170, column: 25, scope: !18593)
!18593 = distinct !DILexicalBlock(scope: !18590, file: !2979, line: 1169, column: 9)
!18594 = !DILocation(line: 1170, column: 52, scope: !18593)
!18595 = !DILocation(line: 1170, column: 35, scope: !18593)
!18596 = !DILocation(line: 1170, column: 3, scope: !18593)
!18597 = !DILocation(line: 0, scope: !18587)
!18598 = !DILocation(line: 1173, column: 1, scope: !18573)
!18599 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2979, file: !2979, line: 1175, type: !18600, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18615)
!18600 = !DISubroutineType(types: !18601)
!18601 = !{null, !18602, !2872}
!18602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18603, size: 32)
!18603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !18604, line: 37, size: 128, elements: !18605)
!18604 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18605 = !{!18606, !18614}
!18606 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !18603, file: !18604, line: 38, baseType: !18607, size: 96)
!18607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !211, line: 83, size: 96, elements: !18608)
!18608 = !{!18609, !18610, !18613}
!18609 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !18607, file: !211, line: 84, baseType: !2901, size: 32)
!18610 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !18607, file: !211, line: 85, baseType: !18611, size: 32, offset: 32)
!18611 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !211, line: 81, baseType: !18612)
!18612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18574, size: 32)
!18613 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !18607, file: !211, line: 86, baseType: !103, size: 32, offset: 64)
!18614 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !18603, file: !18604, line: 39, baseType: !103, size: 32, offset: 96)
!18615 = !{!18616, !18617, !18618, !18619, !18628}
!18616 = !DILocalVariable(name: "pq", arg: 1, scope: !18599, file: !2979, line: 1175, type: !18602)
!18617 = !DILocalVariable(name: "thread", arg: 2, scope: !18599, file: !2979, line: 1175, type: !2872)
!18618 = !DILocalVariable(name: "t", scope: !18599, file: !2979, line: 1177, type: !2872)
!18619 = !DILocalVariable(name: "__f", scope: !18620, file: !2979, line: 1190, type: !18623)
!18620 = distinct !DILexicalBlock(scope: !18621, file: !2979, line: 1190, column: 3)
!18621 = distinct !DILexicalBlock(scope: !18622, file: !2979, line: 1189, column: 27)
!18622 = distinct !DILexicalBlock(scope: !18599, file: !2979, line: 1189, column: 6)
!18623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !211, line: 155, size: 96, elements: !18624)
!18624 = !{!18625, !18626, !18627}
!18625 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !18623, file: !211, line: 156, baseType: !2974, size: 32)
!18626 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !18623, file: !211, line: 157, baseType: !550, size: 32, offset: 32)
!18627 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !18623, file: !211, line: 158, baseType: !320, size: 32, offset: 64)
!18628 = !DILocalVariable(name: "n", scope: !18629, file: !2979, line: 1190, type: !2901)
!18629 = distinct !DILexicalBlock(scope: !18630, file: !2979, line: 1190, column: 3)
!18630 = distinct !DILexicalBlock(scope: !18620, file: !2979, line: 1190, column: 3)
!18631 = !DILocation(line: 0, scope: !18599)
!18632 = !DILocation(line: 1179, column: 2, scope: !18633)
!18633 = distinct !DILexicalBlock(scope: !18634, file: !2979, line: 1179, column: 2)
!18634 = distinct !DILexicalBlock(scope: !18599, file: !2979, line: 1179, column: 2)
!18635 = !DILocation(line: 1179, column: 2, scope: !18634)
!18636 = !DILocation(line: 1179, column: 2, scope: !18637)
!18637 = distinct !DILexicalBlock(scope: !18633, file: !2979, line: 1179, column: 2)
!18638 = !DILocation(line: 1181, column: 31, scope: !18599)
!18639 = !DILocation(line: 1181, column: 45, scope: !18599)
!18640 = !DILocation(line: 1181, column: 15, scope: !18599)
!18641 = !DILocation(line: 1181, column: 25, scope: !18599)
!18642 = !DILocation(line: 1189, column: 11, scope: !18622)
!18643 = !DILocation(line: 1189, column: 7, scope: !18622)
!18644 = !DILocation(line: 1189, column: 6, scope: !18599)
!18645 = !DILocation(line: 1190, column: 3, scope: !18620)
!18646 = !DILocation(line: 1190, column: 3, scope: !18629)
!18647 = !DILocation(line: 0, scope: !18629)
!18648 = !DILocation(line: 1190, column: 3, scope: !18630)
!18649 = !DILocation(line: 1193, column: 2, scope: !18621)
!18650 = !DILocation(line: 1191, column: 42, scope: !18651)
!18651 = distinct !DILexicalBlock(scope: !18630, file: !2979, line: 1190, column: 54)
!18652 = !DILocation(line: 1191, column: 12, scope: !18651)
!18653 = !DILocation(line: 1191, column: 22, scope: !18651)
!18654 = distinct !{!18654, !18645, !18655}
!18655 = !DILocation(line: 1192, column: 3, scope: !18620)
!18656 = !DILocation(line: 1195, column: 17, scope: !18599)
!18657 = !DILocation(line: 1195, column: 37, scope: !18599)
!18658 = !DILocation(line: 1195, column: 2, scope: !18599)
!18659 = !DILocation(line: 1196, column: 1, scope: !18599)
!18660 = !DISubprogram(name: "z_rb_foreach_next", scope: !211, file: !211, line: 176, type: !18661, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!18661 = !DISubroutineType(types: !18662)
!18662 = !{!2901, !18663, !18664}
!18663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18607, size: 32)
!18664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18623, size: 32)
!18665 = !DISubprogram(name: "rb_insert", scope: !211, file: !211, line: 105, type: !18666, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!18666 = !DISubroutineType(types: !18667)
!18667 = !{null, !18663, !2901}
!18668 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2979, file: !2979, line: 1198, type: !18600, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18669)
!18669 = !{!18670, !18671}
!18670 = !DILocalVariable(name: "pq", arg: 1, scope: !18668, file: !2979, line: 1198, type: !18602)
!18671 = !DILocalVariable(name: "thread", arg: 2, scope: !18668, file: !2979, line: 1198, type: !2872)
!18672 = !DILocation(line: 0, scope: !18668)
!18673 = !DILocation(line: 1200, column: 2, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18675, file: !2979, line: 1200, column: 2)
!18675 = distinct !DILexicalBlock(scope: !18668, file: !2979, line: 1200, column: 2)
!18676 = !DILocation(line: 1200, column: 2, scope: !18675)
!18677 = !DILocation(line: 1200, column: 2, scope: !18678)
!18678 = distinct !DILexicalBlock(scope: !18674, file: !2979, line: 1200, column: 2)
!18679 = !DILocation(line: 1202, column: 17, scope: !18668)
!18680 = !DILocation(line: 1202, column: 37, scope: !18668)
!18681 = !DILocation(line: 1202, column: 2, scope: !18668)
!18682 = !DILocation(line: 1204, column: 16, scope: !18683)
!18683 = distinct !DILexicalBlock(scope: !18668, file: !2979, line: 1204, column: 6)
!18684 = !DILocation(line: 1204, column: 7, scope: !18683)
!18685 = !DILocation(line: 1204, column: 6, scope: !18668)
!18686 = !DILocation(line: 1205, column: 7, scope: !18687)
!18687 = distinct !DILexicalBlock(scope: !18683, file: !2979, line: 1204, column: 22)
!18688 = !DILocation(line: 1205, column: 22, scope: !18687)
!18689 = !DILocation(line: 1206, column: 2, scope: !18687)
!18690 = !DILocation(line: 1207, column: 1, scope: !18668)
!18691 = !DISubprogram(name: "rb_remove", scope: !211, file: !211, line: 110, type: !18666, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!18692 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2979, file: !2979, line: 1209, type: !18693, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18695)
!18693 = !DISubroutineType(types: !18694)
!18694 = !{!2872, !18602}
!18695 = !{!18696, !18697, !18698}
!18696 = !DILocalVariable(name: "pq", arg: 1, scope: !18692, file: !2979, line: 1209, type: !18602)
!18697 = !DILocalVariable(name: "thread", scope: !18692, file: !2979, line: 1211, type: !2872)
!18698 = !DILocalVariable(name: "n", scope: !18692, file: !2979, line: 1212, type: !2901)
!18699 = !DILocation(line: 0, scope: !18692)
!18700 = !DILocation(line: 1212, column: 37, scope: !18692)
!18701 = !DILocation(line: 1212, column: 21, scope: !18692)
!18702 = !DILocation(line: 1217, column: 2, scope: !18692)
!18703 = distinct !DISubprogram(name: "rb_get_min", scope: !211, file: !211, line: 115, type: !18704, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18706)
!18704 = !DISubroutineType(types: !18705)
!18705 = !{!2901, !18663}
!18706 = !{!18707}
!18707 = !DILocalVariable(name: "tree", arg: 1, scope: !18703, file: !211, line: 115, type: !18663)
!18708 = !DILocation(line: 0, scope: !18703)
!18709 = !DILocation(line: 117, column: 9, scope: !18703)
!18710 = !DILocation(line: 117, column: 2, scope: !18703)
!18711 = !DISubprogram(name: "z_rb_get_minmax", scope: !211, file: !211, line: 100, type: !18712, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2571)
!18712 = !DISubroutineType(types: !18713)
!18713 = !{!2901, !18663, !166}
!18714 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2979, file: !2979, line: 1246, type: !18715, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18725)
!18715 = !DISubroutineType(types: !18716)
!18716 = !{!2872, !18717}
!18717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18718, size: 32)
!18718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !18604, line: 53, size: 2080, elements: !18719)
!18719 = !{!18720, !18724}
!18720 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !18718, file: !18604, line: 54, baseType: !18721, size: 2048)
!18721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2908, size: 2048, elements: !18722)
!18722 = !{!18723}
!18723 = !DISubrange(count: 32)
!18724 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !18718, file: !18604, line: 55, baseType: !32, size: 32, offset: 2048)
!18725 = !{!18726, !18727, !18728, !18729}
!18726 = !DILocalVariable(name: "pq", arg: 1, scope: !18714, file: !2979, line: 1246, type: !18717)
!18727 = !DILocalVariable(name: "thread", scope: !18714, file: !2979, line: 1252, type: !2872)
!18728 = !DILocalVariable(name: "l", scope: !18714, file: !2979, line: 1253, type: !17286)
!18729 = !DILocalVariable(name: "n", scope: !18714, file: !2979, line: 1254, type: !2975)
!18730 = !DILocation(line: 0, scope: !18714)
!18731 = !DILocation(line: 1248, column: 11, scope: !18732)
!18732 = distinct !DILexicalBlock(scope: !18714, file: !2979, line: 1248, column: 6)
!18733 = !DILocation(line: 1248, column: 7, scope: !18732)
!18734 = !DILocation(line: 1248, column: 6, scope: !18714)
!18735 = !DILocation(line: 1253, column: 31, scope: !18714)
!18736 = !DILocation(line: 1253, column: 20, scope: !18714)
!18737 = !DILocation(line: 1254, column: 19, scope: !18714)
!18738 = !DILocation(line: 1260, column: 1, scope: !18714)
!18739 = distinct !DISubprogram(name: "z_unpend_all", scope: !2979, file: !2979, line: 1262, type: !18740, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18742)
!18740 = !DISubroutineType(types: !18741)
!18741 = !{!103, !2903}
!18742 = !{!18743, !18744, !18745}
!18743 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18739, file: !2979, line: 1262, type: !2903)
!18744 = !DILocalVariable(name: "need_sched", scope: !18739, file: !2979, line: 1264, type: !103)
!18745 = !DILocalVariable(name: "thread", scope: !18739, file: !2979, line: 1265, type: !2872)
!18746 = !DILocation(line: 0, scope: !18739)
!18747 = !DILocation(line: 1267, column: 19, scope: !18739)
!18748 = !DILocation(line: 1267, column: 41, scope: !18739)
!18749 = !DILocation(line: 1267, column: 2, scope: !18739)
!18750 = !DILocation(line: 1268, column: 3, scope: !18751)
!18751 = distinct !DILexicalBlock(scope: !18739, file: !2979, line: 1267, column: 50)
!18752 = !DILocation(line: 1269, column: 3, scope: !18751)
!18753 = distinct !{!18753, !18749, !18754}
!18754 = !DILocation(line: 1271, column: 2, scope: !18739)
!18755 = !DILocation(line: 1273, column: 2, scope: !18739)
!18756 = distinct !DISubprogram(name: "z_waitq_head", scope: !15722, file: !15722, line: 52, type: !18285, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18757)
!18757 = !{!18758}
!18758 = !DILocalVariable(name: "w", arg: 1, scope: !18756, file: !15722, line: 52, type: !2903)
!18759 = !DILocation(line: 0, scope: !18756)
!18760 = !DILocation(line: 54, column: 52, scope: !18756)
!18761 = !DILocation(line: 54, column: 28, scope: !18756)
!18762 = !DILocation(line: 54, column: 9, scope: !18756)
!18763 = !DILocation(line: 54, column: 2, scope: !18756)
!18764 = distinct !DISubprogram(name: "init_ready_q", scope: !2979, file: !2979, line: 1276, type: !18765, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18772)
!18765 = !DISubroutineType(types: !18766)
!18766 = !{null, !18767}
!18767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18768, size: 32)
!18768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !18769)
!18769 = !{!18770, !18771}
!18770 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !18768, file: !131, line: 86, baseType: !2872, size: 32)
!18771 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !18768, file: !131, line: 90, baseType: !2908, size: 64, offset: 32)
!18772 = !{!18773}
!18773 = !DILocalVariable(name: "rq", arg: 1, scope: !18764, file: !2979, line: 1276, type: !18767)
!18774 = !DILocation(line: 0, scope: !18764)
!18775 = !DILocation(line: 1289, column: 22, scope: !18764)
!18776 = !DILocation(line: 1289, column: 2, scope: !18764)
!18777 = !DILocation(line: 1291, column: 1, scope: !18764)
!18778 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !18779, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18781)
!18779 = !DISubroutineType(types: !18780)
!18780 = !{null, !17286}
!18781 = !{!18782}
!18782 = !DILocalVariable(name: "list", arg: 1, scope: !18778, file: !136, line: 197, type: !17286)
!18783 = !DILocation(line: 0, scope: !18778)
!18784 = !DILocation(line: 199, column: 8, scope: !18778)
!18785 = !DILocation(line: 199, column: 13, scope: !18778)
!18786 = !DILocation(line: 200, column: 8, scope: !18778)
!18787 = !DILocation(line: 200, column: 13, scope: !18778)
!18788 = !DILocation(line: 201, column: 1, scope: !18778)
!18789 = distinct !DISubprogram(name: "z_sched_init", scope: !2979, file: !2979, line: 1293, type: !323, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!18790 = !DILocation(line: 1302, column: 2, scope: !18789)
!18791 = !DILocation(line: 1306, column: 2, scope: !18789)
!18792 = !DILocation(line: 1309, column: 1, scope: !18789)
!18793 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2979, file: !2979, line: 1311, type: !18794, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18797)
!18794 = !DISubroutineType(types: !18795)
!18795 = !{!103, !18796}
!18796 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2872)
!18797 = !{!18798}
!18798 = !DILocalVariable(name: "thread", arg: 1, scope: !18793, file: !2979, line: 1311, type: !18796)
!18799 = !DILocation(line: 0, scope: !18793)
!18800 = !DILocation(line: 1313, column: 22, scope: !18793)
!18801 = !DILocation(line: 1313, column: 9, scope: !18793)
!18802 = !DILocation(line: 1313, column: 2, scope: !18793)
!18803 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2979, file: !2979, line: 1325, type: !18804, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18806)
!18804 = !DISubroutineType(types: !18805)
!18805 = !{null, !18796, !103}
!18806 = !{!18807, !18808, !18809}
!18807 = !DILocalVariable(name: "thread", arg: 1, scope: !18803, file: !2979, line: 1325, type: !18796)
!18808 = !DILocalVariable(name: "prio", arg: 2, scope: !18803, file: !2979, line: 1325, type: !103)
!18809 = !DILocalVariable(name: "th", scope: !18803, file: !2979, line: 1334, type: !2872)
!18810 = !DILocation(line: 0, scope: !18803)
!18811 = !DILocation(line: 1331, column: 2, scope: !18812)
!18812 = distinct !DILexicalBlock(scope: !18813, file: !2979, line: 1331, column: 2)
!18813 = distinct !DILexicalBlock(scope: !18814, file: !2979, line: 1331, column: 2)
!18814 = distinct !DILexicalBlock(scope: !18803, file: !2979, line: 1331, column: 2)
!18815 = !DILocation(line: 1331, column: 2, scope: !18816)
!18816 = distinct !DILexicalBlock(scope: !18812, file: !2979, line: 1331, column: 2)
!18817 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !18818)
!18818 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !18819)
!18819 = distinct !DILocation(line: 1332, column: 2, scope: !18820)
!18820 = distinct !DILexicalBlock(scope: !18821, file: !2979, line: 1332, column: 2)
!18821 = distinct !DILexicalBlock(scope: !18803, file: !2979, line: 1332, column: 2)
!18822 = !DILocation(line: 0, scope: !17785, inlinedAt: !18818)
!18823 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !18819)
!18824 = !DILocation(line: 1332, column: 2, scope: !18821)
!18825 = !DILocation(line: 1332, column: 2, scope: !18826)
!18826 = distinct !DILexicalBlock(scope: !18820, file: !2979, line: 1332, column: 2)
!18827 = !DILocation(line: 1336, column: 2, scope: !18803)
!18828 = !DILocation(line: 1337, column: 1, scope: !18803)
!18829 = distinct !DISubprogram(name: "k_can_yield", scope: !2979, file: !2979, line: 1384, type: !8981, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!18830 = !DILocation(line: 1386, column: 11, scope: !18829)
!18831 = !DILocation(line: 1386, column: 29, scope: !18829)
!18832 = !DILocation(line: 1386, column: 32, scope: !18829)
!18833 = !DILocation(line: 1386, column: 46, scope: !18829)
!18834 = !DILocation(line: 1387, column: 28, scope: !18829)
!18835 = !DILocation(line: 1387, column: 4, scope: !18829)
!18836 = !DILocation(line: 1386, column: 2, scope: !18829)
!18837 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !127, file: !127, line: 989, type: !8981, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!18838 = !DILocation(line: 993, column: 10, scope: !18837)
!18839 = !DILocation(line: 993, column: 2, scope: !18837)
!18840 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2979, file: !2979, line: 1390, type: !323, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18841)
!18841 = !{!18842}
!18842 = !DILocalVariable(name: "key", scope: !18840, file: !2979, line: 1396, type: !17052)
!18843 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !18844)
!18844 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !18845)
!18845 = distinct !DILocation(line: 1392, column: 2, scope: !18846)
!18846 = distinct !DILexicalBlock(scope: !18847, file: !2979, line: 1392, column: 2)
!18847 = distinct !DILexicalBlock(scope: !18840, file: !2979, line: 1392, column: 2)
!18848 = !DILocation(line: 0, scope: !17785, inlinedAt: !18844)
!18849 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !18845)
!18850 = !DILocation(line: 1392, column: 2, scope: !18847)
!18851 = !DILocation(line: 1392, column: 2, scope: !18852)
!18852 = distinct !DILexicalBlock(scope: !18846, file: !2979, line: 1392, column: 2)
!18853 = !DILocation(line: 0, scope: !17060, inlinedAt: !18854)
!18854 = distinct !DILocation(line: 1396, column: 25, scope: !18840)
!18855 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18856)
!18856 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18854)
!18857 = !DILocation(line: 0, scope: !17069, inlinedAt: !18856)
!18858 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18854)
!18859 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18854)
!18860 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18854)
!18861 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18854)
!18862 = !DILocation(line: 0, scope: !18840)
!18863 = !DILocation(line: 1400, column: 18, scope: !18864)
!18864 = distinct !DILexicalBlock(scope: !18865, file: !2979, line: 1399, column: 36)
!18865 = distinct !DILexicalBlock(scope: !18840, file: !2979, line: 1398, column: 6)
!18866 = !DILocation(line: 0, scope: !17252, inlinedAt: !18867)
!18867 = distinct !DILocation(line: 1400, column: 3, scope: !18864)
!18868 = !DILocation(line: 266, column: 15, scope: !17252, inlinedAt: !18867)
!18869 = !DILocation(line: 266, column: 28, scope: !17252, inlinedAt: !18867)
!18870 = !DILocation(line: 0, scope: !17260, inlinedAt: !18871)
!18871 = distinct !DILocation(line: 268, column: 3, scope: !17264, inlinedAt: !18867)
!18872 = !DILocation(line: 234, column: 2, scope: !17260, inlinedAt: !18871)
!18873 = !DILocation(line: 1402, column: 15, scope: !18840)
!18874 = !DILocation(line: 0, scope: !17269, inlinedAt: !18875)
!18875 = distinct !DILocation(line: 1402, column: 2, scope: !18840)
!18876 = !DILocation(line: 252, column: 15, scope: !17269, inlinedAt: !18875)
!18877 = !DILocation(line: 252, column: 28, scope: !17269, inlinedAt: !18875)
!18878 = !DILocation(line: 0, scope: !17276, inlinedAt: !18879)
!18879 = distinct !DILocation(line: 254, column: 3, scope: !17280, inlinedAt: !18875)
!18880 = !DILocation(line: 0, scope: !17283, inlinedAt: !18881)
!18881 = distinct !DILocation(line: 229, column: 2, scope: !17276, inlinedAt: !18879)
!18882 = !DILocation(line: 186, column: 2, scope: !17293, inlinedAt: !18881)
!18883 = !DILocation(line: 186, column: 2, scope: !17294, inlinedAt: !18881)
!18884 = !DILocation(line: 186, column: 2, scope: !17297, inlinedAt: !18881)
!18885 = !DILocation(line: 188, column: 2, scope: !17299, inlinedAt: !18881)
!18886 = !DILocation(line: 188, column: 2, scope: !17301, inlinedAt: !18881)
!18887 = !DILocation(line: 0, scope: !17299, inlinedAt: !18881)
!18888 = !DILocation(line: 189, column: 7, scope: !17304, inlinedAt: !18881)
!18889 = !DILocation(line: 189, column: 35, scope: !17304, inlinedAt: !18881)
!18890 = !DILocation(line: 189, column: 7, scope: !17305, inlinedAt: !18881)
!18891 = !DILocation(line: 191, column: 21, scope: !17309, inlinedAt: !18881)
!18892 = !DILocation(line: 190, column: 4, scope: !17309, inlinedAt: !18881)
!18893 = !DILocation(line: 192, column: 4, scope: !17309, inlinedAt: !18881)
!18894 = distinct !{!18894, !18885, !18895}
!18895 = !DILocation(line: 194, column: 2, scope: !17299, inlinedAt: !18881)
!18896 = !DILocation(line: 196, column: 37, scope: !17283, inlinedAt: !18881)
!18897 = !DILocation(line: 196, column: 2, scope: !17283, inlinedAt: !18881)
!18898 = !DILocation(line: 197, column: 1, scope: !17283, inlinedAt: !18881)
!18899 = !DILocation(line: 1403, column: 2, scope: !18840)
!18900 = !DILocation(line: 0, scope: !17736, inlinedAt: !18901)
!18901 = distinct !DILocation(line: 1404, column: 2, scope: !18840)
!18902 = !DILocation(line: 0, scope: !17745, inlinedAt: !18903)
!18903 = distinct !DILocation(line: 195, column: 2, scope: !17736, inlinedAt: !18901)
!18904 = !DILocation(line: 225, column: 2, scope: !17752, inlinedAt: !18903)
!18905 = !DILocation(line: 225, column: 2, scope: !17753, inlinedAt: !18903)
!18906 = !DILocation(line: 225, column: 2, scope: !17756, inlinedAt: !18903)
!18907 = !DILocation(line: 196, column: 9, scope: !17736, inlinedAt: !18901)
!18908 = !DILocation(line: 1405, column: 1, scope: !18840)
!18909 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2979, file: !2979, line: 1459, type: !18910, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18912)
!18910 = !DISubroutineType(types: !18911)
!18911 = !{!320, !17946}
!18912 = !{!18913, !18914, !18915}
!18913 = !DILocalVariable(name: "timeout", arg: 1, scope: !18909, file: !2979, line: 1459, type: !17946)
!18914 = !DILocalVariable(name: "ticks", scope: !18909, file: !2979, line: 1461, type: !104)
!18915 = !DILocalVariable(name: "ret", scope: !18909, file: !2979, line: 1480, type: !320)
!18916 = !DILocation(line: 0, scope: !18909)
!18917 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !18918)
!18918 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !18919)
!18919 = distinct !DILocation(line: 1463, column: 2, scope: !18920)
!18920 = distinct !DILexicalBlock(scope: !18921, file: !2979, line: 1463, column: 2)
!18921 = distinct !DILexicalBlock(scope: !18909, file: !2979, line: 1463, column: 2)
!18922 = !DILocation(line: 0, scope: !17785, inlinedAt: !18918)
!18923 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !18919)
!18924 = !DILocation(line: 1463, column: 2, scope: !18921)
!18925 = !DILocation(line: 1463, column: 2, scope: !18926)
!18926 = distinct !DILexicalBlock(scope: !18920, file: !2979, line: 1463, column: 2)
!18927 = !DILocation(line: 1468, column: 6, scope: !18928)
!18928 = distinct !DILexicalBlock(scope: !18909, file: !2979, line: 1468, column: 6)
!18929 = !DILocation(line: 1468, column: 6, scope: !18909)
!18930 = !DILocation(line: 1469, column: 20, scope: !18931)
!18931 = distinct !DILexicalBlock(scope: !18928, file: !2979, line: 1468, column: 40)
!18932 = !DILocation(line: 1469, column: 3, scope: !18931)
!18933 = !DILocation(line: 1473, column: 3, scope: !18931)
!18934 = !DILocation(line: 1478, column: 10, scope: !18909)
!18935 = !DILocation(line: 1480, column: 16, scope: !18909)
!18936 = !DILocation(line: 1485, column: 1, scope: !18909)
!18937 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5334, file: !5334, line: 310, type: !18938, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18940)
!18938 = !DISubroutineType(types: !18939)
!18939 = !{null, !18796}
!18940 = !{!18941}
!18941 = !DILocalVariable(name: "thread", arg: 1, scope: !18937, file: !5334, line: 310, type: !18796)
!18942 = !DILocation(line: 0, scope: !18937)
!18943 = !DILocation(line: 319, column: 2, scope: !18944)
!18944 = distinct !DILexicalBlock(scope: !18937, file: !5334, line: 319, column: 2)
!18945 = !{i64 2155112624}
!18946 = !DILocation(line: 320, column: 2, scope: !18937)
!18947 = !DILocation(line: 321, column: 1, scope: !18937)
!18948 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2979, file: !2979, line: 1415, type: !18949, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !18951)
!18949 = !DISubroutineType(types: !18950)
!18950 = !{!320, !104}
!18951 = !{!18952, !18953, !18954, !18955}
!18952 = !DILocalVariable(name: "ticks", arg: 1, scope: !18948, file: !2979, line: 1415, type: !104)
!18953 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !18948, file: !2979, line: 1418, type: !111)
!18954 = !DILocalVariable(name: "timeout", scope: !18948, file: !2979, line: 1430, type: !17946)
!18955 = !DILocalVariable(name: "key", scope: !18948, file: !2979, line: 1437, type: !17052)
!18956 = !DILocation(line: 0, scope: !18948)
!18957 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !18958)
!18958 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !18959)
!18959 = distinct !DILocation(line: 1420, column: 2, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18961, file: !2979, line: 1420, column: 2)
!18961 = distinct !DILexicalBlock(scope: !18948, file: !2979, line: 1420, column: 2)
!18962 = !DILocation(line: 0, scope: !17785, inlinedAt: !18958)
!18963 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !18959)
!18964 = !DILocation(line: 1420, column: 2, scope: !18961)
!18965 = !DILocation(line: 1420, column: 2, scope: !18966)
!18966 = distinct !DILexicalBlock(scope: !18960, file: !2979, line: 1420, column: 2)
!18967 = !DILocation(line: 1425, column: 12, scope: !18968)
!18968 = distinct !DILexicalBlock(scope: !18948, file: !2979, line: 1425, column: 6)
!18969 = !DILocation(line: 1425, column: 6, scope: !18948)
!18970 = !DILocation(line: 1426, column: 3, scope: !18971)
!18971 = distinct !DILexicalBlock(scope: !18968, file: !2979, line: 1425, column: 18)
!18972 = !DILocation(line: 1427, column: 3, scope: !18971)
!18973 = !DILocation(line: 1431, column: 24, scope: !18974)
!18974 = distinct !DILexicalBlock(scope: !18948, file: !2979, line: 1431, column: 6)
!18975 = !DILocation(line: 1431, column: 6, scope: !18948)
!18976 = !DILocation(line: 1432, column: 35, scope: !18977)
!18977 = distinct !DILexicalBlock(scope: !18974, file: !2979, line: 1431, column: 30)
!18978 = !DILocation(line: 1432, column: 27, scope: !18977)
!18979 = !DILocation(line: 1433, column: 2, scope: !18977)
!18980 = !DILocation(line: 1434, column: 27, scope: !18981)
!18981 = distinct !DILexicalBlock(scope: !18974, file: !2979, line: 1433, column: 9)
!18982 = !DILocation(line: 0, scope: !18974)
!18983 = !DILocation(line: 0, scope: !17060, inlinedAt: !18984)
!18984 = distinct !DILocation(line: 1437, column: 25, scope: !18948)
!18985 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !18986)
!18986 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !18984)
!18987 = !DILocation(line: 0, scope: !17069, inlinedAt: !18986)
!18988 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !18984)
!18989 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !18984)
!18990 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !18984)
!18991 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !18984)
!18992 = !DILocation(line: 1440, column: 20, scope: !18948)
!18993 = !DILocation(line: 1440, column: 18, scope: !18948)
!18994 = !DILocation(line: 1442, column: 2, scope: !18948)
!18995 = !DILocation(line: 1443, column: 23, scope: !18948)
!18996 = !DILocation(line: 1443, column: 2, scope: !18948)
!18997 = !DILocation(line: 1444, column: 29, scope: !18948)
!18998 = !DILocation(line: 1444, column: 2, scope: !18948)
!18999 = !DILocation(line: 0, scope: !17736, inlinedAt: !19000)
!19000 = distinct !DILocation(line: 1446, column: 8, scope: !18948)
!19001 = !DILocation(line: 0, scope: !17745, inlinedAt: !19002)
!19002 = distinct !DILocation(line: 195, column: 2, scope: !17736, inlinedAt: !19000)
!19003 = !DILocation(line: 225, column: 2, scope: !17752, inlinedAt: !19002)
!19004 = !DILocation(line: 225, column: 2, scope: !17753, inlinedAt: !19002)
!19005 = !DILocation(line: 225, column: 2, scope: !17756, inlinedAt: !19002)
!19006 = !DILocation(line: 196, column: 9, scope: !17736, inlinedAt: !19000)
!19007 = !DILocation(line: 1448, column: 2, scope: !19008)
!19008 = distinct !DILexicalBlock(scope: !19009, file: !2979, line: 1448, column: 2)
!19009 = distinct !DILexicalBlock(scope: !18948, file: !2979, line: 1448, column: 2)
!19010 = !DILocation(line: 1448, column: 2, scope: !19009)
!19011 = !DILocation(line: 1448, column: 2, scope: !19012)
!19012 = distinct !DILexicalBlock(scope: !19008, file: !2979, line: 1448, column: 2)
!19013 = !DILocation(line: 1450, column: 10, scope: !18948)
!19014 = !DILocation(line: 1450, column: 45, scope: !18948)
!19015 = !DILocation(line: 1450, column: 43, scope: !18948)
!19016 = !DILocation(line: 1451, column: 6, scope: !18948)
!19017 = !DILocation(line: 1457, column: 1, scope: !18948)
!19018 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3974, file: !3974, line: 1103, type: !3975, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19019)
!19019 = !{!19020}
!19020 = !DILocalVariable(name: "t", arg: 1, scope: !19018, file: !3974, line: 1103, type: !112)
!19021 = !DILocation(line: 0, scope: !19018)
!19022 = !DILocation(line: 0, scope: !17120, inlinedAt: !19023)
!19023 = distinct !DILocation(line: 1106, column: 9, scope: !19018)
!19024 = !DILocation(line: 139, column: 13, scope: !19025, inlinedAt: !19023)
!19025 = distinct !DILexicalBlock(scope: !19026, file: !3974, line: 138, column: 10)
!19026 = distinct !DILexicalBlock(scope: !19027, file: !3974, line: 136, column: 7)
!19027 = distinct !DILexicalBlock(scope: !17141, file: !3974, line: 134, column: 17)
!19028 = !DILocation(line: 1106, column: 2, scope: !19018)
!19029 = distinct !DISubprogram(name: "k_yield", scope: !5334, file: !5334, line: 140, type: !323, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!19030 = !DILocation(line: 148, column: 2, scope: !19031)
!19031 = distinct !DILexicalBlock(scope: !19029, file: !5334, line: 148, column: 2)
!19032 = !{i64 2155111944}
!19033 = !DILocation(line: 149, column: 2, scope: !19029)
!19034 = !DILocation(line: 150, column: 1, scope: !19029)
!19035 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2979, file: !2979, line: 1495, type: !19036, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19038)
!19036 = !DISubroutineType(types: !19037)
!19037 = !{!320, !103}
!19038 = !{!19039, !19040}
!19039 = !DILocalVariable(name: "us", arg: 1, scope: !19035, file: !2979, line: 1495, type: !103)
!19040 = !DILocalVariable(name: "ticks", scope: !19035, file: !2979, line: 1497, type: !320)
!19041 = !DILocation(line: 0, scope: !19035)
!19042 = !DILocation(line: 1501, column: 31, scope: !19035)
!19043 = !DILocation(line: 1501, column: 10, scope: !19035)
!19044 = !DILocation(line: 1502, column: 23, scope: !19035)
!19045 = !DILocation(line: 1502, column: 10, scope: !19035)
!19046 = !DILocation(line: 1506, column: 31, scope: !19035)
!19047 = !DILocation(line: 1506, column: 9, scope: !19035)
!19048 = !DILocation(line: 1506, column: 2, scope: !19035)
!19049 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3974, file: !3974, line: 571, type: !3975, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19050)
!19050 = !{!19051}
!19051 = !DILocalVariable(name: "t", arg: 1, scope: !19049, file: !3974, line: 571, type: !112)
!19052 = !DILocation(line: 0, scope: !19049)
!19053 = !DILocation(line: 0, scope: !17120, inlinedAt: !19054)
!19054 = distinct !DILocation(line: 574, column: 9, scope: !19049)
!19055 = !DILocation(line: 135, column: 5, scope: !19027, inlinedAt: !19054)
!19056 = !DILocation(line: 139, column: 13, scope: !19025, inlinedAt: !19054)
!19057 = !DILocation(line: 574, column: 2, scope: !19049)
!19058 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3974, file: !3974, line: 1187, type: !3975, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19059)
!19059 = !{!19060}
!19060 = !DILocalVariable(name: "t", arg: 1, scope: !19058, file: !3974, line: 1187, type: !112)
!19061 = !DILocation(line: 0, scope: !19058)
!19062 = !DILocation(line: 0, scope: !17120, inlinedAt: !19063)
!19063 = distinct !DILocation(line: 1190, column: 9, scope: !19058)
!19064 = !DILocation(line: 145, column: 13, scope: !19065, inlinedAt: !19063)
!19065 = distinct !DILexicalBlock(scope: !17138, file: !3974, line: 144, column: 10)
!19066 = !DILocation(line: 1190, column: 2, scope: !19058)
!19067 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2979, file: !2979, line: 1517, type: !18938, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19068)
!19068 = !{!19069}
!19069 = !DILocalVariable(name: "thread", arg: 1, scope: !19067, file: !2979, line: 1517, type: !18796)
!19070 = !DILocation(line: 0, scope: !19067)
!19071 = !DILocation(line: 1521, column: 6, scope: !19072)
!19072 = distinct !DILexicalBlock(scope: !19067, file: !2979, line: 1521, column: 6)
!19073 = !DILocation(line: 1521, column: 6, scope: !19067)
!19074 = !DILocation(line: 1525, column: 6, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19067, file: !2979, line: 1525, column: 6)
!19076 = !DILocation(line: 1525, column: 37, scope: !19075)
!19077 = !DILocation(line: 1525, column: 6, scope: !19067)
!19078 = !DILocation(line: 1527, column: 20, scope: !19079)
!19079 = distinct !DILexicalBlock(scope: !19080, file: !2979, line: 1527, column: 7)
!19080 = distinct !DILexicalBlock(scope: !19075, file: !2979, line: 1525, column: 42)
!19081 = !DILocation(line: 1527, column: 33, scope: !19079)
!19082 = !DILocation(line: 1527, column: 7, scope: !19080)
!19083 = !DILocation(line: 1532, column: 2, scope: !19067)
!19084 = !DILocation(line: 1533, column: 2, scope: !19067)
!19085 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !19086)
!19086 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !19087)
!19087 = distinct !DILocation(line: 1537, column: 7, scope: !19088)
!19088 = distinct !DILexicalBlock(scope: !19067, file: !2979, line: 1537, column: 6)
!19089 = !DILocation(line: 0, scope: !17785, inlinedAt: !19086)
!19090 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !19087)
!19091 = !DILocation(line: 1537, column: 6, scope: !19067)
!19092 = !DILocation(line: 1538, column: 3, scope: !19093)
!19093 = distinct !DILexicalBlock(scope: !19088, file: !2979, line: 1537, column: 25)
!19094 = !DILocation(line: 1539, column: 2, scope: !19093)
!19095 = !DILocation(line: 1540, column: 1, scope: !19067)
!19096 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15383, file: !15383, line: 101, type: !17201, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19097)
!19097 = !{!19098}
!19098 = !DILocalVariable(name: "thread", arg: 1, scope: !19096, file: !15383, line: 101, type: !2872)
!19099 = !DILocation(line: 0, scope: !19096)
!19100 = !DILocation(line: 103, column: 23, scope: !19096)
!19101 = !DILocation(line: 103, column: 36, scope: !19096)
!19102 = !DILocation(line: 103, column: 55, scope: !19096)
!19103 = !DILocation(line: 103, column: 2, scope: !19096)
!19104 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2979, file: !2979, line: 1567, type: !19105, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19107)
!19105 = !DISubroutineType(types: !19106)
!19106 = !{!18796}
!19107 = !{!19108}
!19108 = !DILocalVariable(name: "ret", scope: !19104, file: !2979, line: 1577, type: !18796)
!19109 = !DILocation(line: 1577, column: 30, scope: !19104)
!19110 = !DILocation(line: 0, scope: !19104)
!19111 = !DILocation(line: 1582, column: 2, scope: !19104)
!19112 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2979, file: !2979, line: 1593, type: !9283, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !2571)
!19113 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !19114)
!19114 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !19115)
!19115 = distinct !DILocation(line: 1595, column: 10, scope: !19112)
!19116 = !DILocation(line: 0, scope: !17785, inlinedAt: !19114)
!19117 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !19115)
!19118 = !DILocation(line: 1595, column: 27, scope: !19112)
!19119 = !DILocation(line: 1595, column: 41, scope: !19112)
!19120 = !DILocation(line: 1595, column: 30, scope: !19112)
!19121 = !DILocation(line: 1595, column: 2, scope: !19112)
!19122 = distinct !DISubprogram(name: "z_thread_abort", scope: !2979, file: !2979, line: 1725, type: !17018, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19123)
!19123 = !{!19124, !19125}
!19124 = !DILocalVariable(name: "thread", arg: 1, scope: !19122, file: !2979, line: 1725, type: !2872)
!19125 = !DILocalVariable(name: "key", scope: !19122, file: !2979, line: 1727, type: !17052)
!19126 = !DILocation(line: 0, scope: !19122)
!19127 = !DILocation(line: 0, scope: !17060, inlinedAt: !19128)
!19128 = distinct !DILocation(line: 1727, column: 25, scope: !19122)
!19129 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !19130)
!19130 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !19128)
!19131 = !DILocation(line: 0, scope: !17069, inlinedAt: !19130)
!19132 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !19128)
!19133 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !19128)
!19134 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !19128)
!19135 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !19128)
!19136 = !DILocation(line: 1729, column: 20, scope: !19137)
!19137 = distinct !DILexicalBlock(scope: !19122, file: !2979, line: 1729, column: 6)
!19138 = !DILocation(line: 1729, column: 33, scope: !19137)
!19139 = !DILocation(line: 1729, column: 48, scope: !19137)
!19140 = !DILocation(line: 1729, column: 6, scope: !19122)
!19141 = !DILocation(line: 0, scope: !17094, inlinedAt: !19142)
!19142 = distinct !DILocation(line: 1730, column: 3, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19137, file: !2979, line: 1729, column: 54)
!19144 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !19142)
!19145 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !19142)
!19146 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !19142)
!19147 = !DILocation(line: 0, scope: !17108, inlinedAt: !19148)
!19148 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !19142)
!19149 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !19148)
!19150 = !DILocation(line: 1731, column: 3, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19152, file: !2979, line: 1731, column: 3)
!19152 = distinct !DILexicalBlock(scope: !19153, file: !2979, line: 1731, column: 3)
!19153 = distinct !DILexicalBlock(scope: !19143, file: !2979, line: 1731, column: 3)
!19154 = !DILocation(line: 1736, column: 20, scope: !19155)
!19155 = distinct !DILexicalBlock(scope: !19122, file: !2979, line: 1736, column: 6)
!19156 = !DILocation(line: 1736, column: 33, scope: !19155)
!19157 = !DILocation(line: 1736, column: 49, scope: !19155)
!19158 = !DILocation(line: 1736, column: 6, scope: !19122)
!19159 = !DILocation(line: 0, scope: !17094, inlinedAt: !19160)
!19160 = distinct !DILocation(line: 1737, column: 3, scope: !19161)
!19161 = distinct !DILexicalBlock(scope: !19155, file: !2979, line: 1736, column: 56)
!19162 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !19160)
!19163 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !19160)
!19164 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !19160)
!19165 = !DILocation(line: 0, scope: !17108, inlinedAt: !19166)
!19166 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !19160)
!19167 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !19166)
!19168 = !DILocation(line: 1738, column: 3, scope: !19161)
!19169 = !DILocation(line: 1775, column: 2, scope: !19122)
!19170 = !DILocation(line: 1776, column: 16, scope: !19171)
!19171 = distinct !DILexicalBlock(scope: !19122, file: !2979, line: 1776, column: 6)
!19172 = !DILocation(line: 1776, column: 13, scope: !19171)
!19173 = !DILocation(line: 1776, column: 25, scope: !19171)
!19174 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !19175)
!19175 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !19176)
!19176 = distinct !DILocation(line: 1776, column: 29, scope: !19171)
!19177 = !DILocation(line: 0, scope: !17785, inlinedAt: !19175)
!19178 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !19176)
!19179 = !DILocation(line: 1776, column: 6, scope: !19122)
!19180 = !DILocation(line: 0, scope: !17736, inlinedAt: !19181)
!19181 = distinct !DILocation(line: 1777, column: 3, scope: !19182)
!19182 = distinct !DILexicalBlock(scope: !19171, file: !2979, line: 1776, column: 47)
!19183 = !DILocation(line: 0, scope: !17745, inlinedAt: !19184)
!19184 = distinct !DILocation(line: 195, column: 2, scope: !17736, inlinedAt: !19181)
!19185 = !DILocation(line: 225, column: 2, scope: !17752, inlinedAt: !19184)
!19186 = !DILocation(line: 225, column: 2, scope: !17753, inlinedAt: !19184)
!19187 = !DILocation(line: 225, column: 2, scope: !17756, inlinedAt: !19184)
!19188 = !DILocation(line: 196, column: 9, scope: !17736, inlinedAt: !19181)
!19189 = !DILocation(line: 1778, column: 3, scope: !19190)
!19190 = distinct !DILexicalBlock(scope: !19191, file: !2979, line: 1778, column: 3)
!19191 = distinct !DILexicalBlock(scope: !19192, file: !2979, line: 1778, column: 3)
!19192 = distinct !DILexicalBlock(scope: !19182, file: !2979, line: 1778, column: 3)
!19193 = !DILocation(line: 0, scope: !17094, inlinedAt: !19194)
!19194 = distinct !DILocation(line: 1780, column: 2, scope: !19122)
!19195 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !19194)
!19196 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !19194)
!19197 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !19194)
!19198 = !DILocation(line: 0, scope: !17108, inlinedAt: !19199)
!19199 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !19194)
!19200 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !19199)
!19201 = !DILocation(line: 1781, column: 1, scope: !19122)
!19202 = distinct !DISubprogram(name: "end_thread", scope: !2979, file: !2979, line: 1690, type: !17018, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19203)
!19203 = !{!19204}
!19204 = !DILocalVariable(name: "thread", arg: 1, scope: !19202, file: !2979, line: 1690, type: !2872)
!19205 = !DILocation(line: 0, scope: !19202)
!19206 = !DILocation(line: 1695, column: 20, scope: !19207)
!19207 = distinct !DILexicalBlock(scope: !19202, file: !2979, line: 1695, column: 6)
!19208 = !DILocation(line: 1695, column: 33, scope: !19207)
!19209 = !DILocation(line: 1695, column: 49, scope: !19207)
!19210 = !DILocation(line: 1695, column: 6, scope: !19202)
!19211 = !DILocation(line: 1697, column: 29, scope: !19212)
!19212 = distinct !DILexicalBlock(scope: !19207, file: !2979, line: 1695, column: 56)
!19213 = !DILocation(line: 1698, column: 7, scope: !19214)
!19214 = distinct !DILexicalBlock(scope: !19212, file: !2979, line: 1698, column: 7)
!19215 = !DILocation(line: 1698, column: 7, scope: !19212)
!19216 = !DILocation(line: 0, scope: !17252, inlinedAt: !19217)
!19217 = distinct !DILocation(line: 1699, column: 4, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19214, file: !2979, line: 1698, column: 35)
!19219 = !DILocation(line: 266, column: 28, scope: !17252, inlinedAt: !19217)
!19220 = !DILocation(line: 0, scope: !17260, inlinedAt: !19221)
!19221 = distinct !DILocation(line: 268, column: 3, scope: !17264, inlinedAt: !19217)
!19222 = !DILocation(line: 234, column: 2, scope: !17260, inlinedAt: !19221)
!19223 = !DILocation(line: 1700, column: 3, scope: !19218)
!19224 = !DILocation(line: 1701, column: 20, scope: !19225)
!19225 = distinct !DILexicalBlock(scope: !19212, file: !2979, line: 1701, column: 7)
!19226 = !DILocation(line: 1701, column: 30, scope: !19225)
!19227 = !DILocation(line: 1701, column: 7, scope: !19212)
!19228 = !DILocation(line: 1702, column: 4, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19225, file: !2979, line: 1701, column: 39)
!19230 = !DILocation(line: 1703, column: 3, scope: !19229)
!19231 = !DILocation(line: 1704, column: 9, scope: !19212)
!19232 = !DILocation(line: 1705, column: 23, scope: !19212)
!19233 = !DILocation(line: 1705, column: 3, scope: !19212)
!19234 = !DILocation(line: 1706, column: 3, scope: !19212)
!19235 = !DILocation(line: 1722, column: 2, scope: !19212)
!19236 = !DILocation(line: 1723, column: 1, scope: !19202)
!19237 = distinct !DISubprogram(name: "unpend_all", scope: !2979, file: !2979, line: 1674, type: !19238, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19240)
!19238 = !DISubroutineType(types: !19239)
!19239 = !{null, !2903}
!19240 = !{!19241, !19242}
!19241 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19237, file: !2979, line: 1674, type: !2903)
!19242 = !DILocalVariable(name: "thread", scope: !19237, file: !2979, line: 1676, type: !2872)
!19243 = !DILocation(line: 0, scope: !19237)
!19244 = !DILocation(line: 1678, column: 19, scope: !19237)
!19245 = !DILocation(line: 1678, column: 41, scope: !19237)
!19246 = !DILocation(line: 1678, column: 2, scope: !19237)
!19247 = !DILocation(line: 1679, column: 3, scope: !19248)
!19248 = distinct !DILexicalBlock(scope: !19237, file: !2979, line: 1678, column: 50)
!19249 = !DILocation(line: 1680, column: 9, scope: !19248)
!19250 = !DILocalVariable(name: "thread", arg: 1, scope: !19251, file: !15403, line: 65, type: !2872)
!19251 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15403, file: !15403, line: 65, type: !19252, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19254)
!19252 = !DISubroutineType(types: !19253)
!19253 = !{null, !2872, !32}
!19254 = !{!19250, !19255}
!19255 = !DILocalVariable(name: "value", arg: 2, scope: !19251, file: !15403, line: 65, type: !32)
!19256 = !DILocation(line: 0, scope: !19251, inlinedAt: !19257)
!19257 = distinct !DILocation(line: 1681, column: 3, scope: !19248)
!19258 = !DILocation(line: 67, column: 15, scope: !19251, inlinedAt: !19257)
!19259 = !DILocation(line: 67, column: 33, scope: !19251, inlinedAt: !19257)
!19260 = !DILocation(line: 1682, column: 3, scope: !19248)
!19261 = distinct !{!19261, !19246, !19262}
!19262 = !DILocation(line: 1683, column: 2, scope: !19237)
!19263 = !DILocation(line: 1684, column: 1, scope: !19237)
!19264 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2979, file: !2979, line: 1794, type: !19265, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19267)
!19265 = !DISubroutineType(types: !19266)
!19266 = !{!103, !2872, !17946}
!19267 = !{!19268, !19269, !19270, !19271}
!19268 = !DILocalVariable(name: "thread", arg: 1, scope: !19264, file: !2979, line: 1794, type: !2872)
!19269 = !DILocalVariable(name: "timeout", arg: 2, scope: !19264, file: !2979, line: 1794, type: !17946)
!19270 = !DILocalVariable(name: "key", scope: !19264, file: !2979, line: 1796, type: !17052)
!19271 = !DILocalVariable(name: "ret", scope: !19264, file: !2979, line: 1797, type: !103)
!19272 = !DILocation(line: 0, scope: !19264)
!19273 = !DILocation(line: 0, scope: !17060, inlinedAt: !19274)
!19274 = distinct !DILocation(line: 1796, column: 25, scope: !19264)
!19275 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !19276)
!19276 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !19274)
!19277 = !DILocation(line: 0, scope: !17069, inlinedAt: !19276)
!19278 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !19274)
!19279 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !19274)
!19280 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !19274)
!19281 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !19274)
!19282 = !DILocation(line: 1801, column: 20, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19264, file: !2979, line: 1801, column: 6)
!19284 = !DILocation(line: 1801, column: 33, scope: !19283)
!19285 = !DILocation(line: 1801, column: 49, scope: !19283)
!19286 = !DILocation(line: 1801, column: 6, scope: !19264)
!19287 = !DILocation(line: 1803, column: 13, scope: !19288)
!19288 = distinct !DILexicalBlock(scope: !19283, file: !2979, line: 1803, column: 13)
!19289 = !DILocation(line: 1803, column: 13, scope: !19283)
!19290 = !DILocation(line: 1805, column: 24, scope: !19291)
!19291 = distinct !DILexicalBlock(scope: !19288, file: !2979, line: 1805, column: 13)
!19292 = !DILocation(line: 1805, column: 21, scope: !19291)
!19293 = !DILocation(line: 1805, column: 34, scope: !19291)
!19294 = !DILocation(line: 1806, column: 20, scope: !19291)
!19295 = !DILocation(line: 1806, column: 44, scope: !19291)
!19296 = !DILocation(line: 1806, column: 30, scope: !19291)
!19297 = !DILocation(line: 1805, column: 13, scope: !19288)
!19298 = !DILocation(line: 1031, column: 3, scope: !17785, inlinedAt: !19299)
!19299 = distinct !DILocation(line: 48, column: 10, scope: !17789, inlinedAt: !19300)
!19300 = distinct !DILocation(line: 1809, column: 3, scope: !19301)
!19301 = distinct !DILexicalBlock(scope: !19302, file: !2979, line: 1809, column: 3)
!19302 = distinct !DILexicalBlock(scope: !19303, file: !2979, line: 1809, column: 3)
!19303 = distinct !DILexicalBlock(scope: !19291, file: !2979, line: 1808, column: 9)
!19304 = !DILocation(line: 0, scope: !17785, inlinedAt: !19299)
!19305 = !DILocation(line: 48, column: 9, scope: !17789, inlinedAt: !19300)
!19306 = !DILocation(line: 1809, column: 3, scope: !19302)
!19307 = !DILocation(line: 1809, column: 3, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19301, file: !2979, line: 1809, column: 3)
!19309 = !DILocation(line: 1810, column: 23, scope: !19303)
!19310 = !DILocation(line: 1810, column: 42, scope: !19303)
!19311 = !DILocation(line: 1810, column: 3, scope: !19303)
!19312 = !DILocation(line: 1811, column: 22, scope: !19303)
!19313 = !DILocation(line: 1811, column: 3, scope: !19303)
!19314 = !DILocation(line: 0, scope: !17736, inlinedAt: !19315)
!19315 = distinct !DILocation(line: 1814, column: 9, scope: !19303)
!19316 = !DILocation(line: 0, scope: !17745, inlinedAt: !19317)
!19317 = distinct !DILocation(line: 195, column: 2, scope: !17736, inlinedAt: !19315)
!19318 = !DILocation(line: 225, column: 2, scope: !17752, inlinedAt: !19317)
!19319 = !DILocation(line: 225, column: 2, scope: !17753, inlinedAt: !19317)
!19320 = !DILocation(line: 225, column: 2, scope: !17756, inlinedAt: !19317)
!19321 = !DILocation(line: 196, column: 9, scope: !17736, inlinedAt: !19315)
!19322 = !DILocation(line: 1817, column: 3, scope: !19303)
!19323 = !DILocation(line: 0, scope: !19283)
!19324 = !DILocation(line: 0, scope: !17094, inlinedAt: !19325)
!19325 = distinct !DILocation(line: 1822, column: 2, scope: !19264)
!19326 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !19325)
!19327 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !19325)
!19328 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !19325)
!19329 = !DILocation(line: 0, scope: !17108, inlinedAt: !19330)
!19330 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !19325)
!19331 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !19330)
!19332 = !DILocation(line: 1823, column: 2, scope: !19264)
!19333 = !DILocation(line: 1824, column: 1, scope: !19264)
!19334 = distinct !DISubprogram(name: "z_sched_wake", scope: !2979, file: !2979, line: 1882, type: !19335, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19337)
!19335 = !DISubroutineType(types: !19336)
!19336 = !{!122, !2903, !103, !102}
!19337 = !{!19338, !19339, !19340, !19341, !19342, !19343, !19345}
!19338 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19334, file: !2979, line: 1882, type: !2903)
!19339 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !19334, file: !2979, line: 1882, type: !103)
!19340 = !DILocalVariable(name: "swap_data", arg: 3, scope: !19334, file: !2979, line: 1882, type: !102)
!19341 = !DILocalVariable(name: "thread", scope: !19334, file: !2979, line: 1884, type: !2872)
!19342 = !DILocalVariable(name: "ret", scope: !19334, file: !2979, line: 1885, type: !122)
!19343 = !DILocalVariable(name: "__i", scope: !19344, file: !2979, line: 1887, type: !17052)
!19344 = distinct !DILexicalBlock(scope: !19334, file: !2979, line: 1887, column: 2)
!19345 = !DILocalVariable(name: "__key", scope: !19344, file: !2979, line: 1887, type: !17052)
!19346 = !DILocation(line: 0, scope: !19334)
!19347 = !DILocation(line: 0, scope: !19344)
!19348 = !DILocation(line: 0, scope: !17060, inlinedAt: !19349)
!19349 = distinct !DILocation(line: 1887, column: 2, scope: !19344)
!19350 = !DILocation(line: 55, column: 2, scope: !17069, inlinedAt: !19351)
!19351 = distinct !DILocation(line: 145, column: 10, scope: !17060, inlinedAt: !19349)
!19352 = !DILocation(line: 0, scope: !17069, inlinedAt: !19351)
!19353 = !DILocation(line: 148, column: 2, scope: !17077, inlinedAt: !19349)
!19354 = !DILocation(line: 148, column: 2, scope: !17078, inlinedAt: !19349)
!19355 = !DILocation(line: 148, column: 2, scope: !17081, inlinedAt: !19349)
!19356 = !DILocation(line: 160, column: 2, scope: !17060, inlinedAt: !19349)
!19357 = !DILocation(line: 1888, column: 12, scope: !19358)
!19358 = distinct !DILexicalBlock(scope: !19359, file: !2979, line: 1887, column: 26)
!19359 = distinct !DILexicalBlock(scope: !19344, file: !2979, line: 1887, column: 2)
!19360 = !DILocation(line: 1890, column: 14, scope: !19361)
!19361 = distinct !DILexicalBlock(scope: !19358, file: !2979, line: 1890, column: 7)
!19362 = !DILocation(line: 1890, column: 7, scope: !19358)
!19363 = !DILocalVariable(name: "thread", arg: 1, scope: !19364, file: !16246, line: 134, type: !2872)
!19364 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16246, file: !16246, line: 134, type: !19365, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19367)
!19365 = !DISubroutineType(types: !19366)
!19366 = !{null, !2872, !32, !102}
!19367 = !{!19363, !19368, !19369}
!19368 = !DILocalVariable(name: "value", arg: 2, scope: !19364, file: !16246, line: 135, type: !32)
!19369 = !DILocalVariable(name: "data", arg: 3, scope: !19364, file: !16246, line: 136, type: !102)
!19370 = !DILocation(line: 0, scope: !19364, inlinedAt: !19371)
!19371 = distinct !DILocation(line: 1891, column: 4, scope: !19372)
!19372 = distinct !DILexicalBlock(scope: !19361, file: !2979, line: 1890, column: 23)
!19373 = !DILocation(line: 0, scope: !19251, inlinedAt: !19374)
!19374 = distinct !DILocation(line: 138, column: 2, scope: !19364, inlinedAt: !19371)
!19375 = !DILocation(line: 67, column: 15, scope: !19251, inlinedAt: !19374)
!19376 = !DILocation(line: 67, column: 33, scope: !19251, inlinedAt: !19374)
!19377 = !DILocation(line: 139, column: 15, scope: !19364, inlinedAt: !19371)
!19378 = !DILocation(line: 139, column: 25, scope: !19364, inlinedAt: !19371)
!19379 = !DILocation(line: 1894, column: 4, scope: !19372)
!19380 = !DILocation(line: 1895, column: 10, scope: !19372)
!19381 = !DILocation(line: 1896, column: 4, scope: !19372)
!19382 = !DILocation(line: 1898, column: 3, scope: !19372)
!19383 = !DILocation(line: 0, scope: !17094, inlinedAt: !19384)
!19384 = distinct !DILocation(line: 1887, column: 2, scope: !19359)
!19385 = !DILocation(line: 194, column: 2, scope: !17102, inlinedAt: !19384)
!19386 = !DILocation(line: 194, column: 2, scope: !17103, inlinedAt: !19384)
!19387 = !DILocation(line: 194, column: 2, scope: !17106, inlinedAt: !19384)
!19388 = !DILocation(line: 0, scope: !17108, inlinedAt: !19389)
!19389 = distinct !DILocation(line: 215, column: 2, scope: !17094, inlinedAt: !19384)
!19390 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !19389)
!19391 = !DILocation(line: 1901, column: 2, scope: !19334)
!19392 = distinct !DISubprogram(name: "z_sched_wait", scope: !2979, file: !2979, line: 1904, type: !19393, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !19396)
!19393 = !DISubroutineType(types: !19394)
!19394 = !{!103, !17063, !17052, !2903, !17946, !19395}
!19395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!19396 = !{!19397, !19398, !19399, !19400, !19401, !19402}
!19397 = !DILocalVariable(name: "lock", arg: 1, scope: !19392, file: !2979, line: 1904, type: !17063)
!19398 = !DILocalVariable(name: "key", arg: 2, scope: !19392, file: !2979, line: 1904, type: !17052)
!19399 = !DILocalVariable(name: "wait_q", arg: 3, scope: !19392, file: !2979, line: 1905, type: !2903)
!19400 = !DILocalVariable(name: "timeout", arg: 4, scope: !19392, file: !2979, line: 1905, type: !17946)
!19401 = !DILocalVariable(name: "data", arg: 5, scope: !19392, file: !2979, line: 1905, type: !19395)
!19402 = !DILocalVariable(name: "ret", scope: !19392, file: !2979, line: 1907, type: !103)
!19403 = !DILocation(line: 0, scope: !19392)
!19404 = !DILocation(line: 1907, column: 12, scope: !19392)
!19405 = !DILocation(line: 1909, column: 11, scope: !19406)
!19406 = distinct !DILexicalBlock(scope: !19392, file: !2979, line: 1909, column: 6)
!19407 = !DILocation(line: 1909, column: 6, scope: !19392)
!19408 = !DILocation(line: 1910, column: 11, scope: !19409)
!19409 = distinct !DILexicalBlock(scope: !19406, file: !2979, line: 1909, column: 20)
!19410 = !DILocation(line: 1910, column: 26, scope: !19409)
!19411 = !DILocation(line: 1910, column: 9, scope: !19409)
!19412 = !DILocation(line: 1911, column: 2, scope: !19409)
!19413 = !DILocation(line: 1912, column: 2, scope: !19392)
!19414 = distinct !DISubprogram(name: "z_data_copy", scope: !19415, file: !19415, line: 22, type: !323, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3788, retainedNodes: !2571)
!19415 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19416 = !DILocation(line: 24, column: 2, scope: !19414)
!19417 = !DILocation(line: 27, column: 2, scope: !19414)
!19418 = !DILocation(line: 71, column: 1, scope: !19414)
!19419 = distinct !DISubprogram(name: "z_add_timeout", scope: !3016, file: !3016, line: 88, type: !19420, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19426)
!19420 = !DISubroutineType(types: !19421)
!19421 = !{null, !2989, !3008, !19422}
!19422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !19423)
!19423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !19424)
!19424 = !{!19425}
!19425 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19423, file: !105, line: 66, baseType: !104, size: 64)
!19426 = !{!19427, !19428, !19429, !19430, !19436, !19437, !19440, !19443}
!19427 = !DILocalVariable(name: "to", arg: 1, scope: !19419, file: !3016, line: 88, type: !2989)
!19428 = !DILocalVariable(name: "fn", arg: 2, scope: !19419, file: !3016, line: 88, type: !3008)
!19429 = !DILocalVariable(name: "timeout", arg: 3, scope: !19419, file: !3016, line: 89, type: !19422)
!19430 = !DILocalVariable(name: "__i", scope: !19431, file: !3016, line: 102, type: !19432)
!19431 = distinct !DILexicalBlock(scope: !19419, file: !3016, line: 102, column: 2)
!19432 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !19433)
!19433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !19434)
!19434 = !{!19435}
!19435 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19433, file: !152, line: 33, baseType: !103, size: 32)
!19436 = !DILocalVariable(name: "__key", scope: !19431, file: !3016, line: 102, type: !19432)
!19437 = !DILocalVariable(name: "t", scope: !19438, file: !3016, line: 103, type: !2989)
!19438 = distinct !DILexicalBlock(scope: !19439, file: !3016, line: 102, column: 24)
!19439 = distinct !DILexicalBlock(scope: !19431, file: !3016, line: 102, column: 2)
!19440 = !DILocalVariable(name: "ticks", scope: !19441, file: !3016, line: 107, type: !104)
!19441 = distinct !DILexicalBlock(scope: !19442, file: !3016, line: 106, column: 39)
!19442 = distinct !DILexicalBlock(scope: !19438, file: !3016, line: 105, column: 7)
!19443 = !DILocalVariable(name: "next_time", scope: !19444, file: !3016, line: 137, type: !320)
!19444 = distinct !DILexicalBlock(scope: !19445, file: !3016, line: 127, column: 22)
!19445 = distinct !DILexicalBlock(scope: !19438, file: !3016, line: 127, column: 7)
!19446 = !DILocation(line: 0, scope: !19419)
!19447 = !DILocation(line: 91, column: 6, scope: !19448)
!19448 = distinct !DILexicalBlock(scope: !19419, file: !3016, line: 91, column: 6)
!19449 = !DILocation(line: 91, column: 6, scope: !19419)
!19450 = !DILocation(line: 99, column: 2, scope: !19451)
!19451 = distinct !DILexicalBlock(scope: !19452, file: !3016, line: 99, column: 2)
!19452 = distinct !DILexicalBlock(scope: !19419, file: !3016, line: 99, column: 2)
!19453 = !DILocation(line: 99, column: 2, scope: !19452)
!19454 = !DILocation(line: 99, column: 2, scope: !19455)
!19455 = distinct !DILexicalBlock(scope: !19451, file: !3016, line: 99, column: 2)
!19456 = !DILocation(line: 100, column: 6, scope: !19419)
!19457 = !DILocation(line: 100, column: 9, scope: !19419)
!19458 = !DILocation(line: 0, scope: !19431)
!19459 = !DILocalVariable(name: "l", arg: 1, scope: !19460, file: !152, line: 136, type: !19463)
!19460 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !19461, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19464)
!19461 = !DISubroutineType(types: !19462)
!19462 = !{!19432, !19463}
!19463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 32)
!19464 = !{!19459, !19465}
!19465 = !DILocalVariable(name: "k", scope: !19460, file: !152, line: 139, type: !19432)
!19466 = !DILocation(line: 0, scope: !19460, inlinedAt: !19467)
!19467 = distinct !DILocation(line: 102, column: 2, scope: !19431)
!19468 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19473)
!19469 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19470)
!19470 = !{!19471, !19472}
!19471 = !DILocalVariable(name: "key", scope: !19469, file: !7609, line: 44, type: !32)
!19472 = !DILocalVariable(name: "tmp", scope: !19469, file: !7609, line: 53, type: !32)
!19473 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19467)
!19474 = !{i64 2287526}
!19475 = !DILocation(line: 0, scope: !19469, inlinedAt: !19473)
!19476 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19467)
!19477 = distinct !DILexicalBlock(scope: !19478, file: !152, line: 148, column: 2)
!19478 = distinct !DILexicalBlock(scope: !19460, file: !152, line: 148, column: 2)
!19479 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19467)
!19480 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19467)
!19481 = distinct !DILexicalBlock(scope: !19477, file: !152, line: 148, column: 2)
!19482 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19467)
!19483 = !DILocation(line: 106, column: 33, scope: !19442)
!19484 = !DILocation(line: 105, column: 7, scope: !19438)
!19485 = !DILocation(line: 107, column: 50, scope: !19441)
!19486 = !DILocation(line: 107, column: 48, scope: !19441)
!19487 = !DILocation(line: 0, scope: !19441)
!19488 = !DILocation(line: 109, column: 17, scope: !19441)
!19489 = !DILocation(line: 110, column: 3, scope: !19441)
!19490 = !DILocation(line: 111, column: 31, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19442, file: !3016, line: 110, column: 10)
!19492 = !DILocation(line: 111, column: 37, scope: !19491)
!19493 = !DILocation(line: 111, column: 35, scope: !19491)
!19494 = !DILocation(line: 0, scope: !19442)
!19495 = !DILocation(line: 109, column: 8, scope: !19441)
!19496 = !DILocation(line: 109, column: 15, scope: !19441)
!19497 = !DILocation(line: 114, column: 12, scope: !19498)
!19498 = distinct !DILexicalBlock(scope: !19438, file: !3016, line: 114, column: 3)
!19499 = !DILocation(line: 0, scope: !19438)
!19500 = !DILocation(line: 114, column: 3, scope: !19498)
!19501 = !DILocation(line: 115, column: 24, scope: !19502)
!19502 = distinct !DILexicalBlock(scope: !19503, file: !3016, line: 115, column: 8)
!19503 = distinct !DILexicalBlock(scope: !19504, file: !3016, line: 114, column: 45)
!19504 = distinct !DILexicalBlock(scope: !19498, file: !3016, line: 114, column: 3)
!19505 = !DILocation(line: 115, column: 11, scope: !19502)
!19506 = !DILocation(line: 115, column: 18, scope: !19502)
!19507 = !DILocation(line: 115, column: 8, scope: !19503)
!19508 = !DILocation(line: 116, column: 15, scope: !19509)
!19509 = distinct !DILexicalBlock(scope: !19502, file: !3016, line: 115, column: 32)
!19510 = !DILocation(line: 117, column: 26, scope: !19509)
!19511 = !DILocation(line: 117, column: 5, scope: !19509)
!19512 = !DILocation(line: 123, column: 7, scope: !19438)
!19513 = !DILocation(line: 120, column: 15, scope: !19503)
!19514 = !DILocation(line: 114, column: 36, scope: !19504)
!19515 = distinct !{!19515, !19500, !19516}
!19516 = !DILocation(line: 121, column: 3, scope: !19498)
!19517 = !DILocation(line: 124, column: 4, scope: !19518)
!19518 = distinct !DILexicalBlock(scope: !19519, file: !3016, line: 123, column: 18)
!19519 = distinct !DILexicalBlock(scope: !19438, file: !3016, line: 123, column: 7)
!19520 = !DILocation(line: 125, column: 3, scope: !19518)
!19521 = !DILocation(line: 127, column: 13, scope: !19445)
!19522 = !DILocation(line: 127, column: 10, scope: !19445)
!19523 = !DILocation(line: 127, column: 7, scope: !19438)
!19524 = !DILocation(line: 137, column: 24, scope: !19444)
!19525 = !DILocation(line: 0, scope: !19444)
!19526 = !DILocation(line: 139, column: 18, scope: !19527)
!19527 = distinct !DILexicalBlock(scope: !19444, file: !3016, line: 139, column: 8)
!19528 = !DILocation(line: 139, column: 23, scope: !19527)
!19529 = !DILocation(line: 141, column: 5, scope: !19530)
!19530 = distinct !DILexicalBlock(scope: !19527, file: !3016, line: 140, column: 48)
!19531 = !DILocation(line: 142, column: 4, scope: !19530)
!19532 = !DILocalVariable(name: "key", arg: 2, scope: !19533, file: !152, line: 190, type: !19432)
!19533 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !19534, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19536)
!19534 = !DISubroutineType(types: !19535)
!19535 = !{null, !19463, !19432}
!19536 = !{!19537, !19532}
!19537 = !DILocalVariable(name: "l", arg: 1, scope: !19533, file: !152, line: 189, type: !19463)
!19538 = !DILocation(line: 0, scope: !19533, inlinedAt: !19539)
!19539 = distinct !DILocation(line: 102, column: 2, scope: !19439)
!19540 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !19539)
!19541 = distinct !DILexicalBlock(scope: !19542, file: !152, line: 194, column: 2)
!19542 = distinct !DILexicalBlock(scope: !19533, file: !152, line: 194, column: 2)
!19543 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !19539)
!19544 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !19539)
!19545 = distinct !DILexicalBlock(scope: !19541, file: !152, line: 194, column: 2)
!19546 = !DILocalVariable(name: "key", arg: 1, scope: !19547, file: !7609, line: 84, type: !32)
!19547 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19548)
!19548 = !{!19546}
!19549 = !DILocation(line: 0, scope: !19547, inlinedAt: !19550)
!19550 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !19539)
!19551 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !19550)
!19552 = !{i64 2288343}
!19553 = !DILocation(line: 148, column: 1, scope: !19419)
!19554 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !19555, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19559)
!19555 = !DISubroutineType(types: !19556)
!19556 = !{!122, !19557}
!19557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19558, size: 32)
!19558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2993)
!19559 = !{!19560}
!19560 = !DILocalVariable(name: "node", arg: 1, scope: !19554, file: !136, line: 225, type: !19557)
!19561 = !DILocation(line: 0, scope: !19554)
!19562 = !DILocation(line: 227, column: 15, scope: !19554)
!19563 = !DILocation(line: 227, column: 20, scope: !19554)
!19564 = !DILocation(line: 227, column: 2, scope: !19554)
!19565 = distinct !DISubprogram(name: "elapsed", scope: !3016, file: !3016, line: 62, type: !19566, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2571)
!19566 = !DISubroutineType(types: !19567)
!19567 = !{!320}
!19568 = !DILocation(line: 64, column: 9, scope: !19565)
!19569 = !DILocation(line: 64, column: 28, scope: !19565)
!19570 = !DILocation(line: 64, column: 35, scope: !19565)
!19571 = !DILocation(line: 64, column: 2, scope: !19565)
!19572 = distinct !DISubprogram(name: "first", scope: !3016, file: !3016, line: 39, type: !19573, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19575)
!19573 = !DISubroutineType(types: !19574)
!19574 = !{!2989}
!19575 = !{!19576}
!19576 = !DILocalVariable(name: "t", scope: !19572, file: !3016, line: 41, type: !19577)
!19577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 32)
!19578 = !DILocation(line: 41, column: 19, scope: !19572)
!19579 = !DILocation(line: 0, scope: !19572)
!19580 = !DILocation(line: 43, column: 9, scope: !19572)
!19581 = !DILocation(line: 43, column: 2, scope: !19572)
!19582 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !19583, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19585)
!19583 = !DISubroutineType(types: !19584)
!19584 = !{null, !19577, !19577}
!19585 = !{!19586, !19587, !19588}
!19586 = !DILocalVariable(name: "successor", arg: 1, scope: !19582, file: !136, line: 443, type: !19577)
!19587 = !DILocalVariable(name: "node", arg: 2, scope: !19582, file: !136, line: 443, type: !19577)
!19588 = !DILocalVariable(name: "prev", scope: !19582, file: !136, line: 445, type: !19589)
!19589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19577)
!19590 = !DILocation(line: 0, scope: !19582)
!19591 = !DILocation(line: 445, column: 39, scope: !19582)
!19592 = !DILocation(line: 447, column: 8, scope: !19582)
!19593 = !DILocation(line: 447, column: 13, scope: !19582)
!19594 = !DILocation(line: 448, column: 8, scope: !19582)
!19595 = !DILocation(line: 448, column: 13, scope: !19582)
!19596 = !DILocation(line: 449, column: 8, scope: !19582)
!19597 = !DILocation(line: 449, column: 13, scope: !19582)
!19598 = !DILocation(line: 450, column: 18, scope: !19582)
!19599 = !DILocation(line: 451, column: 1, scope: !19582)
!19600 = distinct !DISubprogram(name: "next", scope: !3016, file: !3016, line: 46, type: !19601, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19603)
!19601 = !DISubroutineType(types: !19602)
!19602 = !{!2989, !2989}
!19603 = !{!19604, !19605}
!19604 = !DILocalVariable(name: "t", arg: 1, scope: !19600, file: !3016, line: 46, type: !2989)
!19605 = !DILocalVariable(name: "n", scope: !19600, file: !3016, line: 48, type: !19577)
!19606 = !DILocation(line: 0, scope: !19600)
!19607 = !DILocation(line: 48, column: 58, scope: !19600)
!19608 = !DILocation(line: 48, column: 19, scope: !19600)
!19609 = !DILocation(line: 50, column: 9, scope: !19600)
!19610 = !DILocation(line: 50, column: 2, scope: !19600)
!19611 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !19612, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19615)
!19612 = !DISubroutineType(types: !19613)
!19613 = !{null, !19614, !19577}
!19614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 32)
!19615 = !{!19616, !19617, !19618}
!19616 = !DILocalVariable(name: "list", arg: 1, scope: !19611, file: !136, line: 404, type: !19614)
!19617 = !DILocalVariable(name: "node", arg: 2, scope: !19611, file: !136, line: 404, type: !19577)
!19618 = !DILocalVariable(name: "tail", scope: !19611, file: !136, line: 406, type: !19589)
!19619 = !DILocation(line: 0, scope: !19611)
!19620 = !DILocation(line: 406, column: 34, scope: !19611)
!19621 = !DILocation(line: 408, column: 8, scope: !19611)
!19622 = !DILocation(line: 408, column: 13, scope: !19611)
!19623 = !DILocation(line: 409, column: 8, scope: !19611)
!19624 = !DILocation(line: 409, column: 13, scope: !19611)
!19625 = !DILocation(line: 411, column: 8, scope: !19611)
!19626 = !DILocation(line: 411, column: 13, scope: !19611)
!19627 = !DILocation(line: 412, column: 13, scope: !19611)
!19628 = !DILocation(line: 413, column: 1, scope: !19611)
!19629 = distinct !DISubprogram(name: "next_timeout", scope: !3016, file: !3016, line: 67, type: !19566, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19630)
!19630 = !{!19631, !19632, !19633}
!19631 = !DILocalVariable(name: "to", scope: !19629, file: !3016, line: 69, type: !2989)
!19632 = !DILocalVariable(name: "ticks_elapsed", scope: !19629, file: !3016, line: 70, type: !320)
!19633 = !DILocalVariable(name: "ret", scope: !19629, file: !3016, line: 71, type: !320)
!19634 = !DILocation(line: 69, column: 24, scope: !19629)
!19635 = !DILocation(line: 0, scope: !19629)
!19636 = !DILocation(line: 70, column: 26, scope: !19629)
!19637 = !DILocation(line: 73, column: 10, scope: !19638)
!19638 = distinct !DILexicalBlock(scope: !19629, file: !3016, line: 73, column: 6)
!19639 = !DILocation(line: 73, column: 19, scope: !19638)
!19640 = !DILocation(line: 74, column: 21, scope: !19638)
!19641 = !DILocation(line: 74, column: 30, scope: !19638)
!19642 = !DILocation(line: 74, column: 28, scope: !19638)
!19643 = !DILocation(line: 74, column: 45, scope: !19638)
!19644 = !DILocation(line: 73, column: 6, scope: !19629)
!19645 = !DILocation(line: 77, column: 9, scope: !19646)
!19646 = distinct !DILexicalBlock(scope: !19638, file: !3016, line: 76, column: 9)
!19647 = !DILocation(line: 0, scope: !19638)
!19648 = !DILocation(line: 81, column: 20, scope: !19649)
!19649 = distinct !DILexicalBlock(scope: !19629, file: !3016, line: 81, column: 6)
!19650 = !DILocation(line: 81, column: 6, scope: !19649)
!19651 = !DILocation(line: 81, column: 32, scope: !19649)
!19652 = !DILocation(line: 85, column: 2, scope: !19629)
!19653 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !19654, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19656)
!19654 = !DISubroutineType(types: !19655)
!19655 = !{!19577, !19614, !19577}
!19656 = !{!19657, !19658}
!19657 = !DILocalVariable(name: "list", arg: 1, scope: !19653, file: !136, line: 341, type: !19614)
!19658 = !DILocalVariable(name: "node", arg: 2, scope: !19653, file: !136, line: 342, type: !19577)
!19659 = !DILocation(line: 0, scope: !19653)
!19660 = !DILocation(line: 344, column: 15, scope: !19653)
!19661 = !DILocation(line: 344, column: 9, scope: !19653)
!19662 = !DILocation(line: 344, column: 26, scope: !19653)
!19663 = !DILocation(line: 344, column: 2, scope: !19653)
!19664 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !19654, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19665)
!19665 = !{!19666, !19667}
!19666 = !DILocalVariable(name: "list", arg: 1, scope: !19664, file: !136, line: 325, type: !19614)
!19667 = !DILocalVariable(name: "node", arg: 2, scope: !19664, file: !136, line: 326, type: !19577)
!19668 = !DILocation(line: 0, scope: !19664)
!19669 = !DILocation(line: 328, column: 24, scope: !19664)
!19670 = !DILocation(line: 328, column: 15, scope: !19664)
!19671 = !DILocation(line: 328, column: 9, scope: !19664)
!19672 = !DILocation(line: 328, column: 45, scope: !19664)
!19673 = !DILocation(line: 328, column: 2, scope: !19664)
!19674 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !19675, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19677)
!19675 = !DISubroutineType(types: !19676)
!19676 = !{!19577, !19614}
!19677 = !{!19678}
!19678 = !DILocalVariable(name: "list", arg: 1, scope: !19674, file: !136, line: 294, type: !19614)
!19679 = !DILocation(line: 0, scope: !19674)
!19680 = !DILocation(line: 296, column: 9, scope: !19674)
!19681 = !DILocation(line: 296, column: 2, scope: !19674)
!19682 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !19683, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19685)
!19683 = !DISubroutineType(types: !19684)
!19684 = !{!122, !19614}
!19685 = !{!19686}
!19686 = !DILocalVariable(name: "list", arg: 1, scope: !19682, file: !136, line: 266, type: !19614)
!19687 = !DILocation(line: 0, scope: !19682)
!19688 = !DILocation(line: 268, column: 15, scope: !19682)
!19689 = !DILocation(line: 268, column: 20, scope: !19682)
!19690 = !DILocation(line: 268, column: 2, scope: !19682)
!19691 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3016, file: !3016, line: 150, type: !19692, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19694)
!19692 = !DISubroutineType(types: !19693)
!19693 = !{!103, !2989}
!19694 = !{!19695, !19696, !19697, !19699}
!19695 = !DILocalVariable(name: "to", arg: 1, scope: !19691, file: !3016, line: 150, type: !2989)
!19696 = !DILocalVariable(name: "ret", scope: !19691, file: !3016, line: 152, type: !103)
!19697 = !DILocalVariable(name: "__i", scope: !19698, file: !3016, line: 154, type: !19432)
!19698 = distinct !DILexicalBlock(scope: !19691, file: !3016, line: 154, column: 2)
!19699 = !DILocalVariable(name: "__key", scope: !19698, file: !3016, line: 154, type: !19432)
!19700 = !DILocation(line: 0, scope: !19691)
!19701 = !DILocation(line: 0, scope: !19698)
!19702 = !DILocation(line: 0, scope: !19460, inlinedAt: !19703)
!19703 = distinct !DILocation(line: 154, column: 2, scope: !19698)
!19704 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19705)
!19705 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19703)
!19706 = !DILocation(line: 0, scope: !19469, inlinedAt: !19705)
!19707 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19703)
!19708 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19703)
!19709 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19703)
!19710 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19703)
!19711 = !DILocation(line: 155, column: 7, scope: !19712)
!19712 = distinct !DILexicalBlock(scope: !19713, file: !3016, line: 155, column: 7)
!19713 = distinct !DILexicalBlock(scope: !19714, file: !3016, line: 154, column: 24)
!19714 = distinct !DILexicalBlock(scope: !19698, file: !3016, line: 154, column: 2)
!19715 = !DILocation(line: 155, column: 7, scope: !19713)
!19716 = !DILocation(line: 156, column: 4, scope: !19717)
!19717 = distinct !DILexicalBlock(scope: !19712, file: !3016, line: 155, column: 39)
!19718 = !DILocation(line: 158, column: 3, scope: !19717)
!19719 = !DILocation(line: 0, scope: !19533, inlinedAt: !19720)
!19720 = distinct !DILocation(line: 154, column: 2, scope: !19714)
!19721 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !19720)
!19722 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !19720)
!19723 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !19720)
!19724 = !DILocation(line: 0, scope: !19547, inlinedAt: !19725)
!19725 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !19720)
!19726 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !19725)
!19727 = !DILocation(line: 161, column: 2, scope: !19691)
!19728 = distinct !DISubprogram(name: "remove_timeout", scope: !3016, file: !3016, line: 53, type: !3010, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19729)
!19729 = !{!19730}
!19730 = !DILocalVariable(name: "t", arg: 1, scope: !19728, file: !3016, line: 53, type: !2989)
!19731 = !DILocation(line: 0, scope: !19728)
!19732 = !DILocation(line: 55, column: 6, scope: !19733)
!19733 = distinct !DILexicalBlock(scope: !19728, file: !3016, line: 55, column: 6)
!19734 = !DILocation(line: 55, column: 14, scope: !19733)
!19735 = !DILocation(line: 55, column: 6, scope: !19728)
!19736 = !DILocation(line: 56, column: 25, scope: !19737)
!19737 = distinct !DILexicalBlock(scope: !19733, file: !3016, line: 55, column: 23)
!19738 = !DILocation(line: 56, column: 12, scope: !19737)
!19739 = !DILocation(line: 56, column: 19, scope: !19737)
!19740 = !DILocation(line: 57, column: 2, scope: !19737)
!19741 = !DILocation(line: 59, column: 23, scope: !19728)
!19742 = !DILocation(line: 59, column: 2, scope: !19728)
!19743 = !DILocation(line: 60, column: 1, scope: !19728)
!19744 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !19745, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19747)
!19745 = !DISubroutineType(types: !19746)
!19746 = !{null, !19577}
!19747 = !{!19748, !19749, !19750}
!19748 = !DILocalVariable(name: "node", arg: 1, scope: !19744, file: !136, line: 496, type: !19577)
!19749 = !DILocalVariable(name: "prev", scope: !19744, file: !136, line: 498, type: !19589)
!19750 = !DILocalVariable(name: "next", scope: !19744, file: !136, line: 499, type: !19589)
!19751 = !DILocation(line: 0, scope: !19744)
!19752 = !DILocation(line: 498, column: 34, scope: !19744)
!19753 = !DILocation(line: 499, column: 34, scope: !19744)
!19754 = !DILocation(line: 501, column: 8, scope: !19744)
!19755 = !DILocation(line: 501, column: 13, scope: !19744)
!19756 = !DILocation(line: 502, column: 8, scope: !19744)
!19757 = !DILocation(line: 502, column: 13, scope: !19744)
!19758 = !DILocation(line: 503, column: 2, scope: !19744)
!19759 = !DILocation(line: 504, column: 1, scope: !19744)
!19760 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !19745, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19761)
!19761 = !{!19762}
!19762 = !DILocalVariable(name: "node", arg: 1, scope: !19760, file: !136, line: 211, type: !19577)
!19763 = !DILocation(line: 0, scope: !19760)
!19764 = !DILocation(line: 213, column: 8, scope: !19760)
!19765 = !DILocation(line: 213, column: 13, scope: !19760)
!19766 = !DILocation(line: 214, column: 8, scope: !19760)
!19767 = !DILocation(line: 214, column: 13, scope: !19760)
!19768 = !DILocation(line: 215, column: 1, scope: !19760)
!19769 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3016, file: !3016, line: 183, type: !19770, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19774)
!19770 = !DISubroutineType(types: !19771)
!19771 = !{!104, !19772}
!19772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19773, size: 32)
!19773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2990)
!19774 = !{!19775, !19776, !19777, !19779}
!19775 = !DILocalVariable(name: "timeout", arg: 1, scope: !19769, file: !3016, line: 183, type: !19772)
!19776 = !DILocalVariable(name: "ticks", scope: !19769, file: !3016, line: 185, type: !104)
!19777 = !DILocalVariable(name: "__i", scope: !19778, file: !3016, line: 187, type: !19432)
!19778 = distinct !DILexicalBlock(scope: !19769, file: !3016, line: 187, column: 2)
!19779 = !DILocalVariable(name: "__key", scope: !19778, file: !3016, line: 187, type: !19432)
!19780 = !DILocation(line: 0, scope: !19769)
!19781 = !DILocation(line: 0, scope: !19778)
!19782 = !DILocation(line: 0, scope: !19460, inlinedAt: !19783)
!19783 = distinct !DILocation(line: 187, column: 2, scope: !19778)
!19784 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19785)
!19785 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19783)
!19786 = !DILocation(line: 0, scope: !19469, inlinedAt: !19785)
!19787 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19783)
!19788 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19783)
!19789 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19783)
!19790 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19783)
!19791 = !DILocation(line: 188, column: 11, scope: !19792)
!19792 = distinct !DILexicalBlock(scope: !19793, file: !3016, line: 187, column: 24)
!19793 = distinct !DILexicalBlock(scope: !19778, file: !3016, line: 187, column: 2)
!19794 = !DILocation(line: 0, scope: !19533, inlinedAt: !19795)
!19795 = distinct !DILocation(line: 187, column: 2, scope: !19793)
!19796 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !19795)
!19797 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !19795)
!19798 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !19795)
!19799 = !DILocation(line: 0, scope: !19547, inlinedAt: !19800)
!19800 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !19795)
!19801 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !19800)
!19802 = !DILocation(line: 191, column: 2, scope: !19769)
!19803 = distinct !DISubprogram(name: "timeout_rem", scope: !3016, file: !3016, line: 165, type: !19770, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19804)
!19804 = !{!19805, !19806, !19807}
!19805 = !DILocalVariable(name: "timeout", arg: 1, scope: !19803, file: !3016, line: 165, type: !19772)
!19806 = !DILocalVariable(name: "ticks", scope: !19803, file: !3016, line: 167, type: !104)
!19807 = !DILocalVariable(name: "t", scope: !19808, file: !3016, line: 173, type: !2989)
!19808 = distinct !DILexicalBlock(scope: !19803, file: !3016, line: 173, column: 2)
!19809 = !DILocation(line: 0, scope: !19803)
!19810 = !DILocation(line: 169, column: 6, scope: !19811)
!19811 = distinct !DILexicalBlock(scope: !19803, file: !3016, line: 169, column: 6)
!19812 = !DILocation(line: 169, column: 6, scope: !19803)
!19813 = !DILocation(line: 173, column: 28, scope: !19808)
!19814 = !DILocation(line: 0, scope: !19808)
!19815 = !DILocation(line: 173, column: 39, scope: !19816)
!19816 = distinct !DILexicalBlock(scope: !19808, file: !3016, line: 173, column: 2)
!19817 = !DILocation(line: 173, column: 2, scope: !19808)
!19818 = !DILocation(line: 174, column: 15, scope: !19819)
!19819 = distinct !DILexicalBlock(scope: !19816, file: !3016, line: 173, column: 61)
!19820 = !DILocation(line: 174, column: 9, scope: !19819)
!19821 = !DILocation(line: 175, column: 15, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19819, file: !3016, line: 175, column: 7)
!19823 = !DILocation(line: 175, column: 7, scope: !19819)
!19824 = !DILocation(line: 173, column: 52, scope: !19816)
!19825 = distinct !{!19825, !19817, !19826}
!19826 = !DILocation(line: 178, column: 2, scope: !19808)
!19827 = !DILocation(line: 180, column: 17, scope: !19803)
!19828 = !DILocation(line: 180, column: 15, scope: !19803)
!19829 = !DILocation(line: 180, column: 2, scope: !19803)
!19830 = !DILocation(line: 181, column: 1, scope: !19803)
!19831 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15790, file: !15790, line: 35, type: !19832, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19834)
!19832 = !DISubroutineType(types: !19833)
!19833 = !{!122, !19772}
!19834 = !{!19835}
!19835 = !DILocalVariable(name: "to", arg: 1, scope: !19831, file: !15790, line: 35, type: !19772)
!19836 = !DILocation(line: 0, scope: !19831)
!19837 = !DILocation(line: 37, column: 35, scope: !19831)
!19838 = !DILocation(line: 37, column: 10, scope: !19831)
!19839 = !DILocation(line: 37, column: 9, scope: !19831)
!19840 = !DILocation(line: 37, column: 2, scope: !19831)
!19841 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3016, file: !3016, line: 194, type: !19770, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19842)
!19842 = !{!19843, !19844, !19845, !19847}
!19843 = !DILocalVariable(name: "timeout", arg: 1, scope: !19841, file: !3016, line: 194, type: !19772)
!19844 = !DILocalVariable(name: "ticks", scope: !19841, file: !3016, line: 196, type: !104)
!19845 = !DILocalVariable(name: "__i", scope: !19846, file: !3016, line: 198, type: !19432)
!19846 = distinct !DILexicalBlock(scope: !19841, file: !3016, line: 198, column: 2)
!19847 = !DILocalVariable(name: "__key", scope: !19846, file: !3016, line: 198, type: !19432)
!19848 = !DILocation(line: 0, scope: !19841)
!19849 = !DILocation(line: 0, scope: !19846)
!19850 = !DILocation(line: 0, scope: !19460, inlinedAt: !19851)
!19851 = distinct !DILocation(line: 198, column: 2, scope: !19846)
!19852 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19853)
!19853 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19851)
!19854 = !DILocation(line: 0, scope: !19469, inlinedAt: !19853)
!19855 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19851)
!19856 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19851)
!19857 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19851)
!19858 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19851)
!19859 = !DILocation(line: 199, column: 11, scope: !19860)
!19860 = distinct !DILexicalBlock(scope: !19861, file: !3016, line: 198, column: 24)
!19861 = distinct !DILexicalBlock(scope: !19846, file: !3016, line: 198, column: 2)
!19862 = !DILocation(line: 199, column: 23, scope: !19860)
!19863 = !DILocation(line: 0, scope: !19533, inlinedAt: !19864)
!19864 = distinct !DILocation(line: 198, column: 2, scope: !19861)
!19865 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !19864)
!19866 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !19864)
!19867 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !19864)
!19868 = !DILocation(line: 0, scope: !19547, inlinedAt: !19869)
!19869 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !19864)
!19870 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !19869)
!19871 = !DILocation(line: 199, column: 21, scope: !19860)
!19872 = !DILocation(line: 202, column: 2, scope: !19841)
!19873 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3016, file: !3016, line: 205, type: !19566, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19874)
!19874 = !{!19875, !19876, !19878}
!19875 = !DILocalVariable(name: "ret", scope: !19873, file: !3016, line: 207, type: !320)
!19876 = !DILocalVariable(name: "__i", scope: !19877, file: !3016, line: 209, type: !19432)
!19877 = distinct !DILexicalBlock(scope: !19873, file: !3016, line: 209, column: 2)
!19878 = !DILocalVariable(name: "__key", scope: !19877, file: !3016, line: 209, type: !19432)
!19879 = !DILocation(line: 0, scope: !19873)
!19880 = !DILocation(line: 0, scope: !19877)
!19881 = !DILocation(line: 0, scope: !19460, inlinedAt: !19882)
!19882 = distinct !DILocation(line: 209, column: 2, scope: !19877)
!19883 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19884)
!19884 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19882)
!19885 = !DILocation(line: 0, scope: !19469, inlinedAt: !19884)
!19886 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19882)
!19887 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19882)
!19888 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19882)
!19889 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19882)
!19890 = !DILocation(line: 210, column: 9, scope: !19891)
!19891 = distinct !DILexicalBlock(scope: !19892, file: !3016, line: 209, column: 24)
!19892 = distinct !DILexicalBlock(scope: !19877, file: !3016, line: 209, column: 2)
!19893 = !DILocation(line: 0, scope: !19533, inlinedAt: !19894)
!19894 = distinct !DILocation(line: 209, column: 2, scope: !19892)
!19895 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !19894)
!19896 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !19894)
!19897 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !19894)
!19898 = !DILocation(line: 0, scope: !19547, inlinedAt: !19899)
!19899 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !19894)
!19900 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !19899)
!19901 = !DILocation(line: 212, column: 2, scope: !19873)
!19902 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3016, file: !3016, line: 215, type: !12711, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19903)
!19903 = !{!19904, !19905, !19906, !19908, !19909, !19912, !19913}
!19904 = !DILocalVariable(name: "ticks", arg: 1, scope: !19902, file: !3016, line: 215, type: !320)
!19905 = !DILocalVariable(name: "is_idle", arg: 2, scope: !19902, file: !3016, line: 215, type: !122)
!19906 = !DILocalVariable(name: "__i", scope: !19907, file: !3016, line: 217, type: !19432)
!19907 = distinct !DILexicalBlock(scope: !19902, file: !3016, line: 217, column: 2)
!19908 = !DILocalVariable(name: "__key", scope: !19907, file: !3016, line: 217, type: !19432)
!19909 = !DILocalVariable(name: "next_to", scope: !19910, file: !3016, line: 218, type: !103)
!19910 = distinct !DILexicalBlock(scope: !19911, file: !3016, line: 217, column: 24)
!19911 = distinct !DILexicalBlock(scope: !19907, file: !3016, line: 217, column: 2)
!19912 = !DILocalVariable(name: "sooner", scope: !19910, file: !3016, line: 219, type: !122)
!19913 = !DILocalVariable(name: "imminent", scope: !19910, file: !3016, line: 221, type: !122)
!19914 = !DILocation(line: 0, scope: !19902)
!19915 = !DILocation(line: 0, scope: !19907)
!19916 = !DILocation(line: 0, scope: !19460, inlinedAt: !19917)
!19917 = distinct !DILocation(line: 217, column: 2, scope: !19907)
!19918 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19919)
!19919 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19917)
!19920 = !DILocation(line: 0, scope: !19469, inlinedAt: !19919)
!19921 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19917)
!19922 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19917)
!19923 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19917)
!19924 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19917)
!19925 = !DILocation(line: 218, column: 17, scope: !19910)
!19926 = !DILocation(line: 0, scope: !19910)
!19927 = !DILocation(line: 221, column: 27, scope: !19910)
!19928 = !DILocation(line: 233, column: 17, scope: !19929)
!19929 = distinct !DILexicalBlock(scope: !19910, file: !3016, line: 233, column: 7)
!19930 = !DILocation(line: 234, column: 26, scope: !19931)
!19931 = distinct !DILexicalBlock(scope: !19929, file: !3016, line: 233, column: 56)
!19932 = !DILocation(line: 234, column: 4, scope: !19931)
!19933 = !DILocation(line: 235, column: 3, scope: !19931)
!19934 = !DILocation(line: 0, scope: !19533, inlinedAt: !19935)
!19935 = distinct !DILocation(line: 217, column: 2, scope: !19911)
!19936 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !19935)
!19937 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !19935)
!19938 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !19935)
!19939 = !DILocation(line: 0, scope: !19547, inlinedAt: !19940)
!19940 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !19935)
!19941 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !19940)
!19942 = !DILocation(line: 237, column: 1, scope: !19902)
!19943 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3016, file: !3016, line: 239, type: !19944, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !19946)
!19944 = !DISubroutineType(types: !19945)
!19945 = !{null, !320}
!19946 = !{!19947, !19948, !19949, !19951}
!19947 = !DILocalVariable(name: "ticks", arg: 1, scope: !19943, file: !3016, line: 239, type: !320)
!19948 = !DILocalVariable(name: "key", scope: !19943, file: !3016, line: 245, type: !19432)
!19949 = !DILocalVariable(name: "t", scope: !19950, file: !3016, line: 262, type: !2989)
!19950 = distinct !DILexicalBlock(scope: !19943, file: !3016, line: 261, column: 67)
!19951 = !DILocalVariable(name: "dt", scope: !19950, file: !3016, line: 263, type: !103)
!19952 = !DILocation(line: 0, scope: !19943)
!19953 = !DILocation(line: 242, column: 2, scope: !19943)
!19954 = !DILocation(line: 0, scope: !19460, inlinedAt: !19955)
!19955 = distinct !DILocation(line: 245, column: 25, scope: !19943)
!19956 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19957)
!19957 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19955)
!19958 = !DILocation(line: 0, scope: !19469, inlinedAt: !19957)
!19959 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19955)
!19960 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19955)
!19961 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19955)
!19962 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19955)
!19963 = !DILocation(line: 261, column: 9, scope: !19943)
!19964 = !DILocation(line: 261, column: 17, scope: !19943)
!19965 = !DILocation(line: 261, column: 25, scope: !19943)
!19966 = !DILocation(line: 261, column: 37, scope: !19943)
!19967 = !DILocation(line: 261, column: 47, scope: !19943)
!19968 = !DILocation(line: 261, column: 44, scope: !19943)
!19969 = !DILocation(line: 261, column: 2, scope: !19943)
!19970 = !DILocation(line: 0, scope: !19950)
!19971 = !DILocation(line: 263, column: 12, scope: !19950)
!19972 = !DILocation(line: 265, column: 16, scope: !19950)
!19973 = !DILocation(line: 265, column: 13, scope: !19950)
!19974 = !DILocation(line: 266, column: 13, scope: !19950)
!19975 = !DILocation(line: 267, column: 3, scope: !19950)
!19976 = !DILocation(line: 0, scope: !19533, inlinedAt: !19977)
!19977 = distinct !DILocation(line: 269, column: 3, scope: !19950)
!19978 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !19977)
!19979 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !19977)
!19980 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !19977)
!19981 = !DILocation(line: 0, scope: !19547, inlinedAt: !19982)
!19982 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !19977)
!19983 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !19982)
!19984 = !DILocation(line: 270, column: 6, scope: !19950)
!19985 = !DILocation(line: 270, column: 3, scope: !19950)
!19986 = !DILocation(line: 0, scope: !19460, inlinedAt: !19987)
!19987 = distinct !DILocation(line: 271, column: 9, scope: !19950)
!19988 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !19989)
!19989 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !19987)
!19990 = !DILocation(line: 0, scope: !19469, inlinedAt: !19989)
!19991 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !19987)
!19992 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !19987)
!19993 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !19987)
!19994 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !19987)
!19995 = !DILocation(line: 272, column: 22, scope: !19950)
!19996 = distinct !{!19996, !19969, !19997}
!19997 = !DILocation(line: 273, column: 2, scope: !19943)
!19998 = !DILocation(line: 276, column: 19, scope: !19999)
!19999 = distinct !DILexicalBlock(scope: !20000, file: !3016, line: 275, column: 23)
!20000 = distinct !DILexicalBlock(scope: !19943, file: !3016, line: 275, column: 6)
!20001 = !DILocation(line: 277, column: 2, scope: !19999)
!20002 = !DILocation(line: 279, column: 15, scope: !19943)
!20003 = !DILocation(line: 279, column: 12, scope: !19943)
!20004 = !DILocation(line: 280, column: 21, scope: !19943)
!20005 = !DILocation(line: 282, column: 24, scope: !19943)
!20006 = !DILocation(line: 282, column: 2, scope: !19943)
!20007 = !DILocation(line: 0, scope: !19533, inlinedAt: !20008)
!20008 = distinct !DILocation(line: 284, column: 2, scope: !19943)
!20009 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !20008)
!20010 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !20008)
!20011 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !20008)
!20012 = !DILocation(line: 0, scope: !19547, inlinedAt: !20013)
!20013 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !20008)
!20014 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !20013)
!20015 = !DILocation(line: 285, column: 1, scope: !19943)
!20016 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3016, file: !3016, line: 287, type: !20017, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !20019)
!20017 = !DISubroutineType(types: !20018)
!20018 = !{!106}
!20019 = !{!20020, !20021, !20023}
!20020 = !DILocalVariable(name: "t", scope: !20016, file: !3016, line: 289, type: !112)
!20021 = !DILocalVariable(name: "__i", scope: !20022, file: !3016, line: 291, type: !19432)
!20022 = distinct !DILexicalBlock(scope: !20016, file: !3016, line: 291, column: 2)
!20023 = !DILocalVariable(name: "__key", scope: !20022, file: !3016, line: 291, type: !19432)
!20024 = !DILocation(line: 0, scope: !20016)
!20025 = !DILocation(line: 0, scope: !20022)
!20026 = !DILocation(line: 0, scope: !19460, inlinedAt: !20027)
!20027 = distinct !DILocation(line: 291, column: 2, scope: !20022)
!20028 = !DILocation(line: 55, column: 2, scope: !19469, inlinedAt: !20029)
!20029 = distinct !DILocation(line: 145, column: 10, scope: !19460, inlinedAt: !20027)
!20030 = !DILocation(line: 0, scope: !19469, inlinedAt: !20029)
!20031 = !DILocation(line: 148, column: 2, scope: !19477, inlinedAt: !20027)
!20032 = !DILocation(line: 148, column: 2, scope: !19478, inlinedAt: !20027)
!20033 = !DILocation(line: 148, column: 2, scope: !19481, inlinedAt: !20027)
!20034 = !DILocation(line: 160, column: 2, scope: !19460, inlinedAt: !20027)
!20035 = !DILocation(line: 292, column: 7, scope: !20036)
!20036 = distinct !DILexicalBlock(scope: !20037, file: !3016, line: 291, column: 24)
!20037 = distinct !DILexicalBlock(scope: !20022, file: !3016, line: 291, column: 2)
!20038 = !DILocation(line: 292, column: 19, scope: !20036)
!20039 = !DILocation(line: 0, scope: !19533, inlinedAt: !20040)
!20040 = distinct !DILocation(line: 291, column: 2, scope: !20037)
!20041 = !DILocation(line: 194, column: 2, scope: !19541, inlinedAt: !20040)
!20042 = !DILocation(line: 194, column: 2, scope: !19542, inlinedAt: !20040)
!20043 = !DILocation(line: 194, column: 2, scope: !19545, inlinedAt: !20040)
!20044 = !DILocation(line: 0, scope: !19547, inlinedAt: !20045)
!20045 = distinct !DILocation(line: 215, column: 2, scope: !19533, inlinedAt: !20040)
!20046 = !DILocation(line: 95, column: 2, scope: !19547, inlinedAt: !20045)
!20047 = !DILocation(line: 292, column: 17, scope: !20036)
!20048 = !DILocation(line: 294, column: 2, scope: !20016)
!20049 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3016, file: !3016, line: 297, type: !8017, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2571)
!20050 = !DILocation(line: 300, column: 19, scope: !20049)
!20051 = !DILocation(line: 300, column: 9, scope: !20049)
!20052 = !DILocation(line: 300, column: 2, scope: !20049)
!20053 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3016, file: !3016, line: 306, type: !20017, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2571)
!20054 = !DILocation(line: 308, column: 9, scope: !20053)
!20055 = !DILocation(line: 308, column: 2, scope: !20053)
!20056 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3016, file: !3016, line: 319, type: !8027, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !20057)
!20057 = !{!20058, !20059, !20060, !20061}
!20058 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !20056, file: !3016, line: 319, type: !111)
!20059 = !DILocalVariable(name: "start_cycles", scope: !20056, file: !3016, line: 328, type: !111)
!20060 = !DILocalVariable(name: "cycles_to_wait", scope: !20056, file: !3016, line: 331, type: !111)
!20061 = !DILocalVariable(name: "current_cycles", scope: !20062, file: !3016, line: 338, type: !111)
!20062 = distinct !DILexicalBlock(scope: !20063, file: !3016, line: 337, column: 11)
!20063 = distinct !DILexicalBlock(scope: !20064, file: !3016, line: 337, column: 2)
!20064 = distinct !DILexicalBlock(scope: !20056, file: !3016, line: 337, column: 2)
!20065 = !DILocation(line: 0, scope: !20056)
!20066 = !DILocation(line: 322, column: 19, scope: !20067)
!20067 = distinct !DILexicalBlock(scope: !20056, file: !3016, line: 322, column: 6)
!20068 = !DILocation(line: 322, column: 6, scope: !20056)
!20069 = !DILocation(line: 328, column: 26, scope: !20056)
!20070 = !DILocation(line: 333, column: 43, scope: !20056)
!20071 = !DILocation(line: 337, column: 2, scope: !20056)
!20072 = !DILocation(line: 338, column: 29, scope: !20062)
!20073 = !DILocation(line: 0, scope: !20062)
!20074 = !DILocation(line: 341, column: 23, scope: !20075)
!20075 = distinct !DILexicalBlock(scope: !20062, file: !3016, line: 341, column: 7)
!20076 = !DILocation(line: 341, column: 39, scope: !20075)
!20077 = !DILocation(line: 349, column: 1, scope: !20056)
!20078 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !127, file: !127, line: 1675, type: !8017, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2571)
!20079 = !DILocation(line: 1677, column: 9, scope: !20078)
!20080 = !DILocation(line: 1677, column: 2, scope: !20078)
!20081 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !20082, file: !20082, line: 24, type: !8017, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !2571)
!20082 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!20083 = !DILocation(line: 26, column: 9, scope: !20081)
!20084 = !DILocation(line: 26, column: 2, scope: !20081)
!20085 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3016, file: !3016, line: 364, type: !20086, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !20088)
!20086 = !DISubroutineType(types: !20087)
!20087 = !{!112, !19422}
!20088 = !{!20089, !20090}
!20089 = !DILocalVariable(name: "timeout", arg: 1, scope: !20085, file: !3016, line: 364, type: !19422)
!20090 = !DILocalVariable(name: "dt", scope: !20085, file: !3016, line: 366, type: !104)
!20091 = !DILocation(line: 0, scope: !20085)
!20092 = !DILocation(line: 368, column: 6, scope: !20085)
!20093 = !DILocation(line: 371, column: 10, scope: !20094)
!20094 = distinct !DILexicalBlock(scope: !20095, file: !3016, line: 370, column: 47)
!20095 = distinct !DILexicalBlock(scope: !20096, file: !3016, line: 370, column: 13)
!20096 = distinct !DILexicalBlock(scope: !20085, file: !3016, line: 368, column: 6)
!20097 = !DILocation(line: 371, column: 3, scope: !20094)
!20098 = !DILocation(line: 376, column: 58, scope: !20099)
!20099 = distinct !DILexicalBlock(scope: !20100, file: !3016, line: 376, column: 7)
!20100 = distinct !DILexicalBlock(scope: !20095, file: !3016, line: 372, column: 9)
!20101 = !DILocation(line: 376, column: 7, scope: !20100)
!20102 = !DILocation(line: 376, column: 43, scope: !20099)
!20103 = !DILocation(line: 377, column: 4, scope: !20104)
!20104 = distinct !DILexicalBlock(scope: !20099, file: !3016, line: 376, column: 64)
!20105 = !DILocation(line: 379, column: 10, scope: !20100)
!20106 = !DILocation(line: 379, column: 33, scope: !20100)
!20107 = !DILocation(line: 379, column: 31, scope: !20100)
!20108 = !DILocation(line: 379, column: 3, scope: !20100)
!20109 = !DILocation(line: 0, scope: !20096)
!20110 = !DILocation(line: 381, column: 1, scope: !20085)
!20111 = distinct !DISubprogram(name: "k_free", scope: !3033, file: !3033, line: 43, type: !7867, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20112)
!20112 = !{!20113, !20114}
!20113 = !DILocalVariable(name: "ptr", arg: 1, scope: !20111, file: !3033, line: 43, type: !102)
!20114 = !DILocalVariable(name: "heap_ref", scope: !20111, file: !3033, line: 45, type: !20115)
!20115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20116, size: 32)
!20116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 32)
!20117 = !DILocation(line: 0, scope: !20111)
!20118 = !DILocation(line: 47, column: 10, scope: !20119)
!20119 = distinct !DILexicalBlock(scope: !20111, file: !3033, line: 47, column: 6)
!20120 = !DILocation(line: 47, column: 6, scope: !20111)
!20121 = !DILocation(line: 49, column: 9, scope: !20122)
!20122 = distinct !DILexicalBlock(scope: !20119, file: !3033, line: 47, column: 19)
!20123 = !DILocation(line: 53, column: 15, scope: !20122)
!20124 = !DILocation(line: 53, column: 3, scope: !20122)
!20125 = !DILocation(line: 56, column: 2, scope: !20122)
!20126 = !DILocation(line: 57, column: 1, scope: !20111)
!20127 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !3033, file: !3033, line: 64, type: !20128, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20130)
!20128 = !DISubroutineType(types: !20129)
!20129 = !{!102, !156, !156}
!20130 = !{!20131, !20132, !20133}
!20131 = !DILocalVariable(name: "align", arg: 1, scope: !20127, file: !3033, line: 64, type: !156)
!20132 = !DILocalVariable(name: "size", arg: 2, scope: !20127, file: !3033, line: 64, type: !156)
!20133 = !DILocalVariable(name: "ret", scope: !20127, file: !3033, line: 75, type: !102)
!20134 = !DILocation(line: 0, scope: !20127)
!20135 = !DILocation(line: 66, column: 2, scope: !20136)
!20136 = distinct !DILexicalBlock(scope: !20137, file: !3033, line: 66, column: 2)
!20137 = distinct !DILexicalBlock(scope: !20127, file: !3033, line: 66, column: 2)
!20138 = !DILocation(line: 66, column: 2, scope: !20139)
!20139 = distinct !DILexicalBlock(scope: !20136, file: !3033, line: 66, column: 2)
!20140 = !DILocation(line: 70, column: 2, scope: !20141)
!20141 = distinct !DILexicalBlock(scope: !20142, file: !3033, line: 70, column: 2)
!20142 = distinct !DILexicalBlock(scope: !20127, file: !3033, line: 70, column: 2)
!20143 = !DILocation(line: 70, column: 2, scope: !20142)
!20144 = !DILocation(line: 70, column: 2, scope: !20145)
!20145 = distinct !DILexicalBlock(scope: !20141, file: !3033, line: 70, column: 2)
!20146 = !DILocation(line: 75, column: 14, scope: !20127)
!20147 = !DILocation(line: 79, column: 2, scope: !20127)
!20148 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !3033, file: !3033, line: 12, type: !20149, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20151)
!20149 = !DISubroutineType(types: !20150)
!20150 = !{!102, !20116, !156, !156}
!20151 = !{!20152, !20153, !20154, !20155, !20156, !20157}
!20152 = !DILocalVariable(name: "heap", arg: 1, scope: !20148, file: !3033, line: 12, type: !20116)
!20153 = !DILocalVariable(name: "align", arg: 2, scope: !20148, file: !3033, line: 12, type: !156)
!20154 = !DILocalVariable(name: "size", arg: 3, scope: !20148, file: !3033, line: 12, type: !156)
!20155 = !DILocalVariable(name: "mem", scope: !20148, file: !3033, line: 14, type: !102)
!20156 = !DILocalVariable(name: "heap_ref", scope: !20148, file: !3033, line: 15, type: !20115)
!20157 = !DILocalVariable(name: "__align", scope: !20148, file: !3033, line: 16, type: !156)
!20158 = !DILocation(line: 0, scope: !20148)
!20159 = !DILocation(line: 24, column: 6, scope: !20160)
!20160 = distinct !DILexicalBlock(scope: !20148, file: !3033, line: 24, column: 6)
!20161 = !DILocation(line: 24, column: 6, scope: !20148)
!20162 = !DILocation(line: 27, column: 18, scope: !20148)
!20163 = !DILocation(line: 29, column: 44, scope: !20148)
!20164 = !DILocation(line: 29, column: 8, scope: !20148)
!20165 = !DILocation(line: 30, column: 10, scope: !20166)
!20166 = distinct !DILexicalBlock(scope: !20148, file: !3033, line: 30, column: 6)
!20167 = !DILocation(line: 30, column: 6, scope: !20148)
!20168 = !DILocation(line: 34, column: 13, scope: !20148)
!20169 = !DILocation(line: 35, column: 12, scope: !20148)
!20170 = !DILocation(line: 36, column: 8, scope: !20148)
!20171 = !DILocation(line: 37, column: 2, scope: !20172)
!20172 = distinct !DILexicalBlock(scope: !20173, file: !3033, line: 37, column: 2)
!20173 = distinct !DILexicalBlock(scope: !20148, file: !3033, line: 37, column: 2)
!20174 = !DILocation(line: 37, column: 2, scope: !20173)
!20175 = !DILocation(line: 37, column: 2, scope: !20176)
!20176 = distinct !DILexicalBlock(scope: !20172, file: !3033, line: 37, column: 2)
!20177 = !DILocation(line: 41, column: 1, scope: !20148)
!20178 = distinct !DISubprogram(name: "size_add_overflow", scope: !16235, file: !16235, line: 47, type: !16236, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20179)
!20179 = !{!20180, !20181, !20182}
!20180 = !DILocalVariable(name: "a", arg: 1, scope: !20178, file: !16235, line: 47, type: !156)
!20181 = !DILocalVariable(name: "b", arg: 2, scope: !20178, file: !16235, line: 47, type: !156)
!20182 = !DILocalVariable(name: "result", arg: 3, scope: !20178, file: !16235, line: 47, type: !3169)
!20183 = !DILocation(line: 0, scope: !20178)
!20184 = !DILocation(line: 49, column: 9, scope: !20178)
!20185 = !DILocation(line: 49, column: 2, scope: !20178)
!20186 = distinct !DISubprogram(name: "k_malloc", scope: !3033, file: !3033, line: 82, type: !16247, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20187)
!20187 = !{!20188, !20189}
!20188 = !DILocalVariable(name: "size", arg: 1, scope: !20186, file: !3033, line: 82, type: !156)
!20189 = !DILocalVariable(name: "ret", scope: !20186, file: !3033, line: 86, type: !102)
!20190 = !DILocation(line: 0, scope: !20186)
!20191 = !DILocation(line: 86, column: 14, scope: !20186)
!20192 = !DILocation(line: 90, column: 2, scope: !20186)
!20193 = distinct !DISubprogram(name: "k_calloc", scope: !3033, file: !3033, line: 93, type: !20128, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20194)
!20194 = !{!20195, !20196, !20197, !20198}
!20195 = !DILocalVariable(name: "nmemb", arg: 1, scope: !20193, file: !3033, line: 93, type: !156)
!20196 = !DILocalVariable(name: "size", arg: 2, scope: !20193, file: !3033, line: 93, type: !156)
!20197 = !DILocalVariable(name: "ret", scope: !20193, file: !3033, line: 95, type: !102)
!20198 = !DILocalVariable(name: "bounds", scope: !20193, file: !3033, line: 96, type: !156)
!20199 = !DILocation(line: 0, scope: !20193)
!20200 = !DILocation(line: 96, column: 2, scope: !20193)
!20201 = !DILocation(line: 100, column: 6, scope: !20202)
!20202 = distinct !DILexicalBlock(scope: !20193, file: !3033, line: 100, column: 6)
!20203 = !DILocation(line: 100, column: 6, scope: !20193)
!20204 = !DILocation(line: 106, column: 17, scope: !20193)
!20205 = !DILocation(line: 106, column: 8, scope: !20193)
!20206 = !DILocation(line: 107, column: 10, scope: !20207)
!20207 = distinct !DILexicalBlock(scope: !20193, file: !3033, line: 107, column: 6)
!20208 = !DILocation(line: 107, column: 6, scope: !20193)
!20209 = !DILocation(line: 108, column: 9, scope: !20210)
!20210 = distinct !DILexicalBlock(scope: !20207, file: !3033, line: 107, column: 19)
!20211 = !DILocation(line: 109, column: 2, scope: !20210)
!20212 = !DILocation(line: 114, column: 1, scope: !20193)
!20213 = distinct !DISubprogram(name: "size_mul_overflow", scope: !16235, file: !16235, line: 105, type: !16236, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20214)
!20214 = !{!20215, !20216, !20217}
!20215 = !DILocalVariable(name: "a", arg: 1, scope: !20213, file: !16235, line: 105, type: !156)
!20216 = !DILocalVariable(name: "b", arg: 2, scope: !20213, file: !16235, line: 105, type: !156)
!20217 = !DILocalVariable(name: "result", arg: 3, scope: !20213, file: !16235, line: 105, type: !3169)
!20218 = !DILocation(line: 0, scope: !20213)
!20219 = !DILocation(line: 107, column: 9, scope: !20213)
!20220 = !DILocation(line: 107, column: 2, scope: !20213)
!20221 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !3033, file: !3033, line: 116, type: !20222, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20294)
!20222 = !DISubroutineType(types: !20223)
!20223 = !{null, !20224}
!20224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20225, size: 32)
!20225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !20226)
!20226 = !{!20227, !20267, !20279, !20280, !20281, !20282, !20288, !20289}
!20227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !20225, file: !199, line: 247, baseType: !20228, size: 384)
!20228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !20229)
!20229 = !{!20230, !20241, !20243, !20244, !20245, !20254, !20255, !20256}
!20230 = !DIDerivedType(tag: DW_TAG_member, scope: !20228, file: !199, line: 60, baseType: !20231, size: 64)
!20231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !20228, file: !199, line: 60, size: 64, elements: !20232)
!20232 = !{!20233, !20235}
!20233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !20231, file: !199, line: 61, baseType: !20234, size: 64)
!20234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3048)
!20235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !20231, file: !199, line: 62, baseType: !20236, size: 64)
!20236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !20237)
!20237 = !{!20238}
!20238 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !20236, file: !211, line: 50, baseType: !20239, size: 64)
!20239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20240, size: 64, elements: !216)
!20240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20236, size: 32)
!20241 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !20228, file: !199, line: 68, baseType: !20242, size: 32, offset: 64)
!20242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 32)
!20243 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !20228, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!20244 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !20228, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!20245 = !DIDerivedType(tag: DW_TAG_member, scope: !20228, file: !199, line: 90, baseType: !20246, size: 16, offset: 112)
!20246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !20228, file: !199, line: 90, size: 16, elements: !20247)
!20247 = !{!20248, !20253}
!20248 = !DIDerivedType(tag: DW_TAG_member, scope: !20246, file: !199, line: 91, baseType: !20249, size: 16)
!20249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !20246, file: !199, line: 91, size: 16, elements: !20250)
!20250 = !{!20251, !20252}
!20251 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !20249, file: !199, line: 96, baseType: !229, size: 8)
!20252 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !20249, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!20253 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !20246, file: !199, line: 100, baseType: !181, size: 16)
!20254 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !20228, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!20255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !20228, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!20256 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !20228, file: !199, line: 131, baseType: !20257, size: 192, offset: 192)
!20257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !20258)
!20258 = !{!20259, !20260, !20266}
!20259 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !20257, file: !131, line: 245, baseType: !20234, size: 64)
!20260 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !20257, file: !131, line: 246, baseType: !20261, size: 32, offset: 64)
!20261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !20262)
!20262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20263, size: 32)
!20263 = !DISubroutineType(types: !20264)
!20264 = !{null, !20265}
!20265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20257, size: 32)
!20266 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !20257, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!20267 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !20225, file: !199, line: 250, baseType: !20268, size: 288, offset: 384)
!20268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !20269)
!20269 = !{!20270, !20271, !20272, !20273, !20274, !20275, !20276, !20277, !20278}
!20270 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !20268, file: !248, line: 26, baseType: !111, size: 32)
!20271 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !20268, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!20272 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !20268, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!20273 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !20268, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!20274 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !20268, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!20275 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !20268, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!20276 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !20268, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!20277 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !20268, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!20278 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !20268, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!20279 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !20225, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!20280 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !20225, file: !199, line: 256, baseType: !3043, size: 64, offset: 704)
!20281 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !20225, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!20282 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !20225, file: !199, line: 300, baseType: !20283, size: 96, offset: 800)
!20283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !20284)
!20284 = !{!20285, !20286, !20287}
!20285 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !20283, file: !199, line: 153, baseType: !22, size: 32)
!20286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !20283, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!20287 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !20283, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!20288 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !20225, file: !199, line: 325, baseType: !20116, size: 32, offset: 896)
!20289 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !20225, file: !199, line: 343, baseType: !20290, size: 64, offset: 928)
!20290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !20291)
!20291 = !{!20292, !20293}
!20292 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !20290, file: !248, line: 63, baseType: !111, size: 32)
!20293 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !20290, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!20294 = !{!20295}
!20295 = !DILocalVariable(name: "thread", arg: 1, scope: !20221, file: !3033, line: 116, type: !20224)
!20296 = !DILocation(line: 0, scope: !20221)
!20297 = !DILocation(line: 118, column: 10, scope: !20221)
!20298 = !DILocation(line: 118, column: 24, scope: !20221)
!20299 = !DILocation(line: 119, column: 1, scope: !20221)
!20300 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !3033, file: !3033, line: 124, type: !20128, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !20301)
!20301 = !{!20302, !20303, !20304, !20305}
!20302 = !DILocalVariable(name: "align", arg: 1, scope: !20300, file: !3033, line: 124, type: !156)
!20303 = !DILocalVariable(name: "size", arg: 2, scope: !20300, file: !3033, line: 124, type: !156)
!20304 = !DILocalVariable(name: "ret", scope: !20300, file: !3033, line: 126, type: !102)
!20305 = !DILocalVariable(name: "heap", scope: !20300, file: !3033, line: 127, type: !20116)
!20306 = !DILocation(line: 0, scope: !20300)
!20307 = !DILocation(line: 129, column: 6, scope: !20308)
!20308 = distinct !DILexicalBlock(scope: !20300, file: !3033, line: 129, column: 6)
!20309 = !DILocation(line: 129, column: 6, scope: !20300)
!20310 = !DILocation(line: 132, column: 10, scope: !20311)
!20311 = distinct !DILexicalBlock(scope: !20308, file: !3033, line: 131, column: 9)
!20312 = !DILocation(line: 132, column: 20, scope: !20311)
!20313 = !DILocation(line: 135, column: 11, scope: !20314)
!20314 = distinct !DILexicalBlock(scope: !20300, file: !3033, line: 135, column: 6)
!20315 = !DILocation(line: 135, column: 6, scope: !20300)
!20316 = !DILocation(line: 136, column: 9, scope: !20317)
!20317 = distinct !DILexicalBlock(scope: !20314, file: !3033, line: 135, column: 20)
!20318 = !DILocation(line: 137, column: 2, scope: !20317)
!20319 = !DILocation(line: 0, scope: !20314)
!20320 = !DILocation(line: 141, column: 2, scope: !20300)
!20321 = distinct !DISubprogram(name: "boot_banner", scope: !20322, file: !20322, line: 26, type: !323, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3791, retainedNodes: !2571)
!20322 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!20323 = !DILocation(line: 36, column: 1, scope: !20321)
!20324 = distinct !DISubprogram(name: "statics_init", scope: !3089, file: !3089, line: 21, type: !3095, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20325)
!20325 = !{!20326, !20327}
!20326 = !DILocalVariable(name: "unused", arg: 1, scope: !20324, file: !3089, line: 21, type: !3097)
!20327 = !DILocalVariable(name: "h", scope: !20328, file: !3089, line: 24, type: !20329)
!20328 = distinct !DILexicalBlock(scope: !20324, file: !3089, line: 24, column: 2)
!20329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20330, size: 32)
!20330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !20331)
!20331 = !{!20332, !20338, !20344}
!20332 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !20330, file: !127, line: 5074, baseType: !20333, size: 96)
!20333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !20334)
!20334 = !{!20335, !20336, !20337}
!20335 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !20333, file: !274, line: 57, baseType: !277, size: 32)
!20336 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !20333, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!20337 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !20333, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!20338 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !20330, file: !127, line: 5075, baseType: !20339, size: 64, offset: 96)
!20339 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !20340)
!20340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !20341)
!20341 = !{!20342}
!20342 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !20340, file: !131, line: 232, baseType: !20343, size: 64)
!20343 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3075)
!20344 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !20330, file: !127, line: 5076, baseType: !20345, size: 32, offset: 160)
!20345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !20346)
!20346 = !{!20347}
!20347 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !20345, file: !152, line: 52, baseType: !22, size: 32)
!20348 = !DILocation(line: 0, scope: !20324)
!20349 = !DILocation(line: 0, scope: !20328)
!20350 = !DILocation(line: 24, column: 2, scope: !20351)
!20351 = distinct !DILexicalBlock(scope: !20352, file: !3089, line: 24, column: 2)
!20352 = distinct !DILexicalBlock(scope: !20353, file: !3089, line: 24, column: 2)
!20353 = distinct !DILexicalBlock(scope: !20328, file: !3089, line: 24, column: 2)
!20354 = !DILocation(line: 24, column: 2, scope: !20355)
!20355 = distinct !DILexicalBlock(scope: !20356, file: !3089, line: 24, column: 2)
!20356 = distinct !DILexicalBlock(scope: !20351, file: !3089, line: 24, column: 2)
!20357 = !DILocation(line: 24, column: 2, scope: !20352)
!20358 = !DILocation(line: 24, column: 2, scope: !20328)
!20359 = !DILocation(line: 52, column: 2, scope: !20324)
!20360 = !DILocation(line: 49, column: 27, scope: !20361)
!20361 = distinct !DILexicalBlock(scope: !20362, file: !3089, line: 48, column: 3)
!20362 = distinct !DILexicalBlock(scope: !20353, file: !3089, line: 24, column: 36)
!20363 = !DILocation(line: 49, column: 45, scope: !20361)
!20364 = !DILocation(line: 49, column: 4, scope: !20361)
!20365 = !DILocation(line: 24, column: 2, scope: !20353)
!20366 = !DILocation(line: 24, column: 2, scope: !20356)
!20367 = distinct !{!20367, !20358, !20368}
!20368 = !DILocation(line: 51, column: 2, scope: !20328)
!20369 = distinct !DISubprogram(name: "k_heap_init", scope: !3089, file: !3089, line: 13, type: !20370, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20372)
!20370 = !DISubroutineType(types: !20371)
!20371 = !{null, !20329, !102, !156}
!20372 = !{!20373, !20374, !20375}
!20373 = !DILocalVariable(name: "h", arg: 1, scope: !20369, file: !3089, line: 13, type: !20329)
!20374 = !DILocalVariable(name: "mem", arg: 2, scope: !20369, file: !3089, line: 13, type: !102)
!20375 = !DILocalVariable(name: "bytes", arg: 3, scope: !20369, file: !3089, line: 13, type: !156)
!20376 = !DILocation(line: 0, scope: !20369)
!20377 = !DILocation(line: 15, column: 19, scope: !20369)
!20378 = !DILocation(line: 15, column: 2, scope: !20369)
!20379 = !DILocation(line: 16, column: 20, scope: !20369)
!20380 = !DILocation(line: 16, column: 2, scope: !20369)
!20381 = !DILocation(line: 19, column: 1, scope: !20369)
!20382 = distinct !DISubprogram(name: "z_waitq_init", scope: !15722, file: !15722, line: 47, type: !20383, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20386)
!20383 = !DISubroutineType(types: !20384)
!20384 = !{null, !20385}
!20385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20339, size: 32)
!20386 = !{!20387}
!20387 = !DILocalVariable(name: "w", arg: 1, scope: !20382, file: !15722, line: 47, type: !20385)
!20388 = !DILocation(line: 0, scope: !20382)
!20389 = !DILocation(line: 49, column: 21, scope: !20382)
!20390 = !DILocation(line: 49, column: 2, scope: !20382)
!20391 = !DILocation(line: 50, column: 1, scope: !20382)
!20392 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !20393, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20396)
!20393 = !DISubroutineType(types: !20394)
!20394 = !{null, !20395}
!20395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20343, size: 32)
!20396 = !{!20397}
!20397 = !DILocalVariable(name: "list", arg: 1, scope: !20392, file: !136, line: 197, type: !20395)
!20398 = !DILocation(line: 0, scope: !20392)
!20399 = !DILocation(line: 199, column: 8, scope: !20392)
!20400 = !DILocation(line: 199, column: 13, scope: !20392)
!20401 = !DILocation(line: 200, column: 8, scope: !20392)
!20402 = !DILocation(line: 200, column: 13, scope: !20392)
!20403 = !DILocation(line: 201, column: 1, scope: !20392)
!20404 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !3089, file: !3089, line: 64, type: !20405, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20411)
!20405 = !DISubroutineType(types: !20406)
!20406 = !{!102, !20329, !156, !156, !20407}
!20407 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !20408)
!20408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !20409)
!20409 = !{!20410}
!20410 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !20408, file: !105, line: 66, baseType: !104, size: 64)
!20411 = !{!20412, !20413, !20414, !20415, !20416, !20417, !20418, !20419, !20424}
!20412 = !DILocalVariable(name: "h", arg: 1, scope: !20404, file: !3089, line: 64, type: !20329)
!20413 = !DILocalVariable(name: "align", arg: 2, scope: !20404, file: !3089, line: 64, type: !156)
!20414 = !DILocalVariable(name: "bytes", arg: 3, scope: !20404, file: !3089, line: 64, type: !156)
!20415 = !DILocalVariable(name: "timeout", arg: 4, scope: !20404, file: !3089, line: 65, type: !20407)
!20416 = !DILocalVariable(name: "now", scope: !20404, file: !3089, line: 67, type: !106)
!20417 = !DILocalVariable(name: "end", scope: !20404, file: !3089, line: 67, type: !106)
!20418 = !DILocalVariable(name: "ret", scope: !20404, file: !3089, line: 68, type: !102)
!20419 = !DILocalVariable(name: "key", scope: !20404, file: !3089, line: 72, type: !20420)
!20420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !20421)
!20421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !20422)
!20422 = !{!20423}
!20423 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !20421, file: !152, line: 33, baseType: !103, size: 32)
!20424 = !DILocalVariable(name: "blocked_alloc", scope: !20404, file: !3089, line: 78, type: !122)
!20425 = !DILocation(line: 0, scope: !20404)
!20426 = !DILocation(line: 67, column: 21, scope: !20404)
!20427 = !DILocation(line: 70, column: 8, scope: !20404)
!20428 = !DILocation(line: 72, column: 41, scope: !20404)
!20429 = !DILocalVariable(name: "l", arg: 1, scope: !20430, file: !152, line: 136, type: !20433)
!20430 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !20431, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20434)
!20431 = !DISubroutineType(types: !20432)
!20432 = !{!20420, !20433}
!20433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20345, size: 32)
!20434 = !{!20429, !20435}
!20435 = !DILocalVariable(name: "k", scope: !20430, file: !152, line: 139, type: !20420)
!20436 = !DILocation(line: 0, scope: !20430, inlinedAt: !20437)
!20437 = distinct !DILocation(line: 72, column: 25, scope: !20404)
!20438 = !DILocation(line: 55, column: 2, scope: !20439, inlinedAt: !20443)
!20439 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7609, file: !7609, line: 42, type: !7610, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20440)
!20440 = !{!20441, !20442}
!20441 = !DILocalVariable(name: "key", scope: !20439, file: !7609, line: 44, type: !32)
!20442 = !DILocalVariable(name: "tmp", scope: !20439, file: !7609, line: 53, type: !32)
!20443 = distinct !DILocation(line: 145, column: 10, scope: !20430, inlinedAt: !20437)
!20444 = !{i64 2282580}
!20445 = !DILocation(line: 0, scope: !20439, inlinedAt: !20443)
!20446 = !DILocation(line: 148, column: 2, scope: !20447, inlinedAt: !20437)
!20447 = distinct !DILexicalBlock(scope: !20448, file: !152, line: 148, column: 2)
!20448 = distinct !DILexicalBlock(scope: !20430, file: !152, line: 148, column: 2)
!20449 = !DILocation(line: 148, column: 2, scope: !20448, inlinedAt: !20437)
!20450 = !DILocation(line: 148, column: 2, scope: !20451, inlinedAt: !20437)
!20451 = distinct !DILexicalBlock(scope: !20447, file: !152, line: 148, column: 2)
!20452 = !DILocation(line: 160, column: 2, scope: !20430, inlinedAt: !20437)
!20453 = !DILocation(line: 1031, column: 3, scope: !20454, inlinedAt: !20457)
!20454 = distinct !DISubprogram(name: "__get_IPSR", scope: !7930, file: !7930, line: 1027, type: !8017, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20455)
!20455 = !{!20456}
!20456 = !DILocalVariable(name: "result", scope: !20454, file: !7930, line: 1029, type: !111)
!20457 = distinct !DILocation(line: 48, column: 10, scope: !20458, inlinedAt: !20459)
!20458 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8980, file: !8980, line: 46, type: !8981, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2571)
!20459 = distinct !DILocation(line: 76, column: 2, scope: !20460)
!20460 = distinct !DILexicalBlock(scope: !20461, file: !3089, line: 76, column: 2)
!20461 = distinct !DILexicalBlock(scope: !20404, file: !3089, line: 76, column: 2)
!20462 = !{i64 3729014}
!20463 = !DILocation(line: 0, scope: !20454, inlinedAt: !20457)
!20464 = !DILocation(line: 48, column: 9, scope: !20458, inlinedAt: !20459)
!20465 = !DILocation(line: 76, column: 2, scope: !20460)
!20466 = !DILocation(line: 81, column: 9, scope: !20467)
!20467 = distinct !DILexicalBlock(scope: !20404, file: !3089, line: 80, column: 22)
!20468 = !DILocation(line: 83, column: 9, scope: !20467)
!20469 = !DILocation(line: 85, column: 12, scope: !20470)
!20470 = distinct !DILexicalBlock(scope: !20467, file: !3089, line: 84, column: 7)
!20471 = !DILocation(line: 85, column: 21, scope: !20470)
!20472 = !DILocation(line: 76, column: 2, scope: !20473)
!20473 = distinct !DILexicalBlock(scope: !20460, file: !3089, line: 76, column: 2)
!20474 = !DILocation(line: 85, column: 30, scope: !20470)
!20475 = !DILocation(line: 85, column: 37, scope: !20470)
!20476 = !DILocation(line: 84, column: 7, scope: !20467)
!20477 = !DILocation(line: 99, column: 10, scope: !20467)
!20478 = !DILocation(line: 0, scope: !20430, inlinedAt: !20479)
!20479 = distinct !DILocation(line: 101, column: 9, scope: !20467)
!20480 = !DILocation(line: 55, column: 2, scope: !20439, inlinedAt: !20481)
!20481 = distinct !DILocation(line: 145, column: 10, scope: !20430, inlinedAt: !20479)
!20482 = !DILocation(line: 0, scope: !20439, inlinedAt: !20481)
!20483 = !DILocation(line: 148, column: 2, scope: !20447, inlinedAt: !20479)
!20484 = !DILocation(line: 148, column: 2, scope: !20448, inlinedAt: !20479)
!20485 = !DILocation(line: 148, column: 2, scope: !20451, inlinedAt: !20479)
!20486 = !DILocation(line: 160, column: 2, scope: !20430, inlinedAt: !20479)
!20487 = distinct !{!20487, !20488, !20489}
!20488 = !DILocation(line: 80, column: 2, scope: !20404)
!20489 = !DILocation(line: 102, column: 2, scope: !20404)
!20490 = !DILocalVariable(name: "key", arg: 2, scope: !20491, file: !152, line: 190, type: !20420)
!20491 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !20492, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20494)
!20492 = !DISubroutineType(types: !20493)
!20493 = !{null, !20433, !20420}
!20494 = !{!20495, !20490}
!20495 = !DILocalVariable(name: "l", arg: 1, scope: !20491, file: !152, line: 189, type: !20433)
!20496 = !DILocation(line: 0, scope: !20491, inlinedAt: !20497)
!20497 = distinct !DILocation(line: 106, column: 2, scope: !20404)
!20498 = !DILocation(line: 194, column: 2, scope: !20499, inlinedAt: !20497)
!20499 = distinct !DILexicalBlock(scope: !20500, file: !152, line: 194, column: 2)
!20500 = distinct !DILexicalBlock(scope: !20491, file: !152, line: 194, column: 2)
!20501 = !DILocation(line: 194, column: 2, scope: !20500, inlinedAt: !20497)
!20502 = !DILocation(line: 194, column: 2, scope: !20503, inlinedAt: !20497)
!20503 = distinct !DILexicalBlock(scope: !20499, file: !152, line: 194, column: 2)
!20504 = !DILocalVariable(name: "key", arg: 1, scope: !20505, file: !7609, line: 84, type: !32)
!20505 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7609, file: !7609, line: 84, type: !7620, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20506)
!20506 = !{!20504}
!20507 = !DILocation(line: 0, scope: !20505, inlinedAt: !20508)
!20508 = distinct !DILocation(line: 215, column: 2, scope: !20491, inlinedAt: !20497)
!20509 = !DILocation(line: 95, column: 2, scope: !20505, inlinedAt: !20508)
!20510 = !{i64 2283397}
!20511 = !DILocation(line: 107, column: 2, scope: !20404)
!20512 = distinct !DISubprogram(name: "k_heap_alloc", scope: !3089, file: !3089, line: 110, type: !20513, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20515)
!20513 = !DISubroutineType(types: !20514)
!20514 = !{!102, !20329, !156, !20407}
!20515 = !{!20516, !20517, !20518, !20519}
!20516 = !DILocalVariable(name: "h", arg: 1, scope: !20512, file: !3089, line: 110, type: !20329)
!20517 = !DILocalVariable(name: "bytes", arg: 2, scope: !20512, file: !3089, line: 110, type: !156)
!20518 = !DILocalVariable(name: "timeout", arg: 3, scope: !20512, file: !3089, line: 110, type: !20407)
!20519 = !DILocalVariable(name: "ret", scope: !20512, file: !3089, line: 114, type: !102)
!20520 = !DILocation(line: 0, scope: !20512)
!20521 = !DILocation(line: 114, column: 14, scope: !20512)
!20522 = !DILocation(line: 118, column: 2, scope: !20512)
!20523 = distinct !DISubprogram(name: "k_heap_free", scope: !3089, file: !3089, line: 121, type: !20524, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !20526)
!20524 = !DISubroutineType(types: !20525)
!20525 = !{null, !20329, !102}
!20526 = !{!20527, !20528, !20529}
!20527 = !DILocalVariable(name: "h", arg: 1, scope: !20523, file: !3089, line: 121, type: !20329)
!20528 = !DILocalVariable(name: "mem", arg: 2, scope: !20523, file: !3089, line: 121, type: !102)
!20529 = !DILocalVariable(name: "key", scope: !20523, file: !3089, line: 123, type: !20420)
!20530 = !DILocation(line: 0, scope: !20523)
!20531 = !DILocation(line: 123, column: 41, scope: !20523)
!20532 = !DILocation(line: 0, scope: !20430, inlinedAt: !20533)
!20533 = distinct !DILocation(line: 123, column: 25, scope: !20523)
!20534 = !DILocation(line: 55, column: 2, scope: !20439, inlinedAt: !20535)
!20535 = distinct !DILocation(line: 145, column: 10, scope: !20430, inlinedAt: !20533)
!20536 = !DILocation(line: 0, scope: !20439, inlinedAt: !20535)
!20537 = !DILocation(line: 148, column: 2, scope: !20447, inlinedAt: !20533)
!20538 = !DILocation(line: 148, column: 2, scope: !20448, inlinedAt: !20533)
!20539 = !DILocation(line: 148, column: 2, scope: !20451, inlinedAt: !20533)
!20540 = !DILocation(line: 160, column: 2, scope: !20430, inlinedAt: !20533)
!20541 = !DILocation(line: 125, column: 20, scope: !20523)
!20542 = !DILocation(line: 125, column: 2, scope: !20523)
!20543 = !DILocation(line: 128, column: 60, scope: !20544)
!20544 = distinct !DILexicalBlock(scope: !20523, file: !3089, line: 128, column: 6)
!20545 = !DILocation(line: 128, column: 43, scope: !20544)
!20546 = !DILocation(line: 128, column: 68, scope: !20544)
!20547 = !DILocation(line: 128, column: 6, scope: !20523)
!20548 = !DILocation(line: 129, column: 3, scope: !20549)
!20549 = distinct !DILexicalBlock(scope: !20544, file: !3089, line: 128, column: 74)
!20550 = !DILocation(line: 130, column: 2, scope: !20549)
!20551 = !DILocation(line: 0, scope: !20491, inlinedAt: !20552)
!20552 = distinct !DILocation(line: 131, column: 3, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20544, file: !3089, line: 130, column: 9)
!20554 = !DILocation(line: 194, column: 2, scope: !20499, inlinedAt: !20552)
!20555 = !DILocation(line: 194, column: 2, scope: !20500, inlinedAt: !20552)
!20556 = !DILocation(line: 194, column: 2, scope: !20503, inlinedAt: !20552)
!20557 = !DILocation(line: 0, scope: !20505, inlinedAt: !20558)
!20558 = distinct !DILocation(line: 215, column: 2, scope: !20491, inlinedAt: !20552)
!20559 = !DILocation(line: 95, column: 2, scope: !20505, inlinedAt: !20558)
!20560 = !DILocation(line: 133, column: 1, scope: !20523)
