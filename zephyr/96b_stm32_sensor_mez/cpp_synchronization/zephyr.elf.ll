; ModuleID = 'build/96b_stm32_sensor_mez/cpp_synchronization/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type { i8 }
%struct._thread_arch = type { i32, i32 }
%class.cpp_semaphore = type { %class.semaphore, %struct.k_sem }
%class.semaphore = type { i32 (...)** }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.sys_mutex = type { %struct.k_mutex }
%struct.k_mutex = type { %union.anon, %struct.k_thread*, i32, i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.k_spinlock*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.k_timer = type { %struct._timeout, %union.anon, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct.k_timeout_t = type { i64 }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

$_ZN13cpp_semaphoreD2Ev = comdat any

$_ZN13cpp_semaphoreD0Ev = comdat any

$_ZN9semaphoreC2Ev = comdat any

$_ZTV9semaphore = comdat any

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230651 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230631 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230621 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230721 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230711 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230701 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230691 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230681 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230671 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230661 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232780 to i8*), void (i8*)* inttoptr (i32 134230641 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }]
@coop_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !25
@coop_stack = dso_local global [2064 x %struct.k_spinlock] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.cpp\22.0", align 64, !dbg !106
@_ZTV13cpp_semaphore = dso_local unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%class.cpp_semaphore*)* @_ZN13cpp_semaphore4waitEv to i8*), i8* bitcast (i32 (%class.cpp_semaphore*, i32)* @_ZN13cpp_semaphore4waitEi to i8*), i8* bitcast (void (%class.cpp_semaphore*)* @_ZN13cpp_semaphore4giveEv to i8*), i8* bitcast (%class.cpp_semaphore* (%class.cpp_semaphore*)* @_ZN13cpp_semaphoreD2Ev to i8*), i8* bitcast (void (%class.cpp_semaphore*)* @_ZN13cpp_semaphoreD0Ev to i8*)] }, align 4
@.str = private unnamed_addr constant [21 x i8] c"Create semaphore %p\0A\00", align 1
@sem_main = dso_local global %class.cpp_semaphore zeroinitializer, align 4, !dbg !116
@sem_coop = dso_local global %class.cpp_semaphore zeroinitializer, align 4, !dbg !118
@.str.2 = private unnamed_addr constant [18 x i8] c"%s: Hello World!\0A\00", align 1
@__FUNCTION__._Z17coop_thread_entryv = private unnamed_addr constant [18 x i8] c"coop_thread_entry\00", align 1
@__FUNCTION__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@_ZTV9semaphore = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !204
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [44 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.init_entry* @__init_malloc_prepare to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !285
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !338
@__zephyr_init_array_start = external dso_local global [0 x void ()*], align 4
@__zephyr_init_array_end = external dso_local global [0 x void ()*], align 4
@__ZEPHYR_CTOR_LIST__ = external dso_local local_unnamed_addr global [0 x void ()*], align 4
@__dso_handle = weak dso_local local_unnamed_addr global i8* null, align 4, !dbg !367
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !373
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !379
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !512
@z_malloc_heap_mutex = dso_local global %struct.sys_mutex zeroinitializer, section ".bss", align 4, !dbg !548
@z_malloc_heap = internal global %struct.sys_heap zeroinitializer, section ".bss", align 4, !dbg !568
@__init_malloc_prepare = internal constant %struct.init_entry { i32 (%struct.device*)* @malloc_prepare, %struct.device* null }, section ".z_init_POST_KERNEL40_", align 4, !dbg !554
@z_malloc_heap_mem = internal global [128 x i8] zeroinitializer, section ".bss", align 1, !dbg !575
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !687
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !697
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !702
@.str.41 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !722
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !924
@.str.42 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !885
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !868
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !841
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !857
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !887
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !901
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !903
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !905
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !907
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !909
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !911
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !913
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !915
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !917
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !919
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !929
@.str.44 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !962
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1060
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1049
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1101
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !949
@.str.53 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1167
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1446
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1416
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1402
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1347
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !947
@.str.1.54 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1448
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1420
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1418
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1361
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !945
@.str.2.55 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1461
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1424
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1422
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1367
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !943
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1463
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1428
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1426
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1376
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !941
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1465
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1432
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1430
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.5.56 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1467
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1436
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1434
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !937
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1469
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1440
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1438
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1471
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1444
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1442
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1400
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !957
@.str.60 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1473
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1690
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1645
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1692
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1618
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1620
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !955
@.str.1.61 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1699
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1647
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1724
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.61, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1629
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1631
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !953
@.str.2.62 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1726
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1649
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1736
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.62, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1635
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1637
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !951
@.str.3.65 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1738
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1651
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1748
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.65, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1641
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1643
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1653
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1661
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1684
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1687
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1033
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1716
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1718
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1720
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1722
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1728
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1730
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1732
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1734
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1740
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1742
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1744
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1746
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1750
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1861
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1863
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1859
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1828
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1865
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1345
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1359
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1365
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1374
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1398
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1955
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1999
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2002
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2009
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.k_spinlock]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2016
@z_main_stack = dso_local global [1088 x %struct.k_spinlock] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2229
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2237
@z_idle_stacks = internal global [1 x [384 x %struct.k_spinlock]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2244
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2249
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.117 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.121, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.122, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.124, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.118, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.125, i32 0, i32 0)], align 4, !dbg !2277
@.str.119 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.120 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.121 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.122 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.123 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.124 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.118 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.125 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2391
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2404
@lock.149 = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2514
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2539
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2649
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2652
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2654
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2242
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2239
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2656
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2694
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2104
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2692
@lock.223 = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2697
@.str.227 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

@_ZN13cpp_semaphoreC1Ev = dso_local unnamed_addr alias %class.cpp_semaphore* (%class.cpp_semaphore*), %class.cpp_semaphore* (%class.cpp_semaphore*)* @_ZN13cpp_semaphoreC2Ev

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3438 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #33, !dbg !3442, !srcloc !3443
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #33, !dbg !3444, !srcloc !3445
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #33, !dbg !3446, !srcloc !3447
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #33, !dbg !3448, !srcloc !3449
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #33, !dbg !3450, !srcloc !3451
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #33, !dbg !3452, !srcloc !3453
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #33, !dbg !3454, !srcloc !3455
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #33, !dbg !3456, !srcloc !3457
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #33, !dbg !3458, !srcloc !3459
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #33, !dbg !3460, !srcloc !3461
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #33, !dbg !3462, !srcloc !3463
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #33, !dbg !3464, !srcloc !3465
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #33, !dbg !3466, !srcloc !3467
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #33, !dbg !3468, !srcloc !3469
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #33, !dbg !3470, !srcloc !3471
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #33, !dbg !3472, !srcloc !3473
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #33, !dbg !3474, !srcloc !3475
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #33, !dbg !3476, !srcloc !3477
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #33, !dbg !3478, !srcloc !3479
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #33, !dbg !3480, !srcloc !3481
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #33, !dbg !3482, !srcloc !3483
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #33, !dbg !3484, !srcloc !3485
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #33, !dbg !3486, !srcloc !3487
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #33, !dbg !3488, !srcloc !3489
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #33, !dbg !3490, !srcloc !3491
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #33, !dbg !3492, !srcloc !3493
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #33, !dbg !3494, !srcloc !3495
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #33, !dbg !3496, !srcloc !3499
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #33, !dbg !3500, !srcloc !3501
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #33, !dbg !3502, !srcloc !3503
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #33, !dbg !3504, !srcloc !3505
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #33, !dbg !3506, !srcloc !3507
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #33, !dbg !3508, !srcloc !3509
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #33, !dbg !3510, !srcloc !3511
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #33, !dbg !3512, !srcloc !3513
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #33, !dbg !3514, !srcloc !3515
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #33, !dbg !3516, !srcloc !3517
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #33, !dbg !3518, !srcloc !3519
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #33, !dbg !3520, !srcloc !3521
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #33, !dbg !3522, !srcloc !3523
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #33, !dbg !3524, !srcloc !3525
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #33, !dbg !3526, !srcloc !3527
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #33, !dbg !3528, !srcloc !3529
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #33, !dbg !3530, !srcloc !3531
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #33, !dbg !3532, !srcloc !3533
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #33, !dbg !3534, !srcloc !3535
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #33, !dbg !3536, !srcloc !3537
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #33, !dbg !3538, !srcloc !3539
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #33, !dbg !3540, !srcloc !3541
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #33, !dbg !3542, !srcloc !3543
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #33, !dbg !3544, !srcloc !3545
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #33, !dbg !3546, !srcloc !3547
  ret void, !dbg !3548
}

; Function Attrs: mustprogress noinline nounwind optsize
define dso_local noundef i32 @_ZN13cpp_semaphore4waitEv(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #2 align 2 !dbg !3551 {
  call void @llvm.dbg.value(metadata %class.cpp_semaphore* %0, metadata !3553, metadata !DIExpression()), !dbg !3555
  %2 = getelementptr inbounds %class.cpp_semaphore, %class.cpp_semaphore* %0, i32 0, i32 1, !dbg !3556
  %3 = tail call fastcc noundef i32 @_ZL10k_sem_takeP5k_sem11k_timeout_t(%struct.k_sem* noundef nonnull %2, [1 x i64] [i64 -1]) #34, !dbg !3557
  ret i32 1, !dbg !3558
}

; Function Attrs: mustprogress noinline nounwind optsize
define dso_local noundef i32 @_ZN13cpp_semaphore4waitEi(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) %0, i32 noundef %1) unnamed_addr #2 align 2 !dbg !3559 {
  call void @llvm.dbg.value(metadata %class.cpp_semaphore* %0, metadata !3561, metadata !DIExpression()), !dbg !3563
  call void @llvm.dbg.value(metadata i32 %1, metadata !3562, metadata !DIExpression()), !dbg !3563
  %3 = getelementptr inbounds %class.cpp_semaphore, %class.cpp_semaphore* %0, i32 0, i32 1, !dbg !3564
  %4 = icmp sgt i32 %1, 0, !dbg !3565
  %5 = select i1 %4, i32 %1, i32 0, !dbg !3565
  %6 = zext i32 %5 to i64, !dbg !3565
  %7 = tail call fastcc noundef i64 @_ZL20k_ms_to_ticks_ceil64y(i64 noundef %6) #34, !dbg !3565, !range !3566
  %8 = insertvalue [1 x i64] poison, i64 %7, 0, !dbg !3567
  %9 = tail call fastcc noundef i32 @_ZL10k_sem_takeP5k_sem11k_timeout_t(%struct.k_sem* noundef nonnull %3, [1 x i64] %8) #34, !dbg !3567
  ret i32 %9, !dbg !3568
}

; Function Attrs: mustprogress noinline nounwind optsize
define dso_local void @_ZN13cpp_semaphore4giveEv(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #2 align 2 !dbg !3569 {
  call void @llvm.dbg.value(metadata %class.cpp_semaphore* %0, metadata !3571, metadata !DIExpression()), !dbg !3572
  %2 = getelementptr inbounds %class.cpp_semaphore, %class.cpp_semaphore* %0, i32 0, i32 1, !dbg !3573
  tail call fastcc void @_ZL10k_sem_giveP5k_sem(%struct.k_sem* noundef nonnull %2) #34, !dbg !3574
  ret void, !dbg !3575
}

; Function Attrs: noinline nounwind optsize
define linkonce_odr dso_local noundef %class.cpp_semaphore* @_ZN13cpp_semaphoreD2Ev(%class.cpp_semaphore* noundef nonnull returned align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !3576 {
  call void @llvm.dbg.value(metadata %class.cpp_semaphore* %0, metadata !3578, metadata !DIExpression()), !dbg !3579
  ret %class.cpp_semaphore* %0, !dbg !3580
}

; Function Attrs: noinline nounwind optsize
define linkonce_odr dso_local void @_ZN13cpp_semaphoreD0Ev(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !3581 {
  call void @llvm.dbg.value(metadata %class.cpp_semaphore* %0, metadata !3583, metadata !DIExpression()), !dbg !3584
  %2 = tail call noundef %class.cpp_semaphore* @_ZN13cpp_semaphoreD2Ev(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) %0) #35, !dbg !3585
  %3 = bitcast %class.cpp_semaphore* %0 to i8*, !dbg !3585
  tail call void @_ZdlPv(i8* noundef nonnull %3) #36, !dbg !3585
  ret void, !dbg !3586
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #4

; Function Attrs: mustprogress noinline nounwind optsize
define internal fastcc void @_ZL10k_sem_giveP5k_sem(%struct.k_sem* noundef %0) unnamed_addr #2 !dbg !3587 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !3593, metadata !DIExpression()), !dbg !3594
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !3595, !srcloc !3597
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #35, !dbg !3598
  ret void, !dbg !3599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc noundef i64 @_ZL20k_ms_to_ticks_ceil64y(i64 noundef %0) unnamed_addr #5 !dbg !3600 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3605, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata i64 %0, metadata !3607, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i32 1000, metadata !3613, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i32 10000, metadata !3614, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8 1, metadata !3615, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8 0, metadata !3616, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8 1, metadata !3617, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8 0, metadata !3618, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8 1, metadata !3619, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8 0, metadata !3620, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i64 0, metadata !3621, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i64 0, metadata !3621, metadata !DIExpression()), !dbg !3625
  %2 = mul i64 %0, 10, !dbg !3627
  ret i64 %2, !dbg !3633
}

; Function Attrs: mustprogress noinline nounwind optsize
define internal fastcc noundef i32 @_ZL10k_sem_takeP5k_sem11k_timeout_t(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #2 !dbg !3634 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3643, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !3642, metadata !DIExpression()), !dbg !3644
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !3645, !srcloc !3647
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #35, !dbg !3648
  ret i32 %3, !dbg !3649
}

; Function Attrs: noinline nounwind optsize
define internal void @_GLOBAL__sub_I_main.cpp() #3 !dbg !3650 {
  tail call fastcc void @__cxx_global_var_init(), !dbg !3652
  tail call fastcc void @__cxx_global_var_init.1(), !dbg !3652
  ret void
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__cxx_global_var_init() unnamed_addr #3 !dbg !3653 {
  %1 = tail call noundef %class.cpp_semaphore* @_ZN13cpp_semaphoreC2Ev(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) @sem_main) #34, !dbg !3654
  ret void, !dbg !3654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__cxx_global_var_init.1() unnamed_addr #3 !dbg !3655 {
  %1 = tail call noundef %class.cpp_semaphore* @_ZN13cpp_semaphoreC2Ev(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) @sem_coop) #34, !dbg !3656
  ret void, !dbg !3656
}

; Function Attrs: noinline nounwind optsize
define dso_local noundef nonnull %class.cpp_semaphore* @_ZN13cpp_semaphoreC2Ev(%class.cpp_semaphore* noundef nonnull returned align 4 dereferenceable(20) %0) unnamed_addr #3 align 2 !dbg !3657 {
  call void @llvm.dbg.value(metadata %class.cpp_semaphore* %0, metadata !3659, metadata !DIExpression()), !dbg !3660
  %2 = getelementptr inbounds %class.cpp_semaphore, %class.cpp_semaphore* %0, i32 0, i32 0, !dbg !3661
  %3 = tail call noundef %class.semaphore* @_ZN9semaphoreC2Ev(%class.semaphore* noundef nonnull align 4 dereferenceable(4) %2) #35, !dbg !3662
  %4 = getelementptr inbounds %class.cpp_semaphore, %class.cpp_semaphore* %0, i32 0, i32 0, i32 0, !dbg !3661
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV13cpp_semaphore, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 4, !dbg !3661
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), %class.cpp_semaphore* noundef nonnull %0) #35, !dbg !3663
  %5 = getelementptr inbounds %class.cpp_semaphore, %class.cpp_semaphore* %0, i32 0, i32 1, !dbg !3665
  tail call fastcc void @_ZL10k_sem_initP5k_semjj(%struct.k_sem* noundef nonnull %5) #34, !dbg !3666
  ret %class.cpp_semaphore* %0, !dbg !3667
}

; Function Attrs: noinline nounwind optsize
define linkonce_odr dso_local noundef %class.semaphore* @_ZN9semaphoreC2Ev(%class.semaphore* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !3668 {
  call void @llvm.dbg.value(metadata %class.semaphore* %0, metadata !3671, metadata !DIExpression()), !dbg !3673
  %2 = getelementptr inbounds %class.semaphore, %class.semaphore* %0, i32 0, i32 0, !dbg !3674
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9semaphore, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !3674
  ret %class.semaphore* %0, !dbg !3674
}

; Function Attrs: mustprogress noinline nounwind optsize
define internal fastcc void @_ZL10k_sem_initP5k_semjj(%struct.k_sem* noundef %0) unnamed_addr #2 !dbg !3675 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !3679, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i32 0, metadata !3680, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i32 -1, metadata !3681, metadata !DIExpression()), !dbg !3682
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !3683, !srcloc !3685
  %2 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef 0, i32 noundef -1) #35, !dbg !3686
  ret void, !dbg !3687
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: mustprogress noinline noreturn nounwind optsize
define dso_local void @_Z17coop_thread_entryv() #6 !dbg !3688 {
  %1 = alloca %struct.k_timer, align 8
  %2 = bitcast %struct.k_timer* %1 to i8*, !dbg !3704
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #33, !dbg !3704
  call void @llvm.dbg.declare(metadata %struct.k_timer* %1, metadata !3690, metadata !DIExpression()), !dbg !3705
  call void @k_timer_init(%struct.k_timer* noundef nonnull %1, void (%struct.k_timer*)* noundef null, void (%struct.k_timer*)* noundef null) #35, !dbg !3706
  br label %3, !dbg !3707

3:                                                ; preds = %3, %0
  %4 = call noundef i32 @_ZN13cpp_semaphore4waitEv(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) @sem_coop) #34, !dbg !3708
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__._Z17coop_thread_entryv, i32 0, i32 0)) #35, !dbg !3710
  %5 = call fastcc noundef i64 @_ZL20k_ms_to_ticks_ceil64y(i64 noundef 500) #34, !dbg !3711, !range !3566
  %6 = insertvalue [1 x i64] poison, i64 %5, 0, !dbg !3712
  call fastcc void @_ZL13k_timer_startP7k_timer11k_timeout_tS1_(%struct.k_timer* noundef nonnull %1, [1 x i64] %6) #34, !dbg !3712
  call fastcc void @_ZL19k_timer_status_syncP7k_timer(%struct.k_timer* noundef nonnull %1) #34, !dbg !3713
  call void @_ZN13cpp_semaphore4giveEv(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) @sem_main) #34, !dbg !3714
  br label %3, !dbg !3707, !llvm.loop !3715
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; Function Attrs: mustprogress noinline nounwind optsize
define internal fastcc void @_ZL13k_timer_startP7k_timer11k_timeout_tS1_(%struct.k_timer* noundef %0, [1 x i64] %1) unnamed_addr #2 !dbg !3718 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3723, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i64 undef, metadata !3724, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3722, metadata !DIExpression()), !dbg !3725
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !3726, !srcloc !3728
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] zeroinitializer) #35, !dbg !3729
  ret void, !dbg !3730
}

; Function Attrs: mustprogress noinline nounwind optsize
define internal fastcc void @_ZL19k_timer_status_syncP7k_timer(%struct.k_timer* noundef %0) unnamed_addr #2 !dbg !3731 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !3735, metadata !DIExpression()), !dbg !3736
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !3737, !srcloc !3739
  %2 = tail call i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) #35, !dbg !3740
  ret void, !dbg !3741
}

; Function Attrs: mustprogress noinline norecurse noreturn nounwind optsize
define dso_local noundef i32 @main() local_unnamed_addr #8 !dbg !3742 {
  %1 = alloca %struct.k_timer, align 8
  %2 = bitcast %struct.k_timer* %1 to i8*, !dbg !3745
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #33, !dbg !3745
  call void @llvm.dbg.declare(metadata %struct.k_timer* %1, metadata !3744, metadata !DIExpression()), !dbg !3746
  tail call fastcc void @_ZL15k_thread_createP8k_threadP22z_thread_stack_elementjPFvPvS3_S3_ES3_S3_S3_ij11k_timeout_t() #34, !dbg !3747
  call void @k_timer_init(%struct.k_timer* noundef nonnull %1, void (%struct.k_timer*)* noundef null, void (%struct.k_timer*)* noundef null) #35, !dbg !3748
  br label %3, !dbg !3749

3:                                                ; preds = %3, %0
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__FUNCTION__.main, i32 0, i32 0)) #35, !dbg !3750
  %4 = call fastcc noundef i64 @_ZL20k_ms_to_ticks_ceil64y(i64 noundef 500) #34, !dbg !3752, !range !3566
  %5 = insertvalue [1 x i64] poison, i64 %4, 0, !dbg !3753
  call fastcc void @_ZL13k_timer_startP7k_timer11k_timeout_tS1_(%struct.k_timer* noundef nonnull %1, [1 x i64] %5) #34, !dbg !3753
  call fastcc void @_ZL19k_timer_status_syncP7k_timer(%struct.k_timer* noundef nonnull %1) #34, !dbg !3754
  call void @_ZN13cpp_semaphore4giveEv(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) @sem_coop) #34, !dbg !3755
  %6 = call noundef i32 @_ZN13cpp_semaphore4waitEv(%class.cpp_semaphore* noundef nonnull align 4 dereferenceable(20) @sem_main) #34, !dbg !3756
  br label %3, !dbg !3749, !llvm.loop !3757
}

; Function Attrs: mustprogress noinline norecurse nounwind optsize
define internal fastcc void @_ZL15k_thread_createP8k_threadP22z_thread_stack_elementjPFvPvS3_S3_ES3_S3_S3_ij11k_timeout_t() unnamed_addr #9 !dbg !3759 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata %struct.k_thread* @coop_thread, metadata !3767, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* getelementptr inbounds ([2064 x %struct.k_spinlock], [2064 x %struct.k_spinlock]* @coop_stack, i32 0, i32 0), metadata !3768, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 2000, metadata !3769, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* bitcast (void ()* @_Z17coop_thread_entryv to void (i8*, i8*, i8*)*), metadata !3770, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i8* null, metadata !3771, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i8* null, metadata !3772, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i8* null, metadata !3773, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 -9, metadata !3774, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 0, metadata !3775, metadata !DIExpression()), !dbg !3777
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !3778, !srcloc !3780
  %1 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @coop_thread, %struct.k_spinlock* noundef getelementptr inbounds ([2064 x %struct.k_spinlock], [2064 x %struct.k_spinlock]* @coop_stack, i32 0, i32 0), i32 noundef 2000, void (i8*, i8*, i8*)* noundef bitcast (void ()* @_Z17coop_thread_entryv to void (i8*, i8*, i8*)*), i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef -9, i32 noundef 0, [1 x i64] zeroinitializer) #35, !dbg !3781
  ret void, !dbg !3782
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3785, metadata !DIExpression()), !dbg !3786
  ret i32 0, !dbg !3787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #10 !dbg !3788 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3792, metadata !DIExpression()), !dbg !3793
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3794
  ret void, !dbg !3795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #11 !dbg !3796 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3799
  ret i8* %1, !dbg !3800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3801 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3813, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i8* %0, metadata !3812, metadata !DIExpression()), !dbg !3822
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #37, !dbg !3823
  ret void, !dbg !3825
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3830, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i8* %1, metadata !3831, metadata !DIExpression()), !dbg !3832
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3833
  %4 = tail call i32 %3(i32 noundef %0) #38, !dbg !3833
  ret i32 %4, !dbg !3834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3835 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3847, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3844, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.value(metadata i8* %1, metadata !3845, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.value(metadata i8* %2, metadata !3846, metadata !DIExpression()), !dbg !3848
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #38, !dbg !3849
  ret void, !dbg !3850
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3851 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3855, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 %1, metadata !3856, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 0, metadata !3857, metadata !DIExpression()), !dbg !3858
  %3 = icmp eq i32 %1, 0, !dbg !3859
  br i1 %3, label %13, label %4, !dbg !3862

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3857, metadata !DIExpression()), !dbg !3858
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3863
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3865
  %8 = load i8, i8* %7, align 1, !dbg !3865
  %9 = zext i8 %8 to i32, !dbg !3865
  %10 = tail call i32 %6(i32 noundef %9) #38, !dbg !3863
  %11 = add nuw i32 %5, 1, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %11, metadata !3857, metadata !DIExpression()), !dbg !3858
  %12 = icmp eq i32 %11, %1, !dbg !3859
  br i1 %12, label %13, label %4, !dbg !3862, !llvm.loop !3867

13:                                               ; preds = %4, %2
  ret void, !dbg !3869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3870 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3874, metadata !DIExpression()), !dbg !3876
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3877
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #33, !dbg !3877
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3875, metadata !DIExpression()), !dbg !3878
  call void @llvm.va_start(i8* nonnull %3), !dbg !3879
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3880
  %5 = load i32, i32* %4, align 4, !dbg !3880
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3880
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #37, !dbg !3880
  call void @llvm.va_end(i8* nonnull %3), !dbg !3881
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #33, !dbg !3882
  ret void, !dbg !3882
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #12

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #12

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3883 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3887, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i32 %1, metadata !3888, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i8* %2, metadata !3889, metadata !DIExpression()), !dbg !3892
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #33, !dbg !3893
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3890, metadata !DIExpression()), !dbg !3894
  call void @llvm.va_start(i8* nonnull %5), !dbg !3895
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3896
  %7 = load i32, i32* %6, align 4, !dbg !3896
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3896
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #37, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %9, metadata !3891, metadata !DIExpression()), !dbg !3892
  call void @llvm.va_end(i8* nonnull %5), !dbg !3897
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #33, !dbg !3898
  ret i32 %9, !dbg !3899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3900 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3907, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i8* %0, metadata !3904, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %1, metadata !3905, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i8* %2, metadata !3906, metadata !DIExpression()), !dbg !3914
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3915
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #33, !dbg !3915
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3908, metadata !DIExpression()), !dbg !3916
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3917
  store i8* %0, i8** %7, align 4, !dbg !3917
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3917
  store i32 %1, i32* %8, align 4, !dbg !3917
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3917
  store i32 0, i32* %9, align 4, !dbg !3917
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #37, !dbg !3918
  %10 = load i32, i32* %9, align 4, !dbg !3919
  %11 = load i32, i32* %8, align 4, !dbg !3921
  %12 = icmp slt i32 %10, %11, !dbg !3922
  br i1 %12, label %13, label %15, !dbg !3923

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3924
  store i8 0, i8* %14, align 1, !dbg !3926
  br label %15, !dbg !3927

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #33, !dbg !3928
  ret i32 %10, !dbg !3929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #13 !dbg !3930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3935, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3936, metadata !DIExpression()), !dbg !3937
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3938
  %4 = load i8*, i8** %3, align 4, !dbg !3938
  %5 = icmp eq i8* %4, null, !dbg !3940
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3941
  br i1 %5, label %12, label %8, !dbg !3942

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3943
  %10 = load i32, i32* %9, align 4, !dbg !3943
  %11 = icmp slt i32 %7, %10, !dbg !3944
  br i1 %11, label %15, label %12, !dbg !3945

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3946
  %14 = add nsw i32 %7, 1, !dbg !3948
  store i32 %14, i32* %13, align 4, !dbg !3948
  br label %25, !dbg !3949

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3950
  %17 = icmp eq i32 %7, %16, !dbg !3952
  br i1 %17, label %18, label %21, !dbg !3953

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3954
  store i32 %19, i32* %6, align 4, !dbg !3954
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3956
  store i8 0, i8* %20, align 1, !dbg !3957
  br label %25, !dbg !3958

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3959
  %23 = add nsw i32 %7, 1, !dbg !3961
  store i32 %23, i32* %6, align 4, !dbg !3961
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3962
  store i8 %22, i8* %24, align 1, !dbg !3963
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3964
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #14 !dbg !3965 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3970, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata i8* %1, metadata !3971, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata i8* %2, metadata !3972, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata i8* %3, metadata !3973, metadata !DIExpression()), !dbg !3974
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #38, !dbg !3975
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #39, !dbg !3976
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #37, !dbg !3977
  unreachable, !dbg !3978
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #15 !dbg !3979 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #39, !dbg !4085
  ret %struct.k_thread* %1, !dbg !4086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4091, metadata !DIExpression()), !dbg !4092
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !4093, !srcloc !4095
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #38, !dbg !4096
  ret void, !dbg !4097
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #15 !dbg !4098 {
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !4099, !srcloc !4101
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #38, !dbg !4102
  ret %struct.k_thread* %1, !dbg !4103
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #16 !dbg !4104 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4115, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata i8* %1, metadata !4116, metadata !DIExpression()), !dbg !4119
  %3 = icmp eq i8* %1, null, !dbg !4120
  br i1 %3, label %8, label %4, !dbg !4122

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4123
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4123
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4117, metadata !DIExpression()), !dbg !4119
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #37, !dbg !4124, !range !4125
  call void @llvm.dbg.value(metadata i32 %7, metadata !4118, metadata !DIExpression()), !dbg !4119
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #37, !dbg !4126
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #37, !dbg !4127
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !4129 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4133, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i8* %1, metadata !4134, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i8* %1, metadata !4135, metadata !DIExpression()), !dbg !4137
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #37, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4136, metadata !DIExpression()), !dbg !4137
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4139
  %5 = ptrtoint i8* %4 to i32, !dbg !4140
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4140
  %7 = sub i32 %5, %6, !dbg !4140
  %8 = lshr i32 %7, 3, !dbg !4141
  ret i32 %8, !dbg !4142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !4143 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4147, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 %1, metadata !4148, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i1 %2, metadata !4149, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4152
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #37, !dbg !4153
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4150, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4151, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4152
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4154
  %6 = bitcast i8* %5 to i16*, !dbg !4154
  %7 = load i16, i16* %6, align 2, !dbg !4154
  %8 = and i16 %7, -2, !dbg !4158
  %9 = zext i1 %2 to i16, !dbg !4158
  %10 = or i16 %8, %9, !dbg !4158
  store i16 %10, i16* %6, align 2, !dbg !4154
  ret void, !dbg !4159
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !4160 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4164, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32 %1, metadata !4165, metadata !DIExpression()), !dbg !4166
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4167
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #37, !dbg !4169
  br i1 %4, label %7, label %5, !dbg !4170

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #37, !dbg !4171
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4173
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #37, !dbg !4174
  br label %7, !dbg !4175

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4176, !range !4178
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #37, !dbg !4179
  br i1 %9, label %13, label %10, !dbg !4180

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #37, !dbg !4181
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4183, !range !4178
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #37, !dbg !4184
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4185
  call void @llvm.dbg.value(metadata i32 %12, metadata !4165, metadata !DIExpression()), !dbg !4166
  br label %13, !dbg !4186

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4165, metadata !DIExpression()), !dbg !4166
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #37, !dbg !4187
  ret void, !dbg !4188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4189 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4193, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.value(metadata i32 %1, metadata !4194, metadata !DIExpression()), !dbg !4195
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4196
  %4 = add i32 %3, %1, !dbg !4197
  ret i32 %4, !dbg !4198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4199 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4203, metadata !DIExpression()), !dbg !4205
  call void @llvm.dbg.value(metadata i32 %1, metadata !4204, metadata !DIExpression()), !dbg !4205
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #37, !dbg !4206
  %4 = and i32 %3, 1, !dbg !4207
  %5 = icmp ne i32 %4, 0, !dbg !4206
  ret i1 %5, !dbg !4208
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !4209 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4211, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %1, metadata !4212, metadata !DIExpression()), !dbg !4216
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4217, !range !4218
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #37, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %4, metadata !4213, metadata !DIExpression()), !dbg !4220
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #37, !dbg !4221
  ret void, !dbg !4222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !4223 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4227, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 %1, metadata !4228, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.value(metadata i32 %2, metadata !4229, metadata !DIExpression()), !dbg !4232
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4233
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #37, !dbg !4234
  %6 = add i32 %5, %4, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %6, metadata !4230, metadata !DIExpression()), !dbg !4232
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #37, !dbg !4236
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #37, !dbg !4237
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #37, !dbg !4238
  ret void, !dbg !4239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4240 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4242, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %1, metadata !4243, metadata !DIExpression()), !dbg !4244
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #37, !dbg !4245
  %4 = sub i32 %1, %3, !dbg !4246
  ret i32 %4, !dbg !4247
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !4248 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4250, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata i32 %1, metadata !4251, metadata !DIExpression()), !dbg !4255
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4256, !range !4218
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #37, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %4, metadata !4252, metadata !DIExpression()), !dbg !4258
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #37, !dbg !4259
  ret void, !dbg !4260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4261 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4265, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %1, metadata !4266, metadata !DIExpression()), !dbg !4267
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #37, !dbg !4268
  %4 = lshr i32 %3, 1, !dbg !4269
  ret i32 %4, !dbg !4270
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #15 !dbg !4271 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4275, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %1, metadata !4276, metadata !DIExpression()), !dbg !4278
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #37, !dbg !4279
  %4 = add i32 %1, 1, !dbg !4280
  %5 = sub i32 %4, %3, !dbg !4281
  call void @llvm.dbg.value(metadata i32 %5, metadata !4277, metadata !DIExpression()), !dbg !4278
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4282, !range !4283
  %7 = sub nsw i32 31, %6, !dbg !4284
  ret i32 %7, !dbg !4285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !4286 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4290, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.value(metadata i32 %1, metadata !4291, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.value(metadata i32 %2, metadata !4292, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4293, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4299
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4300
  %5 = load i32, i32* %4, align 4, !dbg !4300
  %6 = icmp eq i32 %5, 0, !dbg !4301
  br i1 %6, label %7, label %12, !dbg !4302

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4303
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4305
  %10 = load i32, i32* %9, align 4, !dbg !4306
  %11 = or i32 %10, %8, !dbg !4306
  store i32 %11, i32* %9, align 4, !dbg !4306
  store i32 %1, i32* %4, align 4, !dbg !4307
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #37, !dbg !4308
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #37, !dbg !4309
  br label %14, !dbg !4310

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4295, metadata !DIExpression()), !dbg !4311
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #37, !dbg !4312, !range !4313
  call void @llvm.dbg.value(metadata i32 %13, metadata !4298, metadata !DIExpression()), !dbg !4311
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #37, !dbg !4314
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #37, !dbg !4315
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #37, !dbg !4316
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #37, !dbg !4317
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !4319 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4321, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i32 %1, metadata !4322, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i32 %2, metadata !4323, metadata !DIExpression()), !dbg !4324
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #37, !dbg !4325
  ret void, !dbg !4326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !4327 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4329, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i32 %1, metadata !4330, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i32 %2, metadata !4331, metadata !DIExpression()), !dbg !4332
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #37, !dbg !4333
  ret void, !dbg !4334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #11 !dbg !4335 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4337, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %1, metadata !4338, metadata !DIExpression()), !dbg !4339
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #37, !dbg !4340
  ret i32 %3, !dbg !4341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !4342 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4346, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i32 %1, metadata !4347, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i32 %2, metadata !4348, metadata !DIExpression()), !dbg !4351
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #37, !dbg !4352
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4349, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4350, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4351
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4350, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4351
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4353
  call void @llvm.dbg.value(metadata i8* %5, metadata !4350, metadata !DIExpression()), !dbg !4351
  %6 = bitcast i8* %5 to i16*, !dbg !4354
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4357
  %8 = load i16, i16* %7, align 2, !dbg !4357
  %9 = zext i16 %8 to i32, !dbg !4357
  ret i32 %9, !dbg !4358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #17 !dbg !4359 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4363, metadata !DIExpression()), !dbg !4364
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4365
  ret %struct.chunk_unit_t* %2, !dbg !4366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #10 !dbg !4367 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4371, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %1, metadata !4372, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %2, metadata !4373, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %3, metadata !4374, metadata !DIExpression()), !dbg !4377
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #37, !dbg !4378
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4375, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4376, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4377
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4379
  call void @llvm.dbg.value(metadata i8* %6, metadata !4376, metadata !DIExpression()), !dbg !4377
  %7 = trunc i32 %3 to i16, !dbg !4380
  %8 = bitcast i8* %6 to i16*, !dbg !4383
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4384
  store i16 %7, i16* %9, align 2, !dbg !4385
  ret void, !dbg !4386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #17 !dbg !4387 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4391, metadata !DIExpression()), !dbg !4392
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #37, !dbg !4393
  ret i32 %2, !dbg !4394
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #17 !dbg !4395 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4399, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.value(metadata i32 %1, metadata !4400, metadata !DIExpression()), !dbg !4401
  %3 = add i32 %1, 4, !dbg !4402
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #37, !dbg !4403
  ret i32 %4, !dbg !4404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #17 !dbg !4405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4409, metadata !DIExpression()), !dbg !4410
  %2 = add i32 %0, 7, !dbg !4411
  %3 = lshr i32 %2, 3, !dbg !4412
  ret i32 %3, !dbg !4413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !4414 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4418, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %1, metadata !4419, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %2, metadata !4420, metadata !DIExpression()), !dbg !4421
  %4 = shl i32 %2, 1, !dbg !4422
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #37, !dbg !4423
  ret void, !dbg !4424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !4425 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4427, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i32 %1, metadata !4428, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i32 %2, metadata !4429, metadata !DIExpression()), !dbg !4430
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #37, !dbg !4431
  ret void, !dbg !4432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !4433 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4435, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i32 %1, metadata !4436, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i32 %2, metadata !4437, metadata !DIExpression()), !dbg !4443
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4444
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4438, metadata !DIExpression()), !dbg !4443
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4445
  %6 = icmp eq i32 %5, %1, !dbg !4446
  br i1 %6, label %7, label %14, !dbg !4447

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4448
  %9 = xor i32 %8, -1, !dbg !4450
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4451
  %11 = load i32, i32* %10, align 4, !dbg !4452
  %12 = and i32 %11, %9, !dbg !4452
  store i32 %12, i32* %10, align 4, !dbg !4452
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4453
  store i32 0, i32* %13, align 4, !dbg !4454
  br label %17, !dbg !4455

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %15, metadata !4439, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata i32 %5, metadata !4442, metadata !DIExpression()), !dbg !4457
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4458
  store i32 %5, i32* %16, align 4, !dbg !4459
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #37, !dbg !4460
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #37, !dbg !4461
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #11 !dbg !4463 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4465, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i32 %1, metadata !4466, metadata !DIExpression()), !dbg !4467
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #37, !dbg !4468
  ret i32 %3, !dbg !4469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #11 !dbg !4470 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4474, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.value(metadata i8* %1, metadata !4475, metadata !DIExpression()), !dbg !4481
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4482
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4482
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4476, metadata !DIExpression()), !dbg !4481
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #37, !dbg !4483
  call void @llvm.dbg.value(metadata i32 %5, metadata !4477, metadata !DIExpression()), !dbg !4481
  %6 = ptrtoint i8* %1 to i32, !dbg !4484
  call void @llvm.dbg.value(metadata i32 %6, metadata !4478, metadata !DIExpression()), !dbg !4481
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #37, !dbg !4485
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4485
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4486
  call void @llvm.dbg.value(metadata i32 %9, metadata !4479, metadata !DIExpression()), !dbg !4481
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #37, !dbg !4487
  %11 = shl i32 %10, 3, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %11, metadata !4480, metadata !DIExpression()), !dbg !4481
  %12 = sub i32 %9, %6, !dbg !4489
  %13 = add i32 %12, %11, !dbg !4490
  ret i32 %13, !dbg !4491
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !4492 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4496, metadata !DIExpression()), !dbg !4502
  call void @llvm.dbg.value(metadata i32 %1, metadata !4497, metadata !DIExpression()), !dbg !4502
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4503
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4503
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4498, metadata !DIExpression()), !dbg !4502
  %5 = icmp eq i32 %1, 0, !dbg !4504
  br i1 %5, label %19, label %6, !dbg !4506

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #37, !dbg !4507
  br i1 %7, label %19, label %8, !dbg !4508

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #37, !dbg !4509, !range !4125
  call void @llvm.dbg.value(metadata i32 %9, metadata !4500, metadata !DIExpression()), !dbg !4502
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #37, !dbg !4510
  call void @llvm.dbg.value(metadata i32 %10, metadata !4501, metadata !DIExpression()), !dbg !4502
  %11 = icmp eq i32 %10, 0, !dbg !4511
  br i1 %11, label %19, label %12, !dbg !4513

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #37, !dbg !4514
  %14 = icmp ugt i32 %13, %9, !dbg !4516
  br i1 %14, label %15, label %17, !dbg !4517

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4518
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #37, !dbg !4520
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #37, !dbg !4521
  br label %17, !dbg !4522

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #37, !dbg !4523
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #37, !dbg !4524
  call void @llvm.dbg.value(metadata i8* %18, metadata !4499, metadata !DIExpression()), !dbg !4502
  br label %19, !dbg !4525

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4502
  ret i8* %20, !dbg !4526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #11 !dbg !4527 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4531, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.value(metadata i32 %1, metadata !4532, metadata !DIExpression()), !dbg !4533
  %3 = lshr i32 %1, 3, !dbg !4534
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4535
  %5 = load i32, i32* %4, align 4, !dbg !4535
  %6 = icmp uge i32 %3, %5, !dbg !4536
  ret i1 %6, !dbg !4537
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !4538 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4542, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32 %1, metadata !4543, metadata !DIExpression()), !dbg !4557
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %3, metadata !4544, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4545, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4557
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4559
  %5 = load i32, i32* %4, align 4, !dbg !4559
  %6 = icmp eq i32 %5, 0, !dbg !4560
  br i1 %6, label %19, label %7, !dbg !4561

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4562
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4563
  call void @llvm.dbg.value(metadata i32 %9, metadata !4549, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %8, metadata !4550, metadata !DIExpression()), !dbg !4564
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #37, !dbg !4565
  %11 = icmp ult i32 %10, %1, !dbg !4567
  br i1 %11, label %13, label %12, !dbg !4568

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #37, !dbg !4569
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #37, !dbg !4571
  store i32 %14, i32* %4, align 4, !dbg !4572
  %15 = add nsw i32 %9, -1, !dbg !4573
  call void @llvm.dbg.value(metadata i32 %15, metadata !4549, metadata !DIExpression()), !dbg !4563
  %16 = icmp eq i32 %15, 0, !dbg !4573
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4574
  br i1 %18, label %19, label %7, !dbg !4574, !llvm.loop !4575

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4578
  %21 = load i32, i32* %20, align 4, !dbg !4578
  %22 = add nsw i32 %3, 1, !dbg !4579
  %23 = shl nsw i32 -1, %22, !dbg !4579
  %24 = and i32 %21, %23, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %24, metadata !4552, metadata !DIExpression()), !dbg !4557
  %25 = icmp eq i32 %24, 0, !dbg !4581
  br i1 %25, label %30, label %26, !dbg !4582

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4583, !range !4283
  call void @llvm.dbg.value(metadata i32 %27, metadata !4553, metadata !DIExpression()), !dbg !4584
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4585
  %29 = load i32, i32* %28, align 4, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %29, metadata !4556, metadata !DIExpression()), !dbg !4584
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #37, !dbg !4586
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4557
  ret i32 %31, !dbg !4587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !4588 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4590, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %1, metadata !4591, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %2, metadata !4592, metadata !DIExpression()), !dbg !4596
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #37, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %4, metadata !4593, metadata !DIExpression()), !dbg !4596
  %5 = sub i32 %2, %1, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %5, metadata !4594, metadata !DIExpression()), !dbg !4596
  %6 = sub i32 %4, %5, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %6, metadata !4595, metadata !DIExpression()), !dbg !4596
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #37, !dbg !4600
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #37, !dbg !4601
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #37, !dbg !4602
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #37, !dbg !4603
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #37, !dbg !4604
  ret void, !dbg !4605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #17 !dbg !4606 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4610, metadata !DIExpression()), !dbg !4614
  call void @llvm.dbg.value(metadata i32 %1, metadata !4611, metadata !DIExpression()), !dbg !4614
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #37, !dbg !4615
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4612, metadata !DIExpression()), !dbg !4614
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %4, metadata !4613, metadata !DIExpression()), !dbg !4614
  ret i8* %4, !dbg !4617
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #4

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !4618 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4622, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i32 %1, metadata !4623, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i32 %2, metadata !4624, metadata !DIExpression()), !dbg !4634
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4635
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4635
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4625, metadata !DIExpression()), !dbg !4634
  %6 = sub i32 0, %1, !dbg !4636
  %7 = and i32 %6, %1, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %7, metadata !4627, metadata !DIExpression()), !dbg !4634
  %8 = icmp eq i32 %7, %1, !dbg !4638
  br i1 %8, label %13, label %9, !dbg !4640

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4641
  call void @llvm.dbg.value(metadata i32 %10, metadata !4623, metadata !DIExpression()), !dbg !4634
  %11 = icmp ult i32 %7, 4, !dbg !4643
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4643
  br label %17, !dbg !4643

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4644
  br i1 %14, label %15, label %17, !dbg !4647

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #37, !dbg !4648
  br label %57, !dbg !4650

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4634
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4651
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4623, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i32 %19, metadata !4626, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i32 %18, metadata !4627, metadata !DIExpression()), !dbg !4634
  %21 = icmp eq i32 %2, 0, !dbg !4652
  br i1 %21, label %57, label %22, !dbg !4654

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #37, !dbg !4655
  br i1 %23, label %57, label %24, !dbg !4656

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4657
  %26 = add i32 %25, %20, !dbg !4658
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #37, !dbg !4659, !range !4125
  call void @llvm.dbg.value(metadata i32 %27, metadata !4628, metadata !DIExpression()), !dbg !4634
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #37, !dbg !4660
  call void @llvm.dbg.value(metadata i32 %28, metadata !4629, metadata !DIExpression()), !dbg !4634
  %29 = icmp eq i32 %28, 0, !dbg !4661
  br i1 %29, label %57, label %30, !dbg !4663

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #37, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %31, metadata !4630, metadata !DIExpression()), !dbg !4634
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4665
  %33 = ptrtoint i8* %32 to i32, !dbg !4665
  %34 = add i32 %20, -1, !dbg !4665
  %35 = add i32 %34, %33, !dbg !4665
  %36 = sub i32 0, %20, !dbg !4665
  %37 = and i32 %35, %36, !dbg !4665
  %38 = inttoptr i32 %37 to i8*, !dbg !4666
  %39 = sub i32 0, %18, !dbg !4667
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %40, metadata !4630, metadata !DIExpression()), !dbg !4634
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4668
  %42 = ptrtoint i8* %41 to i32, !dbg !4668
  %43 = add i32 %42, 7, !dbg !4668
  %44 = and i32 %43, -8, !dbg !4668
  call void @llvm.dbg.value(metadata i32 %44, metadata !4631, metadata !DIExpression()), !dbg !4634
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #37, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %45, metadata !4632, metadata !DIExpression()), !dbg !4634
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #37, !dbg !4670
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4671
  %48 = sub i32 %44, %47, !dbg !4671
  %49 = ashr exact i32 %48, 3, !dbg !4671
  call void @llvm.dbg.value(metadata i32 %49, metadata !4633, metadata !DIExpression()), !dbg !4634
  %50 = icmp ugt i32 %45, %28, !dbg !4672
  br i1 %50, label %51, label %52, !dbg !4674

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #37, !dbg !4675
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #37, !dbg !4677
  br label %52, !dbg !4678

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #37, !dbg !4679
  %54 = icmp ugt i32 %53, %49, !dbg !4681
  br i1 %54, label %55, label %56, !dbg !4682

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #37, !dbg !4683
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #37, !dbg !4685
  br label %56, !dbg !4686

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #37, !dbg !4687
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4634
  ret i8* %58, !dbg !4688
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4689 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4693, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i8* %1, metadata !4694, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i32 %2, metadata !4695, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i32 %3, metadata !4696, metadata !DIExpression()), !dbg !4712
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4713
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4713
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4697, metadata !DIExpression()), !dbg !4712
  %7 = icmp eq i8* %1, null, !dbg !4714
  br i1 %7, label %8, label %10, !dbg !4716

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #37, !dbg !4717
  br label %59, !dbg !4719

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4720
  br i1 %11, label %12, label %13, !dbg !4722

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #37, !dbg !4723
  br label %59, !dbg !4725

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #37, !dbg !4726
  br i1 %14, label %59, label %15, !dbg !4728

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #37, !dbg !4729, !range !4125
  call void @llvm.dbg.value(metadata i32 %16, metadata !4698, metadata !DIExpression()), !dbg !4712
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #37, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %17, metadata !4699, metadata !DIExpression()), !dbg !4712
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #37, !dbg !4731
  %19 = ptrtoint i8* %1 to i32, !dbg !4732
  %20 = ptrtoint i8* %18 to i32, !dbg !4732
  %21 = sub i32 %19, %20, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %21, metadata !4700, metadata !DIExpression()), !dbg !4712
  %22 = add i32 %21, %3, !dbg !4733
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #37, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %23, metadata !4701, metadata !DIExpression()), !dbg !4712
  %24 = icmp eq i32 %2, 0, !dbg !4735
  br i1 %24, label %29, label %25, !dbg !4736

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4737
  %27 = and i32 %26, %19, !dbg !4738
  %28 = icmp eq i32 %27, 0, !dbg !4738
  br i1 %28, label %29, label %49, !dbg !4739

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #37, !dbg !4740
  %31 = icmp eq i32 %23, %30, !dbg !4741
  br i1 %31, label %59, label %32, !dbg !4742

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4743
  br i1 %33, label %34, label %36, !dbg !4744

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4745
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #37, !dbg !4747
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #37, !dbg !4748
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #37, !dbg !4749
  br label %59, !dbg !4750

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #37, !dbg !4751
  br i1 %37, label %49, label %38, !dbg !4752

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #37, !dbg !4753
  %40 = add i32 %39, %30, !dbg !4754
  %41 = icmp ult i32 %40, %23, !dbg !4755
  br i1 %41, label %49, label %42, !dbg !4756

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4757
  call void @llvm.dbg.value(metadata i32 %43, metadata !4702, metadata !DIExpression()), !dbg !4758
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #37, !dbg !4759
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #37, !dbg !4760
  %45 = icmp ult i32 %43, %44, !dbg !4762
  br i1 %45, label %46, label %48, !dbg !4763

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4764
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #37, !dbg !4766
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #37, !dbg !4767
  br label %48, !dbg !4768

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #37, !dbg !4769
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #37, !dbg !4770
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #37, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %50, metadata !4708, metadata !DIExpression()), !dbg !4712
  %51 = icmp eq i8* %50, null, !dbg !4772
  br i1 %51, label %59, label %52, !dbg !4773

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #37, !dbg !4774, !range !4218
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #37, !dbg !4775
  %55 = sub i32 %54, %21, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %55, metadata !4709, metadata !DIExpression()), !dbg !4777
  %56 = icmp ult i32 %55, %3, !dbg !4778
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4778
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #38, !dbg !4779
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #37, !dbg !4780
  br label %59, !dbg !4781

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4712
  ret i8* %60, !dbg !4782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #17 !dbg !4783 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4787, metadata !DIExpression()), !dbg !4789
  call void @llvm.dbg.value(metadata i32 %1, metadata !4788, metadata !DIExpression()), !dbg !4789
  %3 = shl i32 %1, 3, !dbg !4790
  %4 = add i32 %3, -4, !dbg !4791
  ret i32 %4, !dbg !4792
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !4793 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4797, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i8* %1, metadata !4798, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i32 %2, metadata !4799, metadata !DIExpression()), !dbg !4808
  %4 = add i32 %2, -4, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %4, metadata !4799, metadata !DIExpression()), !dbg !4808
  %5 = ptrtoint i8* %1 to i32, !dbg !4810
  %6 = add i32 %5, 7, !dbg !4810
  %7 = and i32 %6, -8, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %7, metadata !4800, metadata !DIExpression()), !dbg !4808
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4811
  %9 = ptrtoint i8* %8 to i32, !dbg !4811
  %10 = and i32 %9, -8, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %10, metadata !4801, metadata !DIExpression()), !dbg !4808
  %11 = sub i32 %10, %7, !dbg !4812
  %12 = lshr exact i32 %11, 3, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %12, metadata !4802, metadata !DIExpression()), !dbg !4808
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4814
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4803, metadata !DIExpression()), !dbg !4808
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4815
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4816
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4817
  store i32 %12, i32* %15, align 8, !dbg !4818
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4819
  store i32 0, i32* %16, align 4, !dbg !4820
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #37, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %17, metadata !4804, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4808
  %18 = shl i32 %17, 2, !dbg !4822
  %19 = add i32 %18, 20, !dbg !4823
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #37, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %20, metadata !4805, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i32 0, metadata !4806, metadata !DIExpression()), !dbg !4825
  %21 = icmp slt i32 %17, 0, !dbg !4826
  br i1 %21, label %22, label %24, !dbg !4828

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #37, !dbg !4829
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #37, !dbg !4830
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #37, !dbg !4831
  %23 = sub i32 %12, %20, !dbg !4832
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #37, !dbg !4833
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #37, !dbg !4834
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #37, !dbg !4835
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #37, !dbg !4836
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #37, !dbg !4837
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #37, !dbg !4838
  ret void, !dbg !4839

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4806, metadata !DIExpression()), !dbg !4825
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4840
  store i32 0, i32* %26, align 4, !dbg !4842
  %27 = add nuw i32 %25, 1, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %27, metadata !4806, metadata !DIExpression()), !dbg !4825
  %28 = icmp eq i32 %25, %17, !dbg !4826
  br i1 %28, label %22, label %24, !dbg !4828, !llvm.loop !4844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4846 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4859, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4856, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %1, metadata !4857, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %2, metadata !4858, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %4, metadata !4860, metadata !DIExpression()), !dbg !4987
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4988
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #33, !dbg !4988
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4861, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i32 0, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i1 undef, metadata !4867, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4987
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4990

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4990

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4991
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4859, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %30, metadata !4858, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %29, metadata !4865, metadata !DIExpression()), !dbg !4987
  %31 = load i8, i8* %30, align 1, !dbg !4992
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4990

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4992
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %34, metadata !4858, metadata !DIExpression()), !dbg !4987
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #38, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %35, metadata !4869, metadata !DIExpression()), !dbg !4994
  %36 = icmp slt i32 %35, 0, !dbg !4995
  %37 = add i32 %29, 1, !dbg !4993
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %36, label %365, label %28, !llvm.loop !4997

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #33, !dbg !4999
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4874, metadata !DIExpression()), !dbg !5000
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4919, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4922, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %30, metadata !4925, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 -1, metadata !4926, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 -1, metadata !4927, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* null, metadata !4928, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %14, metadata !4929, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 0, metadata !4930, metadata !DIExpression()), !dbg !5001
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #37, !dbg !5002
  call void @llvm.dbg.value(metadata i8* %39, metadata !4858, metadata !DIExpression()), !dbg !4987
  %40 = load i24, i24* %15, align 8, !dbg !5003
  %41 = and i24 %40, 256, !dbg !5003
  %42 = icmp eq i24 %41, 0, !dbg !5003
  br i1 %42, label %51, label %43, !dbg !5005

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5006
  call void @llvm.dbg.value(metadata i8* %44, metadata !4859, metadata !DIExpression()), !dbg !4987
  %45 = bitcast i8* %27 to i32*, !dbg !5006
  %46 = load i32, i32* %45, align 4, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %46, metadata !4926, metadata !DIExpression()), !dbg !5001
  %47 = icmp slt i32 %46, 0, !dbg !5008
  br i1 %47, label %48, label %56, !dbg !5010

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5011
  store i24 %49, i24* %15, align 8, !dbg !5011
  %50 = sub nsw i32 0, %46, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %50, metadata !4926, metadata !DIExpression()), !dbg !5001
  br label %56, !dbg !5014

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5015
  %53 = icmp eq i24 %52, 0, !dbg !5015
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5017
  br label %56, !dbg !5017

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5018
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5001
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4859, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %58, metadata !4926, metadata !DIExpression()), !dbg !5001
  %60 = and i24 %57, 1024, !dbg !5018
  %61 = icmp eq i24 %60, 0, !dbg !5018
  br i1 %61, label %69, label %62, !dbg !5019

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5020
  call void @llvm.dbg.value(metadata i8* %63, metadata !4859, metadata !DIExpression()), !dbg !4987
  %64 = bitcast i8* %59 to i32*, !dbg !5020
  %65 = load i32, i32* %64, align 4, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %65, metadata !4931, metadata !DIExpression()), !dbg !5021
  %66 = icmp slt i32 %65, 0, !dbg !5022
  br i1 %66, label %67, label %74, !dbg !5024

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5025
  store i24 %68, i24* %15, align 8, !dbg !5025
  br label %74, !dbg !5027

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5028
  %71 = icmp eq i24 %70, 0, !dbg !5028
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5030
  br label %74, !dbg !5030

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5031
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5001
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5001
  call void @llvm.dbg.value(metadata i8* %77, metadata !4859, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %76, metadata !4927, metadata !DIExpression()), !dbg !5001
  store i32 0, i32* %16, align 4, !dbg !5032
  store i32 0, i32* %17, align 8, !dbg !5033
  %78 = lshr i24 %75, 16, !dbg !5031
  call void @llvm.dbg.value(metadata i24 %78, metadata !4934, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5001
  %79 = lshr i24 %75, 11, !dbg !5034
  %80 = and i24 %79, 15, !dbg !5034
  %81 = zext i24 %80 to i32, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %81, metadata !4935, metadata !DIExpression()), !dbg !5001
  %82 = trunc i24 %78 to i3, !dbg !5035
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5035

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5036

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %85, metadata !4859, metadata !DIExpression()), !dbg !4987
  %86 = bitcast i8* %77 to i32*, !dbg !5039
  %87 = load i32, i32* %86, align 4, !dbg !5039
  %88 = sext i32 %87 to i64, !dbg !5039
  store i64 %88, i64* %20, align 8, !dbg !5041
  br label %115, !dbg !5042

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %90, metadata !4859, metadata !DIExpression()), !dbg !4987
  %91 = bitcast i8* %77 to i32*, !dbg !5043
  %92 = load i32, i32* %91, align 4, !dbg !5043
  %93 = sext i32 %92 to i64, !dbg !5043
  store i64 %93, i64* %20, align 8, !dbg !5046
  br label %115, !dbg !5047

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5048
  %96 = add i32 %95, 7, !dbg !5048
  %97 = and i32 %96, -8, !dbg !5048
  %98 = inttoptr i32 %97 to i8*, !dbg !5048
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5048
  call void @llvm.dbg.value(metadata i8* %99, metadata !4859, metadata !DIExpression()), !dbg !4987
  %100 = inttoptr i32 %97 to i64*, !dbg !5048
  %101 = load i64, i64* %100, align 8, !dbg !5048
  store i64 %101, i64* %20, align 8, !dbg !5049
  br label %115, !dbg !5050

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5051
  %104 = add i32 %103, 7, !dbg !5051
  %105 = and i32 %104, -8, !dbg !5051
  %106 = inttoptr i32 %105 to i8*, !dbg !5051
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5051
  call void @llvm.dbg.value(metadata i8* %107, metadata !4859, metadata !DIExpression()), !dbg !4987
  %108 = inttoptr i32 %105 to i64*, !dbg !5051
  %109 = load i64, i64* %108, align 8, !dbg !5051
  store i64 %109, i64* %20, align 8, !dbg !5052
  br label %115, !dbg !5053

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %111, metadata !4859, metadata !DIExpression()), !dbg !4987
  %112 = bitcast i8* %77 to i32*, !dbg !5054
  %113 = load i32, i32* %112, align 4, !dbg !5054
  %114 = sext i32 %113 to i64, !dbg !5055
  store i64 %114, i64* %20, align 8, !dbg !5056
  br label %115, !dbg !5057

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5058
  call void @llvm.dbg.value(metadata i8* %117, metadata !4859, metadata !DIExpression()), !dbg !4987
  %118 = trunc i24 %79 to i4, !dbg !5059
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5059

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5060
  %121 = ashr exact i64 %120, 56, !dbg !5060
  store i64 %121, i64* %20, align 8, !dbg !5063
  br label %177, !dbg !5064

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5065
  %124 = ashr exact i64 %123, 48, !dbg !5065
  store i64 %124, i64* %20, align 8, !dbg !5068
  br label %177, !dbg !5069

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5070

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5073
  call void @llvm.dbg.value(metadata i8* %127, metadata !4859, metadata !DIExpression()), !dbg !4987
  %128 = bitcast i8* %77 to i32*, !dbg !5073
  %129 = load i32, i32* %128, align 4, !dbg !5073
  %130 = zext i32 %129 to i64, !dbg !5073
  store i64 %130, i64* %20, align 8, !dbg !5075
  br label %157, !dbg !5076

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5077
  call void @llvm.dbg.value(metadata i8* %132, metadata !4859, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %132, metadata !4859, metadata !DIExpression()), !dbg !4987
  %133 = bitcast i8* %77 to i32*, !dbg !5077
  %134 = load i32, i32* %133, align 4, !dbg !5077
  %135 = zext i32 %134 to i64, !dbg !5077
  store i64 %135, i64* %20, align 8, !dbg !5077
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5079
  %138 = add i32 %137, 7, !dbg !5079
  %139 = and i32 %138, -8, !dbg !5079
  %140 = inttoptr i32 %139 to i8*, !dbg !5079
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5079
  call void @llvm.dbg.value(metadata i8* %141, metadata !4859, metadata !DIExpression()), !dbg !4987
  %142 = inttoptr i32 %139 to i64*, !dbg !5079
  %143 = load i64, i64* %142, align 8, !dbg !5079
  store i64 %143, i64* %20, align 8, !dbg !5080
  br label %157, !dbg !5081

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5082
  %146 = add i32 %145, 7, !dbg !5082
  %147 = and i32 %146, -8, !dbg !5082
  %148 = inttoptr i32 %147 to i8*, !dbg !5082
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5082
  call void @llvm.dbg.value(metadata i8* %149, metadata !4859, metadata !DIExpression()), !dbg !4987
  %150 = inttoptr i32 %147 to i64*, !dbg !5082
  %151 = load i64, i64* %150, align 8, !dbg !5082
  store i64 %151, i64* %20, align 8, !dbg !5083
  br label %157, !dbg !5084

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5085
  call void @llvm.dbg.value(metadata i8* %153, metadata !4859, metadata !DIExpression()), !dbg !4987
  %154 = bitcast i8* %77 to i32*, !dbg !5085
  %155 = load i32, i32* %154, align 4, !dbg !5085
  %156 = zext i32 %155 to i64, !dbg !5086
  store i64 %156, i64* %20, align 8, !dbg !5087
  br label %157, !dbg !5088

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5089
  call void @llvm.dbg.value(metadata i8* %159, metadata !4859, metadata !DIExpression()), !dbg !4987
  %160 = trunc i24 %79 to i4, !dbg !5090
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5090

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5091
  store i64 %162, i64* %20, align 8, !dbg !5094
  br label %177, !dbg !5095

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5096
  store i64 %164, i64* %20, align 8, !dbg !5099
  br label %177, !dbg !5100

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5101
  %167 = add i32 %166, 7, !dbg !5101
  %168 = and i32 %167, -8, !dbg !5101
  %169 = inttoptr i32 %168 to i8*, !dbg !5101
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5101
  call void @llvm.dbg.value(metadata i8* %170, metadata !4859, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %170, metadata !4859, metadata !DIExpression()), !dbg !4987
  %171 = inttoptr i32 %168 to double*, !dbg !5101
  %172 = load double, double* %171, align 8, !dbg !5101
  store double %172, double* %19, align 8, !dbg !5101
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %174, metadata !4859, metadata !DIExpression()), !dbg !4987
  %175 = bitcast i8* %77 to i8**, !dbg !5105
  %176 = load i8*, i8** %175, align 4, !dbg !5105
  store i8* %176, i8** %18, align 8, !dbg !5108
  br label %177, !dbg !5109

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5001
  call void @llvm.dbg.value(metadata i8* %178, metadata !4859, metadata !DIExpression()), !dbg !4987
  %179 = and i24 %75, 3, !dbg !5110
  %180 = icmp eq i24 %179, 0, !dbg !5110
  br i1 %180, label %185, label %181, !dbg !5110

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #37, !dbg !5111
  call void @llvm.dbg.value(metadata i32 %182, metadata !4936, metadata !DIExpression()), !dbg !5112
  %183 = icmp slt i32 %182, 0, !dbg !5113
  %184 = add i32 %182, %29, !dbg !5111
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5115
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5116

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #38, !dbg !5117
  call void @llvm.dbg.value(metadata i32 %188, metadata !4940, metadata !DIExpression()), !dbg !5118
  %189 = icmp slt i32 %188, 0, !dbg !5119
  %190 = add i32 %29, 1, !dbg !5117
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5121
  call void @llvm.dbg.value(metadata i8* %192, metadata !4928, metadata !DIExpression()), !dbg !5001
  %193 = icmp sgt i32 %76, -1, !dbg !5122
  br i1 %193, label %194, label %196, !dbg !5124

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #38, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %195, metadata !4943, metadata !DIExpression()), !dbg !5127
  br label %241, !dbg !5128

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #38, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %197, metadata !4943, metadata !DIExpression()), !dbg !5127
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4928, metadata !DIExpression()), !dbg !5001
  %199 = load i64, i64* %20, align 8, !dbg !5131
  %200 = trunc i64 %199 to i8, !dbg !5132
  store i8 %200, i8* %10, align 1, !dbg !5133
  call void @llvm.dbg.value(metadata i8* %23, metadata !4929, metadata !DIExpression()), !dbg !5001
  br label %245, !dbg !5134

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5135
  %203 = icmp eq i24 %202, 0, !dbg !5135
  %204 = trunc i24 %75 to i8, !dbg !5137
  %205 = shl i8 %204, 1, !dbg !5137
  %206 = and i8 %205, 32, !dbg !5137
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5137
  call void @llvm.dbg.value(metadata i8 %207, metadata !4930, metadata !DIExpression()), !dbg !5001
  %208 = load i64, i64* %20, align 8, !dbg !5138
  call void @llvm.dbg.value(metadata i64 %208, metadata !4866, metadata !DIExpression()), !dbg !4987
  %209 = icmp slt i64 %208, 0, !dbg !5139
  br i1 %209, label %210, label %212, !dbg !5141

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4930, metadata !DIExpression()), !dbg !5001
  %211 = sub nsw i64 0, %208, !dbg !5142
  store i64 %211, i64* %20, align 8, !dbg !5144
  br label %212, !dbg !5145

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5001
  call void @llvm.dbg.value(metadata i8 %213, metadata !4930, metadata !DIExpression()), !dbg !5001
  %214 = load i64, i64* %20, align 8, !dbg !5146
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #37, !dbg !5147
  call void @llvm.dbg.value(metadata i8* %215, metadata !4928, metadata !DIExpression()), !dbg !5001
  br label %216, !dbg !5148

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5149
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5150
  call void @llvm.dbg.value(metadata i8* %218, metadata !4928, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 %217, metadata !4930, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.label(metadata !4986), !dbg !5151
  %219 = icmp sgt i32 %76, -1, !dbg !5152
  br i1 %219, label %222, label %220, !dbg !5153

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5154
  br label %245, !dbg !5153

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5156
  %224 = sub i32 %22, %223, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %224, metadata !4945, metadata !DIExpression()), !dbg !5157
  %225 = load i24, i24* %15, align 8, !dbg !5158
  %226 = and i24 %225, -65, !dbg !5158
  store i24 %226, i24* %15, align 8, !dbg !5158
  %227 = icmp ugt i32 %76, %224, !dbg !5159
  br i1 %227, label %228, label %245, !dbg !5161

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5162
  store i32 %229, i32* %16, align 4, !dbg !5164
  br label %245, !dbg !5165

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5166
  %232 = icmp eq i8* %231, null, !dbg !5168
  br i1 %232, label %245, label %233, !dbg !5169

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5170
  %235 = zext i32 %234 to i64, !dbg !5170
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #37, !dbg !5172
  call void @llvm.dbg.value(metadata i8* %236, metadata !4928, metadata !DIExpression()), !dbg !5001
  %237 = load i24, i24* %15, align 8, !dbg !5173
  %238 = or i24 %237, 1048576, !dbg !5173
  store i24 %238, i24* %15, align 8, !dbg !5173
  store i8 120, i8* %21, align 1, !dbg !5174
  br label %216, !dbg !5175

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5176
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #37, !dbg !5179
  br label %363, !dbg !5180

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5181
  call void @llvm.dbg.value(metadata i32 %242, metadata !4943, metadata !DIExpression()), !dbg !5127
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5182
  call void @llvm.dbg.value(metadata i32 -1, metadata !4927, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %29, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8* %192, metadata !4928, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %243, metadata !4929, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 0, metadata !4930, metadata !DIExpression()), !dbg !5001
  %244 = icmp eq i8* %192, null, !dbg !5183
  br i1 %244, label %363, label %245, !dbg !5185, !llvm.loop !4997

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5154
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5001
  call void @llvm.dbg.value(metadata i32 0, metadata !4949, metadata !DIExpression()), !dbg !5001
  %250 = zext i8 %249 to i32, !dbg !5186
  %251 = icmp eq i8 %249, 0, !dbg !5188
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  call void @llvm.dbg.value(metadata i32 undef, metadata !4948, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  call void @llvm.dbg.value(metadata i32 undef, metadata !4948, metadata !DIExpression()), !dbg !5001
  %252 = icmp sgt i32 %58, 0, !dbg !5189
  br i1 %252, label %253, label %302, !dbg !5190

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5154
  %255 = icmp eq i24 %254, 0, !dbg !5154
  %256 = ptrtoint i8* %248 to i32, !dbg !5191
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  %257 = ptrtoint i8* %247 to i32, !dbg !5191
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  %258 = xor i1 %251, true, !dbg !5192
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  %259 = sext i1 %258 to i32, !dbg !5192
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  %260 = lshr i24 %246, 19, !dbg !5193
  %261 = and i24 %260, 1, !dbg !5193
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5193
  %263 = zext i24 %262 to i32, !dbg !5193
  %264 = add i32 %257, %259, !dbg !5193
  %265 = add i32 %256, %263, !dbg !5193
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  %266 = and i24 %246, 4194304, !dbg !5194
  %267 = icmp eq i24 %266, 0, !dbg !5194
  %268 = load i32, i32* %16, align 4, !dbg !5196
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5001
  call void @llvm.dbg.value(metadata i32 undef, metadata !4948, metadata !DIExpression()), !dbg !5001
  %269 = load i32, i32* %17, align 8, !dbg !5197
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5197
  call void @llvm.dbg.value(metadata i32 undef, metadata !4948, metadata !DIExpression()), !dbg !5001
  %271 = add i32 %264, %58, !dbg !5197
  %272 = add i32 %265, %268, !dbg !5197
  %273 = add i32 %272, %270, !dbg !5198
  %274 = sub i32 %271, %273, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %274, metadata !4926, metadata !DIExpression()), !dbg !5001
  %275 = and i24 %246, 4, !dbg !5199
  %276 = icmp eq i24 %275, 0, !dbg !5199
  br i1 %276, label %277, label %302, !dbg !5200

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4950, metadata !DIExpression()), !dbg !5201
  %278 = and i24 %246, 64, !dbg !5202
  %279 = icmp eq i24 %278, 0, !dbg !5202
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5203
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5203
  %282 = select i1 %279, i32 32, i32 48, !dbg !5203
  br i1 %280, label %287, label %283, !dbg !5203

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #38, !dbg !5204
  call void @llvm.dbg.value(metadata i32 %284, metadata !4955, metadata !DIExpression()), !dbg !5205
  %285 = icmp slt i32 %284, 0, !dbg !5206
  %286 = add i32 %29, 1, !dbg !5204
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5001
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %290, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i8 undef, metadata !4950, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8 %288, metadata !4930, metadata !DIExpression()), !dbg !5001
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5208
  %292 = add i32 %291, -1, !dbg !5208
  br label %293, !dbg !5208

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5209
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %295, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %294, metadata !4926, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %294, metadata !4926, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5001
  %296 = icmp sgt i32 %294, 0, !dbg !5210
  br i1 %296, label %297, label %302, !dbg !5208

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5211
  call void @llvm.dbg.value(metadata i32 %298, metadata !4926, metadata !DIExpression()), !dbg !5001
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #38, !dbg !5212
  call void @llvm.dbg.value(metadata i32 %299, metadata !4961, metadata !DIExpression()), !dbg !5213
  %300 = icmp slt i32 %299, 0, !dbg !5214
  %301 = add i32 %295, 1, !dbg !5212
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %300, label %361, label %293, !llvm.loop !5216

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5001
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5001
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %305, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %304, metadata !4926, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8 %303, metadata !4930, metadata !DIExpression()), !dbg !5001
  %306 = icmp eq i8 %303, 0, !dbg !5218
  br i1 %306, label %312, label %307, !dbg !5219

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5220
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #38, !dbg !5221
  call void @llvm.dbg.value(metadata i32 %309, metadata !4964, metadata !DIExpression()), !dbg !5222
  %310 = icmp slt i32 %309, 0, !dbg !5223
  %311 = add i32 %305, 1, !dbg !5221
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %313, metadata !4865, metadata !DIExpression()), !dbg !4987
  %314 = lshr i24 %246, 20, !dbg !5225
  %315 = lshr i24 %246, 19, !dbg !5226
  %316 = or i24 %314, %315, !dbg !5227
  %317 = and i24 %316, 1, !dbg !5227
  %318 = icmp eq i24 %317, 0, !dbg !5227
  br i1 %318, label %323, label %319, !dbg !5228

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #38, !dbg !5229
  call void @llvm.dbg.value(metadata i32 %320, metadata !4968, metadata !DIExpression()), !dbg !5230
  %321 = icmp slt i32 %320, 0, !dbg !5231
  %322 = add i32 %313, 1, !dbg !5229
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %324, metadata !4865, metadata !DIExpression()), !dbg !4987
  %325 = and i24 %246, 1048576, !dbg !5233
  %326 = icmp eq i24 %325, 0, !dbg !5233
  br i1 %326, label %333, label %327, !dbg !5234

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5235
  %329 = zext i8 %328 to i32, !dbg !5235
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #38, !dbg !5235
  call void @llvm.dbg.value(metadata i32 %330, metadata !4974, metadata !DIExpression()), !dbg !5236
  %331 = icmp slt i32 %330, 0, !dbg !5237
  %332 = add i32 %324, 1, !dbg !5235
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %334, metadata !4865, metadata !DIExpression()), !dbg !4987
  %335 = load i32, i32* %16, align 4, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %335, metadata !4949, metadata !DIExpression()), !dbg !5001
  br label %336, !dbg !5240

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5241
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %338, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %337, metadata !4949, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5001
  %339 = icmp sgt i32 %337, 0, !dbg !5242
  br i1 %339, label %340, label %345, !dbg !5240

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5243
  call void @llvm.dbg.value(metadata i32 %341, metadata !4949, metadata !DIExpression()), !dbg !5001
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #38, !dbg !5244
  call void @llvm.dbg.value(metadata i32 %342, metadata !4978, metadata !DIExpression()), !dbg !5245
  %343 = icmp slt i32 %342, 0, !dbg !5246
  %344 = add i32 %338, 1, !dbg !5244
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %343, label %361, label %336, !llvm.loop !5248

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #37, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %346, metadata !4981, metadata !DIExpression()), !dbg !5251
  %347 = icmp slt i32 %346, 0, !dbg !5252
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %349, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %304, metadata !4926, metadata !DIExpression()), !dbg !5001
  %350 = icmp sgt i32 %304, 0, !dbg !5254
  br i1 %350, label %351, label %363, !dbg !5255

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5255
  %353 = add i32 %352, %338, !dbg !5255
  br label %354, !dbg !5255

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %355, metadata !4926, metadata !DIExpression()), !dbg !5001
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #38, !dbg !5256
  call void @llvm.dbg.value(metadata i32 %356, metadata !4983, metadata !DIExpression()), !dbg !5257
  %357 = icmp slt i32 %356, 0, !dbg !5258
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5260
  call void @llvm.dbg.value(metadata i32 undef, metadata !4865, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %359, metadata !4926, metadata !DIExpression()), !dbg !5001
  %360 = icmp sgt i32 %355, 1, !dbg !5254
  br i1 %360, label %354, label %363, !dbg !5255, !llvm.loop !5261

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #33, !dbg !4998
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4991
  call void @llvm.dbg.value(metadata i32 %364, metadata !4865, metadata !DIExpression()), !dbg !4987
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #33, !dbg !4998
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4987
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #33, !dbg !5263
  ret i32 %366, !dbg !5263
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #19

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #20 !dbg !5264 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i8* %1, metadata !5269, metadata !DIExpression()), !dbg !5270
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5271
  store i24 0, i24* %3, align 4, !dbg !5271
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5271
  store i8 0, i8* %4, align 1, !dbg !5271
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5271
  store i32 0, i32* %5, align 4, !dbg !5271
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5271
  store i32 0, i32* %6, align 4, !dbg !5271
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5272
  call void @llvm.dbg.value(metadata i8* %7, metadata !5269, metadata !DIExpression()), !dbg !5270
  %8 = load i8, i8* %7, align 1, !dbg !5273
  %9 = icmp eq i8 %8, 37, !dbg !5275
  br i1 %9, label %10, label %12, !dbg !5276

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5277
  call void @llvm.dbg.value(metadata i8* %11, metadata !5269, metadata !DIExpression()), !dbg !5270
  store i8 37, i8* %4, align 1, !dbg !5279
  br label %18, !dbg !5280

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #37, !dbg !5281
  call void @llvm.dbg.value(metadata i8* %13, metadata !5269, metadata !DIExpression()), !dbg !5270
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #37, !dbg !5282
  call void @llvm.dbg.value(metadata i8* %14, metadata !5269, metadata !DIExpression()), !dbg !5270
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #37, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %15, metadata !5269, metadata !DIExpression()), !dbg !5270
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #37, !dbg !5284
  call void @llvm.dbg.value(metadata i8* %16, metadata !5269, metadata !DIExpression()), !dbg !5270
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #37, !dbg !5285
  call void @llvm.dbg.value(metadata i8* %17, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %18, !dbg !5286

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5270
  ret i8* %19, !dbg !5287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5288 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5292, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i8* %1, metadata !5293, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i8* %2, metadata !5294, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i8* %3, metadata !5295, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32 0, metadata !5296, metadata !DIExpression()), !dbg !5299
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5300

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5301
  call void @llvm.dbg.value(metadata i32 %9, metadata !5296, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i8* %8, metadata !5294, metadata !DIExpression()), !dbg !5299
  %10 = icmp ult i8* %8, %3, !dbg !5302
  br i1 %10, label %11, label %13, !dbg !5303

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5304
  br label %17, !dbg !5303

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5305

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5306
  %16 = icmp eq i8 %15, 0, !dbg !5305
  br i1 %16, label %24, label %17, !dbg !5300

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5304
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5307
  call void @llvm.dbg.value(metadata i8* %19, metadata !5294, metadata !DIExpression()), !dbg !5299
  %20 = zext i8 %18 to i32, !dbg !5308
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #38, !dbg !5309
  call void @llvm.dbg.value(metadata i32 %21, metadata !5297, metadata !DIExpression()), !dbg !5310
  %22 = icmp slt i32 %21, 0, !dbg !5311
  %23 = add i32 %9, 1, !dbg !5313
  call void @llvm.dbg.value(metadata i32 undef, metadata !5296, metadata !DIExpression()), !dbg !5299
  br i1 %22, label %24, label %7, !llvm.loop !5314

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5299
  ret i32 %25, !dbg !5316
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #20 !dbg !5317 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5321, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5322, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.value(metadata i8* %2, metadata !5323, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.value(metadata i8* %3, metadata !5324, metadata !DIExpression()), !dbg !5331
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5332
  %6 = load i8, i8* %5, align 1, !dbg !5332
  %7 = zext i8 %6 to i32, !dbg !5333
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #37, !dbg !5334
  %9 = icmp eq i32 %8, 0, !dbg !5334
  call void @llvm.dbg.value(metadata i1 %9, metadata !5325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5331
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #37, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %10, metadata !5326, metadata !DIExpression()), !dbg !5331
  %11 = ptrtoint i8* %3 to i32, !dbg !5336
  %12 = ptrtoint i8* %2 to i32, !dbg !5336
  %13 = sub i32 %11, %12, !dbg !5336
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5337
  call void @llvm.dbg.value(metadata i8* %14, metadata !5328, metadata !DIExpression()), !dbg !5331
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5338

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5331
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5321, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.value(metadata i8* %18, metadata !5328, metadata !DIExpression()), !dbg !5331
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5339
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5340
  call void @llvm.dbg.value(metadata i32 %25, metadata !5329, metadata !DIExpression()), !dbg !5341
  %26 = icmp ult i32 %25, 10, !dbg !5342
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5343
  %28 = add i32 %27, %25, !dbg !5341
  %29 = trunc i32 %28 to i8, !dbg !5343
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5344
  call void @llvm.dbg.value(metadata i8* %30, metadata !5328, metadata !DIExpression()), !dbg !5331
  store i8 %29, i8* %30, align 1, !dbg !5345
  call void @llvm.dbg.value(metadata i64 %22, metadata !5321, metadata !DIExpression()), !dbg !5331
  %31 = icmp uge i64 %19, %15, !dbg !5346
  %32 = icmp ugt i8* %30, %2, !dbg !5347
  %33 = and i1 %31, %32, !dbg !5347
  br i1 %33, label %17, label %34, !dbg !5348, !llvm.loop !5349

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5351
  %36 = load i24, i24* %35, align 4, !dbg !5351
  %37 = and i24 %36, 32, !dbg !5351
  %38 = icmp eq i24 %37, 0, !dbg !5351
  br i1 %38, label %44, label %39, !dbg !5353

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5354

40:                                               ; preds = %39
  br label %41, !dbg !5356

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5360
  store i24 %43, i24* %35, align 4, !dbg !5360
  br label %44, !dbg !5361

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5361
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #13 !dbg !5362 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5368, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i8* %1, metadata !5369, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i32 %2, metadata !5370, metadata !DIExpression()), !dbg !5371
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5372
  %5 = load i24, i24* %4, align 4, !dbg !5372
  %6 = lshr i24 %5, 11, !dbg !5372
  %7 = and i24 %6, 15, !dbg !5372
  %8 = zext i24 %7 to i32, !dbg !5372
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5373

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5374
  store i32 %2, i32* %10, align 4, !dbg !5376
  br label %28, !dbg !5377

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5378
  store i8 %12, i8* %1, align 1, !dbg !5379
  br label %28, !dbg !5380

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5381
  %15 = bitcast i8* %1 to i16*, !dbg !5382
  store i16 %14, i16* %15, align 2, !dbg !5383
  br label %28, !dbg !5384

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5385
  store i32 %2, i32* %17, align 4, !dbg !5386
  br label %28, !dbg !5387

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5388
  %20 = bitcast i8* %1 to i64*, !dbg !5389
  store i64 %19, i64* %20, align 8, !dbg !5390
  br label %28, !dbg !5391

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5392
  %23 = bitcast i8* %1 to i64*, !dbg !5393
  store i64 %22, i64* %23, align 8, !dbg !5394
  br label %28, !dbg !5395

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5396
  store i32 %2, i32* %25, align 4, !dbg !5397
  br label %28, !dbg !5398

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5399
  store i32 %2, i32* %27, align 4, !dbg !5400
  br label %28, !dbg !5401

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5402
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #17 !dbg !5403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5406, metadata !DIExpression()), !dbg !5407
  %2 = add i32 %0, -65, !dbg !5408
  %3 = icmp ult i32 %2, 26, !dbg !5409
  %4 = zext i1 %3 to i32, !dbg !5409
  ret i32 %4, !dbg !5410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #17 !dbg !5411 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5415, metadata !DIExpression()), !dbg !5416
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5417

2:                                                ; preds = %1
  br label %4, !dbg !5418

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5420

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5421
  ret i32 %5, !dbg !5422
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #20 !dbg !5423 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5425, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8* %1, metadata !5426, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8 1, metadata !5427, metadata !DIExpression()), !dbg !5428
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5429

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5427, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8* %5, metadata !5426, metadata !DIExpression()), !dbg !5428
  %6 = load i8, i8* %5, align 1, !dbg !5430
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5432

7:                                                ; preds = %4
  br label %11, !dbg !5433

8:                                                ; preds = %4
  br label %11, !dbg !5435

9:                                                ; preds = %4
  br label %11, !dbg !5436

10:                                               ; preds = %4
  br label %11, !dbg !5437

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5438
  %14 = or i24 %13, %12, !dbg !5438
  store i24 %14, i24* %3, align 4, !dbg !5438
  call void @llvm.dbg.value(metadata i8 poison, metadata !5427, metadata !DIExpression()), !dbg !5428
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5426, metadata !DIExpression()), !dbg !5428
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5427, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.value(metadata i8* %15, metadata !5426, metadata !DIExpression()), !dbg !5428
  %17 = load i24, i24* %3, align 4, !dbg !5439
  %18 = and i24 %17, 68, !dbg !5441
  %19 = icmp eq i24 %18, 68, !dbg !5441
  br i1 %19, label %20, label %22, !dbg !5441

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5442
  store i24 %21, i24* %3, align 4, !dbg !5442
  br label %22, !dbg !5444

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #20 !dbg !5446 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5448, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i8* %1, metadata !5449, metadata !DIExpression()), !dbg !5452
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5453
  %5 = load i24, i24* %4, align 4, !dbg !5454
  %6 = or i24 %5, 128, !dbg !5454
  store i24 %6, i24* %4, align 4, !dbg !5454
  call void @llvm.dbg.value(metadata i8* %1, metadata !5449, metadata !DIExpression()), !dbg !5452
  %7 = load i8, i8* %1, align 1, !dbg !5455
  %8 = icmp eq i8 %7, 42, !dbg !5457
  br i1 %8, label %9, label %12, !dbg !5458

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5459
  store i24 %10, i24* %4, align 4, !dbg !5459
  call void @llvm.dbg.value(metadata i8* %1, metadata !5449, metadata !DIExpression()), !dbg !5452
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5461
  call void @llvm.dbg.value(metadata i8* %11, metadata !5449, metadata !DIExpression()), !dbg !5452
  store i8* %11, i8** %3, align 4, !dbg !5461
  br label %29, !dbg !5462

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5450, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i8** %3, metadata !5449, metadata !DIExpression(DW_OP_deref)), !dbg !5452
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #37, !dbg !5463
  call void @llvm.dbg.value(metadata i32 %13, metadata !5451, metadata !DIExpression()), !dbg !5452
  %14 = load i8*, i8** %3, align 4, !dbg !5464
  call void @llvm.dbg.value(metadata i8* %14, metadata !5449, metadata !DIExpression()), !dbg !5452
  %15 = icmp eq i8* %14, %1, !dbg !5466
  br i1 %15, label %29, label %16, !dbg !5467

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5468
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5470
  store i32 %13, i32* %18, align 4, !dbg !5471
  %19 = lshr i32 %13, 31, !dbg !5472
  %20 = lshr i24 %17, 1, !dbg !5473
  %21 = and i24 %20, 1, !dbg !5473
  %22 = zext i24 %21 to i32, !dbg !5473
  %23 = or i32 %19, %22, !dbg !5473
  %24 = trunc i32 %23 to i24, !dbg !5473
  %25 = shl nuw nsw i24 %24, 1, !dbg !5473
  %26 = and i24 %17, -131, !dbg !5473
  %27 = or i24 %26, 128, !dbg !5473
  %28 = or i24 %25, %27, !dbg !5473
  store i24 %28, i24* %4, align 4, !dbg !5473
  br label %29, !dbg !5474

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5452
  ret i8* %30, !dbg !5475
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #20 !dbg !5476 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5478, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8* %1, metadata !5479, metadata !DIExpression()), !dbg !5481
  %4 = load i8, i8* %1, align 1, !dbg !5482
  %5 = icmp eq i8 %4, 46, !dbg !5483
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5484
  %7 = load i24, i24* %6, align 4, !dbg !5485
  %8 = select i1 %5, i24 512, i24 0, !dbg !5485
  %9 = and i24 %7, -513, !dbg !5485
  %10 = or i24 %9, %8, !dbg !5485
  store i24 %10, i24* %6, align 4, !dbg !5485
  br i1 %5, label %11, label %32, !dbg !5486

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5479, metadata !DIExpression()), !dbg !5481
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5487
  call void @llvm.dbg.value(metadata i8* %12, metadata !5479, metadata !DIExpression()), !dbg !5481
  store i8* %12, i8** %3, align 4, !dbg !5487
  %13 = load i8, i8* %12, align 1, !dbg !5488
  %14 = icmp eq i8 %13, 42, !dbg !5490
  br i1 %14, label %15, label %18, !dbg !5491

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5492
  store i24 %16, i24* %6, align 4, !dbg !5492
  call void @llvm.dbg.value(metadata i8* %12, metadata !5479, metadata !DIExpression()), !dbg !5481
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5494
  call void @llvm.dbg.value(metadata i8* %17, metadata !5479, metadata !DIExpression()), !dbg !5481
  store i8* %17, i8** %3, align 4, !dbg !5494
  br label %32, !dbg !5495

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5479, metadata !DIExpression(DW_OP_deref)), !dbg !5481
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #37, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %19, metadata !5480, metadata !DIExpression()), !dbg !5481
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5497
  store i32 %19, i32* %20, align 4, !dbg !5498
  %21 = lshr i32 %19, 31, !dbg !5499
  %22 = load i24, i24* %6, align 4, !dbg !5500
  %23 = lshr i24 %22, 1, !dbg !5500
  %24 = and i24 %23, 1, !dbg !5500
  %25 = zext i24 %24 to i32, !dbg !5500
  %26 = or i32 %21, %25, !dbg !5500
  %27 = trunc i32 %26 to i24, !dbg !5500
  %28 = shl nuw nsw i24 %27, 1, !dbg !5500
  %29 = and i24 %22, -3, !dbg !5500
  %30 = or i24 %28, %29, !dbg !5500
  store i24 %30, i24* %6, align 4, !dbg !5500
  %31 = load i8*, i8** %3, align 4, !dbg !5501
  call void @llvm.dbg.value(metadata i8* %31, metadata !5479, metadata !DIExpression()), !dbg !5481
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5481
  ret i8* %33, !dbg !5502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5503 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5505, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i8* %1, metadata !5506, metadata !DIExpression()), !dbg !5507
  %3 = load i8, i8* %1, align 1, !dbg !5508
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5509

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5510
  call void @llvm.dbg.value(metadata i8* %5, metadata !5506, metadata !DIExpression()), !dbg !5507
  %6 = load i8, i8* %5, align 1, !dbg !5513
  %7 = icmp eq i8 %6, 104, !dbg !5514
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5515
  %9 = load i24, i24* %8, align 4, !dbg !5515
  %10 = and i24 %9, -30721, !dbg !5515
  br i1 %7, label %11, label %14, !dbg !5516

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5517
  store i24 %12, i24* %8, align 4, !dbg !5517
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5519
  call void @llvm.dbg.value(metadata i8* %13, metadata !5506, metadata !DIExpression()), !dbg !5507
  br label %56, !dbg !5520

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5521
  store i24 %15, i24* %8, align 4, !dbg !5521
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5523
  call void @llvm.dbg.value(metadata i8* %17, metadata !5506, metadata !DIExpression()), !dbg !5507
  %18 = load i8, i8* %17, align 1, !dbg !5525
  %19 = icmp eq i8 %18, 108, !dbg !5526
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5527
  %21 = load i24, i24* %20, align 4, !dbg !5527
  %22 = and i24 %21, -30721, !dbg !5527
  br i1 %19, label %23, label %26, !dbg !5528

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5529
  store i24 %24, i24* %20, align 4, !dbg !5529
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5531
  call void @llvm.dbg.value(metadata i8* %25, metadata !5506, metadata !DIExpression()), !dbg !5507
  br label %56, !dbg !5532

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5533
  store i24 %27, i24* %20, align 4, !dbg !5533
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5535
  %30 = load i24, i24* %29, align 4, !dbg !5536
  %31 = and i24 %30, -30721, !dbg !5536
  %32 = or i24 %31, 10240, !dbg !5536
  store i24 %32, i24* %29, align 4, !dbg !5536
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5537
  call void @llvm.dbg.value(metadata i8* %33, metadata !5506, metadata !DIExpression()), !dbg !5507
  br label %56, !dbg !5538

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5539
  %36 = load i24, i24* %35, align 4, !dbg !5540
  %37 = and i24 %36, -30721, !dbg !5540
  %38 = or i24 %37, 12288, !dbg !5540
  store i24 %38, i24* %35, align 4, !dbg !5540
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5541
  call void @llvm.dbg.value(metadata i8* %39, metadata !5506, metadata !DIExpression()), !dbg !5507
  br label %56, !dbg !5542

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5543
  %42 = load i24, i24* %41, align 4, !dbg !5544
  %43 = and i24 %42, -30721, !dbg !5544
  %44 = or i24 %43, 14336, !dbg !5544
  store i24 %44, i24* %41, align 4, !dbg !5544
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5545
  call void @llvm.dbg.value(metadata i8* %45, metadata !5506, metadata !DIExpression()), !dbg !5507
  br label %56, !dbg !5546

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5547
  %48 = load i24, i24* %47, align 4, !dbg !5548
  %49 = and i24 %48, -30723, !dbg !5548
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5549
  call void @llvm.dbg.value(metadata i8* %50, metadata !5506, metadata !DIExpression()), !dbg !5507
  %51 = or i24 %49, 16386, !dbg !5550
  store i24 %51, i24* %47, align 4, !dbg !5550
  br label %56, !dbg !5551

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5552
  %54 = load i24, i24* %53, align 4, !dbg !5553
  %55 = and i24 %54, -30721, !dbg !5553
  store i24 %55, i24* %53, align 4, !dbg !5553
  br label %56, !dbg !5554

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5506, metadata !DIExpression()), !dbg !5507
  ret i8* %57, !dbg !5555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5556 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5558, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.value(metadata i8* %1, metadata !5559, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.value(metadata i8 0, metadata !5560, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.value(metadata i8* %1, metadata !5559, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5563
  %3 = load i8, i8* %1, align 1, !dbg !5564
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5565
  store i8 %3, i8* %4, align 1, !dbg !5566
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5567

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5568

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5569
  %9 = load i24, i24* %8, align 4, !dbg !5569
  %10 = and i24 %9, -458753, !dbg !5569
  %11 = or i24 %10, %7, !dbg !5569
  call void @llvm.dbg.label(metadata !5561), !dbg !5570
  %12 = and i24 %9, 30720, !dbg !5571
  %13 = icmp eq i24 %12, 16384, !dbg !5571
  %14 = zext i1 %13 to i24, !dbg !5573
  %15 = or i24 %11, %14, !dbg !5573
  %16 = icmp eq i8 %3, 99, !dbg !5574
  br i1 %16, label %17, label %43, !dbg !5576

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5577
  %19 = icmp ne i24 %18, 0, !dbg !5577
  call void @llvm.dbg.value(metadata i1 %19, metadata !5560, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5563
  br label %43, !dbg !5579

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5580
  %22 = load i24, i24* %21, align 4, !dbg !5581
  %23 = and i24 %22, -458753, !dbg !5581
  %24 = or i24 %23, 262144, !dbg !5581
  call void @llvm.dbg.value(metadata i8 1, metadata !5560, metadata !DIExpression()), !dbg !5563
  br label %43, !dbg !5582

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5585
  %27 = load i24, i24* %26, align 4, !dbg !5586
  %28 = and i24 %27, -458753, !dbg !5586
  %29 = or i24 %28, 196608, !dbg !5586
  %30 = and i24 %27, 30720, !dbg !5587
  %31 = icmp eq i24 %30, 16384, !dbg !5587
  br label %43, !dbg !5589

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5590
  %34 = load i24, i24* %33, align 4, !dbg !5591
  %35 = and i24 %34, -458753, !dbg !5591
  %36 = or i24 %35, 196608, !dbg !5591
  %37 = and i24 %34, 30720, !dbg !5592
  %38 = icmp ne i24 %37, 0, !dbg !5592
  br label %43, !dbg !5594

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5595
  %41 = load i24, i24* %40, align 4, !dbg !5596
  %42 = or i24 %41, 1, !dbg !5596
  br label %43, !dbg !5597

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5598
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5599
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5600
  call void @llvm.dbg.value(metadata i8* %48, metadata !5559, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.value(metadata i8 poison, metadata !5560, metadata !DIExpression()), !dbg !5563
  %49 = lshr i24 %44, 1, !dbg !5598
  %50 = and i24 %49, 1, !dbg !5598
  %51 = zext i24 %50 to i32, !dbg !5598
  %52 = or i32 %51, %47, !dbg !5598
  %53 = trunc i32 %52 to i24, !dbg !5598
  %54 = shl nuw nsw i24 %53, 1, !dbg !5598
  %55 = and i24 %44, -3, !dbg !5598
  %56 = or i24 %54, %55, !dbg !5598
  store i24 %56, i24* %46, align 4, !dbg !5598
  ret i8* %48, !dbg !5601
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #20 !dbg !5602 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5607, metadata !DIExpression()), !dbg !5610
  %2 = load i8*, i8** %0, align 4, !dbg !5611
  call void @llvm.dbg.value(metadata i8* %2, metadata !5608, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i32 0, metadata !5609, metadata !DIExpression()), !dbg !5610
  %3 = load i8, i8* %2, align 1, !dbg !5612
  %4 = zext i8 %3 to i32, !dbg !5613
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #37, !dbg !5614
  %6 = icmp eq i32 %5, 0, !dbg !5615
  br i1 %6, label %19, label %7, !dbg !5615

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5609, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i8* %10, metadata !5608, metadata !DIExpression()), !dbg !5610
  %11 = mul i32 %9, 10, !dbg !5616
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5618
  call void @llvm.dbg.value(metadata i8* %12, metadata !5608, metadata !DIExpression()), !dbg !5610
  %13 = add i32 %11, -48, !dbg !5619
  %14 = add i32 %13, %8, !dbg !5620
  call void @llvm.dbg.value(metadata i32 %14, metadata !5609, metadata !DIExpression()), !dbg !5610
  %15 = load i8, i8* %12, align 1, !dbg !5612
  %16 = zext i8 %15 to i32, !dbg !5613
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #37, !dbg !5614
  %18 = icmp eq i32 %17, 0, !dbg !5615
  br i1 %18, label %19, label %7, !dbg !5615, !llvm.loop !5621

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5610
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5610
  store i8* %20, i8** %0, align 4, !dbg !5623
  ret i32 %21, !dbg !5624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #17 !dbg !5625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5627, metadata !DIExpression()), !dbg !5628
  %2 = add i32 %0, -48, !dbg !5629
  %3 = icmp ult i32 %2, 10, !dbg !5630
  %4 = zext i1 %3 to i32, !dbg !5630
  ret i32 %4, !dbg !5631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5632 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #33, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #33, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #33, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #33, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #33, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #33, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #33, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #33, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #33, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #33, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #33, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #33, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #33, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #33, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #33, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #33, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #33, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #33, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #33, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #33, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #33, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #33, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #33, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #33, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #33, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #33, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #33, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #33, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #33, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #33, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #33, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #33, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #33, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #33, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #33, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #33, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #33, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #33, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #33, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #33, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #33, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #33, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #33, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #33, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #33, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #33, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #33, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #33, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #33, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #33, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #33, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #33, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #33, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #33, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #33, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #33, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #33, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #33, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #33, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #33, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #33, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #33, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #33, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #33, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #33, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #33, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #33, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #33, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #33, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #33, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #33, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #33, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #33, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #33, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #33, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #33, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #33, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #33, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #33, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #33, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #33, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #33, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #33, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #33, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #33, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #33, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #33, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #33, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #33, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #33, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #33, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #33, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #33, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #33, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #33, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #33, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #33, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #33, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #33, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #33, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #33, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #33, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #33, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #33, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #33, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #33, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #33, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #33, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #33, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #33, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #33, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #33, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #33, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #33, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #33, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #33, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #33, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #33, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #33, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #33, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #33, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #33, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #33, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #33, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #33, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #33, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #33, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #33, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #33, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #33, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #33, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #33, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #33, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #33, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #33, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #33, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #33, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #33, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #33, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #33, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #33, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #33, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #33, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #33, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #33, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #33, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #33, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #33, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #33, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #33, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #33, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #33, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #33, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #33, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #33, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #33, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #33, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #33, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #33, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #33, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #33, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #33, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #33, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #33, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #33, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #33, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #33, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #33, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #33, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #33, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #33, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #33, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #33, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #33, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #33, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #33, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #33, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #33, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #33, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #33, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #33, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #33, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #33, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #33, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #33, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #33, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #33, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #33, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #33, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #33, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #33, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #33, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #33, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #33, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #33, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #33, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #33, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #33, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #33, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #33, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #33, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #33, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #33, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #33, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #33, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #33, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #33, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #33, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #33, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #33, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #33, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #33, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #33, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #33, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #33, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #33, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #33, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #33, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #33, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #33, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #33, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #33, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #33, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #33, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #33, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #33, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #33, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #33, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #33, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #33, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #33, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #33, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #33, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #33, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #33, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,128\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #33, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #33, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #33, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #33, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #33, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #33, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #33, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #33, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #33, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #33, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #33, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #33, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #33, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #33, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #33, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_CPLUSPLUS\0A\09.equ\09CONFIG_CPLUSPLUS,1\0A\09.type\09CONFIG_CPLUSPLUS,%object", ""() #33, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_STD_CPP11\0A\09.equ\09CONFIG_STD_CPP11,1\0A\09.type\09CONFIG_STD_CPP11,%object", ""() #33, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_CPP_MAIN\0A\09.equ\09CONFIG_CPP_MAIN,1\0A\09.type\09CONFIG_CPP_MAIN,%object", ""() #33, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_CPP_STATIC_INIT_GNU\0A\09.equ\09CONFIG_CPP_STATIC_INIT_GNU,1\0A\09.type\09CONFIG_CPP_STATIC_INIT_GNU,%object", ""() #33, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #33, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #33, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #33, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #33, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #33, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #33, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #33, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #33, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #33, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #33, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #33, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #33, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #33, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #33, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #33, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #33, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #33, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #33, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #33, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #33, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #33, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #33, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #33, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #33, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #33, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #33, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #33, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #33, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #33, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #33, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #33, !dbg !6202, !srcloc !6203
  ret void, !dbg !6204
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6207, metadata !DIExpression()), !dbg !6209
  tail call fastcc void @LL_FLASH_EnableInstCache() #37, !dbg !6210
  tail call fastcc void @LL_FLASH_EnableDataCache() #37, !dbg !6211
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !6212, !srcloc !6221
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %3, metadata !6218, metadata !DIExpression()) #33, !dbg !6222
  call void @llvm.dbg.value(metadata i32 undef, metadata !6219, metadata !DIExpression()) #33, !dbg !6222
  call void @llvm.dbg.value(metadata i32 %3, metadata !6208, metadata !DIExpression()), !dbg !6209
  call void @llvm.dbg.value(metadata i32 %3, metadata !6223, metadata !DIExpression()) #33, !dbg !6228
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !6230, !srcloc !6231
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6232
  ret i32 0, !dbg !6233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #21 !dbg !6234 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6236
  %2 = or i32 %1, 512, !dbg !6236
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6236
  ret void, !dbg !6237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #21 !dbg !6238 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6239
  %2 = or i32 %1, 1024, !dbg !6239
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6239
  ret void, !dbg !6240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #17 !dbg !6241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6243, metadata !DIExpression()), !dbg !6244
  ret i32 0, !dbg !6245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_cpp_init_static() local_unnamed_addr #1 !dbg !6246 {
  tail call void @__do_global_ctors_aux() #38, !dbg !6248
  tail call void @__do_init_array_aux() #38, !dbg !6249
  ret void, !dbg !6250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__do_init_array_aux() local_unnamed_addr #1 !dbg !6251 {
  call void @llvm.dbg.value(metadata void ()** getelementptr inbounds ([0 x void ()*], [0 x void ()*]* @__zephyr_init_array_start, i32 0, i32 0), metadata !6254, metadata !DIExpression()), !dbg !6259
  br i1 icmp ult (void ()** getelementptr inbounds ([0 x void ()*], [0 x void ()*]* @__zephyr_init_array_start, i32 0, i32 0), void ()** getelementptr inbounds ([0 x void ()*], [0 x void ()*]* @__zephyr_init_array_end, i32 0, i32 0)), label %2, label %1, !dbg !6260

1:                                                ; preds = %2, %0
  ret void, !dbg !6261

2:                                                ; preds = %0, %2
  %3 = phi void ()** [ %5, %2 ], [ getelementptr inbounds ([0 x void ()*], [0 x void ()*]* @__zephyr_init_array_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata void ()** %3, metadata !6254, metadata !DIExpression()), !dbg !6259
  %4 = load void ()*, void ()** %3, align 4, !dbg !6262
  tail call void %4() #38, !dbg !6265
  %5 = getelementptr inbounds void ()*, void ()** %3, i32 1, !dbg !6266
  call void @llvm.dbg.value(metadata void ()** %5, metadata !6254, metadata !DIExpression()), !dbg !6259
  %6 = icmp ult void ()** %5, getelementptr inbounds ([0 x void ()*], [0 x void ()*]* @__zephyr_init_array_end, i32 0, i32 0), !dbg !6267
  br i1 %6, label %2, label %1, !dbg !6260, !llvm.loop !6268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__do_global_ctors_aux() local_unnamed_addr #1 !dbg !6270 {
  %1 = load void ()*, void ()** getelementptr inbounds ([0 x void ()*], [0 x void ()*]* @__ZEPHYR_CTOR_LIST__, i32 0, i32 0), align 4, !dbg !6274
  call void @llvm.dbg.value(metadata void ()* %1, metadata !6273, metadata !DIExpression()), !dbg !6275
  %2 = icmp eq void ()* %1, null, !dbg !6276
  br i1 %2, label %11, label %3, !dbg !6277

3:                                                ; preds = %0
  %4 = ptrtoint void ()* %1 to i32, !dbg !6278
  call void @llvm.dbg.value(metadata i32 %4, metadata !6273, metadata !DIExpression()), !dbg !6275
  br label %5, !dbg !6277

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6273, metadata !DIExpression()), !dbg !6275
  %7 = add i32 %6, -1, !dbg !6279
  call void @llvm.dbg.value(metadata i32 %7, metadata !6273, metadata !DIExpression()), !dbg !6275
  %8 = getelementptr inbounds [0 x void ()*], [0 x void ()*]* @__ZEPHYR_CTOR_LIST__, i32 0, i32 %6, !dbg !6281
  %9 = load void ()*, void ()** %8, align 4, !dbg !6281
  tail call void %9() #38, !dbg !6281
  %10 = icmp eq i32 %7, 0, !dbg !6276
  br i1 %10, label %11, label %5, !dbg !6277, !llvm.loop !6282

11:                                               ; preds = %5, %0
  ret void, !dbg !6284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @__cxa_atexit(void (i8*)* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) local_unnamed_addr #17 !dbg !6285 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !6292, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i8* %1, metadata !6293, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i8* %2, metadata !6294, metadata !DIExpression()), !dbg !6295
  ret i32 0, !dbg !6296
}

; Function Attrs: mustprogress nobuiltin nofree noinline nounwind optsize willreturn allocsize(0)
define dso_local noalias noundef nonnull i8* @_Znwj(i32 noundef %0) local_unnamed_addr #22 !dbg !6297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6301, metadata !DIExpression()), !dbg !6302
  %2 = tail call i8* @malloc(i32 noundef %0) #34, !dbg !6303
  ret i8* %2, !dbg !6304
}

; Function Attrs: mustprogress nobuiltin nofree noinline nounwind optsize willreturn allocsize(0)
define dso_local noalias noundef nonnull i8* @_Znaj(i32 noundef %0) local_unnamed_addr #22 !dbg !6305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6307, metadata !DIExpression()), !dbg !6308
  %2 = tail call i8* @malloc(i32 noundef %0) #34, !dbg !6309
  ret i8* %2, !dbg !6310
}

; Function Attrs: mustprogress nobuiltin nofree noinline nounwind optsize willreturn allocsize(0)
define dso_local noalias noundef i8* @_ZnwjRKSt9nothrow_t(i32 noundef %0, %struct.k_spinlock* nocapture noundef nonnull readnone align 1 dereferenceable(1) %1) local_unnamed_addr #22 !dbg !6311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6319, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !6320, metadata !DIExpression()), !dbg !6321
  %3 = tail call i8* @malloc(i32 noundef %0) #34, !dbg !6322
  ret i8* %3, !dbg !6323
}

; Function Attrs: mustprogress nobuiltin nofree noinline nounwind optsize willreturn allocsize(0)
define dso_local noalias noundef i8* @_ZnajRKSt9nothrow_t(i32 noundef %0, %struct.k_spinlock* nocapture noundef nonnull readnone align 1 dereferenceable(1) %1) local_unnamed_addr #22 !dbg !6324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6326, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !6327, metadata !DIExpression()), !dbg !6328
  %3 = tail call i8* @malloc(i32 noundef %0) #34, !dbg !6329
  ret i8* %3, !dbg !6330
}

; Function Attrs: mustprogress nobuiltin noinline nounwind optsize willreturn
define dso_local void @_ZdlPv(i8* nocapture noundef %0) local_unnamed_addr #23 !dbg !6331 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6333, metadata !DIExpression()), !dbg !6334
  tail call void @free(i8* noundef %0) #34, !dbg !6335
  ret void, !dbg !6336
}

; Function Attrs: mustprogress nobuiltin noinline nounwind optsize willreturn
define dso_local void @_ZdaPv(i8* nocapture noundef %0) local_unnamed_addr #23 !dbg !6337 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6339, metadata !DIExpression()), !dbg !6340
  tail call void @free(i8* noundef %0) #34, !dbg !6341
  ret void, !dbg !6342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6392, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6393, metadata !DIExpression()), !dbg !6394
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #38, !dbg !6395
  ret void, !dbg !6396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6397 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6414, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6415, metadata !DIExpression()), !dbg !6417
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6418
  %4 = load i32, i32* %3, align 4, !dbg !6418
  call void @llvm.dbg.value(metadata i32 %4, metadata !6416, metadata !DIExpression()), !dbg !6417
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #37, !dbg !6419
  ret void, !dbg !6420
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #14 !dbg !6421 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6423, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i8* %0, metadata !6424, metadata !DIExpression()), !dbg !6426
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6427
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #33, !dbg !6427
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6425, metadata !DIExpression()), !dbg !6428
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6428
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6429
  %5 = bitcast i8* %4 to i32*, !dbg !6429
  %6 = load i32, i32* %5, align 4, !dbg !6429
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6430
  store i32 %6, i32* %7, align 4, !dbg !6431
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #37, !dbg !6432
  unreachable, !dbg !6433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6437, metadata !DIExpression()), !dbg !6438
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #37, !dbg !6439
  ret void, !dbg !6440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6445, metadata !DIExpression()), !dbg !6446
  %2 = icmp sgt i32 %0, -1, !dbg !6447
  br i1 %2, label %3, label %8, !dbg !6449

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !6450, !srcloc !6452
  %4 = and i32 %0, 31, !dbg !6453
  %5 = shl nuw i32 1, %4, !dbg !6454
  %6 = lshr i32 %0, 5, !dbg !6455
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6456
  store volatile i32 %5, i32* %7, align 4, !dbg !6457
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !6458, !srcloc !6459
  br label %8, !dbg !6460

8:                                                ; preds = %3, %1
  ret void, !dbg !6461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6464, metadata !DIExpression()), !dbg !6465
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #37, !dbg !6466
  ret void, !dbg !6467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6470, metadata !DIExpression()), !dbg !6471
  %2 = icmp sgt i32 %0, -1, !dbg !6472
  br i1 %2, label %3, label %8, !dbg !6474

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6475
  %5 = shl nuw i32 1, %4, !dbg !6477
  %6 = lshr i32 %0, 5, !dbg !6478
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6479
  store volatile i32 %5, i32* %7, align 4, !dbg !6480
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !6481, !srcloc !6485
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !6486, !srcloc !6489
  br label %8, !dbg !6490

8:                                                ; preds = %3, %1
  ret void, !dbg !6491
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #24 !dbg !6492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6496, metadata !DIExpression()), !dbg !6497
  %2 = lshr i32 %0, 5, !dbg !6498
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6499
  %4 = load volatile i32, i32* %3, align 4, !dbg !6499
  %5 = and i32 %0, 31, !dbg !6500
  %6 = shl nuw i32 1, %5, !dbg !6500
  %7 = and i32 %4, %6, !dbg !6501
  ret i32 %7, !dbg !6502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #21 !dbg !6503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6507, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 %1, metadata !6508, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 %2, metadata !6509, metadata !DIExpression()), !dbg !6510
  %4 = add i32 %1, 1, !dbg !6511
  call void @llvm.dbg.value(metadata i32 %4, metadata !6508, metadata !DIExpression()), !dbg !6510
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #37, !dbg !6514
  ret void, !dbg !6515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !6516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6520, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i32 %1, metadata !6521, metadata !DIExpression()), !dbg !6522
  %3 = trunc i32 %1 to i8, !dbg !6523
  %4 = shl i8 %3, 4, !dbg !6523
  %5 = and i32 %0, 15, !dbg !6525
  %6 = add nsw i32 %5, -4, !dbg !6525
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6525
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6525
  %9 = icmp slt i32 %0, 0, !dbg !6525
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6525
  store volatile i8 %4, i8* %10, align 1, !dbg !6523
  ret void, !dbg !6526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6529, metadata !DIExpression()), !dbg !6530
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #38, !dbg !6531
  ret void, !dbg !6532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6533 {
  tail call void @z_SysNmiOnReset() #38, !dbg !6535
  tail call void @z_arm_int_exit() #38, !dbg !6536
  ret void, !dbg !6537
}

; Function Attrs: optsize
declare !dbg !6538 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6539 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #14 !dbg !6541 {
  tail call fastcc void @relocate_vector_table() #37, !dbg !6543
  tail call fastcc void @z_arm_floating_point_init() #37, !dbg !6544
  tail call void @z_bss_zero() #38, !dbg !6545
  tail call void @z_data_copy() #38, !dbg !6546
  tail call void @z_arm_interrupt_init() #38, !dbg !6547
  tail call void @z_cstart() #40, !dbg !6548
  unreachable, !dbg !6548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6549 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6550
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !6551, !srcloc !6554
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !6555, !srcloc !6558
  ret void, !dbg !6559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6560 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6561
  %2 = and i32 %1, -15728641, !dbg !6561
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6561
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #33, !dbg !6562, !srcloc !6569
  call void @llvm.dbg.value(metadata i32 %3, metadata !6567, metadata !DIExpression()) #33, !dbg !6570
  %4 = and i32 %3, -5, !dbg !6571
  call void @llvm.dbg.value(metadata i32 %4, metadata !6572, metadata !DIExpression()) #33, !dbg !6577
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #33, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !6581, !srcloc !6558
  ret void, !dbg !6583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6587, metadata !DIExpression()), !dbg !6588
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6589
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6590
  store i32 %0, i32* %3, align 4, !dbg !6591
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6592
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6593
  store i32 %4, i32* %5, align 4, !dbg !6594
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6595
  %7 = or i32 %6, 268435456, !dbg !6595
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6595
  call void @llvm.dbg.value(metadata i32 0, metadata !6596, metadata !DIExpression()) #33, !dbg !6599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #33, !dbg !6601, !srcloc !6602
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6603
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6604
  %10 = load i32, i32* %9, align 4, !dbg !6604
  ret i32 %10, !dbg !6605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #10 !dbg !6606 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6718, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !6719, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i8* %2, metadata !6720, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6721, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i8* %4, metadata !6722, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i8* %5, metadata !6723, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i8* %6, metadata !6724, metadata !DIExpression()), !dbg !6726
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6727
  call void @llvm.dbg.value(metadata i8* %8, metadata !6725, metadata !DIExpression()), !dbg !6726
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6728
  %10 = bitcast i8* %9 to i32*, !dbg !6728
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6729
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6730
  %12 = bitcast i8* %8 to i32*, !dbg !6731
  store i32 %11, i32* %12, align 4, !dbg !6732
  %13 = ptrtoint i8* %4 to i32, !dbg !6733
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6734
  %15 = bitcast i8* %14 to i32*, !dbg !6734
  store i32 %13, i32* %15, align 4, !dbg !6735
  %16 = ptrtoint i8* %5 to i32, !dbg !6736
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6737
  %18 = bitcast i8* %17 to i32*, !dbg !6737
  store i32 %16, i32* %18, align 4, !dbg !6738
  %19 = ptrtoint i8* %6 to i32, !dbg !6739
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6740
  %21 = bitcast i8* %20 to i32*, !dbg !6740
  store i32 %19, i32* %21, align 4, !dbg !6741
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6742
  %23 = bitcast i8* %22 to i32*, !dbg !6742
  store i32 16777216, i32* %23, align 4, !dbg !6743
  %24 = ptrtoint i8* %8 to i32, !dbg !6744
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6745
  store i32 %24, i32* %25, align 8, !dbg !6746
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6747
  store i32 0, i32* %26, align 4, !dbg !6748
  ret void, !dbg !6749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !6750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6755, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i32 %1, metadata !6756, metadata !DIExpression()), !dbg !6761
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6762
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6757, metadata !DIExpression()), !dbg !6761
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6763
  br i1 %4, label %19, label %5, !dbg !6765

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6760, metadata !DIExpression()), !dbg !6761
  %6 = icmp eq i32 %0, -22, !dbg !6766
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6766
  %8 = load i32, i32* %7, align 4, !dbg !6766
  br i1 %6, label %16, label %9, !dbg !6768

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6766
  %11 = icmp ule i32 %10, %0, !dbg !6766
  %12 = icmp ugt i32 %8, %0, !dbg !6766
  %13 = and i1 %12, %11, !dbg !6766
  %14 = icmp ugt i32 %8, %1, !dbg !6766
  %15 = and i1 %14, %13, !dbg !6766
  br i1 %15, label %18, label %19, !dbg !6766

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6766
  br i1 %17, label %18, label %19, !dbg !6768

18:                                               ; preds = %9, %16
  br label %19, !dbg !6769

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6761
  ret i32 %20, !dbg !6771
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #14 !dbg !6772 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6776, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata i8* %1, metadata !6777, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6778, metadata !DIExpression()), !dbg !6779
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6780
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #38, !dbg !6781
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #33, !dbg !6782, !srcloc !6783
  unreachable, !dbg !6784
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__aeabi_atexit(i8* noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !6785 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6790, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !6791, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i8* %2, metadata !6792, metadata !DIExpression()), !dbg !6793
  %4 = tail call i32 @__cxa_atexit(void (i8*)* noundef %1, i8* noundef %0, i8* noundef %2) #38, !dbg !6794
  ret i32 %4, !dbg !6795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6796 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6814, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i32 %1, metadata !6815, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i32 %2, metadata !6816, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6817, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i32 0, metadata !6818, metadata !DIExpression()), !dbg !6824
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6825
  %9 = and i32 %8, 511, !dbg !6826
  call void @llvm.dbg.value(metadata i32 %9, metadata !6819, metadata !DIExpression()), !dbg !6824
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #33, !dbg !6827
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #33, !dbg !6827
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6828
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #33, !dbg !6828
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6823, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata i32 0, metadata !6830, metadata !DIExpression()) #33, !dbg !6833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #33, !dbg !6835, !srcloc !6836
  call void @llvm.dbg.value(metadata i8* %6, metadata !6821, metadata !DIExpression(DW_OP_deref)), !dbg !6824
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #37, !dbg !6837
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6822, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i8* %5, metadata !6820, metadata !DIExpression(DW_OP_deref)), !dbg !6824
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #37, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %12, metadata !6818, metadata !DIExpression()), !dbg !6824
  %13 = load i8, i8* %5, align 1, !dbg !6839, !range !6841
  call void @llvm.dbg.value(metadata i8 %13, metadata !6820, metadata !DIExpression()), !dbg !6824
  %14 = icmp eq i8 %13, 0, !dbg !6839
  br i1 %14, label %15, label %32, !dbg !6842

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6843
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #38, !dbg !6844
  %18 = load i8, i8* %6, align 1, !dbg !6845, !range !6841
  call void @llvm.dbg.value(metadata i8 %18, metadata !6821, metadata !DIExpression()), !dbg !6824
  %19 = icmp eq i8 %18, 0, !dbg !6845
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6847
  %21 = load i32, i32* %20, align 4, !dbg !6847
  br i1 %19, label %27, label %22, !dbg !6848

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6849
  %24 = icmp eq i32 %23, 0, !dbg !6852
  br i1 %24, label %25, label %31, !dbg !6853

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6854
  br label %29, !dbg !6856

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6857
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6847
  br label %31, !dbg !6859

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #38, !dbg !6859
  br label %32, !dbg !6860

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #33, !dbg !6860
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #33, !dbg !6860
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #33, !dbg !6860
  ret void, !dbg !6860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #10 !dbg !6861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6866, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 %1, metadata !6867, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 %2, metadata !6868, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8* %3, metadata !6869, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8 0, metadata !6870, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6871, metadata !DIExpression()), !dbg !6872
  store i8 0, i8* %3, align 1, !dbg !6873
  %5 = icmp ult i32 %2, -16777216, !dbg !6874
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6876
  br i1 %8, label %16, label %9, !dbg !6876

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6877
  %11 = icmp eq i32 %10, 0, !dbg !6877
  br i1 %11, label %12, label %13, !dbg !6879

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6871, metadata !DIExpression()), !dbg !6872
  store i8 1, i8* %3, align 1, !dbg !6882
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6872
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6871, metadata !DIExpression()), !dbg !6872
  br label %16, !dbg !6885

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6872
  ret %struct.__esf* %17, !dbg !6886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6887 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6891, metadata !DIExpression()), !dbg !6895
  call void @llvm.dbg.value(metadata i32 %1, metadata !6892, metadata !DIExpression()), !dbg !6895
  call void @llvm.dbg.value(metadata i8* %2, metadata !6893, metadata !DIExpression()), !dbg !6895
  call void @llvm.dbg.value(metadata i32 0, metadata !6894, metadata !DIExpression()), !dbg !6895
  store i8 0, i8* %2, align 1, !dbg !6896
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6897

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #37, !dbg !6898
  call void @llvm.dbg.value(metadata i32 %5, metadata !6894, metadata !DIExpression()), !dbg !6895
  br label %11, !dbg !6900

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #37, !dbg !6901
  call void @llvm.dbg.value(metadata i32 %7, metadata !6894, metadata !DIExpression()), !dbg !6895
  br label %11, !dbg !6902

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #37, !dbg !6903
  call void @llvm.dbg.value(metadata i32 0, metadata !6894, metadata !DIExpression()), !dbg !6895
  br label %11, !dbg !6904

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #37, !dbg !6905
  call void @llvm.dbg.value(metadata i32 0, metadata !6894, metadata !DIExpression()), !dbg !6895
  br label %11, !dbg !6906

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #37, !dbg !6907
  br label %11, !dbg !6908

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6910 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6914, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.value(metadata i8* %1, metadata !6915, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.value(metadata i32 0, metadata !6916, metadata !DIExpression()), !dbg !6917
  store i8 0, i8* %1, align 1, !dbg !6918
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6919
  %4 = and i32 %3, 2, !dbg !6921
  %5 = icmp eq i32 %4, 0, !dbg !6922
  br i1 %5, label %6, label %33, !dbg !6923

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6924
  %8 = icmp sgt i32 %7, -1, !dbg !6926
  br i1 %8, label %9, label %33, !dbg !6927

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6928
  %11 = and i32 %10, 1073741824, !dbg !6930
  %12 = icmp eq i32 %11, 0, !dbg !6931
  br i1 %12, label %33, label %13, !dbg !6932

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #37, !dbg !6933
  br i1 %14, label %15, label %18, !dbg !6936

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6937
  %17 = load i32, i32* %16, align 4, !dbg !6937
  call void @llvm.dbg.value(metadata i32 %17, metadata !6916, metadata !DIExpression()), !dbg !6917
  br label %33, !dbg !6939

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6940
  %20 = and i32 %19, 255, !dbg !6942
  %21 = icmp eq i32 %20, 0, !dbg !6943
  br i1 %21, label %24, label %22, !dbg !6944

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #37, !dbg !6945
  call void @llvm.dbg.value(metadata i32 %23, metadata !6916, metadata !DIExpression()), !dbg !6917
  br label %33, !dbg !6947

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6948
  %26 = and i32 %25, 65280, !dbg !6950
  %27 = icmp eq i32 %26, 0, !dbg !6951
  br i1 %27, label %29, label %28, !dbg !6952

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #37, !dbg !6953
  call void @llvm.dbg.value(metadata i32 0, metadata !6916, metadata !DIExpression()), !dbg !6917
  br label %33, !dbg !6955

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6956
  %31 = icmp ult i32 %30, 65536, !dbg !6958
  br i1 %31, label %33, label %32, !dbg !6959

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #37, !dbg !6960
  call void @llvm.dbg.value(metadata i32 0, metadata !6916, metadata !DIExpression()), !dbg !6917
  br label %33, !dbg !6962

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6917
  call void @llvm.dbg.value(metadata i32 %34, metadata !6916, metadata !DIExpression()), !dbg !6917
  ret i32 %34, !dbg !6963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6964 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6966, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.value(metadata i32 %1, metadata !6967, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.value(metadata i8* %2, metadata !6968, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.value(metadata i32 0, metadata !6969, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.value(metadata i32 -22, metadata !6970, metadata !DIExpression()), !dbg !6979
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6982
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6984
  %7 = and i32 %6, 2, !dbg !6985
  %8 = icmp eq i32 %7, 0, !dbg !6986
  br i1 %8, label %19, label %9, !dbg !6987

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6988
  call void @llvm.dbg.value(metadata i32 %10, metadata !6971, metadata !DIExpression()), !dbg !6989
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6990
  %12 = and i32 %11, 128, !dbg !6992
  %13 = icmp eq i32 %12, 0, !dbg !6993
  br i1 %13, label %19, label %14, !dbg !6994

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6970, metadata !DIExpression()), !dbg !6979
  %15 = icmp eq i32 %1, 0, !dbg !6995
  br i1 %15, label %19, label %16, !dbg !6998

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %18 = and i32 %17, -129, !dbg !6999
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  br label %19, !dbg !7001

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6979
  call void @llvm.dbg.value(metadata i32 %20, metadata !6970, metadata !DIExpression()), !dbg !6979
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7002
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7004
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7006
  %24 = and i32 %23, 16, !dbg !7007
  %25 = icmp eq i32 %24, 0, !dbg !7007
  br i1 %25, label %26, label %30, !dbg !7008

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  %28 = and i32 %27, 2, !dbg !7010
  %29 = icmp eq i32 %28, 0, !dbg !7010
  br i1 %29, label %39, label %30, !dbg !7011

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7012
  %32 = and i32 %31, 2048, !dbg !7013
  %33 = icmp eq i32 %32, 0, !dbg !7013
  br i1 %33, label %39, label %34, !dbg !7014

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7015
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #38, !dbg !7016
  call void @llvm.dbg.value(metadata i32 %36, metadata !6974, metadata !DIExpression()), !dbg !7017
  %37 = icmp eq i32 %36, 0, !dbg !7018
  br i1 %37, label %39, label %38, !dbg !7020

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7021, metadata !DIExpression()) #33, !dbg !7024
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #33, !dbg !7027, !srcloc !7028
  call void @llvm.dbg.value(metadata i32 2, metadata !6969, metadata !DIExpression()), !dbg !6979
  br label %39, !dbg !7029

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6979
  call void @llvm.dbg.value(metadata i32 %40, metadata !6969, metadata !DIExpression()), !dbg !6979
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  %42 = and i32 %41, 32, !dbg !7032
  %43 = icmp eq i32 %42, 0, !dbg !7033
  br i1 %43, label %47, label %44, !dbg !7034

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7035
  %46 = and i32 %45, -8193, !dbg !7035
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7035
  br label %47, !dbg !7037

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7038
  %49 = or i32 %48, 255, !dbg !7038
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7038
  store i8 0, i8* %2, align 1, !dbg !7039
  ret i32 %40, !dbg !7040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #21 !dbg !7041 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7045, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.value(metadata i32 %0, metadata !7046, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.value(metadata i8* %1, metadata !7047, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.value(metadata i32 0, metadata !7048, metadata !DIExpression()), !dbg !7052
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7053
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7055
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7057
  %6 = and i32 %5, 512, !dbg !7058
  %7 = icmp eq i32 %6, 0, !dbg !7058
  br i1 %7, label %18, label %8, !dbg !7059

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7060
  call void @llvm.dbg.value(metadata i32 %9, metadata !7049, metadata !DIExpression()), !dbg !7061
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7062
  %11 = and i32 %10, 32768, !dbg !7064
  %12 = icmp ne i32 %11, 0, !dbg !7065
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7066
  br i1 %14, label %15, label %18, !dbg !7066

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7067
  %17 = and i32 %16, -32769, !dbg !7067
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7067
  br label %18, !dbg !7071

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7072
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7074
  %21 = and i32 %20, 256, !dbg !7076
  %22 = icmp eq i32 %21, 0, !dbg !7077
  br i1 %22, label %23, label %25, !dbg !7078

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7079
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7081
  %27 = or i32 %26, 65280, !dbg !7081
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7081
  store i8 0, i8* %1, align 1, !dbg !7082
  ret void, !dbg !7083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #21 !dbg !7084 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7090, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.value(metadata i32 0, metadata !7091, metadata !DIExpression()), !dbg !7092
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7093
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7095
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7097
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7099
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7101
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7103
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7105
  %8 = or i32 %7, -65536, !dbg !7105
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7105
  ret void, !dbg !7106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !7107 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7111, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.value(metadata i8* %0, metadata !7112, metadata !DIExpression()), !dbg !7113
  store i8 0, i8* %0, align 1, !dbg !7114
  ret void, !dbg !7115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7116 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7120, metadata !DIExpression()), !dbg !7123
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7124
  %3 = load i32, i32* %2, align 4, !dbg !7124
  %4 = inttoptr i32 %3 to i16*, !dbg !7125
  call void @llvm.dbg.value(metadata i16* %4, metadata !7121, metadata !DIExpression()), !dbg !7123
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7126
  %6 = or i32 %5, 256, !dbg !7126
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7126
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !7127, !srcloc !7130
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !7131, !srcloc !7134
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7135
  %8 = load i16, i16* %7, align 2, !dbg !7136
  call void @llvm.dbg.value(metadata i16 %8, metadata !7122, metadata !DIExpression()), !dbg !7123
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7137
  %10 = and i32 %9, -257, !dbg !7137
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7137
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !7138, !srcloc !7130
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !7140, !srcloc !7134
  %11 = icmp eq i16 %8, -8446, !dbg !7142
  ret i1 %11, !dbg !7144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #21 !dbg !7145 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7146
  %2 = or i32 %1, 16, !dbg !7146
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7146
  ret void, !dbg !7147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #21 !dbg !7148 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7151, metadata !DIExpression()), !dbg !7152
  br label %1, !dbg !7153

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7151, metadata !DIExpression()), !dbg !7152
  tail call fastcc void @__NVIC_SetPriority.17(i32 noundef %2) #37, !dbg !7155
  %3 = add nuw nsw i32 %2, 1, !dbg !7158
  call void @llvm.dbg.value(metadata i32 %3, metadata !7151, metadata !DIExpression()), !dbg !7152
  %4 = icmp eq i32 %3, 97, !dbg !7159
  br i1 %4, label %5, label %1, !dbg !7153, !llvm.loop !7160

5:                                                ; preds = %1
  ret void, !dbg !7162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.17(i32 noundef %0) unnamed_addr #21 !dbg !7163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7165, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 1, metadata !7166, metadata !DIExpression()), !dbg !7167
  %2 = and i32 %0, 15, !dbg !7168
  %3 = add nsw i32 %2, -4, !dbg !7168
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7168
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7168
  %6 = icmp slt i32 %0, 0, !dbg !7168
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7168
  store volatile i8 16, i8* %7, align 1, !dbg !7169
  ret void, !dbg !7171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7172 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7280, metadata !DIExpression()), !dbg !7281
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7282
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7284
  br i1 %3, label %4, label %12, !dbg !7285

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #33, !dbg !7286, !srcloc !7298
  call void @llvm.dbg.value(metadata i32 %5, metadata !7289, metadata !DIExpression()) #33, !dbg !7299
  %6 = icmp eq i32 %5, 0, !dbg !7300
  br i1 %6, label %12, label %7, !dbg !7301

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7302
  %9 = or i32 %8, 268435456, !dbg !7302
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7302
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7304
  %11 = and i32 %10, -32769, !dbg !7304
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7304
  br label %12, !dbg !7305

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #38, !dbg !7306
  ret void, !dbg !7307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7308 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #38, !dbg !7309
  ret void, !dbg !7310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !492, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i8 0, metadata !493, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.value(metadata i32 64, metadata !495, metadata !DIExpression()), !dbg !7311
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7312
  %3 = load i32, i32* %2, align 4, !dbg !7312
  %4 = add i32 %3, -64, !dbg !7314
  call void @llvm.dbg.value(metadata i32 %4, metadata !494, metadata !DIExpression()), !dbg !7311
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7315
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7316
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7317
  call void @llvm.dbg.value(metadata i8 1, metadata !493, metadata !DIExpression()), !dbg !7311
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #38, !dbg !7318
  ret void, !dbg !7319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7320 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7321
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #33, !dbg !7322, !srcloc !7325
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #33, !dbg !7326, !srcloc !7329
  ret void, !dbg !7330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7331 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #33, !dbg !7332, !srcloc !7335
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7336
  ret void, !dbg !7337
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #25 !dbg !7338 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7353, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i8 %1, metadata !7354, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 %2, metadata !7355, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 %3, metadata !7356, metadata !DIExpression()), !dbg !7357
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #37, !dbg !7358
  ret void, !dbg !7360
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #25 !dbg !7361 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7366, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i8 %1, metadata !7367, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 undef, metadata !7368, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 undef, metadata !7369, metadata !DIExpression()), !dbg !7371
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7372
  call void @llvm.dbg.value(metadata i8 %3, metadata !7370, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7371
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #37, !dbg !7373
  call void @llvm.dbg.value(metadata i32 %4, metadata !7370, metadata !DIExpression()), !dbg !7371
  %5 = trunc i32 %4 to i8, !dbg !7374
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7375
  ret void, !dbg !7376
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #25 !dbg !7377 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7381, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i8 %1, metadata !7382, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i8 %2, metadata !7383, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i1 %3, metadata !7384, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7387
  %5 = zext i8 %2 to i32, !dbg !7388
  call void @llvm.dbg.value(metadata i32 %5, metadata !7386, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 0, metadata !7385, metadata !DIExpression()), !dbg !7387
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7386, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 0, metadata !7385, metadata !DIExpression()), !dbg !7387
  %7 = icmp eq i8 %1, 0, !dbg !7389
  br i1 %7, label %29, label %8, !dbg !7392

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7386, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 %10, metadata !7385, metadata !DIExpression()), !dbg !7387
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7393
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7396
  %13 = load i32, i32* %12, align 4, !dbg !7396
  %14 = icmp eq i32 %13, 0, !dbg !7397
  br i1 %14, label %25, label %15, !dbg !7398

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7399

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #37, !dbg !7401
  %18 = icmp eq i32 %17, 0, !dbg !7401
  br i1 %18, label %29, label %19, !dbg !7402

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7403
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #37, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %21, metadata !7386, metadata !DIExpression()), !dbg !7387
  %22 = icmp eq i32 %21, -22, !dbg !7405
  br i1 %22, label %29, label %23, !dbg !7407

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %24, metadata !7386, metadata !DIExpression()), !dbg !7387
  br label %25, !dbg !7409

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7387
  call void @llvm.dbg.value(metadata i32 %26, metadata !7386, metadata !DIExpression()), !dbg !7387
  %27 = add nuw nsw i32 %10, 1, !dbg !7410
  call void @llvm.dbg.value(metadata i32 %27, metadata !7385, metadata !DIExpression()), !dbg !7387
  %28 = icmp eq i32 %27, %6, !dbg !7389
  br i1 %28, label %29, label %8, !dbg !7392, !llvm.loop !7411

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7387
  ret i32 %30, !dbg !7413
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #26 !dbg !7414 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7418, metadata !DIExpression()), !dbg !7420
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7421
  %3 = load i32, i32* %2, align 4, !dbg !7421
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7422, !range !4283
  %5 = icmp ult i32 %4, 2, !dbg !7422
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7423
  br i1 %7, label %8, label %15, !dbg !7423

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7424
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7425
  %11 = load i32, i32* %10, align 4, !dbg !7425
  %12 = and i32 %11, %9, !dbg !7426
  %13 = icmp eq i32 %12, 0, !dbg !7427
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7419, metadata !DIExpression()), !dbg !7420
  ret i32 %16, !dbg !7428
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #25 !dbg !7429 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7433, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7434, metadata !DIExpression()), !dbg !7436
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7437
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #33, !dbg !7437
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7435, metadata !DIExpression()), !dbg !7438
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7439
  %6 = load i32, i32* %5, align 4, !dbg !7439
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7440
  store i32 %6, i32* %7, align 4, !dbg !7441
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7442
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7443
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7444
  %11 = load i32, i32* %10, align 4, !dbg !7444
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #37, !dbg !7445
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #37, !dbg !7446
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #33, !dbg !7447
  ret i32 %12, !dbg !7448
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #16 !dbg !7449 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7456, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7457, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 undef, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 %2, metadata !7459, metadata !DIExpression()), !dbg !7460
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7461
  %5 = load i32, i32* %4, align 4, !dbg !7461
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #37, !dbg !7462
  %7 = or i32 %6, %5, !dbg !7463
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7464
  store i32 %7, i32* %8, align 4, !dbg !7465
  ret void, !dbg !7466
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #21 !dbg !7467 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7471, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7472, metadata !DIExpression()), !dbg !7473
  %3 = zext i8 %0 to i32, !dbg !7474
  %4 = icmp ugt i8 %0, 7, !dbg !7476
  br i1 %4, label %6, label %5, !dbg !7477

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #37, !dbg !7478
  br label %6, !dbg !7479

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7473
  ret i32 %7, !dbg !7480
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #21 !dbg !7481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7485, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7486, metadata !DIExpression()), !dbg !7487
  tail call fastcc void @set_region_number(i32 noundef %0) #37, !dbg !7488
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7489
  %4 = load i32, i32* %3, align 4, !dbg !7489
  %5 = and i32 %4, -32, !dbg !7490
  %6 = or i32 %5, %0, !dbg !7491
  %7 = or i32 %6, 16, !dbg !7491
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7492
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7493
  %9 = load i32, i32* %8, align 4, !dbg !7493
  %10 = or i32 %9, 1, !dbg !7494
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7495
  ret void, !dbg !7496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #21 !dbg !7497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7500, metadata !DIExpression()), !dbg !7501
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7502
  ret void, !dbg !7503
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #15 !dbg !7504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7508, metadata !DIExpression()), !dbg !7509
  %2 = icmp ult i32 %0, 33, !dbg !7510
  br i1 %2, label %11, label %3, !dbg !7512

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7513
  br i1 %4, label %11, label %5, !dbg !7515

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7516
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7517, !range !4283
  %8 = mul nsw i32 %7, -2, !dbg !7518
  %9 = add nsw i32 %8, 62, !dbg !7518
  %10 = and i32 %9, 62, !dbg !7519
  br label %11, !dbg !7520

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7509
  ret i32 %12, !dbg !7521
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #4

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #25 !dbg !7522 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7526, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata i8 %1, metadata !7527, metadata !DIExpression()), !dbg !7528
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #37, !dbg !7529
  ret void, !dbg !7531
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #25 !dbg !7532 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7536, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i8 %1, metadata !7537, metadata !DIExpression()), !dbg !7543
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7544
  call void @llvm.dbg.value(metadata i8 %3, metadata !7538, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7543
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #37, !dbg !7545
  call void @llvm.dbg.value(metadata i32 %4, metadata !7538, metadata !DIExpression()), !dbg !7543
  %5 = icmp ne i32 %4, -22, !dbg !7546
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7547
  call void @llvm.dbg.value(metadata i32 %4, metadata !7539, metadata !DIExpression()), !dbg !7548
  br i1 %7, label %8, label %12, !dbg !7547

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7539, metadata !DIExpression()), !dbg !7548
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #37, !dbg !7549
  %10 = add i32 %9, 1, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %10, metadata !7539, metadata !DIExpression()), !dbg !7548
  %11 = icmp eq i32 %10, 8, !dbg !7553
  br i1 %11, label %12, label %8, !dbg !7554, !llvm.loop !7555

12:                                               ; preds = %8, %2
  ret void, !dbg !7557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #21 !dbg !7558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7561, metadata !DIExpression()), !dbg !7562
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7563
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7564
  ret void, !dbg !7565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7566 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7569
  %2 = icmp ugt i32 %1, 8, !dbg !7571
  br i1 %2, label %14, label %3, !dbg !7572

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #37, !dbg !7573
  call void @llvm.dbg.value(metadata i32 0, metadata !7568, metadata !DIExpression()), !dbg !7574
  %4 = icmp eq i32 %1, 0, !dbg !7575
  br i1 %4, label %12, label %5, !dbg !7578

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7578

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7568, metadata !DIExpression()), !dbg !7574
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7579
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #37, !dbg !7581
  %10 = add nuw i32 %8, 1, !dbg !7582
  call void @llvm.dbg.value(metadata i32 %10, metadata !7568, metadata !DIExpression()), !dbg !7574
  %11 = icmp eq i32 %10, %1, !dbg !7575
  br i1 %11, label %12, label %7, !dbg !7578, !llvm.loop !7583

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7585
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7586
  tail call void @arm_core_mpu_enable() #37, !dbg !7587
  br label %14, !dbg !7588

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7574
  ret i32 %15, !dbg !7589
}

; Function Attrs: noinline nounwind optsize
define internal i32 @malloc_prepare(%struct.device* nocapture noundef readnone %0) #1 !dbg !7590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7592, metadata !DIExpression()), !dbg !7593
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @z_malloc_heap, i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @z_malloc_heap_mem, i32 0, i32 0), i32 noundef 128) #38, !dbg !7594
  tail call fastcc void @sys_mutex_init() #37, !dbg !7595
  ret i32 0, !dbg !7596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_mutex_init() unnamed_addr #1 !dbg !7597 {
  call void @llvm.dbg.value(metadata %struct.sys_mutex* @z_malloc_heap_mutex, metadata !7602, metadata !DIExpression()), !dbg !7603
  tail call fastcc void @k_mutex_init() #37, !dbg !7604
  ret void, !dbg !7605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_init() unnamed_addr #1 !dbg !7606 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* getelementptr inbounds (%struct.sys_mutex, %struct.sys_mutex* @z_malloc_heap_mutex, i32 0, i32 0), metadata !7611, metadata !DIExpression()), !dbg !7612
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !7613, !srcloc !7615
  %1 = tail call i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef getelementptr inbounds (%struct.sys_mutex, %struct.sys_mutex* @z_malloc_heap_mutex, i32 0, i32 0)) #38, !dbg !7616
  ret void, !dbg !7617
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !7618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7620, metadata !DIExpression()), !dbg !7623
  tail call fastcc void @sys_mutex_lock() #37, !dbg !7624
  call void @llvm.dbg.value(metadata i32 undef, metadata !7621, metadata !DIExpression()), !dbg !7623
  %2 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull @z_malloc_heap, i32 noundef 8, i32 noundef %0) #38, !dbg !7625
  call void @llvm.dbg.value(metadata i8* %2, metadata !7622, metadata !DIExpression()), !dbg !7623
  %3 = icmp eq i8* %2, null, !dbg !7626
  %4 = icmp ne i32 %0, 0
  %5 = and i1 %4, %3, !dbg !7628
  br i1 %5, label %6, label %8, !dbg !7628

6:                                                ; preds = %1
  %7 = tail call fastcc i32* @z_errno() #37, !dbg !7629
  store i32 12, i32* %7, align 4, !dbg !7631
  br label %8, !dbg !7632

8:                                                ; preds = %6, %1
  tail call fastcc void @sys_mutex_unlock() #37, !dbg !7633
  ret i8* %2, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_mutex_lock() unnamed_addr #1 !dbg !7635 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata %struct.sys_mutex* @z_malloc_heap_mutex, metadata !7643, metadata !DIExpression()), !dbg !7645
  tail call fastcc void @k_mutex_lock() #37, !dbg !7646
  ret void, !dbg !7647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !7648 {
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !7652, !srcloc !7654
  %1 = tail call i32* @z_impl_z_errno() #38, !dbg !7655
  ret i32* %1, !dbg !7656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_mutex_unlock() unnamed_addr #1 !dbg !7657 {
  call void @llvm.dbg.value(metadata %struct.sys_mutex* @z_malloc_heap_mutex, metadata !7661, metadata !DIExpression()), !dbg !7662
  tail call fastcc void @k_mutex_unlock() #37, !dbg !7663
  ret void, !dbg !7664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !7665 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* getelementptr inbounds (%struct.sys_mutex, %struct.sys_mutex* @z_malloc_heap_mutex, i32 0, i32 0), metadata !7667, metadata !DIExpression()), !dbg !7668
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !7669, !srcloc !7671
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef getelementptr inbounds (%struct.sys_mutex, %struct.sys_mutex* @z_malloc_heap_mutex, i32 0, i32 0)) #38, !dbg !7672
  ret void, !dbg !7673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !7674 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7679, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata %struct.k_mutex* getelementptr inbounds (%struct.sys_mutex, %struct.sys_mutex* @z_malloc_heap_mutex, i32 0, i32 0), metadata !7678, metadata !DIExpression()), !dbg !7680
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !7681, !srcloc !7683
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef getelementptr inbounds (%struct.sys_mutex, %struct.sys_mutex* @z_malloc_heap_mutex, i32 0, i32 0), [1 x i64] [i64 -1]) #38, !dbg !7684
  ret void, !dbg !7685
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @realloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !7686 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7690, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %1, metadata !7691, metadata !DIExpression()), !dbg !7694
  tail call fastcc void @sys_mutex_lock() #37, !dbg !7695
  call void @llvm.dbg.value(metadata i32 undef, metadata !7692, metadata !DIExpression()), !dbg !7694
  %3 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @z_malloc_heap, i8* noundef %0, i32 noundef 8, i32 noundef %1) #38, !dbg !7696
  call void @llvm.dbg.value(metadata i8* %3, metadata !7693, metadata !DIExpression()), !dbg !7694
  %4 = icmp eq i8* %3, null, !dbg !7697
  %5 = icmp ne i32 %1, 0
  %6 = and i1 %5, %4, !dbg !7699
  br i1 %6, label %7, label %9, !dbg !7699

7:                                                ; preds = %2
  %8 = tail call fastcc i32* @z_errno() #37, !dbg !7700
  store i32 12, i32* %8, align 4, !dbg !7702
  br label %9, !dbg !7703

9:                                                ; preds = %7, %2
  tail call fastcc void @sys_mutex_unlock() #37, !dbg !7704
  ret i8* %3, !dbg !7705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free(i8* noundef %0) local_unnamed_addr #1 !dbg !7706 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7708, metadata !DIExpression()), !dbg !7710
  tail call fastcc void @sys_mutex_lock() #37, !dbg !7711
  call void @llvm.dbg.value(metadata i32 undef, metadata !7709, metadata !DIExpression()), !dbg !7710
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @z_malloc_heap, i8* noundef %0) #38, !dbg !7712
  tail call fastcc void @sys_mutex_unlock() #37, !dbg !7713
  ret void, !dbg !7714
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !7715 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %1, metadata !7720, metadata !DIExpression()), !dbg !7722
  store i32 %1, i32* %3, align 4
  call void @llvm.dbg.value(metadata i32* %3, metadata !7720, metadata !DIExpression(DW_OP_deref)), !dbg !7722
  %4 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #37, !dbg !7723
  br i1 %4, label %5, label %7, !dbg !7725

5:                                                ; preds = %2
  %6 = tail call fastcc i32* @z_errno() #37, !dbg !7726
  store i32 12, i32* %6, align 4, !dbg !7728
  br label %13, !dbg !7729

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !7730
  call void @llvm.dbg.value(metadata i32 %8, metadata !7720, metadata !DIExpression()), !dbg !7722
  %9 = tail call i8* @malloc(i32 noundef %8) #37, !dbg !7731
  call void @llvm.dbg.value(metadata i8* %9, metadata !7721, metadata !DIExpression()), !dbg !7722
  %10 = icmp eq i8* %9, null, !dbg !7732
  br i1 %10, label %13, label %11, !dbg !7734

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %8, metadata !7720, metadata !DIExpression()), !dbg !7722
  %12 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef %8) #38, !dbg !7735
  br label %13, !dbg !7737

13:                                               ; preds = %7, %11, %5
  %14 = phi i8* [ null, %5 ], [ %9, %11 ], [ null, %7 ], !dbg !7722
  ret i8* %14, !dbg !7738
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #27 !dbg !7739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7744, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %1, metadata !7745, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32* %2, metadata !7746, metadata !DIExpression()), !dbg !7747
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !7748
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !7748
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !7748
  store i32 %6, i32* %2, align 4, !dbg !7748
  ret i1 %5, !dbg !7749
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #4

; Function Attrs: noinline nounwind optsize
define dso_local i8* @reallocarray(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7750 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7754, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32 %1, metadata !7755, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32 %2, metadata !7756, metadata !DIExpression()), !dbg !7757
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !7756, metadata !DIExpression(DW_OP_deref)), !dbg !7757
  %5 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #37, !dbg !7758
  br i1 %5, label %6, label %8, !dbg !7760

6:                                                ; preds = %3
  %7 = tail call fastcc i32* @z_errno() #37, !dbg !7761
  store i32 12, i32* %7, align 4, !dbg !7763
  br label %11, !dbg !7764

8:                                                ; preds = %3
  %9 = load i32, i32* %4, align 4, !dbg !7765
  call void @llvm.dbg.value(metadata i32 %9, metadata !7756, metadata !DIExpression()), !dbg !7757
  %10 = tail call i8* @realloc(i8* noundef %0, i32 noundef %9) #37, !dbg !7766
  br label %11, !dbg !7767

11:                                               ; preds = %8, %6
  %12 = phi i8* [ null, %6 ], [ %10, %8 ], !dbg !7757
  ret i8* %12, !dbg !7768
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #20 !dbg !7769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %1, metadata !7777, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %0, metadata !7778, metadata !DIExpression()), !dbg !7779
  %3 = load i8, i8* %1, align 1, !dbg !7780
  %4 = icmp eq i8 %3, 0, !dbg !7781
  br i1 %4, label %13, label %5, !dbg !7782

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %8, metadata !7777, metadata !DIExpression()), !dbg !7779
  store i8 %6, i8* %7, align 1, !dbg !7783
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7785
  call void @llvm.dbg.value(metadata i8* %9, metadata !7776, metadata !DIExpression()), !dbg !7779
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7786
  call void @llvm.dbg.value(metadata i8* %10, metadata !7777, metadata !DIExpression()), !dbg !7779
  %11 = load i8, i8* %10, align 1, !dbg !7780
  %12 = icmp eq i8 %11, 0, !dbg !7781
  br i1 %12, label %13, label %5, !dbg !7782, !llvm.loop !7787

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7789
  ret i8* %0, !dbg !7790
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7791 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7795, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i8* %1, metadata !7796, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i32 %2, metadata !7797, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i8* %0, metadata !7798, metadata !DIExpression()), !dbg !7799
  %4 = icmp eq i32 %2, 0, !dbg !7800
  br i1 %4, label %22, label %5, !dbg !7801

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7795, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i32 %7, metadata !7797, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i8* %8, metadata !7796, metadata !DIExpression()), !dbg !7799
  %9 = load i8, i8* %8, align 1, !dbg !7802
  %10 = icmp eq i8 %9, 0, !dbg !7803
  br i1 %10, label %16, label %11, !dbg !7804

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7805
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7807
  call void @llvm.dbg.value(metadata i8* %12, metadata !7796, metadata !DIExpression()), !dbg !7799
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7808
  call void @llvm.dbg.value(metadata i8* %13, metadata !7795, metadata !DIExpression()), !dbg !7799
  %14 = add i32 %7, -1, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %14, metadata !7797, metadata !DIExpression()), !dbg !7799
  %15 = icmp eq i32 %14, 0, !dbg !7800
  br i1 %15, label %22, label %5, !dbg !7801, !llvm.loop !7810

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7795, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.value(metadata i32 %18, metadata !7797, metadata !DIExpression()), !dbg !7799
  store i8 0, i8* %17, align 1, !dbg !7812
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7814
  call void @llvm.dbg.value(metadata i8* %19, metadata !7795, metadata !DIExpression()), !dbg !7799
  %20 = add i32 %18, -1, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %20, metadata !7797, metadata !DIExpression()), !dbg !7799
  %21 = icmp eq i32 %20, 0, !dbg !7816
  br i1 %21, label %22, label %16, !dbg !7817, !llvm.loop !7818

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7820
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #28 !dbg !7821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7825, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %1, metadata !7826, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %1, metadata !7827, metadata !DIExpression()), !dbg !7828
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7829

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7825, metadata !DIExpression()), !dbg !7828
  %6 = load i8, i8* %5, align 1, !dbg !7830
  %7 = icmp eq i8 %6, %3, !dbg !7831
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7832
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7833
  call void @llvm.dbg.value(metadata i8* %10, metadata !7825, metadata !DIExpression()), !dbg !7828
  br i1 %9, label %11, label %4, !dbg !7832, !llvm.loop !7835

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7837
  ret i8* %12, !dbg !7838
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #28 !dbg !7839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7841, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* null, metadata !7843, metadata !DIExpression()), !dbg !7844
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7845

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7844
  call void @llvm.dbg.value(metadata i8* %6, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* %5, metadata !7841, metadata !DIExpression()), !dbg !7844
  %7 = load i8, i8* %5, align 1, !dbg !7846
  %8 = icmp eq i8 %7, %3, !dbg !7849
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7850
  call void @llvm.dbg.value(metadata i8* %9, metadata !7843, metadata !DIExpression()), !dbg !7844
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7851
  call void @llvm.dbg.value(metadata i8* %10, metadata !7841, metadata !DIExpression()), !dbg !7844
  %11 = icmp eq i8 %7, 0, !dbg !7852
  br i1 %11, label %12, label %4, !dbg !7852, !llvm.loop !7853

12:                                               ; preds = %4
  ret i8* %9, !dbg !7855
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #28 !dbg !7856 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7860, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32 0, metadata !7861, metadata !DIExpression()), !dbg !7862
  %2 = load i8, i8* %0, align 1, !dbg !7863
  %3 = icmp eq i8 %2, 0, !dbg !7864
  br i1 %3, label %11, label %4, !dbg !7865

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7861, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %6, metadata !7860, metadata !DIExpression()), !dbg !7862
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7866
  call void @llvm.dbg.value(metadata i8* %7, metadata !7860, metadata !DIExpression()), !dbg !7862
  %8 = add i32 %5, 1, !dbg !7868
  call void @llvm.dbg.value(metadata i32 %8, metadata !7861, metadata !DIExpression()), !dbg !7862
  %9 = load i8, i8* %7, align 1, !dbg !7863
  %10 = icmp eq i8 %9, 0, !dbg !7864
  br i1 %10, label %11, label %4, !dbg !7865, !llvm.loop !7869

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7862
  ret i32 %12, !dbg !7871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #28 !dbg !7872 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7876, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 %1, metadata !7877, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 0, metadata !7878, metadata !DIExpression()), !dbg !7879
  %3 = load i8, i8* %0, align 1, !dbg !7880
  %4 = icmp ne i8 %3, 0, !dbg !7881
  %5 = icmp ne i32 %1, 0, !dbg !7882
  %6 = and i1 %4, %5, !dbg !7882
  br i1 %6, label %7, label %16, !dbg !7883

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i8* %9, metadata !7876, metadata !DIExpression()), !dbg !7879
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7884
  call void @llvm.dbg.value(metadata i8* %10, metadata !7876, metadata !DIExpression()), !dbg !7879
  %11 = add nuw i32 %8, 1, !dbg !7886
  call void @llvm.dbg.value(metadata i32 %11, metadata !7878, metadata !DIExpression()), !dbg !7879
  %12 = load i8, i8* %10, align 1, !dbg !7880
  %13 = icmp ne i8 %12, 0, !dbg !7881
  %14 = icmp ult i32 %11, %1, !dbg !7882
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7882
  br i1 %15, label %7, label %16, !dbg !7883, !llvm.loop !7887

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7879
  ret i32 %17, !dbg !7889
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #28 !dbg !7890 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7894, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i8* %1, metadata !7895, metadata !DIExpression()), !dbg !7896
  %3 = load i8, i8* %0, align 1, !dbg !7897
  %4 = load i8, i8* %1, align 1, !dbg !7898
  %5 = icmp ne i8 %3, %4, !dbg !7899
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7900
  br i1 %7, label %18, label %8, !dbg !7900

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7895, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i8* %10, metadata !7894, metadata !DIExpression()), !dbg !7896
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7901
  call void @llvm.dbg.value(metadata i8* %11, metadata !7894, metadata !DIExpression()), !dbg !7896
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7903
  call void @llvm.dbg.value(metadata i8* %12, metadata !7895, metadata !DIExpression()), !dbg !7896
  %13 = load i8, i8* %11, align 1, !dbg !7897
  %14 = load i8, i8* %12, align 1, !dbg !7898
  %15 = icmp ne i8 %13, %14, !dbg !7899
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7900
  br i1 %17, label %18, label %8, !dbg !7900, !llvm.loop !7904

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7897
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7898
  %21 = zext i8 %19 to i32, !dbg !7907
  %22 = zext i8 %20 to i32, !dbg !7908
  %23 = sub nsw i32 %21, %22, !dbg !7909
  ret i32 %23, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #28 !dbg !7911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7915, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %1, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %2, metadata !7917, metadata !DIExpression()), !dbg !7918
  %4 = icmp eq i32 %2, 0, !dbg !7919
  br i1 %4, label %23, label %5, !dbg !7919

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %7, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %8, metadata !7915, metadata !DIExpression()), !dbg !7918
  %9 = load i8, i8* %8, align 1, !dbg !7920
  %10 = load i8, i8* %7, align 1, !dbg !7921
  %11 = icmp ne i8 %9, %10, !dbg !7922
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7923
  br i1 %13, label %19, label %14, !dbg !7923

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7924
  call void @llvm.dbg.value(metadata i8* %15, metadata !7915, metadata !DIExpression()), !dbg !7918
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7926
  call void @llvm.dbg.value(metadata i8* %16, metadata !7916, metadata !DIExpression()), !dbg !7918
  %17 = add i32 %6, -1, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %17, metadata !7917, metadata !DIExpression()), !dbg !7918
  %18 = icmp eq i32 %17, 0, !dbg !7919
  br i1 %18, label %23, label %5, !dbg !7919, !llvm.loop !7928

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7931
  %21 = zext i8 %10 to i32, !dbg !7932
  %22 = sub nsw i32 %20, %21, !dbg !7933
  br label %23, !dbg !7934

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7934
  ret i32 %24, !dbg !7935
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #20 !dbg !7936 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7941, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %1, metadata !7942, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8** %2, metadata !7943, metadata !DIExpression()), !dbg !7946
  %4 = icmp eq i8* %0, null, !dbg !7947
  br i1 %4, label %5, label %7, !dbg !7947

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7948
  br label %7, !dbg !7947

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7947
  call void @llvm.dbg.value(metadata i8* %8, metadata !7944, metadata !DIExpression()), !dbg !7946
  %9 = load i8, i8* %8, align 1, !dbg !7949
  %10 = icmp eq i8 %9, 0, !dbg !7949
  br i1 %10, label %33, label %11, !dbg !7950

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7944, metadata !DIExpression()), !dbg !7946
  %14 = zext i8 %12 to i32, !dbg !7949
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #37, !dbg !7951
  %16 = icmp eq i8* %15, null, !dbg !7950
  br i1 %16, label %21, label %17, !dbg !7952

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7953
  call void @llvm.dbg.value(metadata i8* %18, metadata !7944, metadata !DIExpression()), !dbg !7946
  %19 = load i8, i8* %18, align 1, !dbg !7949
  %20 = icmp eq i8 %19, 0, !dbg !7949
  br i1 %20, label %33, label %11, !dbg !7950, !llvm.loop !7955

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7945, metadata !DIExpression()), !dbg !7946
  %24 = zext i8 %22 to i32, !dbg !7957
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #37, !dbg !7958
  %26 = icmp eq i8* %25, null, !dbg !7959
  br i1 %26, label %27, label %31, !dbg !7960

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7961
  call void @llvm.dbg.value(metadata i8* %28, metadata !7945, metadata !DIExpression()), !dbg !7946
  %29 = load i8, i8* %28, align 1, !dbg !7957
  %30 = icmp eq i8 %29, 0, !dbg !7957
  br i1 %30, label %33, label %21, !dbg !7963, !llvm.loop !7964

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7966
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7969
  br label %33, !dbg !7970

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7946
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7946
  store i8* %34, i8** %2, align 4, !dbg !7946
  ret i8* %35, !dbg !7971
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #20 !dbg !7972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7974, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %1, metadata !7975, metadata !DIExpression()), !dbg !7976
  %3 = tail call i32 @strlen(i8* noundef %0) #37, !dbg !7977
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7978
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #37, !dbg !7979
  ret i8* %0, !dbg !7980
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7981 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7983, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %1, metadata !7984, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %2, metadata !7985, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %0, metadata !7986, metadata !DIExpression()), !dbg !7988
  %4 = tail call i32 @strlen(i8* noundef %0) #37, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %4, metadata !7987, metadata !DIExpression()), !dbg !7988
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7990
  call void @llvm.dbg.value(metadata i8* %5, metadata !7983, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %1, metadata !7984, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %2, metadata !7985, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %2, metadata !7985, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7988
  %6 = icmp eq i32 %2, 0, !dbg !7991
  br i1 %6, label %18, label %7, !dbg !7992

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7993
  call void @llvm.dbg.value(metadata i8* %9, metadata !7983, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %10, metadata !7984, metadata !DIExpression()), !dbg !7988
  %12 = load i8, i8* %10, align 1, !dbg !7994
  %13 = icmp eq i8 %12, 0, !dbg !7995
  br i1 %13, label %18, label %14, !dbg !7996

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7997
  call void @llvm.dbg.value(metadata i8* %15, metadata !7984, metadata !DIExpression()), !dbg !7988
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %16, metadata !7983, metadata !DIExpression()), !dbg !7988
  store i8 %12, i8* %9, align 1, !dbg !8000
  call void @llvm.dbg.value(metadata i32 %11, metadata !7985, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %11, metadata !7985, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7988
  %17 = icmp eq i32 %11, 0, !dbg !7991
  br i1 %17, label %18, label %7, !dbg !7992, !llvm.loop !8001

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7988
  store i8 0, i8* %19, align 1, !dbg !8003
  ret i8* %0, !dbg !8004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #28 !dbg !8005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8009, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i8* %1, metadata !8010, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i32 %2, metadata !8011, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i8* %0, metadata !8012, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i8* %1, metadata !8013, metadata !DIExpression()), !dbg !8014
  %4 = icmp eq i32 %2, 0, !dbg !8015
  br i1 %4, label %31, label %5, !dbg !8017

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8013, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i8* %0, metadata !8012, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i32 %2, metadata !8011, metadata !DIExpression()), !dbg !8014
  %6 = add i32 %2, -1, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %6, metadata !8011, metadata !DIExpression()), !dbg !8014
  %7 = icmp eq i32 %6, 0, !dbg !8019
  br i1 %7, label %23, label %8, !dbg !8020

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8021
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8021
  br label %11, !dbg !8021

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8013, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i8* %14, metadata !8012, metadata !DIExpression()), !dbg !8014
  %15 = load i8, i8* %14, align 1, !dbg !8022
  %16 = load i8, i8* %13, align 1, !dbg !8023
  %17 = icmp eq i8 %15, %16, !dbg !8024
  br i1 %17, label %18, label %23, !dbg !8021

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8025
  call void @llvm.dbg.value(metadata i8* %19, metadata !8012, metadata !DIExpression()), !dbg !8014
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8027
  call void @llvm.dbg.value(metadata i8* %20, metadata !8013, metadata !DIExpression()), !dbg !8014
  call void @llvm.dbg.value(metadata i32 %12, metadata !8011, metadata !DIExpression()), !dbg !8014
  %21 = add i32 %12, -1, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %21, metadata !8011, metadata !DIExpression()), !dbg !8014
  %22 = icmp eq i32 %21, 0, !dbg !8019
  br i1 %22, label %23, label %11, !dbg !8020, !llvm.loop !8028

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8014
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8014
  %26 = load i8, i8* %24, align 1, !dbg !8030
  %27 = zext i8 %26 to i32, !dbg !8030
  %28 = load i8, i8* %25, align 1, !dbg !8031
  %29 = zext i8 %28 to i32, !dbg !8031
  %30 = sub nsw i32 %27, %29, !dbg !8032
  br label %31, !dbg !8033

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8014
  ret i32 %32, !dbg !8034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8039, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %1, metadata !8040, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 %2, metadata !8041, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %0, metadata !8042, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %1, metadata !8043, metadata !DIExpression()), !dbg !8044
  %4 = ptrtoint i8* %0 to i32, !dbg !8045
  %5 = ptrtoint i8* %1 to i32, !dbg !8045
  %6 = sub i32 %4, %5, !dbg !8045
  %7 = icmp ult i32 %6, %2, !dbg !8047
  br i1 %7, label %10, label %8, !dbg !8048

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8043, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %0, metadata !8042, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 %2, metadata !8041, metadata !DIExpression()), !dbg !8044
  %9 = icmp eq i32 %2, 0, !dbg !8049
  br i1 %9, label %26, label %17, !dbg !8051

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8041, metadata !DIExpression()), !dbg !8044
  %12 = add i32 %11, -1, !dbg !8052
  call void @llvm.dbg.value(metadata i32 %12, metadata !8041, metadata !DIExpression()), !dbg !8044
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8055
  %14 = load i8, i8* %13, align 1, !dbg !8055
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8056
  store i8 %14, i8* %15, align 1, !dbg !8057
  %16 = icmp eq i32 %12, 0, !dbg !8058
  br i1 %16, label %26, label %10, !dbg !8059, !llvm.loop !8060

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8043, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %19, metadata !8042, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 %20, metadata !8041, metadata !DIExpression()), !dbg !8044
  %21 = load i8, i8* %18, align 1, !dbg !8062
  store i8 %21, i8* %19, align 1, !dbg !8064
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8065
  call void @llvm.dbg.value(metadata i8* %22, metadata !8042, metadata !DIExpression()), !dbg !8044
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8066
  call void @llvm.dbg.value(metadata i8* %23, metadata !8043, metadata !DIExpression()), !dbg !8044
  %24 = add i32 %20, -1, !dbg !8067
  call void @llvm.dbg.value(metadata i32 %24, metadata !8041, metadata !DIExpression()), !dbg !8044
  %25 = icmp eq i32 %24, 0, !dbg !8049
  br i1 %25, label %26, label %17, !dbg !8051, !llvm.loop !8068

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8070
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8077, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %1, metadata !8078, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %2, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %0, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %1, metadata !8081, metadata !DIExpression()), !dbg !8082
  %4 = icmp eq i32 %2, 0, !dbg !8083
  br i1 %4, label %14, label %5, !dbg !8084

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8081, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %7, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %8, metadata !8079, metadata !DIExpression()), !dbg !8082
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8085
  call void @llvm.dbg.value(metadata i8* %9, metadata !8081, metadata !DIExpression()), !dbg !8082
  %10 = load i8, i8* %6, align 1, !dbg !8087
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8088
  call void @llvm.dbg.value(metadata i8* %11, metadata !8080, metadata !DIExpression()), !dbg !8082
  store i8 %10, i8* %7, align 1, !dbg !8089
  %12 = add i32 %8, -1, !dbg !8090
  call void @llvm.dbg.value(metadata i32 %12, metadata !8079, metadata !DIExpression()), !dbg !8082
  %13 = icmp eq i32 %12, 0, !dbg !8083
  br i1 %13, label %14, label %5, !dbg !8084, !llvm.loop !8091

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8093
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #29 !dbg !8094 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8098, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %1, metadata !8099, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %2, metadata !8100, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8* %0, metadata !8101, metadata !DIExpression()), !dbg !8103
  %4 = trunc i32 %1 to i8, !dbg !8104
  call void @llvm.dbg.value(metadata i8 %4, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32 %2, metadata !8100, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8* %0, metadata !8101, metadata !DIExpression()), !dbg !8103
  %5 = icmp eq i32 %2, 0, !dbg !8105
  br i1 %5, label %12, label %6, !dbg !8106

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8100, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8* %8, metadata !8101, metadata !DIExpression()), !dbg !8103
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8107
  call void @llvm.dbg.value(metadata i8* %9, metadata !8101, metadata !DIExpression()), !dbg !8103
  store i8 %4, i8* %8, align 1, !dbg !8109
  %10 = add i32 %7, -1, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %10, metadata !8100, metadata !DIExpression()), !dbg !8103
  %11 = icmp eq i32 %10, 0, !dbg !8105
  br i1 %11, label %12, label %6, !dbg !8106, !llvm.loop !8111

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8113
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #28 !dbg !8114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8118, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i32 %1, metadata !8119, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i32 %2, metadata !8120, metadata !DIExpression()), !dbg !8124
  %4 = icmp eq i32 %2, 0, !dbg !8125
  br i1 %4, label %17, label %5, !dbg !8126

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8127

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8128
  call void @llvm.dbg.value(metadata i8* %9, metadata !8121, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.value(metadata i32 %8, metadata !8120, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i8* %9, metadata !8121, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8128
  %10 = load i8, i8* %9, align 1, !dbg !8129
  %11 = icmp eq i8 %10, %6, !dbg !8132
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8133
  call void @llvm.dbg.value(metadata i8* %12, metadata !8121, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.value(metadata i32 %13, metadata !8120, metadata !DIExpression()), !dbg !8124
  br i1 %15, label %16, label %7, !dbg !8133, !llvm.loop !8134

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8136

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8124
  ret i8* %19, !dbg !8137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #10 !dbg !8138 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8140, metadata !DIExpression()), !dbg !8141
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8142
  ret void, !dbg !8143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #17 !dbg !8144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8146, metadata !DIExpression()), !dbg !8147
  ret i32 -1, !dbg !8148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8153, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.value(metadata i32* %1, metadata !8154, metadata !DIExpression()), !dbg !8155
  %3 = ptrtoint i32* %1 to i32, !dbg !8156
  %4 = and i32 %3, -2, !dbg !8156
  %5 = icmp eq i32 %4, 2, !dbg !8156
  br i1 %5, label %6, label %9, !dbg !8156

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8157
  %8 = tail call i32 %7(i32 noundef %0) #38, !dbg !8157
  br label %9, !dbg !8158

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8158
  ret i32 %10, !dbg !8159
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8162, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.value(metadata i32* %1, metadata !8163, metadata !DIExpression()), !dbg !8164
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #37, !dbg !8165
  ret i32 %3, !dbg !8166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32* %1, metadata !8171, metadata !DIExpression()), !dbg !8172
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !8173, !srcloc !8175
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #37, !dbg !8176
  ret i32 %3, !dbg !8177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8178 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8183, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i32* %1, metadata !8184, metadata !DIExpression()), !dbg !8187
  %3 = tail call i32 @strlen(i8* noundef %0) #38, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %3, metadata !8185, metadata !DIExpression()), !dbg !8187
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #37, !dbg !8189
  call void @llvm.dbg.value(metadata i32 %4, metadata !8186, metadata !DIExpression()), !dbg !8187
  %5 = icmp ne i32 %3, %4, !dbg !8190
  %6 = sext i1 %5 to i32, !dbg !8191
  ret i32 %6, !dbg !8192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8197, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i32 %1, metadata !8198, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i32 %2, metadata !8199, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i32* %3, metadata !8200, metadata !DIExpression()), !dbg !8201
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #37, !dbg !8202
  ret i32 %5, !dbg !8203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8206, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %1, metadata !8207, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %2, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32* %3, metadata !8209, metadata !DIExpression()), !dbg !8210
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !8211, !srcloc !8213
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #37, !dbg !8214
  ret i32 %5, !dbg !8215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8218, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %1, metadata !8219, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %2, metadata !8220, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32* %3, metadata !8221, metadata !DIExpression()), !dbg !8226
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8227
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8229
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8229
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8229
  br i1 %11, label %33, label %12, !dbg !8229

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8226
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8226
  call void @llvm.dbg.value(metadata i8* %14, metadata !8224, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %13, metadata !8222, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %1, metadata !8223, metadata !DIExpression()), !dbg !8226
  br label %15, !dbg !8230

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8232
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8226
  call void @llvm.dbg.value(metadata i8* %17, metadata !8224, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %16, metadata !8223, metadata !DIExpression()), !dbg !8226
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8233
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8236
  call void @llvm.dbg.value(metadata i8* %19, metadata !8224, metadata !DIExpression()), !dbg !8226
  %20 = load i8, i8* %17, align 1, !dbg !8237
  %21 = zext i8 %20 to i32, !dbg !8238
  %22 = tail call i32 %18(i32 noundef %21) #38, !dbg !8233
  %23 = icmp eq i32 %22, -1, !dbg !8239
  br i1 %23, label %30, label %24, !dbg !8240

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8241
  call void @llvm.dbg.value(metadata i32 %25, metadata !8223, metadata !DIExpression()), !dbg !8226
  %26 = icmp eq i32 %25, 0, !dbg !8242
  br i1 %26, label %27, label %15, !dbg !8243, !llvm.loop !8244

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8246
  call void @llvm.dbg.value(metadata i32 %28, metadata !8222, metadata !DIExpression()), !dbg !8226
  %29 = icmp eq i32 %28, 0, !dbg !8247
  br i1 %29, label %30, label %12, !dbg !8248, !llvm.loop !8249

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8226
  call void @llvm.dbg.value(metadata i32 %31, metadata !8222, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.label(metadata !8225), !dbg !8252
  %32 = sub i32 %2, %31, !dbg !8253
  br label %33, !dbg !8254

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8226
  ret i32 %34, !dbg !8255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8256 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8260, metadata !DIExpression()), !dbg !8261
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #37, !dbg !8262
  %3 = icmp eq i32 %2, -1, !dbg !8264
  br i1 %3, label %8, label %4, !dbg !8265

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #37, !dbg !8266
  %6 = icmp eq i32 %5, -1, !dbg !8267
  %7 = sext i1 %6 to i32, !dbg !8266
  br label %8, !dbg !8268

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8261
  ret i32 %9, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8272, metadata !DIExpression()), !dbg !8273
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #37, !dbg !8274
  ret void, !dbg !8275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8280, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i32 %1, metadata !8281, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8282, metadata !DIExpression()), !dbg !8286
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8287
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8287
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8287
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8283, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i32 %0, metadata !8285, metadata !DIExpression()), !dbg !8286
  %7 = icmp slt i32 %0, %1, !dbg !8288
  br i1 %7, label %8, label %22, !dbg !8291

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8285, metadata !DIExpression()), !dbg !8286
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #37, !dbg !8292
  %11 = icmp eq i32 %10, 0, !dbg !8292
  br i1 %11, label %19, label %12, !dbg !8295

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #37, !dbg !8296
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8298
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8298
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8300
  br i1 %15, label %19, label %16, !dbg !8301

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8302
  %18 = load i8*, i8** %17, align 4, !dbg !8302
  tail call void %14(i32 noundef %9, i8* noundef %18) #38, !dbg !8303
  br label %19, !dbg !8304

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8305
  call void @llvm.dbg.value(metadata i32 %20, metadata !8285, metadata !DIExpression()), !dbg !8286
  %21 = icmp eq i32 %20, %1, !dbg !8288
  br i1 %21, label %22, label %8, !dbg !8291, !llvm.loop !8306

22:                                               ; preds = %19, %3
  ret void, !dbg !8308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #24 !dbg !8309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8311, metadata !DIExpression()), !dbg !8312
  %2 = shl nuw i32 1, %0, !dbg !8313
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #37, !dbg !8316
  ret i32 %3, !dbg !8317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #21 !dbg !8318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8322, metadata !DIExpression()), !dbg !8323
  %2 = shl nuw i32 1, %0, !dbg !8324
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #37, !dbg !8327
  ret void, !dbg !8328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #21 !dbg !8329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8332, metadata !DIExpression()), !dbg !8333
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8334
  ret void, !dbg !8335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #24 !dbg !8336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8338, metadata !DIExpression()), !dbg !8339
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8340
  %3 = and i32 %2, %0, !dbg !8340
  %4 = icmp eq i32 %3, %0, !dbg !8341
  %5 = zext i1 %4 to i32, !dbg !8341
  ret i32 %5, !dbg !8342
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8343 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8345, metadata !DIExpression()), !dbg !8346
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #37, !dbg !8347
  ret void, !dbg !8348
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8351, metadata !DIExpression()), !dbg !8352
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #37, !dbg !8353
  ret void, !dbg !8354
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8357, metadata !DIExpression()), !dbg !8358
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #37, !dbg !8359
  ret void, !dbg !8360
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8363, metadata !DIExpression()), !dbg !8364
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #37, !dbg !8365
  ret void, !dbg !8366
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8367 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8369, metadata !DIExpression()), !dbg !8370
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #37, !dbg !8371
  ret void, !dbg !8372
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8373 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8375, metadata !DIExpression()), !dbg !8376
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #37, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8381, metadata !DIExpression()), !dbg !8382
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #37, !dbg !8383
  ret void, !dbg !8384
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8387, metadata !DIExpression()), !dbg !8388
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #37, !dbg !8389
  ret void, !dbg !8390
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8393, metadata !DIExpression()), !dbg !8394
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #37, !dbg !8395
  ret void, !dbg !8396
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8399, metadata !DIExpression()), !dbg !8400
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #37, !dbg !8401
  ret void, !dbg !8402
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8403 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8405, metadata !DIExpression()), !dbg !8406
  tail call fastcc void @__stm32_exti_connect_irqs() #37, !dbg !8407
  ret i32 0, !dbg !8408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !889 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !893, metadata !DIExpression()), !dbg !8409
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #38, !dbg !8410
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #38, !dbg !8412
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #38, !dbg !8414
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #38, !dbg !8416
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #38, !dbg !8418
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #38, !dbg !8420
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #38, !dbg !8422
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #38, !dbg !8424
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #38, !dbg !8426
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #38, !dbg !8428
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #38, !dbg !8430
  ret void, !dbg !8432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8435, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 0, metadata !8436, metadata !DIExpression()), !dbg !8437
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8438
  %3 = load i32, i32* %2, align 4, !dbg !8438
  call void @llvm.dbg.value(metadata i32 %3, metadata !8436, metadata !DIExpression()), !dbg !8437
  %4 = shl nuw i32 1, %0, !dbg !8439
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #37, !dbg !8440
  tail call void @arch_irq_enable(i32 noundef %3) #38, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #21 !dbg !8443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8445, metadata !DIExpression()), !dbg !8446
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8447
  %3 = or i32 %2, %0, !dbg !8447
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8447
  ret void, !dbg !8448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #21 !dbg !8449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8451, metadata !DIExpression()), !dbg !8452
  %2 = icmp slt i32 %0, 32, !dbg !8453
  br i1 %2, label %3, label %5, !dbg !8455

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8456
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #37, !dbg !8458
  br label %5, !dbg !8459

5:                                                ; preds = %1, %3
  ret void, !dbg !8460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #21 !dbg !8461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8463, metadata !DIExpression()), !dbg !8464
  %2 = xor i32 %0, -1, !dbg !8465
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8465
  %4 = and i32 %3, %2, !dbg !8465
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8465
  ret void, !dbg !8466
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #21 !dbg !8467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8471, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.value(metadata i32 %1, metadata !8472, metadata !DIExpression()), !dbg !8473
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8474

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8475
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #37, !dbg !8477
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #37, !dbg !8478
  br label %11, !dbg !8479

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8480
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #37, !dbg !8481
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #37, !dbg !8482
  br label %11, !dbg !8483

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8484
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #37, !dbg !8485
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #37, !dbg !8486
  br label %11, !dbg !8487

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8488
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #37, !dbg !8489
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #37, !dbg !8490
  br label %11, !dbg !8491

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #21 !dbg !8493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8495, metadata !DIExpression()), !dbg !8496
  %2 = xor i32 %0, -1, !dbg !8497
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8497
  %4 = and i32 %3, %2, !dbg !8497
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8497
  ret void, !dbg !8498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #21 !dbg !8499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8501, metadata !DIExpression()), !dbg !8502
  %2 = xor i32 %0, -1, !dbg !8503
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8503
  %4 = and i32 %3, %2, !dbg !8503
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8503
  ret void, !dbg !8504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #21 !dbg !8505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8507, metadata !DIExpression()), !dbg !8508
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8509
  %3 = or i32 %2, %0, !dbg !8509
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #21 !dbg !8511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8515
  %3 = or i32 %2, %0, !dbg !8515
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #13 !dbg !8517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8521, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8522, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata i8* %2, metadata !8523, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8524, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8526, metadata !DIExpression()), !dbg !8527
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8528
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8528
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8530
  br i1 %6, label %7, label %9, !dbg !8531

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8532
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8533
  store i8* %2, i8** %8, align 4, !dbg !8534
  br label %9, !dbg !8535

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8527
  ret i32 %10, !dbg !8536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #10 !dbg !8537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8539, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8540, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8541, metadata !DIExpression()), !dbg !8542
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8543
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8544
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8545
  store i8* null, i8** %3, align 4, !dbg !8546
  ret void, !dbg !8547
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #21 !dbg !8548 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8550, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i8* %1, metadata !8551, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i8* %1, metadata !8552, metadata !DIExpression()), !dbg !8555
  %3 = bitcast i8* %1 to i32*, !dbg !8556
  %4 = load i32, i32* %3, align 4, !dbg !8556
  %5 = add i32 %4, -169, !dbg !8556
  %6 = icmp ult i32 %5, -121, !dbg !8556
  br i1 %6, label %15, label %7, !dbg !8558

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8559
  %9 = inttoptr i32 %8 to i32*, !dbg !8560
  call void @llvm.dbg.value(metadata i32* %9, metadata !8553, metadata !DIExpression()), !dbg !8555
  %10 = load volatile i32, i32* %9, align 4, !dbg !8561
  call void @llvm.dbg.value(metadata i32 %10, metadata !8554, metadata !DIExpression()), !dbg !8555
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8562
  %12 = bitcast i8* %11 to i32*, !dbg !8562
  %13 = load i32, i32* %12, align 4, !dbg !8562
  %14 = or i32 %13, %10, !dbg !8563
  call void @llvm.dbg.value(metadata i32 %14, metadata !8554, metadata !DIExpression()), !dbg !8555
  store volatile i32 %14, i32* %9, align 4, !dbg !8564
  br label %15, !dbg !8565

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8555
  ret i32 %16, !dbg !8566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #21 !dbg !8567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8569, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i8* %1, metadata !8570, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i8* %1, metadata !8571, metadata !DIExpression()), !dbg !8574
  %3 = bitcast i8* %1 to i32*, !dbg !8575
  %4 = load i32, i32* %3, align 4, !dbg !8575
  %5 = add i32 %4, -169, !dbg !8575
  %6 = icmp ult i32 %5, -121, !dbg !8575
  br i1 %6, label %16, label %7, !dbg !8577

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8578
  %9 = inttoptr i32 %8 to i32*, !dbg !8579
  call void @llvm.dbg.value(metadata i32* %9, metadata !8572, metadata !DIExpression()), !dbg !8574
  %10 = load volatile i32, i32* %9, align 4, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %10, metadata !8573, metadata !DIExpression()), !dbg !8574
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8581
  %12 = bitcast i8* %11 to i32*, !dbg !8581
  %13 = load i32, i32* %12, align 4, !dbg !8581
  %14 = xor i32 %13, -1, !dbg !8582
  %15 = and i32 %10, %14, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %15, metadata !8573, metadata !DIExpression()), !dbg !8574
  store volatile i32 %15, i32* %9, align 4, !dbg !8584
  br label %16, !dbg !8585

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8574
  ret i32 %17, !dbg !8586
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8589, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i8* %1, metadata !8590, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i32* %2, metadata !8591, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i8* %1, metadata !8592, metadata !DIExpression()), !dbg !8597
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8598
  call void @llvm.dbg.value(metadata i32 %4, metadata !8593, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i32 undef, metadata !8594, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i32 undef, metadata !8595, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i32 %4, metadata !8596, metadata !DIExpression()), !dbg !8597
  %5 = bitcast i8* %1 to i32*, !dbg !8599
  %6 = load i32, i32* %5, align 4, !dbg !8599
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8600

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #37, !dbg !8601
  call void @llvm.dbg.value(metadata i32 %8, metadata !8594, metadata !DIExpression()), !dbg !8597
  br label %19, !dbg !8602

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #37, !dbg !8604
  call void @llvm.dbg.value(metadata i32 %10, metadata !8595, metadata !DIExpression()), !dbg !8597
  br label %19, !dbg !8605

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #38, !dbg !8606
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #37, !dbg !8607
  br label %19, !dbg !8608

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #38, !dbg !8609
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #37, !dbg !8610
  br label %19, !dbg !8611

17:                                               ; preds = %3
  br label %19, !dbg !8612

18:                                               ; preds = %3
  br label %19, !dbg !8613

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8614
  br label %21, !dbg !8615

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8597
  ret i32 %22, !dbg !8615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #21 !dbg !8616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8618, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %1, metadata !8619, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %2, metadata !8620, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %1, metadata !8621, metadata !DIExpression()), !dbg !8626
  %4 = bitcast i8* %1 to i32*, !dbg !8627
  %5 = load i32, i32* %4, align 4, !dbg !8627
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #37, !dbg !8628
  call void @llvm.dbg.value(metadata i32 %6, metadata !8625, metadata !DIExpression()), !dbg !8626
  %7 = icmp slt i32 %6, 0, !dbg !8629
  br i1 %7, label %22, label %8, !dbg !8631

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8621, metadata !DIExpression()), !dbg !8626
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8632
  %10 = bitcast i8* %9 to i32*, !dbg !8632
  %11 = load i32, i32* %10, align 4, !dbg !8632
  %12 = lshr i32 %11, 16, !dbg !8632
  %13 = and i32 %12, 7, !dbg !8632
  %14 = lshr i32 %11, 8, !dbg !8633
  %15 = and i32 %14, 31, !dbg !8633
  %16 = shl i32 %13, %15, !dbg !8634
  call void @llvm.dbg.value(metadata i32 %16, metadata !8624, metadata !DIExpression()), !dbg !8626
  %17 = and i32 %11, 255, !dbg !8635
  %18 = or i32 %17, 1073887232, !dbg !8636
  %19 = inttoptr i32 %18 to i32*, !dbg !8637
  call void @llvm.dbg.value(metadata i32* %19, metadata !8622, metadata !DIExpression()), !dbg !8626
  %20 = load volatile i32, i32* %19, align 4, !dbg !8638
  call void @llvm.dbg.value(metadata i32 %20, metadata !8623, metadata !DIExpression()), !dbg !8626
  %21 = or i32 %16, %20, !dbg !8639
  call void @llvm.dbg.value(metadata i32 %21, metadata !8623, metadata !DIExpression()), !dbg !8626
  store volatile i32 %21, i32* %19, align 4, !dbg !8640
  br label %22, !dbg !8641

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8626
  ret i32 %23, !dbg !8642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #17 !dbg !8643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8647, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata i32 0, metadata !8648, metadata !DIExpression()), !dbg !8649
  %2 = add i32 %0, -1, !dbg !8650
  %3 = icmp ult i32 %2, 6, !dbg !8650
  br i1 %3, label %4, label %7, !dbg !8650

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8650
  %6 = load i32, i32* %5, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %6, metadata !8648, metadata !DIExpression()), !dbg !8649
  br label %7, !dbg !8651

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8649
  ret i32 %8, !dbg !8652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !8653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8657, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.value(metadata i32 %1, metadata !8658, metadata !DIExpression()), !dbg !8659
  %3 = udiv i32 %0, %1, !dbg !8660
  ret i32 %3, !dbg !8661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !8662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8666, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 8, metadata !8667, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 84, metadata !8668, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i32 %1, metadata !8669, metadata !DIExpression()), !dbg !8670
  %3 = mul i32 %0, 84, !dbg !8671
  %4 = shl nsw i32 %1, 3, !dbg !8672
  %5 = udiv i32 %3, %4, !dbg !8673
  ret i32 %5, !dbg !8674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8675 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8677, metadata !DIExpression()), !dbg !8680
  tail call void @config_enable_default_clocks() #38, !dbg !8681
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #38, !dbg !8682
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #37, !dbg !8682
  %4 = lshr i32 %3, 4, !dbg !8682
  %5 = and i32 %4, 15, !dbg !8682
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8682
  %7 = load i8, i8* %6, align 1, !dbg !8682
  %8 = zext i8 %7 to i32, !dbg !8682
  %9 = lshr i32 %2, %8, !dbg !8682
  call void @llvm.dbg.value(metadata i32 %9, metadata !8678, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8679, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8680
  %10 = icmp ult i32 %9, 84000000, !dbg !8683
  br i1 %10, label %11, label %13, !dbg !8685

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #38, !dbg !8686
  br label %13, !dbg !8688

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #37, !dbg !8689
  tail call fastcc void @set_up_plls() #37, !dbg !8690
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #37, !dbg !8691
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #37, !dbg !8694
  br label %14, !dbg !8695

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #37, !dbg !8696
  %16 = icmp eq i32 %15, 8, !dbg !8697
  br i1 %16, label %17, label %14, !dbg !8695, !llvm.loop !8698

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8700
  br i1 %18, label %19, label %21, !dbg !8702

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #38, !dbg !8703
  br label %21, !dbg !8705

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8706
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #37, !dbg !8707
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #37, !dbg !8708
  ret i32 0, !dbg !8709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #24 !dbg !8710 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8712
  %2 = and i32 %1, 240, !dbg !8712
  ret i32 %2, !dbg !8713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #21 !dbg !8714 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #37, !dbg !8715
  tail call fastcc void @LL_RCC_HSE_Enable() #37, !dbg !8720
  br label %1, !dbg !8721

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #37, !dbg !8722
  %3 = icmp eq i32 %2, 1, !dbg !8723
  br i1 %3, label %4, label %1, !dbg !8721, !llvm.loop !8724

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #37, !dbg !8726
  br label %5, !dbg !8729

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #37, !dbg !8730
  %7 = icmp eq i32 %6, 1, !dbg !8731
  br i1 %7, label %8, label %5, !dbg !8729, !llvm.loop !8732

8:                                                ; preds = %5
  ret void, !dbg !8734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8735 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #37, !dbg !8736
  %2 = icmp eq i32 %1, 8, !dbg !8738
  br i1 %2, label %3, label %4, !dbg !8739

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #37, !dbg !8740
  tail call fastcc void @stm32_clock_switch_to_hsi() #37, !dbg !8742
  br label %4, !dbg !8743

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #37, !dbg !8744
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8745
  %6 = and i32 %5, -196609, !dbg !8745
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8745
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8746
  %8 = and i32 %7, -251658241, !dbg !8746
  %9 = or i32 %8, 134217728, !dbg !8746
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8746
  tail call void @config_pll_sysclock() #38, !dbg !8747
  tail call fastcc void @LL_RCC_PLL_Enable() #37, !dbg !8748
  br label %10, !dbg !8749

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #37, !dbg !8750
  %12 = icmp eq i32 %11, 1, !dbg !8751
  br i1 %12, label %13, label %10, !dbg !8749, !llvm.loop !8752

13:                                               ; preds = %10
  ret void, !dbg !8754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #21 !dbg !8755 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8757, metadata !DIExpression()), !dbg !8758
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8759
  %2 = and i32 %1, -241, !dbg !8759
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8759
  ret void, !dbg !8760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #21 !dbg !8761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8763, metadata !DIExpression()), !dbg !8764
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8765
  %3 = and i32 %2, -4, !dbg !8765
  %4 = or i32 %3, %0, !dbg !8765
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8765
  ret void, !dbg !8766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #24 !dbg !8767 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8768
  %2 = and i32 %1, 12, !dbg !8768
  ret i32 %2, !dbg !8769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #21 !dbg !8770 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8772, metadata !DIExpression()), !dbg !8773
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8774
  %2 = and i32 %1, -7169, !dbg !8774
  %3 = or i32 %2, 4096, !dbg !8774
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8774
  ret void, !dbg !8775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #21 !dbg !8776 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8778, metadata !DIExpression()), !dbg !8779
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8780
  %2 = and i32 %1, -57345, !dbg !8780
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8780
  ret void, !dbg !8781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #21 !dbg !8782 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #37, !dbg !8783
  %2 = icmp eq i32 %1, 1, !dbg !8785
  br i1 %2, label %7, label %3, !dbg !8786

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #37, !dbg !8787
  br label %4, !dbg !8789

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #37, !dbg !8790
  %6 = icmp eq i32 %5, 1, !dbg !8791
  br i1 %6, label %7, label %4, !dbg !8789, !llvm.loop !8792

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #37, !dbg !8794
  br label %8, !dbg !8795

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #37, !dbg !8796
  %10 = icmp eq i32 %9, 0, !dbg !8797
  br i1 %10, label %11, label %8, !dbg !8795, !llvm.loop !8798

11:                                               ; preds = %8
  ret void, !dbg !8800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #21 !dbg !8801 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8802
  %2 = and i32 %1, -16777217, !dbg !8802
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8802
  ret void, !dbg !8803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #21 !dbg !8804 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8805
  %2 = or i32 %1, 16777216, !dbg !8805
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8805
  ret void, !dbg !8806
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #24 !dbg !8807 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8808
  %2 = lshr i32 %1, 25, !dbg !8809
  %3 = and i32 %2, 1, !dbg !8809
  ret i32 %3, !dbg !8810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #24 !dbg !8811 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8812
  %2 = lshr i32 %1, 1, !dbg !8813
  %3 = and i32 %2, 1, !dbg !8813
  ret i32 %3, !dbg !8814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #21 !dbg !8815 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8816
  %2 = or i32 %1, 1, !dbg !8816
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8816
  ret void, !dbg !8817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #21 !dbg !8818 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8819
  %2 = and i32 %1, -262145, !dbg !8819
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8819
  ret void, !dbg !8820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #21 !dbg !8821 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8822
  %2 = or i32 %1, 65536, !dbg !8822
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8822
  ret void, !dbg !8823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #24 !dbg !8824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8825
  %2 = lshr i32 %1, 17, !dbg !8826
  %3 = and i32 %2, 1, !dbg !8826
  ret i32 %3, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #21 !dbg !8828 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8829
  %2 = or i32 %1, 1, !dbg !8829
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #24 !dbg !8831 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8832
  %2 = lshr i32 %1, 1, !dbg !8833
  %3 = and i32 %2, 1, !dbg !8833
  ret i32 %3, !dbg !8834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #17 !dbg !8835 {
  ret i32 16000000, !dbg !8837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #21 !dbg !8841 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #37, !dbg !8842
  ret void, !dbg !8843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #21 !dbg !8844 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8848, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 8, metadata !8849, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 84, metadata !8850, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 0, metadata !8851, metadata !DIExpression()), !dbg !8852
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8853
  %2 = and i32 %1, -4227072, !dbg !8853
  %3 = or i32 %2, 4199688, !dbg !8853
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8853
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8854
  %5 = and i32 %4, -196609, !dbg !8854
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8854
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8855
  %7 = and i32 %6, -1879048193, !dbg !8855
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8855
  ret void, !dbg !8856
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #25 !dbg !8857 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #37, !dbg !8858
  ret void, !dbg !8859
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #25 !dbg !8860 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8863, metadata !DIExpression()), !dbg !8865
  %2 = bitcast i32* %1 to i8*, !dbg !8866
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8866
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8864, metadata !DIExpression()), !dbg !8867
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8868
  %4 = or i32 %3, 268435456, !dbg !8868
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8868
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8869
  %6 = and i32 %5, 268435456, !dbg !8869
  store volatile i32 %6, i32* %1, align 4, !dbg !8870
  %7 = load volatile i32, i32* %1, align 4, !dbg !8871
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8872
  ret void, !dbg !8872
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8875, metadata !DIExpression()), !dbg !8876
  %2 = tail call fastcc zeroext i1 @device_is_ready() #37, !dbg !8877
  br i1 %2, label %3, label %4, !dbg !8879

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #37, !dbg !8880
  br label %4, !dbg !8881

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8876
  ret i32 %5, !dbg !8882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8883 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8888, metadata !DIExpression()), !dbg !8889
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !8890, !srcloc !8892
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #37, !dbg !8893
  ret i1 %1, !dbg !8894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8895 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #38, !dbg !8896
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #38, !dbg !8897
  ret void, !dbg !8898
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8901, metadata !DIExpression()), !dbg !8902
  %2 = icmp eq i32 %0, 10, !dbg !8903
  br i1 %2, label %3, label %4, !dbg !8905

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #37, !dbg !8906
  br label %4, !dbg !8908

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8909
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #37, !dbg !8910
  ret i32 %0, !dbg !8911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8912 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8915, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i8 %0, metadata !8916, metadata !DIExpression()), !dbg !8917
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !8918, !srcloc !8920
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #37, !dbg !8921
  ret void, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8925, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i8 %0, metadata !8926, metadata !DIExpression()), !dbg !8928
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8929
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8927, metadata !DIExpression()), !dbg !8928
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8930
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8930
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #38, !dbg !8931
  ret void, !dbg !8932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8933 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8935, metadata !DIExpression()), !dbg !8936
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #38, !dbg !8937
  ret i1 %1, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #17 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8988, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8989, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8990, metadata !DIExpression()), !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8993 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8995, metadata !DIExpression()), !dbg !9000
  call void @llvm.dbg.value(metadata i8 %1, metadata !8996, metadata !DIExpression()), !dbg !9000
  call void @llvm.dbg.value(metadata i32 %2, metadata !8997, metadata !DIExpression()), !dbg !9000
  %5 = bitcast i32* %4 to i8*, !dbg !9001
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #33, !dbg !9001
  call void @llvm.dbg.value(metadata i32* %4, metadata !8999, metadata !DIExpression(DW_OP_deref)), !dbg !9000
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #37, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %6, metadata !8998, metadata !DIExpression()), !dbg !9000
  %7 = icmp eq i32 %6, 0, !dbg !9003
  br i1 %7, label %8, label %31, !dbg !9005

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8998, metadata !DIExpression()), !dbg !9000
  %9 = and i32 %2, 131072, !dbg !9006
  %10 = icmp eq i32 %9, 0, !dbg !9008
  br i1 %10, label %28, label %11, !dbg !9009

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9010
  %13 = icmp eq i32 %12, 0, !dbg !9013
  br i1 %13, label %18, label %14, !dbg !9014

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9015
  %16 = shl nuw i32 1, %15, !dbg !9015
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #37, !dbg !9017
  br label %25, !dbg !9018

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9019
  %20 = icmp eq i32 %19, 0, !dbg !9021
  %21 = zext i8 %1 to i32, !dbg !9000
  br i1 %20, label %25, label %22, !dbg !9022

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9023
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #37, !dbg !9025
  br label %25, !dbg !9026

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9027
  %27 = load i32, i32* %4, align 4, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %30, metadata !8999, metadata !DIExpression()), !dbg !9000
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #37, !dbg !9029
  br label %31, !dbg !9030

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9027
  %30 = load i32, i32* %4, align 4, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %30, metadata !8999, metadata !DIExpression()), !dbg !9000
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #37, !dbg !9029
  call void @llvm.dbg.value(metadata i32 0, metadata !8998, metadata !DIExpression()), !dbg !9000
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #33, !dbg !9031
  ret i32 %6, !dbg !9031
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #24 !dbg !9032 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9036, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i32* %1, metadata !9037, metadata !DIExpression()), !dbg !9041
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9042
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9042
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9038, metadata !DIExpression()), !dbg !9041
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9043
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9043
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9043
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9040, metadata !DIExpression()), !dbg !9041
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #37, !dbg !9044
  store i32 %9, i32* %1, align 4, !dbg !9045
  ret i32 0, !dbg !9046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #21 !dbg !9047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9049, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata i32 %1, metadata !9050, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata i32 %2, metadata !9051, metadata !DIExpression()), !dbg !9055
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9056
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9056
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9056
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9052, metadata !DIExpression()), !dbg !9055
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9057
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9057
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9057
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9053, metadata !DIExpression()), !dbg !9055
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #37, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %10, metadata !9054, metadata !DIExpression()), !dbg !9055
  %11 = xor i32 %1, -1, !dbg !9059
  %12 = and i32 %10, %11, !dbg !9060
  %13 = and i32 %2, %1, !dbg !9061
  %14 = or i32 %12, %13, !dbg !9062
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #37, !dbg !9063
  ret i32 0, !dbg !9064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #21 !dbg !9065 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9067, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.value(metadata i32 %1, metadata !9068, metadata !DIExpression()), !dbg !9071
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9072
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9072
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9072
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9069, metadata !DIExpression()), !dbg !9071
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9073
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9073
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9073
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9070, metadata !DIExpression()), !dbg !9071
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9074
  store volatile i32 %1, i32* %9, align 4, !dbg !9074
  ret i32 0, !dbg !9075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #21 !dbg !9076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9078, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.value(metadata i32 %1, metadata !9079, metadata !DIExpression()), !dbg !9082
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9083
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9083
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9083
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9080, metadata !DIExpression()), !dbg !9082
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9084
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9084
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9084
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9081, metadata !DIExpression()), !dbg !9082
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #37, !dbg !9085
  ret i32 0, !dbg !9086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #21 !dbg !9087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9089, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.value(metadata i32 %1, metadata !9090, metadata !DIExpression()), !dbg !9093
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9094
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9094
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9094
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9091, metadata !DIExpression()), !dbg !9093
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9095
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9095
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9095
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9092, metadata !DIExpression()), !dbg !9093
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9096
  %10 = load volatile i32, i32* %9, align 4, !dbg !9096
  %11 = xor i32 %10, %1, !dbg !9096
  store volatile i32 %11, i32* %9, align 4, !dbg !9096
  ret i32 0, !dbg !9097
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9098 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9100, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i8 %1, metadata !9101, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i32 %2, metadata !9102, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i32 %3, metadata !9103, metadata !DIExpression()), !dbg !9110
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9111
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9111
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9111
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9104, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i8* undef, metadata !9105, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i32 0, metadata !9107, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i32 0, metadata !9108, metadata !DIExpression()), !dbg !9110
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9112

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9113
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #37, !dbg !9117
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9118
  %12 = load i32, i32* %11, align 4, !dbg !9118
  %13 = icmp eq i32 %10, %12, !dbg !9119
  br i1 %13, label %14, label %29, !dbg !9120

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #38, !dbg !9121
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #38, !dbg !9123
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #38, !dbg !9124
  br label %29, !dbg !9125

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9126
  %17 = load i8*, i8** %16, align 4, !dbg !9126
  call void @llvm.dbg.value(metadata i8* %17, metadata !9105, metadata !DIExpression()), !dbg !9110
  %18 = zext i8 %1 to i32, !dbg !9127
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #38, !dbg !9129
  %20 = icmp eq i32 %19, 0, !dbg !9130
  br i1 %20, label %21, label %29, !dbg !9131

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9132
  %23 = load i32, i32* %22, align 4, !dbg !9132
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #37, !dbg !9133
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9134

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9107, metadata !DIExpression()), !dbg !9110
  br label %27, !dbg !9135

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9107, metadata !DIExpression()), !dbg !9110
  br label %27, !dbg !9137

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9107, metadata !DIExpression()), !dbg !9110
  br label %27, !dbg !9138

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9110
  call void @llvm.dbg.value(metadata i32 %28, metadata !9107, metadata !DIExpression()), !dbg !9110
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #38, !dbg !9139
  tail call void @stm32_exti_enable(i32 noundef %18) #38, !dbg !9140
  br label %29, !dbg !9140

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9110
  call void @llvm.dbg.value(metadata i32 %30, metadata !9108, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.label(metadata !9109), !dbg !9141
  ret i32 %30, !dbg !9142
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #20 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9145, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9146, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i1 %2, metadata !9147, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9149
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9150
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9150
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9150
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9148, metadata !DIExpression()), !dbg !9149
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9151
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #37, !dbg !9152
  ret i32 %8, !dbg !9153
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #20 !dbg !9154 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9160, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9161, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i1 %2, metadata !9162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9163
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #37, !dbg !9164
  br i1 %4, label %10, label %5, !dbg !9166

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9167
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #37, !dbg !9170
  %8 = or i1 %7, %2, !dbg !9171
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9171
  br i1 %2, label %11, label %13, !dbg !9171

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9172

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9173
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #37, !dbg !9176
  br label %13, !dbg !9177

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9163
  ret i32 %14, !dbg !9178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #11 !dbg !9179 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9183, metadata !DIExpression()), !dbg !9184
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #37, !dbg !9185
  %3 = icmp eq %struct._snode* %2, null, !dbg !9185
  ret i1 %3, !dbg !9185
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #20 !dbg !9186 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9190, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9191, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9192, metadata !DIExpression()), !dbg !9194
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #37, !dbg !9195
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9192, metadata !DIExpression()), !dbg !9194
  %4 = icmp eq %struct._snode* %3, null, !dbg !9197
  br i1 %4, label %15, label %5, !dbg !9195

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9192, metadata !DIExpression()), !dbg !9194
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9199
  br i1 %6, label %9, label %11, !dbg !9202

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9192, metadata !DIExpression()), !dbg !9194
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9199
  br i1 %8, label %9, label %11, !dbg !9202, !llvm.loop !9203

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #37, !dbg !9204
  br label %15, !dbg !9204

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9192, metadata !DIExpression()), !dbg !9194
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #37, !dbg !9197
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9193, metadata !DIExpression()), !dbg !9194
  %14 = icmp eq %struct._snode* %13, null, !dbg !9197
  br i1 %14, label %15, label %7, !dbg !9195, !llvm.loop !9203

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9207 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9211, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9212, metadata !DIExpression()), !dbg !9213
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #37, !dbg !9214
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #37, !dbg !9214
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #37, !dbg !9214
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #37, !dbg !9215
  %5 = icmp eq %struct._snode* %4, null, !dbg !9215
  br i1 %5, label %6, label %8, !dbg !9214

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #37, !dbg !9217
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #37, !dbg !9217
  br label %8, !dbg !9217

8:                                                ; preds = %6, %2
  ret void, !dbg !9214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #11 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9223, metadata !DIExpression()), !dbg !9224
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9225
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9225
  ret %struct._snode* %3, !dbg !9226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !9227 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9231, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9232, metadata !DIExpression()), !dbg !9233
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9234
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9235
  ret void, !dbg !9236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9239, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9240, metadata !DIExpression()), !dbg !9241
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9242
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9243
  ret void, !dbg !9244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #11 !dbg !9245 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9247, metadata !DIExpression()), !dbg !9248
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9249
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9249
  ret %struct._snode* %3, !dbg !9250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !9251 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9253, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9254, metadata !DIExpression()), !dbg !9255
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9256
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9257
  ret void, !dbg !9258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #13 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9263, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9264, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9265, metadata !DIExpression()), !dbg !9266
  %4 = icmp eq %struct._snode* %1, null, !dbg !9267
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #37, !dbg !9269
  br i1 %4, label %6, label %11, !dbg !9270

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #37, !dbg !9271
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #37, !dbg !9273
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9273
  br i1 %8, label %9, label %15, !dbg !9271

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #37, !dbg !9275
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #37, !dbg !9275
  br label %15, !dbg !9275

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #37, !dbg !9277
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #37, !dbg !9279
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9279
  br i1 %13, label %14, label %15, !dbg !9277

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #37, !dbg !9281
  br label %15, !dbg !9281

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #37, !dbg !9270
  ret void, !dbg !9270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #11 !dbg !9283 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9287, metadata !DIExpression()), !dbg !9288
  %2 = icmp eq %struct._snode* %0, null, !dbg !9289
  br i1 %2, label %5, label %3, !dbg !9289

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #37, !dbg !9289
  br label %5, !dbg !9289

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9289
  ret %struct._snode* %6, !dbg !9289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #11 !dbg !9290 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9292, metadata !DIExpression()), !dbg !9293
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #37, !dbg !9294
  ret %struct._snode* %2, !dbg !9294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #11 !dbg !9295 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9297, metadata !DIExpression()), !dbg !9298
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9299
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9299
  ret %struct._snode* %3, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9303, metadata !DIExpression()), !dbg !9306
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #37, !dbg !9307, !range !9308
  call void @llvm.dbg.value(metadata i32 %2, metadata !9304, metadata !DIExpression()), !dbg !9306
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #37, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %3, metadata !9305, metadata !DIExpression()), !dbg !9306
  ret i32 %3, !dbg !9310
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9313, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i8* %1, metadata !9314, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i8* %1, metadata !9315, metadata !DIExpression()), !dbg !9316
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9317
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9317
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9318
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9318
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9318
  %8 = shl nuw i32 1, %0, !dbg !9319
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #37, !dbg !9320
  ret void, !dbg !9321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9322 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9326, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.value(metadata i32 %1, metadata !9327, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9328, metadata !DIExpression()), !dbg !9332
  %4 = bitcast i64* %3 to i8*, !dbg !9333
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #33, !dbg !9333
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9330, metadata !DIExpression()), !dbg !9332
  store i64 70368744177732, i64* %3, align 8, !dbg !9334
  call void @llvm.dbg.value(metadata i64* %3, metadata !9330, metadata !DIExpression(DW_OP_deref)), !dbg !9332
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #37, !dbg !9335
  call void @llvm.dbg.value(metadata i32 %5, metadata !9331, metadata !DIExpression()), !dbg !9332
  %6 = icmp eq i32 %5, 0, !dbg !9336
  br i1 %6, label %7, label %8, !dbg !9338

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #37, !dbg !9339
  br label %8, !dbg !9340

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #33, !dbg !9341
  ret void, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9344, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8* %0, metadata !9345, metadata !DIExpression()), !dbg !9347
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9348
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9346, metadata !DIExpression()), !dbg !9347
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9349
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9349
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #38, !dbg !9350
  ret i32 %5, !dbg !9351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9354, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i32 %1, metadata !9355, metadata !DIExpression()), !dbg !9357
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #37, !dbg !9358
  call void @llvm.dbg.value(metadata i32 %3, metadata !9356, metadata !DIExpression()), !dbg !9357
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #37, !dbg !9359
  ret void, !dbg !9360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #17 !dbg !9361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9365, metadata !DIExpression()), !dbg !9366
  %2 = sdiv i32 %0, 4, !dbg !9367
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9368
  %6 = add nsw i32 %5, 16, !dbg !9369
  %7 = shl i32 15, %6, !dbg !9370
  %8 = or i32 %7, %2, !dbg !9371
  ret i32 %8, !dbg !9372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9377, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.value(metadata i32 %1, metadata !9378, metadata !DIExpression()), !dbg !9379
  %3 = and i32 %1, 255, !dbg !9380
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9380
  %5 = load volatile i32, i32* %4, align 4, !dbg !9380
  %6 = lshr i32 %1, 16, !dbg !9380
  %7 = xor i32 %6, -1, !dbg !9380
  %8 = and i32 %5, %7, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %6, metadata !9381, metadata !DIExpression()) #33, !dbg !9385
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #41, !dbg !9387, !srcloc !9388
  call void @llvm.dbg.value(metadata i32 %9, metadata !9384, metadata !DIExpression()) #33, !dbg !9385
  call void @llvm.dbg.value(metadata i32 %9, metadata !9389, metadata !DIExpression()) #33, !dbg !9394
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #33, !dbg !9396, !range !4283
  %11 = shl i32 %0, %10, !dbg !9380
  %12 = or i32 %11, %8, !dbg !9380
  store volatile i32 %12, i32* %4, align 4, !dbg !9380
  ret void, !dbg !9397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9398 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9402, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9403, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata i32 %2, metadata !9404, metadata !DIExpression()), !dbg !9407
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #37, !dbg !9408
  %5 = icmp eq %struct._snode* %4, null, !dbg !9408
  br i1 %5, label %21, label %6, !dbg !9408

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #37, !dbg !9410
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9406, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9405, metadata !DIExpression()), !dbg !9407
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9411
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9411
  %11 = load i32, i32* %10, align 4, !dbg !9411
  %12 = and i32 %11, %2, !dbg !9415
  %13 = icmp eq i32 %12, 0, !dbg !9415
  br i1 %13, label %19, label %14, !dbg !9416

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9405, metadata !DIExpression()), !dbg !9407
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9417
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9417
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9417
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #38, !dbg !9419
  br label %19, !dbg !9420

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9405, metadata !DIExpression()), !dbg !9407
  %20 = icmp eq %struct._snode* %8, null, !dbg !9421
  br i1 %20, label %21, label %6, !dbg !9421

21:                                               ; preds = %19, %3
  ret void, !dbg !9422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9425, metadata !DIExpression()), !dbg !9426
  %2 = and i32 %0, 255, !dbg !9427
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9427
  %4 = load volatile i32, i32* %3, align 4, !dbg !9427
  %5 = lshr i32 %0, 16, !dbg !9427
  %6 = and i32 %4, %5, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %5, metadata !9381, metadata !DIExpression()) #33, !dbg !9428
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #41, !dbg !9430, !srcloc !9388
  call void @llvm.dbg.value(metadata i32 %7, metadata !9384, metadata !DIExpression()) #33, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %7, metadata !9389, metadata !DIExpression()) #33, !dbg !9431
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #33, !dbg !9433, !range !4283
  %9 = lshr i32 %6, %8, !dbg !9434
  ret i32 %9, !dbg !9435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !9436 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9441, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()), !dbg !9443
  %3 = shl i32 %1, 16, !dbg !9444
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9444
  store volatile i32 %3, i32* %4, align 4, !dbg !9444
  ret void, !dbg !9445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #24 !dbg !9446 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9450, metadata !DIExpression()), !dbg !9451
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9452
  %3 = load volatile i32, i32* %2, align 4, !dbg !9452
  ret i32 %3, !dbg !9453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !9454 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9456, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i32 %1, metadata !9457, metadata !DIExpression()), !dbg !9458
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9459
  store volatile i32 %1, i32* %3, align 4, !dbg !9459
  ret void, !dbg !9460
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #24 !dbg !9461 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9463, metadata !DIExpression()), !dbg !9464
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9465
  %3 = load volatile i32, i32* %2, align 4, !dbg !9465
  ret i32 %3, !dbg !9466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #13 !dbg !9467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9471, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i32* %1, metadata !9472, metadata !DIExpression()), !dbg !9473
  %3 = and i32 %0, 131072, !dbg !9474
  %4 = icmp eq i32 %3, 0, !dbg !9476
  br i1 %4, label %22, label %5, !dbg !9477

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9478
  %6 = and i32 %0, 2, !dbg !9480
  %7 = icmp eq i32 %6, 0, !dbg !9482
  br i1 %7, label %11, label %8, !dbg !9483

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9484
  %10 = icmp eq i32 %9, 0, !dbg !9484
  br i1 %10, label %33, label %11, !dbg !9487

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9488
  store i32 %12, i32* %1, align 4, !dbg !9488
  %13 = and i32 %0, 16, !dbg !9489
  %14 = icmp eq i32 %13, 0, !dbg !9491
  br i1 %14, label %17, label %15, !dbg !9492

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9493
  br label %31, !dbg !9495

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9496
  %19 = icmp eq i32 %18, 0, !dbg !9498
  br i1 %19, label %33, label %20, !dbg !9499

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9500
  br label %31, !dbg !9502

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9503
  %24 = icmp eq i32 %23, 0, !dbg !9505
  br i1 %24, label %31, label %25, !dbg !9506

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9507
  %27 = icmp eq i32 %26, 0, !dbg !9510
  br i1 %27, label %28, label %31, !dbg !9511

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9512
  br label %33, !dbg !9513

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9473
  ret i32 %34, !dbg !9513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9518, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %1, metadata !9519, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %2, metadata !9520, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %3, metadata !9521, metadata !DIExpression()), !dbg !9529
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9530
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9530
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9530
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9522, metadata !DIExpression()), !dbg !9529
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9531
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9531
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9531
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9523, metadata !DIExpression()), !dbg !9529
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #37, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %11, metadata !9524, metadata !DIExpression()), !dbg !9529
  %12 = and i32 %2, 48, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %12, metadata !9525, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %2, metadata !9526, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %2, metadata !9527, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %2, metadata !9528, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9529
  %13 = lshr i32 %2, 6, !dbg !9534
  %14 = and i32 %13, 1, !dbg !9534
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #37, !dbg !9535
  %15 = lshr i32 %2, 7, !dbg !9536
  %16 = and i32 %15, 3, !dbg !9536
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #37, !dbg !9537
  %17 = lshr i32 %2, 9, !dbg !9538
  %18 = and i32 %17, 3, !dbg !9538
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #37, !dbg !9539
  %19 = icmp eq i32 %12, 32, !dbg !9540
  br i1 %19, label %20, label %24, !dbg !9542

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9543
  br i1 %21, label %22, label %23, !dbg !9546

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #37, !dbg !9547
  br label %24, !dbg !9549

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #37, !dbg !9550
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9552
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #37, !dbg !9553
  ret void, !dbg !9554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #17 !dbg !9555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9557, metadata !DIExpression()), !dbg !9559
  %2 = shl nuw i32 1, %0, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %2, metadata !9558, metadata !DIExpression()), !dbg !9559
  ret i32 %2, !dbg !9561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #21 !dbg !9562 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9566, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.value(metadata i32 %1, metadata !9567, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.value(metadata i32 %2, metadata !9568, metadata !DIExpression()), !dbg !9569
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9570
  %5 = load volatile i32, i32* %4, align 4, !dbg !9570
  %6 = xor i32 %1, -1, !dbg !9570
  %7 = and i32 %5, %6, !dbg !9570
  %8 = mul i32 %2, %1, !dbg !9570
  %9 = or i32 %7, %8, !dbg !9570
  store volatile i32 %9, i32* %4, align 4, !dbg !9570
  ret void, !dbg !9571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9572 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9574, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.value(metadata i32 %1, metadata !9575, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.value(metadata i32 %2, metadata !9576, metadata !DIExpression()), !dbg !9577
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9578
  %5 = load volatile i32, i32* %4, align 4, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9579
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #41, !dbg !9581, !srcloc !9388
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9579
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9582
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #33, !dbg !9584, !range !4283
  %8 = shl nuw nsw i32 %7, 1, !dbg !9578
  %9 = shl i32 3, %8, !dbg !9578
  %10 = xor i32 %9, -1, !dbg !9578
  %11 = and i32 %5, %10, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9585
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9585
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9587
  %12 = shl i32 %2, %8, !dbg !9578
  %13 = or i32 %11, %12, !dbg !9578
  store volatile i32 %13, i32* %4, align 4, !dbg !9578
  ret void, !dbg !9589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9590 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9592, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %1, metadata !9593, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9594, metadata !DIExpression()), !dbg !9595
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9596
  %5 = load volatile i32, i32* %4, align 4, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9597
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #41, !dbg !9599, !srcloc !9388
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9600
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #33, !dbg !9602, !range !4283
  %8 = shl nuw nsw i32 %7, 1, !dbg !9596
  %9 = shl i32 3, %8, !dbg !9596
  %10 = xor i32 %9, -1, !dbg !9596
  %11 = and i32 %5, %10, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9605
  %12 = shl i32 %2, %8, !dbg !9596
  %13 = or i32 %11, %12, !dbg !9596
  store volatile i32 %13, i32* %4, align 4, !dbg !9596
  ret void, !dbg !9607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9610, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i32 %1, metadata !9611, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i32 %2, metadata !9612, metadata !DIExpression()), !dbg !9613
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9614
  %5 = load volatile i32, i32* %4, align 4, !dbg !9614
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9615
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #41, !dbg !9617, !srcloc !9388
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9618
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #33, !dbg !9620, !range !4283
  %8 = shl nuw nsw i32 %7, 2, !dbg !9614
  %9 = shl i32 15, %8, !dbg !9614
  %10 = xor i32 %9, -1, !dbg !9614
  %11 = and i32 %5, %10, !dbg !9614
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9623
  %12 = shl i32 %2, %8, !dbg !9614
  %13 = or i32 %11, %12, !dbg !9614
  store volatile i32 %13, i32* %4, align 4, !dbg !9614
  ret void, !dbg !9625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9626 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9628, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9629, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %2, metadata !9630, metadata !DIExpression()), !dbg !9631
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9632
  %5 = load volatile i32, i32* %4, align 4, !dbg !9632
  %6 = lshr i32 %1, 8, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %6, metadata !9381, metadata !DIExpression()) #33, !dbg !9633
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #41, !dbg !9635, !srcloc !9388
  call void @llvm.dbg.value(metadata i32 %7, metadata !9384, metadata !DIExpression()) #33, !dbg !9633
  call void @llvm.dbg.value(metadata i32 %7, metadata !9389, metadata !DIExpression()) #33, !dbg !9636
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #33, !dbg !9638, !range !4283
  %9 = shl nuw nsw i32 %8, 2, !dbg !9632
  %10 = shl i32 15, %9, !dbg !9632
  %11 = xor i32 %10, -1, !dbg !9632
  %12 = and i32 %5, %11, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %6, metadata !9381, metadata !DIExpression()) #33, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %7, metadata !9384, metadata !DIExpression()) #33, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %7, metadata !9389, metadata !DIExpression()) #33, !dbg !9641
  %13 = shl i32 %2, %9, !dbg !9632
  %14 = or i32 %12, %13, !dbg !9632
  store volatile i32 %14, i32* %4, align 4, !dbg !9632
  ret void, !dbg !9643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9644 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9646, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.value(metadata i32 %1, metadata !9647, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.value(metadata i32 %2, metadata !9648, metadata !DIExpression()), !dbg !9649
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9650
  %5 = load volatile i32, i32* %4, align 4, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9651
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #41, !dbg !9653, !srcloc !9388
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9654
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #33, !dbg !9656, !range !4283
  %8 = shl nuw nsw i32 %7, 1, !dbg !9650
  %9 = shl i32 3, %8, !dbg !9650
  %10 = xor i32 %9, -1, !dbg !9650
  %11 = and i32 %5, %10, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()) #33, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %6, metadata !9384, metadata !DIExpression()) #33, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %6, metadata !9389, metadata !DIExpression()) #33, !dbg !9659
  %12 = shl i32 %2, %8, !dbg !9650
  %13 = or i32 %11, %12, !dbg !9650
  store volatile i32 %13, i32* %4, align 4, !dbg !9650
  ret void, !dbg !9661
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9664, metadata !DIExpression()), !dbg !9667
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9668
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9668
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9668
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9665, metadata !DIExpression()), !dbg !9667
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9669
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9670
  %6 = tail call fastcc zeroext i1 @device_is_ready.58() #37, !dbg !9671
  br i1 %6, label %7, label %11, !dbg !9673

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #37, !dbg !9674
  call void @llvm.dbg.value(metadata i32 %8, metadata !9666, metadata !DIExpression()), !dbg !9667
  %9 = icmp slt i32 %8, 0, !dbg !9675
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9677
  br label %11, !dbg !9677

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9667
  ret i32 %12, !dbg !9678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.58() unnamed_addr #1 !dbg !9679 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9683, metadata !DIExpression()), !dbg !9684
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !9685, !srcloc !9687
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.59() #37, !dbg !9688
  ret i1 %1, !dbg !9689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9694, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i8 1, metadata !9695, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9696, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 0, metadata !9697, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9698, metadata !DIExpression()), !dbg !9699
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9700
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9700
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9700
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9696, metadata !DIExpression()), !dbg !9699
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9701
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9704
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #37, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %7, metadata !9697, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 %7, metadata !9697, metadata !DIExpression()), !dbg !9699
  ret i32 %7, !dbg !9706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.59() unnamed_addr #1 !dbg !9707 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9709, metadata !DIExpression()), !dbg !9710
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #38, !dbg !9711
  ret i1 %1, !dbg !9712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9717, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %1, metadata !9718, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %2, metadata !9719, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 %3, metadata !9720, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.value(metadata i32 0, metadata !9721, metadata !DIExpression()), !dbg !9725
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #37, !dbg !9726
  %5 = icmp eq i32 %3, 17, !dbg !9727
  br i1 %5, label %6, label %14, !dbg !9728

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %7, metadata !9722, metadata !DIExpression()), !dbg !9730
  %8 = icmp eq i32 %7, 0, !dbg !9731
  %9 = shl nuw i32 1, %1, !dbg !9733
  br i1 %8, label %12, label %10, !dbg !9734

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #37, !dbg !9735
  br label %14, !dbg !9737

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #37, !dbg !9738
  br label %14, !dbg !9741

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9742
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #25 !dbg !9743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9745, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.value(metadata i8* %1, metadata !9746, metadata !DIExpression()), !dbg !9749
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9750
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9750
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9750
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9747, metadata !DIExpression()), !dbg !9749
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9751
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9751
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #37, !dbg !9753
  %9 = icmp eq i32 %8, 0, !dbg !9753
  br i1 %9, label %12, label %10, !dbg !9754

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9755
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #37, !dbg !9757
  br label %12, !dbg !9758

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9759
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #37, !dbg !9761
  %15 = icmp eq i32 %14, 0, !dbg !9761
  br i1 %15, label %19, label %16, !dbg !9762

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9763
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #37, !dbg !9764
  store i8 %18, i8* %1, align 1, !dbg !9765
  br label %19, !dbg !9766

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9749
  ret i32 %20, !dbg !9767
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i8 %1, metadata !9771, metadata !DIExpression()), !dbg !9774
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9775
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9775
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9775
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9772, metadata !DIExpression()), !dbg !9774
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9776

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9777
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #37, !dbg !9780
  %10 = icmp eq i32 %9, 0, !dbg !9780
  br i1 %10, label %18, label %11, !dbg !9781

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !9782, !srcloc !9789
  call void @llvm.dbg.value(metadata i32 undef, metadata !9785, metadata !DIExpression()) #33, !dbg !9790
  call void @llvm.dbg.value(metadata i32 undef, metadata !9786, metadata !DIExpression()) #33, !dbg !9790
  call void @llvm.dbg.value(metadata i32 undef, metadata !9773, metadata !DIExpression()), !dbg !9774
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9791
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #37, !dbg !9793
  %15 = icmp eq i32 %14, 0, !dbg !9793
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9782
  br i1 %15, label %17, label %19, !dbg !9794

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9785, metadata !DIExpression()) #33, !dbg !9790
  call void @llvm.dbg.value(metadata i32 %16, metadata !9773, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 undef, metadata !9795, metadata !DIExpression()) #33, !dbg !9798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #33, !dbg !9800, !srcloc !9801
  br label %18, !dbg !9802

18:                                               ; preds = %17, %7
  br label %7, !dbg !9777, !llvm.loop !9803

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9782
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9805
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #37, !dbg !9806
  call void @llvm.dbg.value(metadata i32 %20, metadata !9795, metadata !DIExpression()) #33, !dbg !9807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #33, !dbg !9809, !srcloc !9801
  ret void, !dbg !9810
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #25 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9813, metadata !DIExpression()), !dbg !9816
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9817
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9817
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9817
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9814, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 0, metadata !9815, metadata !DIExpression()), !dbg !9816
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9818
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9818
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #37, !dbg !9820
  %8 = icmp ne i32 %7, 0, !dbg !9820
  %9 = zext i1 %8 to i32, !dbg !9821
  call void @llvm.dbg.value(metadata i32 %9, metadata !9815, metadata !DIExpression()), !dbg !9816
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9822
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #37, !dbg !9824
  %12 = icmp eq i32 %11, 0, !dbg !9824
  %13 = or i32 %9, 2, !dbg !9825
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9825
  call void @llvm.dbg.value(metadata i32 %14, metadata !9815, metadata !DIExpression()), !dbg !9816
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9826
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #37, !dbg !9828
  %17 = icmp eq i32 %16, 0, !dbg !9828
  %18 = or i32 %14, 4, !dbg !9829
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %19, metadata !9815, metadata !DIExpression()), !dbg !9816
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9830
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #37, !dbg !9832
  %22 = icmp eq i32 %21, 0, !dbg !9832
  %23 = or i32 %19, 8, !dbg !9833
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9833
  call void @llvm.dbg.value(metadata i32 %24, metadata !9815, metadata !DIExpression()), !dbg !9816
  %25 = and i32 %24, 8, !dbg !9834
  %26 = icmp eq i32 %25, 0, !dbg !9834
  br i1 %26, label %29, label %27, !dbg !9836

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9837
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #37, !dbg !9839
  br label %29, !dbg !9840

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9841
  %31 = icmp eq i32 %30, 0, !dbg !9841
  br i1 %31, label %34, label %32, !dbg !9843

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9844
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #37, !dbg !9846
  br label %34, !dbg !9847

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9848
  %36 = icmp eq i32 %35, 0, !dbg !9848
  br i1 %36, label %39, label %37, !dbg !9850

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9851
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #37, !dbg !9853
  br label %39, !dbg !9854

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9855
  %41 = icmp eq i32 %40, 0, !dbg !9855
  br i1 %41, label %44, label %42, !dbg !9857

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9858
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #37, !dbg !9860
  br label %44, !dbg !9861

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9862
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #37, !dbg !9863
  ret i32 %24, !dbg !9864
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9867, metadata !DIExpression()), !dbg !9876
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9868, metadata !DIExpression()), !dbg !9876
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9877
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9877
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9877
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9869, metadata !DIExpression()), !dbg !9876
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9878
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9878
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9878
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9870, metadata !DIExpression()), !dbg !9876
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9879
  %10 = load i8, i8* %9, align 4, !dbg !9879
  %11 = zext i8 %10 to i32, !dbg !9880
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #37, !dbg !9881
  call void @llvm.dbg.value(metadata i32 %12, metadata !9872, metadata !DIExpression()), !dbg !9876
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9882
  %14 = load i8, i8* %13, align 1, !dbg !9882
  %15 = zext i8 %14 to i32, !dbg !9883
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #37, !dbg !9884
  call void @llvm.dbg.value(metadata i32 %16, metadata !9873, metadata !DIExpression()), !dbg !9876
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9885
  %18 = load i8, i8* %17, align 2, !dbg !9885
  %19 = zext i8 %18 to i32, !dbg !9886
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #37, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %20, metadata !9874, metadata !DIExpression()), !dbg !9876
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9888
  %22 = load i8, i8* %21, align 1, !dbg !9888
  %23 = zext i8 %22 to i32, !dbg !9889
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #37, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %24, metadata !9875, metadata !DIExpression()), !dbg !9876
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9891

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9893
  br i1 %26, label %69, label %27, !dbg !9895

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9896

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9897
  br i1 %29, label %65, label %30, !dbg !9897

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9899
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9876
  br i1 %31, label %38, label %34, !dbg !9901

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9902
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !9902

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9905
  br i1 %37, label %38, label %69, !dbg !9906

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9907
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #37, !dbg !9908
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #37, !dbg !9909
  %41 = icmp eq i32 %12, %40, !dbg !9911
  br i1 %41, label %43, label %42, !dbg !9912

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #37, !dbg !9913
  br label %43, !dbg !9915

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #37, !dbg !9916
  %45 = icmp eq i32 %16, %44, !dbg !9918
  br i1 %45, label %47, label %46, !dbg !9919

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #37, !dbg !9920
  br label %47, !dbg !9922

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #37, !dbg !9923
  %49 = icmp eq i32 %20, %48, !dbg !9925
  br i1 %49, label %51, label %50, !dbg !9926

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #37, !dbg !9927
  br label %51, !dbg !9929

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #37, !dbg !9930
  %53 = icmp eq i32 %24, %52, !dbg !9932
  br i1 %53, label %55, label %54, !dbg !9933

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #37, !dbg !9934
  br label %55, !dbg !9936

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9937
  %57 = load i32, i32* %56, align 4, !dbg !9937
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9939
  %59 = load i32, i32* %58, align 4, !dbg !9939
  %60 = icmp eq i32 %57, %59, !dbg !9940
  br i1 %60, label %63, label %61, !dbg !9941

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #37, !dbg !9942
  %62 = load i32, i32* %56, align 4, !dbg !9944
  store i32 %62, i32* %58, align 4, !dbg !9945
  br label %63, !dbg !9946

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9947
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #37, !dbg !9948
  br label %69, !dbg !9949

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9897
  %67 = and i8 %66, 1, !dbg !9897
  %68 = icmp eq i8 %67, 0, !dbg !9897
  br i1 %68, label %30, label %69, !dbg !9897

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9876
  ret i32 %70, !dbg !9950
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #30 !dbg !9951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9953, metadata !DIExpression()), !dbg !9956
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9954, metadata !DIExpression()), !dbg !9956
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9957
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9957
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9957
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9955, metadata !DIExpression()), !dbg !9956
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9958
  %7 = load i32, i32* %6, align 4, !dbg !9958
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9959
  store i32 %7, i32* %8, align 4, !dbg !9960
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #37, !dbg !9961, !range !9962
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #37, !dbg !9963
  %11 = trunc i32 %10 to i8, !dbg !9963
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9964
  store i8 %11, i8* %12, align 4, !dbg !9965
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #37, !dbg !9966, !range !9967
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #37, !dbg !9968
  %15 = trunc i32 %14 to i8, !dbg !9968
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9969
  store i8 %15, i8* %16, align 1, !dbg !9970
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #37, !dbg !9971
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #37, !dbg !9972, !range !9962
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #37, !dbg !9973
  %20 = trunc i32 %19 to i8, !dbg !9973
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9974
  store i8 %20, i8* %21, align 2, !dbg !9975
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #37, !dbg !9976, !range !9977
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #37, !dbg !9978
  %24 = trunc i32 %23 to i8, !dbg !9978
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9979
  store i8 %24, i8* %25, align 1, !dbg !9980
  ret i32 0, !dbg !9981
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #24 !dbg !9982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9986, metadata !DIExpression()), !dbg !9988
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9989
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9989
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9989
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9987, metadata !DIExpression()), !dbg !9988
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9990
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9990
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #37, !dbg !9991
  ret i32 %7, !dbg !9992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #17 !dbg !9993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9997, metadata !DIExpression()), !dbg !9998
  %2 = icmp eq i32 %0, 1024, !dbg !9999
  %3 = select i1 %2, i32 2, i32 0, !dbg !9999
  %4 = icmp eq i32 %0, 1536, !dbg !9999
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9999
  ret i32 %5, !dbg !10000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #24 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10003, metadata !DIExpression()), !dbg !10005
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10006
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10006
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10006
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10004, metadata !DIExpression()), !dbg !10005
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10007
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10007
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #37, !dbg !10008
  ret i32 %7, !dbg !10009
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #15 !dbg !10010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10014, metadata !DIExpression()), !dbg !10015
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10016
  %3 = icmp ult i32 %2, 4, !dbg !10016
  br i1 %3, label %4, label %7, !dbg !10016

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10016
  %6 = load i32, i32* %5, align 4, !dbg !10016
  br label %7, !dbg !10016

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10017
  ret i32 %8, !dbg !10019
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #24 !dbg !10020 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10022, metadata !DIExpression()), !dbg !10024
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10025
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10025
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10025
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10023, metadata !DIExpression()), !dbg !10024
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10026
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10026
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #37, !dbg !10027
  ret i32 %7, !dbg !10028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10033, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata i32 %1, metadata !10034, metadata !DIExpression()), !dbg !10035
  %3 = icmp eq i32 %0, 4096, !dbg !10036
  %4 = icmp eq i32 %1, 0, !dbg !10036
  %5 = select i1 %4, i32 4, i32 3, !dbg !10036
  %6 = select i1 %4, i32 3, i32 2, !dbg !10036
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10036
  ret i32 %7, !dbg !10037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #24 !dbg !10038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10040, metadata !DIExpression()), !dbg !10042
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10043
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10043
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10043
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10041, metadata !DIExpression()), !dbg !10042
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10044
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10044
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #37, !dbg !10045
  ret i32 %7, !dbg !10046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #17 !dbg !10047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10051, metadata !DIExpression()), !dbg !10052
  %2 = icmp eq i32 %0, 768, !dbg !10053
  %3 = zext i1 %2 to i32, !dbg !10052
  ret i32 %3, !dbg !10055
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10061, metadata !DIExpression()), !dbg !10062
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10063
  %3 = load volatile i32, i32* %2, align 4, !dbg !10063
  %4 = and i32 %3, 768, !dbg !10063
  ret i32 %4, !dbg !10064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10065 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10067, metadata !DIExpression()), !dbg !10068
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10069
  %3 = load volatile i32, i32* %2, align 4, !dbg !10069
  %4 = and i32 %3, 4096, !dbg !10069
  ret i32 %4, !dbg !10070
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10071 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10073, metadata !DIExpression()), !dbg !10074
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10075
  %3 = load volatile i32, i32* %2, align 4, !dbg !10075
  %4 = and i32 %3, 12288, !dbg !10075
  ret i32 %4, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10077 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10079, metadata !DIExpression()), !dbg !10080
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10081
  %3 = load volatile i32, i32* %2, align 4, !dbg !10081
  %4 = and i32 %3, 1536, !dbg !10081
  ret i32 %4, !dbg !10082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #17 !dbg !10083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = icmp eq i32 %0, 2, !dbg !10089
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10089
  %4 = icmp eq i32 %0, 1, !dbg !10089
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10089
  ret i32 %5, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #17 !dbg !10091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10095, metadata !DIExpression()), !dbg !10096
  %2 = icmp ult i32 %0, 3, !dbg !10097
  br i1 %2, label %3, label %6, !dbg !10097

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10097
  %5 = load i32, i32* %4, align 4, !dbg !10097
  br label %6, !dbg !10097

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10098
  ret i32 %7, !dbg !10100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10105, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata i32 %1, metadata !10106, metadata !DIExpression()), !dbg !10107
  %3 = icmp eq i32 %0, 4, !dbg !10108
  %4 = icmp eq i32 %1, 0, !dbg !10108
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10108
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10108
  ret i32 %6, !dbg !10109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #17 !dbg !10110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  %2 = icmp eq i32 %0, 1, !dbg !10116
  %3 = select i1 %2, i32 768, i32 0, !dbg !10115
  ret i32 %3, !dbg !10118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !10119 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10123, metadata !DIExpression()), !dbg !10124
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10125
  %3 = load volatile i32, i32* %2, align 4, !dbg !10125
  %4 = and i32 %3, -8193, !dbg !10125
  store volatile i32 %4, i32* %2, align 4, !dbg !10125
  ret void, !dbg !10126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #21 !dbg !10127 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10131, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata i32 %1, metadata !10132, metadata !DIExpression()), !dbg !10134
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10135
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10135
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10135
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10133, metadata !DIExpression()), !dbg !10134
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10136
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10136
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #37, !dbg !10137
  ret void, !dbg !10138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #21 !dbg !10139 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10141, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i32 %1, metadata !10142, metadata !DIExpression()), !dbg !10144
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10145
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10145
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10145
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10143, metadata !DIExpression()), !dbg !10144
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10146
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10146
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #37, !dbg !10147
  ret void, !dbg !10148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #21 !dbg !10149 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10151, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata i32 %1, metadata !10152, metadata !DIExpression()), !dbg !10154
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10155
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10155
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10155
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10153, metadata !DIExpression()), !dbg !10154
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10156
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10156
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #37, !dbg !10157
  ret void, !dbg !10158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #21 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10161, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %1, metadata !10162, metadata !DIExpression()), !dbg !10164
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10165
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10165
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10165
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10163, metadata !DIExpression()), !dbg !10164
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10166
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10166
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #37, !dbg !10167
  ret void, !dbg !10168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10169 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10171, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 %1, metadata !10172, metadata !DIExpression()), !dbg !10176
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10177
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10177
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10177
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10173, metadata !DIExpression()), !dbg !10176
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10178
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10178
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10178
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10174, metadata !DIExpression()), !dbg !10176
  %10 = bitcast i32* %3 to i8*, !dbg !10179
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #33, !dbg !10179
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10180
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10180
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10184
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10184
  %15 = load i8*, i8** %14, align 4, !dbg !10184
  call void @llvm.dbg.value(metadata i32* %3, metadata !10175, metadata !DIExpression(DW_OP_deref)), !dbg !10176
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #37, !dbg !10185
  %17 = icmp slt i32 %16, 0, !dbg !10186
  br i1 %17, label %23, label %18, !dbg !10187

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10188
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10188
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #37, !dbg !10189
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10190
  %22 = load i32, i32* %3, align 4, !dbg !10191
  call void @llvm.dbg.value(metadata i32 %22, metadata !10175, metadata !DIExpression()), !dbg !10176
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #37, !dbg !10192
  br label %23, !dbg !10193

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #33, !dbg !10193
  ret void, !dbg !10193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !10194 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10196, metadata !DIExpression()), !dbg !10197
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10198
  %3 = load volatile i32, i32* %2, align 4, !dbg !10198
  %4 = or i32 %3, 8192, !dbg !10198
  store volatile i32 %4, i32* %2, align 4, !dbg !10198
  ret void, !dbg !10199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10202, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i8* %1, metadata !10203, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i32* %2, metadata !10204, metadata !DIExpression()), !dbg !10206
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10207
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10207
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10207
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10205, metadata !DIExpression()), !dbg !10206
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10208
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10208
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10210
  br i1 %9, label %12, label %10, !dbg !10211

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #38, !dbg !10212
  br label %12, !dbg !10213

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10206
  ret i32 %13, !dbg !10214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !10215 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10219, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 0, metadata !10220, metadata !DIExpression()), !dbg !10221
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10222
  %3 = load volatile i32, i32* %2, align 4, !dbg !10222
  %4 = and i32 %3, -32769, !dbg !10222
  store volatile i32 %4, i32* %2, align 4, !dbg !10222
  ret void, !dbg !10223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #21 !dbg !10224 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10228, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.value(metadata i32 %1, metadata !10229, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.value(metadata i32 0, metadata !10230, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.value(metadata i32 %2, metadata !10231, metadata !DIExpression()), !dbg !10232
  %4 = zext i32 %1 to i64, !dbg !10233
  %5 = mul nuw nsw i64 %4, 25, !dbg !10233
  %6 = zext i32 %2 to i64, !dbg !10233
  %7 = shl nuw nsw i64 %6, 2, !dbg !10233
  %8 = udiv i64 %5, %7, !dbg !10233
  %9 = trunc i64 %8 to i32, !dbg !10233
  %10 = udiv i32 %9, 100, !dbg !10233
  %11 = shl nuw nsw i32 %10, 4, !dbg !10233
  %12 = mul i32 %10, -100, !dbg !10233
  %13 = add i32 %12, %9, !dbg !10233
  %14 = shl i32 %13, 4, !dbg !10233
  %15 = add i32 %14, 50, !dbg !10233
  %16 = udiv i32 %15, 100, !dbg !10233
  %17 = and i32 %16, 240, !dbg !10233
  %18 = add nuw nsw i32 %17, %11, !dbg !10233
  %19 = and i32 %16, 15, !dbg !10233
  %20 = and i32 %18, 65520, !dbg !10236
  %21 = or i32 %20, %19, !dbg !10236
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10237
  store volatile i32 %21, i32* %22, align 4, !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !10240 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10242, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32 %1, metadata !10243, metadata !DIExpression()), !dbg !10244
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10245
  %4 = load volatile i32, i32* %3, align 4, !dbg !10245
  %5 = and i32 %4, -769, !dbg !10245
  %6 = or i32 %5, %1, !dbg !10245
  store volatile i32 %6, i32* %3, align 4, !dbg !10245
  ret void, !dbg !10246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10249, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i32 %1, metadata !10250, metadata !DIExpression()), !dbg !10251
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10252
  %4 = load volatile i32, i32* %3, align 4, !dbg !10252
  %5 = and i32 %4, -4097, !dbg !10252
  %6 = or i32 %5, %1, !dbg !10252
  store volatile i32 %6, i32* %3, align 4, !dbg !10252
  ret void, !dbg !10253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !10254 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10256, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 %1, metadata !10257, metadata !DIExpression()), !dbg !10258
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10259
  %4 = load volatile i32, i32* %3, align 4, !dbg !10259
  %5 = and i32 %4, -12289, !dbg !10259
  %6 = or i32 %5, %1, !dbg !10259
  store volatile i32 %6, i32* %3, align 4, !dbg !10259
  ret void, !dbg !10260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !10261 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10263, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 %1, metadata !10264, metadata !DIExpression()), !dbg !10265
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10266
  %4 = load volatile i32, i32* %3, align 4, !dbg !10266
  %5 = and i32 %4, -1537, !dbg !10266
  %6 = or i32 %5, %1, !dbg !10266
  store volatile i32 %6, i32* %3, align 4, !dbg !10266
  ret void, !dbg !10267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10270, metadata !DIExpression()), !dbg !10271
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10272
  %3 = load volatile i32, i32* %2, align 4, !dbg !10272
  %4 = lshr i32 %3, 3, !dbg !10273
  %5 = and i32 %4, 1, !dbg !10273
  ret i32 %5, !dbg !10274
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10277, metadata !DIExpression()), !dbg !10278
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10279
  %3 = load volatile i32, i32* %2, align 4, !dbg !10279
  %4 = and i32 %3, 1, !dbg !10279
  ret i32 %4, !dbg !10280
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10281 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10283, metadata !DIExpression()), !dbg !10284
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10285
  %3 = load volatile i32, i32* %2, align 4, !dbg !10285
  %4 = lshr i32 %3, 1, !dbg !10286
  %5 = and i32 %4, 1, !dbg !10286
  ret i32 %5, !dbg !10287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10290, metadata !DIExpression()), !dbg !10291
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10292
  %3 = load volatile i32, i32* %2, align 4, !dbg !10292
  %4 = lshr i32 %3, 8, !dbg !10293
  %5 = and i32 %4, 1, !dbg !10293
  ret i32 %5, !dbg !10294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10297, metadata !DIExpression()), !dbg !10298
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10299
  store volatile i32 -257, i32* %2, align 4, !dbg !10299
  ret void, !dbg !10300
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #25 !dbg !10301 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10303, metadata !DIExpression()), !dbg !10305
  %3 = bitcast i32* %2 to i8*, !dbg !10306
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10306
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10304, metadata !DIExpression()), !dbg !10307
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10308
  %5 = load volatile i32, i32* %4, align 4, !dbg !10308
  store volatile i32 %5, i32* %2, align 4, !dbg !10309
  %6 = load volatile i32, i32* %2, align 4, !dbg !10310
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10311
  %8 = load volatile i32, i32* %7, align 4, !dbg !10311
  store volatile i32 %8, i32* %2, align 4, !dbg !10312
  %9 = load volatile i32, i32* %2, align 4, !dbg !10313
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10314
  ret void, !dbg !10314
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #25 !dbg !10315 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10317, metadata !DIExpression()), !dbg !10319
  %3 = bitcast i32* %2 to i8*, !dbg !10320
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10320
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10318, metadata !DIExpression()), !dbg !10321
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10322
  %5 = load volatile i32, i32* %4, align 4, !dbg !10322
  store volatile i32 %5, i32* %2, align 4, !dbg !10323
  %6 = load volatile i32, i32* %2, align 4, !dbg !10324
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10325
  %8 = load volatile i32, i32* %7, align 4, !dbg !10325
  store volatile i32 %8, i32* %2, align 4, !dbg !10326
  %9 = load volatile i32, i32* %2, align 4, !dbg !10327
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10328
  ret void, !dbg !10328
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #25 !dbg !10329 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10331, metadata !DIExpression()), !dbg !10333
  %3 = bitcast i32* %2 to i8*, !dbg !10334
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10334
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10332, metadata !DIExpression()), !dbg !10335
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10336
  %5 = load volatile i32, i32* %4, align 4, !dbg !10336
  store volatile i32 %5, i32* %2, align 4, !dbg !10337
  %6 = load volatile i32, i32* %2, align 4, !dbg !10338
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10339
  %8 = load volatile i32, i32* %7, align 4, !dbg !10339
  store volatile i32 %8, i32* %2, align 4, !dbg !10340
  %9 = load volatile i32, i32* %2, align 4, !dbg !10341
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10342
  ret void, !dbg !10342
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #25 !dbg !10343 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10345, metadata !DIExpression()), !dbg !10347
  %3 = bitcast i32* %2 to i8*, !dbg !10348
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10346, metadata !DIExpression()), !dbg !10349
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10350
  %5 = load volatile i32, i32* %4, align 4, !dbg !10350
  store volatile i32 %5, i32* %2, align 4, !dbg !10351
  %6 = load volatile i32, i32* %2, align 4, !dbg !10352
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10353
  %8 = load volatile i32, i32* %7, align 4, !dbg !10353
  store volatile i32 %8, i32* %2, align 4, !dbg !10354
  %9 = load volatile i32, i32* %2, align 4, !dbg !10355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10356
  ret void, !dbg !10356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10357 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10359, metadata !DIExpression()), !dbg !10360
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10361
  %3 = load volatile i32, i32* %2, align 4, !dbg !10361
  %4 = lshr i32 %3, 7, !dbg !10362
  %5 = and i32 %4, 1, !dbg !10362
  ret i32 %5, !dbg !10363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #21 !dbg !10364 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10368, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i8 %1, metadata !10369, metadata !DIExpression()), !dbg !10370
  %3 = zext i8 %1 to i32, !dbg !10371
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10372
  store volatile i32 %3, i32* %4, align 4, !dbg !10373
  ret void, !dbg !10374
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10375 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10377, metadata !DIExpression()), !dbg !10378
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10379
  %3 = load volatile i32, i32* %2, align 4, !dbg !10379
  %4 = lshr i32 %3, 5, !dbg !10380
  %5 = and i32 %4, 1, !dbg !10380
  ret i32 %5, !dbg !10381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #24 !dbg !10382 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10386, metadata !DIExpression()), !dbg !10387
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10388
  %3 = load volatile i32, i32* %2, align 4, !dbg !10388
  %4 = trunc i32 %3 to i8, !dbg !10389
  ret i8 %4, !dbg !10390
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10393, metadata !DIExpression()), !dbg !10399
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10400
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10400
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10400
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10394, metadata !DIExpression()), !dbg !10399
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10401
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10401
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10401
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10395, metadata !DIExpression()), !dbg !10399
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #37, !dbg !10402
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10403
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10403
  %10 = tail call fastcc zeroext i1 @device_is_ready.67(%struct.device* noundef %9) #37, !dbg !10405
  br i1 %10, label %11, label %49, !dbg !10406

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10407
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10408
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10408
  %15 = load i8*, i8** %14, align 4, !dbg !10408
  %16 = tail call fastcc i32 @clock_control_on.68(%struct.device* noundef %12, i8* noundef %15) #37, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %16, metadata !10398, metadata !DIExpression()), !dbg !10399
  %17 = icmp eq i32 %16, 0, !dbg !10410
  br i1 %17, label %18, label %49, !dbg !10412

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10413
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10413
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #37, !dbg !10414
  call void @llvm.dbg.value(metadata i32 %21, metadata !10398, metadata !DIExpression()), !dbg !10399
  %22 = icmp slt i32 %21, 0, !dbg !10415
  br i1 %22, label %49, label %23, !dbg !10417

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10418
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10418
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #37, !dbg !10419
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10420
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #37, !dbg !10421
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10422
  %28 = load i32, i32* %27, align 4, !dbg !10422
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10424

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10396, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 4096, metadata !10397, metadata !DIExpression()), !dbg !10399
  br label %31, !dbg !10425

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10396, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 0, metadata !10397, metadata !DIExpression()), !dbg !10399
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10428
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10428
  call void @llvm.dbg.value(metadata i32 %33, metadata !10397, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 %32, metadata !10396, metadata !DIExpression()), !dbg !10399
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10429
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #37, !dbg !10430
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10431
  %36 = load i8, i8* %35, align 4, !dbg !10431, !range !6841
  %37 = icmp eq i8 %36, 0, !dbg !10431
  br i1 %37, label %39, label %38, !dbg !10433

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #37, !dbg !10434
  br label %39, !dbg !10436

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10437
  %41 = load i32, i32* %40, align 4, !dbg !10437
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #37, !dbg !10438
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10439
  %43 = load i8, i8* %42, align 4, !dbg !10439, !range !6841
  %44 = icmp eq i8 %43, 0, !dbg !10439
  br i1 %44, label %47, label %45, !dbg !10441

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10442
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #37, !dbg !10444
  br label %47, !dbg !10445

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10446
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #37, !dbg !10447
  br label %49, !dbg !10448

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10399
  ret i32 %50, !dbg !10449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10450 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10454, metadata !DIExpression()), !dbg !10458
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10459
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10459
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10459
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10455, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10456, metadata !DIExpression()), !dbg !10458
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10460
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10461
  ret void, !dbg !10462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.67(%struct.device* noundef %0) unnamed_addr #1 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10467, metadata !DIExpression()), !dbg !10468
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !10469, !srcloc !10471
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) #37, !dbg !10472
  ret i1 %2, !dbg !10473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.68(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10476, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.value(metadata i8* %1, metadata !10477, metadata !DIExpression()), !dbg !10479
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10480
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10480
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10480
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10478, metadata !DIExpression()), !dbg !10479
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10481
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10481
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #38, !dbg !10482
  ret i32 %8, !dbg !10483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10484 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10488, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i8 0, metadata !10489, metadata !DIExpression()), !dbg !10492
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10493
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #33, !dbg !10493
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10491, metadata !DIExpression(DW_OP_deref)), !dbg !10492
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #38, !dbg !10494
  call void @llvm.dbg.value(metadata i32 %4, metadata !10490, metadata !DIExpression()), !dbg !10492
  %5 = icmp slt i32 %4, 0, !dbg !10495
  br i1 %5, label %9, label %6, !dbg !10497

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10498
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10491, metadata !DIExpression()), !dbg !10492
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #37, !dbg !10499
  br label %9, !dbg !10500

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #33, !dbg !10501
  ret i32 %10, !dbg !10501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10502 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10504, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 12, metadata !10505, metadata !DIExpression()), !dbg !10508
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10509

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10510, metadata !DIExpression()) #33, !dbg !10516
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #33, !dbg !10519, !srcloc !10520
  call void @llvm.dbg.value(metadata i32 %4, metadata !10515, metadata !DIExpression()) #33, !dbg !10516
  %5 = or i32 %4, 12, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %5, metadata !10506, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.value(metadata i32 %5, metadata !10523, metadata !DIExpression()) #33, !dbg !10530
  call void @llvm.dbg.value(metadata i32* %2, metadata !10528, metadata !DIExpression()) #33, !dbg !10530
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #33, !dbg !10532, !srcloc !10533
  call void @llvm.dbg.value(metadata i32 %6, metadata !10529, metadata !DIExpression()) #33, !dbg !10530
  %7 = icmp eq i32 %6, 0, !dbg !10509
  br i1 %7, label %8, label %3, !dbg !10521, !llvm.loop !10534

8:                                                ; preds = %3
  ret void, !dbg !10535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #21 !dbg !10536 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10538, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %1, metadata !10539, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %2, metadata !10540, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 0, metadata !10541, metadata !DIExpression()), !dbg !10542
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10543
  %5 = load volatile i32, i32* %4, align 4, !dbg !10543
  %6 = and i32 %5, -5633, !dbg !10543
  %7 = or i32 %2, %1, !dbg !10543
  %8 = or i32 %7, %6, !dbg !10543
  store volatile i32 %8, i32* %4, align 4, !dbg !10543
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10544
  %10 = load volatile i32, i32* %9, align 4, !dbg !10544
  %11 = and i32 %10, -12289, !dbg !10544
  store volatile i32 %11, i32* %9, align 4, !dbg !10544
  ret void, !dbg !10545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !10546 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10548, metadata !DIExpression()), !dbg !10549
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10550
  %3 = load volatile i32, i32* %2, align 4, !dbg !10550
  %4 = or i32 %3, 8, !dbg !10550
  store volatile i32 %4, i32* %2, align 4, !dbg !10550
  ret void, !dbg !10551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10552 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10556, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10557, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.value(metadata i32 0, metadata !10558, metadata !DIExpression()), !dbg !10559
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10560
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10560
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10561
  %5 = load i8, i8* %4, align 4, !dbg !10561
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #38, !dbg !10562
  ret i32 %6, !dbg !10563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10566, metadata !DIExpression()), !dbg !10567
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #38, !dbg !10568
  ret i1 %2, !dbg !10569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #21 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10572, metadata !DIExpression()), !dbg !10573
  tail call fastcc void @__NVIC_SetPriority.71() #37, !dbg !10574
  store i32 8399, i32* @last_load, align 4, !dbg !10575
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10576
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10577
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10578
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10579
  %3 = or i32 %2, 7, !dbg !10579
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10579
  ret i32 0, !dbg !10580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.71() unnamed_addr #21 !dbg !10581 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10583, metadata !DIExpression()), !dbg !10585
  call void @llvm.dbg.value(metadata i32 1, metadata !10584, metadata !DIExpression()), !dbg !10585
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10586
  ret void, !dbg !10589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10592, metadata !DIExpression()), !dbg !10594
  %2 = tail call fastcc i32 @elapsed() #37, !dbg !10595
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10596
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10597
  %5 = add i32 %4, %3, !dbg !10597
  store i32 %5, i32* @cycle_count, align 4, !dbg !10597
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10598
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10599
  %7 = sub i32 %5, %6, !dbg !10602
  %8 = udiv i32 %7, 8400, !dbg !10603
  call void @llvm.dbg.value(metadata i32 %8, metadata !10593, metadata !DIExpression()), !dbg !10594
  %9 = mul nuw i32 %8, 8400, !dbg !10604
  %10 = add i32 %9, %6, !dbg !10605
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10605
  tail call void @sys_clock_announce(i32 noundef %8) #38, !dbg !10606
  tail call void @z_arm_int_exit() #38, !dbg !10607
  ret void, !dbg !10608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #21 !dbg !10609 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10614
  call void @llvm.dbg.value(metadata i32 %1, metadata !10611, metadata !DIExpression()), !dbg !10615
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10616
  call void @llvm.dbg.value(metadata i32 %2, metadata !10612, metadata !DIExpression()), !dbg !10615
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10617
  call void @llvm.dbg.value(metadata i32 %3, metadata !10613, metadata !DIExpression()), !dbg !10615
  %4 = and i32 %2, 65536, !dbg !10618
  %5 = icmp ne i32 %4, 0, !dbg !10618
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10620
  %8 = load i32, i32* @last_load, align 4, !dbg !10615
  br i1 %7, label %9, label %13, !dbg !10620

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10621
  %11 = add i32 %10, %8, !dbg !10621
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10621
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10623
  br label %13, !dbg !10624

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10625
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10626
  %16 = add i32 %14, %15, !dbg !10627
  ret i32 %16, !dbg !10628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10633, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i1 %1, metadata !10634, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10646
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10647
  br i1 %4, label %5, label %8, !dbg !10647

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10649
  %7 = and i32 %6, -2, !dbg !10649
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10649
  store i32 -16777216, i32* @last_load, align 4, !dbg !10651
  br label %54, !dbg !10652

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %9, metadata !10638, metadata !DIExpression()), !dbg !10646
  br i1 %3, label %18, label %10, !dbg !10654

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10654
  call void @llvm.dbg.value(metadata i32 undef, metadata !10633, metadata !DIExpression()), !dbg !10646
  %12 = icmp slt i32 %11, 1, !dbg !10655
  br i1 %12, label %18, label %13, !dbg !10655

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10655
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10655
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10655
  %17 = add nuw nsw i32 %16, 8399, !dbg !10655
  br label %18, !dbg !10655

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10633, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10656, metadata !DIExpression()) #33, !dbg !10663
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !10665, !srcloc !10671
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %21, metadata !10668, metadata !DIExpression()) #33, !dbg !10672
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #33, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %21, metadata !10662, metadata !DIExpression()) #33, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %21, metadata !10639, metadata !DIExpression()), !dbg !10646
  %22 = tail call fastcc i32 @elapsed() #37, !dbg !10673
  call void @llvm.dbg.value(metadata i32 %22, metadata !10644, metadata !DIExpression()), !dbg !10646
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10674
  call void @llvm.dbg.value(metadata i32 %23, metadata !10636, metadata !DIExpression()), !dbg !10646
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10675
  %25 = add i32 %24, %22, !dbg !10675
  store i32 %25, i32* @cycle_count, align 4, !dbg !10675
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10676
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10677
  %27 = sub i32 %25, %26, !dbg !10678
  call void @llvm.dbg.value(metadata i32 %27, metadata !10645, metadata !DIExpression()), !dbg !10646
  %28 = icmp slt i32 %27, 0, !dbg !10679
  br i1 %28, label %38, label %29, !dbg !10681

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10635, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i32 undef, metadata !10635, metadata !DIExpression()), !dbg !10646
  %30 = add nuw i32 %19, %27, !dbg !10682
  %31 = urem i32 %30, 8400, !dbg !10684
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10646
  %32 = sub nuw nsw i32 %19, %31, !dbg !10685
  call void @llvm.dbg.value(metadata i32 %32, metadata !10635, metadata !DIExpression()), !dbg !10646
  %33 = icmp ugt i32 %32, 1024, !dbg !10686
  br i1 %33, label %34, label %36, !dbg !10686

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10635, metadata !DIExpression()), !dbg !10646
  %35 = icmp ugt i32 %32, 16766400, !dbg !10687
  br i1 %35, label %38, label %36, !dbg !10689

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10690
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10691
  call void @llvm.dbg.value(metadata i32 %40, metadata !10637, metadata !DIExpression()), !dbg !10646
  %41 = add nsw i32 %39, -1, !dbg !10692
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10693
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10694
  %42 = icmp ult i32 %23, %40, !dbg !10695
  br i1 %42, label %43, label %48, !dbg !10697

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10698
  %45 = add i32 %23, %9, !dbg !10700
  %46 = sub i32 %45, %40, !dbg !10701
  %47 = add i32 %46, %44, !dbg !10698
  br label %52, !dbg !10702

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10703
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10705
  %51 = add i32 %49, %50, !dbg !10705
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10706
  store i32 %53, i32* @cycle_count, align 4, !dbg !10706
  call void @llvm.dbg.value(metadata i32 %21, metadata !10707, metadata !DIExpression()) #33, !dbg !10713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10712, metadata !DIExpression()) #33, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %21, metadata !10715, metadata !DIExpression()) #33, !dbg !10718
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #33, !dbg !10720, !srcloc !10721
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10723 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10656, metadata !DIExpression()) #33, !dbg !10727
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !10729, !srcloc !10671
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %2, metadata !10668, metadata !DIExpression()) #33, !dbg !10731
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #33, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %2, metadata !10662, metadata !DIExpression()) #33, !dbg !10727
  call void @llvm.dbg.value(metadata i32 %2, metadata !10725, metadata !DIExpression()), !dbg !10732
  %3 = tail call fastcc i32 @elapsed() #37, !dbg !10733
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10734
  %5 = add i32 %4, %3, !dbg !10735
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10736
  %7 = sub i32 %5, %6, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %7, metadata !10726, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.value(metadata i32 %2, metadata !10707, metadata !DIExpression()) #33, !dbg !10738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10712, metadata !DIExpression()) #33, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %2, metadata !10715, metadata !DIExpression()) #33, !dbg !10740
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #33, !dbg !10742, !srcloc !10721
  %8 = udiv i32 %7, 8400, !dbg !10743
  ret i32 %8, !dbg !10744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10745 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10656, metadata !DIExpression()) #33, !dbg !10749
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !10751, !srcloc !10671
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %2, metadata !10668, metadata !DIExpression()) #33, !dbg !10753
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #33, !dbg !10753
  call void @llvm.dbg.value(metadata i32 %2, metadata !10662, metadata !DIExpression()) #33, !dbg !10749
  call void @llvm.dbg.value(metadata i32 %2, metadata !10747, metadata !DIExpression()), !dbg !10754
  %3 = tail call fastcc i32 @elapsed() #37, !dbg !10755
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10756
  %5 = add i32 %4, %3, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %5, metadata !10748, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.value(metadata i32 %2, metadata !10707, metadata !DIExpression()) #33, !dbg !10758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10712, metadata !DIExpression()) #33, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %2, metadata !10715, metadata !DIExpression()) #33, !dbg !10760
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #33, !dbg !10762, !srcloc !10721
  ret i32 %5, !dbg !10763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #21 !dbg !10764 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10765
  %2 = icmp eq i32 %1, -16777216, !dbg !10767
  br i1 %2, label %3, label %6, !dbg !10768

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10769
  %5 = or i32 %4, 1, !dbg !10769
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10769
  br label %6, !dbg !10771

6:                                                ; preds = %3, %0
  ret void, !dbg !10772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #21 !dbg !10773 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10774
  %2 = and i32 %1, -2, !dbg !10774
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10774
  ret void, !dbg !10775
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #20 !dbg !10776 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10802, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata i8 %1, metadata !10803, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10804, metadata !DIExpression()), !dbg !10805
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10806
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10806
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10805
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10807
  %8 = load i8, i8* %6, align 4, !dbg !10808
  %9 = zext i8 %8 to i32, !dbg !10809
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10809
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10810
  br i1 %11, label %18, label %24, !dbg !10811

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10805
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10807
  %14 = load i8, i8* %6, align 4, !dbg !10808
  %15 = zext i8 %14 to i32, !dbg !10809
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10809
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10810
  br i1 %17, label %18, label %24, !dbg !10811, !llvm.loop !10812

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10814
  %21 = load i8, i8* %20, align 1, !dbg !10814
  %22 = icmp eq i8 %21, %1, !dbg !10817
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10818
  br i1 %22, label %24, label %12, !dbg !10819

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10805
  ret i32 %25, !dbg !10820
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10821 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10832, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata i8 %1, metadata !10833, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata i32 %2, metadata !10834, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata i32 0, metadata !10837, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata i32 0, metadata !10838, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.value(metadata i8 0, metadata !10839, metadata !DIExpression()), !dbg !10849
  %4 = icmp eq i8 %1, 0, !dbg !10850
  br i1 %4, label %35, label %5, !dbg !10851

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10850
  br label %9, !dbg !10851

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10839, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.value(metadata i32 %29, metadata !10837, metadata !DIExpression()), !dbg !10848
  %8 = icmp eq i32 %34, %6, !dbg !10850
  br i1 %8, label %35, label %9, !dbg !10851, !llvm.loop !10852

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10839, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.value(metadata i32 %11, metadata !10837, metadata !DIExpression()), !dbg !10848
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10854
  %13 = load i32, i32* %12, align 4, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %13, metadata !10836, metadata !DIExpression()), !dbg !10848
  %14 = and i32 %13, 31, !dbg !10855
  %15 = icmp ult i32 %14, 16, !dbg !10856
  br i1 %15, label %16, label %20, !dbg !10857

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10858
  %18 = load i32, i32* %17, align 4, !dbg !10858
  %19 = or i32 %18, 32, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %19, metadata !10837, metadata !DIExpression()), !dbg !10848
  br label %28, !dbg !10861

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10862

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10863
  %23 = load i32, i32* %22, align 4, !dbg !10863
  call void @llvm.dbg.value(metadata i32 %23, metadata !10841, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10864
  %24 = lshr i32 %23, 7, !dbg !10865
  %25 = and i32 %24, 16, !dbg !10865
  %26 = or i32 %25, %23, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %26, metadata !10837, metadata !DIExpression()), !dbg !10848
  br label %28, !dbg !10866

27:                                               ; preds = %20
  br label %28, !dbg !10867

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10848
  call void @llvm.dbg.value(metadata i32 %29, metadata !10837, metadata !DIExpression()), !dbg !10848
  %30 = lshr i32 %13, 5, !dbg !10867
  %31 = and i32 %30, 255, !dbg !10867
  call void @llvm.dbg.value(metadata i32 %31, metadata !10835, metadata !DIExpression()), !dbg !10848
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #37, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %32, metadata !10838, metadata !DIExpression()), !dbg !10848
  %33 = icmp slt i32 %32, 0, !dbg !10869
  %34 = add nuw nsw i32 %10, 1, !dbg !10871
  call void @llvm.dbg.value(metadata i32 %34, metadata !10839, metadata !DIExpression()), !dbg !10849
  br i1 %33, label %35, label %7, !dbg !10872

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10878, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %1, metadata !10879, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %2, metadata !10880, metadata !DIExpression()), !dbg !10882
  %4 = icmp ugt i32 %0, 175, !dbg !10883
  br i1 %4, label %16, label %5, !dbg !10885

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10886
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10887
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10887
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10881, metadata !DIExpression()), !dbg !10882
  %9 = add nsw i32 %6, -8, !dbg !10888
  %10 = icmp ult i32 %9, 3, !dbg !10888
  br i1 %10, label %16, label %11, !dbg !10890

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.76(%struct.device* noundef %8) #37, !dbg !10891
  br i1 %12, label %13, label %16, !dbg !10892

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10893
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #38, !dbg !10894
  br label %16, !dbg !10895

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10882
  ret i32 %17, !dbg !10896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.76(%struct.device* noundef %0) unnamed_addr #1 !dbg !10897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10901, metadata !DIExpression()), !dbg !10902
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !10903, !srcloc !10905
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) #37, !dbg !10906
  ret i1 %2, !dbg !10907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !10908 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10910, metadata !DIExpression()), !dbg !10911
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #38, !dbg !10912
  ret i1 %2, !dbg !10913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #17 !dbg !10914 {
  ret void, !dbg !10915
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #24 !dbg !10916 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10918, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 0, metadata !10919, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 2, metadata !10920, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 0, metadata !10921, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 2, metadata !10922, metadata !DIExpression()), !dbg !10923
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10924
  %2 = and i32 %1, 12, !dbg !10925
  call void @llvm.dbg.value(metadata i32 %2, metadata !10918, metadata !DIExpression()), !dbg !10923
  %3 = icmp eq i32 %2, 8, !dbg !10926
  br i1 %3, label %4, label %18, !dbg !10926

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10927
  call void @llvm.dbg.value(metadata i32 %5, metadata !10921, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10923
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10929
  %7 = and i32 %6, 63, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %7, metadata !10922, metadata !DIExpression()), !dbg !10923
  %8 = udiv i32 16000000, %7, !dbg !10931
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10931
  %10 = lshr i32 %9, 6, !dbg !10931
  %11 = and i32 %10, 511, !dbg !10931
  %12 = mul i32 %11, %8, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %12, metadata !10919, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 %12, metadata !10919, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 %12, metadata !10919, metadata !DIExpression()), !dbg !10923
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10933
  %14 = lshr i32 %13, 15, !dbg !10934
  %15 = and i32 %14, 6, !dbg !10934
  %16 = add nuw nsw i32 %15, 2, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %16, metadata !10920, metadata !DIExpression()), !dbg !10923
  %17 = udiv i32 %12, %16, !dbg !10935
  br label %18, !dbg !10936

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10937
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10938
  %21 = lshr i32 %20, 4, !dbg !10939
  %22 = and i32 %21, 15, !dbg !10939
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10940
  %24 = load i8, i8* %23, align 1, !dbg !10940
  %25 = zext i8 %24 to i32, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %25, metadata !10918, metadata !DIExpression()), !dbg !10923
  %26 = lshr i32 %19, %25, !dbg !10941
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10941
  ret void, !dbg !10942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10943 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !10985, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10986, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10987, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10988, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10989, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10990, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10991, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10992, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10993, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 0, metadata !10994, metadata !DIExpression()), !dbg !10999
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11000
  %4 = load i32, i32* %3, align 4, !dbg !11000
  %5 = and i32 %4, 1, !dbg !11002
  %6 = icmp eq i32 %5, 0, !dbg !11003
  br i1 %6, label %17, label %7, !dbg !11004

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11005
  %9 = and i32 %8, -100663297, !dbg !11005
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11005
  %11 = load i32, i32* %10, align 4, !dbg !11005
  %12 = or i32 %9, %11, !dbg !11005
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11005
  %13 = load i32, i32* %10, align 4, !dbg !11007
  %14 = icmp eq i32 %13, 0, !dbg !11009
  %15 = zext i1 %14 to i32, !dbg !11010
  %16 = load i32, i32* %3, align 4, !dbg !11011
  br label %17, !dbg !11010

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !11011
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !10999
  call void @llvm.dbg.value(metadata i32 %19, metadata !10993, metadata !DIExpression()), !dbg !10999
  %20 = and i32 %18, 2, !dbg !11013
  %21 = icmp eq i32 %20, 0, !dbg !11014
  br i1 %21, label %32, label %22, !dbg !11015

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11016
  %24 = and i32 %23, -402653185, !dbg !11016
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11016
  %26 = load i32, i32* %25, align 4, !dbg !11016
  %27 = or i32 %24, %26, !dbg !11016
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11016
  %28 = load i32, i32* %25, align 4, !dbg !11018
  %29 = icmp eq i32 %28, 0, !dbg !11020
  %30 = select i1 %29, i32 1, i32 %19, !dbg !11021
  %31 = load i32, i32* %3, align 4, !dbg !11022
  br label %32, !dbg !11021

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !11022
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !10999
  call void @llvm.dbg.value(metadata i32 %34, metadata !10993, metadata !DIExpression()), !dbg !10999
  %35 = and i32 %33, 4, !dbg !11024
  %36 = icmp eq i32 %35, 0, !dbg !11025
  br i1 %36, label %49, label %37, !dbg !11026

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11027
  %39 = and i32 %38, -3145729, !dbg !11027
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11027
  %41 = load i32, i32* %40, align 4, !dbg !11027
  %42 = or i32 %39, %41, !dbg !11027
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11027
  %43 = load i32, i32* %40, align 4, !dbg !11029
  %44 = icmp eq i32 %43, 1048576, !dbg !11031
  %45 = select i1 %44, i32 1, i32 %34, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %45, metadata !10993, metadata !DIExpression()), !dbg !10999
  %46 = icmp eq i32 %43, 0, !dbg !11033
  %47 = zext i1 %46 to i32, !dbg !11035
  %48 = load i32, i32* %3, align 4, !dbg !11036
  br label %49, !dbg !11035

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !11036
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !10999
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !10999
  call void @llvm.dbg.value(metadata i32 %52, metadata !10994, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 %51, metadata !10993, metadata !DIExpression()), !dbg !10999
  %53 = and i32 %50, 8, !dbg !11038
  %54 = icmp eq i32 %53, 0, !dbg !11039
  br i1 %54, label %67, label %55, !dbg !11040

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11041
  %57 = and i32 %56, -12582913, !dbg !11041
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11041
  %59 = load i32, i32* %58, align 4, !dbg !11041
  %60 = or i32 %57, %59, !dbg !11041
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11041
  %61 = load i32, i32* %58, align 4, !dbg !11043
  %62 = icmp eq i32 %61, 4194304, !dbg !11045
  %63 = select i1 %62, i32 1, i32 %51, !dbg !11046
  call void @llvm.dbg.value(metadata i32 %63, metadata !10993, metadata !DIExpression()), !dbg !10999
  %64 = icmp eq i32 %61, 0, !dbg !11047
  %65 = select i1 %64, i32 1, i32 %52, !dbg !11049
  %66 = load i32, i32* %3, align 4, !dbg !11050
  br label %67, !dbg !11049

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !11050
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !10999
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !10999
  call void @llvm.dbg.value(metadata i32 %70, metadata !10994, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i32 %69, metadata !10993, metadata !DIExpression()), !dbg !10999
  %71 = and i32 %68, 32, !dbg !11051
  %72 = icmp eq i32 %71, 0, !dbg !11052
  br i1 %72, label %131, label %73, !dbg !11053

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !11054
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !11054
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10995, metadata !DIExpression()), !dbg !11054
  store volatile i32 0, i32* %2, align 4, !dbg !11054
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11054
  %76 = or i32 %75, 268435456, !dbg !11054
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11054
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11054
  %78 = and i32 %77, 268435456, !dbg !11054
  store volatile i32 %78, i32* %2, align 4, !dbg !11054
  %79 = load volatile i32, i32* %2, align 4, !dbg !11054
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !11055
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11056
  %81 = or i32 %80, 256, !dbg !11056
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11056
  %82 = tail call i32 @HAL_GetTick() #38, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %82, metadata !10986, metadata !DIExpression()), !dbg !10999
  br label %83, !dbg !11058

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11059
  %85 = and i32 %84, 256, !dbg !11060
  %86 = icmp eq i32 %85, 0, !dbg !11061
  br i1 %86, label %87, label %91, !dbg !11058

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #38, !dbg !11062
  %89 = sub i32 %88, %82, !dbg !11065
  %90 = icmp ugt i32 %89, 2, !dbg !11066
  br i1 %90, label %439, label %83, !dbg !11067, !llvm.loop !11068

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11070
  %93 = and i32 %92, 768, !dbg !11071
  call void @llvm.dbg.value(metadata i32 %93, metadata !10987, metadata !DIExpression()), !dbg !10999
  %94 = icmp eq i32 %93, 0, !dbg !11072
  br i1 %94, label %116, label %95, !dbg !11074

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11075
  %97 = load i32, i32* %96, align 4, !dbg !11075
  %98 = and i32 %97, 768, !dbg !11076
  %99 = icmp eq i32 %93, %98, !dbg !11077
  br i1 %99, label %116, label %100, !dbg !11078

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11079
  %102 = and i32 %101, -769, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %102, metadata !10987, metadata !DIExpression()), !dbg !10999
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11082
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11083
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11084
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11085
  %104 = and i32 %103, 1, !dbg !11085
  %105 = icmp eq i32 %104, 0, !dbg !11085
  br i1 %105, label %116, label %106, !dbg !11087

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #38, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %107, metadata !10986, metadata !DIExpression()), !dbg !10999
  br label %108, !dbg !11090

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11091
  %110 = and i32 %109, 2, !dbg !11092
  %111 = icmp eq i32 %110, 0, !dbg !11092
  br i1 %111, label %112, label %116, !dbg !11090

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #38, !dbg !11093
  %114 = sub i32 %113, %107, !dbg !11096
  %115 = icmp ugt i32 %114, 5000, !dbg !11097
  br i1 %115, label %439, label %108, !dbg !11098, !llvm.loop !11099

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11101
  %118 = load i32, i32* %117, align 4, !dbg !11101
  %119 = and i32 %118, 768, !dbg !11101
  %120 = icmp eq i32 %119, 768, !dbg !11101
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11101
  %122 = and i32 %121, -2031617, !dbg !11101
  %123 = and i32 %118, 268434687, !dbg !11101
  %124 = select i1 %120, i32 %123, i32 0, !dbg !11101
  %125 = or i32 %122, %124, !dbg !11101
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11101
  %126 = load i32, i32* %117, align 4, !dbg !11101
  %127 = and i32 %126, 4095, !dbg !11101
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11101
  %129 = or i32 %128, %127, !dbg !11101
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11101
  %130 = load i32, i32* %3, align 4, !dbg !11103
  br label %131, !dbg !11105

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !11103
  %133 = and i32 %132, 16, !dbg !11106
  %134 = icmp eq i32 %133, 0, !dbg !11107
  br i1 %134, label %140, label %135, !dbg !11108

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11109
  %137 = load i8, i8* %136, align 4, !dbg !11109
  %138 = zext i8 %137 to i32, !dbg !11109
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !11109
  %139 = load i32, i32* %3, align 4, !dbg !11111
  br label %140, !dbg !11113

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !11111
  %142 = and i32 %141, 128, !dbg !11114
  %143 = icmp eq i32 %142, 0, !dbg !11115
  br i1 %143, label %151, label %144, !dbg !11116

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11117
  %146 = and i32 %145, -12582913, !dbg !11117
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11117
  %148 = load i32, i32* %147, align 4, !dbg !11117
  %149 = or i32 %146, %148, !dbg !11117
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11117
  %150 = load i32, i32* %3, align 4, !dbg !11119
  br label %151, !dbg !11121

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !11119
  %153 = and i32 %152, 64, !dbg !11122
  %154 = icmp eq i32 %153, 0, !dbg !11123
  br i1 %154, label %162, label %155, !dbg !11124

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11125
  %157 = and i32 %156, -67108865, !dbg !11125
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11125
  %159 = load i32, i32* %158, align 4, !dbg !11125
  %160 = or i32 %157, %159, !dbg !11125
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11125
  %161 = load i32, i32* %3, align 4, !dbg !11127
  br label %162, !dbg !11129

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !11127
  %164 = and i32 %163, 256, !dbg !11130
  %165 = icmp eq i32 %164, 0, !dbg !11131
  br i1 %165, label %176, label %166, !dbg !11132

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11133
  %168 = and i32 %167, -134217729, !dbg !11133
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11133
  %170 = load i32, i32* %169, align 4, !dbg !11133
  %171 = or i32 %168, %170, !dbg !11133
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11133
  %172 = load i32, i32* %169, align 4, !dbg !11135
  %173 = icmp eq i32 %172, 134217728, !dbg !11137
  %174 = select i1 %173, i32 1, i32 %70, !dbg !11138
  %175 = load i32, i32* %3, align 4, !dbg !11139
  br label %176, !dbg !11138

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !11139
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !10999
  call void @llvm.dbg.value(metadata i32 %178, metadata !10994, metadata !DIExpression()), !dbg !10999
  %179 = and i32 %177, 512, !dbg !11141
  %180 = icmp eq i32 %179, 0, !dbg !11142
  br i1 %180, label %188, label %181, !dbg !11143

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11144
  %183 = and i32 %182, -268435457, !dbg !11144
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11144
  %185 = load i32, i32* %184, align 4, !dbg !11144
  %186 = or i32 %183, %185, !dbg !11144
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11144
  %187 = load i32, i32* %3, align 4, !dbg !11146
  br label %188, !dbg !11148

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !11146
  %190 = and i32 %189, 1024, !dbg !11149
  %191 = icmp eq i32 %190, 0, !dbg !11150
  br i1 %191, label %204, label %192, !dbg !11151

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11152
  %194 = and i32 %193, -536870913, !dbg !11152
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11152
  %196 = load i32, i32* %195, align 4, !dbg !11152
  %197 = or i32 %194, %196, !dbg !11152
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11152
  %198 = load i32, i32* %195, align 4, !dbg !11154
  %199 = icmp eq i32 %198, 536870912, !dbg !11156
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %69, metadata !10993, metadata !DIExpression()), !dbg !10999
  br i1 %201, label %209, label %202, !dbg !11157

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !11158
  br label %206, !dbg !11157

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !10993, metadata !DIExpression()), !dbg !10999
  %205 = icmp eq i32 %69, 1, !dbg !11160
  br i1 %205, label %209, label %206, !dbg !11161

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !11158
  %208 = icmp eq i32 %207, 2048, !dbg !11162
  br i1 %208, label %209, label %356, !dbg !11163

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11164
  %210 = tail call i32 @HAL_GetTick() #38, !dbg !11166
  call void @llvm.dbg.value(metadata i32 %210, metadata !10986, metadata !DIExpression()), !dbg !10999
  br label %211, !dbg !11167

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11168
  %213 = and i32 %212, 134217728, !dbg !11168
  %214 = icmp eq i32 %213, 0, !dbg !11168
  br i1 %214, label %219, label %215, !dbg !11167

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #38, !dbg !11169
  %217 = sub i32 %216, %210, !dbg !11172
  %218 = icmp ugt i32 %217, 2, !dbg !11173
  br i1 %218, label %439, label %211, !dbg !11174, !llvm.loop !11175

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !11177
  %221 = and i32 %220, 1, !dbg !11179
  %222 = icmp eq i32 %221, 0, !dbg !11180
  br i1 %222, label %227, label %223, !dbg !11181

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11182
  %225 = load i32, i32* %224, align 4, !dbg !11182
  %226 = icmp eq i32 %225, 0, !dbg !11183
  br i1 %226, label %234, label %227, !dbg !11184

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !11185
  %229 = icmp eq i32 %228, 0, !dbg !11186
  br i1 %229, label %252, label %230, !dbg !11187

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11188
  %232 = load i32, i32* %231, align 4, !dbg !11188
  %233 = icmp eq i32 %232, 0, !dbg !11189
  br i1 %233, label %234, label %252, !dbg !11190

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11191
  %236 = and i32 %235, 196608, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %236, metadata !10988, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10999
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11194
  %238 = and i32 %237, 251658240, !dbg !11195
  call void @llvm.dbg.value(metadata i32 %238, metadata !10989, metadata !DIExpression()), !dbg !10999
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11196
  %240 = load i32, i32* %239, align 4, !dbg !11196
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11196
  %242 = load i32, i32* %241, align 4, !dbg !11196
  %243 = shl i32 %242, 6, !dbg !11196
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11196
  %245 = load i32, i32* %244, align 4, !dbg !11196
  %246 = shl i32 %245, 28, !dbg !11196
  %247 = or i32 %240, %236, !dbg !11196
  %248 = or i32 %247, %238, !dbg !11196
  %249 = or i32 %248, %243, !dbg !11196
  %250 = or i32 %249, %246, !dbg !11196
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11196
  %251 = load i32, i32* %3, align 4, !dbg !11197
  br label %252, !dbg !11199

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !11197
  %254 = and i32 %253, 4, !dbg !11200
  %255 = icmp eq i32 %254, 0, !dbg !11201
  br i1 %255, label %260, label %256, !dbg !11202

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11203
  %258 = load i32, i32* %257, align 4, !dbg !11203
  %259 = icmp eq i32 %258, 1048576, !dbg !11204
  br i1 %259, label %267, label %260, !dbg !11205

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !11206
  %262 = icmp eq i32 %261, 0, !dbg !11207
  br i1 %262, label %291, label %263, !dbg !11208

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11209
  %265 = load i32, i32* %264, align 4, !dbg !11209
  %266 = icmp eq i32 %265, 4194304, !dbg !11210
  br i1 %266, label %267, label %291, !dbg !11211

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11212
  %269 = and i32 %268, 196608, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %269, metadata !10988, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10999
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11215
  %271 = and i32 %270, 1879048192, !dbg !11216
  call void @llvm.dbg.value(metadata i32 %271, metadata !10990, metadata !DIExpression()), !dbg !10999
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11217
  %273 = load i32, i32* %272, align 4, !dbg !11217
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11217
  %275 = load i32, i32* %274, align 4, !dbg !11217
  %276 = shl i32 %275, 6, !dbg !11217
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11217
  %278 = load i32, i32* %277, align 4, !dbg !11217
  %279 = shl i32 %278, 24, !dbg !11217
  %280 = or i32 %273, %269, !dbg !11217
  %281 = or i32 %280, %271, !dbg !11217
  %282 = or i32 %281, %276, !dbg !11217
  %283 = or i32 %282, %279, !dbg !11217
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11217
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11218
  %285 = and i32 %284, -32, !dbg !11218
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11218
  %287 = load i32, i32* %286, align 4, !dbg !11218
  %288 = add i32 %287, -1, !dbg !11218
  %289 = or i32 %288, %285, !dbg !11218
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11218
  %290 = load i32, i32* %3, align 4, !dbg !11219
  br label %291, !dbg !11221

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !11219
  %293 = and i32 %292, 1024, !dbg !11222
  %294 = icmp eq i32 %293, 0, !dbg !11223
  br i1 %294, label %321, label %295, !dbg !11224

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11225
  %297 = load i32, i32* %296, align 4, !dbg !11225
  %298 = icmp eq i32 %297, 536870912, !dbg !11226
  br i1 %298, label %299, label %321, !dbg !11227

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %300, metadata !10989, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10999
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11230
  %302 = and i32 %301, 1879048192, !dbg !11231
  call void @llvm.dbg.value(metadata i32 %302, metadata !10990, metadata !DIExpression()), !dbg !10999
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11232
  %304 = load i32, i32* %303, align 4, !dbg !11232
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11232
  %306 = load i32, i32* %305, align 4, !dbg !11232
  %307 = shl i32 %306, 6, !dbg !11232
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11232
  %309 = load i32, i32* %308, align 4, !dbg !11232
  %310 = shl i32 %309, 15, !dbg !11232
  %311 = add i32 %310, -65536, !dbg !11232
  %312 = and i32 %311, -65536, !dbg !11232
  %313 = shl i32 %300, 9, !dbg !11232
  %314 = and i32 %313, 100663296, !dbg !11232
  %315 = add nuw nsw i32 %314, 33554432, !dbg !11232
  %316 = or i32 %302, %304, !dbg !11232
  %317 = or i32 %316, %315, !dbg !11232
  %318 = or i32 %317, %307, !dbg !11232
  %319 = or i32 %318, %312, !dbg !11232
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11232
  %320 = load i32, i32* %3, align 4, !dbg !11233
  br label %321, !dbg !11235

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !11233
  %323 = and i32 %322, 2048, !dbg !11236
  %324 = icmp eq i32 %323, 0, !dbg !11237
  br i1 %324, label %346, label %325, !dbg !11238

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11239
  %327 = load i32, i32* %326, align 4, !dbg !11239
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11239
  %329 = load i32, i32* %328, align 4, !dbg !11239
  %330 = shl i32 %329, 6, !dbg !11239
  %331 = or i32 %330, %327, !dbg !11239
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11239
  %333 = load i32, i32* %332, align 4, !dbg !11239
  %334 = shl i32 %333, 15, !dbg !11239
  %335 = add i32 %334, -65536, !dbg !11239
  %336 = and i32 %335, -65536, !dbg !11239
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11239
  %338 = load i32, i32* %337, align 4, !dbg !11239
  %339 = shl i32 %338, 24, !dbg !11239
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11239
  %341 = load i32, i32* %340, align 4, !dbg !11239
  %342 = shl i32 %341, 28, !dbg !11239
  %343 = or i32 %331, %339, !dbg !11239
  %344 = or i32 %343, %336, !dbg !11239
  %345 = or i32 %344, %342, !dbg !11239
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11239
  br label %346, !dbg !11241

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11242
  %347 = tail call i32 @HAL_GetTick() #38, !dbg !11243
  call void @llvm.dbg.value(metadata i32 %347, metadata !10986, metadata !DIExpression()), !dbg !10999
  br label %348, !dbg !11244

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11245
  %350 = and i32 %349, 134217728, !dbg !11246
  %351 = icmp eq i32 %350, 0, !dbg !11246
  br i1 %351, label %352, label %356, !dbg !11244

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #38, !dbg !11247
  %354 = sub i32 %353, %347, !dbg !11250
  %355 = icmp ugt i32 %354, 2, !dbg !11251
  br i1 %355, label %439, label %348, !dbg !11252, !llvm.loop !11253

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !11255
  br i1 %357, label %358, label %439, !dbg !11257

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11258
  %359 = tail call i32 @HAL_GetTick() #38, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %359, metadata !10986, metadata !DIExpression()), !dbg !10999
  br label %360, !dbg !11261

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11262
  %362 = and i32 %361, 536870912, !dbg !11262
  %363 = icmp eq i32 %362, 0, !dbg !11262
  br i1 %363, label %368, label %364, !dbg !11261

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #38, !dbg !11263
  %366 = sub i32 %365, %359, !dbg !11266
  %367 = icmp ugt i32 %366, 2, !dbg !11267
  br i1 %367, label %439, label %360, !dbg !11268, !llvm.loop !11269

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !11271
  %370 = and i32 %369, 4, !dbg !11273
  %371 = icmp eq i32 %370, 0, !dbg !11274
  br i1 %371, label %376, label %372, !dbg !11275

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11276
  %374 = load i32, i32* %373, align 4, !dbg !11276
  %375 = icmp eq i32 %374, 0, !dbg !11277
  br i1 %375, label %383, label %376, !dbg !11278

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !11279
  %378 = icmp eq i32 %377, 0, !dbg !11280
  br i1 %378, label %405, label %379, !dbg !11281

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11282
  %381 = load i32, i32* %380, align 4, !dbg !11282
  %382 = icmp eq i32 %381, 0, !dbg !11283
  br i1 %382, label %383, label %405, !dbg !11284

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11285
  %385 = and i32 %384, 196608, !dbg !11287
  call void @llvm.dbg.value(metadata i32 %385, metadata !10991, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10999
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11288
  %387 = load i32, i32* %386, align 4, !dbg !11288
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11288
  %389 = load i32, i32* %388, align 4, !dbg !11288
  %390 = shl i32 %389, 6, !dbg !11288
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11288
  %392 = load i32, i32* %391, align 4, !dbg !11288
  %393 = shl i32 %392, 24, !dbg !11288
  %394 = or i32 %385, %387, !dbg !11288
  %395 = or i32 %394, %390, !dbg !11288
  %396 = or i32 %395, %393, !dbg !11288
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11288
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11289
  %398 = and i32 %397, -7937, !dbg !11289
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11289
  %400 = load i32, i32* %399, align 4, !dbg !11289
  %401 = shl i32 %400, 8, !dbg !11289
  %402 = add i32 %401, -256, !dbg !11289
  %403 = or i32 %402, %398, !dbg !11289
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11289
  %404 = load i32, i32* %3, align 4, !dbg !11290
  br label %405, !dbg !11292

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !11290
  %407 = and i32 %406, 256, !dbg !11293
  %408 = icmp eq i32 %407, 0, !dbg !11294
  br i1 %408, label %429, label %409, !dbg !11295

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11296
  %411 = load i32, i32* %410, align 4, !dbg !11296
  %412 = icmp eq i32 %411, 134217728, !dbg !11297
  br i1 %412, label %413, label %429, !dbg !11298

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11299
  %415 = and i32 %414, 251658240, !dbg !11301
  call void @llvm.dbg.value(metadata i32 %415, metadata !10992, metadata !DIExpression()), !dbg !10999
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11302
  %417 = load i32, i32* %416, align 4, !dbg !11302
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11302
  %419 = load i32, i32* %418, align 4, !dbg !11302
  %420 = shl i32 %419, 6, !dbg !11302
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11302
  %422 = load i32, i32* %421, align 4, !dbg !11302
  %423 = shl i32 %422, 15, !dbg !11302
  %424 = add i32 %423, -65536, !dbg !11302
  %425 = and i32 %424, -65536, !dbg !11302
  %426 = or i32 %415, %417, !dbg !11302
  %427 = or i32 %426, %420, !dbg !11302
  %428 = or i32 %427, %425, !dbg !11302
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11302
  br label %429, !dbg !11303

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11304
  %430 = tail call i32 @HAL_GetTick() #38, !dbg !11305
  call void @llvm.dbg.value(metadata i32 %430, metadata !10986, metadata !DIExpression()), !dbg !10999
  br label %431, !dbg !11306

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11307
  %433 = and i32 %432, 536870912, !dbg !11308
  %434 = icmp eq i32 %433, 0, !dbg !11308
  br i1 %434, label %435, label %439, !dbg !11306

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #38, !dbg !11309
  %437 = sub i32 %436, %430, !dbg !11312
  %438 = icmp ugt i32 %437, 2, !dbg !11313
  br i1 %438, label %439, label %431, !dbg !11314, !llvm.loop !11315

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !10999
  ret i32 %440, !dbg !11317
}

; Function Attrs: optsize
declare !dbg !11318 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #24 !dbg !11320 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11324, metadata !DIExpression()), !dbg !11326
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11327
  store i32 2047, i32* %2, align 4, !dbg !11328
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11329
  %4 = and i32 %3, 63, !dbg !11330
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11331
  store i32 %4, i32* %5, align 4, !dbg !11332
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11333
  %7 = lshr i32 %6, 6, !dbg !11334
  %8 = and i32 %7, 511, !dbg !11334
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11335
  store i32 %8, i32* %9, align 4, !dbg !11336
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11337
  %11 = lshr i32 %10, 15, !dbg !11338
  %12 = and i32 %11, 6, !dbg !11338
  %13 = add nuw nsw i32 %12, 2, !dbg !11338
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11339
  store i32 %13, i32* %14, align 4, !dbg !11340
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11341
  %16 = lshr i32 %15, 24, !dbg !11342
  %17 = and i32 %16, 15, !dbg !11342
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11343
  store i32 %17, i32* %18, align 4, !dbg !11344
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11345
  %20 = lshr i32 %19, 28, !dbg !11346
  %21 = and i32 %20, 7, !dbg !11346
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11347
  store i32 %21, i32* %22, align 4, !dbg !11348
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11349
  %24 = and i32 %23, 63, !dbg !11350
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11351
  store i32 %24, i32* %25, align 4, !dbg !11352
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11353
  %27 = lshr i32 %26, 6, !dbg !11354
  %28 = and i32 %27, 511, !dbg !11354
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11355
  store i32 %28, i32* %29, align 4, !dbg !11356
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11357
  %31 = lshr i32 %30, 15, !dbg !11358
  %32 = and i32 %31, 6, !dbg !11358
  %33 = add nuw nsw i32 %32, 2, !dbg !11358
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11359
  store i32 %33, i32* %34, align 4, !dbg !11360
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11361
  %36 = lshr i32 %35, 24, !dbg !11362
  %37 = and i32 %36, 15, !dbg !11362
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11363
  store i32 %37, i32* %38, align 4, !dbg !11364
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11365
  %40 = and i32 %39, 31, !dbg !11366
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11367
  store i32 %40, i32* %41, align 4, !dbg !11368
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11369
  %43 = lshr i32 %42, 8, !dbg !11370
  %44 = and i32 %43, 31, !dbg !11370
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11371
  store i32 %44, i32* %45, align 4, !dbg !11372
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11373
  %47 = and i32 %46, 3145728, !dbg !11373
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11374
  store i32 %47, i32* %48, align 4, !dbg !11375
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11376
  %50 = and i32 %49, 12582912, !dbg !11376
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11377
  store i32 %50, i32* %51, align 4, !dbg !11378
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11379
  %53 = and i32 %52, 100663296, !dbg !11379
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11380
  store i32 %53, i32* %54, align 4, !dbg !11381
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11382
  %56 = and i32 %55, 402653184, !dbg !11382
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11383
  store i32 %56, i32* %57, align 4, !dbg !11384
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11385
  %59 = and i32 %58, 2031616, !dbg !11386
  call void @llvm.dbg.value(metadata i32 %59, metadata !11325, metadata !DIExpression()), !dbg !11326
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11387
  %61 = and i32 %60, 768, !dbg !11388
  %62 = or i32 %61, %59, !dbg !11389
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11390
  store i32 %62, i32* %63, align 4, !dbg !11391
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11392
  %65 = and i32 %64, 67108864, !dbg !11392
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11393
  store i32 %65, i32* %66, align 4, !dbg !11394
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11395
  %68 = and i32 %67, 12582912, !dbg !11395
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11396
  store i32 %68, i32* %69, align 4, !dbg !11397
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11398
  %71 = and i32 %70, 134217728, !dbg !11398
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11399
  store i32 %71, i32* %72, align 4, !dbg !11400
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11401
  %74 = and i32 %73, 268435456, !dbg !11401
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11402
  store i32 %74, i32* %75, align 4, !dbg !11403
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11404
  %77 = and i32 %76, 536870912, !dbg !11404
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11405
  store i32 %77, i32* %78, align 4, !dbg !11406
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11407
  %80 = lshr i32 %79, 24, !dbg !11409
  %81 = trunc i32 %80 to i8, !dbg !11409
  %82 = and i8 %81, 1, !dbg !11409
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11410
  store i8 %82, i8* %83, align 4, !dbg !11412
  ret void, !dbg !11413
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #24 !dbg !11414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11416, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 0, metadata !11417, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 0, metadata !11418, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 0, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 0, metadata !11420, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 0, metadata !11421, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 0, metadata !11422, metadata !DIExpression()), !dbg !11423
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11424

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11425
  call void @llvm.dbg.value(metadata i32 %3, metadata !11420, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 %3, metadata !11420, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11423
  %4 = lshr i32 %3, 20, !dbg !11428
  %5 = and i32 %4, 15, !dbg !11428
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11428

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11429
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11433
  %9 = and i32 %8, 63, !dbg !11433
  %10 = udiv i32 16000000, %9, !dbg !11433
  call void @llvm.dbg.value(metadata i32 %10, metadata !11419, metadata !DIExpression()), !dbg !11423
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11434
  %12 = lshr i32 %11, 24, !dbg !11435
  %13 = and i32 %12, 15, !dbg !11435
  call void @llvm.dbg.value(metadata i32 %13, metadata !11417, metadata !DIExpression()), !dbg !11423
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11436
  %15 = lshr i32 %14, 6, !dbg !11437
  %16 = and i32 %15, 511, !dbg !11437
  %17 = mul i32 %16, %10, !dbg !11438
  %18 = udiv i32 %17, %13, !dbg !11439
  call void @llvm.dbg.value(metadata i32 %18, metadata !11418, metadata !DIExpression()), !dbg !11423
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11440
  %20 = lshr i32 %19, 8, !dbg !11441
  %21 = and i32 %20, 31, !dbg !11441
  %22 = add nuw nsw i32 %21, 1, !dbg !11442
  call void @llvm.dbg.value(metadata i32 %22, metadata !11417, metadata !DIExpression()), !dbg !11423
  %23 = udiv i32 %18, %22, !dbg !11443
  call void @llvm.dbg.value(metadata i32 %23, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11444

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11445
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11448
  %27 = and i32 %26, 63, !dbg !11448
  %28 = udiv i32 16000000, %27, !dbg !11448
  call void @llvm.dbg.value(metadata i32 %28, metadata !11419, metadata !DIExpression()), !dbg !11423
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11449
  %30 = lshr i32 %29, 24, !dbg !11450
  %31 = and i32 %30, 15, !dbg !11450
  call void @llvm.dbg.value(metadata i32 %31, metadata !11417, metadata !DIExpression()), !dbg !11423
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11451
  %33 = lshr i32 %32, 6, !dbg !11452
  %34 = and i32 %33, 511, !dbg !11452
  %35 = mul i32 %34, %28, !dbg !11453
  %36 = udiv i32 %35, %31, !dbg !11454
  call void @llvm.dbg.value(metadata i32 %36, metadata !11418, metadata !DIExpression()), !dbg !11423
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11455
  %38 = and i32 %37, 31, !dbg !11456
  %39 = add nuw nsw i32 %38, 1, !dbg !11457
  call void @llvm.dbg.value(metadata i32 %39, metadata !11417, metadata !DIExpression()), !dbg !11423
  %40 = udiv i32 %36, %39, !dbg !11458
  call void @llvm.dbg.value(metadata i32 %40, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11459

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11460
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11463
  %44 = and i32 %43, 63, !dbg !11463
  %45 = udiv i32 16000000, %44, !dbg !11463
  call void @llvm.dbg.value(metadata i32 %45, metadata !11419, metadata !DIExpression()), !dbg !11423
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11464
  %47 = lshr i32 %46, 28, !dbg !11465
  %48 = and i32 %47, 7, !dbg !11465
  call void @llvm.dbg.value(metadata i32 %48, metadata !11417, metadata !DIExpression()), !dbg !11423
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11466
  %50 = lshr i32 %49, 6, !dbg !11467
  %51 = and i32 %50, 511, !dbg !11467
  %52 = mul i32 %51, %45, !dbg !11468
  %53 = udiv i32 %52, %48, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %53, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11470

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11471

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11473
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11418, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11476
  call void @llvm.dbg.value(metadata i32 %58, metadata !11421, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11423
  %59 = lshr i32 %58, 25, !dbg !11478
  %60 = and i32 %59, 3, !dbg !11478
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11478

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11479
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11483
  %64 = and i32 %63, 63, !dbg !11483
  %65 = udiv i32 16000000, %64, !dbg !11483
  call void @llvm.dbg.value(metadata i32 %65, metadata !11419, metadata !DIExpression()), !dbg !11423
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11484
  %67 = lshr i32 %66, 6, !dbg !11485
  %68 = and i32 %67, 511, !dbg !11485
  %69 = mul i32 %68, %65, !dbg !11486
  call void @llvm.dbg.value(metadata i32 %69, metadata !11422, metadata !DIExpression()), !dbg !11423
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11487
  %71 = lshr i32 %70, 28, !dbg !11488
  %72 = and i32 %71, 7, !dbg !11488
  %73 = udiv i32 %69, %72, !dbg !11489
  call void @llvm.dbg.value(metadata i32 %73, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11490

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11491
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11494
  %77 = and i32 %76, 63, !dbg !11494
  %78 = udiv i32 16000000, %77, !dbg !11494
  call void @llvm.dbg.value(metadata i32 %78, metadata !11419, metadata !DIExpression()), !dbg !11423
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11495
  %80 = lshr i32 %79, 6, !dbg !11496
  %81 = and i32 %80, 511, !dbg !11496
  %82 = mul i32 %81, %78, !dbg !11497
  call void @llvm.dbg.value(metadata i32 %82, metadata !11422, metadata !DIExpression()), !dbg !11423
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11498
  %84 = lshr i32 %83, 28, !dbg !11499
  %85 = and i32 %84, 7, !dbg !11499
  %86 = udiv i32 %82, %85, !dbg !11500
  call void @llvm.dbg.value(metadata i32 %86, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11501

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11502
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11418, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11505
  call void @llvm.dbg.value(metadata i32 %91, metadata !11421, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11423
  %92 = lshr i32 %91, 27, !dbg !11507
  %93 = and i32 %92, 3, !dbg !11507
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11507

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11508
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11512
  %97 = and i32 %96, 63, !dbg !11512
  %98 = udiv i32 16000000, %97, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %98, metadata !11419, metadata !DIExpression()), !dbg !11423
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11513
  %100 = lshr i32 %99, 6, !dbg !11514
  %101 = and i32 %100, 511, !dbg !11514
  %102 = mul i32 %101, %98, !dbg !11515
  call void @llvm.dbg.value(metadata i32 %102, metadata !11422, metadata !DIExpression()), !dbg !11423
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11516
  %104 = lshr i32 %103, 28, !dbg !11517
  %105 = and i32 %104, 7, !dbg !11517
  %106 = udiv i32 %102, %105, !dbg !11518
  call void @llvm.dbg.value(metadata i32 %106, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11519

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11520
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11419, metadata !DIExpression()), !dbg !11423
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11523
  %110 = and i32 %109, 63, !dbg !11523
  %111 = udiv i32 16000000, %110, !dbg !11523
  call void @llvm.dbg.value(metadata i32 %111, metadata !11419, metadata !DIExpression()), !dbg !11423
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11524
  %113 = lshr i32 %112, 6, !dbg !11525
  %114 = and i32 %113, 511, !dbg !11525
  %115 = mul i32 %114, %111, !dbg !11526
  call void @llvm.dbg.value(metadata i32 %115, metadata !11422, metadata !DIExpression()), !dbg !11423
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11527
  %117 = lshr i32 %116, 28, !dbg !11528
  %118 = and i32 %117, 7, !dbg !11528
  %119 = udiv i32 %115, %118, !dbg !11529
  call void @llvm.dbg.value(metadata i32 %119, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123, !dbg !11530

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11531
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11418, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11418, metadata !DIExpression()), !dbg !11423
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11423
  call void @llvm.dbg.value(metadata i32 %124, metadata !11418, metadata !DIExpression()), !dbg !11423
  ret i32 %124, !dbg !11534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #21 !dbg !11535 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11539, metadata !DIExpression()), !dbg !11540
  %2 = icmp eq i8 %0, 1, !dbg !11541
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11543
  %4 = and i32 %3, -9, !dbg !11544
  %5 = select i1 %2, i32 8, i32 0, !dbg !11544
  %6 = or i32 %4, %5, !dbg !11544
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11543
  ret void, !dbg !11545
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11551, metadata !DIExpression()), !dbg !11553
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11554
  %2 = tail call i32 @HAL_GetTick() #38, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %2, metadata !11552, metadata !DIExpression()), !dbg !11553
  br label %3, !dbg !11556

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11557
  %5 = and i32 %4, 134217728, !dbg !11557
  %6 = icmp eq i32 %5, 0, !dbg !11557
  br i1 %6, label %11, label %7, !dbg !11556

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #38, !dbg !11558
  %9 = sub i32 %8, %2, !dbg !11561
  %10 = icmp ugt i32 %9, 2, !dbg !11562
  br i1 %10, label %41, label %3, !dbg !11563, !llvm.loop !11564

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11566
  %13 = load i32, i32* %12, align 4, !dbg !11566
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11566
  %15 = load i32, i32* %14, align 4, !dbg !11566
  %16 = shl i32 %15, 6, !dbg !11566
  %17 = or i32 %16, %13, !dbg !11566
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11566
  %19 = load i32, i32* %18, align 4, !dbg !11566
  %20 = shl i32 %19, 15, !dbg !11566
  %21 = add i32 %20, -65536, !dbg !11566
  %22 = and i32 %21, -65536, !dbg !11566
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11566
  %24 = load i32, i32* %23, align 4, !dbg !11566
  %25 = shl i32 %24, 24, !dbg !11566
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11566
  %27 = load i32, i32* %26, align 4, !dbg !11566
  %28 = shl i32 %27, 28, !dbg !11566
  %29 = or i32 %17, %25, !dbg !11566
  %30 = or i32 %29, %22, !dbg !11566
  %31 = or i32 %30, %28, !dbg !11566
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11566
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11567
  %32 = tail call i32 @HAL_GetTick() #38, !dbg !11568
  call void @llvm.dbg.value(metadata i32 %32, metadata !11552, metadata !DIExpression()), !dbg !11553
  br label %33, !dbg !11569

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11570
  %35 = and i32 %34, 134217728, !dbg !11571
  %36 = icmp eq i32 %35, 0, !dbg !11571
  br i1 %36, label %37, label %41, !dbg !11569

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #38, !dbg !11572
  %39 = sub i32 %38, %32, !dbg !11575
  %40 = icmp ugt i32 %39, 2, !dbg !11576
  br i1 %40, label %41, label %33, !dbg !11577, !llvm.loop !11578

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11553
  ret i32 %42, !dbg !11580
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11581 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11586
  %1 = tail call i32 @HAL_GetTick() #38, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %1, metadata !11585, metadata !DIExpression()), !dbg !11588
  br label %2, !dbg !11589

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11590
  %4 = and i32 %3, 134217728, !dbg !11590
  %5 = icmp eq i32 %4, 0, !dbg !11591
  br i1 %5, label %10, label %6, !dbg !11589

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #38, !dbg !11592
  %8 = sub i32 %7, %1, !dbg !11595
  %9 = icmp ugt i32 %8, 2, !dbg !11596
  br i1 %9, label %10, label %2, !dbg !11597, !llvm.loop !11598

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11588
  ret i32 %11, !dbg !11600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11601 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11606, metadata !DIExpression()), !dbg !11608
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11609
  %2 = tail call i32 @HAL_GetTick() #38, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %2, metadata !11607, metadata !DIExpression()), !dbg !11608
  br label %3, !dbg !11611

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11612
  %5 = and i32 %4, 536870912, !dbg !11612
  %6 = icmp eq i32 %5, 0, !dbg !11612
  br i1 %6, label %11, label %7, !dbg !11611

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #38, !dbg !11613
  %9 = sub i32 %8, %2, !dbg !11616
  %10 = icmp ugt i32 %9, 2, !dbg !11617
  br i1 %10, label %37, label %3, !dbg !11618, !llvm.loop !11619

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11621
  %13 = load i32, i32* %12, align 4, !dbg !11621
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11621
  %15 = load i32, i32* %14, align 4, !dbg !11621
  %16 = shl i32 %15, 6, !dbg !11621
  %17 = or i32 %16, %13, !dbg !11621
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11621
  %19 = load i32, i32* %18, align 4, !dbg !11621
  %20 = shl i32 %19, 15, !dbg !11621
  %21 = add i32 %20, -65536, !dbg !11621
  %22 = and i32 %21, -65536, !dbg !11621
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11621
  %24 = load i32, i32* %23, align 4, !dbg !11621
  %25 = shl i32 %24, 24, !dbg !11621
  %26 = or i32 %17, %25, !dbg !11621
  %27 = or i32 %26, %22, !dbg !11621
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11621
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11622
  %28 = tail call i32 @HAL_GetTick() #38, !dbg !11623
  call void @llvm.dbg.value(metadata i32 %28, metadata !11607, metadata !DIExpression()), !dbg !11608
  br label %29, !dbg !11624

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11625
  %31 = and i32 %30, 536870912, !dbg !11626
  %32 = icmp eq i32 %31, 0, !dbg !11626
  br i1 %32, label %33, label %37, !dbg !11624

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #38, !dbg !11627
  %35 = sub i32 %34, %28, !dbg !11630
  %36 = icmp ugt i32 %35, 2, !dbg !11631
  br i1 %36, label %37, label %29, !dbg !11632, !llvm.loop !11633

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11608
  ret i32 %38, !dbg !11635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11636 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11639
  %1 = tail call i32 @HAL_GetTick() #38, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %1, metadata !11638, metadata !DIExpression()), !dbg !11641
  br label %2, !dbg !11642

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11643
  %4 = and i32 %3, 536870912, !dbg !11643
  %5 = icmp eq i32 %4, 0, !dbg !11643
  br i1 %5, label %10, label %6, !dbg !11642

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #38, !dbg !11644
  %8 = sub i32 %7, %1, !dbg !11647
  %9 = icmp ugt i32 %8, 2, !dbg !11648
  br i1 %9, label %10, label %2, !dbg !11649, !llvm.loop !11650

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11641
  ret i32 %11, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #24 !dbg !11653 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11655, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 0, metadata !11656, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 0, metadata !11657, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 0, metadata !11658, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 0, metadata !11659, metadata !DIExpression()), !dbg !11660
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11661
  %2 = lshr i32 %1, 2, !dbg !11662
  %3 = and i32 %2, 3, !dbg !11662
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11662

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11663
  %6 = and i32 %5, 63, !dbg !11666
  call void @llvm.dbg.value(metadata i32 %6, metadata !11655, metadata !DIExpression()), !dbg !11660
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11667
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11669
  %9 = lshr i32 %8, 6, !dbg !11669
  %10 = and i32 %9, 511, !dbg !11669
  %11 = zext i32 %10 to i64, !dbg !11669
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11669
  %13 = zext i32 %6 to i64, !dbg !11669
  %14 = udiv i64 %12, %13, !dbg !11669
  %15 = trunc i64 %14 to i32, !dbg !11669
  call void @llvm.dbg.value(metadata i32 %15, metadata !11656, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %15, metadata !11656, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %15, metadata !11656, metadata !DIExpression()), !dbg !11660
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11670
  %17 = lshr i32 %16, 15, !dbg !11671
  %18 = and i32 %17, 6, !dbg !11671
  %19 = add nuw nsw i32 %18, 2, !dbg !11671
  call void @llvm.dbg.value(metadata i32 %19, metadata !11657, metadata !DIExpression()), !dbg !11660
  %20 = udiv i32 %15, %19, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %20, metadata !11659, metadata !DIExpression()), !dbg !11660
  br label %38, !dbg !11673

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11674
  %23 = and i32 %22, 63, !dbg !11676
  call void @llvm.dbg.value(metadata i32 %23, metadata !11655, metadata !DIExpression()), !dbg !11660
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11677
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11679
  %26 = lshr i32 %25, 6, !dbg !11679
  %27 = and i32 %26, 511, !dbg !11679
  %28 = zext i32 %27 to i64, !dbg !11679
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11679
  %30 = zext i32 %23 to i64, !dbg !11679
  %31 = udiv i64 %29, %30, !dbg !11679
  %32 = trunc i64 %31 to i32, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %32, metadata !11656, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %32, metadata !11656, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %32, metadata !11656, metadata !DIExpression()), !dbg !11660
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11680
  %34 = lshr i32 %33, 28, !dbg !11681
  %35 = and i32 %34, 7, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %35, metadata !11658, metadata !DIExpression()), !dbg !11660
  %36 = udiv i32 %32, %35, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %36, metadata !11659, metadata !DIExpression()), !dbg !11660
  br label %38, !dbg !11683

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11684
  call void @llvm.dbg.value(metadata i32 %39, metadata !11659, metadata !DIExpression()), !dbg !11660
  ret i32 %39, !dbg !11685
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11686 {
  %1 = tail call i32 @HAL_GetTick() #38, !dbg !11689
  call void @llvm.dbg.value(metadata i32 %1, metadata !11688, metadata !DIExpression()), !dbg !11690
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11691
  %3 = or i32 %2, 1, !dbg !11691
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11691
  br label %4, !dbg !11692

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11693
  %6 = and i32 %5, 2, !dbg !11693
  %7 = icmp eq i32 %6, 0, !dbg !11694
  br i1 %7, label %8, label %12, !dbg !11692

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #38, !dbg !11695
  %10 = sub i32 %9, %1, !dbg !11698
  %11 = icmp ugt i32 %10, 2, !dbg !11699
  br i1 %11, label %89, label %4, !dbg !11700, !llvm.loop !11701

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11703
  %14 = or i32 %13, 128, !dbg !11703
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11703
  %15 = tail call i32 @HAL_GetTick() #38, !dbg !11704
  call void @llvm.dbg.value(metadata i32 %15, metadata !11688, metadata !DIExpression()), !dbg !11690
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11705
  br label %16, !dbg !11706

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11707
  %18 = and i32 %17, 12, !dbg !11707
  %19 = icmp eq i32 %18, 0, !dbg !11708
  %20 = tail call i32 @HAL_GetTick() #38, !dbg !11690
  br i1 %19, label %24, label %21, !dbg !11706

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11709
  %23 = icmp ugt i32 %22, 5000, !dbg !11712
  br i1 %23, label %89, label %16, !dbg !11713, !llvm.loop !11714

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11688, metadata !DIExpression()), !dbg !11690
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11716
  %26 = and i32 %25, -851969, !dbg !11716
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11716
  br label %27, !dbg !11717

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11718
  %29 = and i32 %28, 131072, !dbg !11718
  %30 = icmp eq i32 %29, 0, !dbg !11719
  %31 = tail call i32 @HAL_GetTick() #38, !dbg !11690
  br i1 %30, label %35, label %32, !dbg !11717

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11720
  %34 = icmp ugt i32 %33, 100, !dbg !11723
  br i1 %34, label %89, label %27, !dbg !11724, !llvm.loop !11725

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11688, metadata !DIExpression()), !dbg !11690
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11727
  %37 = and i32 %36, -16777217, !dbg !11727
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11727
  br label %38, !dbg !11728

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11729
  %40 = and i32 %39, 33554432, !dbg !11729
  %41 = icmp eq i32 %40, 0, !dbg !11730
  %42 = tail call i32 @HAL_GetTick() #38, !dbg !11690
  br i1 %41, label %46, label %43, !dbg !11728

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11731
  %45 = icmp ugt i32 %44, 2, !dbg !11734
  br i1 %45, label %89, label %38, !dbg !11735, !llvm.loop !11736

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11688, metadata !DIExpression()), !dbg !11690
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11738
  %48 = and i32 %47, -67108865, !dbg !11738
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11738
  br label %49, !dbg !11739

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11740
  %51 = and i32 %50, 134217728, !dbg !11740
  %52 = icmp eq i32 %51, 0, !dbg !11741
  %53 = tail call i32 @HAL_GetTick() #38, !dbg !11690
  br i1 %52, label %57, label %54, !dbg !11739

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11742
  %56 = icmp ugt i32 %55, 2, !dbg !11745
  br i1 %56, label %89, label %49, !dbg !11746, !llvm.loop !11747

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11688, metadata !DIExpression()), !dbg !11690
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11749
  %59 = and i32 %58, -268435457, !dbg !11749
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11749
  br label %60, !dbg !11750

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11751
  %62 = and i32 %61, 536870912, !dbg !11751
  %63 = icmp eq i32 %62, 0, !dbg !11752
  br i1 %63, label %68, label %64, !dbg !11750

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #38, !dbg !11753
  %66 = sub i32 %65, %53, !dbg !11756
  %67 = icmp ugt i32 %66, 2, !dbg !11757
  br i1 %67, label %89, label %60, !dbg !11758, !llvm.loop !11759

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11761
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11762
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11763
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11764
  %70 = and i32 %69, -7937, !dbg !11764
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11764
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11765
  %72 = and i32 %71, -8193, !dbg !11765
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11765
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11766
  %74 = and i32 %73, -16385, !dbg !11766
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11766
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11767
  %76 = or i32 %75, 10420224, !dbg !11767
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11767
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11768
  %78 = or i32 %77, 2097152, !dbg !11768
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11768
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11769
  %80 = or i32 %79, 4194304, !dbg !11769
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11769
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11770
  %82 = and i32 %81, -2, !dbg !11770
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11770
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11771
  %84 = or i32 %83, 16777216, !dbg !11771
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11771
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !11772
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !11773
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #38, !dbg !11775
  %87 = icmp ne i32 %86, 0, !dbg !11776
  %88 = zext i1 %87 to i32, !dbg !11777
  br label %89, !dbg !11777

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11690
  ret i32 %90, !dbg !11778
}

; Function Attrs: optsize
declare !dbg !11779 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11782 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11808, metadata !DIExpression()), !dbg !11819
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11820
  br i1 %3, label %337, label %4, !dbg !11822

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11823
  %6 = load i32, i32* %5, align 4, !dbg !11823
  %7 = and i32 %6, 1, !dbg !11825
  %8 = icmp eq i32 %7, 0, !dbg !11826
  br i1 %8, label %74, label %9, !dbg !11827

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11828
  %11 = and i32 %10, 12, !dbg !11828
  %12 = icmp eq i32 %11, 4, !dbg !11831
  br i1 %12, label %29, label %13, !dbg !11832

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11833
  %15 = and i32 %14, 12, !dbg !11833
  %16 = icmp eq i32 %15, 8, !dbg !11834
  br i1 %16, label %17, label %21, !dbg !11835

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11836
  %19 = and i32 %18, 4194304, !dbg !11837
  %20 = icmp eq i32 %19, 0, !dbg !11838
  br i1 %20, label %21, label %29, !dbg !11839

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11840
  %23 = and i32 %22, 12, !dbg !11840
  %24 = icmp eq i32 %23, 12, !dbg !11841
  br i1 %24, label %25, label %37, !dbg !11842

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11843
  %27 = and i32 %26, 4194304, !dbg !11844
  %28 = icmp eq i32 %27, 0, !dbg !11845
  br i1 %28, label %37, label %29, !dbg !11846

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11847
  %31 = and i32 %30, 131072, !dbg !11847
  %32 = icmp eq i32 %31, 0, !dbg !11847
  br i1 %32, label %74, label %33, !dbg !11850

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11851
  %35 = load i32, i32* %34, align 4, !dbg !11851
  %36 = icmp eq i32 %35, 0, !dbg !11852
  br i1 %36, label %337, label %74, !dbg !11853

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11854
  %39 = load i32, i32* %38, align 4, !dbg !11854
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !11858

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11859
  %42 = or i32 %41, 65536, !dbg !11859
  br label %53, !dbg !11859

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11861
  %45 = or i32 %44, 262144, !dbg !11861
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11861
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11861
  %47 = or i32 %46, 65536, !dbg !11861
  br label %53, !dbg !11861

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11864
  %50 = and i32 %49, -65537, !dbg !11864
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11864
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11864
  %52 = and i32 %51, -262145, !dbg !11864
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11866
  %55 = load i32, i32* %38, align 4, !dbg !11867
  %56 = icmp eq i32 %55, 0, !dbg !11869
  %57 = tail call i32 @HAL_GetTick() #38, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %57, metadata !11809, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.value(metadata i32 %57, metadata !11809, metadata !DIExpression()), !dbg !11819
  br i1 %56, label %66, label %58, !dbg !11871

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11872
  %60 = and i32 %59, 131072, !dbg !11874
  %61 = icmp eq i32 %60, 0, !dbg !11874
  br i1 %61, label %62, label %74, !dbg !11875

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #38, !dbg !11876
  %64 = sub i32 %63, %57, !dbg !11879
  %65 = icmp ugt i32 %64, 100, !dbg !11880
  br i1 %65, label %337, label %58, !dbg !11881, !llvm.loop !11882

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11884
  %68 = and i32 %67, 131072, !dbg !11884
  %69 = icmp eq i32 %68, 0, !dbg !11884
  br i1 %69, label %74, label %70, !dbg !11886

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #38, !dbg !11887
  %72 = sub i32 %71, %57, !dbg !11890
  %73 = icmp ugt i32 %72, 100, !dbg !11891
  br i1 %73, label %337, label %66, !dbg !11892, !llvm.loop !11893

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !11895
  %76 = and i32 %75, 2, !dbg !11897
  %77 = icmp eq i32 %76, 0, !dbg !11898
  br i1 %77, label %137, label %78, !dbg !11899

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11900
  %80 = and i32 %79, 12, !dbg !11900
  %81 = icmp eq i32 %80, 0, !dbg !11903
  br i1 %81, label %98, label %82, !dbg !11904

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11905
  %84 = and i32 %83, 12, !dbg !11905
  %85 = icmp eq i32 %84, 8, !dbg !11906
  br i1 %85, label %86, label %90, !dbg !11907

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11908
  %88 = and i32 %87, 4194304, !dbg !11909
  %89 = icmp eq i32 %88, 0, !dbg !11910
  br i1 %89, label %98, label %90, !dbg !11911

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11912
  %92 = and i32 %91, 12, !dbg !11912
  %93 = icmp eq i32 %92, 12, !dbg !11913
  br i1 %93, label %94, label %106, !dbg !11914

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11915
  %96 = and i32 %95, 4194304, !dbg !11916
  %97 = icmp eq i32 %96, 0, !dbg !11917
  br i1 %97, label %98, label %106, !dbg !11918

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11919
  %100 = and i32 %99, 2, !dbg !11919
  %101 = icmp eq i32 %100, 0, !dbg !11919
  br i1 %101, label %130, label %102, !dbg !11922

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11923
  %104 = load i32, i32* %103, align 4, !dbg !11923
  %105 = icmp eq i32 %104, 1, !dbg !11924
  br i1 %105, label %130, label %337, !dbg !11925

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11926
  %108 = load i32, i32* %107, align 4, !dbg !11926
  %109 = icmp eq i32 %108, 0, !dbg !11929
  br i1 %109, label %120, label %110, !dbg !11930

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11931
  %111 = tail call i32 @HAL_GetTick() #38, !dbg !11933
  call void @llvm.dbg.value(metadata i32 %111, metadata !11809, metadata !DIExpression()), !dbg !11819
  br label %112, !dbg !11934

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11935
  %114 = and i32 %113, 2, !dbg !11936
  %115 = icmp eq i32 %114, 0, !dbg !11936
  br i1 %115, label %116, label %130, !dbg !11934

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #38, !dbg !11937
  %118 = sub i32 %117, %111, !dbg !11940
  %119 = icmp ugt i32 %118, 2, !dbg !11941
  br i1 %119, label %337, label %112, !dbg !11942, !llvm.loop !11943

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11945
  %121 = tail call i32 @HAL_GetTick() #38, !dbg !11947
  call void @llvm.dbg.value(metadata i32 %121, metadata !11809, metadata !DIExpression()), !dbg !11819
  br label %122, !dbg !11948

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11949
  %124 = and i32 %123, 2, !dbg !11949
  %125 = icmp eq i32 %124, 0, !dbg !11949
  br i1 %125, label %137, label %126, !dbg !11948

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #38, !dbg !11950
  %128 = sub i32 %127, %121, !dbg !11953
  %129 = icmp ugt i32 %128, 2, !dbg !11954
  br i1 %129, label %337, label %122, !dbg !11955, !llvm.loop !11956

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11958
  %132 = and i32 %131, -249, !dbg !11958
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11958
  %134 = load i32, i32* %133, align 4, !dbg !11958
  %135 = shl i32 %134, 3, !dbg !11958
  %136 = or i32 %135, %132, !dbg !11958
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11958
  br label %137, !dbg !11959

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !11959
  %139 = and i32 %138, 8, !dbg !11961
  %140 = icmp eq i32 %139, 0, !dbg !11962
  br i1 %140, label %165, label %141, !dbg !11963

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11964
  %143 = load i32, i32* %142, align 4, !dbg !11964
  %144 = icmp eq i32 %143, 0, !dbg !11967
  br i1 %144, label %155, label %145, !dbg !11968

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11969
  %146 = tail call i32 @HAL_GetTick() #38, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %146, metadata !11809, metadata !DIExpression()), !dbg !11819
  br label %147, !dbg !11972

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11973
  %149 = and i32 %148, 2, !dbg !11974
  %150 = icmp eq i32 %149, 0, !dbg !11974
  br i1 %150, label %151, label %165, !dbg !11972

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #38, !dbg !11975
  %153 = sub i32 %152, %146, !dbg !11978
  %154 = icmp ugt i32 %153, 2, !dbg !11979
  br i1 %154, label %337, label %147, !dbg !11980, !llvm.loop !11981

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11983
  %156 = tail call i32 @HAL_GetTick() #38, !dbg !11985
  call void @llvm.dbg.value(metadata i32 %156, metadata !11809, metadata !DIExpression()), !dbg !11819
  br label %157, !dbg !11986

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11987
  %159 = and i32 %158, 2, !dbg !11987
  %160 = icmp eq i32 %159, 0, !dbg !11987
  br i1 %160, label %165, label %161, !dbg !11986

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #38, !dbg !11988
  %163 = sub i32 %162, %156, !dbg !11991
  %164 = icmp ugt i32 %163, 2, !dbg !11992
  br i1 %164, label %337, label %157, !dbg !11993, !llvm.loop !11994

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !11996
  %167 = and i32 %166, 4, !dbg !11997
  %168 = icmp eq i32 %167, 0, !dbg !11998
  br i1 %168, label %237, label %169, !dbg !11999

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !11811, metadata !DIExpression()), !dbg !12000
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12001
  %171 = and i32 %170, 268435456, !dbg !12001
  %172 = icmp eq i32 %171, 0, !dbg !12001
  br i1 %172, label %173, label %180, !dbg !12002

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !12003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !12003
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11815, metadata !DIExpression()), !dbg !12003
  store volatile i32 0, i32* %2, align 4, !dbg !12003
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12003
  %176 = or i32 %175, 268435456, !dbg !12003
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12003
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12003
  %178 = and i32 %177, 268435456, !dbg !12003
  store volatile i32 %178, i32* %2, align 4, !dbg !12003
  %179 = load volatile i32, i32* %2, align 4, !dbg !12003
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !12004
  call void @llvm.dbg.value(metadata i32 1, metadata !11811, metadata !DIExpression()), !dbg !12000
  br label %180, !dbg !12005

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !11811, metadata !DIExpression()), !dbg !12000
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12006
  %182 = and i32 %181, 256, !dbg !12006
  %183 = icmp eq i32 %182, 0, !dbg !12006
  br i1 %183, label %184, label %196, !dbg !12008

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12009
  %186 = or i32 %185, 256, !dbg !12009
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12009
  %187 = tail call i32 @HAL_GetTick() #38, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %187, metadata !11809, metadata !DIExpression()), !dbg !11819
  br label %188, !dbg !12012

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12013
  %190 = and i32 %189, 256, !dbg !12013
  %191 = icmp eq i32 %190, 0, !dbg !12013
  br i1 %191, label %192, label %196, !dbg !12012

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #38, !dbg !12014
  %194 = sub i32 %193, %187, !dbg !12017
  %195 = icmp ugt i32 %194, 2, !dbg !12018
  br i1 %195, label %337, label %188, !dbg !12019, !llvm.loop !12020

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12022
  %198 = load i32, i32* %197, align 4, !dbg !12022
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !12025

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12026
  %201 = or i32 %200, 1, !dbg !12026
  br label %212, !dbg !12026

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12028
  %204 = or i32 %203, 4, !dbg !12028
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12028
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12028
  %206 = or i32 %205, 1, !dbg !12028
  br label %212, !dbg !12028

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12031
  %209 = and i32 %208, -2, !dbg !12031
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12031
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12031
  %211 = and i32 %210, -5, !dbg !12031
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12033
  %214 = load i32, i32* %197, align 4, !dbg !12034
  %215 = icmp eq i32 %214, 0, !dbg !12036
  %216 = tail call i32 @HAL_GetTick() #38, !dbg !12037
  call void @llvm.dbg.value(metadata i32 %216, metadata !11809, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.value(metadata i32 %216, metadata !11809, metadata !DIExpression()), !dbg !11819
  br i1 %215, label %225, label %217, !dbg !12038

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12039
  %219 = and i32 %218, 2, !dbg !12041
  %220 = icmp eq i32 %219, 0, !dbg !12041
  br i1 %220, label %221, label %233, !dbg !12042

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #38, !dbg !12043
  %223 = sub i32 %222, %216, !dbg !12046
  %224 = icmp ugt i32 %223, 5000, !dbg !12047
  br i1 %224, label %337, label %217, !dbg !12048, !llvm.loop !12049

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12051
  %227 = and i32 %226, 2, !dbg !12051
  %228 = icmp eq i32 %227, 0, !dbg !12051
  br i1 %228, label %233, label %229, !dbg !12053

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #38, !dbg !12054
  %231 = sub i32 %230, %216, !dbg !12057
  %232 = icmp ugt i32 %231, 5000, !dbg !12058
  br i1 %232, label %337, label %225, !dbg !12059, !llvm.loop !12060

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !12062

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12063
  %236 = and i32 %235, -268435457, !dbg !12063
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12063
  br label %237, !dbg !12066

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12067
  %239 = load i32, i32* %238, align 4, !dbg !12067
  %240 = icmp eq i32 %239, 0, !dbg !12069
  br i1 %240, label %336, label %241, !dbg !12070

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12071
  %243 = and i32 %242, 12, !dbg !12071
  %244 = icmp eq i32 %243, 8, !dbg !12074
  br i1 %244, label %297, label %245, !dbg !12075

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !12076
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12079
  %247 = tail call i32 @HAL_GetTick() #38, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %247, metadata !11809, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.value(metadata i32 %247, metadata !11809, metadata !DIExpression()), !dbg !11819
  br i1 %246, label %248, label %289, !dbg !12080

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12081
  %250 = and i32 %249, 33554432, !dbg !12081
  %251 = icmp eq i32 %250, 0, !dbg !12081
  br i1 %251, label %256, label %252, !dbg !12083

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #38, !dbg !12084
  %254 = sub i32 %253, %247, !dbg !12087
  %255 = icmp ugt i32 %254, 2, !dbg !12088
  br i1 %255, label %337, label %248, !dbg !12089, !llvm.loop !12090

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12092
  %258 = load i32, i32* %257, align 4, !dbg !12092
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12092
  %260 = load i32, i32* %259, align 4, !dbg !12092
  %261 = or i32 %260, %258, !dbg !12092
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12092
  %263 = load i32, i32* %262, align 4, !dbg !12092
  %264 = shl i32 %263, 6, !dbg !12092
  %265 = or i32 %261, %264, !dbg !12092
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12092
  %267 = load i32, i32* %266, align 4, !dbg !12092
  %268 = shl i32 %267, 15, !dbg !12092
  %269 = add i32 %268, -65536, !dbg !12092
  %270 = and i32 %269, -65536, !dbg !12092
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12092
  %272 = load i32, i32* %271, align 4, !dbg !12092
  %273 = shl i32 %272, 24, !dbg !12092
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12092
  %275 = load i32, i32* %274, align 4, !dbg !12092
  %276 = shl i32 %275, 28, !dbg !12092
  %277 = or i32 %265, %273, !dbg !12092
  %278 = or i32 %277, %270, !dbg !12092
  %279 = or i32 %278, %276, !dbg !12092
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12092
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12093
  %280 = tail call i32 @HAL_GetTick() #38, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %280, metadata !11809, metadata !DIExpression()), !dbg !11819
  br label %281, !dbg !12095

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12096
  %283 = and i32 %282, 33554432, !dbg !12097
  %284 = icmp eq i32 %283, 0, !dbg !12097
  br i1 %284, label %285, label %336, !dbg !12095

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #38, !dbg !12098
  %287 = sub i32 %286, %280, !dbg !12101
  %288 = icmp ugt i32 %287, 2, !dbg !12102
  br i1 %288, label %337, label %281, !dbg !12103, !llvm.loop !12104

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12106
  %291 = and i32 %290, 33554432, !dbg !12106
  %292 = icmp eq i32 %291, 0, !dbg !12106
  br i1 %292, label %336, label %293, !dbg !12108

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #38, !dbg !12109
  %295 = sub i32 %294, %247, !dbg !12112
  %296 = icmp ugt i32 %295, 2, !dbg !12113
  br i1 %296, label %337, label %289, !dbg !12114, !llvm.loop !12115

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !12117
  br i1 %298, label %337, label %299, !dbg !12120

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %300, metadata !11810, metadata !DIExpression()), !dbg !11819
  %301 = and i32 %300, 4194304, !dbg !12123
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12125
  %303 = load i32, i32* %302, align 4, !dbg !12125
  %304 = icmp eq i32 %301, %303, !dbg !12126
  br i1 %304, label %305, label %337, !dbg !12127

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !12128
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12129
  %308 = load i32, i32* %307, align 4, !dbg !12129
  %309 = icmp eq i32 %306, %308, !dbg !12130
  br i1 %309, label %310, label %337, !dbg !12131

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !12132
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12133
  %313 = load i32, i32* %312, align 4, !dbg !12133
  %314 = shl i32 %313, 6, !dbg !12134
  %315 = icmp eq i32 %311, %314, !dbg !12135
  br i1 %315, label %316, label %337, !dbg !12136

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !12137
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12138
  %319 = load i32, i32* %318, align 4, !dbg !12138
  %320 = shl i32 %319, 15, !dbg !12139
  %321 = add i32 %320, -65536, !dbg !12139
  %322 = and i32 %321, -65536, !dbg !12139
  %323 = icmp eq i32 %317, %322, !dbg !12140
  br i1 %323, label %324, label %337, !dbg !12141

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !12142
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12143
  %327 = load i32, i32* %326, align 4, !dbg !12143
  %328 = shl i32 %327, 24, !dbg !12144
  %329 = icmp eq i32 %325, %328, !dbg !12145
  br i1 %329, label %330, label %337, !dbg !12146

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !12147
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12148
  %333 = load i32, i32* %332, align 4, !dbg !12148
  %334 = shl i32 %333, 28, !dbg !12149
  %335 = icmp eq i32 %331, %334, !dbg !12150
  br i1 %335, label %336, label %337, !dbg !12151

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !12152

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !11819
  ret i32 %338, !dbg !12153
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #24 !dbg !12154 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12158, metadata !DIExpression()), !dbg !12159
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12160
  store i32 15, i32* %2, align 4, !dbg !12161
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12162
  %4 = and i32 %3, 262144, !dbg !12164
  %5 = icmp eq i32 %4, 0, !dbg !12165
  br i1 %5, label %8, label %6, !dbg !12166

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12167
  store i32 327680, i32* %7, align 4, !dbg !12169
  br label %15, !dbg !12170

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12171
  %10 = and i32 %9, 65536, !dbg !12173
  %11 = icmp eq i32 %10, 0, !dbg !12174
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12175
  br i1 %11, label %14, label %13, !dbg !12176

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12177
  br label %15, !dbg !12179

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12180
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12182
  %17 = and i32 %16, 1, !dbg !12184
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12185
  store i32 %17, i32* %18, align 4, !dbg !12187
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12188
  %20 = lshr i32 %19, 3, !dbg !12189
  %21 = and i32 %20, 31, !dbg !12189
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12190
  store i32 %21, i32* %22, align 4, !dbg !12191
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12192
  %24 = and i32 %23, 4, !dbg !12194
  %25 = icmp eq i32 %24, 0, !dbg !12195
  br i1 %25, label %28, label %26, !dbg !12196

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12197
  store i32 5, i32* %27, align 4, !dbg !12199
  br label %35, !dbg !12200

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12201
  %30 = and i32 %29, 1, !dbg !12203
  %31 = icmp eq i32 %30, 0, !dbg !12204
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12205
  br i1 %31, label %34, label %33, !dbg !12206

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12207
  br label %35, !dbg !12209

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12210
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12212
  %37 = and i32 %36, 1, !dbg !12214
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12215
  store i32 %37, i32* %38, align 4, !dbg !12217
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12218
  %40 = and i32 %39, 16777216, !dbg !12220
  %41 = icmp eq i32 %40, 0, !dbg !12221
  %42 = select i1 %41, i32 1, i32 2, !dbg !12222
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12223
  store i32 %42, i32* %43, align 4, !dbg !12225
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12226
  %45 = and i32 %44, 4194304, !dbg !12227
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12228
  store i32 %45, i32* %46, align 4, !dbg !12229
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12230
  %48 = and i32 %47, 63, !dbg !12231
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12232
  store i32 %48, i32* %49, align 4, !dbg !12233
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12234
  %51 = lshr i32 %50, 6, !dbg !12235
  %52 = and i32 %51, 511, !dbg !12235
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12236
  store i32 %52, i32* %53, align 4, !dbg !12237
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12238
  %55 = shl i32 %54, 1, !dbg !12239
  %56 = and i32 %55, 393216, !dbg !12239
  %57 = add nuw nsw i32 %56, 131072, !dbg !12239
  %58 = lshr exact i32 %57, 16, !dbg !12240
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12241
  store i32 %58, i32* %59, align 4, !dbg !12242
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12243
  %61 = lshr i32 %60, 24, !dbg !12244
  %62 = and i32 %61, 15, !dbg !12244
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12245
  store i32 %62, i32* %63, align 4, !dbg !12246
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12247
  %65 = lshr i32 %64, 28, !dbg !12248
  %66 = and i32 %65, 7, !dbg !12248
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12249
  store i32 %66, i32* %67, align 4, !dbg !12250
  ret void, !dbg !12251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #21 !dbg !12252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12255, metadata !DIExpression()), !dbg !12256
  tail call fastcc void @LL_InitTick(i32 noundef %0) #37, !dbg !12257
  ret void, !dbg !12258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #21 !dbg !12259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12262, metadata !DIExpression()), !dbg !12264
  call void @llvm.dbg.value(metadata i32 1000, metadata !12263, metadata !DIExpression()), !dbg !12264
  %2 = udiv i32 %0, 1000, !dbg !12265
  %3 = add nsw i32 %2, -1, !dbg !12266
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12267
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12268
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12269
  ret void, !dbg !12270
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #25 !dbg !12271 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12273, metadata !DIExpression()), !dbg !12275
  %3 = bitcast i32* %2 to i8*, !dbg !12276
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12276
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12274, metadata !DIExpression()), !dbg !12277
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12278
  store volatile i32 %4, i32* %2, align 4, !dbg !12277
  %5 = load volatile i32, i32* %2, align 4, !dbg !12279
  %6 = icmp eq i32 %0, -1, !dbg !12280
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12273, metadata !DIExpression()), !dbg !12275
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %8, metadata !12273, metadata !DIExpression()), !dbg !12275
  br label %9, !dbg !12282

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12273, metadata !DIExpression()), !dbg !12275
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12283
  call void @llvm.dbg.value(metadata i32 undef, metadata !12273, metadata !DIExpression()), !dbg !12275
  %12 = shl i32 %11, 15, !dbg !12275
  %13 = ashr i32 %12, 31, !dbg !12275
  %14 = add i32 %13, %10, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %14, metadata !12273, metadata !DIExpression()), !dbg !12275
  %15 = icmp eq i32 %14, 0, !dbg !12282
  br i1 %15, label %16, label %9, !dbg !12282

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12286
  ret void, !dbg !12286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #10 !dbg !12287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12289, metadata !DIExpression()), !dbg !12290
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12291
  ret void, !dbg !12292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #21 !dbg !12293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12298, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 0, metadata !12301, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 0, metadata !12302, metadata !DIExpression()), !dbg !12303
  %2 = icmp eq i32 %0, 0, !dbg !12304
  br i1 %2, label %72, label %3, !dbg !12306

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #37, !dbg !12307
  %5 = icmp eq i32 %4, 49152, !dbg !12310
  br i1 %5, label %6, label %21, !dbg !12311

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12312
  %8 = select i1 %7, i32 0, i32 5, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %8, metadata !12301, metadata !DIExpression()), !dbg !12303
  %9 = add i32 %0, -120000001, !dbg !12316
  %10 = icmp ult i32 %9, 30000000, !dbg !12316
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %11, metadata !12301, metadata !DIExpression()), !dbg !12303
  %12 = icmp ult i32 %9, -30000000, !dbg !12318
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12318
  call void @llvm.dbg.value(metadata i32 %13, metadata !12301, metadata !DIExpression()), !dbg !12303
  %14 = icmp ugt i32 %0, 60000000, !dbg !12320
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12322
  br i1 %16, label %21, label %17, !dbg !12322

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12323
  %19 = and i1 %18, %15, !dbg !12326
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12326
  br label %21, !dbg !12326

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12303
  call void @llvm.dbg.value(metadata i32 %22, metadata !12301, metadata !DIExpression()), !dbg !12303
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #37, !dbg !12327
  %24 = icmp eq i32 %23, 32768, !dbg !12329
  br i1 %24, label %25, label %45, !dbg !12330

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12331
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12334
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12334
  call void @llvm.dbg.value(metadata i32 %29, metadata !12301, metadata !DIExpression()), !dbg !12303
  %30 = icmp ugt i32 %0, 12000000, !dbg !12335
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12337
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12337
  call void @llvm.dbg.value(metadata i32 %33, metadata !12301, metadata !DIExpression()), !dbg !12303
  %34 = icmp ugt i32 %0, 90000000, !dbg !12338
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12340
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %37, metadata !12301, metadata !DIExpression()), !dbg !12303
  %38 = icmp ugt i32 %0, 60000000, !dbg !12341
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12343
  br i1 %40, label %45, label %41, !dbg !12343

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12344
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12347
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12347
  br label %45, !dbg !12347

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12348
  call void @llvm.dbg.value(metadata i32 %46, metadata !12301, metadata !DIExpression()), !dbg !12303
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #37, !dbg !12349
  %48 = icmp eq i32 %47, 16384, !dbg !12351
  br i1 %48, label %49, label %61, !dbg !12352

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12353
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12356
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12356
  call void @llvm.dbg.value(metadata i32 %53, metadata !12301, metadata !DIExpression()), !dbg !12303
  %54 = icmp ugt i32 %0, 60000000, !dbg !12357
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12359
  br i1 %56, label %61, label %57, !dbg !12359

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12360
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12363
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12363
  br label %61, !dbg !12363

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12348
  call void @llvm.dbg.value(metadata i32 %62, metadata !12301, metadata !DIExpression()), !dbg !12303
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #37, !dbg !12364
  call void @llvm.dbg.value(metadata i32 2, metadata !12299, metadata !DIExpression()), !dbg !12303
  br label %63, !dbg !12365

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12348
  call void @llvm.dbg.value(metadata i32 %64, metadata !12299, metadata !DIExpression()), !dbg !12303
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #37, !dbg !12366
  call void @llvm.dbg.value(metadata i32 %65, metadata !12300, metadata !DIExpression()), !dbg !12303
  %66 = add nsw i32 %64, -1, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %66, metadata !12299, metadata !DIExpression()), !dbg !12303
  %67 = icmp ne i32 %65, %62, !dbg !12369
  %68 = icmp ne i32 %66, 0, !dbg !12370
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12370
  br i1 %69, label %63, label %70, !dbg !12371, !llvm.loop !12372

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12374
  call void @llvm.dbg.value(metadata i32 %73, metadata !12302, metadata !DIExpression()), !dbg !12303
  ret i32 %73, !dbg !12375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #24 !dbg !12376 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12378
  %2 = and i32 %1, 49152, !dbg !12378
  ret i32 %2, !dbg !12379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #21 !dbg !12380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12382, metadata !DIExpression()), !dbg !12383
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12384
  %3 = and i32 %2, -16, !dbg !12384
  %4 = or i32 %3, %0, !dbg !12384
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12384
  ret void, !dbg !12385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #24 !dbg !12386 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12387
  %2 = and i32 %1, 15, !dbg !12387
  ret i32 %2, !dbg !12388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #21 !dbg !12389 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12407, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12408, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata i32 0, metadata !12409, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata i32 0, metadata !12410, metadata !DIExpression()), !dbg !12411
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #37, !dbg !12412
  %4 = icmp eq i32 %3, 0, !dbg !12414
  br i1 %4, label %5, label %21, !dbg !12415

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #37, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %6, metadata !12410, metadata !DIExpression()), !dbg !12411
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.86() #37, !dbg !12418
  %8 = icmp eq i32 %7, 1, !dbg !12420
  br i1 %8, label %13, label %9, !dbg !12421

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.87() #37, !dbg !12422
  br label %10, !dbg !12424

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.86() #37, !dbg !12425
  %12 = icmp eq i32 %11, 1, !dbg !12426
  br i1 %12, label %13, label %10, !dbg !12424, !llvm.loop !12427

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12429
  %15 = load i32, i32* %14, align 4, !dbg !12429
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12430
  %17 = load i32, i32* %16, align 4, !dbg !12430
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12431
  %19 = load i32, i32* %18, align 4, !dbg !12431
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #37, !dbg !12432
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #37, !dbg !12433
  call void @llvm.dbg.value(metadata i32 %20, metadata !12409, metadata !DIExpression()), !dbg !12411
  br label %21, !dbg !12434

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12435
  call void @llvm.dbg.value(metadata i32 %22, metadata !12409, metadata !DIExpression()), !dbg !12411
  ret i32 %22, !dbg !12436
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #24 !dbg !12437 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12441, metadata !DIExpression()), !dbg !12442
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.90() #37, !dbg !12443
  %2 = icmp ne i32 %1, 0, !dbg !12445
  call void @llvm.dbg.value(metadata i1 %2, metadata !12441, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12442
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #37, !dbg !12446
  %4 = icmp ne i32 %3, 0, !dbg !12448
  call void @llvm.dbg.value(metadata i1 undef, metadata !12441, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12442
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #37, !dbg !12449
  %6 = icmp ne i32 %5, 0, !dbg !12451
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12452
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12452
  %9 = zext i1 %8 to i32, !dbg !12452
  call void @llvm.dbg.value(metadata i32 %9, metadata !12441, metadata !DIExpression()), !dbg !12442
  ret i32 %9, !dbg !12453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #11 !dbg !12454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12458, metadata !DIExpression()), !dbg !12461
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12459, metadata !DIExpression()), !dbg !12461
  call void @llvm.dbg.value(metadata i32 0, metadata !12460, metadata !DIExpression()), !dbg !12461
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12462
  %4 = load i32, i32* %3, align 4, !dbg !12462
  %5 = and i32 %4, 63, !dbg !12463
  %6 = udiv i32 %0, %5, !dbg !12464
  call void @llvm.dbg.value(metadata i32 %6, metadata !12460, metadata !DIExpression()), !dbg !12461
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12465
  %8 = load i32, i32* %7, align 4, !dbg !12465
  %9 = and i32 %8, 511, !dbg !12466
  %10 = mul i32 %9, %6, !dbg !12467
  call void @llvm.dbg.value(metadata i32 %10, metadata !12460, metadata !DIExpression()), !dbg !12461
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12468
  %12 = load i32, i32* %11, align 4, !dbg !12468
  %13 = lshr i32 %12, 15, !dbg !12469
  %14 = and i32 %13, 131070, !dbg !12469
  %15 = add nuw nsw i32 %14, 2, !dbg !12469
  %16 = udiv i32 %10, %15, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %16, metadata !12460, metadata !DIExpression()), !dbg !12461
  ret i32 %16, !dbg !12471
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.86() unnamed_addr #24 !dbg !12472 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12473
  %2 = lshr i32 %1, 1, !dbg !12474
  %3 = and i32 %2, 1, !dbg !12474
  ret i32 %3, !dbg !12475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.87() unnamed_addr #21 !dbg !12476 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12477
  %2 = or i32 %1, 1, !dbg !12477
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12477
  ret void, !dbg !12478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #21 !dbg !12479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12481, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata i32 %1, metadata !12482, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata i32 %2, metadata !12483, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata i32 %3, metadata !12484, metadata !DIExpression()), !dbg !12485
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12486
  %6 = and i32 %5, -4227072, !dbg !12486
  %7 = or i32 %1, %0, !dbg !12486
  %8 = shl i32 %2, 6, !dbg !12486
  %9 = or i32 %7, %8, !dbg !12486
  %10 = or i32 %9, %6, !dbg !12486
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12486
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12487
  %12 = and i32 %11, -196609, !dbg !12487
  %13 = or i32 %12, %3, !dbg !12487
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12487
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12488
  %15 = and i32 %14, -1879048193, !dbg !12488
  %16 = or i32 %15, %3, !dbg !12488
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12488
  ret void, !dbg !12489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #21 !dbg !12490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12494, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12495, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata i32 0, metadata !12496, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata i32 0, metadata !12497, metadata !DIExpression()), !dbg !12498
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12499
  %4 = load i32, i32* %3, align 4, !dbg !12499
  %5 = lshr i32 %4, 4, !dbg !12499
  %6 = and i32 %5, 15, !dbg !12499
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12499
  %8 = load i8, i8* %7, align 1, !dbg !12499
  %9 = zext i8 %8 to i32, !dbg !12499
  %10 = lshr i32 %0, %9, !dbg !12499
  call void @llvm.dbg.value(metadata i32 %10, metadata !12497, metadata !DIExpression()), !dbg !12498
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12500
  %12 = icmp ult i32 %11, %10, !dbg !12502
  br i1 %12, label %13, label %16, !dbg !12503

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #37, !dbg !12504
  call void @llvm.dbg.value(metadata i32 %14, metadata !12496, metadata !DIExpression()), !dbg !12498
  %15 = icmp eq i32 %14, 0, !dbg !12506
  br i1 %15, label %16, label %30, !dbg !12508

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.89() #37, !dbg !12509
  br label %17, !dbg !12511

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.90() #37, !dbg !12512
  %19 = icmp eq i32 %18, 1, !dbg !12513
  br i1 %19, label %20, label %17, !dbg !12511, !llvm.loop !12514

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12516
  tail call fastcc void @LL_RCC_SetAHBPrescaler.91(i32 noundef %21) #37, !dbg !12517
  tail call fastcc void @LL_RCC_SetSysClkSource.92() #37, !dbg !12518
  br label %22, !dbg !12519

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.93() #37, !dbg !12520
  %24 = icmp eq i32 %23, 8, !dbg !12521
  br i1 %24, label %25, label %22, !dbg !12519, !llvm.loop !12522

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12524
  %27 = load i32, i32* %26, align 4, !dbg !12524
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.94(i32 noundef %27) #37, !dbg !12525
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12526
  %29 = load i32, i32* %28, align 4, !dbg !12526
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.95(i32 noundef %29) #37, !dbg !12527
  br label %30, !dbg !12528

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12529
  %33 = icmp ugt i32 %32, %10, !dbg !12531
  br i1 %33, label %34, label %36, !dbg !12532

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #37, !dbg !12533
  call void @llvm.dbg.value(metadata i32 %35, metadata !12496, metadata !DIExpression()), !dbg !12498
  br label %36, !dbg !12535

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12498
  call void @llvm.dbg.value(metadata i32 %37, metadata !12496, metadata !DIExpression()), !dbg !12498
  %38 = icmp eq i32 %37, 0, !dbg !12536
  br i1 %38, label %39, label %40, !dbg !12538

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #37, !dbg !12539
  br label %40, !dbg !12541

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.89() unnamed_addr #21 !dbg !12543 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12544
  %2 = or i32 %1, 16777216, !dbg !12544
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12544
  ret void, !dbg !12545
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.90() unnamed_addr #24 !dbg !12546 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12547
  %2 = lshr i32 %1, 25, !dbg !12548
  %3 = and i32 %2, 1, !dbg !12548
  ret i32 %3, !dbg !12549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.91(i32 noundef %0) unnamed_addr #21 !dbg !12550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12552, metadata !DIExpression()), !dbg !12553
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12554
  %3 = and i32 %2, -241, !dbg !12554
  %4 = or i32 %3, %0, !dbg !12554
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12554
  ret void, !dbg !12555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.92() unnamed_addr #21 !dbg !12556 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12558, metadata !DIExpression()), !dbg !12559
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12560
  %2 = and i32 %1, -4, !dbg !12560
  %3 = or i32 %2, 2, !dbg !12560
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12560
  ret void, !dbg !12561
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.93() unnamed_addr #24 !dbg !12562 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12563
  %2 = and i32 %1, 12, !dbg !12563
  ret i32 %2, !dbg !12564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.94(i32 noundef %0) unnamed_addr #21 !dbg !12565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12567, metadata !DIExpression()), !dbg !12568
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12569
  %3 = and i32 %2, -7169, !dbg !12569
  %4 = or i32 %3, %0, !dbg !12569
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12569
  ret void, !dbg !12570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.95(i32 noundef %0) unnamed_addr #21 !dbg !12571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12573, metadata !DIExpression()), !dbg !12574
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12575
  %3 = and i32 %2, -57345, !dbg !12575
  %4 = or i32 %3, %0, !dbg !12575
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12575
  ret void, !dbg !12576
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #24 !dbg !12577 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12578
  %2 = lshr i32 %1, 29, !dbg !12579
  %3 = and i32 %2, 1, !dbg !12579
  ret i32 %3, !dbg !12580
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #24 !dbg !12581 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12582
  %2 = lshr i32 %1, 27, !dbg !12583
  %3 = and i32 %2, 1, !dbg !12583
  ret i32 %3, !dbg !12584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #21 !dbg !12585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12589, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 %1, metadata !12590, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12591, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12592, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 0, metadata !12593, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata i32 0, metadata !12594, metadata !DIExpression()), !dbg !12595
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #37, !dbg !12596
  %6 = icmp eq i32 %5, 0, !dbg !12598
  br i1 %6, label %7, label %27, !dbg !12599

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #37, !dbg !12600
  call void @llvm.dbg.value(metadata i32 %8, metadata !12594, metadata !DIExpression()), !dbg !12595
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.96() #37, !dbg !12602
  %10 = icmp eq i32 %9, 1, !dbg !12604
  br i1 %10, label %19, label %11, !dbg !12605

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12606
  br i1 %12, label %13, label %14, !dbg !12609

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #37, !dbg !12610
  br label %15, !dbg !12612

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.97() #37, !dbg !12613
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.98() #37, !dbg !12615
  br label %16, !dbg !12616

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.96() #37, !dbg !12617
  %18 = icmp eq i32 %17, 1, !dbg !12618
  br i1 %18, label %19, label %16, !dbg !12616, !llvm.loop !12619

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12621
  %21 = load i32, i32* %20, align 4, !dbg !12621
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12622
  %23 = load i32, i32* %22, align 4, !dbg !12622
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12623
  %25 = load i32, i32* %24, align 4, !dbg !12623
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.88(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #37, !dbg !12624
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #37, !dbg !12625
  call void @llvm.dbg.value(metadata i32 %26, metadata !12593, metadata !DIExpression()), !dbg !12595
  br label %27, !dbg !12626

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12627
  call void @llvm.dbg.value(metadata i32 %28, metadata !12593, metadata !DIExpression()), !dbg !12595
  ret i32 %28, !dbg !12628
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.96() unnamed_addr #24 !dbg !12629 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12630
  %2 = lshr i32 %1, 17, !dbg !12631
  %3 = and i32 %2, 1, !dbg !12631
  ret i32 %3, !dbg !12632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #21 !dbg !12633 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12634
  %2 = or i32 %1, 262144, !dbg !12634
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.97() unnamed_addr #21 !dbg !12636 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12637
  %2 = and i32 %1, -262145, !dbg !12637
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12637
  ret void, !dbg !12638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.98() unnamed_addr #21 !dbg !12639 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12640
  %2 = or i32 %1, 65536, !dbg !12640
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12640
  ret void, !dbg !12641
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #31 !dbg !12642 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12645, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata i32 undef, metadata !12645, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata i32 undef, metadata !12645, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12661
  ret void, !dbg !12662
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12663 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12667, metadata !DIExpression()), !dbg !12669
  %2 = icmp eq i8* %0, null, !dbg !12670
  br i1 %2, label %29, label %3, !dbg !12672

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12673
  %5 = icmp eq i8 %4, 0, !dbg !12674
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12675
  br i1 %6, label %29, label %8, !dbg !12675

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12668, metadata !DIExpression()), !dbg !12669
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12676

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12668, metadata !DIExpression()), !dbg !12669
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #37, !dbg !12678
  br i1 %10, label %11, label %15, !dbg !12683

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12684
  %13 = load i8*, i8** %12, align 4, !dbg !12684
  %14 = icmp eq i8* %13, %0, !dbg !12685
  br i1 %14, label %29, label %15, !dbg !12686

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12687
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12668, metadata !DIExpression()), !dbg !12669
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12688
  br i1 %17, label %7, label %8, !dbg !12689, !llvm.loop !12690

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12668, metadata !DIExpression()), !dbg !12669
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #37, !dbg !12692
  br i1 %20, label %21, label %26, !dbg !12696

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12697
  %23 = load i8*, i8** %22, align 4, !dbg !12697
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #38, !dbg !12698
  %25 = icmp eq i32 %24, 0, !dbg !12699
  br i1 %25, label %29, label %26, !dbg !12700

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12701
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12668, metadata !DIExpression()), !dbg !12669
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12702
  br i1 %28, label %29, label %18, !dbg !12676, !llvm.loop !12703

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12669
  ret %struct.device* %30, !dbg !12705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #11 !dbg !12706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12710, metadata !DIExpression()), !dbg !12711
  %2 = icmp eq %struct.device* %0, null, !dbg !12712
  br i1 %2, label %14, label %3, !dbg !12714

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12715
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12715
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12716
  %7 = load i8, i8* %6, align 1, !dbg !12716
  %8 = and i8 %7, 1, !dbg !12716
  %9 = icmp eq i8 %8, 0, !dbg !12716
  br i1 %9, label %14, label %10, !dbg !12717

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12718
  %12 = load i8, i8* %11, align 1, !dbg !12718
  %13 = icmp eq i8 %12, 0, !dbg !12719
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12711
  ret i1 %15, !dbg !12720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !12721 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12726, metadata !DIExpression()), !dbg !12727
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12728
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12729
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12730 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12738, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12739, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i8* %2, metadata !12740, metadata !DIExpression()), !dbg !12743
  %5 = bitcast i32* %4 to i8*, !dbg !12744
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #33, !dbg !12744
  call void @llvm.dbg.value(metadata i32 0, metadata !12741, metadata !DIExpression()), !dbg !12743
  store i32 0, i32* %4, align 4, !dbg !12745
  call void @llvm.dbg.value(metadata i32* %4, metadata !12741, metadata !DIExpression(DW_OP_deref)), !dbg !12743
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #37, !dbg !12746
  call void @llvm.dbg.value(metadata i16* %6, metadata !12742, metadata !DIExpression()), !dbg !12743
  %7 = load i32, i32* %4, align 4, !dbg !12747
  call void @llvm.dbg.value(metadata i32 %7, metadata !12741, metadata !DIExpression()), !dbg !12743
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #37, !dbg !12748
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #33, !dbg !12749
  ret i32 %8, !dbg !12750
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #20 !dbg !12751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12755, metadata !DIExpression()), !dbg !12761
  call void @llvm.dbg.value(metadata i32* %1, metadata !12756, metadata !DIExpression()), !dbg !12761
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12762
  %4 = load i16*, i16** %3, align 4, !dbg !12762
  call void @llvm.dbg.value(metadata i16* %4, metadata !12757, metadata !DIExpression()), !dbg !12761
  %5 = icmp eq i16* %4, null, !dbg !12763
  br i1 %5, label %14, label %6, !dbg !12764

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12765
  call void @llvm.dbg.value(metadata i32 %7, metadata !12758, metadata !DIExpression()), !dbg !12765
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12766
  %9 = load i16, i16* %8, align 2, !dbg !12766
  %10 = add i16 %9, -32767, !dbg !12767
  %11 = icmp ult i16 %10, 2, !dbg !12767
  %12 = add i32 %7, 1, !dbg !12768
  call void @llvm.dbg.value(metadata i32 %12, metadata !12758, metadata !DIExpression()), !dbg !12765
  br i1 %11, label %13, label %6, !dbg !12767, !llvm.loop !12770

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12773
  br label %14, !dbg !12774

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12776 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12780, metadata !DIExpression()), !dbg !12791
  call void @llvm.dbg.value(metadata i32 %1, metadata !12781, metadata !DIExpression()), !dbg !12791
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12782, metadata !DIExpression()), !dbg !12791
  call void @llvm.dbg.value(metadata i8* %3, metadata !12783, metadata !DIExpression()), !dbg !12791
  call void @llvm.dbg.value(metadata i32 0, metadata !12784, metadata !DIExpression()), !dbg !12792
  %5 = icmp eq i32 %1, 0, !dbg !12793
  br i1 %5, label %16, label %8, !dbg !12794

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12784, metadata !DIExpression()), !dbg !12792
  %7 = icmp eq i32 %15, %1, !dbg !12793
  br i1 %7, label %16, label %8, !dbg !12794, !llvm.loop !12795

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12784, metadata !DIExpression()), !dbg !12792
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12797
  %11 = load i16, i16* %10, align 2, !dbg !12797
  call void @llvm.dbg.value(metadata i16 %11, metadata !12786, metadata !DIExpression()), !dbg !12798
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #37, !dbg !12799
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12789, metadata !DIExpression()), !dbg !12798
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #38, !dbg !12800
  call void @llvm.dbg.value(metadata i32 %13, metadata !12790, metadata !DIExpression()), !dbg !12798
  %14 = icmp slt i32 %13, 0, !dbg !12801
  %15 = add nuw i32 %9, 1, !dbg !12803
  call void @llvm.dbg.value(metadata i32 %15, metadata !12784, metadata !DIExpression()), !dbg !12792
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #17 !dbg !12805 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12809, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12810, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12811, metadata !DIExpression()), !dbg !12812
  %2 = sext i16 %0 to i32, !dbg !12813
  %3 = icmp slt i16 %0, 1, !dbg !12815
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12816
  %6 = add nsw i32 %2, -1, !dbg !12816
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12816
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12816
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12810, metadata !DIExpression()), !dbg !12812
  ret %struct.device* %8, !dbg !12817
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12818 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12820, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12821, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i8* %2, metadata !12822, metadata !DIExpression()), !dbg !12825
  %5 = bitcast i32* %4 to i8*, !dbg !12826
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #33, !dbg !12826
  call void @llvm.dbg.value(metadata i32 0, metadata !12823, metadata !DIExpression()), !dbg !12825
  store i32 0, i32* %4, align 4, !dbg !12827
  call void @llvm.dbg.value(metadata i32* %4, metadata !12823, metadata !DIExpression(DW_OP_deref)), !dbg !12825
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #37, !dbg !12828
  call void @llvm.dbg.value(metadata i16* %6, metadata !12824, metadata !DIExpression()), !dbg !12825
  %7 = load i32, i32* %4, align 4, !dbg !12829
  call void @llvm.dbg.value(metadata i32 %7, metadata !12823, metadata !DIExpression()), !dbg !12825
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #37, !dbg !12830
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #33, !dbg !12831
  ret i32 %8, !dbg !12832
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #20 !dbg !12833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12835, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32* %1, metadata !12836, metadata !DIExpression()), !dbg !12840
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12841
  %4 = load i16*, i16** %3, align 4, !dbg !12841
  call void @llvm.dbg.value(metadata i16* %4, metadata !12837, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32 0, metadata !12838, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i32 0, metadata !12839, metadata !DIExpression()), !dbg !12840
  %5 = icmp eq i16* %4, null, !dbg !12842
  br i1 %5, label %22, label %6, !dbg !12844

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12838, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata i16* %8, metadata !12837, metadata !DIExpression()), !dbg !12840
  %9 = load i16, i16* %8, align 2, !dbg !12845
  %10 = icmp eq i16 %9, -32768, !dbg !12849
  call void @llvm.dbg.value(metadata i32 undef, metadata !12838, metadata !DIExpression()), !dbg !12840
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12850
  call void @llvm.dbg.value(metadata i16* %11, metadata !12837, metadata !DIExpression()), !dbg !12840
  %12 = zext i1 %10 to i32, !dbg !12851
  %13 = add i32 %7, %12, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %13, metadata !12838, metadata !DIExpression()), !dbg !12840
  %14 = icmp eq i32 %13, 2, !dbg !12852
  br i1 %14, label %15, label %6, !dbg !12853

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12840
  call void @llvm.dbg.value(metadata i32 %16, metadata !12839, metadata !DIExpression()), !dbg !12840
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12854
  %18 = load i16, i16* %17, align 2, !dbg !12854
  %19 = icmp eq i16 %18, 32767, !dbg !12855
  %20 = add i32 %16, 1, !dbg !12856
  call void @llvm.dbg.value(metadata i32 %20, metadata !12839, metadata !DIExpression()), !dbg !12840
  br i1 %19, label %21, label %15, !dbg !12858, !llvm.loop !12859

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12861
  br label %22, !dbg !12862

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12863
  call void @llvm.dbg.value(metadata i16* %23, metadata !12837, metadata !DIExpression()), !dbg !12840
  ret i16* %23, !dbg !12864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #11 !dbg !12865 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12866
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12867
  ret i32* %2, !dbg !12868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #17 !dbg !12869 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13019, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13020, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13021, metadata !DIExpression()), !dbg !13022
  ret void, !dbg !13023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !13024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13028, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %1, metadata !13029, metadata !DIExpression()), !dbg !13030
  ret void, !dbg !13031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !13032 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13036, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i32 %1, metadata !13037, metadata !DIExpression()), !dbg !13038
  ret void, !dbg !13039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #17 !dbg !13040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13044, metadata !DIExpression()), !dbg !13046
  call void @llvm.dbg.value(metadata i8* %1, metadata !13045, metadata !DIExpression()), !dbg !13046
  ret i32 -134, !dbg !13047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #17 !dbg !13048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13052, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.value(metadata i8* %1, metadata !13053, metadata !DIExpression()), !dbg !13054
  ret i32 -134, !dbg !13055
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #14 !dbg !13056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13059, metadata !DIExpression()), !dbg !13060
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !13061, !srcloc !13067
  call void @llvm.dbg.value(metadata i32 undef, metadata !13064, metadata !DIExpression()) #33, !dbg !13068
  call void @llvm.dbg.value(metadata i32 undef, metadata !13065, metadata !DIExpression()) #33, !dbg !13068
  br label %3, !dbg !13069

3:                                                ; preds = %3, %1
  br label %3, !dbg !13070, !llvm.loop !13073
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13080, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13081, metadata !DIExpression()), !dbg !13082
  tail call void @arch_system_halt(i32 noundef %0) #42, !dbg !13083
  unreachable, !dbg !13083
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #14 !dbg !13084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13086, metadata !DIExpression()), !dbg !13087
  tail call void @arch_system_halt(i32 noundef %0) #42, !dbg !13088
  unreachable, !dbg !13088
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13091, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13092, metadata !DIExpression()), !dbg !13095
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !13096, !srcloc !13067
  call void @llvm.dbg.value(metadata i32 undef, metadata !13064, metadata !DIExpression()) #33, !dbg !13098
  call void @llvm.dbg.value(metadata i32 undef, metadata !13065, metadata !DIExpression()) #33, !dbg !13098
  call void @llvm.dbg.value(metadata i32 undef, metadata !13093, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13094, metadata !DIExpression()), !dbg !13095
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13099
  br i1 %4, label %6, label %5, !dbg !13101

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #37, !dbg !13102
  br label %7, !dbg !13103

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #37, !dbg !13102
  br label %7, !dbg !13106

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13096
  call void @llvm.dbg.value(metadata i32 %8, metadata !13064, metadata !DIExpression()) #33, !dbg !13098
  call void @llvm.dbg.value(metadata i32 %8, metadata !13093, metadata !DIExpression()), !dbg !13095
  %9 = tail call fastcc %struct.k_thread* @k_current_get.107() #39, !dbg !13108
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13094, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata i32 undef, metadata !13109, metadata !DIExpression()) #33, !dbg !13112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #33, !dbg !13114, !srcloc !13115
  tail call fastcc void @k_thread_abort.108(%struct.k_thread* noundef %9) #37, !dbg !13116
  ret void, !dbg !13119
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.107() unnamed_addr #15 !dbg !13120 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.109() #39, !dbg !13124
  ret %struct.k_thread* %1, !dbg !13125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.108(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13130, metadata !DIExpression()), !dbg !13131
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !13132, !srcloc !13134
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #38, !dbg !13135
  ret void, !dbg !13136
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.109() unnamed_addr #15 !dbg !13137 {
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !13138, !srcloc !13140
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #38, !dbg !13141
  ret %struct.k_thread* %1, !dbg !13142
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13143 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13147, metadata !DIExpression()), !dbg !13150
  call void @llvm.dbg.value(metadata i32 %1, metadata !13148, metadata !DIExpression()), !dbg !13150
  call void @llvm.dbg.value(metadata i32 %2, metadata !13149, metadata !DIExpression()), !dbg !13150
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #38, !dbg !13151
  ret void, !dbg !13152
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13157, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata i8* %1, metadata !13158, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata i32 %2, metadata !13159, metadata !DIExpression()), !dbg !13160
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #38, !dbg !13161
  ret void, !dbg !13162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13163 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #37, !dbg !13164
  ret void, !dbg !13165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13168, metadata !DIExpression()), !dbg !13169
  tail call fastcc void @init_idle_thread(i32 noundef %0) #37, !dbg !13170
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13171
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13172
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13173
  %4 = trunc i32 %0 to i8, !dbg !13174
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13175
  store i8 %4, i8* %5, align 4, !dbg !13176
  %6 = getelementptr inbounds [1 x [2112 x %struct.k_spinlock]], [1 x [2112 x %struct.k_spinlock]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13177
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.k_spinlock* noundef nonnull %6) #37, !dbg !13178
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13179
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13180
  store i8* %8, i8** %9, align 4, !dbg !13181
  ret void, !dbg !13182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13185, metadata !DIExpression()), !dbg !13191
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13192
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13186, metadata !DIExpression()), !dbg !13191
  %3 = getelementptr inbounds [1 x [384 x %struct.k_spinlock]], [1 x [384 x %struct.k_spinlock]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13187, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.value(metadata i8* null, metadata !13190, metadata !DIExpression()), !dbg !13191
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13194
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13195
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.k_spinlock* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #38, !dbg !13196
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #37, !dbg !13197
  ret void, !dbg !13198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.k_spinlock* noundef readnone %0) unnamed_addr #17 !dbg !13199 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13203, metadata !DIExpression()), !dbg !13204
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 64, i32 0, !dbg !13205
  ret i8* %2, !dbg !13206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #13 !dbg !13207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13212, metadata !DIExpression()), !dbg !13213
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13214
  %3 = load i8, i8* %2, align 1, !dbg !13215
  %4 = and i8 %3, -5, !dbg !13215
  store i8 %4, i8* %2, align 1, !dbg !13215
  ret void, !dbg !13216
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #14 !dbg !13217 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #37, !dbg !13220
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.k_spinlock* noundef getelementptr inbounds ([1 x [2112 x %struct.k_spinlock]], [1 x [2112 x %struct.k_spinlock]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #38, !dbg !13221
  %3 = ptrtoint i8* %2 to i32, !dbg !13230
  %4 = add i32 %3, 2048, !dbg !13231
  call void @llvm.dbg.value(metadata i32 %4, metadata !13225, metadata !DIExpression()) #33, !dbg !13232
  call void @llvm.dbg.value(metadata i32 %4, metadata !13233, metadata !DIExpression()) #33, !dbg !13236
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #33, !dbg !13238, !srcloc !13239
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13240
  %6 = or i32 %5, 512, !dbg !13240
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13240
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -2, i32 noundef 255) #38, !dbg !13241
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -5, i32 noundef 0) #38, !dbg !13244
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -12, i32 noundef 0) #38, !dbg !13245
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -11, i32 noundef 0) #38, !dbg !13246
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -10, i32 noundef 0) #38, !dbg !13247
  tail call fastcc void @__NVIC_SetPriority.116(i32 noundef -4, i32 noundef 0) #38, !dbg !13248
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13249
  %8 = or i32 %7, 458752, !dbg !13249
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13249
  tail call void @z_arm_fault_init() #38, !dbg !13250
  tail call void @z_arm_cpu_idle_init() #38, !dbg !13251
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13252
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13255
  %9 = tail call i32 @z_arm_mpu_init() #38, !dbg !13256
  tail call void @z_arm_configure_static_mpu_regions() #38, !dbg !13257
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13258
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #33, !dbg !13258
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13219, metadata !DIExpression()), !dbg !13259
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #37, !dbg !13260
  call void @z_device_state_init() #38, !dbg !13261
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #37, !dbg !13262
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #37, !dbg !13263
  %11 = call fastcc i8* @prepare_multithreading() #37, !dbg !13264
  call fastcc void @switch_to_main_thread(i8* noundef %11) #42, !dbg !13265
  unreachable, !dbg !13265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2255, metadata !DIExpression()), !dbg !13266
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13267
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13267
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2256, metadata !DIExpression()), !dbg !13266
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2256, metadata !DIExpression()), !dbg !13266
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13268
  br i1 %7, label %8, label %35, !dbg !13269

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2256, metadata !DIExpression()), !dbg !13266
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13270
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13270
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2266, metadata !DIExpression()), !dbg !13271
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13272
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13272
  %14 = tail call i32 %13(%struct.device* noundef %11) #38, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %14, metadata !2270, metadata !DIExpression()), !dbg !13271
  %15 = icmp eq %struct.device* %11, null, !dbg !13274
  br i1 %15, label %32, label %16, !dbg !13276

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13277
  br i1 %17, label %26, label %18, !dbg !13280

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13281
  call void @llvm.dbg.value(metadata i32 %19, metadata !2270, metadata !DIExpression()), !dbg !13271
  %20 = icmp ult i32 %19, 255, !dbg !13283
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %21, metadata !2270, metadata !DIExpression()), !dbg !13271
  %22 = trunc i32 %21 to i8, !dbg !13284
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13285
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13285
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13286
  store i8 %22, i8* %25, align 1, !dbg !13287
  br label %26, !dbg !13288

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13289
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13289
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13290
  %30 = load i8, i8* %29, align 1, !dbg !13291
  %31 = or i8 %30, 1, !dbg !13291
  store i8 %31, i8* %29, align 1, !dbg !13291
  br label %32, !dbg !13292

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13293
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2256, metadata !DIExpression()), !dbg !13266
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13268
  br i1 %34, label %8, label %35, !dbg !13269, !llvm.loop !13294

35:                                               ; preds = %32, %1
  ret void, !dbg !13296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.116(i32 noundef %0, i32 noundef %1) unnamed_addr #21 !dbg !13297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13299, metadata !DIExpression()), !dbg !13301
  call void @llvm.dbg.value(metadata i32 %1, metadata !13300, metadata !DIExpression()), !dbg !13301
  %3 = trunc i32 %1 to i8, !dbg !13302
  %4 = shl i8 %3, 4, !dbg !13302
  %5 = and i32 %0, 15, !dbg !13305
  %6 = add nsw i32 %5, -4, !dbg !13306
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13307
  store volatile i8 %4, i8* %7, align 1, !dbg !13308
  ret void, !dbg !13309
}

; Function Attrs: optsize
declare !dbg !13310 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !13311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13314, metadata !DIExpression()), !dbg !13315
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13316
  store i8 1, i8* %2, align 1, !dbg !13317
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13318
  store i8 1, i8* %3, align 4, !dbg !13319
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13320
  store i32 0, i32* %4, align 4, !dbg !13321
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13322
  store i32 0, i32* %5, align 4, !dbg !13323
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13324
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13325
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13326
  ret void, !dbg !13327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13328 {
  tail call void @z_sched_init() #38, !dbg !13333
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13334
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.k_spinlock* noundef getelementptr inbounds ([1088 x %struct.k_spinlock], [1088 x %struct.k_spinlock]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0)) #38, !dbg !13335
  call void @llvm.dbg.value(metadata i8* %1, metadata !13332, metadata !DIExpression()), !dbg !13336
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #37, !dbg !13337
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #38, !dbg !13338
  tail call void @z_init_cpu(i32 noundef 0) #37, !dbg !13339
  ret i8* %1, !dbg !13340
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #14 !dbg !13341 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13345, metadata !DIExpression()), !dbg !13346
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #38, !dbg !13347
  unreachable, !dbg !13348
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13351, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i8* %1, metadata !13352, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i8* %2, metadata !13353, metadata !DIExpression()), !dbg !13354
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13355
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #37, !dbg !13356
  tail call void @boot_banner() #38, !dbg !13357
  tail call void @z_cpp_init_static() #38, !dbg !13358
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #37, !dbg !13359
  tail call void @z_init_static_threads() #38, !dbg !13360
  %4 = tail call i32 @main() #38, !dbg !13361
  %5 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13362
  %6 = and i8 %5, -2, !dbg !13362
  store i8 %6, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13362
  ret void, !dbg !13363
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #17 !dbg !13364 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13374, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata i8* %1, metadata !13375, metadata !DIExpression()), !dbg !13376
  ret void, !dbg !13377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #17 !dbg !13378 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13380, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i8* %1, metadata !13381, metadata !DIExpression()), !dbg !13382
  ret void, !dbg !13383
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13384 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #33, !dbg !13385, !srcloc !13392
  call void @llvm.dbg.value(metadata i32 %1, metadata !13388, metadata !DIExpression()) #33, !dbg !13393
  %2 = icmp ne i32 %1, 0, !dbg !13394
  ret i1 %2, !dbg !13395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #13 !dbg !13396 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13397
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13398
  %3 = load i8, i8* %2, align 4, !dbg !13399
  %4 = or i8 %3, 1, !dbg !13399
  store i8 %4, i8* %2, align 4, !dbg !13399
  ret void, !dbg !13400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #13 !dbg !13401 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13402
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13403
  %3 = load i8, i8* %2, align 4, !dbg !13404
  %4 = and i8 %3, -2, !dbg !13404
  store i8 %4, i8* %2, align 4, !dbg !13404
  ret void, !dbg !13405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #11 !dbg !13406 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13408
  %3 = load i8, i8* %2, align 4, !dbg !13408
  %4 = and i8 %3, 1, !dbg !13409
  %5 = icmp ne i8 %4, 0, !dbg !13410
  ret i1 %5, !dbg !13411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #17 !dbg !13412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13416, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i8* %1, metadata !13417, metadata !DIExpression()), !dbg !13418
  ret i32 -88, !dbg !13419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #17 !dbg !13420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13424, metadata !DIExpression()), !dbg !13425
  ret i8* null, !dbg !13426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #17 !dbg !13427 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13431, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata i8* %1, metadata !13432, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata i32 %2, metadata !13433, metadata !DIExpression()), !dbg !13434
  ret i32 -88, !dbg !13435
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2395, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i8* %1, metadata !2396, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i32 %2, metadata !2397, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i32 0, metadata !2398, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i8 undef, metadata !2400, metadata !DIExpression()), !dbg !13436
  %4 = icmp eq i8* %1, null, !dbg !13437
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13439
  br i1 %6, label %46, label %7, !dbg !13439

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13440
  %9 = load i8, i8* %8, align 1, !dbg !13440
  call void @llvm.dbg.value(metadata i8 %9, metadata !2400, metadata !DIExpression()), !dbg !13436
  %10 = add i32 %2, -1, !dbg !13441
  call void @llvm.dbg.value(metadata i32 %10, metadata !2397, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i8 0, metadata !2401, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i8 %9, metadata !2400, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i32 0, metadata !2398, metadata !DIExpression()), !dbg !13436
  %11 = icmp eq i8 %9, 0, !dbg !13443
  br i1 %11, label %12, label %15, !dbg !13445

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13446
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13447
  store i8 0, i8* %14, align 1, !dbg !13448
  br label %46, !dbg !13449

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2401, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i8 %17, metadata !2400, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i32 %18, metadata !2398, metadata !DIExpression()), !dbg !13436
  %19 = zext i8 %17 to i32, !dbg !13450
  %20 = zext i8 %16 to i32, !dbg !13451
  %21 = shl nuw i32 1, %20, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %21, metadata !2399, metadata !DIExpression()), !dbg !13436
  %22 = and i32 %21, %19, !dbg !13453
  %23 = icmp eq i32 %22, 0, !dbg !13455
  br i1 %23, label %42, label %24, !dbg !13456

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13457
  %26 = sub i32 %10, %18, !dbg !13458
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13459
  %28 = load i8*, i8** %27, align 4, !dbg !13459
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13460
  %30 = load i32, i32* %29, align 4, !dbg !13460
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #37, !dbg !13461
  %32 = add i32 %31, %18, !dbg !13462
  call void @llvm.dbg.value(metadata i32 %32, metadata !2398, metadata !DIExpression()), !dbg !13436
  %33 = trunc i32 %21 to i8, !dbg !13463
  %34 = xor i8 %33, -1, !dbg !13463
  %35 = and i8 %17, %34, !dbg !13463
  call void @llvm.dbg.value(metadata i8 %35, metadata !2400, metadata !DIExpression()), !dbg !13436
  %36 = icmp eq i8 %35, 0, !dbg !13464
  br i1 %36, label %12, label %37, !dbg !13466

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13467
  %39 = sub i32 %10, %32, !dbg !13469
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #37, !dbg !13470
  %41 = add i32 %40, %32, !dbg !13471
  call void @llvm.dbg.value(metadata i32 %41, metadata !2398, metadata !DIExpression()), !dbg !13436
  br label %42, !dbg !13472

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13436
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13436
  call void @llvm.dbg.value(metadata i8 %44, metadata !2400, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.value(metadata i32 %43, metadata !2398, metadata !DIExpression()), !dbg !13436
  %45 = add i8 %16, 1, !dbg !13473
  call void @llvm.dbg.value(metadata i8 %45, metadata !2401, metadata !DIExpression()), !dbg !13442
  br label %15, !dbg !13445

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.118, i32 0, i32 0), %3 ], !dbg !13436
  ret i8* %47, !dbg !13474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13475 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13479, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata i32 %1, metadata !13480, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata i8* %2, metadata !13481, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata i32 %3, metadata !13482, metadata !DIExpression()), !dbg !13484
  %5 = icmp ult i32 %1, %3, !dbg !13485
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13485
  call void @llvm.dbg.value(metadata i32 %6, metadata !13483, metadata !DIExpression()), !dbg !13484
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #38, !dbg !13486
  ret i32 %6, !dbg !13487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13492, metadata !DIExpression()), !dbg !13493
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #38, !dbg !13494
  ret void, !dbg !13495
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.k_spinlock* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13505, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13506, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 %2, metadata !13507, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13508, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i8* %4, metadata !13509, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i8* %5, metadata !13510, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i8* %6, metadata !13511, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 %7, metadata !13512, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 %8, metadata !13513, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i8* undef, metadata !13514, metadata !DIExpression()), !dbg !13516
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13517
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #37, !dbg !13518
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13519
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #37, !dbg !13520
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.k_spinlock* noundef %1, i32 noundef %2) #37, !dbg !13521
  call void @llvm.dbg.value(metadata i8* %13, metadata !13515, metadata !DIExpression()), !dbg !13516
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.k_spinlock* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #38, !dbg !13522
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13523
  store i8* null, i8** %14, align 4, !dbg !13524
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13525
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13525
  br i1 %16, label %20, label %17, !dbg !13527

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13528
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13528
  br label %20, !dbg !13529

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13516
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13530
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13532
  ret i8* %13, !dbg !13533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #10 !dbg !13534 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13539, metadata !DIExpression()), !dbg !13540
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13541
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #37, !dbg !13542
  ret void, !dbg !13543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #10 !dbg !13544 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13549, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i32 %1, metadata !13550, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i32 %2, metadata !13551, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i32 %3, metadata !13552, metadata !DIExpression()), !dbg !13553
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13554
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13555
  %6 = trunc i32 %3 to i8, !dbg !13556
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13557
  store i8 %6, i8* %7, align 4, !dbg !13558
  %8 = trunc i32 %2 to i8, !dbg !13559
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13560
  store i8 %8, i8* %9, align 1, !dbg !13561
  %10 = trunc i32 %1 to i8, !dbg !13562
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13563
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13563
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13563
  store i8 %10, i8* %13, align 2, !dbg !13564
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13565
  store i8 0, i8* %14, align 1, !dbg !13566
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #37, !dbg !13567
  ret void, !dbg !13568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.k_spinlock* noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !13569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13573, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13574, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i32 %2, metadata !13575, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i32 0, metadata !13580, metadata !DIExpression()), !dbg !13581
  %4 = add i32 %2, 7, !dbg !13582
  %5 = and i32 %4, -8, !dbg !13582
  %6 = add i32 %5, 64, !dbg !13582
  call void @llvm.dbg.value(metadata i32 %6, metadata !13576, metadata !DIExpression()), !dbg !13581
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.128(%struct.k_spinlock* noundef %1) #37, !dbg !13584
  call void @llvm.dbg.value(metadata i8* %7, metadata !13579, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i32 %5, metadata !13577, metadata !DIExpression()), !dbg !13581
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 %6, i32 0, !dbg !13585
  call void @llvm.dbg.value(metadata i8* %8, metadata !13578, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i32 0, metadata !13580, metadata !DIExpression()), !dbg !13581
  %9 = ptrtoint i8* %7 to i32, !dbg !13586
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13587
  store i32 %9, i32* %10, align 4, !dbg !13588
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13589
  store i32 %5, i32* %11, align 4, !dbg !13590
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13591
  store i32 0, i32* %12, align 4, !dbg !13592
  call void @llvm.dbg.value(metadata i8* %8, metadata !13578, metadata !DIExpression()), !dbg !13581
  ret i8* %8, !dbg !13593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.128(%struct.k_spinlock* noundef readnone %0) unnamed_addr #17 !dbg !13594 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13598, metadata !DIExpression()), !dbg !13599
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 64, i32 0, !dbg !13600
  ret i8* %2, !dbg !13601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !13602 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13607, metadata !DIExpression()), !dbg !13608
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13609
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #37, !dbg !13610
  ret void, !dbg !13611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !13612 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13614, metadata !DIExpression()), !dbg !13615
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13616
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #37, !dbg !13617
  ret void, !dbg !13618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !13619 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13623, metadata !DIExpression()), !dbg !13624
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13625
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13626
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13627
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13628
  ret void, !dbg !13629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !13630 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13635, metadata !DIExpression()), !dbg !13636
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13637
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13638
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13639
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13640
  ret void, !dbg !13641
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.k_spinlock* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13642 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13659, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13650, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13651, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i32 %2, metadata !13652, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13653, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i8* %4, metadata !13654, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i8* %5, metadata !13655, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i8* %6, metadata !13656, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i32 %7, metadata !13657, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i32 %8, metadata !13658, metadata !DIExpression()), !dbg !13660
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.k_spinlock* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #37, !dbg !13661
  %13 = icmp eq i64 %11, -1, !dbg !13662
  br i1 %13, label %15, label %14, !dbg !13664

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #37, !dbg !13665
  br label %15, !dbg !13667

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13669 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13674, metadata !DIExpression()), !dbg !13675
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13673, metadata !DIExpression()), !dbg !13675
  %4 = icmp eq i64 %3, 0, !dbg !13676
  br i1 %4, label %5, label %6, !dbg !13678

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #37, !dbg !13679
  br label %7, !dbg !13681

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #37, !dbg !13682
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13685 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13689, metadata !DIExpression()), !dbg !13690
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !13691, !srcloc !13693
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #37, !dbg !13694
  ret void, !dbg !13695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13696 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13699, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13698, metadata !DIExpression()), !dbg !13700
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13701
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #38, !dbg !13702
  ret void, !dbg !13703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13704 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13706, metadata !DIExpression()), !dbg !13725
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13726

1:                                                ; preds = %2
  tail call void @k_sched_lock() #38, !dbg !13727
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13723, metadata !DIExpression()), !dbg !13728
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13729

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13706, metadata !DIExpression()), !dbg !13725
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13730
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13730
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13733
  %7 = load %struct.k_spinlock*, %struct.k_spinlock** %6, align 4, !dbg !13733
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13734
  %9 = load i32, i32* %8, align 4, !dbg !13734
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13735
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13735
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13736
  %13 = load i8*, i8** %12, align 4, !dbg !13736
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13737
  %15 = load i8*, i8** %14, align 4, !dbg !13737
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13738
  %17 = load i8*, i8** %16, align 4, !dbg !13738
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13739
  %19 = load i32, i32* %18, align 4, !dbg !13739
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13740
  %21 = load i32, i32* %20, align 4, !dbg !13740
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.k_spinlock* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #37, !dbg !13741
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13742
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13743
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13744
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13744
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13745
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13706, metadata !DIExpression()), !dbg !13725
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13746
  br i1 %27, label %2, label %1, !dbg !13726, !llvm.loop !13748

28:                                               ; preds = %0
  tail call void @k_sched_lock() #38, !dbg !13727
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13723, metadata !DIExpression()), !dbg !13728
  br label %29, !dbg !13729

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #38, !dbg !13750
  ret void, !dbg !13751

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13723, metadata !DIExpression()), !dbg !13728
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13752
  %33 = load i32, i32* %32, align 4, !dbg !13752
  %34 = icmp eq i32 %33, -1, !dbg !13756
  br i1 %34, label %43, label %35, !dbg !13757

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13758
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13758
  %38 = icmp sgt i32 %33, 0, !dbg !13760
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13760
  %40 = zext i32 %39 to i64, !dbg !13760
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #37, !dbg !13760
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13761
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #37, !dbg !13761
  br label %43, !dbg !13762

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13763
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13723, metadata !DIExpression()), !dbg !13728
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13764
  br i1 %45, label %30, label %29, !dbg !13729, !llvm.loop !13766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #17 !dbg !13768 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13770, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.value(metadata i64 %0, metadata !13772, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i32 1000, metadata !13777, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i32 10000, metadata !13778, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i8 1, metadata !13779, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i8 0, metadata !13780, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i8 1, metadata !13781, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i8 0, metadata !13782, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i8 1, metadata !13783, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i8 0, metadata !13784, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i64 0, metadata !13785, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata i64 0, metadata !13785, metadata !DIExpression()), !dbg !13789
  %2 = mul i64 %0, 10, !dbg !13791
  ret i64 %2, !dbg !13797
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #14 !dbg !13798 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13800, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %1, metadata !13801, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %2, metadata !13802, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %3, metadata !13803, metadata !DIExpression()), !dbg !13804
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13805
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13806
  %7 = load i8, i8* %6, align 4, !dbg !13807
  %8 = or i8 %7, 4, !dbg !13807
  store i8 %8, i8* %6, align 4, !dbg !13807
  tail call void @z_thread_essential_clear() #37, !dbg !13808
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #40, !dbg !13809
  unreachable, !dbg !13809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #17 !dbg !13810 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13814, metadata !DIExpression()), !dbg !13815
  ret i32 -134, !dbg !13816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #17 !dbg !13817 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13821, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.value(metadata i32 %1, metadata !13822, metadata !DIExpression()), !dbg !13823
  ret i32 -134, !dbg !13824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #17 !dbg !13825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13832, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13833, metadata !DIExpression()), !dbg !13834
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13835
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13837
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13834
  ret i32 %6, !dbg !13838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #17 !dbg !13839 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13843, metadata !DIExpression()), !dbg !13844
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13845
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13844
  ret i32 %3, !dbg !13847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13848 {
  tail call void @sys_clock_idle_exit() #38, !dbg !13850
  ret void, !dbg !13851
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #14 !dbg !13852 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13854, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i8* %1, metadata !13855, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i8* %2, metadata !13856, metadata !DIExpression()), !dbg !13857
  br label %4, !dbg !13858

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !13859, !srcloc !13866
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #33, !dbg !13867
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()) #33, !dbg !13867
  tail call fastcc void @k_cpu_idle() #37, !dbg !13868
  br label %4, !dbg !13858, !llvm.loop !13869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13871 {
  tail call void @arch_cpu_idle() #38, !dbg !13872
  ret void, !dbg !13873
}

; Function Attrs: optsize
declare !dbg !13874 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #10 !dbg !13875 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13886, metadata !DIExpression()), !dbg !13887
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13888
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13889
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13890
  store i32 0, i32* %3, align 4, !dbg !13891
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13892
  tail call fastcc void @z_waitq_init.137(%union.anon* noundef %4) #37, !dbg !13893
  ret i32 0, !dbg !13894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.137(%union.anon* noundef %0) unnamed_addr #10 !dbg !13895 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13899, metadata !DIExpression()), !dbg !13900
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13901
  tail call fastcc void @sys_dlist_init.138(%struct._dnode* noundef %2) #37, !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.138(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !13904 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13909, metadata !DIExpression()), !dbg !13910
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13911
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13912
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13913
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13914
  ret void, !dbg !13915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13916 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13925, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13924, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i8 0, metadata !13932, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13938, metadata !DIExpression()) #33, !dbg !13945
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !13947, !srcloc !13953
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13947
  call void @llvm.dbg.value(metadata i32 %5, metadata !13950, metadata !DIExpression()) #33, !dbg !13954
  call void @llvm.dbg.value(metadata i32 undef, metadata !13951, metadata !DIExpression()) #33, !dbg !13954
  call void @llvm.dbg.value(metadata i32 %5, metadata !13944, metadata !DIExpression()) #33, !dbg !13945
  call void @llvm.dbg.value(metadata i32 %5, metadata !13927, metadata !DIExpression()), !dbg !13937
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13955
  %7 = load i32, i32* %6, align 4, !dbg !13955
  %8 = icmp eq i32 %7, 0, !dbg !13955
  br i1 %8, label %14, label %9, !dbg !13955

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13955
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !13955
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13955
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13955
  br i1 %13, label %20, label %29, !dbg !13957, !prof !13958

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13959
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !13961
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !13961
  %18 = load i8, i8* %17, align 2, !dbg !13961
  %19 = sext i8 %18 to i32, !dbg !13959
  br label %23, !dbg !13962

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13963
  %22 = load i32, i32* %21, align 4, !dbg !13963
  br label %23, !dbg !13962

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !13964
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !13962
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13965
  store i32 %25, i32* %26, align 4, !dbg !13966
  %27 = add i32 %7, 1, !dbg !13967
  store i32 %27, i32* %6, align 4, !dbg !13967
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13968
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %5, metadata !13970, metadata !DIExpression()) #33, !dbg !13976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13975, metadata !DIExpression()) #33, !dbg !13976
  call void @llvm.dbg.value(metadata i32 %5, metadata !13978, metadata !DIExpression()) #33, !dbg !13981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #33, !dbg !13983, !srcloc !13984
  br label %78, !dbg !13985

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !13986
  br i1 %30, label %31, label %32, !dbg !13988, !prof !13989

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !13970, metadata !DIExpression()) #33, !dbg !13990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13975, metadata !DIExpression()) #33, !dbg !13990
  call void @llvm.dbg.value(metadata i32 %5, metadata !13978, metadata !DIExpression()) #33, !dbg !13993
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #33, !dbg !13995, !srcloc !13984
  br label %78, !dbg !13996

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !13997
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !13997
  %35 = load i8, i8* %34, align 2, !dbg !13997
  %36 = sext i8 %35 to i32, !dbg !13998
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !13999
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !13999
  %39 = load i8, i8* %38, align 2, !dbg !13999
  %40 = sext i8 %39 to i32, !dbg !14000
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #37, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %41, metadata !13926, metadata !DIExpression()), !dbg !13937
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #37, !dbg !14002
  br i1 %42, label %43, label %45, !dbg !14004

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #37, !dbg !14005
  call void @llvm.dbg.value(metadata i1 %44, metadata !13932, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13937
  br label %45, !dbg !14007

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13932, metadata !DIExpression()), !dbg !13937
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14008
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14009
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %union.anon* noundef %47, [1 x i64] %1) #38, !dbg !14009
  call void @llvm.dbg.value(metadata i32 %49, metadata !13933, metadata !DIExpression()), !dbg !13937
  %50 = icmp eq i32 %49, 0, !dbg !14010
  br i1 %50, label %78, label %51, !dbg !14012

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13938, metadata !DIExpression()) #33, !dbg !14013
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14015, !srcloc !13953
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !14015
  call void @llvm.dbg.value(metadata i32 %53, metadata !13950, metadata !DIExpression()) #33, !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !13951, metadata !DIExpression()) #33, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %53, metadata !13944, metadata !DIExpression()) #33, !dbg !14013
  call void @llvm.dbg.value(metadata i32 %53, metadata !13927, metadata !DIExpression()), !dbg !13937
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !14018
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !14018
  br i1 %55, label %74, label %56, !dbg !14019, !prof !13989

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef nonnull %47) #37, !dbg !14020
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !13934, metadata !DIExpression()), !dbg !14021
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !14022
  br i1 %58, label %67, label %59, !dbg !14023

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !14024
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !14024
  %62 = load i8, i8* %61, align 2, !dbg !14024
  %63 = sext i8 %62 to i32, !dbg !14025
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14026
  %65 = load i32, i32* %64, align 4, !dbg !14026
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #37, !dbg !14027
  br label %70, !dbg !14023

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14028
  %69 = load i32, i32* %68, align 4, !dbg !14028
  br label %70, !dbg !14023

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !14023
  call void @llvm.dbg.value(metadata i32 %71, metadata !13926, metadata !DIExpression()), !dbg !13937
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #37, !dbg !14029
  %73 = select i1 %72, i1 true, i1 %46, !dbg !14030
  call void @llvm.dbg.value(metadata i1 %73, metadata !13932, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13937
  call void @llvm.dbg.value(metadata i8 poison, metadata !13932, metadata !DIExpression()), !dbg !13937
  br i1 %73, label %75, label %77, !dbg !14031

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !13932, metadata !DIExpression()), !dbg !13937
  br i1 %46, label %75, label %77, !dbg !14031

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !14032
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #38, !dbg !14032
  br label %78, !dbg !14035

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !13970, metadata !DIExpression()) #33, !dbg !14036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13975, metadata !DIExpression()) #33, !dbg !14036
  call void @llvm.dbg.value(metadata i32 %53, metadata !13978, metadata !DIExpression()) #33, !dbg !14039
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #33, !dbg !14041, !srcloc !13984
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !13937
  ret i32 %79, !dbg !14042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14047, metadata !DIExpression()), !dbg !14050
  call void @llvm.dbg.value(metadata i32 %1, metadata !14048, metadata !DIExpression()), !dbg !14050
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #37, !dbg !14051
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !14051
  call void @llvm.dbg.value(metadata i32 %4, metadata !14049, metadata !DIExpression()), !dbg !14050
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #37, !dbg !14052
  call void @llvm.dbg.value(metadata i32 %5, metadata !14049, metadata !DIExpression()), !dbg !14050
  ret i32 %5, !dbg !14053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14058, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata i32 %1, metadata !14059, metadata !DIExpression()), !dbg !14060
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #37, !dbg !14061
  ret i1 %3, !dbg !14062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !14063 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14067, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %1, metadata !14068, metadata !DIExpression()), !dbg !14069
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14070
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !14070
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14072
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14072
  %7 = load i8, i8* %6, align 2, !dbg !14072
  %8 = sext i8 %7 to i32, !dbg !14073
  %9 = icmp eq i32 %8, %1, !dbg !14074
  br i1 %9, label %12, label %10, !dbg !14075

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #38, !dbg !14076
  br label %12, !dbg !14078

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !14069
  ret i1 %13, !dbg !14079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #11 !dbg !14080 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14084, metadata !DIExpression()), !dbg !14085
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14086
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #37, !dbg !14087
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14088
  ret %struct.k_thread* %4, !dbg !14089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !14090 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14094, metadata !DIExpression()), !dbg !14095
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #37, !dbg !14096
  br i1 %2, label %6, label %3, !dbg !14096

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14097
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14097
  br label %6, !dbg !14096

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14096
  ret %struct._dnode* %7, !dbg !14098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #11 !dbg !14099 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14103, metadata !DIExpression()), !dbg !14104
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14105
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14105
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14106
  ret i1 %4, !dbg !14107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14110, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i32 %1, metadata !14111, metadata !DIExpression()), !dbg !14112
  %3 = icmp slt i32 %0, %1, !dbg !14113
  ret i1 %3, !dbg !14114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #17 !dbg !14115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14117, metadata !DIExpression()), !dbg !14118
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #37, !dbg !14119
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14119
  ret i32 %3, !dbg !14120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #17 !dbg !14121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14125, metadata !DIExpression()), !dbg !14126
  %2 = icmp sgt i32 %0, -128, !dbg !14127
  ret i1 %2, !dbg !14128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14129 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14131, metadata !DIExpression()), !dbg !14135
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14136
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !14136
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14136
  br i1 %4, label %31, label %5, !dbg !14138

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14139
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !14139
  br i1 %7, label %8, label %31, !dbg !14141

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14142
  %10 = load i32, i32* %9, align 4, !dbg !14142
  %11 = icmp ugt i32 %10, 1, !dbg !14144
  br i1 %11, label %12, label %14, !dbg !14145

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !14146
  store i32 %13, i32* %9, align 4, !dbg !14146
  br label %31, !dbg !14148

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13938, metadata !DIExpression()) #33, !dbg !14149
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14151, !srcloc !13953
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14151
  call void @llvm.dbg.value(metadata i32 %16, metadata !13950, metadata !DIExpression()) #33, !dbg !14153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13951, metadata !DIExpression()) #33, !dbg !14153
  call void @llvm.dbg.value(metadata i32 %16, metadata !13944, metadata !DIExpression()) #33, !dbg !14149
  call void @llvm.dbg.value(metadata i32 %16, metadata !14133, metadata !DIExpression()), !dbg !14135
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14154
  %18 = load i32, i32* %17, align 4, !dbg !14154
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #37, !dbg !14155
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14156
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %20) #38, !dbg !14157
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !14132, metadata !DIExpression()), !dbg !14135
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !14158
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !14159
  br i1 %22, label %30, label %23, !dbg !14161

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !14162
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !14162
  %26 = load i8, i8* %25, align 2, !dbg !14162
  %27 = sext i8 %26 to i32, !dbg !14164
  store i32 %27, i32* %17, align 4, !dbg !14165
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !14166, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 0, metadata !14171, metadata !DIExpression()), !dbg !14172
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !14174
  store i32 0, i32* %28, align 4, !dbg !14175
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #38, !dbg !14176
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14177
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #38, !dbg !14177
  br label %31, !dbg !14178

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !14179
  call void @llvm.dbg.value(metadata i32 %16, metadata !13970, metadata !DIExpression()) #33, !dbg !14181
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13975, metadata !DIExpression()) #33, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %16, metadata !13978, metadata !DIExpression()) #33, !dbg !14183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #33, !dbg !14185, !srcloc !13984
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !14135
  ret i32 %32, !dbg !14186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !14187 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14202, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.value(metadata i32 %1, metadata !14203, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.value(metadata i32 %2, metadata !14204, metadata !DIExpression()), !dbg !14205
  %4 = icmp eq i32 %2, 0, !dbg !14206
  %5 = icmp ugt i32 %1, %2, !dbg !14206
  %6 = or i1 %4, %5, !dbg !14206
  br i1 %6, label %11, label %7, !dbg !14206

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14208
  store i32 %1, i32* %8, align 4, !dbg !14209
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14210
  store i32 %2, i32* %9, align 4, !dbg !14211
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14212
  tail call fastcc void @z_waitq_init.145(%union.anon* noundef %10) #37, !dbg !14213
  br label %11, !dbg !14214

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14205
  ret i32 %12, !dbg !14215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.145(%union.anon* noundef %0) unnamed_addr #10 !dbg !14216 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14221, metadata !DIExpression()), !dbg !14222
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14223
  tail call fastcc void @sys_dlist_init.146(%struct._dnode* noundef %2) #37, !dbg !14224
  ret void, !dbg !14225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.146(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14226 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14231, metadata !DIExpression()), !dbg !14232
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14233
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14234
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14235
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14236
  ret void, !dbg !14237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14238 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14242, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14329, metadata !DIExpression()) #33, !dbg !14336
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14338, !srcloc !14344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14341, metadata !DIExpression()) #33, !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !14342, metadata !DIExpression()) #33, !dbg !14345
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #33, !dbg !14336
  call void @llvm.dbg.value(metadata i32 undef, metadata !14243, metadata !DIExpression()), !dbg !14328
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14346
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #38, !dbg !14347
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14248, metadata !DIExpression()), !dbg !14328
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14348
  br i1 %5, label %8, label %6, !dbg !14350

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14351, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.value(metadata i32 0, metadata !14356, metadata !DIExpression()), !dbg !14357
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14360
  store i32 0, i32* %7, align 4, !dbg !14361
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #38, !dbg !14362
  br label %16, !dbg !14363

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14364
  %10 = load i32, i32* %9, align 4, !dbg !14364
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14366
  %12 = load i32, i32* %11, align 4, !dbg !14366
  %13 = icmp ne i32 %10, %12, !dbg !14367
  %14 = zext i1 %13 to i32, !dbg !14368
  %15 = add i32 %10, %14, !dbg !14369
  store i32 %15, i32* %9, align 4, !dbg !14369
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14338
  call void @llvm.dbg.value(metadata i32 %17, metadata !14341, metadata !DIExpression()) #33, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %17, metadata !14335, metadata !DIExpression()) #33, !dbg !14336
  call void @llvm.dbg.value(metadata i32 %17, metadata !14243, metadata !DIExpression()), !dbg !14328
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14370
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.149, [1 x i32] %18) #38, !dbg !14370
  ret void, !dbg !14371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14372 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14381, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14380, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata i32 0, metadata !14382, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14329, metadata !DIExpression()) #33, !dbg !14386
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14388, !srcloc !14344
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14388
  call void @llvm.dbg.value(metadata i32 %4, metadata !14341, metadata !DIExpression()) #33, !dbg !14390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14342, metadata !DIExpression()) #33, !dbg !14390
  call void @llvm.dbg.value(metadata i32 %4, metadata !14335, metadata !DIExpression()) #33, !dbg !14386
  call void @llvm.dbg.value(metadata i32 %4, metadata !14383, metadata !DIExpression()), !dbg !14385
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14391
  %6 = load i32, i32* %5, align 4, !dbg !14391
  %7 = icmp eq i32 %6, 0, !dbg !14391
  br i1 %7, label %10, label %8, !dbg !14393, !prof !13989

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14394
  store i32 %9, i32* %5, align 4, !dbg !14394
  call void @llvm.dbg.value(metadata i32 %4, metadata !14396, metadata !DIExpression()) #33, !dbg !14402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14401, metadata !DIExpression()) #33, !dbg !14402
  call void @llvm.dbg.value(metadata i32 %4, metadata !14404, metadata !DIExpression()) #33, !dbg !14407
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #33, !dbg !14409, !srcloc !14410
  call void @llvm.dbg.value(metadata i32 0, metadata !14382, metadata !DIExpression()), !dbg !14385
  br label %18, !dbg !14411

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14381, metadata !DIExpression()), !dbg !14385
  %12 = icmp eq i64 %11, 0, !dbg !14412
  br i1 %12, label %13, label %14, !dbg !14414

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14396, metadata !DIExpression()) #33, !dbg !14415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14401, metadata !DIExpression()) #33, !dbg !14415
  call void @llvm.dbg.value(metadata i32 %4, metadata !14404, metadata !DIExpression()) #33, !dbg !14418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #33, !dbg !14420, !srcloc !14410
  call void @llvm.dbg.value(metadata i32 -16, metadata !14382, metadata !DIExpression()), !dbg !14385
  br label %18, !dbg !14421

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14422
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14423
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.149, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #38, !dbg !14423
  call void @llvm.dbg.value(metadata i32 %17, metadata !14382, metadata !DIExpression()), !dbg !14385
  br label %18, !dbg !14424

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14385
  call void @llvm.dbg.value(metadata i32 %19, metadata !14382, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.label(metadata !14384), !dbg !14425
  ret i32 %19, !dbg !14426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14427 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14429, metadata !DIExpression()), !dbg !14432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14329, metadata !DIExpression()) #33, !dbg !14433
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14435, !srcloc !14344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14341, metadata !DIExpression()) #33, !dbg !14437
  call void @llvm.dbg.value(metadata i32 undef, metadata !14342, metadata !DIExpression()) #33, !dbg !14437
  call void @llvm.dbg.value(metadata i32 undef, metadata !14335, metadata !DIExpression()) #33, !dbg !14433
  call void @llvm.dbg.value(metadata i32 undef, metadata !14431, metadata !DIExpression()), !dbg !14432
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #38, !dbg !14438
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14430, metadata !DIExpression()), !dbg !14432
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14440
  br i1 %5, label %11, label %6, !dbg !14442

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14351, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 -11, metadata !14356, metadata !DIExpression()), !dbg !14443
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14445
  store i32 -11, i32* %8, align 4, !dbg !14446
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #38, !dbg !14447
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #38, !dbg !14438
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14430, metadata !DIExpression()), !dbg !14432
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14440
  br i1 %10, label %11, label %6, !dbg !14442, !llvm.loop !14448

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14435
  call void @llvm.dbg.value(metadata i32 %12, metadata !14341, metadata !DIExpression()) #33, !dbg !14437
  call void @llvm.dbg.value(metadata i32 %12, metadata !14335, metadata !DIExpression()) #33, !dbg !14433
  call void @llvm.dbg.value(metadata i32 %12, metadata !14431, metadata !DIExpression()), !dbg !14432
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14451
  store i32 0, i32* %13, align 4, !dbg !14452
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14453
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.149, [1 x i32] %14) #38, !dbg !14453
  ret void, !dbg !14454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !14455 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14459, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14460, metadata !DIExpression()), !dbg !14463
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14464
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14464
  %5 = load i8, i8* %4, align 2, !dbg !14464
  call void @llvm.dbg.value(metadata i8 %5, metadata !14461, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14463
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14465
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14465
  %8 = load i8, i8* %7, align 2, !dbg !14465
  call void @llvm.dbg.value(metadata i8 %8, metadata !14462, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14463
  %9 = icmp eq i8 %8, %5, !dbg !14466
  %10 = sext i8 %5 to i32, !dbg !14468
  %11 = sext i8 %8 to i32, !dbg !14468
  %12 = sub nsw i32 %11, %10, !dbg !14468
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14468
  ret i32 %13, !dbg !14469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14474, metadata !DIExpression()), !dbg !14475
  %2 = tail call fastcc i32 @slice_time() #37, !dbg !14476
  %3 = icmp eq i32 %2, 0, !dbg !14478
  br i1 %3, label %8, label %4, !dbg !14479

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #38, !dbg !14480
  %6 = add i32 %5, %2, !dbg !14482
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14483
  %7 = tail call fastcc i32 @slice_time() #37, !dbg !14484
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #38, !dbg !14485
  br label %8, !dbg !14486

8:                                                ; preds = %4, %1
  ret void, !dbg !14487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #11 !dbg !14488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14492, metadata !DIExpression()), !dbg !14494
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14495
  call void @llvm.dbg.value(metadata i32 %1, metadata !14493, metadata !DIExpression()), !dbg !14494
  ret i32 %1, !dbg !14496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14501, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32 %1, metadata !14502, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32 0, metadata !14503, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !14519
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14521, !srcloc !14527
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %4, metadata !14524, metadata !DIExpression()) #33, !dbg !14528
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !14528
  call void @llvm.dbg.value(metadata i32 %4, metadata !14518, metadata !DIExpression()) #33, !dbg !14519
  call void @llvm.dbg.value(metadata i32 %4, metadata !14509, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14503, metadata !DIExpression()), !dbg !14511
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14529
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #37, !dbg !14532
  %6 = icmp sgt i32 %0, 0, !dbg !14533
  %7 = icmp sgt i32 %5, 2, !dbg !14535
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14535
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14535
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14536
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14537
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #37, !dbg !14538
  call void @llvm.dbg.value(metadata i32 %4, metadata !14539, metadata !DIExpression()) #33, !dbg !14545
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !14545
  call void @llvm.dbg.value(metadata i32 %4, metadata !14547, metadata !DIExpression()) #33, !dbg !14550
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #33, !dbg !14552, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !14503, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14503, metadata !DIExpression()), !dbg !14511
  ret void, !dbg !14554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #17 !dbg !14555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14557, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i32 %0, metadata !14559, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14574
  call void @llvm.dbg.value(metadata i32 1000, metadata !14562, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i32 10000, metadata !14563, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i8 1, metadata !14564, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i1 true, metadata !14565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14574
  call void @llvm.dbg.value(metadata i1 true, metadata !14566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14574
  call void @llvm.dbg.value(metadata i8 0, metadata !14567, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i1 true, metadata !14568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14574
  call void @llvm.dbg.value(metadata i1 false, metadata !14569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14574
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !14574
  %2 = mul i32 %0, 10, !dbg !14576
  ret i32 %2, !dbg !14582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14585, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !14588
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14590, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14590
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !14592
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !14588
  call void @llvm.dbg.value(metadata i32 %3, metadata !14586, metadata !DIExpression()), !dbg !14587
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14593
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14595
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14596
  br i1 %6, label %7, label %8, !dbg !14597

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #37, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !14600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !14602
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !14604, !srcloc !14553
  br label %24, !dbg !14605

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14606
  %9 = tail call fastcc i32 @slice_time() #37, !dbg !14607
  %10 = icmp eq i32 %9, 0, !dbg !14607
  br i1 %10, label %21, label %11, !dbg !14609

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #37, !dbg !14610
  br i1 %12, label %13, label %21, !dbg !14611

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14612
  %15 = icmp sgt i32 %14, %0, !dbg !14615
  br i1 %15, label %19, label %16, !dbg !14616

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14617
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #37, !dbg !14617
  call void @llvm.dbg.value(metadata i32 %18, metadata !14586, metadata !DIExpression()), !dbg !14587
  br label %22, !dbg !14619

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14620
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14620
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14622
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14587
  call void @llvm.dbg.value(metadata i32 %23, metadata !14586, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.value(metadata i32 %23, metadata !14539, metadata !DIExpression()) #33, !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !14624
  call void @llvm.dbg.value(metadata i32 %23, metadata !14547, metadata !DIExpression()) #33, !dbg !14626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #33, !dbg !14628, !srcloc !14553
  br label %24, !dbg !14629

24:                                               ; preds = %22, %7
  ret void, !dbg !14629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #11 !dbg !14630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14634, metadata !DIExpression()), !dbg !14636
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #37, !dbg !14637
  %3 = icmp eq i32 %2, 0, !dbg !14637
  br i1 %3, label %16, label %4, !dbg !14638

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #37, !dbg !14639
  br i1 %5, label %16, label %6, !dbg !14640

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14641
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14641
  %9 = load i8, i8* %8, align 2, !dbg !14641
  %10 = sext i8 %9 to i32, !dbg !14642
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14643
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.155(i32 noundef %10, i32 noundef %11) #37, !dbg !14644
  br i1 %12, label %16, label %13, !dbg !14645

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #37, !dbg !14646
  %15 = xor i1 %14, true, !dbg !14647
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14636
  call void @llvm.dbg.value(metadata i1 %17, metadata !14635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14636
  ret i1 %17, !dbg !14648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14649 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14653, metadata !DIExpression()), !dbg !14655
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14656
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14654, metadata !DIExpression()), !dbg !14655
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #37, !dbg !14657
  br i1 %3, label %5, label %4, !dbg !14659

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #37, !dbg !14660
  br label %5, !dbg !14662

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14653, metadata !DIExpression()), !dbg !14655
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #37, !dbg !14663
  ret i32 %6, !dbg !14664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !14665 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14667, metadata !DIExpression()), !dbg !14669
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14670
  %3 = load i8, i8* %2, align 1, !dbg !14670
  call void @llvm.dbg.value(metadata i8 %3, metadata !14668, metadata !DIExpression()), !dbg !14669
  %4 = and i8 %3, 31, !dbg !14671
  %5 = icmp ne i8 %4, 0, !dbg !14672
  ret i1 %5, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14674 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14676, metadata !DIExpression()), !dbg !14677
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #37, !dbg !14678
  br i1 %2, label %3, label %7, !dbg !14680

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()) #33, !dbg !14684
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14687
  %5 = load i8, i8* %4, align 1, !dbg !14688
  %6 = and i8 %5, 127, !dbg !14688
  store i8 %6, i8* %4, align 1, !dbg !14688
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #33, !dbg !14692
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #38, !dbg !14696
  br label %7, !dbg !14697

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14698, metadata !DIExpression()) #33, !dbg !14701
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14703
  %9 = load i8, i8* %8, align 1, !dbg !14704
  %10 = or i8 %9, -128, !dbg !14704
  store i8 %10, i8* %8, align 1, !dbg !14704
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14705, metadata !DIExpression()) #33, !dbg !14708
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14712, metadata !DIExpression()) #33, !dbg !14720
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14718, metadata !DIExpression()) #33, !dbg !14720
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #38, !dbg !14722
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14719, metadata !DIExpression()) #33, !dbg !14720
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14724
  br i1 %12, label %23, label %13, !dbg !14722

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14719, metadata !DIExpression()) #33, !dbg !14720
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14726
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14719, metadata !DIExpression()) #33, !dbg !14720
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #38, !dbg !14727
  %17 = icmp sgt i32 %16, 0, !dbg !14730
  br i1 %17, label %18, label %20, !dbg !14731

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14732
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #38, !dbg !14734
  br label %25, !dbg !14735

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #38, !dbg !14724
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14719, metadata !DIExpression()) #33, !dbg !14720
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14724
  br i1 %22, label %23, label %13, !dbg !14722, !llvm.loop !14736

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14738
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #38, !dbg !14739
  br label %25, !dbg !14740

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14741
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14742
  %28 = zext i1 %27 to i32, !dbg !14742
  tail call fastcc void @update_cache(i32 noundef %28) #37, !dbg !14743
  ret void, !dbg !14744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !14745 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14747, metadata !DIExpression()), !dbg !14748
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #37, !dbg !14749
  ret i1 %2, !dbg !14750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #13 !dbg !14751 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14753, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14754, metadata !DIExpression()), !dbg !14755
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14756
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #37, !dbg !14757
  ret void, !dbg !14758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !14759 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14763, metadata !DIExpression()), !dbg !14764
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.153(%struct._dnode* noundef %0) #37, !dbg !14765
  br i1 %2, label %6, label %3, !dbg !14765

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14766
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14766
  br label %6, !dbg !14765

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14765
  ret %struct._dnode* %7, !dbg !14767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #13 !dbg !14768 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14772, metadata !DIExpression()), !dbg !14776
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14773, metadata !DIExpression()), !dbg !14776
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14777
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14777
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14774, metadata !DIExpression()), !dbg !14776
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14778
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14779
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14780
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14781
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14782
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14783
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14784
  ret void, !dbg !14785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #11 !dbg !14786 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14790, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14791, metadata !DIExpression()), !dbg !14792
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14793
  br i1 %3, label %6, label %4, !dbg !14794

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #37, !dbg !14795
  br label %6, !dbg !14794

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14794
  ret %struct._dnode* %7, !dbg !14796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #13 !dbg !14797 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14801, metadata !DIExpression()), !dbg !14804
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14802, metadata !DIExpression()), !dbg !14804
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14805
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14805
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14803, metadata !DIExpression()), !dbg !14804
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14806
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14807
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14808
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14809
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14810
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14811
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14812
  ret void, !dbg !14813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14816, metadata !DIExpression()), !dbg !14818
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #38, !dbg !14819
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14826, metadata !DIExpression()) #33, !dbg !14828
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14829
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14830
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14830
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14817, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14831, metadata !DIExpression()) #33, !dbg !14837
  call void @llvm.dbg.value(metadata i32 %0, metadata !14836, metadata !DIExpression()) #33, !dbg !14837
  %6 = icmp eq i32 %0, 0, !dbg !14840
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14842
  br i1 %6, label %8, label %15, !dbg !14843

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #38, !dbg !14844
  br i1 %9, label %15, label %10, !dbg !14846

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #38, !dbg !14847
  br i1 %11, label %15, label %12, !dbg !14849

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #38, !dbg !14850
  %14 = icmp eq i32 %13, 0, !dbg !14850
  br i1 %14, label %18, label %15, !dbg !14852

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14853
  br i1 %16, label %18, label %17, !dbg !14856

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #37, !dbg !14857
  br label %18, !dbg !14859

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14842
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14842
  ret void, !dbg !14860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #11 !dbg !14861 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14865, metadata !DIExpression()), !dbg !14868
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14866, metadata !DIExpression()), !dbg !14868
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef %0) #37, !dbg !14869
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14867, metadata !DIExpression()), !dbg !14868
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14866, metadata !DIExpression()), !dbg !14868
  ret %struct.k_thread* %3, !dbg !14870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14873, metadata !DIExpression()), !dbg !14874
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14875
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #37, !dbg !14876
  %4 = xor i1 %3, true, !dbg !14877
  ret i1 %4, !dbg !14878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !14879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14881, metadata !DIExpression()), !dbg !14882
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14883
  %3 = load i16, i16* %2, align 2, !dbg !14883
  %4 = icmp ult i16 %3, 128, !dbg !14884
  %5 = zext i1 %4 to i32, !dbg !14884
  ret i32 %5, !dbg !14885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #11 !dbg !14886 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14892, metadata !DIExpression()), !dbg !14893
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14894
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #37, !dbg !14895
  %4 = xor i1 %3, true, !dbg !14896
  ret i1 %4, !dbg !14897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #11 !dbg !14898 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14904, metadata !DIExpression()), !dbg !14905
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14906
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14906
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14907
  ret i1 %4, !dbg !14908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #11 !dbg !14909 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14911, metadata !DIExpression()), !dbg !14913
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14912, metadata !DIExpression()), !dbg !14913
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14914
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14914
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14915
  br i1 %5, label %9, label %6, !dbg !14916

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14917
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14917
  br label %9, !dbg !14916

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14916
  ret %struct._dnode* %10, !dbg !14918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.153(%struct._dnode* noundef readonly %0) unnamed_addr #11 !dbg !14919 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14923, metadata !DIExpression()), !dbg !14924
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14925
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14925
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14926
  ret i1 %4, !dbg !14927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #13 !dbg !14928 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14932, metadata !DIExpression()), !dbg !14935
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14936
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14936
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14933, metadata !DIExpression()), !dbg !14935
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14937
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14937
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14934, metadata !DIExpression()), !dbg !14935
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14938
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14939
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14940
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14941
  tail call fastcc void @sys_dnode_init.154(%struct._dnode* noundef %0) #37, !dbg !14942
  ret void, !dbg !14943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.154(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !14944 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14946, metadata !DIExpression()), !dbg !14947
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14948
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14949
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14950
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14951
  ret void, !dbg !14952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !14953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14957, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata i32 128, metadata !14958, metadata !DIExpression()), !dbg !14959
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14960
  %3 = load i8, i8* %2, align 1, !dbg !14960
  %4 = icmp slt i8 %3, 0, !dbg !14961
  ret i1 %4, !dbg !14962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.155(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14965, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i32 %1, metadata !14966, metadata !DIExpression()), !dbg !14967
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.156(i32 noundef %0, i32 noundef %1) #37, !dbg !14968
  ret i1 %3, !dbg !14969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #17 !dbg !14970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14972, metadata !DIExpression()), !dbg !14973
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14974
  ret i1 %2, !dbg !14975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.156(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14978, metadata !DIExpression()), !dbg !14980
  call void @llvm.dbg.value(metadata i32 %1, metadata !14979, metadata !DIExpression()), !dbg !14980
  %3 = icmp slt i32 %0, %1, !dbg !14981
  ret i1 %3, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.value(metadata i32 0, metadata !14986, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !14991
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !14993, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14993
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !14995
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !14995
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !14991
  call void @llvm.dbg.value(metadata i32 %3, metadata !14988, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata i32 undef, metadata !14986, metadata !DIExpression()), !dbg !14990
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #37, !dbg !14996
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !15001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !15003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !15005, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !14986, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata i32 undef, metadata !14986, metadata !DIExpression()), !dbg !14990
  ret void, !dbg !15006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15009, metadata !DIExpression()), !dbg !15010
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #37, !dbg !15011
  br i1 %2, label %24, label %3, !dbg !15013

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #37, !dbg !15014
  br i1 %4, label %5, label %24, !dbg !15015

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14698, metadata !DIExpression()) #33, !dbg !15016
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15019
  %7 = load i8, i8* %6, align 1, !dbg !15020
  %8 = or i8 %7, -128, !dbg !15020
  store i8 %8, i8* %6, align 1, !dbg !15020
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14705, metadata !DIExpression()) #33, !dbg !15021
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14712, metadata !DIExpression()) #33, !dbg !15023
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14718, metadata !DIExpression()) #33, !dbg !15023
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #38, !dbg !15025
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14719, metadata !DIExpression()) #33, !dbg !15023
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15026
  br i1 %10, label %21, label %11, !dbg !15025

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14719, metadata !DIExpression()) #33, !dbg !15023
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15027
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14719, metadata !DIExpression()) #33, !dbg !15023
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #38, !dbg !15028
  %15 = icmp sgt i32 %14, 0, !dbg !15029
  br i1 %15, label %16, label %18, !dbg !15030

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15031
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #38, !dbg !15032
  br label %23, !dbg !15033

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #38, !dbg !15026
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14719, metadata !DIExpression()) #33, !dbg !15023
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15026
  br i1 %20, label %21, label %11, !dbg !15025, !llvm.loop !15034

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15036
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #38, !dbg !15037
  br label %23, !dbg !15038

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #37, !dbg !15039
  br label %24, !dbg !15040

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !15042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15044, metadata !DIExpression()), !dbg !15045
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #37, !dbg !15046
  br i1 %2, label %6, label %3, !dbg !15047

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #37, !dbg !15048
  %5 = xor i1 %4, true, !dbg !15047
  br label %6, !dbg !15047

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15050 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15052, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata i32 0, metadata !15053, metadata !DIExpression()), !dbg !15057
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15058
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15060, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15060
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !15062
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15062
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !15058
  call void @llvm.dbg.value(metadata i32 %3, metadata !15055, metadata !DIExpression()), !dbg !15057
  call void @llvm.dbg.value(metadata i32 undef, metadata !15053, metadata !DIExpression()), !dbg !15057
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #37, !dbg !15063
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !15066
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15066
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !15068
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !15070, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15053, metadata !DIExpression()), !dbg !15057
  call void @llvm.dbg.value(metadata i32 undef, metadata !15053, metadata !DIExpression()), !dbg !15057
  ret void, !dbg !15071
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15074, metadata !DIExpression()), !dbg !15076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15077
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15079, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15079
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !15081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !15077
  call void @llvm.dbg.value(metadata i32 %3, metadata !15075, metadata !DIExpression()), !dbg !15076
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #37, !dbg !15082
  br i1 %4, label %5, label %6, !dbg !15084

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !15085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15085
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !15088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !15090, !srcloc !14553
  br label %8, !dbg !15091

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.161(%struct.k_thread* noundef %0) #37, !dbg !15092
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #37, !dbg !15093
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15094
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #37, !dbg !15094
  br label %8, !dbg !15095

8:                                                ; preds = %6, %5
  ret void, !dbg !15095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !15096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15100
  %3 = load i8, i8* %2, align 1, !dbg !15100
  %4 = and i8 %3, 4, !dbg !15101
  %5 = icmp eq i8 %4, 0, !dbg !15102
  ret i1 %5, !dbg !15103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.161(%struct.k_thread* nocapture noundef %0) unnamed_addr #13 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15106, metadata !DIExpression()), !dbg !15107
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15108
  %3 = load i8, i8* %2, align 1, !dbg !15109
  %4 = and i8 %3, -5, !dbg !15109
  store i8 %4, i8* %2, align 1, !dbg !15109
  ret void, !dbg !15110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15111 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15114, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15113, metadata !DIExpression()), !dbg !15115
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #37, !dbg !15116
  br i1 %4, label %5, label %9, !dbg !15118

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #37, !dbg !15119
  br i1 %6, label %7, label %9, !dbg !15120

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15121, metadata !DIExpression()) #33, !dbg !15127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #33, !dbg !15127
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #38, !dbg !15130
  br label %10, !dbg !15131

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15132
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !15135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !15137, !srcloc !14553
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15143, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.value(metadata i32 %0, metadata !15145, metadata !DIExpression()), !dbg !15150
  %2 = icmp eq i32 %0, 0, !dbg !15152
  br i1 %2, label %3, label %6, !dbg !15153

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #33, !dbg !15154, !srcloc !15161
  call void @llvm.dbg.value(metadata i32 %4, metadata !15157, metadata !DIExpression()) #33, !dbg !15162
  %5 = icmp eq i32 %4, 0, !dbg !15163
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15144
  ret i1 %7, !dbg !15164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #11 !dbg !15165 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15168
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15167, metadata !DIExpression()), !dbg !15169
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15170
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15171
  ret i1 %3, !dbg !15172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15175, metadata !DIExpression()), !dbg !15177
  %2 = tail call i32 @arch_swap(i32 noundef %0) #38, !dbg !15178
  call void @llvm.dbg.value(metadata i32 %2, metadata !15176, metadata !DIExpression()), !dbg !15177
  ret i32 %2, !dbg !15179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15180 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15182, metadata !DIExpression()), !dbg !15186
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #37, !dbg !15187
  call void @llvm.dbg.value(metadata i32 0, metadata !15183, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15189
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15191, !srcloc !14527
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15191
  call void @llvm.dbg.value(metadata i32 %4, metadata !14524, metadata !DIExpression()) #33, !dbg !15193
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %4, metadata !14518, metadata !DIExpression()) #33, !dbg !15189
  call void @llvm.dbg.value(metadata i32 %4, metadata !15185, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()), !dbg !15188
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #37, !dbg !15194
  br i1 %5, label %6, label %10, !dbg !15198

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()) #33, !dbg !15199
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15202
  %8 = load i8, i8* %7, align 1, !dbg !15203
  %9 = and i8 %8, 127, !dbg !15203
  store i8 %9, i8* %7, align 1, !dbg !15203
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #33, !dbg !15204
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #38, !dbg !15206
  br label %10, !dbg !15207

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #37, !dbg !15208
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15209
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15210
  %13 = zext i1 %12 to i32, !dbg !15210
  tail call fastcc void @update_cache(i32 noundef %13) #37, !dbg !15211
  call void @llvm.dbg.value(metadata i32 %4, metadata !14539, metadata !DIExpression()) #33, !dbg !15212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15212
  call void @llvm.dbg.value(metadata i32 %4, metadata !14547, metadata !DIExpression()) #33, !dbg !15214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #33, !dbg !15216, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15183, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()), !dbg !15188
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15217
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15219
  br i1 %15, label %16, label %17, !dbg !15220

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #37, !dbg !15221
  br label %17, !dbg !15223

17:                                               ; preds = %16, %10
  ret void, !dbg !15224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15227, metadata !DIExpression()), !dbg !15228
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15229
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #38, !dbg !15230
  ret i32 %3, !dbg !15231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #13 !dbg !15232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15234, metadata !DIExpression()), !dbg !15235
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15236
  %3 = load i8, i8* %2, align 1, !dbg !15237
  %4 = or i8 %3, 16, !dbg !15237
  store i8 %4, i8* %2, align 1, !dbg !15237
  ret void, !dbg !15238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15239 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15240, !srcloc !14527
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %2, metadata !14524, metadata !DIExpression()) #33, !dbg !15242
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15242
  tail call void @z_reschedule_irqlock(i32 noundef %2) #37, !dbg !15243
  ret void, !dbg !15244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15247, metadata !DIExpression()), !dbg !15248
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #37, !dbg !15249
  br i1 %2, label %3, label %5, !dbg !15251

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #37, !dbg !15252
  br label %6, !dbg !15254

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14547, metadata !DIExpression()) #33, !dbg !15255
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #33, !dbg !15258, !srcloc !14553
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15260 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15262, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15265
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15267, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15267
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15269
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !15265
  call void @llvm.dbg.value(metadata i32 %3, metadata !15263, metadata !DIExpression()), !dbg !15264
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #37, !dbg !15270
  br i1 %4, label %6, label %5, !dbg !15272

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !15276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !15278, !srcloc !14553
  br label %8, !dbg !15279

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #37, !dbg !15280
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #37, !dbg !15281
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15282
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #37, !dbg !15282
  br label %8, !dbg !15283

8:                                                ; preds = %6, %5
  ret void, !dbg !15283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !15284 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15286, metadata !DIExpression()), !dbg !15287
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15288
  %3 = load i8, i8* %2, align 1, !dbg !15288
  %4 = and i8 %3, 16, !dbg !15289
  %5 = icmp ne i8 %4, 0, !dbg !15290
  ret i1 %5, !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #13 !dbg !15292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15294, metadata !DIExpression()), !dbg !15295
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15296
  %3 = load i8, i8* %2, align 1, !dbg !15297
  %4 = and i8 %3, -17, !dbg !15297
  store i8 %4, i8* %2, align 1, !dbg !15297
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15309, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15307, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15308, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.value(metadata i32 0, metadata !15310, metadata !DIExpression()), !dbg !15314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15315
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15317, !srcloc !14527
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15317
  call void @llvm.dbg.value(metadata i32 %5, metadata !14524, metadata !DIExpression()) #33, !dbg !15319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15319
  call void @llvm.dbg.value(metadata i32 %5, metadata !14518, metadata !DIExpression()) #33, !dbg !15315
  call void @llvm.dbg.value(metadata i32 %5, metadata !15312, metadata !DIExpression()), !dbg !15314
  call void @llvm.dbg.value(metadata i32 undef, metadata !15310, metadata !DIExpression()), !dbg !15314
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #37, !dbg !15320
  call void @llvm.dbg.value(metadata i32 %5, metadata !14539, metadata !DIExpression()) #33, !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15323
  call void @llvm.dbg.value(metadata i32 %5, metadata !14547, metadata !DIExpression()) #33, !dbg !15325
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #33, !dbg !15327, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15310, metadata !DIExpression()), !dbg !15314
  call void @llvm.dbg.value(metadata i32 undef, metadata !15310, metadata !DIExpression()), !dbg !15314
  ret void, !dbg !15328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15329 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15333, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15331, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15332, metadata !DIExpression()), !dbg !15334
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #37, !dbg !15335
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #37, !dbg !15336
  ret void, !dbg !15337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15342, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15343, metadata !DIExpression()), !dbg !15344
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #37, !dbg !15345
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #37, !dbg !15346
  %3 = icmp eq %union.anon* %1, null, !dbg !15347
  br i1 %3, label %21, label %4, !dbg !15349

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15350
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15352
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15353
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14712, metadata !DIExpression()) #33, !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14718, metadata !DIExpression()) #33, !dbg !15354
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef nonnull %6) #38, !dbg !15356
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14719, metadata !DIExpression()) #33, !dbg !15354
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15357
  br i1 %8, label %19, label %9, !dbg !15356

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14719, metadata !DIExpression()) #33, !dbg !15354
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15358
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14719, metadata !DIExpression()) #33, !dbg !15354
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #38, !dbg !15359
  %13 = icmp sgt i32 %12, 0, !dbg !15360
  br i1 %13, label %14, label %16, !dbg !15361

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15362
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #38, !dbg !15363
  br label %21, !dbg !15364

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #38, !dbg !15357
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14719, metadata !DIExpression()) #33, !dbg !15354
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15357
  br i1 %18, label %19, label %9, !dbg !15356, !llvm.loop !15365

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15367
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #38, !dbg !15368
  br label %21, !dbg !15369

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15371 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15376, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15375, metadata !DIExpression()), !dbg !15377
  %4 = icmp eq i64 %3, -1, !dbg !15378
  br i1 %4, label %6, label %5, !dbg !15380

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.164(%struct.k_thread* noundef %0, [1 x i64] %1) #37, !dbg !15381
  br label %6, !dbg !15383

6:                                                ; preds = %5, %2
  ret void, !dbg !15384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.164(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15385 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15388, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15387, metadata !DIExpression()), !dbg !15389
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15390
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #38, !dbg !15391
  ret void, !dbg !15392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15393 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15395, metadata !DIExpression()), !dbg !15403
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15404
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15404
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15396, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 0, metadata !15397, metadata !DIExpression()), !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15406
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15408, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !15406
  call void @llvm.dbg.value(metadata i32 undef, metadata !15399, metadata !DIExpression()), !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15397, metadata !DIExpression()), !dbg !15405
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15411
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15412
  %7 = load i8, i8* %6, align 1, !dbg !15412
  %8 = and i8 %7, 40, !dbg !15413
  %9 = icmp eq i8 %8, 0, !dbg !15413
  call void @llvm.dbg.value(metadata i1 %9, metadata !15400, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15414
  br i1 %9, label %10, label %17, !dbg !15415

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15416
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15416
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15416
  %14 = icmp eq %union.anon* %13, null, !dbg !15420
  br i1 %14, label %16, label %15, !dbg !15421

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #37, !dbg !15422
  br label %16, !dbg !15424

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.161(%struct.k_thread* noundef nonnull %3) #37, !dbg !15425
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #37, !dbg !15426
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #37, !dbg !15427
  br label %17, !dbg !15428

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15408
  call void @llvm.dbg.value(metadata i32 %18, metadata !14524, metadata !DIExpression()) #33, !dbg !15410
  call void @llvm.dbg.value(metadata i32 %18, metadata !14518, metadata !DIExpression()) #33, !dbg !15406
  call void @llvm.dbg.value(metadata i32 %18, metadata !15399, metadata !DIExpression()), !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #33, !dbg !15429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #33, !dbg !15431
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #33, !dbg !15433, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15397, metadata !DIExpression()), !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15397, metadata !DIExpression()), !dbg !15405
  ret void, !dbg !15434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #13 !dbg !15435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15437, metadata !DIExpression()), !dbg !15438
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #37, !dbg !15439
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #37, !dbg !15440
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15441
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15442
  ret void, !dbg !15443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #13 !dbg !15444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15446, metadata !DIExpression()), !dbg !15447
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15448
  %3 = load i8, i8* %2, align 1, !dbg !15449
  %4 = and i8 %3, -3, !dbg !15449
  store i8 %4, i8* %2, align 1, !dbg !15449
  ret void, !dbg !15450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15453, metadata !DIExpression()), !dbg !15454
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #37, !dbg !15455
  br i1 %2, label %3, label %7, !dbg !15457

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()) #33, !dbg !15458
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15461
  %5 = load i8, i8* %4, align 1, !dbg !15462
  %6 = and i8 %5, 127, !dbg !15462
  store i8 %6, i8* %4, align 1, !dbg !15462
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #33, !dbg !15463
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #38, !dbg !15465
  br label %7, !dbg !15466

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15467
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15468
  %10 = zext i1 %9 to i32, !dbg !15468
  tail call fastcc void @update_cache(i32 noundef %10) #37, !dbg !15469
  ret void, !dbg !15470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #13 !dbg !15471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15473, metadata !DIExpression()), !dbg !15474
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15475
  %3 = load i8, i8* %2, align 1, !dbg !15476
  %4 = or i8 %3, 2, !dbg !15476
  store i8 %4, i8* %2, align 1, !dbg !15476
  ret void, !dbg !15477
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #32 !dbg !15478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15480, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i32 0, metadata !15481, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15486
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15488, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15488
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15490
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !15486
  call void @llvm.dbg.value(metadata i32 %3, metadata !15483, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !15481, metadata !DIExpression()), !dbg !15485
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #37, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !15494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !15496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !15498, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15481, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !15481, metadata !DIExpression()), !dbg !15485
  ret void, !dbg !15499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15500 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15506, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata i32 %0, metadata !15504, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15505, metadata !DIExpression()), !dbg !15511
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15512
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #37, !dbg !15513
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15514
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15515
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #37, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %6, metadata !15507, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata i32 0, metadata !15508, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15518
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15520, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !15510, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15517
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15523
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15527
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15528
  br i1 %10, label %11, label %12, !dbg !15529

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15530
  br label %12, !dbg !15532

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %13, metadata !14524, metadata !DIExpression()) #33, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %13, metadata !14518, metadata !DIExpression()) #33, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %13, metadata !15510, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #33, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15533
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #33, !dbg !15535
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #33, !dbg !15537, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15508, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15517
  ret i32 %6, !dbg !15538
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15539 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15544, metadata !DIExpression()), !dbg !15547
  call void @llvm.dbg.value(metadata i64 undef, metadata !15546, metadata !DIExpression()), !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15543, metadata !DIExpression()), !dbg !15547
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15545, metadata !DIExpression()), !dbg !15547
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15548
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15549
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15550
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15552, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !15550
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15555
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #37, !dbg !15556
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15121, metadata !DIExpression()) #33, !dbg !15557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #33, !dbg !15557
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #38, !dbg !15559
  ret i32 %9, !dbg !15560
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15561 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15565, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15566, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata i32 0, metadata !15567, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15572
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15574, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !15576
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15576
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !15572
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15566, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15567, metadata !DIExpression()), !dbg !15571
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #37, !dbg !15577
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15566, metadata !DIExpression()), !dbg !15570
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15580
  br i1 %5, label %7, label %6, !dbg !15582

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #37, !dbg !15583
  br label %7, !dbg !15585

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15574
  call void @llvm.dbg.value(metadata i32 %8, metadata !14524, metadata !DIExpression()) #33, !dbg !15576
  call void @llvm.dbg.value(metadata i32 %8, metadata !14518, metadata !DIExpression()) #33, !dbg !15572
  call void @llvm.dbg.value(metadata i32 %8, metadata !15569, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #33, !dbg !15586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15586
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #33, !dbg !15588
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #33, !dbg !15590, !srcloc !14553
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15566, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15567, metadata !DIExpression()), !dbg !15571
  ret %struct.k_thread* %4, !dbg !15591
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15592 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15594, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15595, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 0, metadata !15596, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15601
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15603, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !15601
  call void @llvm.dbg.value(metadata i32 undef, metadata !15598, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15595, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15596, metadata !DIExpression()), !dbg !15600
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #37, !dbg !15606
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15595, metadata !DIExpression()), !dbg !15599
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15609
  br i1 %5, label %8, label %6, !dbg !15611

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #37, !dbg !15612
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #37, !dbg !15614
  br label %8, !dbg !15615

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %9, metadata !14524, metadata !DIExpression()) #33, !dbg !15605
  call void @llvm.dbg.value(metadata i32 %9, metadata !14518, metadata !DIExpression()) #33, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %9, metadata !15598, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #33, !dbg !15616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15616
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #33, !dbg !15618
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #33, !dbg !15620, !srcloc !14553
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15595, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15596, metadata !DIExpression()), !dbg !15600
  ret %struct.k_thread* %4, !dbg !15621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15622 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15624, metadata !DIExpression()), !dbg !15625
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15480, metadata !DIExpression()) #33, !dbg !15626
  call void @llvm.dbg.value(metadata i32 0, metadata !15481, metadata !DIExpression()) #33, !dbg !15628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15629
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15631, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15631
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15633
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !15629
  call void @llvm.dbg.value(metadata i32 %3, metadata !15483, metadata !DIExpression()) #33, !dbg !15628
  call void @llvm.dbg.value(metadata i32 undef, metadata !15481, metadata !DIExpression()) #33, !dbg !15628
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #38, !dbg !15634
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !15637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !15639, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15481, metadata !DIExpression()) #33, !dbg !15628
  call void @llvm.dbg.value(metadata i32 undef, metadata !15481, metadata !DIExpression()) #33, !dbg !15628
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #37, !dbg !15640
  ret void, !dbg !15641
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i32 %1, metadata !15645, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i8 0, metadata !15646, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i32 0, metadata !15647, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15652
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15654, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !15652
  call void @llvm.dbg.value(metadata i32 undef, metadata !15649, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata i8 poison, metadata !15646, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i32 undef, metadata !15647, metadata !DIExpression()), !dbg !15651
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #37, !dbg !15657
  call void @llvm.dbg.value(metadata i1 %6, metadata !15646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15650
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15660

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()) #33, !dbg !15661
  %11 = load i8, i8* %4, align 1, !dbg !15667
  %12 = and i8 %11, 127, !dbg !15667
  store i8 %12, i8* %4, align 1, !dbg !15667
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #33, !dbg !15668
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #38, !dbg !15670
  store i8 %9, i8* %8, align 2, !dbg !15671
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14698, metadata !DIExpression()) #33, !dbg !15672
  %13 = load i8, i8* %4, align 1, !dbg !15674
  %14 = or i8 %13, -128, !dbg !15674
  store i8 %14, i8* %4, align 1, !dbg !15674
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14705, metadata !DIExpression()) #33, !dbg !15675
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14712, metadata !DIExpression()) #33, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14718, metadata !DIExpression()) #33, !dbg !15677
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #38, !dbg !15679
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14719, metadata !DIExpression()) #33, !dbg !15677
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15680
  br i1 %16, label %26, label %17, !dbg !15679

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14719, metadata !DIExpression()) #33, !dbg !15677
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15681
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14719, metadata !DIExpression()) #33, !dbg !15677
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #38, !dbg !15682
  %21 = icmp sgt i32 %20, 0, !dbg !15683
  br i1 %21, label %22, label %23, !dbg !15684

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #38, !dbg !15685
  br label %27, !dbg !15686

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #38, !dbg !15680
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14719, metadata !DIExpression()) #33, !dbg !15677
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15680
  br i1 %25, label %26, label %17, !dbg !15679, !llvm.loop !15687

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #38, !dbg !15689
  br label %27, !dbg !15690

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #37, !dbg !15691
  br label %29, !dbg !15692

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15693
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15654
  call void @llvm.dbg.value(metadata i32 %30, metadata !14524, metadata !DIExpression()) #33, !dbg !15656
  call void @llvm.dbg.value(metadata i32 %30, metadata !14518, metadata !DIExpression()) #33, !dbg !15652
  call void @llvm.dbg.value(metadata i32 %30, metadata !15649, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #33, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #33, !dbg !15697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #33, !dbg !15699, !srcloc !14553
  call void @llvm.dbg.value(metadata i8 poison, metadata !15646, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata i32 undef, metadata !15647, metadata !DIExpression()), !dbg !15651
  ret i1 %6, !dbg !15700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15705, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 %1, metadata !15706, metadata !DIExpression()), !dbg !15708
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #37, !dbg !15709
  call void @llvm.dbg.value(metadata i1 %3, metadata !15707, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15708
  br i1 %3, label %4, label %12, !dbg !15710

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15712
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15713
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15713
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15713
  %9 = load i8, i8* %8, align 1, !dbg !15713
  %10 = icmp eq i8 %9, 0, !dbg !15714
  br i1 %10, label %11, label %12, !dbg !15715

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #37, !dbg !15716
  br label %12, !dbg !15718

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15719
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15720 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15722, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15726
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15728, !srcloc !14527
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15728
  call void @llvm.dbg.value(metadata i32 %2, metadata !14524, metadata !DIExpression()) #33, !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15730
  call void @llvm.dbg.value(metadata i32 %2, metadata !14518, metadata !DIExpression()) #33, !dbg !15726
  call void @llvm.dbg.value(metadata i32 %2, metadata !15724, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !15722, metadata !DIExpression()), !dbg !15725
  tail call fastcc void @z_sched_lock() #37, !dbg !15731
  call void @llvm.dbg.value(metadata i32 %2, metadata !14539, metadata !DIExpression()) #33, !dbg !15734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15734
  call void @llvm.dbg.value(metadata i32 %2, metadata !14547, metadata !DIExpression()) #33, !dbg !15736
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #33, !dbg !15738, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15722, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !15722, metadata !DIExpression()), !dbg !15725
  ret void, !dbg !15739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15740 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15741
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15742
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15742
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15742
  %5 = load i8, i8* %4, align 1, !dbg !15743
  %6 = add i8 %5, -1, !dbg !15743
  store i8 %6, i8* %4, align 1, !dbg !15743
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !15744, !srcloc !15746
  ret void, !dbg !15747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15748 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15750, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !15754
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !15756, !srcloc !14527
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15756
  call void @llvm.dbg.value(metadata i32 %2, metadata !14524, metadata !DIExpression()) #33, !dbg !15758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !15758
  call void @llvm.dbg.value(metadata i32 %2, metadata !14518, metadata !DIExpression()) #33, !dbg !15754
  call void @llvm.dbg.value(metadata i32 %2, metadata !15752, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata i32 undef, metadata !15750, metadata !DIExpression()), !dbg !15753
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15759
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15762
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15762
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15762
  %7 = load i8, i8* %6, align 1, !dbg !15763
  %8 = add i8 %7, 1, !dbg !15763
  store i8 %8, i8* %6, align 1, !dbg !15763
  tail call fastcc void @update_cache(i32 noundef 0) #37, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %2, metadata !14539, metadata !DIExpression()) #33, !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !15765
  call void @llvm.dbg.value(metadata i32 %2, metadata !14547, metadata !DIExpression()) #33, !dbg !15767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #33, !dbg !15769, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 1, metadata !15750, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata i32 undef, metadata !15750, metadata !DIExpression()), !dbg !15753
  tail call fastcc void @z_reschedule_unlocked() #37, !dbg !15770
  ret void, !dbg !15771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #11 !dbg !15772 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15773
  ret %struct.k_thread* %1, !dbg !15774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !15775 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15779, metadata !DIExpression()), !dbg !15784
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15780, metadata !DIExpression()), !dbg !15784
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15781, metadata !DIExpression()), !dbg !15784
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15782, metadata !DIExpression()), !dbg !15784
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #37, !dbg !15787
  call void @llvm.dbg.value(metadata i32 %5, metadata !15783, metadata !DIExpression()), !dbg !15784
  %6 = icmp sgt i32 %5, 0, !dbg !15788
  br i1 %6, label %17, label %7, !dbg !15790

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15791
  br i1 %8, label %17, label %9, !dbg !15793

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15794
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15794
  %12 = load i32, i32* %11, align 8, !dbg !15794
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15796
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15796
  %15 = load i32, i32* %14, align 8, !dbg !15796
  %16 = icmp ult i32 %12, %15, !dbg !15797
  br label %17, !dbg !15798

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15799
  ret i1 %18, !dbg !15800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15801 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15818, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15819, metadata !DIExpression()), !dbg !15833
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15834
  %5 = load i32, i32* %4, align 4, !dbg !15835
  %6 = add nsw i32 %5, 1, !dbg !15835
  store i32 %6, i32* %4, align 4, !dbg !15835
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15836
  store i32 %5, i32* %7, align 8, !dbg !15837
  %8 = load i32, i32* %4, align 4, !dbg !15838
  %9 = icmp eq i32 %8, 0, !dbg !15839
  br i1 %9, label %10, label %32, !dbg !15840

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15841
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #33, !dbg !15841
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15821, metadata !DIExpression()), !dbg !15841
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15841
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15841
  %14 = load i32, i32* %13, align 4, !dbg !15841
  %15 = shl i32 %14, 2, !dbg !15841
  %16 = alloca i8, i32 %15, align 8, !dbg !15841
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15841
  store i8* %16, i8** %17, align 4, !dbg !15841
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15841
  %19 = alloca i8, i32 %14, align 8, !dbg !15841
  store i8* %19, i8** %18, align 4, !dbg !15841
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15841
  store i32 -1, i32* %20, align 4, !dbg !15841
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #38, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15830, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15820, metadata !DIExpression()), !dbg !15833
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15844
  br i1 %22, label %23, label %24, !dbg !15841

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #33, !dbg !15844
  br label %32, !dbg !15845

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15820, metadata !DIExpression()), !dbg !15833
  %26 = load i32, i32* %4, align 4, !dbg !15846
  %27 = add nsw i32 %26, 1, !dbg !15846
  store i32 %27, i32* %4, align 4, !dbg !15846
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15848
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15848
  store i32 %26, i32* %29, align 8, !dbg !15849
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #38, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15830, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15820, metadata !DIExpression()), !dbg !15833
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15844
  br i1 %31, label %23, label %24, !dbg !15841, !llvm.loop !15850

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15852
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15853
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #38, !dbg !15854
  ret void, !dbg !15855
}

; Function Attrs: optsize
declare !dbg !15856 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15861 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15864 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15866, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15867, metadata !DIExpression()), !dbg !15868
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15869
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15870
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #38, !dbg !15871
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15872
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15872
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15874
  br i1 %7, label %8, label %10, !dbg !15875

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15876
  store i32 0, i32* %9, align 4, !dbg !15878
  br label %10, !dbg !15879

10:                                               ; preds = %8, %2
  ret void, !dbg !15880
}

; Function Attrs: optsize
declare !dbg !15881 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15882 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15886, metadata !DIExpression()), !dbg !15889
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15887, metadata !DIExpression()), !dbg !15889
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15890
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #37, !dbg !15891
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15888, metadata !DIExpression()), !dbg !15889
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15887, metadata !DIExpression()), !dbg !15889
  ret %struct.k_thread* %4, !dbg !15892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15893 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15897, metadata !DIExpression()), !dbg !15898
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #38, !dbg !15899
  ret %struct.rbnode* %2, !dbg !15900
}

; Function Attrs: optsize
declare !dbg !15901 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #26 !dbg !15904 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15916, metadata !DIExpression()), !dbg !15920
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15921
  %3 = load i32, i32* %2, align 4, !dbg !15921
  %4 = icmp eq i32 %3, 0, !dbg !15923
  br i1 %4, label %10, label %5, !dbg !15924

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15917, metadata !DIExpression()), !dbg !15920
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15925, !range !4283
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15926
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15918, metadata !DIExpression()), !dbg !15920
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef %7) #37, !dbg !15927
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15919, metadata !DIExpression()), !dbg !15920
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15917, metadata !DIExpression()), !dbg !15920
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15920
  ret %struct.k_thread* %11, !dbg !15928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15929 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15933, metadata !DIExpression()), !dbg !15936
  call void @llvm.dbg.value(metadata i32 0, metadata !15934, metadata !DIExpression()), !dbg !15936
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.177(%union.anon* noundef %0) #37, !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15935, metadata !DIExpression()), !dbg !15936
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15938
  br i1 %3, label %8, label %4, !dbg !15939

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #37, !dbg !15940
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #37, !dbg !15942
  call void @llvm.dbg.value(metadata i32 1, metadata !15934, metadata !DIExpression()), !dbg !15936
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.177(%union.anon* noundef %0) #37, !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15935, metadata !DIExpression()), !dbg !15936
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15938
  br i1 %7, label %8, label %4, !dbg !15939, !llvm.loop !15943

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15936
  ret i32 %9, !dbg !15945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.177(%union.anon* noundef readonly %0) unnamed_addr #11 !dbg !15946 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15948, metadata !DIExpression()), !dbg !15949
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15950
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef %2) #37, !dbg !15951
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15952
  ret %struct.k_thread* %4, !dbg !15953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #10 !dbg !15954 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15963, metadata !DIExpression()), !dbg !15964
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15965
  tail call fastcc void @sys_dlist_init.178(%struct._dnode* noundef nonnull %2) #37, !dbg !15966
  ret void, !dbg !15967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.178(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15968 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15972, metadata !DIExpression()), !dbg !15973
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15974
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15975
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15976
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15977
  ret void, !dbg !15978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15979 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #37, !dbg !15980
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #37, !dbg !15981
  ret void, !dbg !15982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !15983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15988, metadata !DIExpression()), !dbg !15989
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15990
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15990
  %4 = load i8, i8* %3, align 2, !dbg !15990
  %5 = sext i8 %4 to i32, !dbg !15991
  ret i32 %5, !dbg !15992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15997, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i32 %1, metadata !15998, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15999, metadata !DIExpression()), !dbg !16000
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #37, !dbg !16001
  ret void, !dbg !16002
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16003 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #37, !dbg !16004
  br i1 %1, label %8, label %2, !dbg !16005

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #38, !dbg !16006
  br i1 %3, label %8, label %4, !dbg !16007

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16008
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #37, !dbg !16009
  %7 = xor i1 %6, true, !dbg !16007
  br label %8, !dbg !16007

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #11 !dbg !16011 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16012, !range !6841
  %2 = icmp eq i8 %1, 0, !dbg !16012
  ret i1 %2, !dbg !16013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16014 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !16017
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16019, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !16021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !16021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !16017
  call void @llvm.dbg.value(metadata i32 undef, metadata !16016, metadata !DIExpression()), !dbg !16022
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16023
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14681, metadata !DIExpression()) #33, !dbg !16026
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16028
  %4 = load i8, i8* %3, align 1, !dbg !16029
  %5 = and i8 %4, 127, !dbg !16029
  store i8 %5, i8* %3, align 1, !dbg !16029
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14689, metadata !DIExpression()) #33, !dbg !16030
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #38, !dbg !16032
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14698, metadata !DIExpression()) #33, !dbg !16034
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16036
  %8 = load i8, i8* %7, align 1, !dbg !16037
  %9 = or i8 %8, -128, !dbg !16037
  store i8 %9, i8* %7, align 1, !dbg !16037
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14705, metadata !DIExpression()) #33, !dbg !16038
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14712, metadata !DIExpression()) #33, !dbg !16040
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14718, metadata !DIExpression()) #33, !dbg !16040
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.152(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #38, !dbg !16042
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14719, metadata !DIExpression()) #33, !dbg !16040
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16043
  br i1 %11, label %22, label %12, !dbg !16042

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14719, metadata !DIExpression()) #33, !dbg !16040
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16044
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14719, metadata !DIExpression()) #33, !dbg !16040
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #38, !dbg !16045
  %16 = icmp sgt i32 %15, 0, !dbg !16046
  br i1 %16, label %17, label %19, !dbg !16047

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16048
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #38, !dbg !16049
  br label %24, !dbg !16050

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #38, !dbg !16043
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14719, metadata !DIExpression()) #33, !dbg !16040
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16043
  br i1 %21, label %22, label %12, !dbg !16042, !llvm.loop !16051

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16053
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #38, !dbg !16054
  br label %24, !dbg !16055

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16019
  call void @llvm.dbg.value(metadata i32 %25, metadata !14524, metadata !DIExpression()) #33, !dbg !16021
  call void @llvm.dbg.value(metadata i32 %25, metadata !14518, metadata !DIExpression()) #33, !dbg !16017
  call void @llvm.dbg.value(metadata i32 %25, metadata !16016, metadata !DIExpression()), !dbg !16022
  tail call fastcc void @update_cache(i32 noundef 1) #37, !dbg !16056
  call void @llvm.dbg.value(metadata i32 undef, metadata !15121, metadata !DIExpression()) #33, !dbg !16057
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #33, !dbg !16057
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #38, !dbg !16059
  ret void, !dbg !16060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16061 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16065, metadata !DIExpression()), !dbg !16068
  %3 = icmp eq i64 %2, -1, !dbg !16069
  br i1 %3, label %4, label %6, !dbg !16071

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16072
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #37, !dbg !16074
  br label %11, !dbg !16075

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16066, metadata !DIExpression()), !dbg !16068
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #37, !dbg !16076
  %8 = sext i32 %7 to i64, !dbg !16076
  call void @llvm.dbg.value(metadata i64 %8, metadata !16066, metadata !DIExpression()), !dbg !16068
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #37, !dbg !16077
  %10 = trunc i64 %9 to i32, !dbg !16077
  call void @llvm.dbg.value(metadata i32 %10, metadata !16067, metadata !DIExpression()), !dbg !16068
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16068
  ret i32 %12, !dbg !16078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16083, metadata !DIExpression()), !dbg !16084
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !16085, !srcloc !16087
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #37, !dbg !16088
  ret void, !dbg !16089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16090 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16094, metadata !DIExpression()), !dbg !16098
  %2 = icmp eq i64 %0, 0, !dbg !16099
  br i1 %2, label %3, label %4, !dbg !16101

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #37, !dbg !16102
  br label %29, !dbg !16104

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16096, metadata !DIExpression()), !dbg !16098
  %5 = icmp sgt i64 %0, -3, !dbg !16105
  br i1 %5, label %6, label %10, !dbg !16107

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #38, !dbg !16108
  %8 = trunc i64 %0 to i32, !dbg !16110
  %9 = add i32 %7, %8, !dbg !16110
  call void @llvm.dbg.value(metadata i32 %9, metadata !16095, metadata !DIExpression()), !dbg !16098
  br label %13, !dbg !16111

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16112
  %12 = sub i32 -2, %11, !dbg !16112
  call void @llvm.dbg.value(metadata i32 %12, metadata !16095, metadata !DIExpression()), !dbg !16098
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16114
  call void @llvm.dbg.value(metadata i32 %14, metadata !16095, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !16115
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16117, !srcloc !14527
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %16, metadata !14524, metadata !DIExpression()) #33, !dbg !16119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !16119
  call void @llvm.dbg.value(metadata i32 %16, metadata !14518, metadata !DIExpression()) #33, !dbg !16115
  call void @llvm.dbg.value(metadata i32 %16, metadata !16097, metadata !DIExpression()), !dbg !16098
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16120
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16121
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #37, !dbg !16122
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16123
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16124
  tail call fastcc void @z_add_thread_timeout.164(%struct.k_thread* noundef %18, [1 x i64] %19) #37, !dbg !16124
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16125
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #37, !dbg !16126
  call void @llvm.dbg.value(metadata i32 %16, metadata !15121, metadata !DIExpression()) #33, !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #33, !dbg !16127
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #38, !dbg !16129
  %22 = zext i32 %14 to i64, !dbg !16130
  %23 = tail call i32 @sys_clock_tick_get_32() #38, !dbg !16131
  %24 = zext i32 %23 to i64, !dbg !16131
  %25 = sub nsw i64 %22, %24, !dbg !16132
  call void @llvm.dbg.value(metadata i64 %25, metadata !16094, metadata !DIExpression()), !dbg !16098
  %26 = icmp sgt i64 %25, 0, !dbg !16133
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16133
  %28 = trunc i64 %27 to i32, !dbg !16133
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16098
  ret i32 %30, !dbg !16134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #17 !dbg !16135 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16137, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata i64 %0, metadata !14559, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i32 10000, metadata !14562, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i32 1000, metadata !14563, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i8 1, metadata !14564, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i1 false, metadata !14565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16139
  call void @llvm.dbg.value(metadata i1 false, metadata !14566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16139
  call void @llvm.dbg.value(metadata i8 0, metadata !14567, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i1 false, metadata !14568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16139
  call void @llvm.dbg.value(metadata i1 true, metadata !14569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16139
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i64 %0, metadata !14559, metadata !DIExpression()), !dbg !16139
  %2 = udiv i64 %0, 10, !dbg !16141
  ret i64 %2, !dbg !16145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16146 {
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !16147, !srcloc !16149
  tail call void @z_impl_k_yield() #37, !dbg !16150
  ret void, !dbg !16151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16156, metadata !DIExpression()), !dbg !16158
  %2 = sext i32 %0 to i64, !dbg !16159
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #37, !dbg !16160
  call void @llvm.dbg.value(metadata i64 %3, metadata !16157, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16158
  %4 = shl i64 %3, 32, !dbg !16161
  %5 = ashr exact i64 %4, 32, !dbg !16161
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #37, !dbg !16162
  call void @llvm.dbg.value(metadata i32 %6, metadata !16157, metadata !DIExpression()), !dbg !16158
  %7 = sext i32 %6 to i64, !dbg !16163
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #37, !dbg !16164
  %9 = trunc i64 %8 to i32, !dbg !16164
  ret i32 %9, !dbg !16165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #17 !dbg !16166 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16168, metadata !DIExpression()), !dbg !16169
  call void @llvm.dbg.value(metadata i64 %0, metadata !14559, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14562, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i32 10000, metadata !14563, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i8 1, metadata !14564, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i1 false, metadata !14565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16170
  call void @llvm.dbg.value(metadata i1 true, metadata !14566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16170
  call void @llvm.dbg.value(metadata i8 0, metadata !14567, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i1 false, metadata !14568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16170
  call void @llvm.dbg.value(metadata i1 true, metadata !14569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16170
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !16170
  %2 = add i64 %0, 99, !dbg !16172
  call void @llvm.dbg.value(metadata i64 %2, metadata !14559, metadata !DIExpression()), !dbg !16170
  %3 = udiv i64 %2, 100, !dbg !16173
  ret i64 %3, !dbg !16174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #17 !dbg !16175 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16177, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i64 %0, metadata !14559, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i32 10000, metadata !14562, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14563, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i8 1, metadata !14564, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i1 false, metadata !14565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16179
  call void @llvm.dbg.value(metadata i1 false, metadata !14566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16179
  call void @llvm.dbg.value(metadata i8 0, metadata !14567, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i1 true, metadata !14568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16179
  call void @llvm.dbg.value(metadata i1 false, metadata !14569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16179
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i64 0, metadata !14570, metadata !DIExpression()), !dbg !16179
  %2 = mul i64 %0, 100, !dbg !16181
  ret i64 %2, !dbg !16183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16186, metadata !DIExpression()), !dbg !16187
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #37, !dbg !16188
  br i1 %2, label %14, label %3, !dbg !16190

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #37, !dbg !16191
  %5 = icmp slt i32 %4, 0, !dbg !16193
  br i1 %5, label %6, label %10, !dbg !16194

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16195
  %8 = load i8, i8* %7, align 1, !dbg !16195
  %9 = icmp eq i8 %8, 16, !dbg !16198
  br i1 %9, label %10, label %14, !dbg !16199

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #37, !dbg !16200
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #37, !dbg !16201
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #33, !dbg !16202, !srcloc !15161
  call void @llvm.dbg.value(metadata i32 %11, metadata !15157, metadata !DIExpression()) #33, !dbg !16206
  %12 = icmp eq i32 %11, 0, !dbg !16207
  br i1 %12, label %13, label %14, !dbg !16208

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #37, !dbg !16209
  br label %14, !dbg !16211

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #11 !dbg !16213 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16215, metadata !DIExpression()), !dbg !16216
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16217
  %3 = load i8, i8* %2, align 1, !dbg !16217
  %4 = and i8 %3, 2, !dbg !16218
  %5 = icmp ne i8 %4, 0, !dbg !16219
  ret i1 %5, !dbg !16220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #11 !dbg !16221 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16226
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16225, metadata !DIExpression()), !dbg !16227
  ret %struct.k_thread* %1, !dbg !16228
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16229 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #33, !dbg !16230, !srcloc !15161
  call void @llvm.dbg.value(metadata i32 %1, metadata !15157, metadata !DIExpression()) #33, !dbg !16233
  %2 = icmp eq i32 %1, 0, !dbg !16234
  br i1 %2, label %3, label %8, !dbg !16235

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16236
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #37, !dbg !16237
  %6 = icmp ne i32 %5, 0, !dbg !16235
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16241, metadata !DIExpression()), !dbg !16243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !16244
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16246, !srcloc !14527
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16246
  call void @llvm.dbg.value(metadata i32 %3, metadata !14524, metadata !DIExpression()) #33, !dbg !16248
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !16248
  call void @llvm.dbg.value(metadata i32 %3, metadata !14518, metadata !DIExpression()) #33, !dbg !16244
  call void @llvm.dbg.value(metadata i32 %3, metadata !16242, metadata !DIExpression()), !dbg !16243
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16249
  %5 = load i8, i8* %4, align 4, !dbg !16249
  %6 = and i8 %5, 1, !dbg !16251
  %7 = icmp eq i8 %6, 0, !dbg !16252
  br i1 %7, label %9, label %8, !dbg !16253

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !16254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !16254
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !16257
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !16259, !srcloc !14553
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #33, !dbg !16260, !srcloc !16262
  br label %24, !dbg !16263

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16264
  %11 = load i8, i8* %10, align 1, !dbg !16264
  %12 = and i8 %11, 8, !dbg !16266
  %13 = icmp eq i8 %12, 0, !dbg !16267
  br i1 %13, label %15, label %14, !dbg !16268

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !16269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !16269
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !16272
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !16274, !srcloc !14553
  br label %24, !dbg !16275

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #37, !dbg !16276
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16277
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16279
  br i1 %17, label %18, label %23, !dbg !16280

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #33, !dbg !16281, !srcloc !15161
  call void @llvm.dbg.value(metadata i32 %19, metadata !15157, metadata !DIExpression()) #33, !dbg !16284
  %20 = icmp eq i32 %19, 0, !dbg !16285
  br i1 %20, label %21, label %23, !dbg !16286

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15121, metadata !DIExpression()) #33, !dbg !16287
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #33, !dbg !16287
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #38, !dbg !16290
  br label %23, !dbg !16291

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14539, metadata !DIExpression()) #33, !dbg !16292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !16292
  call void @llvm.dbg.value(metadata i32 %3, metadata !14547, metadata !DIExpression()) #33, !dbg !16294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !16296, !srcloc !14553
  br label %24, !dbg !16297

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16300, metadata !DIExpression()), !dbg !16301
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16302
  %3 = load i8, i8* %2, align 1, !dbg !16302
  %4 = and i8 %3, 8, !dbg !16304
  %5 = icmp eq i8 %4, 0, !dbg !16305
  br i1 %5, label %6, label %20, !dbg !16306

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16307
  %8 = or i8 %7, 8, !dbg !16307
  store i8 %8, i8* %2, align 1, !dbg !16307
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #37, !dbg !16309
  br i1 %9, label %10, label %12, !dbg !16311

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()) #33, !dbg !16312
  %11 = and i8 %8, 95, !dbg !16315
  store i8 %11, i8* %2, align 1, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()) #33, !dbg !16316
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #38, !dbg !16318
  br label %12, !dbg !16319

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16320
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16320
  %15 = icmp eq %union.anon* %14, null, !dbg !16322
  br i1 %15, label %17, label %16, !dbg !16323

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #37, !dbg !16324
  br label %17, !dbg !16326

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #37, !dbg !16327
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16328
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #37, !dbg !16329
  tail call fastcc void @update_cache(i32 noundef 1) #37, !dbg !16330
  br label %20, !dbg !16331

20:                                               ; preds = %17, %1
  ret void, !dbg !16332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16333 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16337, metadata !DIExpression()), !dbg !16339
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.177(%union.anon* noundef %0) #37, !dbg !16340
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16338, metadata !DIExpression()), !dbg !16339
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16341
  br i1 %3, label %10, label %4, !dbg !16342

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #37, !dbg !16343
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #37, !dbg !16345
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16346, metadata !DIExpression()), !dbg !16352
  call void @llvm.dbg.value(metadata i32 0, metadata !16351, metadata !DIExpression()), !dbg !16352
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16354
  store i32 0, i32* %7, align 4, !dbg !16355
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #37, !dbg !16356
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.177(%union.anon* noundef %0) #37, !dbg !16340
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16338, metadata !DIExpression()), !dbg !16339
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16341
  br i1 %9, label %10, label %4, !dbg !16342, !llvm.loop !16357

10:                                               ; preds = %4, %1
  ret void, !dbg !16359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16360 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16365, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !16369
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16371, !srcloc !14527
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16371
  call void @llvm.dbg.value(metadata i32 %4, metadata !14524, metadata !DIExpression()) #33, !dbg !16373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !16373
  call void @llvm.dbg.value(metadata i32 %4, metadata !14518, metadata !DIExpression()) #33, !dbg !16369
  call void @llvm.dbg.value(metadata i32 %4, metadata !16366, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 0, metadata !16367, metadata !DIExpression()), !dbg !16368
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16374
  %6 = load i8, i8* %5, align 1, !dbg !16374
  %7 = and i8 %6, 8, !dbg !16376
  %8 = icmp eq i8 %7, 0, !dbg !16377
  br i1 %8, label %9, label %24, !dbg !16378

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16365, metadata !DIExpression()), !dbg !16368
  %11 = icmp eq i64 %10, 0, !dbg !16379
  br i1 %11, label %24, label %12, !dbg !16381

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16382
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16384
  br i1 %14, label %24, label %15, !dbg !16385

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16386
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16386
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16387
  %19 = icmp eq %union.anon* %17, %18, !dbg !16388
  br i1 %19, label %24, label %20, !dbg !16389

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16390
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #37, !dbg !16392
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16393
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #37, !dbg !16394
  call void @llvm.dbg.value(metadata i32 %4, metadata !15121, metadata !DIExpression()) #33, !dbg !16395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15126, metadata !DIExpression()) #33, !dbg !16395
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #38, !dbg !16397
  call void @llvm.dbg.value(metadata i32 %23, metadata !16367, metadata !DIExpression()), !dbg !16368
  br label %26, !dbg !16398

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16399
  call void @llvm.dbg.value(metadata i32 %25, metadata !16367, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 %4, metadata !14539, metadata !DIExpression()) #33, !dbg !16400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !16400
  call void @llvm.dbg.value(metadata i32 %4, metadata !14547, metadata !DIExpression()) #33, !dbg !16402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #33, !dbg !16404, !srcloc !14553
  br label %26, !dbg !16405

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16368
  ret i32 %27, !dbg !16406
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16407 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16411, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 %1, metadata !16412, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i8* %2, metadata !16413, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i8 0, metadata !16415, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 0, metadata !16416, metadata !DIExpression()), !dbg !16420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14512, metadata !DIExpression()) #33, !dbg !16421
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16423, !srcloc !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14524, metadata !DIExpression()) #33, !dbg !16425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()) #33, !dbg !16425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()) #33, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16418, metadata !DIExpression()), !dbg !16420
  call void @llvm.dbg.value(metadata i8 poison, metadata !16415, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 undef, metadata !16416, metadata !DIExpression()), !dbg !16420
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #37, !dbg !16426
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16414, metadata !DIExpression()), !dbg !16419
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16429
  br i1 %7, label %12, label %8, !dbg !16431

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16432, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i32 %1, metadata !16438, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata i8* %2, metadata !16439, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16346, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i32 %1, metadata !16351, metadata !DIExpression()), !dbg !16443
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16445
  store i32 %1, i32* %9, align 4, !dbg !16446
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16447
  store i8* %2, i8** %10, align 4, !dbg !16448
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #37, !dbg !16449
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #37, !dbg !16450
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #37, !dbg !16451
  call void @llvm.dbg.value(metadata i8 1, metadata !16415, metadata !DIExpression()), !dbg !16419
  br label %12, !dbg !16452

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16423
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16423
  call void @llvm.dbg.value(metadata i32 %14, metadata !14524, metadata !DIExpression()) #33, !dbg !16425
  call void @llvm.dbg.value(metadata i32 %14, metadata !14518, metadata !DIExpression()) #33, !dbg !16421
  call void @llvm.dbg.value(metadata i32 %14, metadata !16418, metadata !DIExpression()), !dbg !16420
  call void @llvm.dbg.value(metadata i8 poison, metadata !16415, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #33, !dbg !16453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14544, metadata !DIExpression()) #33, !dbg !16453
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #33, !dbg !16455
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #33, !dbg !16457, !srcloc !14553
  call void @llvm.dbg.value(metadata i32 undef, metadata !16416, metadata !DIExpression()), !dbg !16420
  ret i1 %13, !dbg !16458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16459 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16465, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i64 undef, metadata !16467, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16464, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16466, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i8** %4, metadata !16468, metadata !DIExpression()), !dbg !16470
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #37, !dbg !16471
  call void @llvm.dbg.value(metadata i32 %6, metadata !16469, metadata !DIExpression()), !dbg !16470
  %7 = icmp eq i8** %4, null, !dbg !16472
  br i1 %7, label %12, label %8, !dbg !16474

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16475
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16477
  %11 = load i8*, i8** %10, align 4, !dbg !16477
  store i8* %11, i8** %4, align 4, !dbg !16478
  br label %12, !dbg !16479

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16480
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16481 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #38, !dbg !16483
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #38, !dbg !16484
  ret void, !dbg !16485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16486 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16496, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16494, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16495, metadata !DIExpression()), !dbg !16513
  %5 = icmp eq i64 %4, -1, !dbg !16514
  br i1 %5, label %55, label %6, !dbg !16516

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16517
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16518
  call void @llvm.dbg.value(metadata i32 0, metadata !16497, metadata !DIExpression()), !dbg !16519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16527
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16529, !srcloc !16535
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %9, metadata !16532, metadata !DIExpression()) #33, !dbg !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %9, metadata !16526, metadata !DIExpression()) #33, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %9, metadata !16503, metadata !DIExpression()), !dbg !16519
  call void @llvm.dbg.value(metadata i32 undef, metadata !16497, metadata !DIExpression()), !dbg !16519
  %10 = icmp slt i64 %4, -1, !dbg !16537
  br i1 %10, label %11, label %17, !dbg !16538

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16539
  %13 = add i64 %4, %12, !dbg !16540
  %14 = sub i64 -2, %13, !dbg !16540
  call void @llvm.dbg.value(metadata i64 %14, metadata !16507, metadata !DIExpression()), !dbg !16541
  %15 = icmp sgt i64 %14, 1, !dbg !16542
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16542
  br label %22, !dbg !16543

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16544
  %19 = tail call fastcc i32 @elapsed.189() #37, !dbg !16546
  %20 = sext i32 %19 to i64, !dbg !16546
  %21 = add nsw i64 %18, %20, !dbg !16547
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16548
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16549
  store i64 %23, i64* %24, align 8, !dbg !16550
  %25 = tail call fastcc %struct._timeout* @first() #37, !dbg !16551
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16504, metadata !DIExpression()), !dbg !16553
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16554
  br i1 %26, label %42, label %27, !dbg !16554

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16555
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16504, metadata !DIExpression()), !dbg !16553
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16559
  %31 = load i64, i64* %30, align 8, !dbg !16559
  %32 = icmp slt i64 %28, %31, !dbg !16560
  br i1 %32, label %33, label %38, !dbg !16561

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16559
  %35 = sub nsw i64 %31, %28, !dbg !16562
  store i64 %35, i64* %34, align 8, !dbg !16562
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16564
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16565
  tail call fastcc void @sys_dlist_insert.190(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #37, !dbg !16566
  br label %44, !dbg !16567

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16568
  store i64 %39, i64* %24, align 8, !dbg !16568
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #37, !dbg !16569
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16504, metadata !DIExpression()), !dbg !16553
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16554
  br i1 %41, label %42, label %27, !dbg !16554, !llvm.loop !16570

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16572
  tail call fastcc void @sys_dlist_append.191(%struct._dnode* noundef %43) #37, !dbg !16575
  br label %44, !dbg !16576

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #37, !dbg !16577
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16578
  br i1 %46, label %47, label %54, !dbg !16579

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #37, !dbg !16580
  call void @llvm.dbg.value(metadata i32 %48, metadata !16510, metadata !DIExpression()), !dbg !16581
  %49 = icmp ne i32 %48, 0, !dbg !16582
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16584
  br i1 %52, label %54, label %53, !dbg !16584

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #38, !dbg !16585
  br label %54, !dbg !16587

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16588, metadata !DIExpression()) #33, !dbg !16594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !16594
  call void @llvm.dbg.value(metadata i32 %9, metadata !16596, metadata !DIExpression()) #33, !dbg !16599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #33, !dbg !16601, !srcloc !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16497, metadata !DIExpression()), !dbg !16519
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.189() unnamed_addr #1 !dbg !16604 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16607
  %2 = icmp eq i32 %1, 0, !dbg !16608
  br i1 %2, label %3, label %5, !dbg !16607

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #38, !dbg !16609
  br label %5, !dbg !16607

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16607
  ret i32 %6, !dbg !16610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #11 !dbg !16611 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.194() #37, !dbg !16617
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16615, metadata !DIExpression()), !dbg !16618
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16619
  ret %struct._timeout* %2, !dbg !16620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.190(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #13 !dbg !16621 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16625, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16626, metadata !DIExpression()), !dbg !16629
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16630
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16630
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16627, metadata !DIExpression()), !dbg !16629
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16631
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16632
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16633
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16634
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16635
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16636
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16637
  ret void, !dbg !16638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #11 !dbg !16639 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16643, metadata !DIExpression()), !dbg !16645
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16646
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.192(%struct._dnode* noundef %2) #37, !dbg !16647
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16644, metadata !DIExpression()), !dbg !16645
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16648
  ret %struct._timeout* %4, !dbg !16649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.191(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !16650 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16655, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16656, metadata !DIExpression()), !dbg !16658
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16659
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16657, metadata !DIExpression()), !dbg !16658
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16660
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16661
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16662
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16663
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16664
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16665
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16666
  ret void, !dbg !16667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16668 {
  %1 = tail call fastcc %struct._timeout* @first() #37, !dbg !16673
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16670, metadata !DIExpression()), !dbg !16674
  %2 = tail call fastcc i32 @elapsed.189() #37, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %2, metadata !16671, metadata !DIExpression()), !dbg !16674
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16676
  br i1 %3, label %14, label %4, !dbg !16678

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16679
  %6 = load i64, i64* %5, align 8, !dbg !16679
  %7 = sext i32 %2 to i64, !dbg !16680
  %8 = sub nsw i64 %6, %7, !dbg !16681
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16682
  br i1 %9, label %14, label %10, !dbg !16683

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16684
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16684
  %13 = trunc i64 %12 to i32, !dbg !16684
  call void @llvm.dbg.value(metadata i32 %13, metadata !16672, metadata !DIExpression()), !dbg !16674
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16686
  call void @llvm.dbg.value(metadata i32 %15, metadata !16672, metadata !DIExpression()), !dbg !16674
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16687
  %17 = icmp ne i32 %16, 0, !dbg !16689
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16690
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %20, metadata !16672, metadata !DIExpression()), !dbg !16674
  ret i32 %20, !dbg !16691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.192(%struct._dnode* noundef readonly %0) unnamed_addr #11 !dbg !16692 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16696, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16697, metadata !DIExpression()), !dbg !16698
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16699
  br i1 %2, label %5, label %3, !dbg !16700

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.193(%struct._dnode* noundef nonnull %0) #37, !dbg !16701
  br label %5, !dbg !16700

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16700
  ret %struct._dnode* %6, !dbg !16702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.193(%struct._dnode* noundef readonly %0) unnamed_addr #11 !dbg !16703 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16705, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16706, metadata !DIExpression()), !dbg !16707
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16708
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16709
  br i1 %3, label %7, label %4, !dbg !16710

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16711
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16711
  br label %7, !dbg !16710

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16710
  ret %struct._dnode* %8, !dbg !16712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.194() unnamed_addr #11 !dbg !16713 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16717, metadata !DIExpression()), !dbg !16718
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.195() #37, !dbg !16719
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16719
  ret %struct._dnode* %3, !dbg !16720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.195() unnamed_addr #11 !dbg !16721 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16725, metadata !DIExpression()), !dbg !16726
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16727
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16728
  ret i1 %2, !dbg !16729
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16730 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16734, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 -22, metadata !16735, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 0, metadata !16736, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16741
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16743, !srcloc !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #33, !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #33, !dbg !16741
  call void @llvm.dbg.value(metadata i32 undef, metadata !16738, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata i32 -22, metadata !16735, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16735, metadata !DIExpression()), !dbg !16739
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.198(%struct._dnode* noundef %3) #37, !dbg !16746
  br i1 %4, label %5, label %6, !dbg !16750

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #37, !dbg !16751
  call void @llvm.dbg.value(metadata i32 0, metadata !16735, metadata !DIExpression()), !dbg !16739
  br label %6, !dbg !16753

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16739
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16743
  call void @llvm.dbg.value(metadata i32 %8, metadata !16532, metadata !DIExpression()) #33, !dbg !16745
  call void @llvm.dbg.value(metadata i32 %8, metadata !16526, metadata !DIExpression()) #33, !dbg !16741
  call void @llvm.dbg.value(metadata i32 %8, metadata !16738, metadata !DIExpression()), !dbg !16740
  call void @llvm.dbg.value(metadata i32 %7, metadata !16735, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #33, !dbg !16754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16596, metadata !DIExpression()) #33, !dbg !16756
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #33, !dbg !16758, !srcloc !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  ret i32 %7, !dbg !16759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.198(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #11 !dbg !16760 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16766, metadata !DIExpression()), !dbg !16767
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16768
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16768
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16769
  ret i1 %4, !dbg !16770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #13 !dbg !16771 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16773, metadata !DIExpression()), !dbg !16774
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #37, !dbg !16775
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16777
  br i1 %3, label %10, label %4, !dbg !16778

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16779
  %6 = load i64, i64* %5, align 8, !dbg !16779
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16781
  %8 = load i64, i64* %7, align 8, !dbg !16782
  %9 = add nsw i64 %8, %6, !dbg !16782
  store i64 %9, i64* %7, align 8, !dbg !16782
  br label %10, !dbg !16783

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16784
  tail call fastcc void @sys_dlist_remove.199(%struct._dnode* noundef %11) #37, !dbg !16785
  ret void, !dbg !16786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.199(%struct._dnode* nocapture noundef %0) unnamed_addr #13 !dbg !16787 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16791, metadata !DIExpression()), !dbg !16794
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16795
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16795
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16792, metadata !DIExpression()), !dbg !16794
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16796
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16796
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16793, metadata !DIExpression()), !dbg !16794
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16797
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16798
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16799
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16800
  tail call fastcc void @sys_dnode_init.200(%struct._dnode* noundef %0) #37, !dbg !16801
  ret void, !dbg !16802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.200(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !16803 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16805, metadata !DIExpression()), !dbg !16806
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16807
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16808
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16809
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16810
  ret void, !dbg !16811
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16812 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16818, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.value(metadata i64 0, metadata !16819, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.value(metadata i32 0, metadata !16820, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16825
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16827, !srcloc !16535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16827
  call void @llvm.dbg.value(metadata i32 %3, metadata !16532, metadata !DIExpression()) #33, !dbg !16829
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16829
  call void @llvm.dbg.value(metadata i32 %3, metadata !16526, metadata !DIExpression()) #33, !dbg !16825
  call void @llvm.dbg.value(metadata i32 %3, metadata !16822, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata i64 0, metadata !16819, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.value(metadata i32 undef, metadata !16820, metadata !DIExpression()), !dbg !16824
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #37, !dbg !16830
  call void @llvm.dbg.value(metadata i64 %4, metadata !16819, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.value(metadata i32 %3, metadata !16588, metadata !DIExpression()) #33, !dbg !16833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !16833
  call void @llvm.dbg.value(metadata i32 %3, metadata !16596, metadata !DIExpression()) #33, !dbg !16835
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !16837, !srcloc !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16820, metadata !DIExpression()), !dbg !16824
  ret i64 %4, !dbg !16838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16839 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16841, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata i64 0, metadata !16842, metadata !DIExpression()), !dbg !16845
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.201(%struct._timeout* noundef %0) #37, !dbg !16846
  br i1 %2, label %21, label %3, !dbg !16848

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #37, !dbg !16849
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16843, metadata !DIExpression()), !dbg !16850
  call void @llvm.dbg.value(metadata i64 0, metadata !16842, metadata !DIExpression()), !dbg !16845
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16851
  br i1 %5, label %16, label %6, !dbg !16853

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16843, metadata !DIExpression()), !dbg !16850
  call void @llvm.dbg.value(metadata i64 %8, metadata !16842, metadata !DIExpression()), !dbg !16845
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16854
  %10 = load i64, i64* %9, align 8, !dbg !16854
  %11 = add nsw i64 %10, %8, !dbg !16856
  call void @llvm.dbg.value(metadata i64 %11, metadata !16842, metadata !DIExpression()), !dbg !16845
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16857
  br i1 %12, label %16, label %13, !dbg !16859

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #37, !dbg !16860
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16843, metadata !DIExpression()), !dbg !16850
  call void @llvm.dbg.value(metadata i64 %11, metadata !16842, metadata !DIExpression()), !dbg !16845
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16851
  br i1 %15, label %16, label %6, !dbg !16853, !llvm.loop !16861

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16845
  call void @llvm.dbg.value(metadata i64 %17, metadata !16842, metadata !DIExpression()), !dbg !16845
  %18 = tail call fastcc i32 @elapsed.189() #37, !dbg !16863
  %19 = sext i32 %18 to i64, !dbg !16863
  %20 = sub nsw i64 %17, %19, !dbg !16864
  br label %21, !dbg !16865

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16845
  ret i64 %22, !dbg !16866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.201(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #11 !dbg !16867 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16871, metadata !DIExpression()), !dbg !16872
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16873
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.198(%struct._dnode* noundef %2) #37, !dbg !16874
  %4 = xor i1 %3, true, !dbg !16875
  ret i1 %4, !dbg !16876
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16877 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16879, metadata !DIExpression()), !dbg !16884
  call void @llvm.dbg.value(metadata i64 0, metadata !16880, metadata !DIExpression()), !dbg !16884
  call void @llvm.dbg.value(metadata i32 0, metadata !16881, metadata !DIExpression()), !dbg !16885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16886
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16888, !srcloc !16535
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16888
  call void @llvm.dbg.value(metadata i32 %3, metadata !16532, metadata !DIExpression()) #33, !dbg !16890
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16890
  call void @llvm.dbg.value(metadata i32 %3, metadata !16526, metadata !DIExpression()) #33, !dbg !16886
  call void @llvm.dbg.value(metadata i32 %3, metadata !16883, metadata !DIExpression()), !dbg !16885
  call void @llvm.dbg.value(metadata i64 0, metadata !16880, metadata !DIExpression()), !dbg !16884
  call void @llvm.dbg.value(metadata i32 undef, metadata !16881, metadata !DIExpression()), !dbg !16885
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16891
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #37, !dbg !16894
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16880, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16884
  call void @llvm.dbg.value(metadata i32 %3, metadata !16588, metadata !DIExpression()) #33, !dbg !16895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !16895
  call void @llvm.dbg.value(metadata i32 %3, metadata !16596, metadata !DIExpression()) #33, !dbg !16897
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !16899, !srcloc !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16881, metadata !DIExpression()), !dbg !16885
  %6 = add i64 %5, %4, !dbg !16900
  ret i64 %6, !dbg !16901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16902 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16904, metadata !DIExpression()), !dbg !16908
  call void @llvm.dbg.value(metadata i32 0, metadata !16905, metadata !DIExpression()), !dbg !16909
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16910
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16912, !srcloc !16535
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16912
  call void @llvm.dbg.value(metadata i32 %2, metadata !16532, metadata !DIExpression()) #33, !dbg !16914
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16914
  call void @llvm.dbg.value(metadata i32 %2, metadata !16526, metadata !DIExpression()) #33, !dbg !16910
  call void @llvm.dbg.value(metadata i32 %2, metadata !16907, metadata !DIExpression()), !dbg !16909
  call void @llvm.dbg.value(metadata i32 -1, metadata !16904, metadata !DIExpression()), !dbg !16908
  call void @llvm.dbg.value(metadata i32 undef, metadata !16905, metadata !DIExpression()), !dbg !16909
  %3 = tail call fastcc i32 @next_timeout() #37, !dbg !16915
  call void @llvm.dbg.value(metadata i32 %3, metadata !16904, metadata !DIExpression()), !dbg !16908
  call void @llvm.dbg.value(metadata i32 %2, metadata !16588, metadata !DIExpression()) #33, !dbg !16918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !16918
  call void @llvm.dbg.value(metadata i32 %2, metadata !16596, metadata !DIExpression()) #33, !dbg !16920
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #33, !dbg !16922, !srcloc !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16905, metadata !DIExpression()), !dbg !16909
  ret i32 %3, !dbg !16923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16926, metadata !DIExpression()), !dbg !16936
  call void @llvm.dbg.value(metadata i1 %1, metadata !16927, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16936
  call void @llvm.dbg.value(metadata i32 0, metadata !16928, metadata !DIExpression()), !dbg !16937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16938
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16940, !srcloc !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #33, !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #33, !dbg !16938
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()), !dbg !16937
  call void @llvm.dbg.value(metadata i32 undef, metadata !16928, metadata !DIExpression()), !dbg !16937
  %4 = tail call fastcc i32 @next_timeout() #37, !dbg !16943
  call void @llvm.dbg.value(metadata i32 %4, metadata !16931, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata i1 undef, metadata !16934, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16944
  %5 = icmp slt i32 %4, 2, !dbg !16945
  call void @llvm.dbg.value(metadata i1 %5, metadata !16935, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16944
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16946
  call void @llvm.dbg.value(metadata i1 %6, metadata !16934, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16944
  br i1 %7, label %11, label %8, !dbg !16946

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16948
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16948
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #38, !dbg !16950
  br label %11, !dbg !16951

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16940
  call void @llvm.dbg.value(metadata i32 %12, metadata !16532, metadata !DIExpression()) #33, !dbg !16942
  call void @llvm.dbg.value(metadata i32 %12, metadata !16526, metadata !DIExpression()) #33, !dbg !16938
  call void @llvm.dbg.value(metadata i32 %12, metadata !16930, metadata !DIExpression()), !dbg !16937
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #33, !dbg !16952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !16952
  call void @llvm.dbg.value(metadata i32 undef, metadata !16596, metadata !DIExpression()) #33, !dbg !16954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #33, !dbg !16956, !srcloc !16602
  call void @llvm.dbg.value(metadata i32 1, metadata !16928, metadata !DIExpression()), !dbg !16937
  call void @llvm.dbg.value(metadata i32 undef, metadata !16928, metadata !DIExpression()), !dbg !16937
  ret void, !dbg !16957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16962, metadata !DIExpression()), !dbg !16967
  tail call void @z_time_slice(i32 noundef %0) #38, !dbg !16968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16969
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16971, !srcloc !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #33, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #33, !dbg !16969
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  %3 = tail call fastcc %struct._timeout* @first() #37, !dbg !16974
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16975
  br i1 %4, label %28, label %5, !dbg !16976

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16977
  %10 = load i64, i64* %9, align 8, !dbg !16977
  %11 = sext i32 %8 to i64, !dbg !16978
  %12 = icmp sgt i64 %10, %11, !dbg !16979
  br i1 %12, label %26, label %13, !dbg !16980

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16967
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16964, metadata !DIExpression()), !dbg !16981
  %15 = trunc i64 %10 to i32, !dbg !16982
  call void @llvm.dbg.value(metadata i32 %15, metadata !16966, metadata !DIExpression()), !dbg !16981
  %16 = sext i32 %15 to i64, !dbg !16983
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16984
  %18 = add i64 %17, %16, !dbg !16984
  store i64 %18, i64* @curr_tick, align 8, !dbg !16984
  store i64 0, i64* %9, align 8, !dbg !16985
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #37, !dbg !16986
  call void @llvm.dbg.value(metadata i32 %14, metadata !16588, metadata !DIExpression()) #33, !dbg !16987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !16987
  call void @llvm.dbg.value(metadata i32 %14, metadata !16596, metadata !DIExpression()) #33, !dbg !16989
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #33, !dbg !16991, !srcloc !16602
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16992
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16992
  tail call void %20(%struct._timeout* noundef nonnull %6) #38, !dbg !16993
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !16994
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !16996, !srcloc !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #33, !dbg !16998
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !16998
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #33, !dbg !16994
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16999
  %23 = sub nsw i32 %22, %15, !dbg !16999
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  %24 = tail call fastcc %struct._timeout* @first() #37, !dbg !16974
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16975
  br i1 %25, label %28, label %5, !dbg !16976, !llvm.loop !17000

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17002
  store i64 %27, i64* %9, align 8, !dbg !17002
  br label %32, !dbg !17005

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16967
  %31 = sext i32 %30 to i64, !dbg !17006
  br label %32, !dbg !17006

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17006
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16967
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17007
  %37 = add i64 %36, %33, !dbg !17007
  store i64 %37, i64* @curr_tick, align 8, !dbg !17007
  store i32 0, i32* @announce_remaining, align 4, !dbg !17008
  %38 = tail call fastcc i32 @next_timeout() #37, !dbg !17009
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #38, !dbg !17010
  call void @llvm.dbg.value(metadata i32 %35, metadata !16588, metadata !DIExpression()) #33, !dbg !17011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !17011
  call void @llvm.dbg.value(metadata i32 %35, metadata !16596, metadata !DIExpression()) #33, !dbg !17013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #33, !dbg !17015, !srcloc !16602
  ret void, !dbg !17016
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17017 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17021, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.value(metadata i32 0, metadata !17022, metadata !DIExpression()), !dbg !17026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16520, metadata !DIExpression()) #33, !dbg !17027
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !17029, !srcloc !16535
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17029
  call void @llvm.dbg.value(metadata i32 %2, metadata !16532, metadata !DIExpression()) #33, !dbg !17031
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #33, !dbg !17031
  call void @llvm.dbg.value(metadata i32 %2, metadata !16526, metadata !DIExpression()) #33, !dbg !17027
  call void @llvm.dbg.value(metadata i32 %2, metadata !17024, metadata !DIExpression()), !dbg !17026
  call void @llvm.dbg.value(metadata i64 0, metadata !17021, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.value(metadata i32 undef, metadata !17022, metadata !DIExpression()), !dbg !17026
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17032
  %4 = tail call fastcc i32 @elapsed.189() #37, !dbg !17035
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17021, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17025
  call void @llvm.dbg.value(metadata i32 %2, metadata !16588, metadata !DIExpression()) #33, !dbg !17036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16593, metadata !DIExpression()) #33, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %2, metadata !16596, metadata !DIExpression()) #33, !dbg !17038
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #33, !dbg !17040, !srcloc !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !17022, metadata !DIExpression()), !dbg !17026
  %5 = sext i32 %4 to i64, !dbg !17035
  %6 = add i64 %3, %5, !dbg !17041
  ret i64 %6, !dbg !17042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17043 {
  %1 = tail call i64 @sys_clock_tick_get() #37, !dbg !17044
  %2 = trunc i64 %1 to i32, !dbg !17045
  ret i32 %2, !dbg !17046
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17047 {
  %1 = tail call i64 @sys_clock_tick_get() #37, !dbg !17048
  ret i64 %1, !dbg !17049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17052, metadata !DIExpression()), !dbg !17059
  %2 = icmp eq i32 %0, 0, !dbg !17060
  br i1 %2, label %10, label %3, !dbg !17062

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #37, !dbg !17063
  call void @llvm.dbg.value(metadata i32 %4, metadata !17053, metadata !DIExpression()), !dbg !17059
  %5 = mul i32 %0, 84, !dbg !17064
  call void @llvm.dbg.value(metadata i32 %5, metadata !17054, metadata !DIExpression()), !dbg !17059
  br label %6, !dbg !17065

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #37, !dbg !17066
  call void @llvm.dbg.value(metadata i32 %7, metadata !17055, metadata !DIExpression()), !dbg !17067
  %8 = sub i32 %7, %4, !dbg !17068
  %9 = icmp ult i32 %8, %5, !dbg !17070
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17072 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #37, !dbg !17073
  ret i32 %1, !dbg !17074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17075 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #38, !dbg !17077
  ret i32 %1, !dbg !17078
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17079 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17083, metadata !DIExpression()), !dbg !17085
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17086

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #37, !dbg !17087
  br label %14, !dbg !17091

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17084, metadata !DIExpression()), !dbg !17085
  %6 = icmp slt i64 %2, -1, !dbg !17092
  br i1 %6, label %7, label %9, !dbg !17095

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17096
  br label %14, !dbg !17097

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #37, !dbg !17099
  %11 = icmp ugt i64 %2, 1, !dbg !17100
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17100
  %13 = add nsw i64 %10, %12, !dbg !17101
  br label %14, !dbg !17102

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17103
  ret i64 %15, !dbg !17104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !17105 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17107, metadata !DIExpression()), !dbg !17118
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !17119
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !17108, metadata !DIExpression()), !dbg !17118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17120, metadata !DIExpression()) #33, !dbg !17127
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !17129, !srcloc !17135
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17129
  call void @llvm.dbg.value(metadata i32 %4, metadata !17132, metadata !DIExpression()) #33, !dbg !17136
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()) #33, !dbg !17136
  call void @llvm.dbg.value(metadata i32 %4, metadata !17126, metadata !DIExpression()) #33, !dbg !17127
  call void @llvm.dbg.value(metadata i32 %4, metadata !17110, metadata !DIExpression()), !dbg !17118
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !17137
  %6 = load i64, i64* %5, align 8, !dbg !17137
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !17138

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !17115, metadata !DIExpression()), !dbg !17139
  %8 = tail call fastcc i64 @k_uptime_ticks() #37, !dbg !17140
  %9 = add nsw i64 %8, 1, !dbg !17140
  %10 = load i64, i64* %5, align 8, !dbg !17140
  %11 = add nsw i64 %9, %10, !dbg !17140
  %12 = icmp sgt i64 %11, 0, !dbg !17140
  br i1 %12, label %13, label %18, !dbg !17140

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #37, !dbg !17140
  %15 = load i64, i64* %5, align 8, !dbg !17140
  %16 = add i64 %14, %15, !dbg !17140
  %17 = sub i64 -3, %16, !dbg !17140
  br label %18, !dbg !17140

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !17115, metadata !DIExpression()), !dbg !17139
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !17141
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #38, !dbg !17141
  br label %21, !dbg !17142

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !17143
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !17143
  %24 = load i32, i32* %23, align 8, !dbg !17144
  %25 = add i32 %24, 1, !dbg !17144
  store i32 %25, i32* %23, align 8, !dbg !17144
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !17145
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !17145
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17145
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !17147
  br i1 %29, label %34, label %30, !dbg !17148

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !17149, metadata !DIExpression()) #33, !dbg !17155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17154, metadata !DIExpression()) #33, !dbg !17155
  call void @llvm.dbg.value(metadata i32 %4, metadata !17158, metadata !DIExpression()) #33, !dbg !17161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #33, !dbg !17163, !srcloc !17164
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !17165
  tail call void %31(%struct.k_timer* noundef nonnull %2) #38, !dbg !17166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17120, metadata !DIExpression()) #33, !dbg !17167
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !17169, !srcloc !17135
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %33, metadata !17132, metadata !DIExpression()) #33, !dbg !17171
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()) #33, !dbg !17171
  call void @llvm.dbg.value(metadata i32 %33, metadata !17126, metadata !DIExpression()) #33, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %33, metadata !17110, metadata !DIExpression()), !dbg !17118
  br label %34, !dbg !17172

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !17118
  call void @llvm.dbg.value(metadata i32 %35, metadata !17110, metadata !DIExpression()), !dbg !17118
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !17173
  %37 = bitcast %struct._timeout* %36 to %union.anon*, !dbg !17173
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.208(%union.anon* noundef nonnull %37) #37, !dbg !17174
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17109, metadata !DIExpression()), !dbg !17118
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !17175
  br i1 %39, label %40, label %41, !dbg !17177

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !17149, metadata !DIExpression()) #33, !dbg !17178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17154, metadata !DIExpression()) #33, !dbg !17178
  call void @llvm.dbg.value(metadata i32 %35, metadata !17158, metadata !DIExpression()) #33, !dbg !17181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #33, !dbg !17183, !srcloc !17164
  br label %43, !dbg !17184

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #38, !dbg !17185
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !17186, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata i32 0, metadata !17191, metadata !DIExpression()), !dbg !17192
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !17194
  store i32 0, i32* %42, align 4, !dbg !17195
  call void @llvm.dbg.value(metadata i32 %35, metadata !17149, metadata !DIExpression()) #33, !dbg !17196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17154, metadata !DIExpression()) #33, !dbg !17196
  call void @llvm.dbg.value(metadata i32 %35, metadata !17158, metadata !DIExpression()) #33, !dbg !17198
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #33, !dbg !17200, !srcloc !17164
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #38, !dbg !17201
  br label %43, !dbg !17202

43:                                               ; preds = %41, %40
  ret void, !dbg !17202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !17203 {
  tail call void asm sideeffect "", "~{memory}"() #33, !dbg !17204, !srcloc !17206
  %1 = tail call i64 @z_impl_k_uptime_ticks() #38, !dbg !17207
  ret i64 %1, !dbg !17208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.208(%union.anon* noundef readonly %0) unnamed_addr #11 !dbg !17209 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17213, metadata !DIExpression()), !dbg !17214
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17215
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef %2) #37, !dbg !17216
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17217
  ret %struct.k_thread* %4, !dbg !17218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17219 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17224, metadata !DIExpression()), !dbg !17225
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.210(%struct._dnode* noundef %0) #37, !dbg !17226
  br i1 %2, label %6, label %3, !dbg !17226

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17227
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17227
  br label %6, !dbg !17226

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17226
  ret %struct._dnode* %7, !dbg !17228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.210(%struct._dnode* noundef readonly %0) unnamed_addr #11 !dbg !17229 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17233, metadata !DIExpression()), !dbg !17234
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17235
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17235
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17236
  ret i1 %4, !dbg !17237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #10 !dbg !17238 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17244, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !17246, metadata !DIExpression()), !dbg !17247
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !17248
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !17249
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17250
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !17251
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17252
  store i32 0, i32* %6, align 8, !dbg !17253
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17254
  tail call fastcc void @z_waitq_init.213(%union.anon* noundef nonnull %7) #37, !dbg !17257
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17258
  tail call fastcc void @z_init_timeout.214(%struct._timeout* noundef %8) #37, !dbg !17259
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !17260
  store i8* null, i8** %9, align 4, !dbg !17261
  ret void, !dbg !17262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.213(%union.anon* noundef %0) unnamed_addr #10 !dbg !17263 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17267, metadata !DIExpression()), !dbg !17268
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17269
  tail call fastcc void @sys_dlist_init.216(%struct._dnode* noundef %2) #37, !dbg !17270
  ret void, !dbg !17271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.214(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !17272 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17274, metadata !DIExpression()), !dbg !17275
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17276
  tail call fastcc void @sys_dnode_init.215(%struct._dnode* noundef %2) #37, !dbg !17277
  ret void, !dbg !17278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.215(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !17279 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17283, metadata !DIExpression()), !dbg !17284
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17285
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17286
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17287
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17288
  ret void, !dbg !17289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.216(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17290 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17294, metadata !DIExpression()), !dbg !17295
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17296
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17297
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17298
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17299
  ret void, !dbg !17300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17301 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17306, metadata !DIExpression()), !dbg !17308
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17307, metadata !DIExpression()), !dbg !17308
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17305, metadata !DIExpression()), !dbg !17308
  %6 = icmp eq i64 %4, -1, !dbg !17309
  br i1 %6, label %23, label %7, !dbg !17311

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !17312
  %9 = icmp sgt i64 %5, 2, !dbg !17312
  %10 = select i1 %9, i64 %5, i64 2, !dbg !17312
  %11 = add nsw i64 %10, -1, !dbg !17312
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !17312
  call void @llvm.dbg.value(metadata i64 %12, metadata !17307, metadata !DIExpression()), !dbg !17308
  %13 = icmp sgt i64 %4, -2, !dbg !17314
  %14 = icmp sgt i64 %4, 1, !dbg !17316
  %15 = select i1 %14, i64 %4, i64 1, !dbg !17316
  %16 = add nsw i64 %15, -1, !dbg !17316
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !17316
  call void @llvm.dbg.value(metadata i64 %17, metadata !17306, metadata !DIExpression()), !dbg !17308
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17317
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #38, !dbg !17318
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !17319
  store i64 %12, i64* %20, align 8, !dbg !17319
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17320
  store i32 0, i32* %21, align 8, !dbg !17321
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !17322
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #38, !dbg !17322
  br label %23, !dbg !17323

23:                                               ; preds = %3, %7
  ret void, !dbg !17323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17324 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17326, metadata !DIExpression()), !dbg !17331
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17332
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #38, !dbg !17333
  %4 = icmp eq i32 %3, 0, !dbg !17334
  call void @llvm.dbg.value(metadata i1 %4, metadata !17327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17331
  br i1 %4, label %5, label %15, !dbg !17335

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !17336
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !17336
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !17338
  br i1 %8, label %10, label %9, !dbg !17339

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #38, !dbg !17340
  br label %10, !dbg !17342

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17343
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef nonnull %11) #38, !dbg !17344
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !17328, metadata !DIExpression()), !dbg !17345
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !17346
  br i1 %13, label %15, label %14, !dbg !17348

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #38, !dbg !17349
  tail call fastcc void @z_reschedule_unlocked.219() #37, !dbg !17351
  br label %15, !dbg !17352

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !17353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.219() unnamed_addr #1 !dbg !17354 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !17355, !srcloc !17135
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17355
  call void @llvm.dbg.value(metadata i32 %2, metadata !17132, metadata !DIExpression()) #33, !dbg !17357
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()) #33, !dbg !17357
  tail call void @z_reschedule_irqlock(i32 noundef %2) #38, !dbg !17358
  ret void, !dbg !17359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !17360 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17364, metadata !DIExpression()), !dbg !17367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17120, metadata !DIExpression()) #33, !dbg !17368
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !17370, !srcloc !17135
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17370
  call void @llvm.dbg.value(metadata i32 %3, metadata !17132, metadata !DIExpression()) #33, !dbg !17372
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()) #33, !dbg !17372
  call void @llvm.dbg.value(metadata i32 %3, metadata !17126, metadata !DIExpression()) #33, !dbg !17368
  call void @llvm.dbg.value(metadata i32 %3, metadata !17365, metadata !DIExpression()), !dbg !17367
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17373
  %5 = load i32, i32* %4, align 8, !dbg !17373
  call void @llvm.dbg.value(metadata i32 %5, metadata !17366, metadata !DIExpression()), !dbg !17367
  store i32 0, i32* %4, align 8, !dbg !17374
  call void @llvm.dbg.value(metadata i32 %3, metadata !17149, metadata !DIExpression()) #33, !dbg !17375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17154, metadata !DIExpression()) #33, !dbg !17375
  call void @llvm.dbg.value(metadata i32 %3, metadata !17158, metadata !DIExpression()) #33, !dbg !17377
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #33, !dbg !17379, !srcloc !17164
  ret i32 %5, !dbg !17380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !17381 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !17383, metadata !DIExpression()), !dbg !17386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17120, metadata !DIExpression()) #33, !dbg !17387
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !17389, !srcloc !17135
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17389
  call void @llvm.dbg.value(metadata i32 %3, metadata !17132, metadata !DIExpression()) #33, !dbg !17391
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()) #33, !dbg !17391
  call void @llvm.dbg.value(metadata i32 %3, metadata !17126, metadata !DIExpression()) #33, !dbg !17387
  call void @llvm.dbg.value(metadata i32 %3, metadata !17384, metadata !DIExpression()), !dbg !17386
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !17392
  %5 = load i32, i32* %4, align 8, !dbg !17392
  call void @llvm.dbg.value(metadata i32 %5, metadata !17385, metadata !DIExpression()), !dbg !17386
  %6 = icmp eq i32 %5, 0, !dbg !17393
  br i1 %6, label %7, label %17, !dbg !17395

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !17396
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.222(%struct._timeout* noundef %8) #37, !dbg !17399
  br i1 %9, label %17, label %10, !dbg !17400

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !17401
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17403
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.223, [1 x i32] %12, %union.anon* noundef nonnull %11, [1 x i64] [i64 -1]) #38, !dbg !17403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17120, metadata !DIExpression()) #33, !dbg !17404
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #33, !dbg !17406, !srcloc !17135
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !17406
  call void @llvm.dbg.value(metadata i32 %15, metadata !17132, metadata !DIExpression()) #33, !dbg !17408
  call void @llvm.dbg.value(metadata i32 undef, metadata !17133, metadata !DIExpression()) #33, !dbg !17408
  call void @llvm.dbg.value(metadata i32 %15, metadata !17126, metadata !DIExpression()) #33, !dbg !17404
  call void @llvm.dbg.value(metadata i32 %15, metadata !17384, metadata !DIExpression()), !dbg !17386
  %16 = load i32, i32* %4, align 8, !dbg !17409
  call void @llvm.dbg.value(metadata i32 %16, metadata !17385, metadata !DIExpression()), !dbg !17386
  br label %17, !dbg !17410

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !17386
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !17386
  call void @llvm.dbg.value(metadata i32 %19, metadata !17384, metadata !DIExpression()), !dbg !17386
  call void @llvm.dbg.value(metadata i32 %18, metadata !17385, metadata !DIExpression()), !dbg !17386
  store i32 0, i32* %4, align 8, !dbg !17411
  call void @llvm.dbg.value(metadata i32 %19, metadata !17149, metadata !DIExpression()) #33, !dbg !17412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17154, metadata !DIExpression()) #33, !dbg !17412
  call void @llvm.dbg.value(metadata i32 %19, metadata !17158, metadata !DIExpression()) #33, !dbg !17414
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #33, !dbg !17416, !srcloc !17164
  ret i32 %18, !dbg !17417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.222(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #11 !dbg !17418 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17424, metadata !DIExpression()), !dbg !17425
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17426
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.224(%struct._dnode* noundef %2) #37, !dbg !17427
  %4 = xor i1 %3, true, !dbg !17428
  ret i1 %4, !dbg !17429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.224(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #11 !dbg !17430 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17436, metadata !DIExpression()), !dbg !17437
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17438
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17438
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17439
  ret i1 %4, !dbg !17440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17441 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.227, i32 0, i32 0)) #38, !dbg !17443
  ret void, !dbg !17444
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { mustprogress noinline norecurse noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree nosync nounwind willreturn }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { argmemonly nofree nounwind willreturn writeonly }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nobuiltin nofree noinline nounwind optsize willreturn allocsize(0) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nobuiltin noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #27 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #28 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #29 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #30 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #31 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #32 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #33 = { nounwind }
attributes #34 = { optsize }
attributes #35 = { nounwind optsize }
attributes #36 = { builtin nounwind optsize }
attributes #37 = { nobuiltin optsize "no-builtins" }
attributes #38 = { nobuiltin nounwind optsize "no-builtins" }
attributes #39 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #40 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #41 = { nounwind readnone }
attributes #42 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!926, !2, !2824, !27, !206, !2826, !2828, !2861, !2899, !287, !340, !2901, !2903, !2905, !369, !2908, !2918, !2929, !2975, !2977, !3005, !3033, !3076, !3078, !3149, !3194, !375, !514, !550, !3222, !689, !699, !724, !964, !3227, !1103, !1169, !1475, !1752, !3268, !1867, !1957, !3270, !3333, !3400, !2011, !3403, !2018, !2386, !3421, !2406, !2516, !2541, !3423, !2658, !2699, !3426}
!llvm.ident = !{!3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428, !3428}
!llvm.module.flags = !{!3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "coop_thread", scope: !27, file: !45, line: 40, type: !120, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_11, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !29, globals: !105, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/cpp/cpp_synchronization/src/main.cpp", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!29 = !{!30, !34, !40, !42, !44, !48}
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !31, line: 46, baseType: !32)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !33)
!33 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !35, line: 46, baseType: !36)
!35 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32)
!37 = !DISubroutineType(types: !38)
!38 = !{null, !39, !39, !39}
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !41)
!41 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !43)
!43 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!44 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "cpp_semaphore", file: !45, line: 50, size: 160, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !46, vtableHolder: !48)
!45 = !DIFile(filename: "zephyr/samples/subsys/cpp/cpp_synchronization/src/main.cpp", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!46 = !{!47, !66, !93, !97, !98, !101, !104}
!47 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !44, baseType: !48, flags: DIFlagPublic, extraData: i32 0)
!48 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "semaphore", file: !45, line: 29, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !49, vtableHolder: !48, identifier: "_ZTS9semaphore")
!49 = !{!50, !56, !60, !63}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$semaphore", scope: !45, file: !45, baseType: !51, size: 32, flags: DIFlagArtificial)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !53, size: 32)
!53 = !DISubroutineType(types: !54)
!54 = !{!55}
!55 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!56 = !DISubprogram(name: "wait", linkageName: "_ZN9semaphore4waitEv", scope: !48, file: !45, line: 31, type: !57, scopeLine: 31, containingType: !48, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!57 = !DISubroutineType(types: !58)
!58 = !{!55, !59}
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!60 = !DISubprogram(name: "wait", linkageName: "_ZN9semaphore4waitEi", scope: !48, file: !45, line: 32, type: !61, scopeLine: 32, containingType: !48, virtualIndex: 1, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!61 = !DISubroutineType(types: !62)
!62 = !{!55, !59, !55}
!63 = !DISubprogram(name: "give", linkageName: "_ZN9semaphore4giveEv", scope: !48, file: !45, line: 33, type: !64, scopeLine: 33, containingType: !48, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!64 = !DISubroutineType(types: !65)
!65 = !{null, !59}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_sema_internal", scope: !44, file: !45, line: 52, baseType: !67, size: 128, offset: 32, flags: DIFlagProtected)
!67 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !68, line: 2909, size: 128, flags: DIFlagTypePassByValue, elements: !69, identifier: "_ZTS5k_sem")
!68 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!69 = !{!70, !91, !92}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !67, file: !68, line: 2910, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !73)
!72 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!73 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, flags: DIFlagTypePassByValue, elements: !74, identifier: "_ZTS9_wait_q_t")
!74 = !{!75}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !73, file: !72, line: 232, baseType: !76, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !78)
!77 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!78 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, flags: DIFlagTypePassByValue, elements: !79, identifier: "_ZTS6_dnode")
!79 = !{!80, !86}
!80 = !DIDerivedType(tag: DW_TAG_member, scope: !78, file: !77, line: 38, baseType: !81, size: 32)
!81 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !78, file: !77, line: 38, size: 32, flags: DIFlagExportSymbols | DIFlagTypePassByValue, elements: !82, identifier: "_ZTSN6_dnodeUt_E")
!82 = !{!83, !85}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !81, file: !77, line: 39, baseType: !84, size: 32)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 32)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !81, file: !77, line: 40, baseType: !84, size: 32)
!86 = !DIDerivedType(tag: DW_TAG_member, scope: !78, file: !77, line: 42, baseType: !87, size: 32, offset: 32)
!87 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !78, file: !77, line: 42, size: 32, flags: DIFlagExportSymbols | DIFlagTypePassByValue, elements: !88, identifier: "_ZTSN6_dnodeUt0_E")
!88 = !{!89, !90}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !87, file: !77, line: 43, baseType: !84, size: 32)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !87, file: !77, line: 44, baseType: !84, size: 32)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !67, file: !68, line: 2911, baseType: !41, size: 32, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !67, file: !68, line: 2912, baseType: !41, size: 32, offset: 96)
!93 = !DISubprogram(name: "cpp_semaphore", scope: !44, file: !45, line: 54, type: !94, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!94 = !DISubroutineType(types: !95)
!95 = !{null, !96}
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!97 = !DISubprogram(name: "~cpp_semaphore", scope: !44, file: !45, line: 55, type: !94, scopeLine: 55, containingType: !44, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!98 = !DISubprogram(name: "wait", linkageName: "_ZN13cpp_semaphore4waitEv", scope: !44, file: !45, line: 56, type: !99, scopeLine: 56, containingType: !44, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!99 = !DISubroutineType(types: !100)
!100 = !{!55, !96}
!101 = !DISubprogram(name: "wait", linkageName: "_ZN13cpp_semaphore4waitEi", scope: !44, file: !45, line: 57, type: !102, scopeLine: 57, containingType: !44, virtualIndex: 1, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!102 = !DISubroutineType(types: !103)
!103 = !{!55, !96, !55}
!104 = !DISubprogram(name: "give", linkageName: "_ZN13cpp_semaphore4giveEv", scope: !44, file: !45, line: 58, type: !94, scopeLine: 58, containingType: !44, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!105 = !{!25, !106, !116, !118}
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "coop_stack", scope: !27, file: !45, line: 41, type: !108, isLocal: false, isDefinition: true, align: 512)
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 16512, elements: !114)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !110, line: 47, size: 8, flags: DIFlagTypePassByValue, elements: !111, identifier: "_ZTS22z_thread_stack_element")
!110 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !{!112}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !109, file: !110, line: 48, baseType: !113, size: 8)
!113 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!114 = !{!115}
!115 = !DISubrange(count: 2064)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "sem_main", scope: !27, file: !45, line: 110, type: !44, isLocal: false, isDefinition: true)
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "sem_coop", scope: !27, file: !45, line: 111, type: !44, isLocal: false, isDefinition: true)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, flags: DIFlagTypePassByValue, elements: !122, identifier: "_ZTS8k_thread")
!121 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123, !172, !185, !186, !187, !188, !196, !199}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !120, file: !121, line: 247, baseType: !124, size: 384)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, flags: DIFlagTypePassByValue, elements: !125, identifier: "_ZTS12_thread_base")
!125 = !{!126, !140, !142, !145, !146, !159, !160, !161}
!126 = !DIDerivedType(tag: DW_TAG_member, scope: !124, file: !121, line: 60, baseType: !127, size: 64)
!127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !124, file: !121, line: 60, size: 64, flags: DIFlagExportSymbols | DIFlagTypePassByValue, elements: !128, identifier: "_ZTSN12_thread_baseUt_E")
!128 = !{!129, !131}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !127, file: !121, line: 61, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !78)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !127, file: !121, line: 62, baseType: !132, size: 64)
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, flags: DIFlagTypePassByValue, elements: !134, identifier: "_ZTS6rbnode")
!133 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !{!135}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !132, file: !133, line: 50, baseType: !136, size: 64)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !138)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!138 = !{!139}
!139 = !DISubrange(count: 2)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !124, file: !121, line: 68, baseType: !141, size: 32, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !124, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !144)
!144 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !124, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !124, file: !121, line: 90, baseType: !147, size: 16, offset: 112)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !124, file: !121, line: 90, size: 16, flags: DIFlagExportSymbols | DIFlagTypePassByValue, elements: !148, identifier: "_ZTSN12_thread_baseUt0_E")
!148 = !{!149, !156}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !121, line: 91, baseType: !150, size: 16)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !147, file: !121, line: 91, size: 16, flags: DIFlagExportSymbols | DIFlagTypePassByValue, elements: !151, identifier: "_ZTSN12_thread_baseUt0_Ut_E")
!151 = !{!152, !155}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !150, file: !121, line: 96, baseType: !153, size: 8)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !154)
!154 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !150, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !147, file: !121, line: 100, baseType: !157, size: 16)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !158)
!158 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !124, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !124, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !124, file: !121, line: 131, baseType: !162, size: 192, offset: 192)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, flags: DIFlagTypePassByValue, elements: !163, identifier: "_ZTS8_timeout")
!163 = !{!164, !165, !171}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !162, file: !72, line: 245, baseType: !130, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !162, file: !72, line: 246, baseType: !166, size: 32, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !167)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!168 = !DISubroutineType(types: !169)
!169 = !{null, !170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !162, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !120, file: !121, line: 250, baseType: !173, size: 288, offset: 384)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, flags: DIFlagTypePassByValue, elements: !175, identifier: "_ZTS13_callee_saved")
!174 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183, !184}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !173, file: !174, line: 26, baseType: !40, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !173, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !173, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !173, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !173, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !173, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !173, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !173, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !173, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !120, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !120, file: !121, line: 256, baseType: !71, size: 64, offset: 704)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !120, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !120, file: !121, line: 300, baseType: !189, size: 96, offset: 800)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, flags: DIFlagTypePassByValue, elements: !190, identifier: "_ZTS18_thread_stack_info")
!190 = !{!191, !192, !195}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !189, file: !121, line: 153, baseType: !22, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !189, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !194, line: 214, baseType: !41)
!194 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!195 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !189, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !120, file: !121, line: 325, baseType: !197, size: 32, offset: 896)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 32)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, flags: DIFlagFwdDecl, identifier: "_ZTS6k_heap")
!199 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !120, file: !121, line: 343, baseType: !200, size: 64, offset: 928)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, flags: DIFlagTypePassByValue, elements: !201, identifier: "_ZTS12_thread_arch")
!201 = !{!202, !203}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !200, file: !174, line: 63, baseType: !40, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !200, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "_char_out", scope: !206, file: !281, line: 54, type: !282, isLocal: false, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !279, globals: !280, splitDebugInlining: false, nameTableKind: None)
!207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!208 = !{!209}
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !210, line: 27, baseType: !41, size: 32, elements: !211)
!210 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278}
!212 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!213 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!214 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!215 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!216 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!217 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!218 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!219 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!220 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!221 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!222 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!223 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!224 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!225 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!226 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!227 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!228 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!229 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!230 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!231 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!232 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!233 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!234 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!235 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!236 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!237 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!238 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!239 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!240 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!241 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!242 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!243 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!244 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!245 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!246 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!247 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!248 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!249 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!250 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!251 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!252 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!253 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!254 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!255 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!256 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!257 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!258 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!259 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!260 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!261 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!262 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!263 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!264 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!265 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!266 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!267 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!268 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!269 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!270 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!271 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!272 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!273 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!274 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!275 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!276 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!277 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!278 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!279 = !{!39, !55}
!280 = !{!204}
!281 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!283 = !DISubroutineType(types: !284)
!284 = !{!55, !55}
!285 = !DIGlobalVariableExpression(var: !286, expr: !DIExpression())
!286 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !287, file: !304, line: 56, type: !305, isLocal: true, isDefinition: true, align: 32)
!287 = distinct !DICompileUnit(language: DW_LANG_C99, file: !288, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !289, globals: !303, splitDebugInlining: false, nameTableKind: None)
!288 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!289 = !{!290}
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !292, line: 407, baseType: !293)
!292 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 398, size: 224, elements: !294)
!294 = !{!295, !297, !298, !299, !300, !301, !302}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !293, file: !292, line: 400, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !40)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !293, file: !292, line: 401, baseType: !296, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !293, file: !292, line: 402, baseType: !296, size: 32, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !293, file: !292, line: 403, baseType: !296, size: 32, offset: 96)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !293, file: !292, line: 404, baseType: !296, size: 32, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !293, file: !292, line: 405, baseType: !296, size: 32, offset: 160)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !293, file: !292, line: 406, baseType: !296, size: 32, offset: 192)
!303 = !{!285}
!304 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !337}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !306, file: !307, line: 60, baseType: !310, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DISubroutineType(types: !312)
!312 = !{!55, !313}
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318, !321, !322, !323, !330, !331}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !315, file: !316, line: 380, baseType: !319, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !315, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !315, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !315, file: !316, line: 386, baseType: !324, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !326)
!326 = !{!327, !328}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !325, file: !316, line: 359, baseType: !143, size: 8)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !325, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!329 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !315, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !316, line: 43, baseType: !335)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !336)
!336 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !306, file: !307, line: 65, baseType: !313, size: 32, offset: 32)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !340, file: !343, line: 71, type: !344, isLocal: true, isDefinition: true, align: 32)
!340 = distinct !DICompileUnit(language: DW_LANG_C99, file: !341, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !342, splitDebugInlining: false, nameTableKind: None)
!341 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!342 = !{!338}
!343 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !346)
!346 = !{!347, !366}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !345, file: !307, line: 60, baseType: !348, size: 32)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DISubroutineType(types: !350)
!350 = !{!55, !351}
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !353)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !354)
!354 = !{!355, !356, !357, !358, !364, !365}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !353, file: !316, line: 380, baseType: !319, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !353, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !353, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !353, file: !316, line: 386, baseType: !359, size: 32, offset: 96)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !361)
!361 = !{!362, !363}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !360, file: !316, line: 359, baseType: !143, size: 8)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !360, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !353, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !353, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !345, file: !307, line: 65, baseType: !351, size: 32, offset: 32)
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(name: "__dso_handle", scope: !369, file: !372, line: 15, type: !39, isLocal: false, isDefinition: true)
!369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !370, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !371, splitDebugInlining: false, nameTableKind: None)
!370 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/cpp/cpp_dtors.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!371 = !{!367}
!372 = !DIFile(filename: "zephyr/subsys/cpp/cpp_dtors.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!373 = !DIGlobalVariableExpression(var: !374, expr: !DIExpression())
!374 = distinct !DIGlobalVariable(name: "static_regions", scope: !375, file: !382, line: 62, type: !510, isLocal: true, isDefinition: true)
!375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !376, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !377, globals: !378, splitDebugInlining: false, nameTableKind: None)
!376 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!377 = !{!193, !55, !40, !39}
!378 = !{!379, !373}
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !381, file: !382, line: 198, type: !496, isLocal: true, isDefinition: true)
!381 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !382, file: !382, line: 175, type: !383, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !375, retainedNodes: !491)
!382 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!383 = !DISubroutineType(types: !384)
!384 = !{null, !385}
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 32)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !387)
!387 = !{!388, !446, !458, !459, !460, !461, !467, !486}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !386, file: !121, line: 247, baseType: !389, size: 384)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !390)
!390 = !{!391, !415, !422, !423, !424, !433, !434, !435}
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !121, line: 60, baseType: !392, size: 64)
!392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !121, line: 60, size: 64, elements: !393)
!393 = !{!394, !409}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !392, file: !121, line: 61, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !397)
!397 = !{!398, !404}
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !396, file: !77, line: 38, baseType: !399, size: 32)
!399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !396, file: !77, line: 38, size: 32, elements: !400)
!400 = !{!401, !403}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !399, file: !77, line: 39, baseType: !402, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !399, file: !77, line: 40, baseType: !402, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, scope: !396, file: !77, line: 42, baseType: !405, size: 32, offset: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !396, file: !77, line: 42, size: 32, elements: !406)
!406 = !{!407, !408}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !405, file: !77, line: 43, baseType: !402, size: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !405, file: !77, line: 44, baseType: !402, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !392, file: !121, line: 62, baseType: !410, size: 64)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !411)
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !410, file: !133, line: 50, baseType: !413, size: 64)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 64, elements: !138)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !389, file: !121, line: 68, baseType: !416, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !419)
!419 = !{!420}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !418, file: !72, line: 232, baseType: !421, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !396)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !389, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !389, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!424 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !121, line: 90, baseType: !425, size: 16, offset: 112)
!425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !121, line: 90, size: 16, elements: !426)
!426 = !{!427, !432}
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !121, line: 91, baseType: !428, size: 16)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !425, file: !121, line: 91, size: 16, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !428, file: !121, line: 96, baseType: !153, size: 8)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !428, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !425, file: !121, line: 100, baseType: !157, size: 16)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !389, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !389, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !389, file: !121, line: 131, baseType: !436, size: 192, offset: 192)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !437)
!437 = !{!438, !439, !445}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !436, file: !72, line: 245, baseType: !395, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !436, file: !72, line: 246, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !441)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!442 = !DISubroutineType(types: !443)
!443 = !{null, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !436, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !386, file: !121, line: 250, baseType: !447, size: 288, offset: 384)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !448)
!448 = !{!449, !450, !451, !452, !453, !454, !455, !456, !457}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !447, file: !174, line: 26, baseType: !40, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !447, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !447, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !447, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !447, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !447, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !447, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !447, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !447, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !386, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !386, file: !121, line: 256, baseType: !417, size: 64, offset: 704)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !386, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !386, file: !121, line: 300, baseType: !462, size: 96, offset: 800)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !463)
!463 = !{!464, !465, !466}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !462, file: !121, line: 153, baseType: !22, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !462, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !462, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !386, file: !121, line: 325, baseType: !468, size: 32, offset: 896)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 32)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !470)
!470 = !{!471, !480, !481}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !469, file: !68, line: 5074, baseType: !472, size: 96)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !474)
!473 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!474 = !{!475, !478, !479}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !472, file: !473, line: 57, baseType: !476, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 32)
!477 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !473, line: 57, flags: DIFlagFwdDecl)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !472, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !472, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !469, file: !68, line: 5075, baseType: !417, size: 64, offset: 96)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !469, file: !68, line: 5076, baseType: !482, size: 8, offset: 160)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !484)
!483 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !482, file: !483, line: 75, baseType: !113, size: 8)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !386, file: !121, line: 343, baseType: !487, size: 64, offset: 928)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !488)
!488 = !{!489, !490}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !487, file: !174, line: 63, baseType: !40, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !487, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!491 = !{!492, !493, !494, !495}
!492 = !DILocalVariable(name: "thread", arg: 1, scope: !381, file: !382, line: 175, type: !385)
!493 = !DILocalVariable(name: "region_num", scope: !381, file: !382, line: 200, type: !143)
!494 = !DILocalVariable(name: "guard_start", scope: !381, file: !382, line: 265, type: !22)
!495 = !DILocalVariable(name: "guard_size", scope: !381, file: !382, line: 266, type: !193)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 96, elements: !508)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !498, line: 52, size: 96, elements: !499)
!498 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!499 = !{!500, !501, !502}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !497, file: !498, line: 53, baseType: !22, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !497, file: !498, line: 54, baseType: !193, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !497, file: !498, line: 55, baseType: !503, size: 32, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !504, line: 151, baseType: !505)
!504 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !504, line: 149, size: 32, elements: !506)
!506 = !{!507}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !505, file: !504, line: 150, baseType: !40, size: 32)
!508 = !{!509}
!509 = !DISubrange(count: 1)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 96, elements: !508)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !514, file: !547, line: 39, type: !143, isLocal: true, isDefinition: true)
!514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !516, globals: !546, splitDebugInlining: false, nameTableKind: None)
!515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!516 = !{!517, !39, !55, !534, !143}
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !519, line: 1226, baseType: !520)
!519 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 1213, size: 352, elements: !521)
!521 = !{!522, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !520, file: !519, line: 1215, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !296)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !520, file: !519, line: 1216, baseType: !296, size: 32, offset: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !520, file: !519, line: 1217, baseType: !296, size: 32, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !520, file: !519, line: 1218, baseType: !296, size: 32, offset: 96)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !520, file: !519, line: 1219, baseType: !296, size: 32, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !520, file: !519, line: 1220, baseType: !296, size: 32, offset: 160)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !520, file: !519, line: 1221, baseType: !296, size: 32, offset: 192)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !520, file: !519, line: 1222, baseType: !296, size: 32, offset: 224)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !520, file: !519, line: 1223, baseType: !296, size: 32, offset: 256)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !520, file: !519, line: 1224, baseType: !296, size: 32, offset: 288)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !520, file: !519, line: 1225, baseType: !296, size: 32, offset: 320)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !537, line: 27, size: 96, elements: !538)
!537 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!538 = !{!539, !540, !541}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !536, file: !537, line: 29, baseType: !40, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !536, file: !537, line: 31, baseType: !319, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !536, file: !537, line: 37, baseType: !542, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !504, line: 146, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !504, line: 141, size: 32, elements: !544)
!544 = !{!545}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !543, file: !504, line: 143, baseType: !40, size: 32)
!546 = !{!512}
!547 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "z_malloc_heap_mutex", scope: !550, file: !556, line: 35, type: !580, isLocal: false, isDefinition: true)
!550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !552, globals: !553, splitDebugInlining: false, nameTableKind: None)
!551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdlib/malloc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!552 = !{!30, !39, !55}
!553 = !{!554, !568, !548, !575}
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "__init_malloc_prepare", scope: !550, file: !556, line: 119, type: !557, isLocal: true, isDefinition: true, align: 32)
!556 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdlib/malloc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !559)
!559 = !{!560, !567}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !558, file: !307, line: 60, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{!55, !564}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!566 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !307, line: 48, flags: DIFlagFwdDecl)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !558, file: !307, line: 65, baseType: !564, size: 32, offset: 32)
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "z_malloc_heap", scope: !550, file: !556, line: 34, type: !570, isLocal: true, isDefinition: true)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !571)
!571 = !{!572, !573, !574}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !570, file: !473, line: 57, baseType: !476, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !570, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !570, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!575 = !DIGlobalVariableExpression(var: !576, expr: !DIExpression())
!576 = distinct !DIGlobalVariable(name: "z_malloc_heap_mem", scope: !550, file: !556, line: 36, type: !577, isLocal: true, isDefinition: true)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1024, elements: !578)
!578 = !{!579}
!579 = !DISubrange(count: 128)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_mutex", file: !581, line: 137, size: 160, elements: !582)
!581 = !DIFile(filename: "zephyr/include/zephyr/sys/mutex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !{!583}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "kernel_mutex", scope: !580, file: !581, line: 138, baseType: !584, size: 160)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !68, line: 2720, size: 160, elements: !585)
!585 = !{!586, !605, !685, !686}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !584, file: !68, line: 2722, baseType: !587, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !589)
!589 = !{!590}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !588, file: !72, line: 232, baseType: !591, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !592)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !593)
!593 = !{!594, !600}
!594 = !DIDerivedType(tag: DW_TAG_member, scope: !592, file: !77, line: 38, baseType: !595, size: 32)
!595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !592, file: !77, line: 38, size: 32, elements: !596)
!596 = !{!597, !599}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !595, file: !77, line: 39, baseType: !598, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !595, file: !77, line: 40, baseType: !598, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, scope: !592, file: !77, line: 42, baseType: !601, size: 32, offset: 32)
!601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !592, file: !77, line: 42, size: 32, elements: !602)
!602 = !{!603, !604}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !601, file: !77, line: 43, baseType: !598, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !601, file: !77, line: 44, baseType: !598, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !584, file: !68, line: 2724, baseType: !606, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 32)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !608)
!608 = !{!609, !649, !661, !662, !663, !664, !670, !680}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !607, file: !121, line: 247, baseType: !610, size: 384)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !611)
!611 = !{!612, !623, !625, !626, !627, !636, !637, !638}
!612 = !DIDerivedType(tag: DW_TAG_member, scope: !610, file: !121, line: 60, baseType: !613, size: 64)
!613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !610, file: !121, line: 60, size: 64, elements: !614)
!614 = !{!615, !617}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !613, file: !121, line: 61, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !592)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !613, file: !121, line: 62, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !618, file: !133, line: 50, baseType: !621, size: 64)
!621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 64, elements: !138)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !610, file: !121, line: 68, baseType: !624, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !610, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !610, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !610, file: !121, line: 90, baseType: !628, size: 16, offset: 112)
!628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !610, file: !121, line: 90, size: 16, elements: !629)
!629 = !{!630, !635}
!630 = !DIDerivedType(tag: DW_TAG_member, scope: !628, file: !121, line: 91, baseType: !631, size: 16)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !628, file: !121, line: 91, size: 16, elements: !632)
!632 = !{!633, !634}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !631, file: !121, line: 96, baseType: !153, size: 8)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !631, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !628, file: !121, line: 100, baseType: !157, size: 16)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !610, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !610, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !610, file: !121, line: 131, baseType: !639, size: 192, offset: 192)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !640)
!640 = !{!641, !642, !648}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !639, file: !72, line: 245, baseType: !616, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !639, file: !72, line: 246, baseType: !643, size: 32, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !644)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DISubroutineType(types: !646)
!646 = !{null, !647}
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !639, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !607, file: !121, line: 250, baseType: !650, size: 288, offset: 384)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !651)
!651 = !{!652, !653, !654, !655, !656, !657, !658, !659, !660}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !650, file: !174, line: 26, baseType: !40, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !650, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !650, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !650, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !650, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !650, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !650, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !650, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !650, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !607, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !607, file: !121, line: 256, baseType: !587, size: 64, offset: 704)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !607, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !607, file: !121, line: 300, baseType: !665, size: 96, offset: 800)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !665, file: !121, line: 153, baseType: !22, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !665, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !665, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !607, file: !121, line: 325, baseType: !671, size: 32, offset: 896)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !673)
!673 = !{!674, !675, !676}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !672, file: !68, line: 5074, baseType: !570, size: 96)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !672, file: !68, line: 5075, baseType: !587, size: 64, offset: 96)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !672, file: !68, line: 5076, baseType: !677, size: 8, offset: 160)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !678)
!678 = !{!679}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !677, file: !483, line: 75, baseType: !113, size: 8)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !607, file: !121, line: 343, baseType: !681, size: 64, offset: 928)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !681, file: !174, line: 63, baseType: !40, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !681, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !584, file: !68, line: 2727, baseType: !40, size: 32, offset: 96)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !584, file: !68, line: 2730, baseType: !55, size: 32, offset: 128)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !689, file: !696, line: 21, type: !282, isLocal: true, isDefinition: true)
!689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !691, globals: !695, splitDebugInlining: false, nameTableKind: None)
!690 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!691 = !{!692, !55, !39}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !694, line: 22, baseType: !55)
!694 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !{!687}
!696 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !699, file: !704, line: 13, type: !721, isLocal: true, isDefinition: true)
!699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !701, splitDebugInlining: false, nameTableKind: None)
!700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!701 = !{!702, !697}
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "mpu_config", scope: !699, file: !704, line: 37, type: !705, isLocal: false, isDefinition: true)
!704 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !537, line: 41, size: 64, elements: !707)
!707 = !{!708, !709}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !706, file: !537, line: 43, baseType: !40, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !706, file: !537, line: 45, baseType: !710, size: 32, offset: 32)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !537, line: 27, size: 96, elements: !713)
!713 = !{!714, !715, !716}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !712, file: !537, line: 29, baseType: !40, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !712, file: !537, line: 31, baseType: !319, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !712, file: !537, line: 37, baseType: !717, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !504, line: 146, baseType: !718)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !504, line: 141, size: 32, elements: !719)
!719 = !{!720}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !718, file: !504, line: 143, baseType: !40, size: 32)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 192, elements: !138)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !724, file: !837, line: 72, type: !921, isLocal: true, isDefinition: true)
!724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !726, retainedTypes: !823, globals: !834, splitDebugInlining: false, nameTableKind: None)
!725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!726 = !{!209, !727}
!727 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !292, line: 65, baseType: !55, size: 32, elements: !728)
!728 = !{!729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822}
!729 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!730 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!731 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!732 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!733 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!734 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!735 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!736 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!737 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!738 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!739 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!740 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!741 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!742 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!743 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!744 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!745 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!746 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!747 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!748 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!749 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!750 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!751 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!752 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!753 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!754 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!755 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!756 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!757 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!758 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!759 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!760 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!761 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!762 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!763 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!764 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!765 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!766 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!767 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!768 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!769 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!770 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!771 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!772 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!773 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!774 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!775 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!776 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!777 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!778 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!779 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!780 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!781 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!782 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!783 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!784 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!785 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!786 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!787 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!788 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!789 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!790 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!791 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!792 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!793 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!794 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!795 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!796 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!797 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!798 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!799 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!800 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!801 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!802 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!803 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!804 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!805 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!806 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!807 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!808 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!809 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!810 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!811 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!812 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!813 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!814 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!815 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!816 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!817 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!818 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!819 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!820 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!821 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!822 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!823 = !{!193, !55, !39, !824}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !292, line: 392, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 384, size: 192, elements: !827)
!827 = !{!828, !829, !830, !831, !832, !833}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !826, file: !292, line: 386, baseType: !296, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !826, file: !292, line: 387, baseType: !296, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !826, file: !292, line: 388, baseType: !296, size: 32, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !826, file: !292, line: 389, baseType: !296, size: 32, offset: 96)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !826, file: !292, line: 390, baseType: !296, size: 32, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !826, file: !292, line: 391, baseType: !296, size: 32, offset: 160)
!834 = !{!835, !841, !857, !868, !885, !722, !887, !901, !903, !905, !907, !909, !911, !913, !915, !917, !919}
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !724, file: !837, line: 424, type: !838, isLocal: false, isDefinition: true, align: 16)
!837 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 64, elements: !839)
!839 = !{!840}
!840 = !DISubrange(count: 4)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !724, file: !837, line: 424, type: !843, isLocal: false, isDefinition: true, align: 32)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !845)
!845 = !{!846, !847, !848, !849, !855, !856}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !844, file: !316, line: 380, baseType: !319, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !844, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !844, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !844, file: !316, line: 386, baseType: !850, size: 32, offset: 96)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 32)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !852)
!852 = !{!853, !854}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !851, file: !316, line: 359, baseType: !143, size: 8)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !851, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !844, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !844, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !724, file: !837, line: 424, type: !859, isLocal: true, isDefinition: true, align: 32)
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !861)
!861 = !{!862, !867}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !860, file: !307, line: 60, baseType: !863, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = !DISubroutineType(types: !865)
!865 = !{!55, !866}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !860, file: !307, line: 65, baseType: !866, size: 32, offset: 32)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "exti_data", scope: !724, file: !837, line: 423, type: !870, isLocal: true, isDefinition: true)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !837, line: 107, size: 1472, elements: !871)
!871 = !{!872}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !870, file: !837, line: 109, baseType: !873, size: 1472)
!873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 1472, elements: !883)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !837, line: 101, size: 64, elements: !875)
!875 = !{!876, !882}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !874, file: !837, line: 102, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !878, line: 63, baseType: !879)
!878 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !55, !39}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !874, file: !837, line: 103, baseType: !39, size: 32, offset: 32)
!883 = !{!884}
!884 = !DISubrange(count: 23)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !724, file: !837, line: 424, type: !851, isLocal: true, isDefinition: true, align: 8)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !889, file: !837, line: 493, type: !894, isLocal: true, isDefinition: true, align: 32)
!889 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !837, file: !837, line: 460, type: !890, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !892)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !866}
!892 = !{!893}
!893 = !DILocalVariable(name: "dev", arg: 1, scope: !889, file: !837, line: 460, type: !866)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !895)
!895 = !{!896, !898, !899, !900}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !894, file: !10, line: 55, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !55)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !894, file: !10, line: 57, baseType: !897, size: 32, offset: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !894, file: !10, line: 59, baseType: !39, size: 32, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !894, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !889, file: !837, line: 497, type: !894, isLocal: true, isDefinition: true, align: 32)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !889, file: !837, line: 507, type: !894, isLocal: true, isDefinition: true, align: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !889, file: !837, line: 512, type: !894, isLocal: true, isDefinition: true, align: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !889, file: !837, line: 516, type: !894, isLocal: true, isDefinition: true, align: 32)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !889, file: !837, line: 523, type: !894, isLocal: true, isDefinition: true, align: 32)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !889, file: !837, line: 527, type: !894, isLocal: true, isDefinition: true, align: 32)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !889, file: !837, line: 581, type: !894, isLocal: true, isDefinition: true, align: 32)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !889, file: !837, line: 586, type: !894, isLocal: true, isDefinition: true, align: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !889, file: !837, line: 591, type: !894, isLocal: true, isDefinition: true, align: 32)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !889, file: !837, line: 595, type: !894, isLocal: true, isDefinition: true, align: 32)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !922, size: 736, elements: !883)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !292, line: 163, baseType: !727)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !926, file: !931, line: 25, type: !959, isLocal: false, isDefinition: true, align: 16)
!926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !928, splitDebugInlining: false, nameTableKind: None)
!927 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!928 = !{!929, !924, !935, !937, !939, !941, !943, !945, !947, !949, !951, !953, !955, !957}
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !926, file: !931, line: 20, type: !932, isLocal: false, isDefinition: true, align: 16)
!931 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 240, elements: !933)
!933 = !{!934}
!934 = !DISubrange(count: 15)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !926, file: !931, line: 32, type: !838, isLocal: false, isDefinition: true, align: 16)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !926, file: !931, line: 39, type: !838, isLocal: false, isDefinition: true, align: 16)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !926, file: !931, line: 46, type: !838, isLocal: false, isDefinition: true, align: 16)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !926, file: !931, line: 53, type: !838, isLocal: false, isDefinition: true, align: 16)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !926, file: !931, line: 60, type: !838, isLocal: false, isDefinition: true, align: 16)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !926, file: !931, line: 67, type: !838, isLocal: false, isDefinition: true, align: 16)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !926, file: !931, line: 74, type: !838, isLocal: false, isDefinition: true, align: 16)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !926, file: !931, line: 81, type: !838, isLocal: false, isDefinition: true, align: 16)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !926, file: !931, line: 88, type: !838, isLocal: false, isDefinition: true, align: 16)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !926, file: !931, line: 95, type: !838, isLocal: false, isDefinition: true, align: 16)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !926, file: !931, line: 102, type: !838, isLocal: false, isDefinition: true, align: 16)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !926, file: !931, line: 109, type: !838, isLocal: false, isDefinition: true, align: 16)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 48, elements: !960)
!960 = !{!961}
!961 = !DISubrange(count: 3)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !964, file: !1029, line: 398, type: !1062, isLocal: true, isDefinition: true)
!964 = distinct !DICompileUnit(language: DW_LANG_C99, file: !965, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !966, retainedTypes: !979, globals: !1026, splitDebugInlining: false, nameTableKind: None)
!965 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!966 = !{!967, !209, !972}
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !968, line: 197, baseType: !41, size: 32, elements: !969)
!968 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!969 = !{!970, !971}
!970 = !DIEnumerator(name: "SUCCESS", value: 0)
!971 = !DIEnumerator(name: "ERROR", value: 1)
!972 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !973, line: 44, baseType: !41, size: 32, elements: !974)
!973 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!974 = !{!975, !976, !977, !978}
!975 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!976 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!977 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!978 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!979 = !{!39, !55, !40, !980, !1019, !1025}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !292, line: 586, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 550, size: 1216, elements: !983)
!983 = !{!984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !982, file: !292, line: 552, baseType: !296, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !982, file: !292, line: 553, baseType: !296, size: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !982, file: !292, line: 554, baseType: !296, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !982, file: !292, line: 555, baseType: !296, size: 32, offset: 96)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !982, file: !292, line: 556, baseType: !296, size: 32, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !982, file: !292, line: 557, baseType: !296, size: 32, offset: 160)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !982, file: !292, line: 558, baseType: !296, size: 32, offset: 192)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !982, file: !292, line: 559, baseType: !40, size: 32, offset: 224)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !982, file: !292, line: 560, baseType: !296, size: 32, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !982, file: !292, line: 561, baseType: !296, size: 32, offset: 288)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !982, file: !292, line: 562, baseType: !995, size: 64, offset: 320)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 64, elements: !138)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !982, file: !292, line: 563, baseType: !296, size: 32, offset: 384)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !982, file: !292, line: 564, baseType: !296, size: 32, offset: 416)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !982, file: !292, line: 565, baseType: !296, size: 32, offset: 448)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !982, file: !292, line: 566, baseType: !40, size: 32, offset: 480)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !982, file: !292, line: 567, baseType: !296, size: 32, offset: 512)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !982, file: !292, line: 568, baseType: !296, size: 32, offset: 544)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !982, file: !292, line: 569, baseType: !995, size: 64, offset: 576)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !982, file: !292, line: 570, baseType: !296, size: 32, offset: 640)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !982, file: !292, line: 571, baseType: !296, size: 32, offset: 672)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !982, file: !292, line: 572, baseType: !296, size: 32, offset: 704)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !982, file: !292, line: 573, baseType: !40, size: 32, offset: 736)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !982, file: !292, line: 574, baseType: !296, size: 32, offset: 768)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !982, file: !292, line: 575, baseType: !296, size: 32, offset: 800)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !982, file: !292, line: 576, baseType: !995, size: 64, offset: 832)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !982, file: !292, line: 577, baseType: !296, size: 32, offset: 896)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !982, file: !292, line: 578, baseType: !296, size: 32, offset: 928)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !982, file: !292, line: 579, baseType: !995, size: 64, offset: 960)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !982, file: !292, line: 580, baseType: !296, size: 32, offset: 1024)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !982, file: !292, line: 581, baseType: !296, size: 32, offset: 1056)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !982, file: !292, line: 582, baseType: !296, size: 32, offset: 1088)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !982, file: !292, line: 583, baseType: !296, size: 32, offset: 1120)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !982, file: !292, line: 584, baseType: !296, size: 32, offset: 1152)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !982, file: !292, line: 585, baseType: !296, size: 32, offset: 1184)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1021, line: 343, size: 64, elements: !1022)
!1021 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1020, file: !1021, line: 344, baseType: !40, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1020, file: !1021, line: 345, baseType: !40, size: 32, offset: 32)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 32)
!1026 = !{!1027, !1033, !1049, !1060, !962}
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !964, file: !1029, line: 752, type: !1030, isLocal: false, isDefinition: true, align: 16)
!1029 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 800, elements: !1031)
!1031 = !{!1032}
!1032 = !DISubrange(count: 50)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !964, file: !1029, line: 752, type: !1035, isLocal: false, isDefinition: true, align: 32)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !1037)
!1037 = !{!1038, !1039, !1040, !1041, !1047, !1048}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1036, file: !316, line: 380, baseType: !319, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1036, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1036, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1036, file: !316, line: 386, baseType: !1042, size: 32, offset: 96)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !1044)
!1044 = !{!1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1043, file: !316, line: 359, baseType: !143, size: 8)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1043, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1036, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1036, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !964, file: !1029, line: 752, type: !1051, isLocal: true, isDefinition: true, align: 32)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1053)
!1053 = !{!1054, !1059}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1052, file: !307, line: 60, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!55, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1052, file: !307, line: 65, baseType: !1058, size: 32, offset: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !964, file: !1029, line: 752, type: !1043, isLocal: true, isDefinition: true, align: 8)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !973, line: 100, size: 224, elements: !1063)
!1063 = !{!1064, !1070, !1071, !1080, !1085, !1090, !1096}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1062, file: !973, line: 101, baseType: !1065, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !973, line: 76, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!55, !1058, !1069}
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !973, line: 56, baseType: !39)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1062, file: !973, line: 102, baseType: !1065, size: 32, offset: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1062, file: !973, line: 103, baseType: !1072, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !973, line: 83, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!55, !1058, !1069, !1076, !39}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !973, line: 72, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !1058, !1069, !39}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1062, file: !973, line: 104, baseType: !1081, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !973, line: 79, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!55, !1058, !1069, !1025}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1062, file: !973, line: 105, baseType: !1086, size: 32, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !973, line: 88, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!972, !1058, !1069}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1062, file: !973, line: 106, baseType: !1091, size: 32, offset: 160)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !973, line: 92, baseType: !1092)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!55, !1058, !1069, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !973, line: 64, baseType: !39)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1062, file: !973, line: 107, baseType: !1097, size: 32, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !973, line: 96, baseType: !1098)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!55, !1058, !1069, !39}
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1103, file: !1160, line: 603, type: !1162, isLocal: true, isDefinition: true, align: 32)
!1103 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1104, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !1105, globals: !1157, splitDebugInlining: false, nameTableKind: None)
!1104 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!1105 = !{!39, !55, !1106}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1109, line: 336, size: 160, elements: !1110)
!1109 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1110 = !{!1111, !1131, !1135, !1139, !1152}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1108, file: !1109, line: 365, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!55, !1115, !1130}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1128, !1129}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1117, file: !316, line: 380, baseType: !319, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1117, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1117, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1117, file: !316, line: 386, baseType: !1123, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !1125)
!1125 = !{!1126, !1127}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1124, file: !316, line: 359, baseType: !143, size: 8)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1124, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1117, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1117, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1108, file: !1109, line: 366, baseType: !1132, size: 32, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{null, !1115, !144}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1108, file: !1109, line: 374, baseType: !1136, size: 32, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!55, !1115}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1108, file: !1109, line: 377, baseType: !1140, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!55, !1115, !1143}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1109, line: 122, size: 64, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1145, file: !1109, line: 123, baseType: !40, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1145, file: !1109, line: 124, baseType: !143, size: 8, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1145, file: !1109, line: 125, baseType: !143, size: 8, offset: 40)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1145, file: !1109, line: 126, baseType: !143, size: 8, offset: 48)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1145, file: !1109, line: 127, baseType: !143, size: 8, offset: 56)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1108, file: !1109, line: 379, baseType: !1153, size: 32, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!55, !1115, !1156}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1157 = !{!1101, !1158}
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1103, file: !1160, line: 38, type: !1161, isLocal: true, isDefinition: true)
!1160 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1163, file: !307, line: 60, baseType: !1136, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1163, file: !307, line: 65, baseType: !1115, size: 32, offset: 32)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1169, file: !1341, line: 762, type: !1450, isLocal: true, isDefinition: true)
!1169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !1189, globals: !1338, splitDebugInlining: false, nameTableKind: None)
!1170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!1171 = !{!209, !1172, !1178, !1183, !972}
!1172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1173, line: 506, baseType: !41, size: 32, elements: !1174)
!1173 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1174 = !{!1175, !1176, !1177}
!1175 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1176 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1177 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1173, line: 512, baseType: !41, size: 32, elements: !1179)
!1179 = !{!1180, !1181, !1182}
!1180 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1181 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1182 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !878, line: 43, baseType: !41, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188}
!1185 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1186 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1187 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1188 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1189 = !{!39, !55, !1190, !1260, !1265, !1225, !1178, !1172, !1270, !1271, !40, !1285, !1240, !1297, !1298, !1299}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1173, line: 523, size: 288, elements: !1193)
!1193 = !{!1194, !1215, !1221, !1226, !1230, !1231, !1232, !1236, !1256}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1192, file: !1173, line: 524, baseType: !1195, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!55, !1198, !1213, !1214}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1211, !1212}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1200, file: !316, line: 380, baseType: !319, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1200, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1200, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1200, file: !316, line: 386, baseType: !1206, size: 32, offset: 96)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !1208)
!1208 = !{!1209, !1210}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1207, file: !316, line: 359, baseType: !143, size: 8)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1207, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1200, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1200, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1173, line: 237, baseType: !143)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1173, line: 257, baseType: !40)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1192, file: !1173, line: 530, baseType: !1216, size: 32, offset: 32)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!55, !1198, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1173, line: 229, baseType: !40)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1192, file: !1173, line: 532, baseType: !1222, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!55, !1198, !1225, !1220}
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1173, line: 216, baseType: !40)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1192, file: !1173, line: 535, baseType: !1227, size: 32, offset: 96)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!55, !1198, !1225}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1192, file: !1173, line: 537, baseType: !1227, size: 32, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1192, file: !1173, line: 539, baseType: !1227, size: 32, offset: 160)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1192, file: !1173, line: 541, baseType: !1233, size: 32, offset: 192)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!55, !1198, !1213, !1172, !1178}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1192, file: !1173, line: 544, baseType: !1237, size: 32, offset: 224)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!55, !1198, !1240, !329}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1173, line: 478, size: 96, elements: !1242)
!1242 = !{!1243, !1250, !1255}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1241, file: !1173, line: 482, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1245, line: 33, baseType: !1246)
!1245 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1245, line: 29, size: 32, elements: !1247)
!1247 = !{!1248}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !1245, line: 30, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1241, file: !1173, line: 485, baseType: !1251, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1173, line: 464, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{null, !1198, !1240, !1225}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1241, file: !1173, line: 493, baseType: !1225, size: 32, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1192, file: !1173, line: 547, baseType: !1257, size: 32, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!40, !1198}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1173, line: 428, size: 32, elements: !1263)
!1263 = !{!1264}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1262, file: !1173, line: 434, baseType: !1225, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1173, line: 441, size: 32, elements: !1268)
!1268 = !{!1269}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1267, file: !1173, line: 447, baseType: !1225, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !292, line: 469, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 458, size: 320, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1273, file: !292, line: 460, baseType: !296, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1273, file: !292, line: 461, baseType: !296, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1273, file: !292, line: 462, baseType: !296, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1273, file: !292, line: 463, baseType: !296, size: 32, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1273, file: !292, line: 464, baseType: !296, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1273, file: !292, line: 465, baseType: !296, size: 32, offset: 160)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1273, file: !292, line: 466, baseType: !296, size: 32, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1273, file: !292, line: 467, baseType: !296, size: 32, offset: 224)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1273, file: !292, line: 468, baseType: !1284, size: 64, offset: 256)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 64, elements: !138)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !292, line: 484, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 475, size: 384, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1293, !1294, !1295, !1296}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1287, file: !292, line: 477, baseType: !296, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1287, file: !292, line: 478, baseType: !296, size: 32, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1287, file: !292, line: 479, baseType: !1292, size: 128, offset: 64)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 128, elements: !839)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1287, file: !292, line: 480, baseType: !995, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1287, file: !292, line: 481, baseType: !296, size: 32, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1287, file: !292, line: 482, baseType: !995, size: 64, offset: 288)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1287, file: !292, line: 483, baseType: !296, size: 32, offset: 352)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !973, line: 100, size: 224, elements: !1302)
!1302 = !{!1303, !1308, !1309, !1318, !1323, !1328, !1333}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1301, file: !973, line: 101, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !973, line: 76, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!55, !1198, !1069}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1301, file: !973, line: 102, baseType: !1304, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1301, file: !973, line: 103, baseType: !1310, size: 32, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !973, line: 83, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!55, !1198, !1069, !1314, !39}
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !973, line: 72, baseType: !1315)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{null, !1198, !1069, !39}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1301, file: !973, line: 104, baseType: !1319, size: 32, offset: 96)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !973, line: 79, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!55, !1198, !1069, !1025}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1301, file: !973, line: 105, baseType: !1324, size: 32, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !973, line: 88, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!972, !1198, !1069}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1301, file: !973, line: 106, baseType: !1329, size: 32, offset: 160)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !973, line: 92, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!55, !1198, !1069, !1095}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1301, file: !973, line: 107, baseType: !1334, size: 32, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !973, line: 96, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!55, !1198, !1069, !39}
!1338 = !{!1339, !1345, !1347, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1167, !1446, !1448, !1461, !1463, !1465, !1467, !1469, !1471}
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1169, file: !1341, line: 762, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 80, elements: !1343)
!1343 = !{!1344}
!1344 = !DISubrange(count: 5)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1169, file: !1341, line: 762, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1169, file: !1341, line: 762, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1351)
!1351 = !{!1352, !1356}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1350, file: !307, line: 60, baseType: !1353, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!55, !1198}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1350, file: !307, line: 65, baseType: !1198, size: 32, offset: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1169, file: !1341, line: 766, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1169, file: !1341, line: 766, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1169, file: !1341, line: 766, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1169, file: !1341, line: 770, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1169, file: !1341, line: 770, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1169, file: !1341, line: 770, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1169, file: !1341, line: 774, type: !1371, isLocal: false, isDefinition: true, align: 16)
!1371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 144, elements: !1372)
!1372 = !{!1373}
!1373 = !DISubrange(count: 9)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1169, file: !1341, line: 774, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1169, file: !1341, line: 774, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1169, file: !1341, line: 778, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1169, file: !1341, line: 778, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1169, file: !1341, line: 778, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1169, file: !1341, line: 782, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1169, file: !1341, line: 782, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1169, file: !1341, line: 782, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1169, file: !1341, line: 786, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1169, file: !1341, line: 786, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1169, file: !1341, line: 786, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1169, file: !1341, line: 790, type: !1342, isLocal: false, isDefinition: true, align: 16)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1169, file: !1341, line: 790, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1169, file: !1341, line: 790, type: !1349, isLocal: true, isDefinition: true, align: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1169, file: !1341, line: 762, type: !1404, isLocal: true, isDefinition: true)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1405, line: 237, size: 128, elements: !1406)
!1405 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1406 = !{!1407, !1408, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1404, file: !1405, line: 239, baseType: !1267, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1404, file: !1405, line: 241, baseType: !1198, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1404, file: !1405, line: 243, baseType: !1410, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1245, line: 40, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1245, line: 35, size: 64, elements: !1412)
!1412 = !{!1413, !1415}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1411, file: !1245, line: 36, baseType: !1414, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1411, file: !1245, line: 37, baseType: !1414, size: 32, offset: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1169, file: !1341, line: 762, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1169, file: !1341, line: 766, type: !1404, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1169, file: !1341, line: 766, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1169, file: !1341, line: 770, type: !1404, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1169, file: !1341, line: 770, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1169, file: !1341, line: 774, type: !1404, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1169, file: !1341, line: 774, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1169, file: !1341, line: 778, type: !1404, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1169, file: !1341, line: 778, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1169, file: !1341, line: 782, type: !1404, isLocal: true, isDefinition: true)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1169, file: !1341, line: 782, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1169, file: !1341, line: 786, type: !1404, isLocal: true, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1169, file: !1341, line: 786, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1169, file: !1341, line: 790, type: !1404, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1169, file: !1341, line: 790, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1169, file: !1341, line: 656, type: !1191, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1169, file: !1341, line: 766, type: !1450, isLocal: true, isDefinition: true)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1405, line: 224, size: 160, elements: !1452)
!1452 = !{!1453, !1454, !1455, !1456}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1451, file: !1405, line: 226, baseType: !1262, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1451, file: !1405, line: 228, baseType: !1025, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1451, file: !1405, line: 230, baseType: !55, size: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1451, file: !1405, line: 231, baseType: !1457, size: 64, offset: 96)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1021, line: 343, size: 64, elements: !1458)
!1458 = !{!1459, !1460}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1457, file: !1021, line: 344, baseType: !40, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1457, file: !1021, line: 345, baseType: !40, size: 32, offset: 32)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1169, file: !1341, line: 770, type: !1450, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1169, file: !1341, line: 774, type: !1450, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1169, file: !1341, line: 778, type: !1450, isLocal: true, isDefinition: true)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1169, file: !1341, line: 782, type: !1450, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1169, file: !1341, line: 786, type: !1450, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1169, file: !1341, line: 790, type: !1450, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1475, file: !1614, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1475 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1476, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1477, retainedTypes: !1510, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1476 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!1477 = !{!209, !1478, !1485, !1492, !1499, !1505, !972}
!1478 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1109, line: 47, baseType: !41, size: 32, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483, !1484}
!1480 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1481 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1482 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1483 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1484 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1485 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1109, line: 75, baseType: !41, size: 32, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491}
!1487 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1488 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1489 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1490 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1491 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1109, line: 92, baseType: !41, size: 32, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1498}
!1494 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1495 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1496 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1497 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1498 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1499 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1109, line: 84, baseType: !41, size: 32, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504}
!1501 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1502 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1503 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1504 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1109, line: 107, baseType: !41, size: 32, elements: !1506)
!1506 = !{!1507, !1508, !1509}
!1507 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1508 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1509 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1510 = !{!39, !55, !1511, !144, !143, !1560, !40, !1069, !1571, !157, !42, !1610}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1109, line: 336, size: 160, elements: !1514)
!1514 = !{!1515, !1534, !1538, !1542, !1555}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1513, file: !1109, line: 365, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!55, !1519, !1130}
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1532, !1533}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1521, file: !316, line: 380, baseType: !319, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1521, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1521, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1521, file: !316, line: 386, baseType: !1527, size: 32, offset: 96)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1528, file: !316, line: 359, baseType: !143, size: 8)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1528, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1521, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1521, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1513, file: !1109, line: 366, baseType: !1535, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{null, !1519, !144}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1513, file: !1109, line: 374, baseType: !1539, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!55, !1519}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1513, file: !1109, line: 377, baseType: !1543, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!55, !1519, !1546}
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1109, line: 122, size: 64, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1548, file: !1109, line: 123, baseType: !40, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1548, file: !1109, line: 124, baseType: !143, size: 8, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1548, file: !1109, line: 125, baseType: !143, size: 8, offset: 40)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1548, file: !1109, line: 126, baseType: !143, size: 8, offset: 48)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1548, file: !1109, line: 127, baseType: !143, size: 8, offset: 56)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1513, file: !1109, line: 379, baseType: !1556, size: 32, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!55, !1519, !1559}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !292, line: 783, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 774, size: 224, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1562, file: !292, line: 776, baseType: !296, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1562, file: !292, line: 777, baseType: !296, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1562, file: !292, line: 778, baseType: !296, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1562, file: !292, line: 779, baseType: !296, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1562, file: !292, line: 780, baseType: !296, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1562, file: !292, line: 781, baseType: !296, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1562, file: !292, line: 782, baseType: !296, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !973, line: 100, size: 224, elements: !1574)
!1574 = !{!1575, !1580, !1581, !1590, !1595, !1600, !1605}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1573, file: !973, line: 101, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !973, line: 76, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!55, !1519, !1069}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1573, file: !973, line: 102, baseType: !1576, size: 32, offset: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1573, file: !973, line: 103, baseType: !1582, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !973, line: 83, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!55, !1519, !1069, !1586, !39}
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !973, line: 72, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{null, !1519, !1069, !39}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1573, file: !973, line: 104, baseType: !1591, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !973, line: 79, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!55, !1519, !1069, !1025}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1573, file: !973, line: 105, baseType: !1596, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !973, line: 88, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!972, !1519, !1069}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1573, file: !973, line: 106, baseType: !1601, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !973, line: 92, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!55, !1519, !1069, !1095}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1573, file: !973, line: 107, baseType: !1606, size: 32, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !973, line: 96, baseType: !1607)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!55, !1519, !1069, !39}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!1611 = !{!1612, !1618, !1620, !1627, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1649, !1651, !1473, !1653, !1661, !1684, !1687, !1690, !1692, !1699, !1716, !1718, !1720, !1722, !1724, !1726, !1728, !1730, !1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746, !1748}
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1475, file: !1614, line: 1914, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1614 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 128, elements: !1616)
!1616 = !{!1617}
!1617 = !DISubrange(count: 8)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1475, file: !1614, line: 1914, type: !1520, isLocal: false, isDefinition: true, align: 32)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1475, file: !1614, line: 1914, type: !1622, isLocal: true, isDefinition: true, align: 32)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1624)
!1624 = !{!1625, !1626}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1623, file: !307, line: 60, baseType: !1539, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1623, file: !307, line: 65, baseType: !1519, size: 32, offset: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1475, file: !1614, line: 1914, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1475, file: !1614, line: 1914, type: !1520, isLocal: false, isDefinition: true, align: 32)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1475, file: !1614, line: 1914, type: !1622, isLocal: true, isDefinition: true, align: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1520, isLocal: false, isDefinition: true, align: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1622, isLocal: true, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1475, file: !1614, line: 1914, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1475, file: !1614, line: 1914, type: !1520, isLocal: false, isDefinition: true, align: 32)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1475, file: !1614, line: 1914, type: !1622, isLocal: true, isDefinition: true, align: 32)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1475, file: !1614, line: 1914, type: !1528, isLocal: true, isDefinition: true, align: 8)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1475, file: !1614, line: 1914, type: !1528, isLocal: true, isDefinition: true, align: 8)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1528, isLocal: true, isDefinition: true, align: 8)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1475, file: !1614, line: 1914, type: !1528, isLocal: true, isDefinition: true, align: 8)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1475, file: !1614, line: 1914, type: !1655, isLocal: true, isDefinition: true)
!1655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 64, elements: !508)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1021, line: 343, size: 64, elements: !1658)
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1657, file: !1021, line: 344, baseType: !40, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1657, file: !1021, line: 345, baseType: !40, size: 32, offset: 32)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1475, file: !1614, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1665, line: 60, size: 64, elements: !1666)
!1665 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1666 = !{!1667, !1683}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1664, file: !1665, line: 69, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1665, line: 50, size: 64, elements: !1671)
!1671 = !{!1672, !1681, !1682}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1670, file: !1665, line: 52, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !1677)
!1676 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !1678)
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1677, file: !1676, line: 34, baseType: !40, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1677, file: !1676, line: 36, baseType: !40, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1670, file: !1665, line: 54, baseType: !143, size: 8, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1670, file: !1665, line: 56, baseType: !143, size: 8, offset: 40)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1664, file: !1665, line: 71, baseType: !143, size: 8, offset: 32)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1475, file: !1614, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1669, size: 64, elements: !508)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1475, file: !1614, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1674, size: 128, elements: !138)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1475, file: !1614, line: 1539, type: !1512, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1475, file: !1614, line: 1914, type: !1694, isLocal: true, isDefinition: true)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1695, line: 74, size: 64, elements: !1696)
!1695 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1696 = !{!1697, !1698}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1694, file: !1695, line: 76, baseType: !40, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1694, file: !1695, line: 78, baseType: !1519, size: 32, offset: 32)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1475, file: !1614, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1695, line: 22, size: 224, elements: !1703)
!1703 = !{!1704, !1705, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1702, file: !1695, line: 24, baseType: !1560, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1702, file: !1695, line: 26, baseType: !1706, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1702, file: !1695, line: 28, baseType: !193, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1702, file: !1695, line: 30, baseType: !329, size: 8, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1702, file: !1695, line: 32, baseType: !55, size: 32, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1702, file: !1695, line: 34, baseType: !329, size: 8, offset: 160)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1702, file: !1695, line: 36, baseType: !329, size: 8, offset: 168)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1702, file: !1695, line: 38, baseType: !329, size: 8, offset: 176)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1702, file: !1695, line: 40, baseType: !329, size: 8, offset: 184)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1702, file: !1695, line: 41, baseType: !1715, size: 32, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1475, file: !1614, line: 1914, type: !1655, isLocal: true, isDefinition: true)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1475, file: !1614, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1475, file: !1614, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1475, file: !1614, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1475, file: !1614, line: 1914, type: !1694, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1475, file: !1614, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1475, file: !1614, line: 1914, type: !1655, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1475, file: !1614, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1475, file: !1614, line: 1914, type: !1694, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1475, file: !1614, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1475, file: !1614, line: 1914, type: !1655, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1475, file: !1614, line: 1914, type: !1663, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1475, file: !1614, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1475, file: !1614, line: 1914, type: !1689, isLocal: true, isDefinition: true)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1475, file: !1614, line: 1914, type: !1694, isLocal: true, isDefinition: true)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1752, file: !1830, line: 65, type: !296, isLocal: true, isDefinition: true)
!1752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1753, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1754, retainedTypes: !1755, globals: !1827, splitDebugInlining: false, nameTableKind: None)
!1753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!1754 = !{!727}
!1755 = !{!30, !1756, !897, !143, !40, !1764, !1795}
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !519, line: 770, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 764, size: 128, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1758, file: !519, line: 766, baseType: !296, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1758, file: !519, line: 767, baseType: !296, size: 32, offset: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1758, file: !519, line: 768, baseType: !296, size: 32, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1758, file: !519, line: 769, baseType: !523, size: 32, offset: 96)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !519, line: 426, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 411, size: 28704, elements: !1767)
!1767 = !{!1768, !1770, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1785, !1790, !1794}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1766, file: !519, line: 413, baseType: !1769, size: 256)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 256, elements: !1616)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1766, file: !519, line: 414, baseType: !1771, size: 768, offset: 256)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 768, elements: !1772)
!1772 = !{!1773}
!1773 = !DISubrange(count: 24)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1766, file: !519, line: 415, baseType: !1769, size: 256, offset: 1024)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1766, file: !519, line: 416, baseType: !1771, size: 768, offset: 1280)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1766, file: !519, line: 417, baseType: !1769, size: 256, offset: 2048)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1766, file: !519, line: 418, baseType: !1771, size: 768, offset: 2304)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1766, file: !519, line: 419, baseType: !1769, size: 256, offset: 3072)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1766, file: !519, line: 420, baseType: !1771, size: 768, offset: 3328)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1766, file: !519, line: 421, baseType: !1769, size: 256, offset: 4096)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1766, file: !519, line: 422, baseType: !1782, size: 1792, offset: 4352)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 1792, elements: !1783)
!1783 = !{!1784}
!1784 = !DISubrange(count: 56)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1766, file: !519, line: 423, baseType: !1786, size: 1920, offset: 6144)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1787, size: 1920, elements: !1788)
!1787 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !143)
!1788 = !{!1789}
!1789 = !DISubrange(count: 240)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1766, file: !519, line: 424, baseType: !1791, size: 20608, offset: 8064)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 20608, elements: !1792)
!1792 = !{!1793}
!1793 = !DISubrange(count: 644)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1766, file: !519, line: 425, baseType: !296, size: 32, offset: 28672)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1818, !1819, !1820, !1822, !1824, !1826}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1797, file: !519, line: 447, baseType: !523, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1797, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1797, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1797, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1797, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1797, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1797, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1787, size: 96, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 12)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1797, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1797, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1797, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1797, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1797, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1797, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1797, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1797, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 64, elements: !138)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1797, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1797, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1797, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 128, elements: !839)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1797, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 160, elements: !1343)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1797, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 160, elements: !1343)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1797, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!1827 = !{!1828, !1854, !1859, !1861, !1863, !1750}
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1752, file: !1830, line: 285, type: !1831, isLocal: true, isDefinition: true, align: 32)
!1830 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !1833)
!1833 = !{!1834, !1853}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1832, file: !307, line: 60, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!55, !1838}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !1841)
!1841 = !{!1842, !1843, !1844, !1845, !1851, !1852}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1840, file: !316, line: 380, baseType: !319, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1840, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1840, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1840, file: !316, line: 386, baseType: !1846, size: 32, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !1848)
!1848 = !{!1849, !1850}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1847, file: !316, line: 359, baseType: !143, size: 8)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1847, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1840, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1840, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1832, file: !307, line: 65, baseType: !1838, size: 32, offset: 32)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "lock", scope: !1752, file: !1830, line: 34, type: !1856, isLocal: true, isDefinition: true)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !1857)
!1857 = !{!1858}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !1856, file: !483, line: 75, baseType: !113, size: 8)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "last_load", scope: !1752, file: !1830, line: 36, type: !40, isLocal: true, isDefinition: true)
!1861 = !DIGlobalVariableExpression(var: !1862, expr: !DIExpression())
!1862 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1752, file: !1830, line: 48, type: !40, isLocal: true, isDefinition: true)
!1863 = !DIGlobalVariableExpression(var: !1864, expr: !DIExpression())
!1864 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1752, file: !1830, line: 54, type: !40, isLocal: true, isDefinition: true)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1867, file: !1949, line: 22, type: !1951, isLocal: true, isDefinition: true)
!1867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1869, retainedTypes: !1870, globals: !1946, splitDebugInlining: false, nameTableKind: None)
!1868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!1869 = !{!1172, !1178}
!1870 = !{!1871, !1935, !1940, !1225, !1178, !1172, !1945, !39}
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1173, line: 523, size: 288, elements: !1874)
!1874 = !{!1875, !1894, !1898, !1902, !1906, !1907, !1908, !1912, !1931}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1873, file: !1173, line: 524, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!55, !1879, !1213, !1214}
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886, !1892, !1893}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1881, file: !316, line: 380, baseType: !319, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1881, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1881, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1881, file: !316, line: 386, baseType: !1887, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1888, file: !316, line: 359, baseType: !143, size: 8)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1888, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1881, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1881, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1873, file: !1173, line: 530, baseType: !1895, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!55, !1879, !1219}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1873, file: !1173, line: 532, baseType: !1899, size: 32, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!55, !1879, !1225, !1220}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1873, file: !1173, line: 535, baseType: !1903, size: 32, offset: 96)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!55, !1879, !1225}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1873, file: !1173, line: 537, baseType: !1903, size: 32, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1873, file: !1173, line: 539, baseType: !1903, size: 32, offset: 160)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1873, file: !1173, line: 541, baseType: !1909, size: 32, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!55, !1879, !1213, !1172, !1178}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1873, file: !1173, line: 544, baseType: !1913, size: 32, offset: 224)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!55, !1879, !1916, !329}
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1173, line: 478, size: 96, elements: !1918)
!1918 = !{!1919, !1925, !1930}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1917, file: !1173, line: 482, baseType: !1920, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1245, line: 33, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1245, line: 29, size: 32, elements: !1922)
!1922 = !{!1923}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1921, file: !1245, line: 30, baseType: !1924, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1917, file: !1173, line: 485, baseType: !1926, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1173, line: 464, baseType: !1927)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{null, !1879, !1916, !1225}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1917, file: !1173, line: 493, baseType: !1225, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1873, file: !1173, line: 547, baseType: !1932, size: 32, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!40, !1879}
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1937)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1173, line: 428, size: 32, elements: !1938)
!1938 = !{!1939}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1937, file: !1173, line: 434, baseType: !1225, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1942)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1173, line: 441, size: 32, elements: !1943)
!1943 = !{!1944}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1942, file: !1173, line: 447, baseType: !1225, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1946 = !{!1947, !1865}
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1948 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1867, file: !1949, line: 37, type: !1950, isLocal: true, isDefinition: true)
!1949 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !193)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1952, size: 352, elements: !1953)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1879)
!1953 = !{!1954}
!1954 = !DISubrange(count: 11)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1957, file: !2001, line: 139, type: !2008, isLocal: false, isDefinition: true)
!1957 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1958, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1959, globals: !1998, splitDebugInlining: false, nameTableKind: None)
!1958 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!1959 = !{!1960}
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !292, line: 586, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 550, size: 1216, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1962, file: !292, line: 552, baseType: !296, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1962, file: !292, line: 553, baseType: !296, size: 32, offset: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1962, file: !292, line: 554, baseType: !296, size: 32, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1962, file: !292, line: 555, baseType: !296, size: 32, offset: 96)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1962, file: !292, line: 556, baseType: !296, size: 32, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1962, file: !292, line: 557, baseType: !296, size: 32, offset: 160)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1962, file: !292, line: 558, baseType: !296, size: 32, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1962, file: !292, line: 559, baseType: !40, size: 32, offset: 224)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1962, file: !292, line: 560, baseType: !296, size: 32, offset: 256)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1962, file: !292, line: 561, baseType: !296, size: 32, offset: 288)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1962, file: !292, line: 562, baseType: !995, size: 64, offset: 320)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1962, file: !292, line: 563, baseType: !296, size: 32, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1962, file: !292, line: 564, baseType: !296, size: 32, offset: 416)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1962, file: !292, line: 565, baseType: !296, size: 32, offset: 448)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1962, file: !292, line: 566, baseType: !40, size: 32, offset: 480)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1962, file: !292, line: 567, baseType: !296, size: 32, offset: 512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1962, file: !292, line: 568, baseType: !296, size: 32, offset: 544)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1962, file: !292, line: 569, baseType: !995, size: 64, offset: 576)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1962, file: !292, line: 570, baseType: !296, size: 32, offset: 640)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1962, file: !292, line: 571, baseType: !296, size: 32, offset: 672)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1962, file: !292, line: 572, baseType: !296, size: 32, offset: 704)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1962, file: !292, line: 573, baseType: !40, size: 32, offset: 736)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1962, file: !292, line: 574, baseType: !296, size: 32, offset: 768)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1962, file: !292, line: 575, baseType: !296, size: 32, offset: 800)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1962, file: !292, line: 576, baseType: !995, size: 64, offset: 832)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1962, file: !292, line: 577, baseType: !296, size: 32, offset: 896)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1962, file: !292, line: 578, baseType: !296, size: 32, offset: 928)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1962, file: !292, line: 579, baseType: !995, size: 64, offset: 960)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1962, file: !292, line: 580, baseType: !296, size: 32, offset: 1024)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1962, file: !292, line: 581, baseType: !296, size: 32, offset: 1056)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1962, file: !292, line: 582, baseType: !296, size: 32, offset: 1088)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1962, file: !292, line: 583, baseType: !296, size: 32, offset: 1120)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1962, file: !292, line: 584, baseType: !296, size: 32, offset: 1152)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1962, file: !292, line: 585, baseType: !296, size: 32, offset: 1184)
!1998 = !{!1999, !2002, !1955}
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1957, file: !2001, line: 137, type: !40, isLocal: false, isDefinition: true)
!2001 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1957, file: !2001, line: 138, type: !2004, isLocal: false, isDefinition: true)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2005, size: 128, elements: !2006)
!2005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!2006 = !{!2007}
!2007 = !DISubrange(count: 16)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2005, size: 64, elements: !1616)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2011, file: !2014, line: 23, type: !2015, isLocal: false, isDefinition: true)
!2011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !279, globals: !2013, splitDebugInlining: false, nameTableKind: None)
!2012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2013 = !{!2009}
!2014 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2018, file: !2022, line: 86, type: !2274, isLocal: false, isDefinition: true, align: 512)
!2018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2019, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2020, retainedTypes: !2029, globals: !2103, splitDebugInlining: false, nameTableKind: None)
!2019 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2020 = !{!2021, !209, !727}
!2021 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2022, line: 63, baseType: !41, size: 32, elements: !2023)
!2022 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2023 = !{!2024, !2025, !2026, !2027, !2028}
!2024 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2025 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2026 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2027 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2028 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2029 = !{!193, !39, !55, !2030, !1297, !40, !2061, !897, !143, !2086}
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2033, line: 51, size: 64, elements: !2034)
!2033 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2034 = !{!2035, !2056}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2032, file: !2033, line: 52, baseType: !2036, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2033, line: 38, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!55, !2040, !2055, !157}
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2047, !2053, !2054}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2042, file: !316, line: 380, baseType: !319, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2042, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2042, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2042, file: !316, line: 386, baseType: !2048, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !2050)
!2050 = !{!2051, !2052}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2049, file: !316, line: 359, baseType: !143, size: 8)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2049, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2042, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2042, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2032, file: !2033, line: 53, baseType: !2057, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2033, line: 47, baseType: !2058)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{!55, !2040, !2055, !157, !40}
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2063, file: !519, line: 447, baseType: !523, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2063, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2063, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2063, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2063, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2063, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2063, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2063, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2063, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2063, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2063, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2063, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2063, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2063, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2063, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2063, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2063, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2063, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2063, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2063, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2063, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !519, line: 426, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 411, size: 28704, elements: !2089)
!2089 = !{!2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2088, file: !519, line: 413, baseType: !1769, size: 256)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2088, file: !519, line: 414, baseType: !1771, size: 768, offset: 256)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2088, file: !519, line: 415, baseType: !1769, size: 256, offset: 1024)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2088, file: !519, line: 416, baseType: !1771, size: 768, offset: 1280)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2088, file: !519, line: 417, baseType: !1769, size: 256, offset: 2048)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2088, file: !519, line: 418, baseType: !1771, size: 768, offset: 2304)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2088, file: !519, line: 419, baseType: !1769, size: 256, offset: 3072)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2088, file: !519, line: 420, baseType: !1771, size: 768, offset: 3328)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2088, file: !519, line: 421, baseType: !1769, size: 256, offset: 4096)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2088, file: !519, line: 422, baseType: !1782, size: 1792, offset: 4352)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2088, file: !519, line: 423, baseType: !1786, size: 1920, offset: 6144)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2088, file: !519, line: 424, baseType: !1791, size: 20608, offset: 8064)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2088, file: !519, line: 425, baseType: !296, size: 32, offset: 28672)
!2103 = !{!2104, !2229, !2237, !2239, !2016, !2242, !2244, !2249}
!2104 = !DIGlobalVariableExpression(var: !2105, expr: !DIExpression())
!2105 = distinct !DIGlobalVariable(name: "_kernel", scope: !2018, file: !2022, line: 40, type: !2106, isLocal: false, isDefinition: true)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !72, line: 158, size: 288, elements: !2107)
!2107 = !{!2108, !2224}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2106, file: !72, line: 159, baseType: !2109, size: 192)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 192, elements: !508)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !72, line: 100, size: 192, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2217, !2218, !2219, !2220}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2110, file: !72, line: 102, baseType: !40, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2110, file: !72, line: 105, baseType: !1297, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2110, file: !72, line: 108, baseType: !2115, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !2117)
!2117 = !{!2118, !2176, !2188, !2189, !2190, !2191, !2197, !2212}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2116, file: !121, line: 247, baseType: !2119, size: 384)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !2120)
!2120 = !{!2121, !2145, !2152, !2153, !2154, !2163, !2164, !2165}
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !121, line: 60, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !121, line: 60, size: 64, elements: !2123)
!2123 = !{!2124, !2139}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2122, file: !121, line: 61, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !2126)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !2127)
!2127 = !{!2128, !2134}
!2128 = !DIDerivedType(tag: DW_TAG_member, scope: !2126, file: !77, line: 38, baseType: !2129, size: 32)
!2129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2126, file: !77, line: 38, size: 32, elements: !2130)
!2130 = !{!2131, !2133}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2129, file: !77, line: 39, baseType: !2132, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2129, file: !77, line: 40, baseType: !2132, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, scope: !2126, file: !77, line: 42, baseType: !2135, size: 32, offset: 32)
!2135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2126, file: !77, line: 42, size: 32, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2135, file: !77, line: 43, baseType: !2132, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2135, file: !77, line: 44, baseType: !2132, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2122, file: !121, line: 62, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !2141)
!2141 = !{!2142}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2140, file: !133, line: 50, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2144, size: 64, elements: !138)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2119, file: !121, line: 68, baseType: !2146, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !2149)
!2149 = !{!2150}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2148, file: !72, line: 232, baseType: !2151, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !2126)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2119, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2119, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!2154 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !121, line: 90, baseType: !2155, size: 16, offset: 112)
!2155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !121, line: 90, size: 16, elements: !2156)
!2156 = !{!2157, !2162}
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !2155, file: !121, line: 91, baseType: !2158, size: 16)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2155, file: !121, line: 91, size: 16, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2158, file: !121, line: 96, baseType: !153, size: 8)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2158, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2155, file: !121, line: 100, baseType: !157, size: 16)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2119, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2119, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2119, file: !121, line: 131, baseType: !2166, size: 192, offset: 192)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !2167)
!2167 = !{!2168, !2169, !2175}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2166, file: !72, line: 245, baseType: !2125, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2166, file: !72, line: 246, baseType: !2170, size: 32, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{null, !2174}
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2166, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2116, file: !121, line: 250, baseType: !2177, size: 288, offset: 384)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2177, file: !174, line: 26, baseType: !40, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2177, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2177, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2177, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2177, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2177, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2177, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2177, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2177, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2116, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2116, file: !121, line: 256, baseType: !2147, size: 64, offset: 704)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2116, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2116, file: !121, line: 300, baseType: !2192, size: 96, offset: 800)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !2193)
!2193 = !{!2194, !2195, !2196}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2192, file: !121, line: 153, baseType: !22, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2192, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2192, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2116, file: !121, line: 325, baseType: !2198, size: 32, offset: 896)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !2200)
!2200 = !{!2201, !2207, !2208}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2199, file: !68, line: 5074, baseType: !2202, size: 96)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !2203)
!2203 = !{!2204, !2205, !2206}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2202, file: !473, line: 57, baseType: !476, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2202, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2202, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2199, file: !68, line: 5075, baseType: !2147, size: 64, offset: 96)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2199, file: !68, line: 5076, baseType: !2209, size: 8, offset: 160)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !2210)
!2210 = !{!2211}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2209, file: !483, line: 75, baseType: !113, size: 8)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2116, file: !121, line: 343, baseType: !2213, size: 64, offset: 928)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !2214)
!2214 = !{!2215, !2216}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2213, file: !174, line: 63, baseType: !40, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2213, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2110, file: !72, line: 111, baseType: !2115, size: 32, offset: 96)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2110, file: !72, line: 124, baseType: !55, size: 32, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2110, file: !72, line: 127, baseType: !143, size: 8, offset: 160)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2110, file: !72, line: 153, baseType: !2221, offset: 168)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2222, line: 33, elements: !2223)
!2222 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2223 = !{}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2106, file: !72, line: 170, baseType: !2225, size: 96, offset: 192)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !72, line: 83, size: 96, elements: !2226)
!2226 = !{!2227, !2228}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2225, file: !72, line: 86, baseType: !2115, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2225, file: !72, line: 90, baseType: !2151, size: 64, offset: 32)
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2018, file: !2022, line: 43, type: !2231, isLocal: false, isDefinition: true, align: 512)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2232, size: 8704, elements: !2235)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !110, line: 47, size: 8, elements: !2233)
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2232, file: !110, line: 48, baseType: !113, size: 8)
!2235 = !{!2236}
!2236 = !DISubrange(count: 1088)
!2237 = !DIGlobalVariableExpression(var: !2238, expr: !DIExpression())
!2238 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2018, file: !2022, line: 44, type: !2116, isLocal: false, isDefinition: true)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2018, file: !2022, line: 48, type: !2241, isLocal: false, isDefinition: true)
!2241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2116, size: 1024, elements: !508)
!2242 = !DIGlobalVariableExpression(var: !2243, expr: !DIExpression())
!2243 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2018, file: !2022, line: 217, type: !329, isLocal: false, isDefinition: true)
!2244 = !DIGlobalVariableExpression(var: !2245, expr: !DIExpression())
!2245 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2018, file: !2022, line: 50, type: !2246, isLocal: true, isDefinition: true, align: 512)
!2246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2232, size: 3072, elements: !2247)
!2247 = !{!509, !2248}
!2248 = !DISubrange(count: 384)
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "levels", scope: !2251, file: !2022, line: 232, type: !2271, isLocal: true, isDefinition: true)
!2251 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2022, file: !2022, line: 230, type: !2252, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !2254)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{null, !2021}
!2254 = !{!2255, !2256, !2266, !2270}
!2255 = !DILocalVariable(name: "level", arg: 1, scope: !2251, file: !2022, line: 230, type: !2021)
!2256 = !DILocalVariable(name: "entry", scope: !2251, file: !2022, line: 244, type: !2257)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !307, line: 51, size: 64, elements: !2260)
!2260 = !{!2261, !2265}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2259, file: !307, line: 60, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!55, !2040}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2259, file: !307, line: 65, baseType: !2040, size: 32, offset: 32)
!2266 = !DILocalVariable(name: "dev", scope: !2267, file: !2022, line: 247, type: !2040)
!2267 = distinct !DILexicalBlock(scope: !2268, file: !2022, line: 246, column: 64)
!2268 = distinct !DILexicalBlock(scope: !2269, file: !2022, line: 246, column: 2)
!2269 = distinct !DILexicalBlock(scope: !2251, file: !2022, line: 246, column: 2)
!2270 = !DILocalVariable(name: "rc", scope: !2267, file: !2022, line: 248, type: !55)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 192, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 6)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2232, size: 16896, elements: !2275)
!2275 = !{!509, !2276}
!2276 = !DISubrange(count: 2112)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "states_str", scope: !2279, file: !2280, line: 276, type: !2403, isLocal: true, isDefinition: true)
!2279 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2280, file: !2280, line: 271, type: !2281, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !2394)
!2280 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2281 = !DISubroutineType(types: !2282)
!2282 = !{!319, !2283, !1297, !193}
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !121, line: 347, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !2286)
!2286 = !{!2287, !2345, !2357, !2358, !2359, !2360, !2366, !2381}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2285, file: !121, line: 247, baseType: !2288, size: 384)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !2289)
!2289 = !{!2290, !2314, !2321, !2322, !2323, !2332, !2333, !2334}
!2290 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !121, line: 60, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !121, line: 60, size: 64, elements: !2292)
!2292 = !{!2293, !2308}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2291, file: !121, line: 61, baseType: !2294, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !2295)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !2296)
!2296 = !{!2297, !2303}
!2297 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !77, line: 38, baseType: !2298, size: 32)
!2298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2295, file: !77, line: 38, size: 32, elements: !2299)
!2299 = !{!2300, !2302}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2298, file: !77, line: 39, baseType: !2301, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2298, file: !77, line: 40, baseType: !2301, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !77, line: 42, baseType: !2304, size: 32, offset: 32)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2295, file: !77, line: 42, size: 32, elements: !2305)
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2304, file: !77, line: 43, baseType: !2301, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2304, file: !77, line: 44, baseType: !2301, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2291, file: !121, line: 62, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !2310)
!2310 = !{!2311}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2309, file: !133, line: 50, baseType: !2312, size: 64)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2313, size: 64, elements: !138)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2288, file: !121, line: 68, baseType: !2315, size: 32, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !2318)
!2318 = !{!2319}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2317, file: !72, line: 232, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !2295)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2288, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2288, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!2323 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !121, line: 90, baseType: !2324, size: 16, offset: 112)
!2324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !121, line: 90, size: 16, elements: !2325)
!2325 = !{!2326, !2331}
!2326 = !DIDerivedType(tag: DW_TAG_member, scope: !2324, file: !121, line: 91, baseType: !2327, size: 16)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2324, file: !121, line: 91, size: 16, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !121, line: 96, baseType: !153, size: 8)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2327, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2324, file: !121, line: 100, baseType: !157, size: 16)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2288, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2288, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2288, file: !121, line: 131, baseType: !2335, size: 192, offset: 192)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !2336)
!2336 = !{!2337, !2338, !2344}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2335, file: !72, line: 245, baseType: !2294, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2335, file: !72, line: 246, baseType: !2339, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{null, !2343}
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2335, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2285, file: !121, line: 250, baseType: !2346, size: 288, offset: 384)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !2347)
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2346, file: !174, line: 26, baseType: !40, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2346, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2346, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2346, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2346, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2346, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2346, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2346, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2346, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2285, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2285, file: !121, line: 256, baseType: !2316, size: 64, offset: 704)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2285, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2285, file: !121, line: 300, baseType: !2361, size: 96, offset: 800)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !2362)
!2362 = !{!2363, !2364, !2365}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2361, file: !121, line: 153, baseType: !22, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2361, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2361, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2285, file: !121, line: 325, baseType: !2367, size: 32, offset: 896)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !2369)
!2369 = !{!2370, !2376, !2377}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2368, file: !68, line: 5074, baseType: !2371, size: 96)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !2372)
!2372 = !{!2373, !2374, !2375}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2371, file: !473, line: 57, baseType: !476, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2371, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2371, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2368, file: !68, line: 5075, baseType: !2316, size: 64, offset: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2368, file: !68, line: 5076, baseType: !2378, size: 8, offset: 160)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !2379)
!2379 = !{!2380}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2378, file: !483, line: 75, baseType: !113, size: 8)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2285, file: !121, line: 343, baseType: !2382, size: 64, offset: 928)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2382, file: !174, line: 63, baseType: !40, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2382, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!2386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2387, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !2388, globals: !2390, splitDebugInlining: false, nameTableKind: None)
!2387 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2388 = !{!39, !319, !30, !143, !55, !2389, !24, !193, !1297, !22, !40, !42}
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2390 = !{!2277, !2391}
!2391 = !DIGlobalVariableExpression(var: !2392, expr: !DIExpression())
!2392 = distinct !DIGlobalVariable(name: "states_sz", scope: !2279, file: !2280, line: 279, type: !2393, isLocal: true, isDefinition: true)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1950, size: 256, elements: !1616)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401}
!2395 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2279, file: !2280, line: 271, type: !2283)
!2396 = !DILocalVariable(name: "buf", arg: 2, scope: !2279, file: !2280, line: 271, type: !1297)
!2397 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2279, file: !2280, line: 271, type: !193)
!2398 = !DILocalVariable(name: "off", scope: !2279, file: !2280, line: 273, type: !193)
!2399 = !DILocalVariable(name: "bit", scope: !2279, file: !2280, line: 274, type: !143)
!2400 = !DILocalVariable(name: "thread_state", scope: !2279, file: !2280, line: 275, type: !143)
!2401 = !DILocalVariable(name: "index", scope: !2402, file: !2280, line: 293, type: !143)
!2402 = distinct !DILexicalBlock(scope: !2279, file: !2280, line: 293, column: 2)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 256, elements: !1616)
!2404 = !DIGlobalVariableExpression(var: !2405, expr: !DIExpression())
!2405 = distinct !DIGlobalVariable(name: "lock", scope: !2406, file: !2513, line: 47, type: !2504, isLocal: true, isDefinition: true)
!2406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2407, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !2408, globals: !2512, splitDebugInlining: false, nameTableKind: None)
!2407 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2408 = !{!329, !39, !55, !2409, !2424}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !2411)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !2412)
!2412 = !{!2413, !2419}
!2413 = !DIDerivedType(tag: DW_TAG_member, scope: !2411, file: !77, line: 38, baseType: !2414, size: 32)
!2414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2411, file: !77, line: 38, size: 32, elements: !2415)
!2415 = !{!2416, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2414, file: !77, line: 39, baseType: !2417, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2414, file: !77, line: 40, baseType: !2417, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, scope: !2411, file: !77, line: 42, baseType: !2420, size: 32, offset: 32)
!2420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2411, file: !77, line: 42, size: 32, elements: !2421)
!2421 = !{!2422, !2423}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2420, file: !77, line: 43, baseType: !2417, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2420, file: !77, line: 44, baseType: !2417, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !2426)
!2426 = !{!2427, !2471, !2483, !2484, !2485, !2486, !2492, !2507}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2425, file: !121, line: 247, baseType: !2428, size: 384)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !2429)
!2429 = !{!2430, !2440, !2447, !2448, !2449, !2458, !2459, !2460}
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !121, line: 60, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !121, line: 60, size: 64, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2431, file: !121, line: 61, baseType: !2410, size: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2431, file: !121, line: 62, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !2436)
!2436 = !{!2437}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2435, file: !133, line: 50, baseType: !2438, size: 64)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2439, size: 64, elements: !138)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2428, file: !121, line: 68, baseType: !2441, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !2444)
!2444 = !{!2445}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2443, file: !72, line: 232, baseType: !2446, size: 64)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !2411)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2428, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2428, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!2449 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !121, line: 90, baseType: !2450, size: 16, offset: 112)
!2450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !121, line: 90, size: 16, elements: !2451)
!2451 = !{!2452, !2457}
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2450, file: !121, line: 91, baseType: !2453, size: 16)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2450, file: !121, line: 91, size: 16, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2453, file: !121, line: 96, baseType: !153, size: 8)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2453, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2450, file: !121, line: 100, baseType: !157, size: 16)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2428, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2428, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2428, file: !121, line: 131, baseType: !2461, size: 192, offset: 192)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !2462)
!2462 = !{!2463, !2464, !2470}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2461, file: !72, line: 245, baseType: !2410, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2461, file: !72, line: 246, baseType: !2465, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{null, !2469}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2461, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2425, file: !121, line: 250, baseType: !2472, size: 288, offset: 384)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2472, file: !174, line: 26, baseType: !40, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2472, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2472, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2472, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2472, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2472, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2472, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2472, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2472, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2425, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2425, file: !121, line: 256, baseType: !2442, size: 64, offset: 704)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2425, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2425, file: !121, line: 300, baseType: !2487, size: 96, offset: 800)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !2488)
!2488 = !{!2489, !2490, !2491}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2487, file: !121, line: 153, baseType: !22, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2487, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2487, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2425, file: !121, line: 325, baseType: !2493, size: 32, offset: 896)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !2495)
!2495 = !{!2496, !2502, !2503}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2494, file: !68, line: 5074, baseType: !2497, size: 96)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !2498)
!2498 = !{!2499, !2500, !2501}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2497, file: !473, line: 57, baseType: !476, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2497, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2497, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2494, file: !68, line: 5075, baseType: !2442, size: 64, offset: 96)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2494, file: !68, line: 5076, baseType: !2504, size: 8, offset: 160)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !2505)
!2505 = !{!2506}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2504, file: !483, line: 75, baseType: !113, size: 8)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2425, file: !121, line: 343, baseType: !2508, size: 64, offset: 928)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2508, file: !174, line: 63, baseType: !40, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2508, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!2512 = !{!2404}
!2513 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2514 = !DIGlobalVariableExpression(var: !2515, expr: !DIExpression())
!2515 = distinct !DIGlobalVariable(name: "lock", scope: !2516, file: !2535, line: 39, type: !2536, isLocal: true, isDefinition: true)
!2516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !2518, globals: !2534, splitDebugInlining: false, nameTableKind: None)
!2517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2518 = !{!39, !329, !55, !2519}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !2522)
!2522 = !{!2523, !2529}
!2523 = !DIDerivedType(tag: DW_TAG_member, scope: !2521, file: !77, line: 38, baseType: !2524, size: 32)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2521, file: !77, line: 38, size: 32, elements: !2525)
!2525 = !{!2526, !2528}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2524, file: !77, line: 39, baseType: !2527, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2524, file: !77, line: 40, baseType: !2527, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2521, file: !77, line: 42, baseType: !2530, size: 32, offset: 32)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2521, file: !77, line: 42, size: 32, elements: !2531)
!2531 = !{!2532, !2533}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2530, file: !77, line: 43, baseType: !2527, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2530, file: !77, line: 44, baseType: !2527, size: 32)
!2534 = !{!2514}
!2535 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !2537)
!2537 = !{!2538}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2536, file: !483, line: 75, baseType: !113, size: 8)
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2541, file: !2651, line: 56, type: !2638, isLocal: false, isDefinition: true)
!2541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2542, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !2543, globals: !2648, splitDebugInlining: false, nameTableKind: None)
!2542 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2543 = !{!2544, !1297, !39, !2646, !2055, !30, !897, !55, !40, !42, !2647}
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !2546)
!2546 = !{!2547, !2605, !2617, !2618, !2619, !2620, !2626, !2641}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2545, file: !121, line: 247, baseType: !2548, size: 384)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !2549)
!2549 = !{!2550, !2574, !2581, !2582, !2583, !2592, !2593, !2594}
!2550 = !DIDerivedType(tag: DW_TAG_member, scope: !2548, file: !121, line: 60, baseType: !2551, size: 64)
!2551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2548, file: !121, line: 60, size: 64, elements: !2552)
!2552 = !{!2553, !2568}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2551, file: !121, line: 61, baseType: !2554, size: 64)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !2556)
!2556 = !{!2557, !2563}
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !77, line: 38, baseType: !2558, size: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !77, line: 38, size: 32, elements: !2559)
!2559 = !{!2560, !2562}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2558, file: !77, line: 39, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2558, file: !77, line: 40, baseType: !2561, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !77, line: 42, baseType: !2564, size: 32, offset: 32)
!2564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2555, file: !77, line: 42, size: 32, elements: !2565)
!2565 = !{!2566, !2567}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2564, file: !77, line: 43, baseType: !2561, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2564, file: !77, line: 44, baseType: !2561, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2551, file: !121, line: 62, baseType: !2569, size: 64)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !2570)
!2570 = !{!2571}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2569, file: !133, line: 50, baseType: !2572, size: 64)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2573, size: 64, elements: !138)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2548, file: !121, line: 68, baseType: !2575, size: 32, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !2577)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !2578)
!2578 = !{!2579}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2577, file: !72, line: 232, baseType: !2580, size: 64)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !2555)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2548, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2548, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!2583 = !DIDerivedType(tag: DW_TAG_member, scope: !2548, file: !121, line: 90, baseType: !2584, size: 16, offset: 112)
!2584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2548, file: !121, line: 90, size: 16, elements: !2585)
!2585 = !{!2586, !2591}
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !121, line: 91, baseType: !2587, size: 16)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2584, file: !121, line: 91, size: 16, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2587, file: !121, line: 96, baseType: !153, size: 8)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2587, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2584, file: !121, line: 100, baseType: !157, size: 16)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2548, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2548, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2548, file: !121, line: 131, baseType: !2595, size: 192, offset: 192)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !2596)
!2596 = !{!2597, !2598, !2604}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2595, file: !72, line: 245, baseType: !2554, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2595, file: !72, line: 246, baseType: !2599, size: 32, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !2600)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{null, !2603}
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2595, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2545, file: !121, line: 250, baseType: !2606, size: 288, offset: 384)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2606, file: !174, line: 26, baseType: !40, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2606, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2606, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2606, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2606, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2606, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2606, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2606, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2606, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2545, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2545, file: !121, line: 256, baseType: !2576, size: 64, offset: 704)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2545, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2545, file: !121, line: 300, baseType: !2621, size: 96, offset: 800)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !2622)
!2622 = !{!2623, !2624, !2625}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2621, file: !121, line: 153, baseType: !22, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2621, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2621, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2545, file: !121, line: 325, baseType: !2627, size: 32, offset: 896)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !2629)
!2629 = !{!2630, !2636, !2637}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2628, file: !68, line: 5074, baseType: !2631, size: 96)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !2632)
!2632 = !{!2633, !2634, !2635}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2631, file: !473, line: 57, baseType: !476, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2631, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2631, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2628, file: !68, line: 5075, baseType: !2576, size: 64, offset: 96)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2628, file: !68, line: 5076, baseType: !2638, size: 8, offset: 160)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !2639)
!2639 = !{!2640}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2638, file: !483, line: 75, baseType: !113, size: 8)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2545, file: !121, line: 343, baseType: !2642, size: 64, offset: 928)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !2643)
!2643 = !{!2644, !2645}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2642, file: !174, line: 63, baseType: !40, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2642, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2648 = !{!2539, !2649, !2652, !2654}
!2649 = !DIGlobalVariableExpression(var: !2650, expr: !DIExpression())
!2650 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2541, file: !2651, line: 404, type: !55, isLocal: true, isDefinition: true)
!2651 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2652 = !DIGlobalVariableExpression(var: !2653, expr: !DIExpression())
!2653 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2541, file: !2651, line: 405, type: !55, isLocal: true, isDefinition: true)
!2654 = !DIGlobalVariableExpression(var: !2655, expr: !DIExpression())
!2655 = distinct !DIGlobalVariable(name: "pending_current", scope: !2541, file: !2651, line: 425, type: !2544, isLocal: true, isDefinition: true)
!2656 = !DIGlobalVariableExpression(var: !2657, expr: !DIExpression())
!2657 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2658, file: !2688, line: 15, type: !42, isLocal: true, isDefinition: true)
!2658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !2660, globals: !2685, splitDebugInlining: false, nameTableKind: None)
!2659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2660 = !{!30, !39, !897, !40, !42, !55, !2661, !1297, !32}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 32)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !2663)
!2663 = !{!2664, !2679, !2684}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2662, file: !72, line: 245, baseType: !2665, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !2666)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !2667)
!2667 = !{!2668, !2674}
!2668 = !DIDerivedType(tag: DW_TAG_member, scope: !2666, file: !77, line: 38, baseType: !2669, size: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2666, file: !77, line: 38, size: 32, elements: !2670)
!2670 = !{!2671, !2673}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2669, file: !77, line: 39, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2669, file: !77, line: 40, baseType: !2672, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, scope: !2666, file: !77, line: 42, baseType: !2675, size: 32, offset: 32)
!2675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2666, file: !77, line: 42, size: 32, elements: !2676)
!2676 = !{!2677, !2678}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2675, file: !77, line: 43, baseType: !2672, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2675, file: !77, line: 44, baseType: !2672, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2662, file: !72, line: 246, baseType: !2680, size: 32, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !2681)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 32)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{null, !2661}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2662, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!2685 = !{!2656, !2686, !2692, !2694}
!2686 = !DIGlobalVariableExpression(var: !2687, expr: !DIExpression())
!2687 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2658, file: !2688, line: 19, type: !2689, isLocal: true, isDefinition: true)
!2688 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !2690)
!2690 = !{!2691}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2689, file: !483, line: 75, baseType: !113, size: 8)
!2692 = !DIGlobalVariableExpression(var: !2693, expr: !DIExpression())
!2693 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2658, file: !2688, line: 25, type: !55, isLocal: true, isDefinition: true)
!2694 = !DIGlobalVariableExpression(var: !2695, expr: !DIExpression())
!2695 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2658, file: !2688, line: 17, type: !2696, isLocal: true, isDefinition: true)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !2666)
!2697 = !DIGlobalVariableExpression(var: !2698, expr: !DIExpression())
!2698 = distinct !DIGlobalVariable(name: "lock", scope: !2699, file: !2823, line: 16, type: !2813, isLocal: true, isDefinition: true)
!2699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !2701, globals: !2822, splitDebugInlining: false, nameTableKind: None)
!2700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2701 = !{!2702, !1297, !30, !39, !55, !2748, !2821}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !68, line: 1318, size: 448, elements: !2704)
!2704 = !{!2705, !2730, !2736, !2740, !2741, !2746, !2747}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2703, file: !68, line: 1324, baseType: !2706, size: 192)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !2707)
!2707 = !{!2708, !2723, !2729}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2706, file: !72, line: 245, baseType: !2709, size: 64)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !2710)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !2711)
!2711 = !{!2712, !2718}
!2712 = !DIDerivedType(tag: DW_TAG_member, scope: !2710, file: !77, line: 38, baseType: !2713, size: 32)
!2713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2710, file: !77, line: 38, size: 32, elements: !2714)
!2714 = !{!2715, !2717}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2713, file: !77, line: 39, baseType: !2716, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2713, file: !77, line: 40, baseType: !2716, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2710, file: !77, line: 42, baseType: !2719, size: 32, offset: 32)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2710, file: !77, line: 42, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2719, file: !77, line: 43, baseType: !2716, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2719, file: !77, line: 44, baseType: !2716, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2706, file: !72, line: 246, baseType: !2724, size: 32, offset: 64)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !2725)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{null, !2728}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2706, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2703, file: !68, line: 1327, baseType: !2731, size: 64, offset: 192)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !2732)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !2733)
!2733 = !{!2734}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2732, file: !72, line: 232, baseType: !2735, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !2710)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2703, file: !68, line: 1330, baseType: !2737, size: 32, offset: 256)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 32)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{null, !2702}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2703, file: !68, line: 1333, baseType: !2737, size: 32, offset: 288)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2703, file: !68, line: 1336, baseType: !2742, size: 64, offset: 320)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, elements: !2744)
!2744 = !{!2745}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2743, file: !31, line: 66, baseType: !30, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2703, file: !68, line: 1339, baseType: !40, size: 32, offset: 384)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2703, file: !68, line: 1342, baseType: !39, size: 32, offset: 416)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !2750)
!2750 = !{!2751, !2780, !2792, !2793, !2794, !2795, !2801, !2816}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2749, file: !121, line: 247, baseType: !2752, size: 384)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !2753)
!2753 = !{!2754, !2764, !2766, !2767, !2768, !2777, !2778, !2779}
!2754 = !DIDerivedType(tag: DW_TAG_member, scope: !2752, file: !121, line: 60, baseType: !2755, size: 64)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2752, file: !121, line: 60, size: 64, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2755, file: !121, line: 61, baseType: !2709, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2755, file: !121, line: 62, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !2760)
!2760 = !{!2761}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2759, file: !133, line: 50, baseType: !2762, size: 64)
!2762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2763, size: 64, elements: !138)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2752, file: !121, line: 68, baseType: !2765, size: 32, offset: 64)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2752, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2752, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2752, file: !121, line: 90, baseType: !2769, size: 16, offset: 112)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2752, file: !121, line: 90, size: 16, elements: !2770)
!2770 = !{!2771, !2776}
!2771 = !DIDerivedType(tag: DW_TAG_member, scope: !2769, file: !121, line: 91, baseType: !2772, size: 16)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2769, file: !121, line: 91, size: 16, elements: !2773)
!2773 = !{!2774, !2775}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2772, file: !121, line: 96, baseType: !153, size: 8)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2772, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2769, file: !121, line: 100, baseType: !157, size: 16)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2752, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2752, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2752, file: !121, line: 131, baseType: !2706, size: 192, offset: 192)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2749, file: !121, line: 250, baseType: !2781, size: 288, offset: 384)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !2782)
!2782 = !{!2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2781, file: !174, line: 26, baseType: !40, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2781, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2781, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2781, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2781, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2781, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2781, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2781, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2781, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2749, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2749, file: !121, line: 256, baseType: !2731, size: 64, offset: 704)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2749, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2749, file: !121, line: 300, baseType: !2796, size: 96, offset: 800)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !2797)
!2797 = !{!2798, !2799, !2800}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2796, file: !121, line: 153, baseType: !22, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2796, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2796, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2749, file: !121, line: 325, baseType: !2802, size: 32, offset: 896)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 32)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !2804)
!2804 = !{!2805, !2811, !2812}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2803, file: !68, line: 5074, baseType: !2806, size: 96)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !2807)
!2807 = !{!2808, !2809, !2810}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2806, file: !473, line: 57, baseType: !476, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2806, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2806, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2803, file: !68, line: 5075, baseType: !2731, size: 64, offset: 96)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2803, file: !68, line: 5076, baseType: !2813, size: 8, offset: 160)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !2814)
!2814 = !{!2815}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2813, file: !483, line: 75, baseType: !113, size: 8)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2749, file: !121, line: 343, baseType: !2817, size: 64, offset: 928)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !2818)
!2818 = !{!2819, !2820}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2817, file: !174, line: 63, baseType: !40, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2817, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2822 = !{!2697}
!2823 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !279, splitDebugInlining: false, nameTableKind: None)
!2825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !279, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2830, retainedTypes: !2838, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2830 = !{!209, !2831}
!2831 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2832, line: 54, baseType: !41, size: 32, elements: !2833)
!2832 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2833 = !{!2834, !2835, !2836, !2837}
!2834 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2835 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2836 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2837 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2838 = !{!39, !193, !2055, !24, !2839, !22, !2845, !55, !1025, !2860}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2832, line: 58, baseType: !2841)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2832, line: 58, size: 64, elements: !2842)
!2842 = !{!2843}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2841, file: !2832, line: 58, baseType: !2844, size: 64)
!2844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !1616)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 32)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2832, line: 68, size: 128, elements: !2847)
!2847 = !{!2848, !2851, !2852, !2853}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2846, file: !2832, line: 69, baseType: !2849, size: 64)
!2849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2850, size: 64, elements: !138)
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2832, line: 61, baseType: !40)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2846, file: !2832, line: 70, baseType: !2850, size: 32, offset: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2846, file: !2832, line: 71, baseType: !40, size: 32, offset: 96)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2846, file: !2832, line: 77, baseType: !2854, offset: 128)
!2854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2855, elements: !2858)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2832, line: 64, size: 32, elements: !2856)
!2856 = !{!2857}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2855, file: !2832, line: 65, baseType: !2850, size: 32)
!2858 = !{!2859}
!2859 = !DISubrange(count: 0)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!2861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2862, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2863, retainedTypes: !2883, splitDebugInlining: false, nameTableKind: None)
!2862 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2863 = !{!2864, !2872}
!2864 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2865, line: 69, baseType: !41, size: 32, elements: !2866)
!2865 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2866 = !{!2867, !2868, !2869, !2870, !2871}
!2867 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2868 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2869 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2870 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2871 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2865, line: 56, baseType: !41, size: 32, elements: !2873)
!2873 = !{!2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882}
!2874 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2875 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2876 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2877 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2878 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2879 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2880 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2881 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2882 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2883 = !{!55, !2864, !2872, !2884, !154, !336, !2886, !2887, !144, !158, !319, !193, !39, !22, !41, !2889, !2890, !2891, !2892, !2893, !33, !2894, !2885, !2895, !2896, !2897, !2898}
!2884 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2865, line: 31, baseType: !2885)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !33)
!2886 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !194, line: 329, baseType: !41)
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2865, line: 32, baseType: !2888)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !43)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!2892 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !194, line: 145, baseType: !55)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 32)
!2899 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2900, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2900 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2901 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2902, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2902 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/cpp/cpp_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/cpp/cpp_init_array.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2906, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2907, splitDebugInlining: false, nameTableKind: None)
!2906 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/cpp/cpp_ctors.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2907 = !{!24}
!2908 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_11, file: !2909, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, imports: !2910, splitDebugInlining: false, nameTableKind: None)
!2909 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/cpp/cpp_new.cpp", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2910 = !{!2911, !2914, !2915}
!2911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2912, entity: !2897, file: !2913, line: 19)
!2912 = !DINamespace(name: "std", scope: null)
!2913 = !DIFile(filename: "zephyr/subsys/cpp/include/cstddef", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2914 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2912, entity: !193, file: !2913, line: 20)
!2915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2912, entity: !2916, file: !2913, line: 21)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "max_align_t", file: !194, line: 435, baseType: !2917)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !194, line: 424, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS11max_align_t")
!2918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2920, retainedTypes: !279, splitDebugInlining: false, nameTableKind: None)
!2919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2920 = !{!2921, !209}
!2921 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2922, line: 27, baseType: !41, size: 32, elements: !2923)
!2922 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2923 = !{!2924, !2925, !2926, !2927, !2928}
!2924 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2925 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2926 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2927 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2928 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2931, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2931 = !{!727, !2921, !209}
!2932 = !{!923, !2933, !39, !55, !897, !40, !143, !2950}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !519, line: 426, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 411, size: 28704, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2935, file: !519, line: 413, baseType: !1769, size: 256)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2935, file: !519, line: 414, baseType: !1771, size: 768, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2935, file: !519, line: 415, baseType: !1769, size: 256, offset: 1024)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2935, file: !519, line: 416, baseType: !1771, size: 768, offset: 1280)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2935, file: !519, line: 417, baseType: !1769, size: 256, offset: 2048)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2935, file: !519, line: 418, baseType: !1771, size: 768, offset: 2304)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2935, file: !519, line: 419, baseType: !1769, size: 256, offset: 3072)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2935, file: !519, line: 420, baseType: !1771, size: 768, offset: 3328)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2935, file: !519, line: 421, baseType: !1769, size: 256, offset: 4096)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2935, file: !519, line: 422, baseType: !1782, size: 1792, offset: 4352)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2935, file: !519, line: 423, baseType: !1786, size: 1920, offset: 6144)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2935, file: !519, line: 424, baseType: !1791, size: 20608, offset: 8064)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2935, file: !519, line: 425, baseType: !296, size: 32, offset: 28672)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !2952)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !2953)
!2953 = !{!2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2952, file: !519, line: 447, baseType: !523, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2952, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2952, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2952, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2952, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2952, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2952, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2952, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2952, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2952, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2952, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2952, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2952, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2952, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2952, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2952, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2952, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2952, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2952, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2952, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2952, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!2975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2976, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !279, splitDebugInlining: false, nameTableKind: None)
!2976 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2978, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !2979, splitDebugInlining: false, nameTableKind: None)
!2978 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!2979 = !{!39, !55, !22, !2980}
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !2982)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !2983)
!2983 = !{!2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2982, file: !519, line: 447, baseType: !523, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2982, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2982, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2982, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2982, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2982, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2982, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2982, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2982, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2982, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2982, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2982, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2982, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2982, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2982, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2982, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2982, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2982, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2982, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2982, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2982, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!3005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !3007, splitDebugInlining: false, nameTableKind: None)
!3006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3007 = !{!3008, !39, !55}
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !3010)
!3010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !3011)
!3011 = !{!3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3010, file: !519, line: 447, baseType: !523, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3010, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3010, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3010, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3010, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3010, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3010, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3010, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3010, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3010, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3010, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3010, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3010, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3010, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3010, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3010, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3010, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3010, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3010, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3010, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3010, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!3033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3034, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !3035, splitDebugInlining: false, nameTableKind: None)
!3034 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3035 = !{!3036, !40, !39, !55}
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 32)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3038, line: 98, size: 256, elements: !3039)
!3038 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3039 = !{!3040, !3045, !3050, !3055, !3060, !3065, !3070, !3075}
!3040 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3038, line: 99, baseType: !3041, size: 32)
!3041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3038, line: 99, size: 32, elements: !3042)
!3042 = !{!3043, !3044}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3041, file: !3038, line: 99, baseType: !40, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3041, file: !3038, line: 99, baseType: !40, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3038, line: 100, baseType: !3046, size: 32, offset: 32)
!3046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3038, line: 100, size: 32, elements: !3047)
!3047 = !{!3048, !3049}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3046, file: !3038, line: 100, baseType: !40, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3046, file: !3038, line: 100, baseType: !40, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3038, line: 101, baseType: !3051, size: 32, offset: 64)
!3051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3038, line: 101, size: 32, elements: !3052)
!3052 = !{!3053, !3054}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3051, file: !3038, line: 101, baseType: !40, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3051, file: !3038, line: 101, baseType: !40, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3038, line: 102, baseType: !3056, size: 32, offset: 96)
!3056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3038, line: 102, size: 32, elements: !3057)
!3057 = !{!3058, !3059}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3056, file: !3038, line: 102, baseType: !40, size: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3056, file: !3038, line: 102, baseType: !40, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3038, line: 103, baseType: !3061, size: 32, offset: 128)
!3061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3038, line: 103, size: 32, elements: !3062)
!3062 = !{!3063, !3064}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3061, file: !3038, line: 103, baseType: !40, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3061, file: !3038, line: 103, baseType: !40, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3038, line: 104, baseType: !3066, size: 32, offset: 160)
!3066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3038, line: 104, size: 32, elements: !3067)
!3067 = !{!3068, !3069}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3066, file: !3038, line: 104, baseType: !40, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3066, file: !3038, line: 104, baseType: !40, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3038, line: 105, baseType: !3071, size: 32, offset: 192)
!3071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3038, line: 105, size: 32, elements: !3072)
!3072 = !{!3073, !3074}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3071, file: !3038, line: 105, baseType: !40, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3071, file: !3038, line: 105, baseType: !40, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3037, file: !3038, line: 106, baseType: !40, size: 32, offset: 224)
!3076 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3077, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3077 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/__aeabi_atexit.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3078 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3079, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2920, retainedTypes: !3080, splitDebugInlining: false, nameTableKind: None)
!3079 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3080 = !{!3081, !39, !55, !3106, !2860, !40}
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !3083)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !3084)
!3084 = !{!3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3083, file: !519, line: 447, baseType: !523, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3083, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3083, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3083, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3083, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3083, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3083, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3083, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3083, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3083, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3083, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3083, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3083, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3083, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3083, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3083, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3083, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3083, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3083, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3083, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3083, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3038, line: 141, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3038, line: 97, size: 256, elements: !3109)
!3109 = !{!3110}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3108, file: !3038, line: 107, baseType: !3111, size: 256)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3038, line: 98, size: 256, elements: !3112)
!3112 = !{!3113, !3118, !3123, !3128, !3133, !3138, !3143, !3148}
!3113 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !3038, line: 99, baseType: !3114, size: 32)
!3114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !3038, line: 99, size: 32, elements: !3115)
!3115 = !{!3116, !3117}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3114, file: !3038, line: 99, baseType: !40, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3114, file: !3038, line: 99, baseType: !40, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !3038, line: 100, baseType: !3119, size: 32, offset: 32)
!3119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !3038, line: 100, size: 32, elements: !3120)
!3120 = !{!3121, !3122}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3119, file: !3038, line: 100, baseType: !40, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3119, file: !3038, line: 100, baseType: !40, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !3038, line: 101, baseType: !3124, size: 32, offset: 64)
!3124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !3038, line: 101, size: 32, elements: !3125)
!3125 = !{!3126, !3127}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3124, file: !3038, line: 101, baseType: !40, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3124, file: !3038, line: 101, baseType: !40, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !3038, line: 102, baseType: !3129, size: 32, offset: 96)
!3129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !3038, line: 102, size: 32, elements: !3130)
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3129, file: !3038, line: 102, baseType: !40, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3129, file: !3038, line: 102, baseType: !40, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !3038, line: 103, baseType: !3134, size: 32, offset: 128)
!3134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !3038, line: 103, size: 32, elements: !3135)
!3135 = !{!3136, !3137}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3134, file: !3038, line: 103, baseType: !40, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3134, file: !3038, line: 103, baseType: !40, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !3038, line: 104, baseType: !3139, size: 32, offset: 160)
!3139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !3038, line: 104, size: 32, elements: !3140)
!3140 = !{!3141, !3142}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3139, file: !3038, line: 104, baseType: !40, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3139, file: !3038, line: 104, baseType: !40, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, scope: !3111, file: !3038, line: 105, baseType: !3144, size: 32, offset: 192)
!3144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !3038, line: 105, size: 32, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3144, file: !3038, line: 105, baseType: !40, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3144, file: !3038, line: 105, baseType: !40, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3111, file: !3038, line: 106, baseType: !40, size: 32, offset: 224)
!3149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3150, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1754, retainedTypes: !3151, splitDebugInlining: false, nameTableKind: None)
!3150 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3151 = !{!923, !897, !143, !40, !3152, !3169}
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !519, line: 426, baseType: !3154)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 411, size: 28704, elements: !3155)
!3155 = !{!3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3154, file: !519, line: 413, baseType: !1769, size: 256)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3154, file: !519, line: 414, baseType: !1771, size: 768, offset: 256)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3154, file: !519, line: 415, baseType: !1769, size: 256, offset: 1024)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3154, file: !519, line: 416, baseType: !1771, size: 768, offset: 1280)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3154, file: !519, line: 417, baseType: !1769, size: 256, offset: 2048)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3154, file: !519, line: 418, baseType: !1771, size: 768, offset: 2304)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3154, file: !519, line: 419, baseType: !1769, size: 256, offset: 3072)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3154, file: !519, line: 420, baseType: !1771, size: 768, offset: 3328)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3154, file: !519, line: 421, baseType: !1769, size: 256, offset: 4096)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3154, file: !519, line: 422, baseType: !1782, size: 1792, offset: 4352)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3154, file: !519, line: 423, baseType: !1786, size: 1920, offset: 6144)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3154, file: !519, line: 424, baseType: !1791, size: 20608, offset: 8064)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3154, file: !519, line: 425, baseType: !296, size: 32, offset: 28672)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 32)
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !3171)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3171, file: !519, line: 447, baseType: !523, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3171, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3171, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3171, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3171, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3171, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3171, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3171, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3171, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3171, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3171, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3171, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3171, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3171, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3171, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3171, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3171, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3171, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3171, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3171, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3171, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!3194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3195, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !3196, splitDebugInlining: false, nameTableKind: None)
!3195 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3196 = !{!3197, !39, !55}
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !519, line: 468, baseType: !3199)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 445, size: 1120, elements: !3200)
!3200 = !{!3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3199, file: !519, line: 447, baseType: !523, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3199, file: !519, line: 448, baseType: !296, size: 32, offset: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3199, file: !519, line: 449, baseType: !296, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3199, file: !519, line: 450, baseType: !296, size: 32, offset: 96)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3199, file: !519, line: 451, baseType: !296, size: 32, offset: 128)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3199, file: !519, line: 452, baseType: !296, size: 32, offset: 160)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3199, file: !519, line: 453, baseType: !1806, size: 96, offset: 192)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3199, file: !519, line: 454, baseType: !296, size: 32, offset: 288)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3199, file: !519, line: 455, baseType: !296, size: 32, offset: 320)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3199, file: !519, line: 456, baseType: !296, size: 32, offset: 352)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3199, file: !519, line: 457, baseType: !296, size: 32, offset: 384)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3199, file: !519, line: 458, baseType: !296, size: 32, offset: 416)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3199, file: !519, line: 459, baseType: !296, size: 32, offset: 448)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3199, file: !519, line: 460, baseType: !296, size: 32, offset: 480)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3199, file: !519, line: 461, baseType: !1817, size: 64, offset: 512)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3199, file: !519, line: 462, baseType: !523, size: 32, offset: 576)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3199, file: !519, line: 463, baseType: !523, size: 32, offset: 608)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3199, file: !519, line: 464, baseType: !1821, size: 128, offset: 640)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3199, file: !519, line: 465, baseType: !1823, size: 160, offset: 768)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3199, file: !519, line: 466, baseType: !1825, size: 160, offset: 928)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3199, file: !519, line: 467, baseType: !296, size: 32, offset: 1088)
!3222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3224, splitDebugInlining: false, nameTableKind: None)
!3223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3224 = !{!113, !1297, !193, !1130, !3225, !144, !39}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!3227 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3228, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3229, splitDebugInlining: false, nameTableKind: None)
!3228 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3229 = !{!3230}
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !292, line: 586, baseType: !3232)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 550, size: 1216, elements: !3233)
!3233 = !{!3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3232, file: !292, line: 552, baseType: !296, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3232, file: !292, line: 553, baseType: !296, size: 32, offset: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3232, file: !292, line: 554, baseType: !296, size: 32, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3232, file: !292, line: 555, baseType: !296, size: 32, offset: 96)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3232, file: !292, line: 556, baseType: !296, size: 32, offset: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3232, file: !292, line: 557, baseType: !296, size: 32, offset: 160)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3232, file: !292, line: 558, baseType: !296, size: 32, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3232, file: !292, line: 559, baseType: !40, size: 32, offset: 224)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3232, file: !292, line: 560, baseType: !296, size: 32, offset: 256)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3232, file: !292, line: 561, baseType: !296, size: 32, offset: 288)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3232, file: !292, line: 562, baseType: !995, size: 64, offset: 320)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3232, file: !292, line: 563, baseType: !296, size: 32, offset: 384)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3232, file: !292, line: 564, baseType: !296, size: 32, offset: 416)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3232, file: !292, line: 565, baseType: !296, size: 32, offset: 448)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3232, file: !292, line: 566, baseType: !40, size: 32, offset: 480)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3232, file: !292, line: 567, baseType: !296, size: 32, offset: 512)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3232, file: !292, line: 568, baseType: !296, size: 32, offset: 544)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3232, file: !292, line: 569, baseType: !995, size: 64, offset: 576)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3232, file: !292, line: 570, baseType: !296, size: 32, offset: 640)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3232, file: !292, line: 571, baseType: !296, size: 32, offset: 672)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3232, file: !292, line: 572, baseType: !296, size: 32, offset: 704)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3232, file: !292, line: 573, baseType: !40, size: 32, offset: 736)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3232, file: !292, line: 574, baseType: !296, size: 32, offset: 768)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3232, file: !292, line: 575, baseType: !296, size: 32, offset: 800)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3232, file: !292, line: 576, baseType: !995, size: 64, offset: 832)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3232, file: !292, line: 577, baseType: !296, size: 32, offset: 896)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3232, file: !292, line: 578, baseType: !296, size: 32, offset: 928)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3232, file: !292, line: 579, baseType: !995, size: 64, offset: 960)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3232, file: !292, line: 580, baseType: !296, size: 32, offset: 1024)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3232, file: !292, line: 581, baseType: !296, size: 32, offset: 1056)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3232, file: !292, line: 582, baseType: !296, size: 32, offset: 1088)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3232, file: !292, line: 583, baseType: !296, size: 32, offset: 1120)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3232, file: !292, line: 584, baseType: !296, size: 32, offset: 1152)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3232, file: !292, line: 585, baseType: !296, size: 32, offset: 1184)
!3268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3272, retainedTypes: !3288, splitDebugInlining: false, nameTableKind: None)
!3271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3272 = !{!3273, !3280, !3284}
!3273 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3274, line: 38, baseType: !41, size: 32, elements: !3275)
!3274 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3275 = !{!3276, !3277, !3278, !3279}
!3276 = !DIEnumerator(name: "HAL_OK", value: 0)
!3277 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3278 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3279 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3280 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !968, line: 184, baseType: !41, size: 32, elements: !3281)
!3281 = !{!3282, !3283}
!3282 = !DIEnumerator(name: "RESET", value: 0)
!3283 = !DIEnumerator(name: "SET", value: 1)
!3284 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !968, line: 190, baseType: !41, size: 32, elements: !3285)
!3285 = !{!3286, !3287}
!3286 = !DIEnumerator(name: "DISABLE", value: 0)
!3287 = !DIEnumerator(name: "ENABLE", value: 1)
!3288 = !{!3289, !40, !3327, !1610, !143, !42, !39}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !292, line: 586, baseType: !3291)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 550, size: 1216, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3291, file: !292, line: 552, baseType: !296, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3291, file: !292, line: 553, baseType: !296, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3291, file: !292, line: 554, baseType: !296, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3291, file: !292, line: 555, baseType: !296, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3291, file: !292, line: 556, baseType: !296, size: 32, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3291, file: !292, line: 557, baseType: !296, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3291, file: !292, line: 558, baseType: !296, size: 32, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3291, file: !292, line: 559, baseType: !40, size: 32, offset: 224)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3291, file: !292, line: 560, baseType: !296, size: 32, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3291, file: !292, line: 561, baseType: !296, size: 32, offset: 288)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3291, file: !292, line: 562, baseType: !995, size: 64, offset: 320)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3291, file: !292, line: 563, baseType: !296, size: 32, offset: 384)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3291, file: !292, line: 564, baseType: !296, size: 32, offset: 416)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3291, file: !292, line: 565, baseType: !296, size: 32, offset: 448)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3291, file: !292, line: 566, baseType: !40, size: 32, offset: 480)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3291, file: !292, line: 567, baseType: !296, size: 32, offset: 512)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3291, file: !292, line: 568, baseType: !296, size: 32, offset: 544)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3291, file: !292, line: 569, baseType: !995, size: 64, offset: 576)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3291, file: !292, line: 570, baseType: !296, size: 32, offset: 640)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3291, file: !292, line: 571, baseType: !296, size: 32, offset: 672)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3291, file: !292, line: 572, baseType: !296, size: 32, offset: 704)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3291, file: !292, line: 573, baseType: !40, size: 32, offset: 736)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3291, file: !292, line: 574, baseType: !296, size: 32, offset: 768)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3291, file: !292, line: 575, baseType: !296, size: 32, offset: 800)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3291, file: !292, line: 576, baseType: !995, size: 64, offset: 832)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3291, file: !292, line: 577, baseType: !296, size: 32, offset: 896)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3291, file: !292, line: 578, baseType: !296, size: 32, offset: 928)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3291, file: !292, line: 579, baseType: !995, size: 64, offset: 960)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3291, file: !292, line: 580, baseType: !296, size: 32, offset: 1024)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3291, file: !292, line: 581, baseType: !296, size: 32, offset: 1056)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3291, file: !292, line: 582, baseType: !296, size: 32, offset: 1088)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3291, file: !292, line: 583, baseType: !296, size: 32, offset: 1120)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3291, file: !292, line: 584, baseType: !296, size: 32, offset: 1152)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3291, file: !292, line: 585, baseType: !296, size: 32, offset: 1184)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 32)
!3328 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !292, line: 544, baseType: !3329)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 540, size: 64, elements: !3330)
!3330 = !{!3331, !3332}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3329, file: !292, line: 542, baseType: !296, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3329, file: !292, line: 543, baseType: !296, size: 32, offset: 32)
!3333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3335, retainedTypes: !3336, splitDebugInlining: false, nameTableKind: None)
!3334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3335 = !{!967}
!3336 = !{!3337, !40, !3345, !3351, !3362}
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 32)
!3338 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !519, line: 770, baseType: !3339)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 764, size: 128, elements: !3340)
!3340 = !{!3341, !3342, !3343, !3344}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3339, file: !519, line: 766, baseType: !296, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3339, file: !519, line: 767, baseType: !296, size: 32, offset: 32)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3339, file: !519, line: 768, baseType: !296, size: 32, offset: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3339, file: !519, line: 769, baseType: !523, size: 32, offset: 96)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !292, line: 544, baseType: !3347)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 540, size: 64, elements: !3348)
!3348 = !{!3349, !3350}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3347, file: !292, line: 542, baseType: !296, size: 32)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3347, file: !292, line: 543, baseType: !296, size: 32, offset: 32)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !292, line: 407, baseType: !3353)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 398, size: 224, elements: !3354)
!3354 = !{!3355, !3356, !3357, !3358, !3359, !3360, !3361}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3353, file: !292, line: 400, baseType: !296, size: 32)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3353, file: !292, line: 401, baseType: !296, size: 32, offset: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3353, file: !292, line: 402, baseType: !296, size: 32, offset: 64)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3353, file: !292, line: 403, baseType: !296, size: 32, offset: 96)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3353, file: !292, line: 404, baseType: !296, size: 32, offset: 128)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3353, file: !292, line: 405, baseType: !296, size: 32, offset: 160)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3353, file: !292, line: 406, baseType: !296, size: 32, offset: 192)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !292, line: 586, baseType: !3364)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !292, line: 550, size: 1216, elements: !3365)
!3365 = !{!3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3364, file: !292, line: 552, baseType: !296, size: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3364, file: !292, line: 553, baseType: !296, size: 32, offset: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3364, file: !292, line: 554, baseType: !296, size: 32, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3364, file: !292, line: 555, baseType: !296, size: 32, offset: 96)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3364, file: !292, line: 556, baseType: !296, size: 32, offset: 128)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3364, file: !292, line: 557, baseType: !296, size: 32, offset: 160)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3364, file: !292, line: 558, baseType: !296, size: 32, offset: 192)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3364, file: !292, line: 559, baseType: !40, size: 32, offset: 224)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3364, file: !292, line: 560, baseType: !296, size: 32, offset: 256)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3364, file: !292, line: 561, baseType: !296, size: 32, offset: 288)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3364, file: !292, line: 562, baseType: !995, size: 64, offset: 320)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3364, file: !292, line: 563, baseType: !296, size: 32, offset: 384)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3364, file: !292, line: 564, baseType: !296, size: 32, offset: 416)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3364, file: !292, line: 565, baseType: !296, size: 32, offset: 448)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3364, file: !292, line: 566, baseType: !40, size: 32, offset: 480)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3364, file: !292, line: 567, baseType: !296, size: 32, offset: 512)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3364, file: !292, line: 568, baseType: !296, size: 32, offset: 544)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3364, file: !292, line: 569, baseType: !995, size: 64, offset: 576)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3364, file: !292, line: 570, baseType: !296, size: 32, offset: 640)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3364, file: !292, line: 571, baseType: !296, size: 32, offset: 672)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3364, file: !292, line: 572, baseType: !296, size: 32, offset: 704)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3364, file: !292, line: 573, baseType: !40, size: 32, offset: 736)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3364, file: !292, line: 574, baseType: !296, size: 32, offset: 768)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3364, file: !292, line: 575, baseType: !296, size: 32, offset: 800)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3364, file: !292, line: 576, baseType: !995, size: 64, offset: 832)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3364, file: !292, line: 577, baseType: !296, size: 32, offset: 896)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3364, file: !292, line: 578, baseType: !296, size: 32, offset: 928)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3364, file: !292, line: 579, baseType: !995, size: 64, offset: 960)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3364, file: !292, line: 580, baseType: !296, size: 32, offset: 1024)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3364, file: !292, line: 581, baseType: !296, size: 32, offset: 1056)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3364, file: !292, line: 582, baseType: !296, size: 32, offset: 1088)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3364, file: !292, line: 583, baseType: !296, size: 32, offset: 1120)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3364, file: !292, line: 584, baseType: !296, size: 32, offset: 1152)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3364, file: !292, line: 585, baseType: !296, size: 32, offset: 1184)
!3400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !3402, splitDebugInlining: false, nameTableKind: None)
!3401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3402 = !{!39, !193}
!3403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3405, retainedTypes: !279, splitDebugInlining: false, nameTableKind: None)
!3404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3405 = !{!3406, !3413, !209}
!3406 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3407, line: 14, baseType: !41, size: 32, elements: !3408)
!3407 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3408 = !{!3409, !3410, !3411, !3412}
!3409 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3410 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3411 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3412 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3407, line: 42, baseType: !41, size: 32, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3418, !3419, !3420}
!3415 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3416 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3417 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3418 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3419 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3420 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3422, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !279, splitDebugInlining: false, nameTableKind: None)
!3422 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !3425, splitDebugInlining: false, nameTableKind: None)
!3424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3425 = !{!22, !39, !55}
!3426 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3427, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !208, retainedTypes: !279, splitDebugInlining: false, nameTableKind: None)
!3427 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3428 = !{!"Ubuntu clang version 14.0.6"}
!3429 = !{i32 7, !"Dwarf Version", i32 4}
!3430 = !{i32 2, !"Debug Info Version", i32 3}
!3431 = !{i32 1, !"wchar_size", i32 4}
!3432 = !{i32 1, !"min_enum_size", i32 4}
!3433 = !{i32 1, !"branch-target-enforcement", i32 0}
!3434 = !{i32 1, !"sign-return-address", i32 0}
!3435 = !{i32 1, !"sign-return-address-all", i32 0}
!3436 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3437 = !{i32 7, !"frame-pointer", i32 2}
!3438 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3439, file: !3439, line: 26, type: !3440, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2824, retainedNodes: !2223)
!3439 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3440 = !DISubroutineType(types: !3441)
!3441 = !{null}
!3442 = !DILocation(line: 28, column: 1, scope: !3438)
!3443 = !{i64 2155360572, i64 2155360592, i64 2155360655}
!3444 = !DILocation(line: 29, column: 1, scope: !3438)
!3445 = !{i64 2155360987, i64 2155361007, i64 2155361070}
!3446 = !DILocation(line: 30, column: 1, scope: !3438)
!3447 = !{i64 2155361406, i64 2155361426, i64 2155361489}
!3448 = !DILocation(line: 31, column: 1, scope: !3438)
!3449 = !{i64 2155361825, i64 2155361845, i64 2155361908}
!3450 = !DILocation(line: 33, column: 1, scope: !3438)
!3451 = !{i64 2155362117, i64 2155362137, i64 2155362200}
!3452 = !DILocation(line: 35, column: 1, scope: !3438)
!3453 = !{i64 2155362442, i64 2155362462, i64 2155362525}
!3454 = !DILocation(line: 50, column: 1, scope: !3438)
!3455 = !{i64 2155362869, i64 2155362889, i64 2155362952}
!3456 = !DILocation(line: 54, column: 1, scope: !3438)
!3457 = !{i64 2155367369, i64 2155367389, i64 2155367452}
!3458 = !DILocation(line: 61, column: 1, scope: !3438)
!3459 = !{i64 2155367686, i64 2155367706, i64 2155367769}
!3460 = !DILocation(line: 63, column: 1, scope: !3438)
!3461 = !{i64 2155368066, i64 2155368086, i64 2155368149}
!3462 = !DILocation(line: 64, column: 1, scope: !3438)
!3463 = !{i64 2155368588, i64 2155368608, i64 2155368671}
!3464 = !DILocation(line: 65, column: 1, scope: !3438)
!3465 = !{i64 2155369086, i64 2155369106, i64 2155369169}
!3466 = !DILocation(line: 66, column: 1, scope: !3438)
!3467 = !{i64 2155369568, i64 2155369588, i64 2155369651}
!3468 = !DILocation(line: 67, column: 1, scope: !3438)
!3469 = !{i64 2155370075, i64 2155370095, i64 2155370158}
!3470 = !DILocation(line: 68, column: 1, scope: !3438)
!3471 = !{i64 2155370563, i64 2155370583, i64 2155370646}
!3472 = !DILocation(line: 70, column: 1, scope: !3438)
!3473 = !{i64 2155371031, i64 2155371051, i64 2155371114}
!3474 = !DILocation(line: 71, column: 1, scope: !3438)
!3475 = !{i64 2155371473, i64 2155371493, i64 2155371556}
!3476 = !DILocation(line: 72, column: 1, scope: !3438)
!3477 = !{i64 2155371931, i64 2155371951, i64 2155372014}
!3478 = !DILocation(line: 79, column: 1, scope: !3438)
!3479 = !{i64 2155372385, i64 2155372405, i64 2155372468}
!3480 = !DILocation(line: 80, column: 1, scope: !3438)
!3481 = !{i64 2155372896, i64 2155372916, i64 2155372979}
!3482 = !DILocation(line: 82, column: 1, scope: !3438)
!3483 = !{i64 2155373387, i64 2155373407, i64 2155373470}
!3484 = !DILocation(line: 97, column: 1, scope: !3438)
!3485 = !{i64 2155373724, i64 2155373744, i64 2155373807}
!3486 = !DILocation(line: 99, column: 1, scope: !3438)
!3487 = !{i64 2155373942, i64 2155373962, i64 2155374025}
!3488 = !DILocation(line: 102, column: 1, scope: !3438)
!3489 = !{i64 2155374199, i64 2155374219, i64 2155374282}
!3490 = !DILocation(line: 105, column: 1, scope: !3438)
!3491 = !{i64 2155374439, i64 2155374459, i64 2155374522}
!3492 = !DILocation(line: 115, column: 1, scope: !3438)
!3493 = !{i64 2155374778, i64 2155374798, i64 2155374861}
!3494 = !DILocation(line: 118, column: 1, scope: !3438)
!3495 = !{i64 2155375122, i64 2155375142, i64 2155375205}
!3496 = !DILocation(line: 32, column: 1, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3438, file: !3498, discriminator: 0)
!3498 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3499 = !{i64 2155375478, i64 2155375498, i64 2155375561}
!3500 = !DILocation(line: 33, column: 1, scope: !3497)
!3501 = !{i64 2155375990, i64 2155376010, i64 2155376073}
!3502 = !DILocation(line: 53, column: 1, scope: !3497)
!3503 = !{i64 2155376498, i64 2155376518, i64 2155376581}
!3504 = !DILocation(line: 54, column: 1, scope: !3497)
!3505 = !{i64 2155380977, i64 2155380997, i64 2155381060}
!3506 = !DILocation(line: 55, column: 1, scope: !3497)
!3507 = !{i64 2155381395, i64 2155381415, i64 2155381478}
!3508 = !DILocation(line: 56, column: 1, scope: !3497)
!3509 = !{i64 2155381813, i64 2155381833, i64 2155381896}
!3510 = !DILocation(line: 57, column: 1, scope: !3497)
!3511 = !{i64 2155382231, i64 2155382251, i64 2155382314}
!3512 = !DILocation(line: 58, column: 1, scope: !3497)
!3513 = !{i64 2155382649, i64 2155382669, i64 2155382732}
!3514 = !DILocation(line: 59, column: 1, scope: !3497)
!3515 = !{i64 2155383067, i64 2155383087, i64 2155383150}
!3516 = !DILocation(line: 60, column: 1, scope: !3497)
!3517 = !{i64 2155383491, i64 2155383511, i64 2155383574}
!3518 = !DILocation(line: 61, column: 1, scope: !3497)
!3519 = !{i64 2155383808, i64 2155383828, i64 2155383891}
!3520 = !DILocation(line: 70, column: 1, scope: !3497)
!3521 = !{i64 2155384037, i64 2155384057, i64 2155384120}
!3522 = !DILocation(line: 72, column: 1, scope: !3497)
!3523 = !{i64 2155384369, i64 2155384389, i64 2155384452}
!3524 = !DILocation(line: 73, column: 1, scope: !3497)
!3525 = !{i64 2155384819, i64 2155384839, i64 2155384902}
!3526 = !DILocation(line: 74, column: 1, scope: !3497)
!3527 = !{i64 2155385269, i64 2155385289, i64 2155385352}
!3528 = !DILocation(line: 75, column: 1, scope: !3497)
!3529 = !{i64 2155385719, i64 2155385739, i64 2155385802}
!3530 = !DILocation(line: 76, column: 1, scope: !3497)
!3531 = !{i64 2155386169, i64 2155386189, i64 2155386252}
!3532 = !DILocation(line: 77, column: 1, scope: !3497)
!3533 = !{i64 2155386619, i64 2155386639, i64 2155386702}
!3534 = !DILocation(line: 78, column: 1, scope: !3497)
!3535 = !{i64 2155387069, i64 2155387089, i64 2155387152}
!3536 = !DILocation(line: 79, column: 1, scope: !3497)
!3537 = !{i64 2155387519, i64 2155387539, i64 2155387602}
!3538 = !DILocation(line: 80, column: 1, scope: !3497)
!3539 = !{i64 2155387972, i64 2155387992, i64 2155388055}
!3540 = !DILocation(line: 84, column: 1, scope: !3497)
!3541 = !{i64 2155388304, i64 2155388324, i64 2155388387}
!3542 = !DILocation(line: 91, column: 1, scope: !3497)
!3543 = !{i64 2155388701, i64 2155388721, i64 2155388784}
!3544 = !DILocation(line: 93, column: 1, scope: !3497)
!3545 = !{i64 2155389068, i64 2155389088, i64 2155389151}
!3546 = !DILocation(line: 106, column: 1, scope: !3497)
!3547 = !{i64 2155389338, i64 2155389358, i64 2155389421}
!3548 = !DILocation(line: 11, column: 1, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3438, file: !3550, discriminator: 0)
!3550 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3551 = distinct !DISubprogram(name: "wait", linkageName: "_ZN13cpp_semaphore4waitEv", scope: !44, file: !45, line: 78, type: !99, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, declaration: !98, retainedNodes: !3552)
!3552 = !{!3553}
!3553 = !DILocalVariable(name: "this", arg: 1, scope: !3551, type: !3554, flags: DIFlagArtificial | DIFlagObjectPointer)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 32)
!3555 = !DILocation(line: 0, scope: !3551)
!3556 = !DILocation(line: 80, column: 14, scope: !3551)
!3557 = !DILocation(line: 80, column: 2, scope: !3551)
!3558 = !DILocation(line: 81, column: 2, scope: !3551)
!3559 = distinct !DISubprogram(name: "wait", linkageName: "_ZN13cpp_semaphore4waitEi", scope: !44, file: !45, line: 95, type: !102, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, declaration: !101, retainedNodes: !3560)
!3560 = !{!3561, !3562}
!3561 = !DILocalVariable(name: "this", arg: 1, scope: !3559, type: !3554, flags: DIFlagArtificial | DIFlagObjectPointer)
!3562 = !DILocalVariable(name: "timeout", arg: 2, scope: !3559, file: !45, line: 95, type: !55)
!3563 = !DILocation(line: 0, scope: !3559)
!3564 = !DILocation(line: 97, column: 21, scope: !3559)
!3565 = !DILocation(line: 97, column: 37, scope: !3559)
!3566 = !{i64 -21474836480, i64 21474836471}
!3567 = !DILocation(line: 97, column: 9, scope: !3559)
!3568 = !DILocation(line: 97, column: 2, scope: !3559)
!3569 = distinct !DISubprogram(name: "give", linkageName: "_ZN13cpp_semaphore4giveEv", scope: !44, file: !45, line: 105, type: !94, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, declaration: !104, retainedNodes: !3570)
!3570 = !{!3571}
!3571 = !DILocalVariable(name: "this", arg: 1, scope: !3569, type: !3554, flags: DIFlagArtificial | DIFlagObjectPointer)
!3572 = !DILocation(line: 0, scope: !3569)
!3573 = !DILocation(line: 107, column: 14, scope: !3569)
!3574 = !DILocation(line: 107, column: 2, scope: !3569)
!3575 = !DILocation(line: 108, column: 1, scope: !3569)
!3576 = distinct !DISubprogram(name: "~cpp_semaphore", linkageName: "_ZN13cpp_semaphoreD2Ev", scope: !44, file: !45, line: 55, type: !94, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, declaration: !97, retainedNodes: !3577)
!3577 = !{!3578}
!3578 = !DILocalVariable(name: "this", arg: 1, scope: !3576, type: !3554, flags: DIFlagArtificial | DIFlagObjectPointer)
!3579 = !DILocation(line: 0, scope: !3576)
!3580 = !DILocation(line: 55, column: 28, scope: !3576)
!3581 = distinct !DISubprogram(name: "~cpp_semaphore", linkageName: "_ZN13cpp_semaphoreD0Ev", scope: !44, file: !45, line: 55, type: !94, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, declaration: !97, retainedNodes: !3582)
!3582 = !{!3583}
!3583 = !DILocalVariable(name: "this", arg: 1, scope: !3581, type: !3554, flags: DIFlagArtificial | DIFlagObjectPointer)
!3584 = !DILocation(line: 0, scope: !3581)
!3585 = !DILocation(line: 55, column: 27, scope: !3581)
!3586 = !DILocation(line: 55, column: 28, scope: !3581)
!3587 = distinct !DISubprogram(name: "k_sem_give", linkageName: "_ZL10k_sem_giveP5k_sem", scope: !3588, file: !3588, line: 1061, type: !3589, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3592)
!3588 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!3589 = !DISubroutineType(types: !3590)
!3590 = !{null, !3591}
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 32)
!3592 = !{!3593}
!3593 = !DILocalVariable(name: "sem", arg: 1, scope: !3587, file: !3588, line: 1061, type: !3591)
!3594 = !DILocation(line: 0, scope: !3587)
!3595 = !DILocation(line: 1070, column: 2, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3587, file: !3588, line: 1070, column: 2)
!3597 = !{i64 2155079251}
!3598 = !DILocation(line: 1071, column: 2, scope: !3587)
!3599 = !DILocation(line: 1072, column: 1, scope: !3587)
!3600 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", linkageName: "_ZL20k_ms_to_ticks_ceil64y", scope: !3601, file: !3601, line: 403, type: !3602, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3604)
!3601 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!42, !42}
!3604 = !{!3605}
!3605 = !DILocalVariable(name: "t", arg: 1, scope: !3600, file: !3601, line: 403, type: !42)
!3606 = !DILocation(line: 0, scope: !3600)
!3607 = !DILocalVariable(name: "t", arg: 1, scope: !3608, file: !3601, line: 102, type: !42)
!3608 = distinct !DISubprogram(name: "z_tmcvt", linkageName: "_ZL7z_tmcvtyjjbbbb", scope: !3601, file: !3601, line: 102, type: !3609, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3612)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!42, !42, !40, !40, !3611, !3611, !3611, !3611}
!3611 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!3612 = !{!3607, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622}
!3613 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3608, file: !3601, line: 102, type: !40)
!3614 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3608, file: !3601, line: 103, type: !40)
!3615 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3608, file: !3601, line: 103, type: !3611)
!3616 = !DILocalVariable(name: "result32", arg: 5, scope: !3608, file: !3601, line: 104, type: !3611)
!3617 = !DILocalVariable(name: "round_up", arg: 6, scope: !3608, file: !3601, line: 104, type: !3611)
!3618 = !DILocalVariable(name: "round_off", arg: 7, scope: !3608, file: !3601, line: 105, type: !3611)
!3619 = !DILocalVariable(name: "mul_ratio", scope: !3608, file: !3601, line: 107, type: !3611)
!3620 = !DILocalVariable(name: "div_ratio", scope: !3608, file: !3601, line: 109, type: !3611)
!3621 = !DILocalVariable(name: "off", scope: !3608, file: !3601, line: 116, type: !42)
!3622 = !DILocalVariable(name: "rdivisor", scope: !3623, file: !3601, line: 119, type: !40)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !3601, line: 118, column: 18)
!3624 = distinct !DILexicalBlock(scope: !3608, file: !3601, line: 118, column: 6)
!3625 = !DILocation(line: 0, scope: !3608, inlinedAt: !3626)
!3626 = distinct !DILocation(line: 406, column: 9, scope: !3600)
!3627 = !DILocation(line: 145, column: 13, scope: !3628, inlinedAt: !3626)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !3601, line: 144, column: 10)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !3601, line: 142, column: 7)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !3601, line: 141, column: 24)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !3601, line: 141, column: 13)
!3632 = distinct !DILexicalBlock(scope: !3608, file: !3601, line: 134, column: 6)
!3633 = !DILocation(line: 406, column: 2, scope: !3600)
!3634 = distinct !DISubprogram(name: "k_sem_take", linkageName: "_ZL10k_sem_takeP5k_sem11k_timeout_t", scope: !3588, file: !3588, line: 1044, type: !3635, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3641)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!55, !3591, !3637}
!3637 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !3638)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, flags: DIFlagTypePassByValue, elements: !3639, identifier: "_ZTS11k_timeout_t")
!3639 = !{!3640}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3638, file: !31, line: 66, baseType: !30, size: 64)
!3641 = !{!3642, !3643}
!3642 = !DILocalVariable(name: "sem", arg: 1, scope: !3634, file: !3588, line: 1044, type: !3591)
!3643 = !DILocalVariable(name: "timeout", arg: 2, scope: !3634, file: !3588, line: 1044, type: !3637)
!3644 = !DILocation(line: 0, scope: !3634)
!3645 = !DILocation(line: 1053, column: 2, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3634, file: !3588, line: 1053, column: 2)
!3647 = !{i64 2155079185}
!3648 = !DILocation(line: 1054, column: 9, scope: !3634)
!3649 = !DILocation(line: 1054, column: 2, scope: !3634)
!3650 = distinct !DISubprogram(linkageName: "_GLOBAL__sub_I_main.cpp", scope: !45, file: !45, type: !3651, flags: DIFlagArtificial | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2223)
!3651 = !DISubroutineType(types: !2223)
!3652 = !DILocation(line: 0, scope: !3650)
!3653 = distinct !DISubprogram(name: "__cxx_global_var_init", scope: !45, file: !45, type: !3440, flags: DIFlagArtificial | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2223)
!3654 = !DILocation(line: 110, column: 15, scope: !3653)
!3655 = distinct !DISubprogram(name: "__cxx_global_var_init.1", scope: !45, file: !45, type: !3440, flags: DIFlagArtificial | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2223)
!3656 = !DILocation(line: 111, column: 15, scope: !3655)
!3657 = distinct !DISubprogram(name: "cpp_semaphore", linkageName: "_ZN13cpp_semaphoreC2Ev", scope: !44, file: !45, line: 64, type: !94, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, declaration: !93, retainedNodes: !3658)
!3658 = !{!3659}
!3659 = !DILocalVariable(name: "this", arg: 1, scope: !3657, type: !3554, flags: DIFlagArtificial | DIFlagObjectPointer)
!3660 = !DILocation(line: 0, scope: !3657)
!3661 = !DILocation(line: 65, column: 1, scope: !3657)
!3662 = !DILocation(line: 64, column: 16, scope: !3657)
!3663 = !DILocation(line: 66, column: 2, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3657, file: !45, line: 65, column: 1)
!3665 = !DILocation(line: 67, column: 14, scope: !3664)
!3666 = !DILocation(line: 67, column: 2, scope: !3664)
!3667 = !DILocation(line: 68, column: 1, scope: !3657)
!3668 = distinct !DISubprogram(name: "semaphore", linkageName: "_ZN9semaphoreC2Ev", scope: !48, file: !45, line: 29, type: !64, scopeLine: 29, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, declaration: !3669, retainedNodes: !3670)
!3669 = !DISubprogram(name: "semaphore", scope: !48, type: !64, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3670 = !{!3671}
!3671 = !DILocalVariable(name: "this", arg: 1, scope: !3668, type: !3672, flags: DIFlagArtificial | DIFlagObjectPointer)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 32)
!3673 = !DILocation(line: 0, scope: !3668)
!3674 = !DILocation(line: 29, column: 7, scope: !3668)
!3675 = distinct !DISubprogram(name: "k_sem_init", linkageName: "_ZL10k_sem_initP5k_semjj", scope: !3588, file: !3588, line: 1026, type: !3676, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3678)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{!55, !3591, !41, !41}
!3678 = !{!3679, !3680, !3681}
!3679 = !DILocalVariable(name: "sem", arg: 1, scope: !3675, file: !3588, line: 1026, type: !3591)
!3680 = !DILocalVariable(name: "initial_count", arg: 2, scope: !3675, file: !3588, line: 1026, type: !41)
!3681 = !DILocalVariable(name: "limit", arg: 3, scope: !3675, file: !3588, line: 1026, type: !41)
!3682 = !DILocation(line: 0, scope: !3675)
!3683 = !DILocation(line: 1036, column: 2, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3675, file: !3588, line: 1036, column: 2)
!3685 = !{i64 2155079119}
!3686 = !DILocation(line: 1037, column: 9, scope: !3675)
!3687 = !DILocation(line: 1037, column: 2, scope: !3675)
!3688 = distinct !DISubprogram(name: "coop_thread_entry", linkageName: "_Z17coop_thread_entryv", scope: !45, file: !45, line: 113, type: !3440, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3689)
!3689 = !{!3690}
!3690 = !DILocalVariable(name: "timer", scope: !3688, file: !45, line: 115, type: !3691)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !68, line: 1318, size: 448, flags: DIFlagTypePassByValue, elements: !3692, identifier: "_ZTS7k_timer")
!3692 = !{!3693, !3694, !3695, !3700, !3701, !3702, !3703}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3691, file: !68, line: 1324, baseType: !162, size: 192)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3691, file: !68, line: 1327, baseType: !71, size: 64, offset: 192)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !3691, file: !68, line: 1330, baseType: !3696, size: 32, offset: 256)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 32)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{null, !3699}
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !3691, file: !68, line: 1333, baseType: !3696, size: 32, offset: 288)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3691, file: !68, line: 1336, baseType: !3637, size: 64, offset: 320)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3691, file: !68, line: 1339, baseType: !40, size: 32, offset: 384)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !3691, file: !68, line: 1342, baseType: !39, size: 32, offset: 416)
!3704 = !DILocation(line: 115, column: 2, scope: !3688)
!3705 = !DILocation(line: 115, column: 17, scope: !3688)
!3706 = !DILocation(line: 117, column: 2, scope: !3688)
!3707 = !DILocation(line: 119, column: 2, scope: !3688)
!3708 = !DILocation(line: 121, column: 12, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3688, file: !45, line: 119, column: 12)
!3710 = !DILocation(line: 124, column: 3, scope: !3709)
!3711 = !DILocation(line: 127, column: 25, scope: !3709)
!3712 = !DILocation(line: 127, column: 3, scope: !3709)
!3713 = !DILocation(line: 128, column: 3, scope: !3709)
!3714 = !DILocation(line: 129, column: 12, scope: !3709)
!3715 = distinct !{!3715, !3707, !3716, !3717}
!3716 = !DILocation(line: 130, column: 2, scope: !3688)
!3717 = !{!"llvm.loop.mustprogress"}
!3718 = distinct !DISubprogram(name: "k_timer_start", linkageName: "_ZL13k_timer_startP7k_timer11k_timeout_tS1_", scope: !3588, file: !3588, line: 426, type: !3719, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3721)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{null, !3699, !3637, !3637}
!3721 = !{!3722, !3723, !3724}
!3722 = !DILocalVariable(name: "timer", arg: 1, scope: !3718, file: !3588, line: 426, type: !3699)
!3723 = !DILocalVariable(name: "duration", arg: 2, scope: !3718, file: !3588, line: 426, type: !3637)
!3724 = !DILocalVariable(name: "period", arg: 3, scope: !3718, file: !3588, line: 426, type: !3637)
!3725 = !DILocation(line: 0, scope: !3718)
!3726 = !DILocation(line: 437, column: 2, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3718, file: !3588, line: 437, column: 2)
!3728 = !{i64 2155076809}
!3729 = !DILocation(line: 438, column: 2, scope: !3718)
!3730 = !DILocation(line: 439, column: 1, scope: !3718)
!3731 = distinct !DISubprogram(name: "k_timer_status_sync", linkageName: "_ZL19k_timer_status_syncP7k_timer", scope: !3588, file: !3588, line: 478, type: !3732, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3734)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!40, !3699}
!3734 = !{!3735}
!3735 = !DILocalVariable(name: "timer", arg: 1, scope: !3731, file: !3588, line: 478, type: !3699)
!3736 = !DILocation(line: 0, scope: !3731)
!3737 = !DILocation(line: 486, column: 2, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3731, file: !3588, line: 486, column: 2)
!3739 = !{i64 2155077007}
!3740 = !DILocation(line: 487, column: 9, scope: !3731)
!3741 = !DILocation(line: 487, column: 2, scope: !3731)
!3742 = distinct !DISubprogram(name: "main", scope: !45, file: !45, line: 133, type: !53, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3743)
!3743 = !{!3744}
!3744 = !DILocalVariable(name: "timer", scope: !3742, file: !45, line: 135, type: !3691)
!3745 = !DILocation(line: 135, column: 2, scope: !3742)
!3746 = !DILocation(line: 135, column: 17, scope: !3742)
!3747 = !DILocation(line: 137, column: 2, scope: !3742)
!3748 = !DILocation(line: 140, column: 2, scope: !3742)
!3749 = !DILocation(line: 142, column: 2, scope: !3742)
!3750 = !DILocation(line: 144, column: 3, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3742, file: !45, line: 142, column: 12)
!3752 = !DILocation(line: 147, column: 25, scope: !3751)
!3753 = !DILocation(line: 147, column: 3, scope: !3751)
!3754 = !DILocation(line: 148, column: 3, scope: !3751)
!3755 = !DILocation(line: 149, column: 12, scope: !3751)
!3756 = !DILocation(line: 152, column: 12, scope: !3751)
!3757 = distinct !{!3757, !3749, !3758, !3717}
!3758 = !DILocation(line: 153, column: 2, scope: !3742)
!3759 = distinct !DISubprogram(name: "k_thread_create", linkageName: "_ZL15k_thread_createP8k_threadP22z_thread_stack_elementjPFvPvS3_S3_ES3_S3_S3_ij11k_timeout_t", scope: !3588, file: !3588, line: 24, type: !3760, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3766)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!3762, !3763, !3764, !193, !34, !39, !39, !39, !55, !40, !3637}
!3762 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !121, line: 347, baseType: !3763)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !35, line: 44, baseType: !109)
!3766 = !{!3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776}
!3767 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3759, file: !3588, line: 24, type: !3763)
!3768 = !DILocalVariable(name: "stack", arg: 2, scope: !3759, file: !3588, line: 24, type: !3764)
!3769 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3759, file: !3588, line: 24, type: !193)
!3770 = !DILocalVariable(name: "entry", arg: 4, scope: !3759, file: !3588, line: 24, type: !34)
!3771 = !DILocalVariable(name: "p1", arg: 5, scope: !3759, file: !3588, line: 24, type: !39)
!3772 = !DILocalVariable(name: "p2", arg: 6, scope: !3759, file: !3588, line: 24, type: !39)
!3773 = !DILocalVariable(name: "p3", arg: 7, scope: !3759, file: !3588, line: 24, type: !39)
!3774 = !DILocalVariable(name: "prio", arg: 8, scope: !3759, file: !3588, line: 24, type: !55)
!3775 = !DILocalVariable(name: "options", arg: 9, scope: !3759, file: !3588, line: 24, type: !40)
!3776 = !DILocalVariable(name: "delay", arg: 10, scope: !3759, file: !3588, line: 24, type: !3637)
!3777 = !DILocation(line: 0, scope: !3759)
!3778 = !DILocation(line: 49, column: 2, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3759, file: !3588, line: 49, column: 2)
!3780 = !{i64 2155075291}
!3781 = !DILocation(line: 50, column: 9, scope: !3759)
!3782 = !DILocation(line: 50, column: 2, scope: !3759)
!3783 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !281, file: !281, line: 45, type: !283, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3784)
!3784 = !{!3785}
!3785 = !DILocalVariable(name: "c", arg: 1, scope: !3783, file: !281, line: 45, type: !55)
!3786 = !DILocation(line: 0, scope: !3783)
!3787 = !DILocation(line: 50, column: 2, scope: !3783)
!3788 = distinct !DISubprogram(name: "__printk_hook_install", scope: !281, file: !281, line: 63, type: !3789, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3791)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{null, !282}
!3791 = !{!3792}
!3792 = !DILocalVariable(name: "fn", arg: 1, scope: !3788, file: !281, line: 63, type: !282)
!3793 = !DILocation(line: 0, scope: !3788)
!3794 = !DILocation(line: 65, column: 12, scope: !3788)
!3795 = !DILocation(line: 66, column: 1, scope: !3788)
!3796 = distinct !DISubprogram(name: "__printk_get_hook", scope: !281, file: !281, line: 76, type: !3797, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !2223)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!39}
!3799 = !DILocation(line: 78, column: 9, scope: !3796)
!3800 = !DILocation(line: 78, column: 2, scope: !3796)
!3801 = distinct !DISubprogram(name: "vprintk", scope: !281, file: !281, line: 113, type: !3802, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3811)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !319, !3804}
!3804 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3805, line: 99, baseType: !3806)
!3805 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3805, line: 40, baseType: !3807)
!3807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !281, baseType: !3808)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3809)
!3809 = !{!3810}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3808, file: !281, line: 79, baseType: !39, size: 32)
!3811 = !{!3812, !3813, !3814}
!3812 = !DILocalVariable(name: "fmt", arg: 1, scope: !3801, file: !281, line: 113, type: !319)
!3813 = !DILocalVariable(name: "ap", arg: 2, scope: !3801, file: !281, line: 113, type: !3804)
!3814 = !DILocalVariable(name: "ctx", scope: !3815, file: !281, line: 121, type: !3817)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !281, line: 120, column: 27)
!3816 = distinct !DILexicalBlock(scope: !3801, file: !281, line: 120, column: 6)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !281, line: 81, size: 32, elements: !3818)
!3818 = !{!3819, !3820}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3817, file: !281, line: 85, baseType: !41, size: 32)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3817, file: !281, line: 86, baseType: !3821, offset: 32)
!3821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, elements: !2858)
!3822 = !DILocation(line: 0, scope: !3801)
!3823 = !DILocation(line: 148, column: 3, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3816, file: !281, line: 138, column: 9)
!3825 = !DILocation(line: 155, column: 1, scope: !3801)
!3826 = distinct !DISubprogram(name: "char_out", scope: !281, file: !281, line: 107, type: !3827, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3829)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!55, !55, !39}
!3829 = !{!3830, !3831}
!3830 = !DILocalVariable(name: "c", arg: 1, scope: !3826, file: !281, line: 107, type: !55)
!3831 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3826, file: !281, line: 107, type: !39)
!3832 = !DILocation(line: 0, scope: !3826)
!3833 = !DILocation(line: 110, column: 9, scope: !3826)
!3834 = !DILocation(line: 110, column: 2, scope: !3826)
!3835 = distinct !DISubprogram(name: "cbvprintf", scope: !3836, file: !3836, line: 739, type: !3837, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3843)
!3836 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!55, !3839, !39, !319, !3804}
!3839 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3836, line: 297, baseType: !3840)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 32)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!55, null}
!3843 = !{!3844, !3845, !3846, !3847}
!3844 = !DILocalVariable(name: "out", arg: 1, scope: !3835, file: !3836, line: 739, type: !3839)
!3845 = !DILocalVariable(name: "ctx", arg: 2, scope: !3835, file: !3836, line: 739, type: !39)
!3846 = !DILocalVariable(name: "format", arg: 3, scope: !3835, file: !3836, line: 739, type: !319)
!3847 = !DILocalVariable(name: "ap", arg: 4, scope: !3835, file: !3836, line: 739, type: !3804)
!3848 = !DILocation(line: 0, scope: !3835)
!3849 = !DILocation(line: 741, column: 9, scope: !3835)
!3850 = !DILocation(line: 741, column: 2, scope: !3835)
!3851 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !281, file: !281, line: 157, type: !3852, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3854)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{null, !1297, !193}
!3854 = !{!3855, !3856, !3857}
!3855 = !DILocalVariable(name: "c", arg: 1, scope: !3851, file: !281, line: 157, type: !1297)
!3856 = !DILocalVariable(name: "n", arg: 2, scope: !3851, file: !281, line: 157, type: !193)
!3857 = !DILocalVariable(name: "i", scope: !3851, file: !281, line: 159, type: !193)
!3858 = !DILocation(line: 0, scope: !3851)
!3859 = !DILocation(line: 164, column: 16, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !281, line: 164, column: 2)
!3861 = distinct !DILexicalBlock(scope: !3851, file: !281, line: 164, column: 2)
!3862 = !DILocation(line: 164, column: 2, scope: !3861)
!3863 = !DILocation(line: 165, column: 3, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3860, file: !281, line: 164, column: 26)
!3865 = !DILocation(line: 165, column: 13, scope: !3864)
!3866 = !DILocation(line: 164, column: 22, scope: !3860)
!3867 = distinct !{!3867, !3862, !3868}
!3868 = !DILocation(line: 166, column: 2, scope: !3861)
!3869 = !DILocation(line: 171, column: 1, scope: !3851)
!3870 = distinct !DISubprogram(name: "printk", scope: !281, file: !281, line: 203, type: !3871, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{null, !319, null}
!3873 = !{!3874, !3875}
!3874 = !DILocalVariable(name: "fmt", arg: 1, scope: !3870, file: !281, line: 203, type: !319)
!3875 = !DILocalVariable(name: "ap", scope: !3870, file: !281, line: 205, type: !3804)
!3876 = !DILocation(line: 0, scope: !3870)
!3877 = !DILocation(line: 205, column: 2, scope: !3870)
!3878 = !DILocation(line: 205, column: 10, scope: !3870)
!3879 = !DILocation(line: 207, column: 2, scope: !3870)
!3880 = !DILocation(line: 209, column: 2, scope: !3870)
!3881 = !DILocation(line: 211, column: 2, scope: !3870)
!3882 = !DILocation(line: 212, column: 1, scope: !3870)
!3883 = distinct !DISubprogram(name: "snprintk", scope: !281, file: !281, line: 239, type: !3884, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3886)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!55, !1297, !193, !319, null}
!3886 = !{!3887, !3888, !3889, !3890, !3891}
!3887 = !DILocalVariable(name: "str", arg: 1, scope: !3883, file: !281, line: 239, type: !1297)
!3888 = !DILocalVariable(name: "size", arg: 2, scope: !3883, file: !281, line: 239, type: !193)
!3889 = !DILocalVariable(name: "fmt", arg: 3, scope: !3883, file: !281, line: 239, type: !319)
!3890 = !DILocalVariable(name: "ap", scope: !3883, file: !281, line: 241, type: !3804)
!3891 = !DILocalVariable(name: "ret", scope: !3883, file: !281, line: 242, type: !55)
!3892 = !DILocation(line: 0, scope: !3883)
!3893 = !DILocation(line: 241, column: 2, scope: !3883)
!3894 = !DILocation(line: 241, column: 10, scope: !3883)
!3895 = !DILocation(line: 244, column: 2, scope: !3883)
!3896 = !DILocation(line: 245, column: 8, scope: !3883)
!3897 = !DILocation(line: 246, column: 2, scope: !3883)
!3898 = !DILocation(line: 249, column: 1, scope: !3883)
!3899 = !DILocation(line: 248, column: 2, scope: !3883)
!3900 = distinct !DISubprogram(name: "vsnprintk", scope: !281, file: !281, line: 251, type: !3901, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3903)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!55, !1297, !193, !319, !3804}
!3903 = !{!3904, !3905, !3906, !3907, !3908}
!3904 = !DILocalVariable(name: "str", arg: 1, scope: !3900, file: !281, line: 251, type: !1297)
!3905 = !DILocalVariable(name: "size", arg: 2, scope: !3900, file: !281, line: 251, type: !193)
!3906 = !DILocalVariable(name: "fmt", arg: 3, scope: !3900, file: !281, line: 251, type: !319)
!3907 = !DILocalVariable(name: "ap", arg: 4, scope: !3900, file: !281, line: 251, type: !3804)
!3908 = !DILocalVariable(name: "ctx", scope: !3900, file: !281, line: 253, type: !3909)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !281, line: 217, size: 96, elements: !3910)
!3910 = !{!3911, !3912, !3913}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3909, file: !281, line: 218, baseType: !1297, size: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3909, file: !281, line: 219, baseType: !55, size: 32, offset: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3909, file: !281, line: 220, baseType: !55, size: 32, offset: 64)
!3914 = !DILocation(line: 0, scope: !3900)
!3915 = !DILocation(line: 253, column: 2, scope: !3900)
!3916 = !DILocation(line: 253, column: 21, scope: !3900)
!3917 = !DILocation(line: 253, column: 27, scope: !3900)
!3918 = !DILocation(line: 255, column: 2, scope: !3900)
!3919 = !DILocation(line: 257, column: 10, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3900, file: !281, line: 257, column: 6)
!3921 = !DILocation(line: 257, column: 22, scope: !3920)
!3922 = !DILocation(line: 257, column: 16, scope: !3920)
!3923 = !DILocation(line: 257, column: 6, scope: !3900)
!3924 = !DILocation(line: 258, column: 3, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3920, file: !281, line: 257, column: 27)
!3926 = !DILocation(line: 258, column: 18, scope: !3925)
!3927 = !DILocation(line: 259, column: 2, scope: !3925)
!3928 = !DILocation(line: 262, column: 1, scope: !3900)
!3929 = !DILocation(line: 261, column: 2, scope: !3900)
!3930 = distinct !DISubprogram(name: "str_out", scope: !281, file: !281, line: 223, type: !3931, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !3934)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!55, !55, !3933}
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 32)
!3934 = !{!3935, !3936}
!3935 = !DILocalVariable(name: "c", arg: 1, scope: !3930, file: !281, line: 223, type: !55)
!3936 = !DILocalVariable(name: "ctx", arg: 2, scope: !3930, file: !281, line: 223, type: !3933)
!3937 = !DILocation(line: 0, scope: !3930)
!3938 = !DILocation(line: 225, column: 11, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3930, file: !281, line: 225, column: 6)
!3940 = !DILocation(line: 225, column: 15, scope: !3939)
!3941 = !DILocation(line: 0, scope: !3939)
!3942 = !DILocation(line: 225, column: 23, scope: !3939)
!3943 = !DILocation(line: 225, column: 45, scope: !3939)
!3944 = !DILocation(line: 225, column: 37, scope: !3939)
!3945 = !DILocation(line: 225, column: 6, scope: !3930)
!3946 = !DILocation(line: 226, column: 8, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3939, file: !281, line: 225, column: 50)
!3948 = !DILocation(line: 226, column: 13, scope: !3947)
!3949 = !DILocation(line: 227, column: 3, scope: !3947)
!3950 = !DILocation(line: 230, column: 29, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3930, file: !281, line: 230, column: 6)
!3952 = !DILocation(line: 230, column: 17, scope: !3951)
!3953 = !DILocation(line: 230, column: 6, scope: !3930)
!3954 = !DILocation(line: 231, column: 22, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3951, file: !281, line: 230, column: 34)
!3956 = !DILocation(line: 231, column: 3, scope: !3955)
!3957 = !DILocation(line: 231, column: 26, scope: !3955)
!3958 = !DILocation(line: 232, column: 2, scope: !3955)
!3959 = !DILocation(line: 233, column: 28, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3951, file: !281, line: 232, column: 9)
!3961 = !DILocation(line: 233, column: 22, scope: !3960)
!3962 = !DILocation(line: 233, column: 3, scope: !3960)
!3963 = !DILocation(line: 233, column: 26, scope: !3960)
!3964 = !DILocation(line: 237, column: 1, scope: !3930)
!3965 = distinct !DISubprogram(name: "z_thread_entry", scope: !3966, file: !3966, line: 30, type: !3967, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !3969)
!3966 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3967 = !DISubroutineType(types: !3968)
!3968 = !{null, !34, !39, !39, !39}
!3969 = !{!3970, !3971, !3972, !3973}
!3970 = !DILocalVariable(name: "entry", arg: 1, scope: !3965, file: !3966, line: 30, type: !34)
!3971 = !DILocalVariable(name: "p1", arg: 2, scope: !3965, file: !3966, line: 31, type: !39)
!3972 = !DILocalVariable(name: "p2", arg: 3, scope: !3965, file: !3966, line: 31, type: !39)
!3973 = !DILocalVariable(name: "p3", arg: 4, scope: !3965, file: !3966, line: 31, type: !39)
!3974 = !DILocation(line: 0, scope: !3965)
!3975 = !DILocation(line: 36, column: 2, scope: !3965)
!3976 = !DILocation(line: 38, column: 17, scope: !3965)
!3977 = !DILocation(line: 38, column: 2, scope: !3965)
!3978 = !DILocation(line: 45, column: 2, scope: !3965)
!3979 = distinct !DISubprogram(name: "k_current_get", scope: !68, file: !68, line: 530, type: !3980, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !2223)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{!3982}
!3982 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !121, line: 347, baseType: !3983)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 32)
!3984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !3985)
!3985 = !{!3986, !4044, !4056, !4057, !4058, !4059, !4065, !4080}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3984, file: !121, line: 247, baseType: !3987, size: 384)
!3987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !3988)
!3988 = !{!3989, !4013, !4020, !4021, !4022, !4031, !4032, !4033}
!3989 = !DIDerivedType(tag: DW_TAG_member, scope: !3987, file: !121, line: 60, baseType: !3990, size: 64)
!3990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3987, file: !121, line: 60, size: 64, elements: !3991)
!3991 = !{!3992, !4007}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3990, file: !121, line: 61, baseType: !3993, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !3994)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !3995)
!3995 = !{!3996, !4002}
!3996 = !DIDerivedType(tag: DW_TAG_member, scope: !3994, file: !77, line: 38, baseType: !3997, size: 32)
!3997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3994, file: !77, line: 38, size: 32, elements: !3998)
!3998 = !{!3999, !4001}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3997, file: !77, line: 39, baseType: !4000, size: 32)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 32)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3997, file: !77, line: 40, baseType: !4000, size: 32)
!4002 = !DIDerivedType(tag: DW_TAG_member, scope: !3994, file: !77, line: 42, baseType: !4003, size: 32, offset: 32)
!4003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3994, file: !77, line: 42, size: 32, elements: !4004)
!4004 = !{!4005, !4006}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4003, file: !77, line: 43, baseType: !4000, size: 32)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4003, file: !77, line: 44, baseType: !4000, size: 32)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3990, file: !121, line: 62, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !4009)
!4009 = !{!4010}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4008, file: !133, line: 50, baseType: !4011, size: 64)
!4011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4012, size: 64, elements: !138)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 32)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3987, file: !121, line: 68, baseType: !4014, size: 32, offset: 64)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 32)
!4015 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !4016)
!4016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !4017)
!4017 = !{!4018}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4016, file: !72, line: 232, baseType: !4019, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !3994)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3987, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3987, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!4022 = !DIDerivedType(tag: DW_TAG_member, scope: !3987, file: !121, line: 90, baseType: !4023, size: 16, offset: 112)
!4023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3987, file: !121, line: 90, size: 16, elements: !4024)
!4024 = !{!4025, !4030}
!4025 = !DIDerivedType(tag: DW_TAG_member, scope: !4023, file: !121, line: 91, baseType: !4026, size: 16)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4023, file: !121, line: 91, size: 16, elements: !4027)
!4027 = !{!4028, !4029}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4026, file: !121, line: 96, baseType: !153, size: 8)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4026, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4023, file: !121, line: 100, baseType: !157, size: 16)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3987, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3987, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3987, file: !121, line: 131, baseType: !4034, size: 192, offset: 192)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !4035)
!4035 = !{!4036, !4037, !4043}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4034, file: !72, line: 245, baseType: !3993, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4034, file: !72, line: 246, baseType: !4038, size: 32, offset: 64)
!4038 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !4039)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 32)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{null, !4042}
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 32)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4034, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3984, file: !121, line: 250, baseType: !4045, size: 288, offset: 384)
!4045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !4046)
!4046 = !{!4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4045, file: !174, line: 26, baseType: !40, size: 32)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4045, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4045, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4045, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4045, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4045, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4045, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4045, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4045, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3984, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3984, file: !121, line: 256, baseType: !4015, size: 64, offset: 704)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3984, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3984, file: !121, line: 300, baseType: !4060, size: 96, offset: 800)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !4061)
!4061 = !{!4062, !4063, !4064}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4060, file: !121, line: 153, baseType: !22, size: 32)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4060, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4060, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3984, file: !121, line: 325, baseType: !4066, size: 32, offset: 896)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 32)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !4068)
!4068 = !{!4069, !4075, !4076}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4067, file: !68, line: 5074, baseType: !4070, size: 96)
!4070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !4071)
!4071 = !{!4072, !4073, !4074}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4070, file: !473, line: 57, baseType: !476, size: 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4070, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4070, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4067, file: !68, line: 5075, baseType: !4015, size: 64, offset: 96)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4067, file: !68, line: 5076, baseType: !4077, size: 8, offset: 160)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !4078)
!4078 = !{!4079}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !4077, file: !483, line: 75, baseType: !113, size: 8)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3984, file: !121, line: 343, baseType: !4081, size: 64, offset: 928)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !4082)
!4082 = !{!4083, !4084}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4081, file: !174, line: 63, baseType: !40, size: 32)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4081, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!4085 = !DILocation(line: 535, column: 9, scope: !3979)
!4086 = !DILocation(line: 535, column: 2, scope: !3979)
!4087 = distinct !DISubprogram(name: "k_thread_abort", scope: !3588, file: !3588, line: 188, type: !4088, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !4090)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{null, !3982}
!4090 = !{!4091}
!4091 = !DILocalVariable(name: "thread", arg: 1, scope: !4087, file: !3588, line: 188, type: !3982)
!4092 = !DILocation(line: 0, scope: !4087)
!4093 = !DILocation(line: 197, column: 2, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4087, file: !3588, line: 197, column: 2)
!4095 = !{i64 2155057837}
!4096 = !DILocation(line: 198, column: 2, scope: !4087)
!4097 = !DILocation(line: 199, column: 1, scope: !4087)
!4098 = distinct !DISubprogram(name: "z_current_get", scope: !3588, file: !3588, line: 173, type: !3980, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !2223)
!4099 = !DILocation(line: 180, column: 2, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4098, file: !3588, line: 180, column: 2)
!4101 = !{i64 2155057769}
!4102 = !DILocation(line: 181, column: 9, scope: !4098)
!4103 = !DILocation(line: 181, column: 2, scope: !4098)
!4104 = distinct !DISubprogram(name: "sys_heap_free", scope: !4105, file: !4105, line: 163, type: !4106, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4114)
!4105 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !4108, !39}
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 32)
!4109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !4110)
!4110 = !{!4111, !4112, !4113}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4109, file: !473, line: 57, baseType: !2845, size: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4109, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4109, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!4114 = !{!4115, !4116, !4117, !4118}
!4115 = !DILocalVariable(name: "heap", arg: 1, scope: !4104, file: !4105, line: 163, type: !4108)
!4116 = !DILocalVariable(name: "mem", arg: 2, scope: !4104, file: !4105, line: 163, type: !39)
!4117 = !DILocalVariable(name: "h", scope: !4104, file: !4105, line: 168, type: !2845)
!4118 = !DILocalVariable(name: "c", scope: !4104, file: !4105, line: 169, type: !2850)
!4119 = !DILocation(line: 0, scope: !4104)
!4120 = !DILocation(line: 165, column: 10, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4104, file: !4105, line: 165, column: 6)
!4122 = !DILocation(line: 165, column: 6, scope: !4104)
!4123 = !DILocation(line: 168, column: 27, scope: !4104)
!4124 = !DILocation(line: 169, column: 16, scope: !4104)
!4125 = !{i32 0, i32 536870912}
!4126 = !DILocation(line: 187, column: 2, scope: !4104)
!4127 = !DILocation(line: 197, column: 2, scope: !4104)
!4128 = !DILocation(line: 198, column: 1, scope: !4104)
!4129 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4105, file: !4105, line: 157, type: !4130, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4132)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!2850, !2845, !39}
!4132 = !{!4133, !4134, !4135, !4136}
!4133 = !DILocalVariable(name: "h", arg: 1, scope: !4129, file: !4105, line: 157, type: !2845)
!4134 = !DILocalVariable(name: "p", arg: 2, scope: !4129, file: !4105, line: 157, type: !39)
!4135 = !DILocalVariable(name: "mem", scope: !4129, file: !4105, line: 159, type: !2055)
!4136 = !DILocalVariable(name: "base", scope: !4129, file: !4105, line: 159, type: !2055)
!4137 = !DILocation(line: 0, scope: !4129)
!4138 = !DILocation(line: 159, column: 39, scope: !4129)
!4139 = !DILocation(line: 160, column: 14, scope: !4129)
!4140 = !DILocation(line: 160, column: 38, scope: !4129)
!4141 = !DILocation(line: 160, column: 46, scope: !4129)
!4142 = !DILocation(line: 160, column: 2, scope: !4129)
!4143 = distinct !DISubprogram(name: "set_chunk_used", scope: !2832, file: !2832, line: 147, type: !4144, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4146)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{null, !2845, !2850, !329}
!4146 = !{!4147, !4148, !4149, !4150, !4151}
!4147 = !DILocalVariable(name: "h", arg: 1, scope: !4143, file: !2832, line: 147, type: !2845)
!4148 = !DILocalVariable(name: "c", arg: 2, scope: !4143, file: !2832, line: 147, type: !2850)
!4149 = !DILocalVariable(name: "used", arg: 3, scope: !4143, file: !2832, line: 147, type: !329)
!4150 = !DILocalVariable(name: "buf", scope: !4143, file: !2832, line: 149, type: !2839)
!4151 = !DILocalVariable(name: "cmem", scope: !4143, file: !2832, line: 150, type: !39)
!4152 = !DILocation(line: 0, scope: !4143)
!4153 = !DILocation(line: 149, column: 22, scope: !4143)
!4154 = !DILocation(line: 0, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !2832, line: 159, column: 7)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !2832, line: 158, column: 9)
!4157 = distinct !DILexicalBlock(scope: !4143, file: !2832, line: 152, column: 6)
!4158 = !DILocation(line: 159, column: 7, scope: !4156)
!4159 = !DILocation(line: 165, column: 1, scope: !4143)
!4160 = distinct !DISubprogram(name: "free_chunk", scope: !4105, file: !4105, line: 133, type: !4161, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4163)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{null, !2845, !2850}
!4163 = !{!4164, !4165}
!4164 = !DILocalVariable(name: "h", arg: 1, scope: !4160, file: !4105, line: 133, type: !2845)
!4165 = !DILocalVariable(name: "c", arg: 2, scope: !4160, file: !4105, line: 133, type: !2850)
!4166 = !DILocation(line: 0, scope: !4160)
!4167 = !DILocation(line: 136, column: 21, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4160, file: !4105, line: 136, column: 6)
!4169 = !DILocation(line: 136, column: 7, scope: !4168)
!4170 = !DILocation(line: 136, column: 6, scope: !4160)
!4171 = !DILocation(line: 137, column: 3, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4168, file: !4105, line: 136, column: 41)
!4173 = !DILocation(line: 138, column: 22, scope: !4172)
!4174 = !DILocation(line: 138, column: 3, scope: !4172)
!4175 = !DILocation(line: 139, column: 2, scope: !4172)
!4176 = !DILocation(line: 142, column: 21, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4160, file: !4105, line: 142, column: 6)
!4178 = !{i32 -65535, i32 536903678}
!4179 = !DILocation(line: 142, column: 7, scope: !4177)
!4180 = !DILocation(line: 142, column: 6, scope: !4160)
!4181 = !DILocation(line: 143, column: 3, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4177, file: !4105, line: 142, column: 40)
!4183 = !DILocation(line: 144, column: 19, scope: !4182)
!4184 = !DILocation(line: 144, column: 3, scope: !4182)
!4185 = !DILocation(line: 145, column: 7, scope: !4182)
!4186 = !DILocation(line: 146, column: 2, scope: !4182)
!4187 = !DILocation(line: 148, column: 2, scope: !4160)
!4188 = !DILocation(line: 149, column: 1, scope: !4160)
!4189 = distinct !DISubprogram(name: "right_chunk", scope: !2832, file: !2832, line: 204, type: !4190, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4192)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!2850, !2845, !2850}
!4192 = !{!4193, !4194}
!4193 = !DILocalVariable(name: "h", arg: 1, scope: !4189, file: !2832, line: 204, type: !2845)
!4194 = !DILocalVariable(name: "c", arg: 2, scope: !4189, file: !2832, line: 204, type: !2850)
!4195 = !DILocation(line: 0, scope: !4189)
!4196 = !DILocation(line: 206, column: 13, scope: !4189)
!4197 = !DILocation(line: 206, column: 11, scope: !4189)
!4198 = !DILocation(line: 206, column: 2, scope: !4189)
!4199 = distinct !DISubprogram(name: "chunk_used", scope: !2832, file: !2832, line: 137, type: !4200, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4202)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!329, !2845, !2850}
!4202 = !{!4203, !4204}
!4203 = !DILocalVariable(name: "h", arg: 1, scope: !4199, file: !2832, line: 137, type: !2845)
!4204 = !DILocalVariable(name: "c", arg: 2, scope: !4199, file: !2832, line: 137, type: !2850)
!4205 = !DILocation(line: 0, scope: !4199)
!4206 = !DILocation(line: 139, column: 9, scope: !4199)
!4207 = !DILocation(line: 139, column: 42, scope: !4199)
!4208 = !DILocation(line: 139, column: 2, scope: !4199)
!4209 = distinct !DISubprogram(name: "free_list_remove", scope: !4105, file: !4105, line: 60, type: !4161, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4210)
!4210 = !{!4211, !4212, !4213}
!4211 = !DILocalVariable(name: "h", arg: 1, scope: !4209, file: !4105, line: 60, type: !2845)
!4212 = !DILocalVariable(name: "c", arg: 2, scope: !4209, file: !4105, line: 60, type: !2850)
!4213 = !DILocalVariable(name: "bidx", scope: !4214, file: !4105, line: 63, type: !55)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !4105, line: 62, column: 31)
!4215 = distinct !DILexicalBlock(scope: !4209, file: !4105, line: 62, column: 6)
!4216 = !DILocation(line: 0, scope: !4209)
!4217 = !DILocation(line: 63, column: 28, scope: !4214)
!4218 = !{i32 0, i32 32768}
!4219 = !DILocation(line: 63, column: 14, scope: !4214)
!4220 = !DILocation(line: 0, scope: !4214)
!4221 = !DILocation(line: 64, column: 3, scope: !4214)
!4222 = !DILocation(line: 66, column: 1, scope: !4209)
!4223 = distinct !DISubprogram(name: "merge_chunks", scope: !4105, file: !4105, line: 125, type: !4224, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4226)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{null, !2845, !2850, !2850}
!4226 = !{!4227, !4228, !4229, !4230}
!4227 = !DILocalVariable(name: "h", arg: 1, scope: !4223, file: !4105, line: 125, type: !2845)
!4228 = !DILocalVariable(name: "lc", arg: 2, scope: !4223, file: !4105, line: 125, type: !2850)
!4229 = !DILocalVariable(name: "rc", arg: 3, scope: !4223, file: !4105, line: 125, type: !2850)
!4230 = !DILocalVariable(name: "newsz", scope: !4223, file: !4105, line: 127, type: !4231)
!4231 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2832, line: 62, baseType: !40)
!4232 = !DILocation(line: 0, scope: !4223)
!4233 = !DILocation(line: 127, column: 20, scope: !4223)
!4234 = !DILocation(line: 127, column: 40, scope: !4223)
!4235 = !DILocation(line: 127, column: 38, scope: !4223)
!4236 = !DILocation(line: 129, column: 2, scope: !4223)
!4237 = !DILocation(line: 130, column: 25, scope: !4223)
!4238 = !DILocation(line: 130, column: 2, scope: !4223)
!4239 = !DILocation(line: 131, column: 1, scope: !4223)
!4240 = distinct !DISubprogram(name: "left_chunk", scope: !2832, file: !2832, line: 199, type: !4190, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4241)
!4241 = !{!4242, !4243}
!4242 = !DILocalVariable(name: "h", arg: 1, scope: !4240, file: !2832, line: 199, type: !2845)
!4243 = !DILocalVariable(name: "c", arg: 2, scope: !4240, file: !2832, line: 199, type: !2850)
!4244 = !DILocation(line: 0, scope: !4240)
!4245 = !DILocation(line: 201, column: 13, scope: !4240)
!4246 = !DILocation(line: 201, column: 11, scope: !4240)
!4247 = !DILocation(line: 201, column: 2, scope: !4240)
!4248 = distinct !DISubprogram(name: "free_list_add", scope: !4105, file: !4105, line: 98, type: !4161, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4249)
!4249 = !{!4250, !4251, !4252}
!4250 = !DILocalVariable(name: "h", arg: 1, scope: !4248, file: !4105, line: 98, type: !2845)
!4251 = !DILocalVariable(name: "c", arg: 2, scope: !4248, file: !4105, line: 98, type: !2850)
!4252 = !DILocalVariable(name: "bidx", scope: !4253, file: !4105, line: 101, type: !55)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !4105, line: 100, column: 31)
!4254 = distinct !DILexicalBlock(scope: !4248, file: !4105, line: 100, column: 6)
!4255 = !DILocation(line: 0, scope: !4248)
!4256 = !DILocation(line: 101, column: 28, scope: !4253)
!4257 = !DILocation(line: 101, column: 14, scope: !4253)
!4258 = !DILocation(line: 0, scope: !4253)
!4259 = !DILocation(line: 102, column: 3, scope: !4253)
!4260 = !DILocation(line: 104, column: 1, scope: !4248)
!4261 = distinct !DISubprogram(name: "chunk_size", scope: !2832, file: !2832, line: 142, type: !4262, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4264)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!4231, !2845, !2850}
!4264 = !{!4265, !4266}
!4265 = !DILocalVariable(name: "h", arg: 1, scope: !4261, file: !2832, line: 142, type: !2845)
!4266 = !DILocalVariable(name: "c", arg: 2, scope: !4261, file: !2832, line: 142, type: !2850)
!4267 = !DILocation(line: 0, scope: !4261)
!4268 = !DILocation(line: 144, column: 9, scope: !4261)
!4269 = !DILocation(line: 144, column: 42, scope: !4261)
!4270 = !DILocation(line: 144, column: 2, scope: !4261)
!4271 = distinct !DISubprogram(name: "bucket_idx", scope: !2832, file: !2832, line: 250, type: !4272, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4274)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!55, !2845, !4231}
!4274 = !{!4275, !4276, !4277}
!4275 = !DILocalVariable(name: "h", arg: 1, scope: !4271, file: !2832, line: 250, type: !2845)
!4276 = !DILocalVariable(name: "sz", arg: 2, scope: !4271, file: !2832, line: 250, type: !4231)
!4277 = !DILocalVariable(name: "usable_sz", scope: !4271, file: !2832, line: 252, type: !41)
!4278 = !DILocation(line: 0, scope: !4271)
!4279 = !DILocation(line: 252, column: 32, scope: !4271)
!4280 = !DILocation(line: 252, column: 30, scope: !4271)
!4281 = !DILocation(line: 252, column: 50, scope: !4271)
!4282 = !DILocation(line: 253, column: 14, scope: !4271)
!4283 = !{i32 0, i32 33}
!4284 = !DILocation(line: 253, column: 12, scope: !4271)
!4285 = !DILocation(line: 253, column: 2, scope: !4271)
!4286 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4105, file: !4105, line: 68, type: !4287, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{null, !2845, !2850, !55}
!4289 = !{!4290, !4291, !4292, !4293, !4295, !4298}
!4290 = !DILocalVariable(name: "h", arg: 1, scope: !4286, file: !4105, line: 68, type: !2845)
!4291 = !DILocalVariable(name: "c", arg: 2, scope: !4286, file: !4105, line: 68, type: !2850)
!4292 = !DILocalVariable(name: "bidx", arg: 3, scope: !4286, file: !4105, line: 68, type: !55)
!4293 = !DILocalVariable(name: "b", scope: !4286, file: !4105, line: 70, type: !4294)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!4295 = !DILocalVariable(name: "second", scope: !4296, file: !4105, line: 84, type: !2850)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !4105, line: 80, column: 9)
!4297 = distinct !DILexicalBlock(scope: !4286, file: !4105, line: 72, column: 6)
!4298 = !DILocalVariable(name: "first", scope: !4296, file: !4105, line: 85, type: !2850)
!4299 = !DILocation(line: 0, scope: !4286)
!4300 = !DILocation(line: 72, column: 9, scope: !4297)
!4301 = !DILocation(line: 72, column: 14, scope: !4297)
!4302 = !DILocation(line: 72, column: 6, scope: !4286)
!4303 = !DILocation(line: 76, column: 23, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4297, file: !4105, line: 72, column: 21)
!4305 = !DILocation(line: 76, column: 6, scope: !4304)
!4306 = !DILocation(line: 76, column: 20, scope: !4304)
!4307 = !DILocation(line: 77, column: 11, scope: !4304)
!4308 = !DILocation(line: 78, column: 3, scope: !4304)
!4309 = !DILocation(line: 79, column: 3, scope: !4304)
!4310 = !DILocation(line: 80, column: 2, scope: !4304)
!4311 = !DILocation(line: 0, scope: !4296)
!4312 = !DILocation(line: 85, column: 21, scope: !4296)
!4313 = !{i32 0, i32 65536}
!4314 = !DILocation(line: 87, column: 3, scope: !4296)
!4315 = !DILocation(line: 88, column: 3, scope: !4296)
!4316 = !DILocation(line: 89, column: 3, scope: !4296)
!4317 = !DILocation(line: 90, column: 3, scope: !4296)
!4318 = !DILocation(line: 96, column: 1, scope: !4286)
!4319 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2832, file: !2832, line: 187, type: !4224, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4320)
!4320 = !{!4321, !4322, !4323}
!4321 = !DILocalVariable(name: "h", arg: 1, scope: !4319, file: !2832, line: 187, type: !2845)
!4322 = !DILocalVariable(name: "c", arg: 2, scope: !4319, file: !2832, line: 187, type: !2850)
!4323 = !DILocalVariable(name: "prev", arg: 3, scope: !4319, file: !2832, line: 188, type: !2850)
!4324 = !DILocation(line: 0, scope: !4319)
!4325 = !DILocation(line: 190, column: 2, scope: !4319)
!4326 = !DILocation(line: 191, column: 1, scope: !4319)
!4327 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2832, file: !2832, line: 193, type: !4224, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4328)
!4328 = !{!4329, !4330, !4331}
!4329 = !DILocalVariable(name: "h", arg: 1, scope: !4327, file: !2832, line: 193, type: !2845)
!4330 = !DILocalVariable(name: "c", arg: 2, scope: !4327, file: !2832, line: 193, type: !2850)
!4331 = !DILocalVariable(name: "next", arg: 3, scope: !4327, file: !2832, line: 194, type: !2850)
!4332 = !DILocation(line: 0, scope: !4327)
!4333 = !DILocation(line: 196, column: 2, scope: !4327)
!4334 = !DILocation(line: 197, column: 1, scope: !4327)
!4335 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2832, file: !2832, line: 177, type: !4190, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4336)
!4336 = !{!4337, !4338}
!4337 = !DILocalVariable(name: "h", arg: 1, scope: !4335, file: !2832, line: 177, type: !2845)
!4338 = !DILocalVariable(name: "c", arg: 2, scope: !4335, file: !2832, line: 177, type: !2850)
!4339 = !DILocation(line: 0, scope: !4335)
!4340 = !DILocation(line: 179, column: 9, scope: !4335)
!4341 = !DILocation(line: 179, column: 2, scope: !4335)
!4342 = distinct !DISubprogram(name: "chunk_field", scope: !2832, file: !2832, line: 107, type: !4343, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4345)
!4343 = !DISubroutineType(types: !4344)
!4344 = !{!2850, !2845, !2850, !2831}
!4345 = !{!4346, !4347, !4348, !4349, !4350}
!4346 = !DILocalVariable(name: "h", arg: 1, scope: !4342, file: !2832, line: 107, type: !2845)
!4347 = !DILocalVariable(name: "c", arg: 2, scope: !4342, file: !2832, line: 107, type: !2850)
!4348 = !DILocalVariable(name: "f", arg: 3, scope: !4342, file: !2832, line: 108, type: !2831)
!4349 = !DILocalVariable(name: "buf", scope: !4342, file: !2832, line: 110, type: !2839)
!4350 = !DILocalVariable(name: "cmem", scope: !4342, file: !2832, line: 111, type: !39)
!4351 = !DILocation(line: 0, scope: !4342)
!4352 = !DILocation(line: 110, column: 22, scope: !4342)
!4353 = !DILocation(line: 111, column: 15, scope: !4342)
!4354 = !DILocation(line: 116, column: 11, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !2832, line: 115, column: 9)
!4356 = distinct !DILexicalBlock(scope: !4342, file: !2832, line: 113, column: 6)
!4357 = !DILocation(line: 116, column: 10, scope: !4355)
!4358 = !DILocation(line: 118, column: 1, scope: !4342)
!4359 = distinct !DISubprogram(name: "chunk_buf", scope: !2832, file: !2832, line: 101, type: !4360, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4362)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!2839, !2845}
!4362 = !{!4363}
!4363 = !DILocalVariable(name: "h", arg: 1, scope: !4359, file: !2832, line: 101, type: !2845)
!4364 = !DILocation(line: 0, scope: !4359)
!4365 = !DILocation(line: 104, column: 9, scope: !4359)
!4366 = !DILocation(line: 104, column: 2, scope: !4359)
!4367 = distinct !DISubprogram(name: "chunk_set", scope: !2832, file: !2832, line: 120, type: !4368, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4370)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{null, !2845, !2850, !2831, !2850}
!4370 = !{!4371, !4372, !4373, !4374, !4375, !4376}
!4371 = !DILocalVariable(name: "h", arg: 1, scope: !4367, file: !2832, line: 120, type: !2845)
!4372 = !DILocalVariable(name: "c", arg: 2, scope: !4367, file: !2832, line: 120, type: !2850)
!4373 = !DILocalVariable(name: "f", arg: 3, scope: !4367, file: !2832, line: 121, type: !2831)
!4374 = !DILocalVariable(name: "val", arg: 4, scope: !4367, file: !2832, line: 121, type: !2850)
!4375 = !DILocalVariable(name: "buf", scope: !4367, file: !2832, line: 125, type: !2839)
!4376 = !DILocalVariable(name: "cmem", scope: !4367, file: !2832, line: 126, type: !39)
!4377 = !DILocation(line: 0, scope: !4367)
!4378 = !DILocation(line: 125, column: 22, scope: !4367)
!4379 = !DILocation(line: 126, column: 15, scope: !4367)
!4380 = !DILocation(line: 133, column: 27, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !2832, line: 131, column: 9)
!4382 = distinct !DILexicalBlock(scope: !4367, file: !2832, line: 128, column: 6)
!4383 = !DILocation(line: 133, column: 4, scope: !4381)
!4384 = !DILocation(line: 133, column: 3, scope: !4381)
!4385 = !DILocation(line: 133, column: 25, scope: !4381)
!4386 = !DILocation(line: 135, column: 1, scope: !4367)
!4387 = distinct !DISubprogram(name: "min_chunk_size", scope: !2832, file: !2832, line: 240, type: !4388, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4390)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{!4231, !2845}
!4390 = !{!4391}
!4391 = !DILocalVariable(name: "h", arg: 1, scope: !4387, file: !2832, line: 240, type: !2845)
!4392 = !DILocation(line: 0, scope: !4387)
!4393 = !DILocation(line: 242, column: 9, scope: !4387)
!4394 = !DILocation(line: 242, column: 2, scope: !4387)
!4395 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2832, file: !2832, line: 235, type: !4396, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4398)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!4231, !2845, !193}
!4398 = !{!4399, !4400}
!4399 = !DILocalVariable(name: "h", arg: 1, scope: !4395, file: !2832, line: 235, type: !2845)
!4400 = !DILocalVariable(name: "bytes", arg: 2, scope: !4395, file: !2832, line: 235, type: !193)
!4401 = !DILocation(line: 0, scope: !4395)
!4402 = !DILocation(line: 237, column: 39, scope: !4395)
!4403 = !DILocation(line: 237, column: 9, scope: !4395)
!4404 = !DILocation(line: 237, column: 2, scope: !4395)
!4405 = distinct !DISubprogram(name: "chunksz", scope: !2832, file: !2832, line: 230, type: !4406, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4408)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4231, !193}
!4408 = !{!4409}
!4409 = !DILocalVariable(name: "bytes", arg: 1, scope: !4405, file: !2832, line: 230, type: !193)
!4410 = !DILocation(line: 0, scope: !4405)
!4411 = !DILocation(line: 232, column: 29, scope: !4405)
!4412 = !DILocation(line: 232, column: 35, scope: !4405)
!4413 = !DILocation(line: 232, column: 2, scope: !4405)
!4414 = distinct !DISubprogram(name: "set_chunk_size", scope: !2832, file: !2832, line: 172, type: !4415, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4417)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{null, !2845, !2850, !4231}
!4417 = !{!4418, !4419, !4420}
!4418 = !DILocalVariable(name: "h", arg: 1, scope: !4414, file: !2832, line: 172, type: !2845)
!4419 = !DILocalVariable(name: "c", arg: 2, scope: !4414, file: !2832, line: 172, type: !2850)
!4420 = !DILocalVariable(name: "size", arg: 3, scope: !4414, file: !2832, line: 172, type: !4231)
!4421 = !DILocation(line: 0, scope: !4414)
!4422 = !DILocation(line: 174, column: 38, scope: !4414)
!4423 = !DILocation(line: 174, column: 2, scope: !4414)
!4424 = !DILocation(line: 175, column: 1, scope: !4414)
!4425 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2832, file: !2832, line: 209, type: !4415, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4426)
!4426 = !{!4427, !4428, !4429}
!4427 = !DILocalVariable(name: "h", arg: 1, scope: !4425, file: !2832, line: 209, type: !2845)
!4428 = !DILocalVariable(name: "c", arg: 2, scope: !4425, file: !2832, line: 209, type: !2850)
!4429 = !DILocalVariable(name: "size", arg: 3, scope: !4425, file: !2832, line: 210, type: !4231)
!4430 = !DILocation(line: 0, scope: !4425)
!4431 = !DILocation(line: 212, column: 2, scope: !4425)
!4432 = !DILocation(line: 213, column: 1, scope: !4425)
!4433 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4105, file: !4105, line: 34, type: !4287, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4434)
!4434 = !{!4435, !4436, !4437, !4438, !4439, !4442}
!4435 = !DILocalVariable(name: "h", arg: 1, scope: !4433, file: !4105, line: 34, type: !2845)
!4436 = !DILocalVariable(name: "c", arg: 2, scope: !4433, file: !4105, line: 34, type: !2850)
!4437 = !DILocalVariable(name: "bidx", arg: 3, scope: !4433, file: !4105, line: 34, type: !55)
!4438 = !DILocalVariable(name: "b", scope: !4433, file: !4105, line: 36, type: !4294)
!4439 = !DILocalVariable(name: "first", scope: !4440, file: !4105, line: 47, type: !2850)
!4440 = distinct !DILexicalBlock(scope: !4441, file: !4105, line: 46, column: 9)
!4441 = distinct !DILexicalBlock(scope: !4433, file: !4105, line: 42, column: 6)
!4442 = !DILocalVariable(name: "second", scope: !4440, file: !4105, line: 48, type: !2850)
!4443 = !DILocation(line: 0, scope: !4433)
!4444 = !DILocation(line: 36, column: 29, scope: !4433)
!4445 = !DILocation(line: 42, column: 6, scope: !4441)
!4446 = !DILocation(line: 42, column: 28, scope: !4441)
!4447 = !DILocation(line: 42, column: 6, scope: !4433)
!4448 = !DILocation(line: 44, column: 24, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4441, file: !4105, line: 42, column: 34)
!4450 = !DILocation(line: 44, column: 23, scope: !4449)
!4451 = !DILocation(line: 44, column: 6, scope: !4449)
!4452 = !DILocation(line: 44, column: 20, scope: !4449)
!4453 = !DILocation(line: 45, column: 6, scope: !4449)
!4454 = !DILocation(line: 45, column: 11, scope: !4449)
!4455 = !DILocation(line: 46, column: 2, scope: !4449)
!4456 = !DILocation(line: 47, column: 21, scope: !4440)
!4457 = !DILocation(line: 0, scope: !4440)
!4458 = !DILocation(line: 50, column: 6, scope: !4440)
!4459 = !DILocation(line: 50, column: 11, scope: !4440)
!4460 = !DILocation(line: 51, column: 3, scope: !4440)
!4461 = !DILocation(line: 52, column: 3, scope: !4440)
!4462 = !DILocation(line: 58, column: 1, scope: !4433)
!4463 = distinct !DISubprogram(name: "next_free_chunk", scope: !2832, file: !2832, line: 182, type: !4190, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4464)
!4464 = !{!4465, !4466}
!4465 = !DILocalVariable(name: "h", arg: 1, scope: !4463, file: !2832, line: 182, type: !2845)
!4466 = !DILocalVariable(name: "c", arg: 2, scope: !4463, file: !2832, line: 182, type: !2850)
!4467 = !DILocation(line: 0, scope: !4463)
!4468 = !DILocation(line: 184, column: 9, scope: !4463)
!4469 = !DILocation(line: 184, column: 2, scope: !4463)
!4470 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4105, file: !4105, line: 200, type: !4471, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4473)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!193, !4108, !39}
!4473 = !{!4474, !4475, !4476, !4477, !4478, !4479, !4480}
!4474 = !DILocalVariable(name: "heap", arg: 1, scope: !4470, file: !4105, line: 200, type: !4108)
!4475 = !DILocalVariable(name: "mem", arg: 2, scope: !4470, file: !4105, line: 200, type: !39)
!4476 = !DILocalVariable(name: "h", scope: !4470, file: !4105, line: 202, type: !2845)
!4477 = !DILocalVariable(name: "c", scope: !4470, file: !4105, line: 203, type: !2850)
!4478 = !DILocalVariable(name: "addr", scope: !4470, file: !4105, line: 204, type: !193)
!4479 = !DILocalVariable(name: "chunk_base", scope: !4470, file: !4105, line: 205, type: !193)
!4480 = !DILocalVariable(name: "chunk_sz", scope: !4470, file: !4105, line: 206, type: !193)
!4481 = !DILocation(line: 0, scope: !4470)
!4482 = !DILocation(line: 202, column: 27, scope: !4470)
!4483 = !DILocation(line: 203, column: 16, scope: !4470)
!4484 = !DILocation(line: 204, column: 16, scope: !4470)
!4485 = !DILocation(line: 205, column: 31, scope: !4470)
!4486 = !DILocation(line: 205, column: 22, scope: !4470)
!4487 = !DILocation(line: 206, column: 20, scope: !4470)
!4488 = !DILocation(line: 206, column: 37, scope: !4470)
!4489 = !DILocation(line: 208, column: 26, scope: !4470)
!4490 = !DILocation(line: 208, column: 18, scope: !4470)
!4491 = !DILocation(line: 208, column: 2, scope: !4470)
!4492 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4105, file: !4105, line: 263, type: !4493, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4495)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!39, !4108, !193}
!4495 = !{!4496, !4497, !4498, !4499, !4500, !4501}
!4496 = !DILocalVariable(name: "heap", arg: 1, scope: !4492, file: !4105, line: 263, type: !4108)
!4497 = !DILocalVariable(name: "bytes", arg: 2, scope: !4492, file: !4105, line: 263, type: !193)
!4498 = !DILocalVariable(name: "h", scope: !4492, file: !4105, line: 265, type: !2845)
!4499 = !DILocalVariable(name: "mem", scope: !4492, file: !4105, line: 266, type: !39)
!4500 = !DILocalVariable(name: "chunk_sz", scope: !4492, file: !4105, line: 272, type: !4231)
!4501 = !DILocalVariable(name: "c", scope: !4492, file: !4105, line: 273, type: !2850)
!4502 = !DILocation(line: 0, scope: !4492)
!4503 = !DILocation(line: 265, column: 27, scope: !4492)
!4504 = !DILocation(line: 268, column: 12, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4492, file: !4105, line: 268, column: 6)
!4506 = !DILocation(line: 268, column: 18, scope: !4505)
!4507 = !DILocation(line: 268, column: 21, scope: !4505)
!4508 = !DILocation(line: 268, column: 6, scope: !4492)
!4509 = !DILocation(line: 272, column: 23, scope: !4492)
!4510 = !DILocation(line: 273, column: 16, scope: !4492)
!4511 = !DILocation(line: 274, column: 8, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4492, file: !4105, line: 274, column: 6)
!4513 = !DILocation(line: 274, column: 6, scope: !4492)
!4514 = !DILocation(line: 279, column: 6, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4492, file: !4105, line: 279, column: 6)
!4516 = !DILocation(line: 279, column: 23, scope: !4515)
!4517 = !DILocation(line: 279, column: 6, scope: !4492)
!4518 = !DILocation(line: 280, column: 24, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4515, file: !4105, line: 279, column: 35)
!4520 = !DILocation(line: 280, column: 3, scope: !4519)
!4521 = !DILocation(line: 281, column: 3, scope: !4519)
!4522 = !DILocation(line: 282, column: 2, scope: !4519)
!4523 = !DILocation(line: 284, column: 2, scope: !4492)
!4524 = !DILocation(line: 286, column: 8, scope: !4492)
!4525 = !DILocation(line: 298, column: 2, scope: !4492)
!4526 = !DILocation(line: 299, column: 1, scope: !4492)
!4527 = distinct !DISubprogram(name: "size_too_big", scope: !2832, file: !2832, line: 256, type: !4528, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4530)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!329, !2845, !193}
!4530 = !{!4531, !4532}
!4531 = !DILocalVariable(name: "h", arg: 1, scope: !4527, file: !2832, line: 256, type: !2845)
!4532 = !DILocalVariable(name: "bytes", arg: 2, scope: !4527, file: !2832, line: 256, type: !193)
!4533 = !DILocation(line: 0, scope: !4527)
!4534 = !DILocation(line: 262, column: 16, scope: !4527)
!4535 = !DILocation(line: 262, column: 36, scope: !4527)
!4536 = !DILocation(line: 262, column: 30, scope: !4527)
!4537 = !DILocation(line: 262, column: 2, scope: !4527)
!4538 = distinct !DISubprogram(name: "alloc_chunk", scope: !4105, file: !4105, line: 211, type: !4539, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4541)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!2850, !2845, !4231}
!4541 = !{!4542, !4543, !4544, !4545, !4546, !4549, !4550, !4552, !4553, !4556}
!4542 = !DILocalVariable(name: "h", arg: 1, scope: !4538, file: !4105, line: 211, type: !2845)
!4543 = !DILocalVariable(name: "sz", arg: 2, scope: !4538, file: !4105, line: 211, type: !4231)
!4544 = !DILocalVariable(name: "bi", scope: !4538, file: !4105, line: 213, type: !55)
!4545 = !DILocalVariable(name: "b", scope: !4538, file: !4105, line: 214, type: !4294)
!4546 = !DILocalVariable(name: "first", scope: !4547, file: !4105, line: 233, type: !2850)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !4105, line: 232, column: 15)
!4548 = distinct !DILexicalBlock(scope: !4538, file: !4105, line: 232, column: 6)
!4549 = !DILocalVariable(name: "i", scope: !4547, file: !4105, line: 234, type: !55)
!4550 = !DILocalVariable(name: "c", scope: !4551, file: !4105, line: 236, type: !2850)
!4551 = distinct !DILexicalBlock(scope: !4547, file: !4105, line: 235, column: 6)
!4552 = !DILocalVariable(name: "bmask", scope: !4538, file: !4105, line: 249, type: !40)
!4553 = !DILocalVariable(name: "minbucket", scope: !4554, file: !4105, line: 252, type: !55)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !4105, line: 251, column: 19)
!4555 = distinct !DILexicalBlock(scope: !4538, file: !4105, line: 251, column: 6)
!4556 = !DILocalVariable(name: "c", scope: !4554, file: !4105, line: 253, type: !2850)
!4557 = !DILocation(line: 0, scope: !4538)
!4558 = !DILocation(line: 213, column: 11, scope: !4538)
!4559 = !DILocation(line: 232, column: 9, scope: !4548)
!4560 = !DILocation(line: 232, column: 6, scope: !4548)
!4561 = !DILocation(line: 232, column: 6, scope: !4538)
!4562 = !DILocation(line: 236, column: 21, scope: !4551)
!4563 = !DILocation(line: 0, scope: !4547)
!4564 = !DILocation(line: 0, scope: !4551)
!4565 = !DILocation(line: 237, column: 8, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4551, file: !4105, line: 237, column: 8)
!4567 = !DILocation(line: 237, column: 25, scope: !4566)
!4568 = !DILocation(line: 237, column: 8, scope: !4551)
!4569 = !DILocation(line: 238, column: 5, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4566, file: !4105, line: 237, column: 32)
!4571 = !DILocation(line: 241, column: 14, scope: !4551)
!4572 = !DILocation(line: 241, column: 12, scope: !4551)
!4573 = !DILocation(line: 243, column: 12, scope: !4547)
!4574 = !DILocation(line: 243, column: 16, scope: !4547)
!4575 = distinct !{!4575, !4576, !4577}
!4576 = !DILocation(line: 235, column: 3, scope: !4547)
!4577 = !DILocation(line: 243, column: 35, scope: !4547)
!4578 = !DILocation(line: 249, column: 22, scope: !4538)
!4579 = !DILocation(line: 249, column: 39, scope: !4538)
!4580 = !DILocation(line: 249, column: 36, scope: !4538)
!4581 = !DILocation(line: 251, column: 12, scope: !4555)
!4582 = !DILocation(line: 251, column: 6, scope: !4538)
!4583 = !DILocation(line: 252, column: 19, scope: !4554)
!4584 = !DILocation(line: 0, scope: !4554)
!4585 = !DILocation(line: 253, column: 39, scope: !4554)
!4586 = !DILocation(line: 255, column: 3, scope: !4554)
!4587 = !DILocation(line: 261, column: 1, scope: !4538)
!4588 = distinct !DISubprogram(name: "split_chunks", scope: !4105, file: !4105, line: 109, type: !4224, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4589)
!4589 = !{!4590, !4591, !4592, !4593, !4594, !4595}
!4590 = !DILocalVariable(name: "h", arg: 1, scope: !4588, file: !4105, line: 109, type: !2845)
!4591 = !DILocalVariable(name: "lc", arg: 2, scope: !4588, file: !4105, line: 109, type: !2850)
!4592 = !DILocalVariable(name: "rc", arg: 3, scope: !4588, file: !4105, line: 109, type: !2850)
!4593 = !DILocalVariable(name: "sz0", scope: !4588, file: !4105, line: 114, type: !4231)
!4594 = !DILocalVariable(name: "lsz", scope: !4588, file: !4105, line: 115, type: !4231)
!4595 = !DILocalVariable(name: "rsz", scope: !4588, file: !4105, line: 116, type: !4231)
!4596 = !DILocation(line: 0, scope: !4588)
!4597 = !DILocation(line: 114, column: 18, scope: !4588)
!4598 = !DILocation(line: 115, column: 21, scope: !4588)
!4599 = !DILocation(line: 116, column: 22, scope: !4588)
!4600 = !DILocation(line: 118, column: 2, scope: !4588)
!4601 = !DILocation(line: 119, column: 2, scope: !4588)
!4602 = !DILocation(line: 120, column: 2, scope: !4588)
!4603 = !DILocation(line: 121, column: 25, scope: !4588)
!4604 = !DILocation(line: 121, column: 2, scope: !4588)
!4605 = !DILocation(line: 122, column: 1, scope: !4588)
!4606 = distinct !DISubprogram(name: "chunk_mem", scope: !4105, file: !4105, line: 24, type: !4607, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4609)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!39, !2845, !2850}
!4609 = !{!4610, !4611, !4612, !4613}
!4610 = !DILocalVariable(name: "h", arg: 1, scope: !4606, file: !4105, line: 24, type: !2845)
!4611 = !DILocalVariable(name: "c", arg: 2, scope: !4606, file: !4105, line: 24, type: !2850)
!4612 = !DILocalVariable(name: "buf", scope: !4606, file: !4105, line: 26, type: !2839)
!4613 = !DILocalVariable(name: "ret", scope: !4606, file: !4105, line: 27, type: !2055)
!4614 = !DILocation(line: 0, scope: !4606)
!4615 = !DILocation(line: 26, column: 22, scope: !4606)
!4616 = !DILocation(line: 27, column: 38, scope: !4606)
!4617 = !DILocation(line: 31, column: 2, scope: !4606)
!4618 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4105, file: !4105, line: 301, type: !4619, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4621)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!39, !4108, !193, !193}
!4621 = !{!4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633}
!4622 = !DILocalVariable(name: "heap", arg: 1, scope: !4618, file: !4105, line: 301, type: !4108)
!4623 = !DILocalVariable(name: "align", arg: 2, scope: !4618, file: !4105, line: 301, type: !193)
!4624 = !DILocalVariable(name: "bytes", arg: 3, scope: !4618, file: !4105, line: 301, type: !193)
!4625 = !DILocalVariable(name: "h", scope: !4618, file: !4105, line: 303, type: !2845)
!4626 = !DILocalVariable(name: "gap", scope: !4618, file: !4105, line: 304, type: !193)
!4627 = !DILocalVariable(name: "rew", scope: !4618, file: !4105, line: 304, type: !193)
!4628 = !DILocalVariable(name: "padded_sz", scope: !4618, file: !4105, line: 335, type: !4231)
!4629 = !DILocalVariable(name: "c0", scope: !4618, file: !4105, line: 336, type: !2850)
!4630 = !DILocalVariable(name: "mem", scope: !4618, file: !4105, line: 341, type: !2055)
!4631 = !DILocalVariable(name: "end", scope: !4618, file: !4105, line: 345, type: !2839)
!4632 = !DILocalVariable(name: "c", scope: !4618, file: !4105, line: 348, type: !2850)
!4633 = !DILocalVariable(name: "c_end", scope: !4618, file: !4105, line: 349, type: !2850)
!4634 = !DILocation(line: 0, scope: !4618)
!4635 = !DILocation(line: 303, column: 27, scope: !4618)
!4636 = !DILocation(line: 313, column: 16, scope: !4618)
!4637 = !DILocation(line: 313, column: 14, scope: !4618)
!4638 = !DILocation(line: 314, column: 12, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4618, file: !4105, line: 314, column: 6)
!4640 = !DILocation(line: 314, column: 6, scope: !4618)
!4641 = !DILocation(line: 315, column: 9, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4639, file: !4105, line: 314, column: 20)
!4643 = !DILocation(line: 316, column: 9, scope: !4642)
!4644 = !DILocation(line: 318, column: 13, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !4105, line: 318, column: 7)
!4646 = distinct !DILexicalBlock(scope: !4639, file: !4105, line: 317, column: 9)
!4647 = !DILocation(line: 318, column: 7, scope: !4646)
!4648 = !DILocation(line: 319, column: 11, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4645, file: !4105, line: 318, column: 39)
!4650 = !DILocation(line: 319, column: 4, scope: !4649)
!4651 = !DILocation(line: 0, scope: !4639)
!4652 = !DILocation(line: 326, column: 12, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4618, file: !4105, line: 326, column: 6)
!4654 = !DILocation(line: 326, column: 17, scope: !4653)
!4655 = !DILocation(line: 326, column: 20, scope: !4653)
!4656 = !DILocation(line: 326, column: 6, scope: !4618)
!4657 = !DILocation(line: 335, column: 50, scope: !4618)
!4658 = !DILocation(line: 335, column: 58, scope: !4618)
!4659 = !DILocation(line: 335, column: 24, scope: !4618)
!4660 = !DILocation(line: 336, column: 17, scope: !4618)
!4661 = !DILocation(line: 338, column: 9, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4618, file: !4105, line: 338, column: 6)
!4663 = !DILocation(line: 338, column: 6, scope: !4618)
!4664 = !DILocation(line: 341, column: 17, scope: !4618)
!4665 = !DILocation(line: 344, column: 20, scope: !4618)
!4666 = !DILocation(line: 344, column: 8, scope: !4618)
!4667 = !DILocation(line: 344, column: 47, scope: !4618)
!4668 = !DILocation(line: 345, column: 39, scope: !4618)
!4669 = !DILocation(line: 348, column: 16, scope: !4618)
!4670 = !DILocation(line: 349, column: 26, scope: !4618)
!4671 = !DILocation(line: 349, column: 24, scope: !4618)
!4672 = !DILocation(line: 353, column: 8, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4618, file: !4105, line: 353, column: 6)
!4674 = !DILocation(line: 353, column: 6, scope: !4618)
!4675 = !DILocation(line: 354, column: 3, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !4105, line: 353, column: 14)
!4677 = !DILocation(line: 355, column: 3, scope: !4676)
!4678 = !DILocation(line: 356, column: 2, scope: !4676)
!4679 = !DILocation(line: 359, column: 6, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4618, file: !4105, line: 359, column: 6)
!4681 = !DILocation(line: 359, column: 24, scope: !4680)
!4682 = !DILocation(line: 359, column: 6, scope: !4618)
!4683 = !DILocation(line: 360, column: 3, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !4105, line: 359, column: 33)
!4685 = !DILocation(line: 361, column: 3, scope: !4684)
!4686 = !DILocation(line: 362, column: 2, scope: !4684)
!4687 = !DILocation(line: 364, column: 2, scope: !4618)
!4688 = !DILocation(line: 377, column: 1, scope: !4618)
!4689 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4105, file: !4105, line: 379, type: !4690, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4692)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!39, !4108, !39, !193, !193}
!4692 = !{!4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4708, !4709}
!4693 = !DILocalVariable(name: "heap", arg: 1, scope: !4689, file: !4105, line: 379, type: !4108)
!4694 = !DILocalVariable(name: "ptr", arg: 2, scope: !4689, file: !4105, line: 379, type: !39)
!4695 = !DILocalVariable(name: "align", arg: 3, scope: !4689, file: !4105, line: 380, type: !193)
!4696 = !DILocalVariable(name: "bytes", arg: 4, scope: !4689, file: !4105, line: 380, type: !193)
!4697 = !DILocalVariable(name: "h", scope: !4689, file: !4105, line: 382, type: !2845)
!4698 = !DILocalVariable(name: "c", scope: !4689, file: !4105, line: 399, type: !2850)
!4699 = !DILocalVariable(name: "rc", scope: !4689, file: !4105, line: 400, type: !2850)
!4700 = !DILocalVariable(name: "align_gap", scope: !4689, file: !4105, line: 401, type: !193)
!4701 = !DILocalVariable(name: "chunks_need", scope: !4689, file: !4105, line: 402, type: !4231)
!4702 = !DILocalVariable(name: "split_size", scope: !4703, file: !4105, line: 435, type: !4231)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !4105, line: 433, column: 61)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !4105, line: 432, column: 13)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !4105, line: 409, column: 13)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !4105, line: 406, column: 13)
!4707 = distinct !DILexicalBlock(scope: !4689, file: !4105, line: 404, column: 6)
!4708 = !DILocalVariable(name: "ptr2", scope: !4689, file: !4105, line: 474, type: !39)
!4709 = !DILocalVariable(name: "prev_size", scope: !4710, file: !4105, line: 477, type: !193)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !4105, line: 476, column: 20)
!4711 = distinct !DILexicalBlock(scope: !4689, file: !4105, line: 476, column: 6)
!4712 = !DILocation(line: 0, scope: !4689)
!4713 = !DILocation(line: 382, column: 27, scope: !4689)
!4714 = !DILocation(line: 385, column: 10, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4689, file: !4105, line: 385, column: 6)
!4716 = !DILocation(line: 385, column: 6, scope: !4689)
!4717 = !DILocation(line: 386, column: 10, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4715, file: !4105, line: 385, column: 19)
!4719 = !DILocation(line: 386, column: 3, scope: !4718)
!4720 = !DILocation(line: 388, column: 12, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4689, file: !4105, line: 388, column: 6)
!4722 = !DILocation(line: 388, column: 6, scope: !4689)
!4723 = !DILocation(line: 389, column: 3, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4721, file: !4105, line: 388, column: 18)
!4725 = !DILocation(line: 390, column: 3, scope: !4724)
!4726 = !DILocation(line: 395, column: 6, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4689, file: !4105, line: 395, column: 6)
!4728 = !DILocation(line: 395, column: 6, scope: !4689)
!4729 = !DILocation(line: 399, column: 16, scope: !4689)
!4730 = !DILocation(line: 400, column: 17, scope: !4689)
!4731 = !DILocation(line: 401, column: 49, scope: !4689)
!4732 = !DILocation(line: 401, column: 36, scope: !4689)
!4733 = !DILocation(line: 402, column: 52, scope: !4689)
!4734 = !DILocation(line: 402, column: 26, scope: !4689)
!4735 = !DILocation(line: 404, column: 6, scope: !4707)
!4736 = !DILocation(line: 404, column: 12, scope: !4707)
!4737 = !DILocation(line: 404, column: 40, scope: !4707)
!4738 = !DILocation(line: 404, column: 31, scope: !4707)
!4739 = !DILocation(line: 404, column: 6, scope: !4689)
!4740 = !DILocation(line: 406, column: 13, scope: !4706)
!4741 = !DILocation(line: 406, column: 30, scope: !4706)
!4742 = !DILocation(line: 406, column: 13, scope: !4707)
!4743 = !DILocation(line: 409, column: 30, scope: !4705)
!4744 = !DILocation(line: 409, column: 13, scope: !4706)
!4745 = !DILocation(line: 420, column: 24, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4705, file: !4105, line: 409, column: 45)
!4747 = !DILocation(line: 420, column: 3, scope: !4746)
!4748 = !DILocation(line: 421, column: 3, scope: !4746)
!4749 = !DILocation(line: 422, column: 3, scope: !4746)
!4750 = !DILocation(line: 431, column: 3, scope: !4746)
!4751 = !DILocation(line: 432, column: 14, scope: !4704)
!4752 = !DILocation(line: 432, column: 32, scope: !4704)
!4753 = !DILocation(line: 433, column: 26, scope: !4704)
!4754 = !DILocation(line: 433, column: 24, scope: !4704)
!4755 = !DILocation(line: 433, column: 44, scope: !4704)
!4756 = !DILocation(line: 432, column: 13, scope: !4705)
!4757 = !DILocation(line: 435, column: 38, scope: !4703)
!4758 = !DILocation(line: 0, scope: !4703)
!4759 = !DILocation(line: 445, column: 3, scope: !4703)
!4760 = !DILocation(line: 447, column: 20, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4703, file: !4105, line: 447, column: 7)
!4762 = !DILocation(line: 447, column: 18, scope: !4761)
!4763 = !DILocation(line: 447, column: 7, scope: !4703)
!4764 = !DILocation(line: 448, column: 27, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !4105, line: 447, column: 39)
!4766 = !DILocation(line: 448, column: 4, scope: !4765)
!4767 = !DILocation(line: 449, column: 4, scope: !4765)
!4768 = !DILocation(line: 450, column: 3, scope: !4765)
!4769 = !DILocation(line: 452, column: 3, scope: !4703)
!4770 = !DILocation(line: 453, column: 3, scope: !4703)
!4771 = !DILocation(line: 474, column: 15, scope: !4689)
!4772 = !DILocation(line: 476, column: 11, scope: !4711)
!4773 = !DILocation(line: 476, column: 6, scope: !4689)
!4774 = !DILocation(line: 477, column: 42, scope: !4710)
!4775 = !DILocation(line: 477, column: 22, scope: !4710)
!4776 = !DILocation(line: 477, column: 60, scope: !4710)
!4777 = !DILocation(line: 0, scope: !4710)
!4778 = !DILocation(line: 479, column: 21, scope: !4710)
!4779 = !DILocation(line: 479, column: 3, scope: !4710)
!4780 = !DILocation(line: 480, column: 3, scope: !4710)
!4781 = !DILocation(line: 481, column: 2, scope: !4710)
!4782 = !DILocation(line: 483, column: 1, scope: !4689)
!4783 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2832, file: !2832, line: 245, type: !4784, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4786)
!4784 = !DISubroutineType(types: !4785)
!4785 = !{!193, !2845, !4231}
!4786 = !{!4787, !4788}
!4787 = !DILocalVariable(name: "h", arg: 1, scope: !4783, file: !2832, line: 245, type: !2845)
!4788 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4783, file: !2832, line: 245, type: !4231)
!4789 = !DILocation(line: 0, scope: !4783)
!4790 = !DILocation(line: 247, column: 20, scope: !4783)
!4791 = !DILocation(line: 247, column: 33, scope: !4783)
!4792 = !DILocation(line: 247, column: 2, scope: !4783)
!4793 = distinct !DISubprogram(name: "sys_heap_init", scope: !4105, file: !4105, line: 485, type: !4794, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !4796)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{null, !4108, !39, !193}
!4796 = !{!4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806}
!4797 = !DILocalVariable(name: "heap", arg: 1, scope: !4793, file: !4105, line: 485, type: !4108)
!4798 = !DILocalVariable(name: "mem", arg: 2, scope: !4793, file: !4105, line: 485, type: !39)
!4799 = !DILocalVariable(name: "bytes", arg: 3, scope: !4793, file: !4105, line: 485, type: !193)
!4800 = !DILocalVariable(name: "addr", scope: !4793, file: !4105, line: 502, type: !22)
!4801 = !DILocalVariable(name: "end", scope: !4793, file: !4105, line: 503, type: !22)
!4802 = !DILocalVariable(name: "heap_sz", scope: !4793, file: !4105, line: 504, type: !4231)
!4803 = !DILocalVariable(name: "h", scope: !4793, file: !4105, line: 509, type: !2845)
!4804 = !DILocalVariable(name: "nb_buckets", scope: !4793, file: !4105, line: 520, type: !55)
!4805 = !DILocalVariable(name: "chunk0_size", scope: !4793, file: !4105, line: 521, type: !4231)
!4806 = !DILocalVariable(name: "i", scope: !4807, file: !4105, line: 526, type: !55)
!4807 = distinct !DILexicalBlock(scope: !4793, file: !4105, line: 526, column: 2)
!4808 = !DILocation(line: 0, scope: !4793)
!4809 = !DILocation(line: 499, column: 8, scope: !4793)
!4810 = !DILocation(line: 502, column: 19, scope: !4793)
!4811 = !DILocation(line: 503, column: 18, scope: !4793)
!4812 = !DILocation(line: 504, column: 27, scope: !4793)
!4813 = !DILocation(line: 504, column: 35, scope: !4793)
!4814 = !DILocation(line: 509, column: 21, scope: !4793)
!4815 = !DILocation(line: 510, column: 8, scope: !4793)
!4816 = !DILocation(line: 510, column: 13, scope: !4793)
!4817 = !DILocation(line: 511, column: 5, scope: !4793)
!4818 = !DILocation(line: 511, column: 15, scope: !4793)
!4819 = !DILocation(line: 512, column: 5, scope: !4793)
!4820 = !DILocation(line: 512, column: 19, scope: !4793)
!4821 = !DILocation(line: 520, column: 19, scope: !4793)
!4822 = !DILocation(line: 522, column: 21, scope: !4793)
!4823 = !DILocation(line: 521, column: 56, scope: !4793)
!4824 = !DILocation(line: 521, column: 26, scope: !4793)
!4825 = !DILocation(line: 0, scope: !4807)
!4826 = !DILocation(line: 526, column: 20, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4807, file: !4105, line: 526, column: 2)
!4828 = !DILocation(line: 526, column: 2, scope: !4807)
!4829 = !DILocation(line: 531, column: 2, scope: !4793)
!4830 = !DILocation(line: 532, column: 2, scope: !4793)
!4831 = !DILocation(line: 533, column: 2, scope: !4793)
!4832 = !DILocation(line: 536, column: 41, scope: !4793)
!4833 = !DILocation(line: 536, column: 2, scope: !4793)
!4834 = !DILocation(line: 537, column: 2, scope: !4793)
!4835 = !DILocation(line: 540, column: 2, scope: !4793)
!4836 = !DILocation(line: 541, column: 2, scope: !4793)
!4837 = !DILocation(line: 542, column: 2, scope: !4793)
!4838 = !DILocation(line: 544, column: 2, scope: !4793)
!4839 = !DILocation(line: 545, column: 1, scope: !4793)
!4840 = !DILocation(line: 527, column: 17, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4827, file: !4105, line: 526, column: 39)
!4842 = !DILocation(line: 527, column: 22, scope: !4841)
!4843 = !DILocation(line: 526, column: 35, scope: !4827)
!4844 = distinct !{!4844, !4828, !4845}
!4845 = !DILocation(line: 528, column: 2, scope: !4807)
!4846 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2865, file: !2865, line: 1338, type: !4847, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !4855)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!55, !3839, !39, !319, !4849, !40}
!4849 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3805, line: 99, baseType: !4850)
!4850 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3805, line: 40, baseType: !4851)
!4851 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2865, baseType: !4852)
!4852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4853)
!4853 = !{!4854}
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4852, file: !2865, baseType: !39, size: 32)
!4855 = !{!4856, !4857, !4858, !4859, !4860, !4861, !4865, !4866, !4867, !4869, !4874, !4919, !4922, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4934, !4935, !4936, !4940, !4943, !4945, !4948, !4949, !4950, !4955, !4961, !4964, !4968, !4974, !4978, !4981, !4983, !4986}
!4856 = !DILocalVariable(name: "out", arg: 1, scope: !4846, file: !2865, line: 1338, type: !3839)
!4857 = !DILocalVariable(name: "ctx", arg: 2, scope: !4846, file: !2865, line: 1338, type: !39)
!4858 = !DILocalVariable(name: "fp", arg: 3, scope: !4846, file: !2865, line: 1338, type: !319)
!4859 = !DILocalVariable(name: "ap", arg: 4, scope: !4846, file: !2865, line: 1339, type: !4849)
!4860 = !DILocalVariable(name: "flags", arg: 5, scope: !4846, file: !2865, line: 1339, type: !40)
!4861 = !DILocalVariable(name: "buf", scope: !4846, file: !2865, line: 1341, type: !4862)
!4862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 176, elements: !4863)
!4863 = !{!4864}
!4864 = !DISubrange(count: 22)
!4865 = !DILocalVariable(name: "count", scope: !4846, file: !2865, line: 1342, type: !193)
!4866 = !DILocalVariable(name: "sint", scope: !4846, file: !2865, line: 1343, type: !2884)
!4867 = !DILocalVariable(name: "tagged_ap", scope: !4846, file: !2865, line: 1345, type: !4868)
!4868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!4869 = !DILocalVariable(name: "rc", scope: !4870, file: !2865, line: 1377, type: !55)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !2865, line: 1377, column: 4)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !2865, line: 1376, column: 19)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1376, column: 7)
!4873 = distinct !DILexicalBlock(scope: !4846, file: !2865, line: 1375, column: 19)
!4874 = !DILocalVariable(name: "state", scope: !4873, file: !2865, line: 1395, type: !4875)
!4875 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4846, file: !2865, line: 1392, size: 192, elements: !4876)
!4876 = !{!4877, !4887}
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4875, file: !2865, line: 1393, baseType: !4878, size: 64)
!4878 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2865, line: 166, size: 64, elements: !4879)
!4879 = !{!4880, !4881, !4882, !4884, !4886}
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4878, file: !2865, line: 168, baseType: !2884, size: 64)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4878, file: !2865, line: 171, baseType: !2887, size: 64)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4878, file: !2865, line: 174, baseType: !4883, size: 64)
!4883 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4878, file: !2865, line: 177, baseType: !4885, size: 64)
!4885 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4878, file: !2865, line: 180, baseType: !39, size: 32)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4875, file: !2865, line: 1394, baseType: !4888, size: 96, offset: 64)
!4888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2865, line: 189, size: 96, elements: !4889)
!4889 = !{!4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4914}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4888, file: !2865, line: 191, baseType: !329, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4888, file: !2865, line: 194, baseType: !329, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4888, file: !2865, line: 197, baseType: !329, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4888, file: !2865, line: 200, baseType: !329, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4888, file: !2865, line: 203, baseType: !329, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4888, file: !2865, line: 206, baseType: !329, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4888, file: !2865, line: 209, baseType: !329, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4888, file: !2865, line: 212, baseType: !329, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4888, file: !2865, line: 219, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4888, file: !2865, line: 222, baseType: !329, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4888, file: !2865, line: 229, baseType: !329, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4888, file: !2865, line: 232, baseType: !41, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4888, file: !2865, line: 238, baseType: !329, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4888, file: !2865, line: 241, baseType: !41, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4888, file: !2865, line: 244, baseType: !329, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4888, file: !2865, line: 247, baseType: !329, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4888, file: !2865, line: 252, baseType: !329, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4888, file: !2865, line: 257, baseType: !329, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4888, file: !2865, line: 260, baseType: !144, size: 8, offset: 24)
!4909 = !DIDerivedType(tag: DW_TAG_member, scope: !4888, file: !2865, line: 262, baseType: !4910, size: 32, offset: 32)
!4910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4888, file: !2865, line: 262, size: 32, elements: !4911)
!4911 = !{!4912, !4913}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4910, file: !2865, line: 267, baseType: !55, size: 32)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4910, file: !2865, line: 289, baseType: !55, size: 32)
!4914 = !DIDerivedType(tag: DW_TAG_member, scope: !4888, file: !2865, line: 292, baseType: !4915, size: 32, offset: 64)
!4915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4888, file: !2865, line: 292, size: 32, elements: !4916)
!4916 = !{!4917, !4918}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4915, file: !2865, line: 297, baseType: !55, size: 32)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4915, file: !2865, line: 306, baseType: !55, size: 32)
!4919 = !DILocalVariable(name: "conv", scope: !4873, file: !2865, line: 1400, type: !4920)
!4920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4921)
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 32)
!4922 = !DILocalVariable(name: "value", scope: !4873, file: !2865, line: 1401, type: !4923)
!4923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4924)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4878, size: 32)
!4925 = !DILocalVariable(name: "sp", scope: !4873, file: !2865, line: 1402, type: !319)
!4926 = !DILocalVariable(name: "width", scope: !4873, file: !2865, line: 1403, type: !55)
!4927 = !DILocalVariable(name: "precision", scope: !4873, file: !2865, line: 1404, type: !55)
!4928 = !DILocalVariable(name: "bps", scope: !4873, file: !2865, line: 1405, type: !319)
!4929 = !DILocalVariable(name: "bpe", scope: !4873, file: !2865, line: 1406, type: !319)
!4930 = !DILocalVariable(name: "sign", scope: !4873, file: !2865, line: 1407, type: !113)
!4931 = !DILocalVariable(name: "arg", scope: !4932, file: !2865, line: 1432, type: !55)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !2865, line: 1431, column: 24)
!4933 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1431, column: 7)
!4934 = !DILocalVariable(name: "specifier_cat", scope: !4873, file: !2865, line: 1468, type: !2864)
!4935 = !DILocalVariable(name: "length_mod", scope: !4873, file: !2865, line: 1470, type: !2872)
!4936 = !DILocalVariable(name: "rc", scope: !4937, file: !2865, line: 1575, type: !55)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !2865, line: 1575, column: 4)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !2865, line: 1574, column: 43)
!4939 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1574, column: 7)
!4940 = !DILocalVariable(name: "rc", scope: !4941, file: !2865, line: 1584, type: !55)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !2865, line: 1584, column: 4)
!4942 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1582, column: 28)
!4943 = !DILocalVariable(name: "len", scope: !4944, file: !2865, line: 1589, type: !193)
!4944 = distinct !DILexicalBlock(scope: !4942, file: !2865, line: 1586, column: 13)
!4945 = !DILocalVariable(name: "len", scope: !4946, file: !2865, line: 1641, type: !193)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !2865, line: 1640, column: 24)
!4947 = distinct !DILexicalBlock(scope: !4942, file: !2865, line: 1640, column: 8)
!4948 = !DILocalVariable(name: "nj_len", scope: !4873, file: !2865, line: 1722, type: !193)
!4949 = !DILocalVariable(name: "pad_len", scope: !4873, file: !2865, line: 1723, type: !55)
!4950 = !DILocalVariable(name: "pad", scope: !4951, file: !2865, line: 1751, type: !113)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !2865, line: 1750, column: 26)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !2865, line: 1750, column: 8)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !2865, line: 1747, column: 18)
!4954 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1747, column: 7)
!4955 = !DILocalVariable(name: "rc", scope: !4956, file: !2865, line: 1758, type: !55)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !2865, line: 1758, column: 7)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !2865, line: 1757, column: 21)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !2865, line: 1757, column: 10)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !2865, line: 1756, column: 26)
!4960 = distinct !DILexicalBlock(scope: !4951, file: !2865, line: 1756, column: 9)
!4961 = !DILocalVariable(name: "rc", scope: !4962, file: !2865, line: 1765, type: !55)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !2865, line: 1765, column: 6)
!4963 = distinct !DILexicalBlock(scope: !4951, file: !2865, line: 1764, column: 25)
!4964 = !DILocalVariable(name: "rc", scope: !4965, file: !2865, line: 1774, type: !55)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !2865, line: 1774, column: 4)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !2865, line: 1773, column: 18)
!4967 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1773, column: 7)
!4968 = !DILocalVariable(name: "rc", scope: !4969, file: !2865, line: 1819, type: !55)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !2865, line: 1819, column: 5)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !2865, line: 1818, column: 44)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !2865, line: 1818, column: 8)
!4972 = distinct !DILexicalBlock(scope: !4973, file: !2865, line: 1817, column: 10)
!4973 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1777, column: 7)
!4974 = !DILocalVariable(name: "rc", scope: !4975, file: !2865, line: 1823, type: !55)
!4975 = distinct !DILexicalBlock(scope: !4976, file: !2865, line: 1823, column: 5)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !2865, line: 1822, column: 26)
!4977 = distinct !DILexicalBlock(scope: !4972, file: !2865, line: 1822, column: 8)
!4978 = !DILocalVariable(name: "rc", scope: !4979, file: !2865, line: 1828, type: !55)
!4979 = distinct !DILexicalBlock(scope: !4980, file: !2865, line: 1828, column: 5)
!4980 = distinct !DILexicalBlock(scope: !4972, file: !2865, line: 1827, column: 26)
!4981 = !DILocalVariable(name: "rc", scope: !4982, file: !2865, line: 1831, type: !55)
!4982 = distinct !DILexicalBlock(scope: !4972, file: !2865, line: 1831, column: 4)
!4983 = !DILocalVariable(name: "rc", scope: !4984, file: !2865, line: 1836, type: !55)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !2865, line: 1836, column: 4)
!4985 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1835, column: 21)
!4986 = !DILabel(scope: !4942, name: "prec_int_pad0", file: !2865, line: 1634)
!4987 = !DILocation(line: 0, scope: !4846)
!4988 = !DILocation(line: 1341, column: 2, scope: !4846)
!4989 = !DILocation(line: 1341, column: 7, scope: !4846)
!4990 = !DILocation(line: 1375, column: 2, scope: !4846)
!4991 = !DILocation(line: 1342, column: 9, scope: !4846)
!4992 = !DILocation(line: 1375, column: 9, scope: !4846)
!4993 = !DILocation(line: 1377, column: 4, scope: !4870)
!4994 = !DILocation(line: 0, scope: !4870)
!4995 = !DILocation(line: 1377, column: 4, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4870, file: !2865, line: 1377, column: 4)
!4997 = distinct !{!4997, !4990, !4998}
!4998 = !DILocation(line: 1839, column: 2, scope: !4846)
!4999 = !DILocation(line: 1392, column: 3, scope: !4873)
!5000 = !DILocation(line: 1395, column: 5, scope: !4873)
!5001 = !DILocation(line: 0, scope: !4873)
!5002 = !DILocation(line: 1409, column: 8, scope: !4873)
!5003 = !DILocation(line: 1414, column: 13, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1414, column: 7)
!5005 = !DILocation(line: 1414, column: 7, scope: !4873)
!5006 = !DILocation(line: 1415, column: 12, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5004, file: !2865, line: 1414, column: 25)
!5008 = !DILocation(line: 1417, column: 14, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5007, file: !2865, line: 1417, column: 8)
!5010 = !DILocation(line: 1417, column: 8, scope: !5007)
!5011 = !DILocation(line: 1418, column: 21, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5009, file: !2865, line: 1417, column: 19)
!5013 = !DILocation(line: 1419, column: 13, scope: !5012)
!5014 = !DILocation(line: 1420, column: 4, scope: !5012)
!5015 = !DILocation(line: 1421, column: 20, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5004, file: !2865, line: 1421, column: 14)
!5017 = !DILocation(line: 1421, column: 14, scope: !5004)
!5018 = !DILocation(line: 1431, column: 13, scope: !4933)
!5019 = !DILocation(line: 1431, column: 7, scope: !4873)
!5020 = !DILocation(line: 1432, column: 14, scope: !4932)
!5021 = !DILocation(line: 0, scope: !4932)
!5022 = !DILocation(line: 1434, column: 12, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4932, file: !2865, line: 1434, column: 8)
!5024 = !DILocation(line: 1434, column: 8, scope: !4932)
!5025 = !DILocation(line: 1435, column: 24, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !2865, line: 1434, column: 17)
!5027 = !DILocation(line: 1436, column: 4, scope: !5026)
!5028 = !DILocation(line: 1439, column: 20, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4933, file: !2865, line: 1439, column: 14)
!5030 = !DILocation(line: 1439, column: 14, scope: !4933)
!5031 = !DILocation(line: 1469, column: 37, scope: !4873)
!5032 = !DILocation(line: 1448, column: 20, scope: !4873)
!5033 = !DILocation(line: 1449, column: 22, scope: !4873)
!5034 = !DILocation(line: 1471, column: 34, scope: !4873)
!5035 = !DILocation(line: 1478, column: 7, scope: !4873)
!5036 = !DILocation(line: 1479, column: 4, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !2865, line: 1478, column: 40)
!5038 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1478, column: 7)
!5039 = !DILocation(line: 1484, column: 19, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5037, file: !2865, line: 1479, column: 24)
!5041 = !DILocation(line: 1484, column: 17, scope: !5040)
!5042 = !DILocation(line: 1485, column: 5, scope: !5040)
!5043 = !DILocation(line: 1492, column: 20, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !2865, line: 1491, column: 12)
!5045 = distinct !DILexicalBlock(scope: !5040, file: !2865, line: 1487, column: 9)
!5046 = !DILocation(line: 1492, column: 18, scope: !5044)
!5047 = !DILocation(line: 1494, column: 5, scope: !5040)
!5048 = !DILocation(line: 1497, column: 23, scope: !5040)
!5049 = !DILocation(line: 1496, column: 17, scope: !5040)
!5050 = !DILocation(line: 1498, column: 5, scope: !5040)
!5051 = !DILocation(line: 1501, column: 23, scope: !5040)
!5052 = !DILocation(line: 1500, column: 17, scope: !5040)
!5053 = !DILocation(line: 1502, column: 5, scope: !5040)
!5054 = !DILocation(line: 1513, column: 23, scope: !5040)
!5055 = !DILocation(line: 1513, column: 6, scope: !5040)
!5056 = !DILocation(line: 1512, column: 17, scope: !5040)
!5057 = !DILocation(line: 1514, column: 5, scope: !5040)
!5058 = !DILocation(line: 0, scope: !5040)
!5059 = !DILocation(line: 1516, column: 8, scope: !5037)
!5060 = !DILocation(line: 1517, column: 19, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !2865, line: 1516, column: 33)
!5062 = distinct !DILexicalBlock(scope: !5037, file: !2865, line: 1516, column: 8)
!5063 = !DILocation(line: 1517, column: 17, scope: !5061)
!5064 = !DILocation(line: 1518, column: 4, scope: !5061)
!5065 = !DILocation(line: 1519, column: 19, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !2865, line: 1518, column: 39)
!5067 = distinct !DILexicalBlock(scope: !5062, file: !2865, line: 1518, column: 15)
!5068 = !DILocation(line: 1519, column: 17, scope: !5066)
!5069 = !DILocation(line: 1520, column: 4, scope: !5066)
!5070 = !DILocation(line: 1522, column: 4, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !2865, line: 1521, column: 47)
!5072 = distinct !DILexicalBlock(scope: !5038, file: !2865, line: 1521, column: 14)
!5073 = !DILocation(line: 1527, column: 19, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5071, file: !2865, line: 1522, column: 24)
!5075 = !DILocation(line: 1527, column: 17, scope: !5074)
!5076 = !DILocation(line: 1528, column: 5, scope: !5074)
!5077 = !DILocation(line: 0, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !2865, line: 1530, column: 9)
!5079 = !DILocation(line: 1540, column: 23, scope: !5074)
!5080 = !DILocation(line: 1539, column: 17, scope: !5074)
!5081 = !DILocation(line: 1542, column: 5, scope: !5074)
!5082 = !DILocation(line: 1545, column: 23, scope: !5074)
!5083 = !DILocation(line: 1544, column: 17, scope: !5074)
!5084 = !DILocation(line: 1547, column: 5, scope: !5074)
!5085 = !DILocation(line: 1551, column: 23, scope: !5074)
!5086 = !DILocation(line: 1551, column: 6, scope: !5074)
!5087 = !DILocation(line: 1550, column: 17, scope: !5074)
!5088 = !DILocation(line: 1552, column: 5, scope: !5074)
!5089 = !DILocation(line: 0, scope: !5074)
!5090 = !DILocation(line: 1554, column: 8, scope: !5071)
!5091 = !DILocation(line: 1555, column: 19, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !2865, line: 1554, column: 33)
!5093 = distinct !DILexicalBlock(scope: !5071, file: !2865, line: 1554, column: 8)
!5094 = !DILocation(line: 1555, column: 17, scope: !5092)
!5095 = !DILocation(line: 1556, column: 4, scope: !5092)
!5096 = !DILocation(line: 1557, column: 19, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !2865, line: 1556, column: 39)
!5098 = distinct !DILexicalBlock(scope: !5093, file: !2865, line: 1556, column: 15)
!5099 = !DILocation(line: 1557, column: 17, scope: !5097)
!5100 = !DILocation(line: 1558, column: 4, scope: !5097)
!5101 = !DILocation(line: 0, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5103, file: !2865, line: 1560, column: 8)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !2865, line: 1559, column: 45)
!5104 = distinct !DILexicalBlock(scope: !5072, file: !2865, line: 1559, column: 14)
!5105 = !DILocation(line: 1566, column: 17, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !2865, line: 1565, column: 46)
!5107 = distinct !DILexicalBlock(scope: !5104, file: !2865, line: 1565, column: 14)
!5108 = !DILocation(line: 1566, column: 15, scope: !5106)
!5109 = !DILocation(line: 1567, column: 3, scope: !5106)
!5110 = !DILocation(line: 1574, column: 21, scope: !4939)
!5111 = !DILocation(line: 1575, column: 4, scope: !4937)
!5112 = !DILocation(line: 0, scope: !4937)
!5113 = !DILocation(line: 1575, column: 4, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !4937, file: !2865, line: 1575, column: 4)
!5115 = !DILocation(line: 1582, column: 17, scope: !4873)
!5116 = !DILocation(line: 1582, column: 3, scope: !4873)
!5117 = !DILocation(line: 1584, column: 4, scope: !4941)
!5118 = !DILocation(line: 0, scope: !4941)
!5119 = !DILocation(line: 1584, column: 4, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !4941, file: !2865, line: 1584, column: 4)
!5121 = !DILocation(line: 1587, column: 31, scope: !4944)
!5122 = !DILocation(line: 1591, column: 18, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !4944, file: !2865, line: 1591, column: 8)
!5124 = !DILocation(line: 1591, column: 8, scope: !4944)
!5125 = !DILocation(line: 1592, column: 11, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5123, file: !2865, line: 1591, column: 24)
!5127 = !DILocation(line: 0, scope: !4944)
!5128 = !DILocation(line: 1593, column: 4, scope: !5126)
!5129 = !DILocation(line: 1594, column: 11, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5123, file: !2865, line: 1593, column: 11)
!5131 = !DILocation(line: 1604, column: 51, scope: !4942)
!5132 = !DILocation(line: 1604, column: 13, scope: !4942)
!5133 = !DILocation(line: 1604, column: 11, scope: !4942)
!5134 = !DILocation(line: 1606, column: 4, scope: !4942)
!5135 = !DILocation(line: 1609, column: 14, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !4942, file: !2865, line: 1609, column: 8)
!5137 = !DILocation(line: 1609, column: 8, scope: !4942)
!5138 = !DILocation(line: 1619, column: 18, scope: !4942)
!5139 = !DILocation(line: 1620, column: 13, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !4942, file: !2865, line: 1620, column: 8)
!5141 = !DILocation(line: 1620, column: 8, scope: !4942)
!5142 = !DILocation(line: 1622, column: 36, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5140, file: !2865, line: 1620, column: 18)
!5144 = !DILocation(line: 1622, column: 17, scope: !5143)
!5145 = !DILocation(line: 1623, column: 4, scope: !5143)
!5146 = !DILocation(line: 1632, column: 29, scope: !4942)
!5147 = !DILocation(line: 1632, column: 10, scope: !4942)
!5148 = !DILocation(line: 1632, column: 4, scope: !4942)
!5149 = !DILocation(line: 1407, column: 8, scope: !4873)
!5150 = !DILocation(line: 0, scope: !4942)
!5151 = !DILocation(line: 1634, column: 3, scope: !4942)
!5152 = !DILocation(line: 1640, column: 18, scope: !4947)
!5153 = !DILocation(line: 1640, column: 8, scope: !4942)
!5154 = !DILocation(line: 1729, column: 13, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1729, column: 7)
!5156 = !DILocation(line: 1641, column: 22, scope: !4946)
!5157 = !DILocation(line: 0, scope: !4946)
!5158 = !DILocation(line: 1646, column: 21, scope: !4946)
!5159 = !DILocation(line: 1649, column: 13, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !4946, file: !2865, line: 1649, column: 9)
!5161 = !DILocation(line: 1649, column: 9, scope: !4946)
!5162 = !DILocation(line: 1650, column: 35, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !2865, line: 1649, column: 34)
!5164 = !DILocation(line: 1650, column: 23, scope: !5163)
!5165 = !DILocation(line: 1651, column: 5, scope: !5163)
!5166 = !DILocation(line: 1660, column: 15, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !4942, file: !2865, line: 1660, column: 8)
!5168 = !DILocation(line: 1660, column: 19, scope: !5167)
!5169 = !DILocation(line: 1660, column: 8, scope: !4942)
!5170 = !DILocation(line: 1661, column: 23, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5167, file: !2865, line: 1660, column: 28)
!5172 = !DILocation(line: 1661, column: 11, scope: !5171)
!5173 = !DILocation(line: 1665, column: 22, scope: !5171)
!5174 = !DILocation(line: 1666, column: 21, scope: !5171)
!5175 = !DILocation(line: 1668, column: 5, scope: !5171)
!5176 = !DILocation(line: 1677, column: 30, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !2865, line: 1676, column: 49)
!5178 = distinct !DILexicalBlock(scope: !4942, file: !2865, line: 1676, column: 8)
!5179 = !DILocation(line: 1677, column: 5, scope: !5177)
!5180 = !DILocation(line: 1680, column: 4, scope: !4942)
!5181 = !DILocation(line: 0, scope: !5123)
!5182 = !DILocation(line: 1597, column: 14, scope: !4944)
!5183 = !DILocation(line: 1699, column: 11, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1699, column: 7)
!5185 = !DILocation(line: 1699, column: 7, scope: !4873)
!5186 = !DILocation(line: 1725, column: 7, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1725, column: 7)
!5188 = !DILocation(line: 1725, column: 12, scope: !5187)
!5189 = !DILocation(line: 1747, column: 13, scope: !4954)
!5190 = !DILocation(line: 1747, column: 7, scope: !4873)
!5191 = !DILocation(line: 1722, column: 24, scope: !4873)
!5192 = !DILocation(line: 1725, column: 7, scope: !4873)
!5193 = !DILocation(line: 1729, column: 7, scope: !4873)
!5194 = !DILocation(line: 1736, column: 13, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !4873, file: !2865, line: 1736, column: 7)
!5196 = !DILocation(line: 1735, column: 19, scope: !4873)
!5197 = !DILocation(line: 1736, column: 7, scope: !4873)
!5198 = !DILocation(line: 1748, column: 10, scope: !4953)
!5199 = !DILocation(line: 1750, column: 15, scope: !4952)
!5200 = !DILocation(line: 1750, column: 8, scope: !4953)
!5201 = !DILocation(line: 0, scope: !4951)
!5202 = !DILocation(line: 1756, column: 15, scope: !4960)
!5203 = !DILocation(line: 1756, column: 9, scope: !4951)
!5204 = !DILocation(line: 1758, column: 7, scope: !4956)
!5205 = !DILocation(line: 0, scope: !4956)
!5206 = !DILocation(line: 1758, column: 7, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !4956, file: !2865, line: 1758, column: 7)
!5208 = !DILocation(line: 1764, column: 5, scope: !4951)
!5209 = !DILocation(line: 0, scope: !4953)
!5210 = !DILocation(line: 1764, column: 20, scope: !4951)
!5211 = !DILocation(line: 1764, column: 17, scope: !4951)
!5212 = !DILocation(line: 1765, column: 6, scope: !4962)
!5213 = !DILocation(line: 0, scope: !4962)
!5214 = !DILocation(line: 1765, column: 6, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !4962, file: !2865, line: 1765, column: 6)
!5216 = distinct !{!5216, !5208, !5217}
!5217 = !DILocation(line: 1766, column: 5, scope: !4951)
!5218 = !DILocation(line: 1773, column: 12, scope: !4967)
!5219 = !DILocation(line: 1773, column: 7, scope: !4873)
!5220 = !DILocation(line: 1773, column: 7, scope: !4967)
!5221 = !DILocation(line: 1774, column: 4, scope: !4965)
!5222 = !DILocation(line: 0, scope: !4965)
!5223 = !DILocation(line: 1774, column: 4, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !4965, file: !2865, line: 1774, column: 4)
!5225 = !DILocation(line: 1818, column: 8, scope: !4971)
!5226 = !DILocation(line: 1818, column: 27, scope: !4971)
!5227 = !DILocation(line: 1818, column: 25, scope: !4971)
!5228 = !DILocation(line: 1818, column: 8, scope: !4972)
!5229 = !DILocation(line: 1819, column: 5, scope: !4969)
!5230 = !DILocation(line: 0, scope: !4969)
!5231 = !DILocation(line: 1819, column: 5, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !4969, file: !2865, line: 1819, column: 5)
!5233 = !DILocation(line: 1822, column: 14, scope: !4977)
!5234 = !DILocation(line: 1822, column: 8, scope: !4972)
!5235 = !DILocation(line: 1823, column: 5, scope: !4975)
!5236 = !DILocation(line: 0, scope: !4975)
!5237 = !DILocation(line: 1823, column: 5, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !4975, file: !2865, line: 1823, column: 5)
!5239 = !DILocation(line: 1826, column: 20, scope: !4972)
!5240 = !DILocation(line: 1827, column: 4, scope: !4972)
!5241 = !DILocation(line: 0, scope: !4972)
!5242 = !DILocation(line: 1827, column: 21, scope: !4972)
!5243 = !DILocation(line: 1827, column: 18, scope: !4972)
!5244 = !DILocation(line: 1828, column: 5, scope: !4979)
!5245 = !DILocation(line: 0, scope: !4979)
!5246 = !DILocation(line: 1828, column: 5, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !4979, file: !2865, line: 1828, column: 5)
!5248 = distinct !{!5248, !5240, !5249}
!5249 = !DILocation(line: 1829, column: 4, scope: !4972)
!5250 = !DILocation(line: 1831, column: 4, scope: !4982)
!5251 = !DILocation(line: 0, scope: !4982)
!5252 = !DILocation(line: 1831, column: 4, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !4982, file: !2865, line: 1831, column: 4)
!5254 = !DILocation(line: 1835, column: 16, scope: !4873)
!5255 = !DILocation(line: 1835, column: 3, scope: !4873)
!5256 = !DILocation(line: 1836, column: 4, scope: !4984)
!5257 = !DILocation(line: 0, scope: !4984)
!5258 = !DILocation(line: 1836, column: 4, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !4984, file: !2865, line: 1836, column: 4)
!5260 = !DILocation(line: 1837, column: 4, scope: !4985)
!5261 = distinct !{!5261, !5255, !5262}
!5262 = !DILocation(line: 1838, column: 3, scope: !4873)
!5263 = !DILocation(line: 1844, column: 1, scope: !4846)
!5264 = distinct !DISubprogram(name: "extract_conversion", scope: !2865, file: !2865, line: 642, type: !5265, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5267)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!319, !4921, !319}
!5267 = !{!5268, !5269}
!5268 = !DILocalVariable(name: "conv", arg: 1, scope: !5264, file: !2865, line: 642, type: !4921)
!5269 = !DILocalVariable(name: "sp", arg: 2, scope: !5264, file: !2865, line: 643, type: !319)
!5270 = !DILocation(line: 0, scope: !5264)
!5271 = !DILocation(line: 645, column: 10, scope: !5264)
!5272 = !DILocation(line: 653, column: 2, scope: !5264)
!5273 = !DILocation(line: 654, column: 6, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5264, file: !2865, line: 654, column: 6)
!5275 = !DILocation(line: 654, column: 10, scope: !5274)
!5276 = !DILocation(line: 654, column: 6, scope: !5264)
!5277 = !DILocation(line: 655, column: 24, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !2865, line: 654, column: 18)
!5279 = !DILocation(line: 655, column: 19, scope: !5278)
!5280 = !DILocation(line: 656, column: 3, scope: !5278)
!5281 = !DILocation(line: 659, column: 7, scope: !5264)
!5282 = !DILocation(line: 660, column: 7, scope: !5264)
!5283 = !DILocation(line: 661, column: 7, scope: !5264)
!5284 = !DILocation(line: 662, column: 7, scope: !5264)
!5285 = !DILocation(line: 663, column: 7, scope: !5264)
!5286 = !DILocation(line: 665, column: 2, scope: !5264)
!5287 = !DILocation(line: 666, column: 1, scope: !5264)
!5288 = distinct !DISubprogram(name: "outs", scope: !2865, file: !2865, line: 1319, type: !5289, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5291)
!5289 = !DISubroutineType(types: !5290)
!5290 = !{!55, !3839, !39, !319, !319}
!5291 = !{!5292, !5293, !5294, !5295, !5296, !5297}
!5292 = !DILocalVariable(name: "out", arg: 1, scope: !5288, file: !2865, line: 1319, type: !3839)
!5293 = !DILocalVariable(name: "ctx", arg: 2, scope: !5288, file: !2865, line: 1320, type: !39)
!5294 = !DILocalVariable(name: "sp", arg: 3, scope: !5288, file: !2865, line: 1321, type: !319)
!5295 = !DILocalVariable(name: "ep", arg: 4, scope: !5288, file: !2865, line: 1322, type: !319)
!5296 = !DILocalVariable(name: "count", scope: !5288, file: !2865, line: 1324, type: !193)
!5297 = !DILocalVariable(name: "rc", scope: !5298, file: !2865, line: 1327, type: !55)
!5298 = distinct !DILexicalBlock(scope: !5288, file: !2865, line: 1326, column: 45)
!5299 = !DILocation(line: 0, scope: !5288)
!5300 = !DILocation(line: 1326, column: 2, scope: !5288)
!5301 = !DILocation(line: 1324, column: 9, scope: !5288)
!5302 = !DILocation(line: 1326, column: 13, scope: !5288)
!5303 = !DILocation(line: 1326, column: 19, scope: !5288)
!5304 = !DILocation(line: 1327, column: 21, scope: !5298)
!5305 = !DILocation(line: 1326, column: 36, scope: !5288)
!5306 = !DILocation(line: 1326, column: 39, scope: !5288)
!5307 = !DILocation(line: 1327, column: 24, scope: !5298)
!5308 = !DILocation(line: 1327, column: 16, scope: !5298)
!5309 = !DILocation(line: 1327, column: 12, scope: !5298)
!5310 = !DILocation(line: 0, scope: !5298)
!5311 = !DILocation(line: 1329, column: 10, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5298, file: !2865, line: 1329, column: 7)
!5313 = !DILocation(line: 1329, column: 7, scope: !5298)
!5314 = distinct !{!5314, !5300, !5315}
!5315 = !DILocation(line: 1333, column: 2, scope: !5288)
!5316 = !DILocation(line: 1336, column: 1, scope: !5288)
!5317 = distinct !DISubprogram(name: "encode_uint", scope: !2865, file: !2865, line: 788, type: !5318, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5320)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!1297, !2887, !4921, !1297, !319}
!5320 = !{!5321, !5322, !5323, !5324, !5325, !5326, !5328, !5329}
!5321 = !DILocalVariable(name: "value", arg: 1, scope: !5317, file: !2865, line: 788, type: !2887)
!5322 = !DILocalVariable(name: "conv", arg: 2, scope: !5317, file: !2865, line: 789, type: !4921)
!5323 = !DILocalVariable(name: "bps", arg: 3, scope: !5317, file: !2865, line: 790, type: !1297)
!5324 = !DILocalVariable(name: "bpe", arg: 4, scope: !5317, file: !2865, line: 791, type: !319)
!5325 = !DILocalVariable(name: "upcase", scope: !5317, file: !2865, line: 793, type: !329)
!5326 = !DILocalVariable(name: "radix", scope: !5317, file: !2865, line: 794, type: !5327)
!5327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !41)
!5328 = !DILocalVariable(name: "bp", scope: !5317, file: !2865, line: 795, type: !1297)
!5329 = !DILocalVariable(name: "lsv", scope: !5330, file: !2865, line: 798, type: !41)
!5330 = distinct !DILexicalBlock(scope: !5317, file: !2865, line: 797, column: 5)
!5331 = !DILocation(line: 0, scope: !5317)
!5332 = !DILocation(line: 793, column: 35, scope: !5317)
!5333 = !DILocation(line: 793, column: 24, scope: !5317)
!5334 = !DILocation(line: 793, column: 16, scope: !5317)
!5335 = !DILocation(line: 794, column: 29, scope: !5317)
!5336 = !DILocation(line: 795, column: 24, scope: !5317)
!5337 = !DILocation(line: 795, column: 17, scope: !5317)
!5338 = !DILocation(line: 797, column: 2, scope: !5317)
!5339 = !DILocation(line: 802, column: 9, scope: !5330)
!5340 = !DILocation(line: 798, column: 22, scope: !5330)
!5341 = !DILocation(line: 0, scope: !5330)
!5342 = !DILocation(line: 800, column: 16, scope: !5330)
!5343 = !DILocation(line: 800, column: 11, scope: !5330)
!5344 = !DILocation(line: 800, column: 4, scope: !5330)
!5345 = !DILocation(line: 800, column: 9, scope: !5330)
!5346 = !DILocation(line: 803, column: 18, scope: !5317)
!5347 = !DILocation(line: 803, column: 24, scope: !5317)
!5348 = !DILocation(line: 803, column: 2, scope: !5330)
!5349 = distinct !{!5349, !5338, !5350}
!5350 = !DILocation(line: 803, column: 37, scope: !5317)
!5351 = !DILocation(line: 808, column: 12, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5317, file: !2865, line: 808, column: 6)
!5353 = !DILocation(line: 808, column: 6, scope: !5317)
!5354 = !DILocation(line: 809, column: 7, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5352, file: !2865, line: 808, column: 23)
!5356 = !DILocation(line: 813, column: 3, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !2865, line: 811, column: 27)
!5358 = distinct !DILexicalBlock(scope: !5359, file: !2865, line: 811, column: 14)
!5359 = distinct !DILexicalBlock(scope: !5355, file: !2865, line: 809, column: 7)
!5360 = !DILocation(line: 0, scope: !5359)
!5361 = !DILocation(line: 818, column: 2, scope: !5317)
!5362 = distinct !DISubprogram(name: "store_count", scope: !2865, file: !2865, line: 1280, type: !5363, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5367)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{null, !5365, !39, !55}
!5365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5366, size: 32)
!5366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4888)
!5367 = !{!5368, !5369, !5370}
!5368 = !DILocalVariable(name: "conv", arg: 1, scope: !5362, file: !2865, line: 1280, type: !5365)
!5369 = !DILocalVariable(name: "dp", arg: 2, scope: !5362, file: !2865, line: 1281, type: !39)
!5370 = !DILocalVariable(name: "count", arg: 3, scope: !5362, file: !2865, line: 1282, type: !55)
!5371 = !DILocation(line: 0, scope: !5362)
!5372 = !DILocation(line: 1284, column: 38, scope: !5362)
!5373 = !DILocation(line: 1284, column: 2, scope: !5362)
!5374 = !DILocation(line: 1286, column: 4, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5362, file: !2865, line: 1284, column: 50)
!5376 = !DILocation(line: 1286, column: 14, scope: !5375)
!5377 = !DILocation(line: 1287, column: 3, scope: !5375)
!5378 = !DILocation(line: 1289, column: 24, scope: !5375)
!5379 = !DILocation(line: 1289, column: 22, scope: !5375)
!5380 = !DILocation(line: 1290, column: 3, scope: !5375)
!5381 = !DILocation(line: 1292, column: 18, scope: !5375)
!5382 = !DILocation(line: 1292, column: 4, scope: !5375)
!5383 = !DILocation(line: 1292, column: 16, scope: !5375)
!5384 = !DILocation(line: 1293, column: 3, scope: !5375)
!5385 = !DILocation(line: 1295, column: 4, scope: !5375)
!5386 = !DILocation(line: 1295, column: 15, scope: !5375)
!5387 = !DILocation(line: 1296, column: 3, scope: !5375)
!5388 = !DILocation(line: 1298, column: 22, scope: !5375)
!5389 = !DILocation(line: 1298, column: 4, scope: !5375)
!5390 = !DILocation(line: 1298, column: 20, scope: !5375)
!5391 = !DILocation(line: 1299, column: 3, scope: !5375)
!5392 = !DILocation(line: 1301, column: 21, scope: !5375)
!5393 = !DILocation(line: 1301, column: 4, scope: !5375)
!5394 = !DILocation(line: 1301, column: 19, scope: !5375)
!5395 = !DILocation(line: 1302, column: 3, scope: !5375)
!5396 = !DILocation(line: 1304, column: 4, scope: !5375)
!5397 = !DILocation(line: 1304, column: 17, scope: !5375)
!5398 = !DILocation(line: 1305, column: 3, scope: !5375)
!5399 = !DILocation(line: 1307, column: 4, scope: !5375)
!5400 = !DILocation(line: 1307, column: 20, scope: !5375)
!5401 = !DILocation(line: 1308, column: 3, scope: !5375)
!5402 = !DILocation(line: 1316, column: 1, scope: !5362)
!5403 = distinct !DISubprogram(name: "isupper", scope: !5404, file: !5404, line: 16, type: !283, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5405)
!5404 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5405 = !{!5406}
!5406 = !DILocalVariable(name: "a", arg: 1, scope: !5403, file: !5404, line: 16, type: !55)
!5407 = !DILocation(line: 0, scope: !5403)
!5408 = !DILocation(line: 18, column: 29, scope: !5403)
!5409 = !DILocation(line: 18, column: 45, scope: !5403)
!5410 = !DILocation(line: 18, column: 2, scope: !5403)
!5411 = distinct !DISubprogram(name: "conversion_radix", scope: !2865, file: !2865, line: 761, type: !5412, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5414)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!193, !113}
!5414 = !{!5415}
!5415 = !DILocalVariable(name: "specifier", arg: 1, scope: !5411, file: !2865, line: 761, type: !113)
!5416 = !DILocation(line: 0, scope: !5411)
!5417 = !DILocation(line: 763, column: 2, scope: !5411)
!5418 = !DILocation(line: 770, column: 3, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5411, file: !2865, line: 763, column: 21)
!5420 = !DILocation(line: 774, column: 3, scope: !5419)
!5421 = !DILocation(line: 0, scope: !5419)
!5422 = !DILocation(line: 776, column: 1, scope: !5411)
!5423 = distinct !DISubprogram(name: "extract_flags", scope: !2865, file: !2865, line: 339, type: !5265, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5424)
!5424 = !{!5425, !5426, !5427}
!5425 = !DILocalVariable(name: "conv", arg: 1, scope: !5423, file: !2865, line: 339, type: !4921)
!5426 = !DILocalVariable(name: "sp", arg: 2, scope: !5423, file: !2865, line: 340, type: !319)
!5427 = !DILocalVariable(name: "loop", scope: !5423, file: !2865, line: 342, type: !329)
!5428 = !DILocation(line: 0, scope: !5423)
!5429 = !DILocation(line: 344, column: 2, scope: !5423)
!5430 = !DILocation(line: 345, column: 11, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5423, file: !2865, line: 344, column: 5)
!5432 = !DILocation(line: 345, column: 3, scope: !5431)
!5433 = !DILocation(line: 351, column: 4, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5431, file: !2865, line: 345, column: 16)
!5435 = !DILocation(line: 354, column: 4, scope: !5434)
!5436 = !DILocation(line: 357, column: 4, scope: !5434)
!5437 = !DILocation(line: 360, column: 4, scope: !5434)
!5438 = !DILocation(line: 0, scope: !5434)
!5439 = !DILocation(line: 370, column: 12, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5423, file: !2865, line: 370, column: 6)
!5441 = !DILocation(line: 370, column: 22, scope: !5440)
!5442 = !DILocation(line: 371, column: 19, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5440, file: !2865, line: 370, column: 42)
!5444 = !DILocation(line: 372, column: 2, scope: !5443)
!5445 = !DILocation(line: 376, column: 2, scope: !5423)
!5446 = distinct !DISubprogram(name: "extract_width", scope: !2865, file: !2865, line: 388, type: !5265, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5447)
!5447 = !{!5448, !5449, !5450, !5451}
!5448 = !DILocalVariable(name: "conv", arg: 1, scope: !5446, file: !2865, line: 388, type: !4921)
!5449 = !DILocalVariable(name: "sp", arg: 2, scope: !5446, file: !2865, line: 389, type: !319)
!5450 = !DILocalVariable(name: "wp", scope: !5446, file: !2865, line: 398, type: !319)
!5451 = !DILocalVariable(name: "width", scope: !5446, file: !2865, line: 399, type: !193)
!5452 = !DILocation(line: 0, scope: !5446)
!5453 = !DILocation(line: 391, column: 8, scope: !5446)
!5454 = !DILocation(line: 391, column: 22, scope: !5446)
!5455 = !DILocation(line: 393, column: 6, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5446, file: !2865, line: 393, column: 6)
!5457 = !DILocation(line: 393, column: 10, scope: !5456)
!5458 = !DILocation(line: 393, column: 6, scope: !5446)
!5459 = !DILocation(line: 394, column: 20, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5456, file: !2865, line: 393, column: 18)
!5461 = !DILocation(line: 395, column: 10, scope: !5460)
!5462 = !DILocation(line: 395, column: 3, scope: !5460)
!5463 = !DILocation(line: 399, column: 17, scope: !5446)
!5464 = !DILocation(line: 401, column: 6, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5446, file: !2865, line: 401, column: 6)
!5466 = !DILocation(line: 401, column: 9, scope: !5465)
!5467 = !DILocation(line: 401, column: 6, scope: !5446)
!5468 = !DILocation(line: 402, column: 23, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5465, file: !2865, line: 401, column: 16)
!5470 = !DILocation(line: 403, column: 9, scope: !5469)
!5471 = !DILocation(line: 403, column: 21, scope: !5469)
!5472 = !DILocation(line: 405, column: 11, scope: !5469)
!5473 = !DILocation(line: 404, column: 21, scope: !5469)
!5474 = !DILocation(line: 406, column: 2, scope: !5469)
!5475 = !DILocation(line: 409, column: 1, scope: !5446)
!5476 = distinct !DISubprogram(name: "extract_prec", scope: !2865, file: !2865, line: 420, type: !5265, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5477)
!5477 = !{!5478, !5479, !5480}
!5478 = !DILocalVariable(name: "conv", arg: 1, scope: !5476, file: !2865, line: 420, type: !4921)
!5479 = !DILocalVariable(name: "sp", arg: 2, scope: !5476, file: !2865, line: 421, type: !319)
!5480 = !DILocalVariable(name: "prec", scope: !5476, file: !2865, line: 435, type: !193)
!5481 = !DILocation(line: 0, scope: !5476)
!5482 = !DILocation(line: 423, column: 24, scope: !5476)
!5483 = !DILocation(line: 423, column: 28, scope: !5476)
!5484 = !DILocation(line: 423, column: 8, scope: !5476)
!5485 = !DILocation(line: 423, column: 21, scope: !5476)
!5486 = !DILocation(line: 425, column: 6, scope: !5476)
!5487 = !DILocation(line: 428, column: 2, scope: !5476)
!5488 = !DILocation(line: 430, column: 6, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5476, file: !2865, line: 430, column: 6)
!5490 = !DILocation(line: 430, column: 10, scope: !5489)
!5491 = !DILocation(line: 430, column: 6, scope: !5476)
!5492 = !DILocation(line: 431, column: 19, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5489, file: !2865, line: 430, column: 18)
!5494 = !DILocation(line: 432, column: 10, scope: !5493)
!5495 = !DILocation(line: 432, column: 3, scope: !5493)
!5496 = !DILocation(line: 435, column: 16, scope: !5476)
!5497 = !DILocation(line: 437, column: 8, scope: !5476)
!5498 = !DILocation(line: 437, column: 19, scope: !5476)
!5499 = !DILocation(line: 439, column: 10, scope: !5476)
!5500 = !DILocation(line: 438, column: 20, scope: !5476)
!5501 = !DILocation(line: 441, column: 9, scope: !5476)
!5502 = !DILocation(line: 442, column: 1, scope: !5476)
!5503 = distinct !DISubprogram(name: "extract_length", scope: !2865, file: !2865, line: 453, type: !5265, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5504)
!5504 = !{!5505, !5506}
!5505 = !DILocalVariable(name: "conv", arg: 1, scope: !5503, file: !2865, line: 453, type: !4921)
!5506 = !DILocalVariable(name: "sp", arg: 2, scope: !5503, file: !2865, line: 454, type: !319)
!5507 = !DILocation(line: 0, scope: !5503)
!5508 = !DILocation(line: 456, column: 10, scope: !5503)
!5509 = !DILocation(line: 456, column: 2, scope: !5503)
!5510 = !DILocation(line: 458, column: 8, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !2865, line: 458, column: 7)
!5512 = distinct !DILexicalBlock(scope: !5503, file: !2865, line: 456, column: 15)
!5513 = !DILocation(line: 458, column: 7, scope: !5511)
!5514 = !DILocation(line: 458, column: 13, scope: !5511)
!5515 = !DILocation(line: 0, scope: !5511)
!5516 = !DILocation(line: 458, column: 7, scope: !5512)
!5517 = !DILocation(line: 459, column: 21, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5511, file: !2865, line: 458, column: 21)
!5519 = !DILocation(line: 460, column: 4, scope: !5518)
!5520 = !DILocation(line: 461, column: 3, scope: !5518)
!5521 = !DILocation(line: 462, column: 21, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5511, file: !2865, line: 461, column: 10)
!5523 = !DILocation(line: 466, column: 8, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5512, file: !2865, line: 466, column: 7)
!5525 = !DILocation(line: 466, column: 7, scope: !5524)
!5526 = !DILocation(line: 466, column: 13, scope: !5524)
!5527 = !DILocation(line: 0, scope: !5524)
!5528 = !DILocation(line: 466, column: 7, scope: !5512)
!5529 = !DILocation(line: 467, column: 21, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5524, file: !2865, line: 466, column: 21)
!5531 = !DILocation(line: 468, column: 4, scope: !5530)
!5532 = !DILocation(line: 469, column: 3, scope: !5530)
!5533 = !DILocation(line: 470, column: 21, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5524, file: !2865, line: 469, column: 10)
!5535 = !DILocation(line: 474, column: 9, scope: !5512)
!5536 = !DILocation(line: 474, column: 20, scope: !5512)
!5537 = !DILocation(line: 475, column: 3, scope: !5512)
!5538 = !DILocation(line: 476, column: 3, scope: !5512)
!5539 = !DILocation(line: 478, column: 9, scope: !5512)
!5540 = !DILocation(line: 478, column: 20, scope: !5512)
!5541 = !DILocation(line: 479, column: 3, scope: !5512)
!5542 = !DILocation(line: 480, column: 3, scope: !5512)
!5543 = !DILocation(line: 482, column: 9, scope: !5512)
!5544 = !DILocation(line: 482, column: 20, scope: !5512)
!5545 = !DILocation(line: 483, column: 3, scope: !5512)
!5546 = !DILocation(line: 484, column: 3, scope: !5512)
!5547 = !DILocation(line: 486, column: 9, scope: !5512)
!5548 = !DILocation(line: 486, column: 20, scope: !5512)
!5549 = !DILocation(line: 487, column: 3, scope: !5512)
!5550 = !DILocation(line: 492, column: 21, scope: !5512)
!5551 = !DILocation(line: 493, column: 3, scope: !5512)
!5552 = !DILocation(line: 495, column: 9, scope: !5512)
!5553 = !DILocation(line: 495, column: 20, scope: !5512)
!5554 = !DILocation(line: 496, column: 3, scope: !5512)
!5555 = !DILocation(line: 498, column: 2, scope: !5503)
!5556 = distinct !DISubprogram(name: "extract_specifier", scope: !2865, file: !2865, line: 513, type: !5265, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5557)
!5557 = !{!5558, !5559, !5560, !5561}
!5558 = !DILocalVariable(name: "conv", arg: 1, scope: !5556, file: !2865, line: 513, type: !4921)
!5559 = !DILocalVariable(name: "sp", arg: 2, scope: !5556, file: !2865, line: 514, type: !319)
!5560 = !DILocalVariable(name: "unsupported", scope: !5556, file: !2865, line: 516, type: !329)
!5561 = !DILabel(scope: !5562, name: "int_conv", file: !2865, line: 526)
!5562 = distinct !DILexicalBlock(scope: !5556, file: !2865, line: 520, column: 27)
!5563 = !DILocation(line: 0, scope: !5556)
!5564 = !DILocation(line: 518, column: 20, scope: !5556)
!5565 = !DILocation(line: 518, column: 8, scope: !5556)
!5566 = !DILocation(line: 518, column: 18, scope: !5556)
!5567 = !DILocation(line: 520, column: 2, scope: !5556)
!5568 = !DILocation(line: 525, column: 3, scope: !5562)
!5569 = !DILocation(line: 0, scope: !5562)
!5570 = !DILocation(line: 526, column: 1, scope: !5562)
!5571 = !DILocation(line: 528, column: 24, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5562, file: !2865, line: 528, column: 7)
!5573 = !DILocation(line: 528, column: 7, scope: !5562)
!5574 = !DILocation(line: 535, column: 23, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5562, file: !2865, line: 535, column: 7)
!5576 = !DILocation(line: 535, column: 7, scope: !5562)
!5577 = !DILocation(line: 536, column: 36, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5575, file: !2865, line: 535, column: 31)
!5579 = !DILocation(line: 537, column: 3, scope: !5578)
!5580 = !DILocation(line: 570, column: 9, scope: !5562)
!5581 = !DILocation(line: 570, column: 23, scope: !5562)
!5582 = !DILocation(line: 575, column: 4, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !2865, line: 573, column: 48)
!5584 = distinct !DILexicalBlock(scope: !5562, file: !2865, line: 573, column: 7)
!5585 = !DILocation(line: 603, column: 9, scope: !5562)
!5586 = !DILocation(line: 603, column: 23, scope: !5562)
!5587 = !DILocation(line: 605, column: 24, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5562, file: !2865, line: 605, column: 7)
!5589 = !DILocation(line: 605, column: 7, scope: !5562)
!5590 = !DILocation(line: 612, column: 9, scope: !5562)
!5591 = !DILocation(line: 612, column: 23, scope: !5562)
!5592 = !DILocation(line: 619, column: 24, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5562, file: !2865, line: 619, column: 7)
!5594 = !DILocation(line: 619, column: 7, scope: !5562)
!5595 = !DILocation(line: 625, column: 9, scope: !5562)
!5596 = !DILocation(line: 625, column: 17, scope: !5562)
!5597 = !DILocation(line: 626, column: 3, scope: !5562)
!5598 = !DILocation(line: 629, column: 20, scope: !5556)
!5599 = !DILocation(line: 629, column: 8, scope: !5556)
!5600 = !DILocation(line: 518, column: 23, scope: !5556)
!5601 = !DILocation(line: 631, column: 2, scope: !5556)
!5602 = distinct !DISubprogram(name: "extract_decimal", scope: !2865, file: !2865, line: 318, type: !5603, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5606)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!193, !5605}
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 32)
!5606 = !{!5607, !5608, !5609}
!5607 = !DILocalVariable(name: "str", arg: 1, scope: !5602, file: !2865, line: 318, type: !5605)
!5608 = !DILocalVariable(name: "sp", scope: !5602, file: !2865, line: 320, type: !319)
!5609 = !DILocalVariable(name: "val", scope: !5602, file: !2865, line: 321, type: !193)
!5610 = !DILocation(line: 0, scope: !5602)
!5611 = !DILocation(line: 320, column: 19, scope: !5602)
!5612 = !DILocation(line: 323, column: 37, scope: !5602)
!5613 = !DILocation(line: 323, column: 17, scope: !5602)
!5614 = !DILocation(line: 323, column: 9, scope: !5602)
!5615 = !DILocation(line: 323, column: 2, scope: !5602)
!5616 = !DILocation(line: 324, column: 13, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5602, file: !2865, line: 323, column: 43)
!5618 = !DILocation(line: 324, column: 24, scope: !5617)
!5619 = !DILocation(line: 324, column: 19, scope: !5617)
!5620 = !DILocation(line: 324, column: 27, scope: !5617)
!5621 = distinct !{!5621, !5615, !5622}
!5622 = !DILocation(line: 325, column: 2, scope: !5602)
!5623 = !DILocation(line: 326, column: 7, scope: !5602)
!5624 = !DILocation(line: 327, column: 2, scope: !5602)
!5625 = distinct !DISubprogram(name: "isdigit", scope: !5404, file: !5404, line: 43, type: !283, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !5626)
!5626 = !{!5627}
!5627 = !DILocalVariable(name: "a", arg: 1, scope: !5625, file: !5404, line: 43, type: !55)
!5628 = !DILocation(line: 0, scope: !5625)
!5629 = !DILocation(line: 45, column: 29, scope: !5625)
!5630 = !DILocation(line: 45, column: 45, scope: !5625)
!5631 = !DILocation(line: 45, column: 2, scope: !5625)
!5632 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5633, file: !5633, line: 9, type: !3440, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !2223)
!5633 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!5634 = !DILocation(line: 11, column: 1, scope: !5632)
!5635 = !{i64 2147561900, i64 2147561943, i64 2147561983}
!5636 = !DILocation(line: 12, column: 1, scope: !5632)
!5637 = !{i64 2147566127, i64 2147566170, i64 2147566210}
!5638 = !DILocation(line: 13, column: 1, scope: !5632)
!5639 = !{i64 2147566336, i64 2147566379, i64 2147566419}
!5640 = !DILocation(line: 14, column: 1, scope: !5632)
!5641 = !{i64 2147566505, i64 2147566548, i64 2147566588}
!5642 = !DILocation(line: 15, column: 1, scope: !5632)
!5643 = !{i64 2147566668, i64 2147566711, i64 2147566751}
!5644 = !DILocation(line: 16, column: 1, scope: !5632)
!5645 = !{i64 2147566852, i64 2147566895, i64 2147566935}
!5646 = !DILocation(line: 17, column: 1, scope: !5632)
!5647 = !{i64 2147567031, i64 2147567074, i64 2147567114}
!5648 = !DILocation(line: 18, column: 1, scope: !5632)
!5649 = !{i64 2147567273, i64 2147567316, i64 2147567356}
!5650 = !DILocation(line: 19, column: 1, scope: !5632)
!5651 = !{i64 2147567508, i64 2147567551, i64 2147567591}
!5652 = !DILocation(line: 20, column: 1, scope: !5632)
!5653 = !{i64 2147567694, i64 2147567737, i64 2147567777}
!5654 = !DILocation(line: 21, column: 1, scope: !5632)
!5655 = !{i64 2147567910, i64 2147567953, i64 2147567993}
!5656 = !DILocation(line: 22, column: 1, scope: !5632)
!5657 = !{i64 2147568113, i64 2147568156, i64 2147568196}
!5658 = !DILocation(line: 23, column: 1, scope: !5632)
!5659 = !{i64 2147568316, i64 2147568359, i64 2147568399}
!5660 = !DILocation(line: 24, column: 1, scope: !5632)
!5661 = !{i64 2147568491, i64 2147568534, i64 2147568574}
!5662 = !DILocation(line: 25, column: 1, scope: !5632)
!5663 = !{i64 2147568699, i64 2147568742, i64 2147568782}
!5664 = !DILocation(line: 26, column: 1, scope: !5632)
!5665 = !{i64 2147568903, i64 2147568946, i64 2147568986}
!5666 = !DILocation(line: 27, column: 1, scope: !5632)
!5667 = !{i64 2147569096, i64 2147569139, i64 2147569179}
!5668 = !DILocation(line: 28, column: 1, scope: !5632)
!5669 = !{i64 2147569298, i64 2147569341, i64 2147569381}
!5670 = !DILocation(line: 29, column: 1, scope: !5632)
!5671 = !{i64 2147569525, i64 2147569568, i64 2147569608}
!5672 = !DILocation(line: 30, column: 1, scope: !5632)
!5673 = !{i64 2147569727, i64 2147569770, i64 2147569810}
!5674 = !DILocation(line: 31, column: 1, scope: !5632)
!5675 = !{i64 2147569942, i64 2147569985, i64 2147570025}
!5676 = !DILocation(line: 32, column: 1, scope: !5632)
!5677 = !{i64 2147570114, i64 2147570157, i64 2147570197}
!5678 = !DILocation(line: 33, column: 1, scope: !5632)
!5679 = !{i64 2147570316, i64 2147570359, i64 2147570399}
!5680 = !DILocation(line: 34, column: 1, scope: !5632)
!5681 = !{i64 2147570542, i64 2147570585, i64 2147570625}
!5682 = !DILocation(line: 35, column: 1, scope: !5632)
!5683 = !{i64 2147570741, i64 2147570784, i64 2147570824}
!5684 = !DILocation(line: 36, column: 1, scope: !5632)
!5685 = !{i64 2147570916, i64 2147570959, i64 2147570999}
!5686 = !DILocation(line: 37, column: 1, scope: !5632)
!5687 = !{i64 2147571169, i64 2147571212, i64 2147571252}
!5688 = !DILocation(line: 38, column: 1, scope: !5632)
!5689 = !{i64 2147571410, i64 2147571453, i64 2147571493}
!5690 = !DILocation(line: 39, column: 1, scope: !5632)
!5691 = !{i64 2147571645, i64 2147571688, i64 2147571728}
!5692 = !DILocation(line: 40, column: 1, scope: !5632)
!5693 = !{i64 2147571877, i64 2147571920, i64 2147571960}
!5694 = !DILocation(line: 41, column: 1, scope: !5632)
!5695 = !{i64 2147572103, i64 2147572146, i64 2147572186}
!5696 = !DILocation(line: 42, column: 1, scope: !5632)
!5697 = !{i64 2147572329, i64 2147572372, i64 2147572412}
!5698 = !DILocation(line: 43, column: 1, scope: !5632)
!5699 = !{i64 2147572555, i64 2147572598, i64 2147572638}
!5700 = !DILocation(line: 44, column: 1, scope: !5632)
!5701 = !{i64 2147572790, i64 2147572833, i64 2147572873}
!5702 = !DILocation(line: 45, column: 1, scope: !5632)
!5703 = !{i64 2147573034, i64 2147573077, i64 2147573117}
!5704 = !DILocation(line: 46, column: 1, scope: !5632)
!5705 = !{i64 2147573281, i64 2147573324, i64 2147573364}
!5706 = !DILocation(line: 47, column: 1, scope: !5632)
!5707 = !{i64 2147573513, i64 2147573556, i64 2147573596}
!5708 = !DILocation(line: 48, column: 1, scope: !5632)
!5709 = !{i64 2147573757, i64 2147573800, i64 2147573840}
!5710 = !DILocation(line: 49, column: 1, scope: !5632)
!5711 = !{i64 2147573995, i64 2147574038, i64 2147574078}
!5712 = !DILocation(line: 50, column: 1, scope: !5632)
!5713 = !{i64 2147574269, i64 2147574312, i64 2147574352}
!5714 = !DILocation(line: 51, column: 1, scope: !5632)
!5715 = !{i64 2147574507, i64 2147574550, i64 2147574590}
!5716 = !DILocation(line: 52, column: 1, scope: !5632)
!5717 = !{i64 2147574760, i64 2147574803, i64 2147574843}
!5718 = !DILocation(line: 53, column: 1, scope: !5632)
!5719 = !{i64 2147579065, i64 2147579108, i64 2147579148}
!5720 = !DILocation(line: 54, column: 1, scope: !5632)
!5721 = !{i64 2147579300, i64 2147579343, i64 2147579383}
!5722 = !DILocation(line: 55, column: 1, scope: !5632)
!5723 = !{i64 2147579550, i64 2147579593, i64 2147579633}
!5724 = !DILocation(line: 56, column: 1, scope: !5632)
!5725 = !{i64 2147579797, i64 2147579840, i64 2147579880}
!5726 = !DILocation(line: 57, column: 1, scope: !5632)
!5727 = !{i64 2147580032, i64 2147580075, i64 2147580115}
!5728 = !DILocation(line: 58, column: 1, scope: !5632)
!5729 = !{i64 2147580267, i64 2147580310, i64 2147580350}
!5730 = !DILocation(line: 59, column: 1, scope: !5632)
!5731 = !{i64 2147580502, i64 2147580545, i64 2147580585}
!5732 = !DILocation(line: 60, column: 1, scope: !5632)
!5733 = !{i64 2147580737, i64 2147580780, i64 2147580820}
!5734 = !DILocation(line: 61, column: 1, scope: !5632)
!5735 = !{i64 2147580981, i64 2147581024, i64 2147581064}
!5736 = !DILocation(line: 62, column: 1, scope: !5632)
!5737 = !{i64 2147581219, i64 2147581262, i64 2147581302}
!5738 = !DILocation(line: 63, column: 1, scope: !5632)
!5739 = !{i64 2147581460, i64 2147581503, i64 2147581543}
!5740 = !DILocation(line: 64, column: 1, scope: !5632)
!5741 = !{i64 2147581740, i64 2147581783, i64 2147581823}
!5742 = !DILocation(line: 65, column: 1, scope: !5632)
!5743 = !{i64 2147581999, i64 2147582042, i64 2147582082}
!5744 = !DILocation(line: 66, column: 1, scope: !5632)
!5745 = !{i64 2147582237, i64 2147582280, i64 2147582320}
!5746 = !DILocation(line: 67, column: 1, scope: !5632)
!5747 = !{i64 2147582466, i64 2147582509, i64 2147582549}
!5748 = !DILocation(line: 68, column: 1, scope: !5632)
!5749 = !{i64 2147582674, i64 2147582717, i64 2147582757}
!5750 = !DILocation(line: 69, column: 1, scope: !5632)
!5751 = !{i64 2147582885, i64 2147582928, i64 2147582968}
!5752 = !DILocation(line: 70, column: 1, scope: !5632)
!5753 = !{i64 2147583120, i64 2147583163, i64 2147583203}
!5754 = !DILocation(line: 71, column: 1, scope: !5632)
!5755 = !{i64 2147583349, i64 2147583392, i64 2147583432}
!5756 = !DILocation(line: 72, column: 1, scope: !5632)
!5757 = !{i64 2147583587, i64 2147583630, i64 2147583670}
!5758 = !DILocation(line: 73, column: 1, scope: !5632)
!5759 = !{i64 2147583819, i64 2147583862, i64 2147583902}
!5760 = !DILocation(line: 74, column: 1, scope: !5632)
!5761 = !{i64 2147584045, i64 2147584088, i64 2147584128}
!5762 = !DILocation(line: 75, column: 1, scope: !5632)
!5763 = !{i64 2147584262, i64 2147584305, i64 2147584345}
!5764 = !DILocation(line: 76, column: 1, scope: !5632)
!5765 = !{i64 2147584494, i64 2147584537, i64 2147584577}
!5766 = !DILocation(line: 77, column: 1, scope: !5632)
!5767 = !{i64 2147584720, i64 2147584763, i64 2147584803}
!5768 = !DILocation(line: 78, column: 1, scope: !5632)
!5769 = !{i64 2147584934, i64 2147584977, i64 2147585017}
!5770 = !DILocation(line: 79, column: 1, scope: !5632)
!5771 = !{i64 2147585154, i64 2147585197, i64 2147585237}
!5772 = !DILocation(line: 80, column: 1, scope: !5632)
!5773 = !{i64 2147585386, i64 2147585429, i64 2147585469}
!5774 = !DILocation(line: 81, column: 1, scope: !5632)
!5775 = !{i64 2147585594, i64 2147585637, i64 2147585677}
!5776 = !DILocation(line: 82, column: 1, scope: !5632)
!5777 = !{i64 2147585799, i64 2147585842, i64 2147585882}
!5778 = !DILocation(line: 83, column: 1, scope: !5632)
!5779 = !{i64 2147586016, i64 2147586059, i64 2147586099}
!5780 = !DILocation(line: 84, column: 1, scope: !5632)
!5781 = !{i64 2147586230, i64 2147586273, i64 2147586313}
!5782 = !DILocation(line: 85, column: 1, scope: !5632)
!5783 = !{i64 2147586456, i64 2147586499, i64 2147586539}
!5784 = !DILocation(line: 86, column: 1, scope: !5632)
!5785 = !{i64 2147586676, i64 2147586719, i64 2147586759}
!5786 = !DILocation(line: 87, column: 1, scope: !5632)
!5787 = !{i64 2147586881, i64 2147586924, i64 2147586964}
!5788 = !DILocation(line: 88, column: 1, scope: !5632)
!5789 = !{i64 2147591174, i64 2147591217, i64 2147591257}
!5790 = !DILocation(line: 89, column: 1, scope: !5632)
!5791 = !{i64 2147591409, i64 2147591452, i64 2147591492}
!5792 = !DILocation(line: 90, column: 1, scope: !5632)
!5793 = !{i64 2147591659, i64 2147591702, i64 2147591742}
!5794 = !DILocation(line: 91, column: 1, scope: !5632)
!5795 = !{i64 2147591909, i64 2147591952, i64 2147591992}
!5796 = !DILocation(line: 92, column: 1, scope: !5632)
!5797 = !{i64 2147592147, i64 2147592190, i64 2147592230}
!5798 = !DILocation(line: 93, column: 1, scope: !5632)
!5799 = !{i64 2147592358, i64 2147592401, i64 2147592441}
!5800 = !DILocation(line: 94, column: 1, scope: !5632)
!5801 = !{i64 2147592575, i64 2147592618, i64 2147592658}
!5802 = !DILocation(line: 95, column: 1, scope: !5632)
!5803 = !{i64 2147592771, i64 2147592814, i64 2147592854}
!5804 = !DILocation(line: 96, column: 1, scope: !5632)
!5805 = !{i64 2147592973, i64 2147593016, i64 2147593056}
!5806 = !DILocation(line: 97, column: 1, scope: !5632)
!5807 = !{i64 2147593166, i64 2147593209, i64 2147593249}
!5808 = !DILocation(line: 98, column: 1, scope: !5632)
!5809 = !{i64 2147593374, i64 2147593417, i64 2147593457}
!5810 = !DILocation(line: 99, column: 1, scope: !5632)
!5811 = !{i64 2147593570, i64 2147593613, i64 2147593653}
!5812 = !DILocation(line: 100, column: 1, scope: !5632)
!5813 = !{i64 2147593802, i64 2147593845, i64 2147593885}
!5814 = !DILocation(line: 101, column: 1, scope: !5632)
!5815 = !{i64 2147594013, i64 2147594056, i64 2147594096}
!5816 = !DILocation(line: 102, column: 1, scope: !5632)
!5817 = !{i64 2147594212, i64 2147594255, i64 2147594295}
!5818 = !DILocation(line: 103, column: 1, scope: !5632)
!5819 = !{i64 2147594387, i64 2147594430, i64 2147594470}
!5820 = !DILocation(line: 104, column: 1, scope: !5632)
!5821 = !{i64 2147594571, i64 2147594614, i64 2147594654}
!5822 = !DILocation(line: 105, column: 1, scope: !5632)
!5823 = !{i64 2147594773, i64 2147594816, i64 2147594856}
!5824 = !DILocation(line: 106, column: 1, scope: !5632)
!5825 = !{i64 2147594972, i64 2147595015, i64 2147595055}
!5826 = !DILocation(line: 107, column: 1, scope: !5632)
!5827 = !{i64 2147595138, i64 2147595181, i64 2147595221}
!5828 = !DILocation(line: 108, column: 1, scope: !5632)
!5829 = !{i64 2147595322, i64 2147595365, i64 2147595405}
!5830 = !DILocation(line: 109, column: 1, scope: !5632)
!5831 = !{i64 2147595512, i64 2147595555, i64 2147595595}
!5832 = !DILocation(line: 110, column: 1, scope: !5632)
!5833 = !{i64 2147595696, i64 2147595739, i64 2147595779}
!5834 = !DILocation(line: 111, column: 1, scope: !5632)
!5835 = !{i64 2147595910, i64 2147595953, i64 2147595993}
!5836 = !DILocation(line: 112, column: 1, scope: !5632)
!5837 = !{i64 2147596121, i64 2147596164, i64 2147596204}
!5838 = !DILocation(line: 113, column: 1, scope: !5632)
!5839 = !{i64 2147596344, i64 2147596387, i64 2147596427}
!5840 = !DILocation(line: 114, column: 1, scope: !5632)
!5841 = !{i64 2147596528, i64 2147596571, i64 2147596611}
!5842 = !DILocation(line: 115, column: 1, scope: !5632)
!5843 = !{i64 2147596742, i64 2147596785, i64 2147596825}
!5844 = !DILocation(line: 116, column: 1, scope: !5632)
!5845 = !{i64 2147596908, i64 2147596951, i64 2147596991}
!5846 = !DILocation(line: 117, column: 1, scope: !5632)
!5847 = !{i64 2147597089, i64 2147597132, i64 2147597172}
!5848 = !DILocation(line: 118, column: 1, scope: !5632)
!5849 = !{i64 2147597282, i64 2147597325, i64 2147597365}
!5850 = !DILocation(line: 119, column: 1, scope: !5632)
!5851 = !{i64 2147597508, i64 2147597551, i64 2147597591}
!5852 = !DILocation(line: 120, column: 1, scope: !5632)
!5853 = !{i64 2147597722, i64 2147597765, i64 2147597805}
!5854 = !DILocation(line: 121, column: 1, scope: !5632)
!5855 = !{i64 2147597948, i64 2147597991, i64 2147598031}
!5856 = !DILocation(line: 122, column: 1, scope: !5632)
!5857 = !{i64 2147598165, i64 2147598208, i64 2147598248}
!5858 = !DILocation(line: 123, column: 1, scope: !5632)
!5859 = !{i64 2147598442, i64 2147598485, i64 2147598525}
!5860 = !DILocation(line: 124, column: 1, scope: !5632)
!5861 = !{i64 2147598668, i64 2147598711, i64 2147598751}
!5862 = !DILocation(line: 125, column: 1, scope: !5632)
!5863 = !{i64 2147598876, i64 2147598919, i64 2147598959}
!5864 = !DILocation(line: 126, column: 1, scope: !5632)
!5865 = !{i64 2147599072, i64 2147599115, i64 2147599155}
!5866 = !DILocation(line: 127, column: 1, scope: !5632)
!5867 = !{i64 2147599337, i64 2147599380, i64 2147599420}
!5868 = !DILocation(line: 128, column: 1, scope: !5632)
!5869 = !{i64 2147599551, i64 2147599594, i64 2147599634}
!5870 = !DILocation(line: 129, column: 1, scope: !5632)
!5871 = !{i64 2147599726, i64 2147599769, i64 2147599809}
!5872 = !DILocation(line: 130, column: 1, scope: !5632)
!5873 = !{i64 2147599980, i64 2147600023, i64 2147600063}
!5874 = !DILocation(line: 131, column: 1, scope: !5632)
!5875 = !{i64 2147604240, i64 2147604283, i64 2147604323}
!5876 = !DILocation(line: 132, column: 1, scope: !5632)
!5877 = !{i64 2147604482, i64 2147604525, i64 2147604565}
!5878 = !DILocation(line: 133, column: 1, scope: !5632)
!5879 = !{i64 2147604645, i64 2147604688, i64 2147604728}
!5880 = !DILocation(line: 134, column: 1, scope: !5632)
!5881 = !{i64 2147604832, i64 2147604875, i64 2147604915}
!5882 = !DILocation(line: 135, column: 1, scope: !5632)
!5883 = !{i64 2147605025, i64 2147605068, i64 2147605108}
!5884 = !DILocation(line: 136, column: 1, scope: !5632)
!5885 = !{i64 2147605208, i64 2147605251, i64 2147605291}
!5886 = !DILocation(line: 137, column: 1, scope: !5632)
!5887 = !{i64 2147605422, i64 2147605465, i64 2147605505}
!5888 = !DILocation(line: 138, column: 1, scope: !5632)
!5889 = !{i64 2147605633, i64 2147605676, i64 2147605716}
!5890 = !DILocation(line: 139, column: 1, scope: !5632)
!5891 = !{i64 2147605853, i64 2147605896, i64 2147605936}
!5892 = !DILocation(line: 140, column: 1, scope: !5632)
!5893 = !{i64 2147606060, i64 2147606103, i64 2147606143}
!5894 = !DILocation(line: 141, column: 1, scope: !5632)
!5895 = !{i64 2147606333, i64 2147606376, i64 2147606416}
!5896 = !DILocation(line: 142, column: 1, scope: !5632)
!5897 = !{i64 2147606581, i64 2147606624, i64 2147606664}
!5898 = !DILocation(line: 143, column: 1, scope: !5632)
!5899 = !{i64 2147606780, i64 2147606823, i64 2147606863}
!5900 = !DILocation(line: 144, column: 1, scope: !5632)
!5901 = !{i64 2147607015, i64 2147607058, i64 2147607098}
!5902 = !DILocation(line: 145, column: 1, scope: !5632)
!5903 = !{i64 2147607265, i64 2147607308, i64 2147607348}
!5904 = !DILocation(line: 146, column: 1, scope: !5632)
!5905 = !{i64 2147607467, i64 2147607510, i64 2147607550}
!5906 = !DILocation(line: 147, column: 1, scope: !5632)
!5907 = !{i64 2147607690, i64 2147607733, i64 2147607773}
!5908 = !DILocation(line: 148, column: 1, scope: !5632)
!5909 = !{i64 2147607904, i64 2147607947, i64 2147607987}
!5910 = !DILocation(line: 149, column: 1, scope: !5632)
!5911 = !{i64 2147608148, i64 2147608191, i64 2147608231}
!5912 = !DILocation(line: 150, column: 1, scope: !5632)
!5913 = !{i64 2147608377, i64 2147608420, i64 2147608460}
!5914 = !DILocation(line: 151, column: 1, scope: !5632)
!5915 = !{i64 2147608606, i64 2147608649, i64 2147608689}
!5916 = !DILocation(line: 152, column: 1, scope: !5632)
!5917 = !{i64 2147608814, i64 2147608857, i64 2147608897}
!5918 = !DILocation(line: 153, column: 1, scope: !5632)
!5919 = !{i64 2147609052, i64 2147609095, i64 2147609135}
!5920 = !DILocation(line: 154, column: 1, scope: !5632)
!5921 = !{i64 2147609278, i64 2147609321, i64 2147609361}
!5922 = !DILocation(line: 155, column: 1, scope: !5632)
!5923 = !{i64 2147609537, i64 2147609580, i64 2147609620}
!5924 = !DILocation(line: 156, column: 1, scope: !5632)
!5925 = !{i64 2147609757, i64 2147609800, i64 2147609840}
!5926 = !DILocation(line: 157, column: 1, scope: !5632)
!5927 = !{i64 2147609989, i64 2147610032, i64 2147610072}
!5928 = !DILocation(line: 158, column: 1, scope: !5632)
!5929 = !{i64 2147610230, i64 2147610273, i64 2147610313}
!5930 = !DILocation(line: 159, column: 1, scope: !5632)
!5931 = !{i64 2147610471, i64 2147610514, i64 2147610554}
!5932 = !DILocation(line: 160, column: 1, scope: !5632)
!5933 = !{i64 2147610694, i64 2147610737, i64 2147610777}
!5934 = !DILocation(line: 161, column: 1, scope: !5632)
!5935 = !{i64 2147610911, i64 2147610954, i64 2147610994}
!5936 = !DILocation(line: 162, column: 1, scope: !5632)
!5937 = !{i64 2147611152, i64 2147611195, i64 2147611235}
!5938 = !DILocation(line: 163, column: 1, scope: !5632)
!5939 = !{i64 2147611339, i64 2147611382, i64 2147611422}
!5940 = !DILocation(line: 164, column: 1, scope: !5632)
!5941 = !{i64 2147611526, i64 2147611569, i64 2147611609}
!5942 = !DILocation(line: 165, column: 1, scope: !5632)
!5943 = !{i64 2147611689, i64 2147611732, i64 2147611772}
!5944 = !DILocation(line: 166, column: 1, scope: !5632)
!5945 = !{i64 2147611948, i64 2147611991, i64 2147612031}
!5946 = !DILocation(line: 167, column: 1, scope: !5632)
!5947 = !{i64 2147612171, i64 2147612214, i64 2147612254}
!5948 = !DILocation(line: 168, column: 1, scope: !5632)
!5949 = !{i64 2147612400, i64 2147612443, i64 2147612483}
!5950 = !DILocation(line: 169, column: 1, scope: !5632)
!5951 = !{i64 2147612596, i64 2147612639, i64 2147612679}
!5952 = !DILocation(line: 170, column: 1, scope: !5632)
!5953 = !{i64 2147616869, i64 2147616912, i64 2147616952}
!5954 = !DILocation(line: 171, column: 1, scope: !5632)
!5955 = !{i64 2147617090, i64 2147617133, i64 2147617173}
!5956 = !DILocation(line: 172, column: 1, scope: !5632)
!5957 = !{i64 2147617304, i64 2147617347, i64 2147617387}
!5958 = !DILocation(line: 173, column: 1, scope: !5632)
!5959 = !{i64 2147617494, i64 2147617537, i64 2147617577}
!5960 = !DILocation(line: 174, column: 1, scope: !5632)
!5961 = !{i64 2147617693, i64 2147617736, i64 2147617776}
!5962 = !DILocation(line: 175, column: 1, scope: !5632)
!5963 = !{i64 2147617898, i64 2147617941, i64 2147617981}
!5964 = !DILocation(line: 176, column: 1, scope: !5632)
!5965 = !{i64 2147618118, i64 2147618161, i64 2147618201}
!5966 = !DILocation(line: 177, column: 1, scope: !5632)
!5967 = !{i64 2147618319, i64 2147618362, i64 2147618402}
!5968 = !DILocation(line: 178, column: 1, scope: !5632)
!5969 = !{i64 2147618518, i64 2147618561, i64 2147618601}
!5970 = !DILocation(line: 179, column: 1, scope: !5632)
!5971 = !{i64 2147618723, i64 2147618766, i64 2147618806}
!5972 = !DILocation(line: 180, column: 1, scope: !5632)
!5973 = !{i64 2147618892, i64 2147618935, i64 2147618975}
!5974 = !DILocation(line: 181, column: 1, scope: !5632)
!5975 = !{i64 2147619076, i64 2147619119, i64 2147619159}
!5976 = !DILocation(line: 182, column: 1, scope: !5632)
!5977 = !{i64 2147619260, i64 2147619303, i64 2147619343}
!5978 = !DILocation(line: 183, column: 1, scope: !5632)
!5979 = !{i64 2147619447, i64 2147619490, i64 2147619530}
!5980 = !DILocation(line: 184, column: 1, scope: !5632)
!5981 = !{i64 2147619631, i64 2147619674, i64 2147619714}
!5982 = !DILocation(line: 185, column: 1, scope: !5632)
!5983 = !{i64 2147619869, i64 2147619912, i64 2147619952}
!5984 = !DILocation(line: 186, column: 1, scope: !5632)
!5985 = !{i64 2147620099, i64 2147620142, i64 2147620182}
!5986 = !DILocation(line: 187, column: 1, scope: !5632)
!5987 = !{i64 2147620328, i64 2147620371, i64 2147620411}
!5988 = !DILocation(line: 188, column: 1, scope: !5632)
!5989 = !{i64 2147620515, i64 2147620558, i64 2147620598}
!5990 = !DILocation(line: 189, column: 1, scope: !5632)
!5991 = !{i64 2147620711, i64 2147620754, i64 2147620794}
!5992 = !DILocation(line: 190, column: 1, scope: !5632)
!5993 = !{i64 2147620919, i64 2147620962, i64 2147621002}
!5994 = !DILocation(line: 191, column: 1, scope: !5632)
!5995 = !{i64 2147621131, i64 2147621174, i64 2147621214}
!5996 = !DILocation(line: 192, column: 1, scope: !5632)
!5997 = !{i64 2147621330, i64 2147621373, i64 2147621413}
!5998 = !DILocation(line: 193, column: 1, scope: !5632)
!5999 = !{i64 2147621568, i64 2147621611, i64 2147621651}
!6000 = !DILocation(line: 194, column: 1, scope: !5632)
!6001 = !{i64 2147621764, i64 2147621807, i64 2147621847}
!6002 = !DILocation(line: 195, column: 1, scope: !5632)
!6003 = !{i64 2147621966, i64 2147622009, i64 2147622049}
!6004 = !DILocation(line: 196, column: 1, scope: !5632)
!6005 = !{i64 2147622159, i64 2147622202, i64 2147622242}
!6006 = !DILocation(line: 197, column: 1, scope: !5632)
!6007 = !{i64 2147622393, i64 2147622436, i64 2147622476}
!6008 = !DILocation(line: 198, column: 1, scope: !5632)
!6009 = !{i64 2147622556, i64 2147622599, i64 2147622639}
!6010 = !DILocation(line: 199, column: 1, scope: !5632)
!6011 = !{i64 2147622795, i64 2147622838, i64 2147622878}
!6012 = !DILocation(line: 200, column: 1, scope: !5632)
!6013 = !{i64 2147623034, i64 2147623077, i64 2147623117}
!6014 = !DILocation(line: 201, column: 1, scope: !5632)
!6015 = !{i64 2147623270, i64 2147623313, i64 2147623353}
!6016 = !DILocation(line: 202, column: 1, scope: !5632)
!6017 = !{i64 2147623500, i64 2147623543, i64 2147623583}
!6018 = !DILocation(line: 203, column: 1, scope: !5632)
!6019 = !{i64 2147623687, i64 2147623730, i64 2147623770}
!6020 = !DILocation(line: 204, column: 1, scope: !5632)
!6021 = !{i64 2147623886, i64 2147623929, i64 2147623969}
!6022 = !DILocation(line: 205, column: 1, scope: !5632)
!6023 = !{i64 2147624157, i64 2147624200, i64 2147624240}
!6024 = !DILocation(line: 206, column: 1, scope: !5632)
!6025 = !{i64 2147624332, i64 2147624375, i64 2147624415}
!6026 = !DILocation(line: 207, column: 1, scope: !5632)
!6027 = !{i64 2147624566, i64 2147624609, i64 2147624649}
!6028 = !DILocation(line: 208, column: 1, scope: !5632)
!6029 = !{i64 2147624774, i64 2147624817, i64 2147624857}
!6030 = !DILocation(line: 209, column: 1, scope: !5632)
!6031 = !{i64 2147624992, i64 2147625035, i64 2147625075}
!6032 = !DILocation(line: 210, column: 1, scope: !5632)
!6033 = !{i64 2147625182, i64 2147625225, i64 2147625265}
!6034 = !DILocation(line: 211, column: 1, scope: !5632)
!6035 = !{i64 2147625378, i64 2147625421, i64 2147625461}
!6036 = !DILocation(line: 212, column: 1, scope: !5632)
!6037 = !{i64 2147625584, i64 2147625627, i64 2147625667}
!6038 = !DILocation(line: 213, column: 1, scope: !5632)
!6039 = !{i64 2147625789, i64 2147625832, i64 2147625872}
!6040 = !DILocation(line: 214, column: 1, scope: !5632)
!6041 = !{i64 2147630064, i64 2147630107, i64 2147630147}
!6042 = !DILocation(line: 215, column: 1, scope: !5632)
!6043 = !{i64 2147630290, i64 2147630333, i64 2147630373}
!6044 = !DILocation(line: 216, column: 1, scope: !5632)
!6045 = !{i64 2147630522, i64 2147630565, i64 2147630605}
!6046 = !DILocation(line: 217, column: 1, scope: !5632)
!6047 = !{i64 2147630706, i64 2147630749, i64 2147630789}
!6048 = !DILocation(line: 218, column: 1, scope: !5632)
!6049 = !{i64 2147630915, i64 2147630958, i64 2147630998}
!6050 = !DILocation(line: 219, column: 1, scope: !5632)
!6051 = !{i64 2147631099, i64 2147631142, i64 2147631182}
!6052 = !DILocation(line: 220, column: 1, scope: !5632)
!6053 = !{i64 2147631325, i64 2147631368, i64 2147631408}
!6054 = !DILocation(line: 221, column: 1, scope: !5632)
!6055 = !{i64 2147631551, i64 2147631594, i64 2147631634}
!6056 = !DILocation(line: 222, column: 1, scope: !5632)
!6057 = !{i64 2147631777, i64 2147631820, i64 2147631860}
!6058 = !DILocation(line: 223, column: 1, scope: !5632)
!6059 = !{i64 2147632003, i64 2147632046, i64 2147632086}
!6060 = !DILocation(line: 224, column: 1, scope: !5632)
!6061 = !{i64 2147632229, i64 2147632272, i64 2147632312}
!6062 = !DILocation(line: 225, column: 1, scope: !5632)
!6063 = !{i64 2147632461, i64 2147632504, i64 2147632544}
!6064 = !DILocation(line: 226, column: 1, scope: !5632)
!6065 = !{i64 2147632699, i64 2147632742, i64 2147632782}
!6066 = !DILocation(line: 227, column: 1, scope: !5632)
!6067 = !{i64 2147632919, i64 2147632962, i64 2147633002}
!6068 = !DILocation(line: 228, column: 1, scope: !5632)
!6069 = !{i64 2147633163, i64 2147633206, i64 2147633246}
!6070 = !DILocation(line: 229, column: 1, scope: !5632)
!6071 = !{i64 2147633404, i64 2147633447, i64 2147633487}
!6072 = !DILocation(line: 230, column: 1, scope: !5632)
!6073 = !{i64 2147633639, i64 2147633682, i64 2147633722}
!6074 = !DILocation(line: 231, column: 1, scope: !5632)
!6075 = !{i64 2147633871, i64 2147633914, i64 2147633954}
!6076 = !DILocation(line: 232, column: 1, scope: !5632)
!6077 = !{i64 2147634073, i64 2147634116, i64 2147634156}
!6078 = !DILocation(line: 233, column: 1, scope: !5632)
!6079 = !{i64 2147634323, i64 2147634366, i64 2147634406}
!6080 = !DILocation(line: 234, column: 1, scope: !5632)
!6081 = !{i64 2147634561, i64 2147634604, i64 2147634644}
!6082 = !DILocation(line: 235, column: 1, scope: !5632)
!6083 = !{i64 2147634745, i64 2147634788, i64 2147634828}
!6084 = !DILocation(line: 236, column: 1, scope: !5632)
!6085 = !{i64 2147634969, i64 2147635012, i64 2147635052}
!6086 = !DILocation(line: 237, column: 1, scope: !5632)
!6087 = !{i64 2147635207, i64 2147635250, i64 2147635290}
!6088 = !DILocation(line: 238, column: 1, scope: !5632)
!6089 = !{i64 2147635445, i64 2147635488, i64 2147635528}
!6090 = !DILocation(line: 239, column: 1, scope: !5632)
!6091 = !{i64 2147635638, i64 2147635681, i64 2147635721}
!6092 = !DILocation(line: 240, column: 1, scope: !5632)
!6093 = !{i64 2147635891, i64 2147635934, i64 2147635974}
!6094 = !DILocation(line: 241, column: 1, scope: !5632)
!6095 = !{i64 2147636105, i64 2147636148, i64 2147636188}
!6096 = !DILocation(line: 242, column: 1, scope: !5632)
!6097 = !{i64 2147636313, i64 2147636356, i64 2147636396}
!6098 = !DILocation(line: 243, column: 1, scope: !5632)
!6099 = !{i64 2147636503, i64 2147636546, i64 2147636586}
!6100 = !DILocation(line: 244, column: 1, scope: !5632)
!6101 = !{i64 2147636717, i64 2147636760, i64 2147636800}
!6102 = !DILocation(line: 245, column: 1, scope: !5632)
!6103 = !{i64 2147636979, i64 2147637022, i64 2147637062}
!6104 = !DILocation(line: 246, column: 1, scope: !5632)
!6105 = !{i64 2147637190, i64 2147637233, i64 2147637273}
!6106 = !DILocation(line: 247, column: 1, scope: !5632)
!6107 = !{i64 2147637436, i64 2147637479, i64 2147637519}
!6108 = !DILocation(line: 248, column: 1, scope: !5632)
!6109 = !{i64 2147637647, i64 2147637690, i64 2147637730}
!6110 = !DILocation(line: 249, column: 1, scope: !5632)
!6111 = !{i64 2147637876, i64 2147637919, i64 2147637959}
!6112 = !DILocation(line: 250, column: 1, scope: !5632)
!6113 = !{i64 2147638141, i64 2147638184, i64 2147638224}
!6114 = !DILocation(line: 251, column: 1, scope: !5632)
!6115 = !{i64 2147638346, i64 2147638389, i64 2147638429}
!6116 = !DILocation(line: 252, column: 1, scope: !5632)
!6117 = !{i64 2147642603, i64 2147642646, i64 2147642686}
!6118 = !DILocation(line: 253, column: 1, scope: !5632)
!6119 = !{i64 2147642826, i64 2147642869, i64 2147642909}
!6120 = !DILocation(line: 254, column: 1, scope: !5632)
!6121 = !{i64 2147642989, i64 2147643032, i64 2147643072}
!6122 = !DILocation(line: 255, column: 1, scope: !5632)
!6123 = !{i64 2147643194, i64 2147643237, i64 2147643277}
!6124 = !DILocation(line: 256, column: 1, scope: !5632)
!6125 = !{i64 2147643414, i64 2147643457, i64 2147643497}
!6126 = !DILocation(line: 257, column: 1, scope: !5632)
!6127 = !{i64 2147643628, i64 2147643671, i64 2147643711}
!6128 = !DILocation(line: 258, column: 1, scope: !5632)
!6129 = !{i64 2147643842, i64 2147643885, i64 2147643925}
!6130 = !DILocation(line: 259, column: 1, scope: !5632)
!6131 = !{i64 2147644053, i64 2147644096, i64 2147644136}
!6132 = !DILocation(line: 260, column: 1, scope: !5632)
!6133 = !{i64 2147644246, i64 2147644289, i64 2147644329}
!6134 = !DILocation(line: 261, column: 1, scope: !5632)
!6135 = !{i64 2147644445, i64 2147644488, i64 2147644528}
!6136 = !DILocation(line: 262, column: 1, scope: !5632)
!6137 = !{i64 2147644626, i64 2147644669, i64 2147644709}
!6138 = !DILocation(line: 263, column: 1, scope: !5632)
!6139 = !{i64 2147644807, i64 2147644850, i64 2147644890}
!6140 = !DILocation(line: 264, column: 1, scope: !5632)
!6141 = !{i64 2147644985, i64 2147645028, i64 2147645068}
!6142 = !DILocation(line: 265, column: 1, scope: !5632)
!6143 = !{i64 2147645196, i64 2147645239, i64 2147645279}
!6144 = !DILocation(line: 266, column: 1, scope: !5632)
!6145 = !{i64 2147645368, i64 2147645411, i64 2147645451}
!6146 = !DILocation(line: 267, column: 1, scope: !5632)
!6147 = !{i64 2147645561, i64 2147645604, i64 2147645644}
!6148 = !DILocation(line: 268, column: 1, scope: !5632)
!6149 = !{i64 2147645757, i64 2147645800, i64 2147645840}
!6150 = !DILocation(line: 269, column: 1, scope: !5632)
!6151 = !{i64 2147645984, i64 2147646027, i64 2147646067}
!6152 = !DILocation(line: 270, column: 1, scope: !5632)
!6153 = !{i64 2147646201, i64 2147646244, i64 2147646284}
!6154 = !DILocation(line: 271, column: 1, scope: !5632)
!6155 = !{i64 2147646493, i64 2147646536, i64 2147646576}
!6156 = !DILocation(line: 272, column: 1, scope: !5632)
!6157 = !{i64 2147646725, i64 2147646768, i64 2147646808}
!6158 = !DILocation(line: 273, column: 1, scope: !5632)
!6159 = !{i64 2147646942, i64 2147646985, i64 2147647025}
!6160 = !DILocation(line: 274, column: 1, scope: !5632)
!6161 = !{i64 2147647149, i64 2147647192, i64 2147647232}
!6162 = !DILocation(line: 275, column: 1, scope: !5632)
!6163 = !{i64 2147647350, i64 2147647393, i64 2147647433}
!6164 = !DILocation(line: 276, column: 1, scope: !5632)
!6165 = !{i64 2147647582, i64 2147647625, i64 2147647665}
!6166 = !DILocation(line: 277, column: 1, scope: !5632)
!6167 = !{i64 2147647790, i64 2147647833, i64 2147647873}
!6168 = !DILocation(line: 278, column: 1, scope: !5632)
!6169 = !{i64 2147647980, i64 2147648023, i64 2147648063}
!6170 = !DILocation(line: 279, column: 1, scope: !5632)
!6171 = !{i64 2147648206, i64 2147648249, i64 2147648289}
!6172 = !DILocation(line: 280, column: 1, scope: !5632)
!6173 = !{i64 2147648395, i64 2147648438, i64 2147648478}
!6174 = !DILocation(line: 281, column: 1, scope: !5632)
!6175 = !{i64 2147648666, i64 2147648709, i64 2147648749}
!6176 = !DILocation(line: 282, column: 1, scope: !5632)
!6177 = !{i64 2147648886, i64 2147648929, i64 2147648969}
!6178 = !DILocation(line: 283, column: 1, scope: !5632)
!6179 = !{i64 2147649139, i64 2147649182, i64 2147649222}
!6180 = !DILocation(line: 284, column: 1, scope: !5632)
!6181 = !{i64 2147649347, i64 2147649390, i64 2147649430}
!6182 = !DILocation(line: 285, column: 1, scope: !5632)
!6183 = !{i64 2147649579, i64 2147649622, i64 2147649662}
!6184 = !DILocation(line: 286, column: 1, scope: !5632)
!6185 = !{i64 2147649790, i64 2147649833, i64 2147649873}
!6186 = !DILocation(line: 287, column: 1, scope: !5632)
!6187 = !{i64 2147649980, i64 2147650023, i64 2147650063}
!6188 = !DILocation(line: 288, column: 1, scope: !5632)
!6189 = !{i64 2147650194, i64 2147650237, i64 2147650277}
!6190 = !DILocation(line: 289, column: 1, scope: !5632)
!6191 = !{i64 2147650393, i64 2147650436, i64 2147650476}
!6192 = !DILocation(line: 290, column: 1, scope: !5632)
!6193 = !{i64 2147650580, i64 2147650623, i64 2147650663}
!6194 = !DILocation(line: 291, column: 1, scope: !5632)
!6195 = !{i64 2147650788, i64 2147650831, i64 2147650871}
!6196 = !DILocation(line: 292, column: 1, scope: !5632)
!6197 = !{i64 2147651017, i64 2147651060, i64 2147651100}
!6198 = !DILocation(line: 293, column: 1, scope: !5632)
!6199 = !{i64 2147651219, i64 2147651262, i64 2147651302}
!6200 = !DILocation(line: 294, column: 1, scope: !5632)
!6201 = !{i64 2147651418, i64 2147651461, i64 2147651501}
!6202 = !DILocation(line: 295, column: 1, scope: !5632)
!6203 = !{i64 2147655696, i64 2147655739, i64 2147655779}
!6204 = !DILocation(line: 297, column: 1, scope: !5632)
!6205 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !304, file: !304, line: 30, type: !311, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !287, retainedNodes: !6206)
!6206 = !{!6207, !6208}
!6207 = !DILocalVariable(name: "arg", arg: 1, scope: !6205, file: !304, line: 30, type: !313)
!6208 = !DILocalVariable(name: "key", scope: !6205, file: !304, line: 32, type: !40)
!6209 = !DILocation(line: 0, scope: !6205)
!6210 = !DILocation(line: 37, column: 2, scope: !6205)
!6211 = !DILocation(line: 38, column: 2, scope: !6205)
!6212 = !DILocation(line: 55, column: 2, scope: !6213, inlinedAt: !6220)
!6213 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !287, retainedNodes: !6217)
!6214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!41}
!6217 = !{!6218, !6219}
!6218 = !DILocalVariable(name: "key", scope: !6213, file: !6214, line: 44, type: !41)
!6219 = !DILocalVariable(name: "tmp", scope: !6213, file: !6214, line: 53, type: !41)
!6220 = distinct !DILocation(line: 40, column: 8, scope: !6205)
!6221 = !{i64 2184733}
!6222 = !DILocation(line: 0, scope: !6213, inlinedAt: !6220)
!6223 = !DILocalVariable(name: "key", arg: 1, scope: !6224, file: !6214, line: 84, type: !41)
!6224 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !287, retainedNodes: !6227)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !41}
!6227 = !{!6223}
!6228 = !DILocation(line: 0, scope: !6224, inlinedAt: !6229)
!6229 = distinct !DILocation(line: 47, column: 2, scope: !6205)
!6230 = !DILocation(line: 95, column: 2, scope: !6224, inlinedAt: !6229)
!6231 = !{i64 2185550}
!6232 = !DILocation(line: 51, column: 18, scope: !6205)
!6233 = !DILocation(line: 53, column: 2, scope: !6205)
!6234 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6235, file: !6235, line: 1609, type: !3440, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !287, retainedNodes: !2223)
!6235 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6236 = !DILocation(line: 1611, column: 3, scope: !6234)
!6237 = !DILocation(line: 1612, column: 1, scope: !6234)
!6238 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6235, file: !6235, line: 1629, type: !3440, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !287, retainedNodes: !2223)
!6239 = !DILocation(line: 1631, column: 3, scope: !6238)
!6240 = !DILocation(line: 1632, column: 1, scope: !6238)
!6241 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !343, file: !343, line: 26, type: !349, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !340, retainedNodes: !6242)
!6242 = !{!6243}
!6243 = !DILocalVariable(name: "dev", arg: 1, scope: !6241, file: !343, line: 26, type: !351)
!6244 = !DILocation(line: 0, scope: !6241)
!6245 = !DILocation(line: 68, column: 2, scope: !6241)
!6246 = distinct !DISubprogram(name: "z_cpp_init_static", scope: !6247, file: !6247, line: 14, type: !3440, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !2223)
!6247 = !DIFile(filename: "zephyr/subsys/cpp/cpp_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6248 = !DILocation(line: 16, column: 2, scope: !6246)
!6249 = !DILocation(line: 17, column: 2, scope: !6246)
!6250 = !DILocation(line: 18, column: 1, scope: !6246)
!6251 = distinct !DISubprogram(name: "__do_init_array_aux", scope: !6252, file: !6252, line: 20, type: !3440, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2903, retainedNodes: !6253)
!6252 = !DIFile(filename: "zephyr/subsys/cpp/cpp_init_array.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6253 = !{!6254}
!6254 = !DILocalVariable(name: "func", scope: !6255, file: !6252, line: 22, type: !6256)
!6255 = distinct !DILexicalBlock(scope: !6251, file: !6252, line: 22, column: 2)
!6256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6257, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_typedef, name: "func_ptr", file: !6252, line: 12, baseType: !6258)
!6258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 32)
!6259 = !DILocation(line: 0, scope: !6255)
!6260 = !DILocation(line: 22, column: 2, scope: !6255)
!6261 = !DILocation(line: 27, column: 1, scope: !6251)
!6262 = !DILocation(line: 25, column: 4, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !6252, line: 24, column: 11)
!6264 = distinct !DILexicalBlock(scope: !6255, file: !6252, line: 22, column: 2)
!6265 = !DILocation(line: 25, column: 3, scope: !6263)
!6266 = !DILocation(line: 24, column: 7, scope: !6264)
!6267 = !DILocation(line: 23, column: 8, scope: !6264)
!6268 = distinct !{!6268, !6260, !6269}
!6269 = !DILocation(line: 26, column: 2, scope: !6255)
!6270 = distinct !DISubprogram(name: "__do_global_ctors_aux", scope: !6271, file: !6271, line: 34, type: !3440, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2905, retainedNodes: !6272)
!6271 = !DIFile(filename: "zephyr/subsys/cpp/cpp_ctors.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6272 = !{!6273}
!6273 = !DILocalVariable(name: "nCtors", scope: !6270, file: !6271, line: 36, type: !41)
!6274 = !DILocation(line: 38, column: 26, scope: !6270)
!6275 = !DILocation(line: 0, scope: !6270)
!6276 = !DILocation(line: 40, column: 16, scope: !6270)
!6277 = !DILocation(line: 40, column: 2, scope: !6270)
!6278 = !DILocation(line: 38, column: 11, scope: !6270)
!6279 = !DILocation(line: 41, column: 30, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6270, file: !6271, line: 40, column: 23)
!6281 = !DILocation(line: 41, column: 3, scope: !6280)
!6282 = distinct !{!6282, !6277, !6283}
!6283 = !DILocation(line: 42, column: 2, scope: !6270)
!6284 = !DILocation(line: 43, column: 1, scope: !6270)
!6285 = distinct !DISubprogram(name: "__cxa_atexit", scope: !372, file: !372, line: 29, type: !6286, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !369, retainedNodes: !6291)
!6286 = !DISubroutineType(types: !6287)
!6287 = !{!55, !6288, !39, !39}
!6288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 32)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{null, !39}
!6291 = !{!6292, !6293, !6294}
!6292 = !DILocalVariable(name: "destructor", arg: 1, scope: !6285, file: !372, line: 29, type: !6288)
!6293 = !DILocalVariable(name: "objptr", arg: 2, scope: !6285, file: !372, line: 29, type: !39)
!6294 = !DILocalVariable(name: "dso", arg: 3, scope: !6285, file: !372, line: 29, type: !39)
!6295 = !DILocation(line: 0, scope: !6285)
!6296 = !DILocation(line: 34, column: 2, scope: !6285)
!6297 = distinct !DISubprogram(name: "operator new", linkageName: "_Znwj", scope: !6298, file: !6298, line: 22, type: !6299, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !6300)
!6298 = !DIFile(filename: "zephyr/subsys/cpp/cpp_new.cpp", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6299 = !DISubroutineType(types: !3402)
!6300 = !{!6301}
!6301 = !DILocalVariable(name: "size", arg: 1, scope: !6297, file: !6298, line: 22, type: !193)
!6302 = !DILocation(line: 0, scope: !6297)
!6303 = !DILocation(line: 24, column: 9, scope: !6297)
!6304 = !DILocation(line: 24, column: 2, scope: !6297)
!6305 = distinct !DISubprogram(name: "operator new[]", linkageName: "_Znaj", scope: !6298, file: !6298, line: 27, type: !6299, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !6306)
!6306 = !{!6307}
!6307 = !DILocalVariable(name: "size", arg: 1, scope: !6305, file: !6298, line: 27, type: !193)
!6308 = !DILocation(line: 0, scope: !6305)
!6309 = !DILocation(line: 29, column: 9, scope: !6305)
!6310 = !DILocation(line: 29, column: 2, scope: !6305)
!6311 = distinct !DISubprogram(name: "operator new", linkageName: "_ZnwjRKSt9nothrow_t", scope: !6298, file: !6298, line: 32, type: !6312, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !6318)
!6312 = !DISubroutineType(types: !6313)
!6313 = !{!39, !193, !6314}
!6314 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !6315, size: 32)
!6315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6316)
!6316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nothrow_t", scope: !2912, file: !6317, line: 22, size: 8, flags: DIFlagFwdDecl, identifier: "_ZTSSt9nothrow_t")
!6317 = !DIFile(filename: "zephyr/subsys/cpp/include/new", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6318 = !{!6319, !6320}
!6319 = !DILocalVariable(name: "size", arg: 1, scope: !6311, file: !6298, line: 32, type: !193)
!6320 = !DILocalVariable(name: "tag", arg: 2, scope: !6311, file: !6298, line: 32, type: !6314)
!6321 = !DILocation(line: 0, scope: !6311)
!6322 = !DILocation(line: 34, column: 9, scope: !6311)
!6323 = !DILocation(line: 34, column: 2, scope: !6311)
!6324 = distinct !DISubprogram(name: "operator new[]", linkageName: "_ZnajRKSt9nothrow_t", scope: !6298, file: !6298, line: 37, type: !6312, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !6325)
!6325 = !{!6326, !6327}
!6326 = !DILocalVariable(name: "size", arg: 1, scope: !6324, file: !6298, line: 37, type: !193)
!6327 = !DILocalVariable(name: "tag", arg: 2, scope: !6324, file: !6298, line: 37, type: !6314)
!6328 = !DILocation(line: 0, scope: !6324)
!6329 = !DILocation(line: 39, column: 9, scope: !6324)
!6330 = !DILocation(line: 39, column: 2, scope: !6324)
!6331 = distinct !DISubprogram(name: "operator delete", linkageName: "_ZdlPv", scope: !6298, file: !6298, line: 66, type: !6289, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !6332)
!6332 = !{!6333}
!6333 = !DILocalVariable(name: "ptr", arg: 1, scope: !6331, file: !6298, line: 66, type: !39)
!6334 = !DILocation(line: 0, scope: !6331)
!6335 = !DILocation(line: 68, column: 2, scope: !6331)
!6336 = !DILocation(line: 69, column: 1, scope: !6331)
!6337 = distinct !DISubprogram(name: "operator delete[]", linkageName: "_ZdaPv", scope: !6298, file: !6298, line: 71, type: !6289, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !6338)
!6338 = !{!6339}
!6339 = !DILocalVariable(name: "ptr", arg: 1, scope: !6337, file: !6298, line: 71, type: !39)
!6340 = !DILocation(line: 0, scope: !6337)
!6341 = !DILocation(line: 73, column: 2, scope: !6337)
!6342 = !DILocation(line: 74, column: 1, scope: !6337)
!6343 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6344, file: !6344, line: 57, type: !6345, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6391)
!6344 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6345 = !DISubroutineType(types: !6346)
!6346 = !{null, !41, !6347}
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 32)
!6348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6349)
!6349 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3038, line: 141, baseType: !6350)
!6350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3038, line: 97, size: 256, elements: !6351)
!6351 = !{!6352}
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6350, file: !3038, line: 107, baseType: !6353, size: 256)
!6353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3038, line: 98, size: 256, elements: !6354)
!6354 = !{!6355, !6360, !6365, !6370, !6375, !6380, !6385, !6390}
!6355 = !DIDerivedType(tag: DW_TAG_member, scope: !6353, file: !3038, line: 99, baseType: !6356, size: 32)
!6356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6353, file: !3038, line: 99, size: 32, elements: !6357)
!6357 = !{!6358, !6359}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6356, file: !3038, line: 99, baseType: !40, size: 32)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6356, file: !3038, line: 99, baseType: !40, size: 32)
!6360 = !DIDerivedType(tag: DW_TAG_member, scope: !6353, file: !3038, line: 100, baseType: !6361, size: 32, offset: 32)
!6361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6353, file: !3038, line: 100, size: 32, elements: !6362)
!6362 = !{!6363, !6364}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6361, file: !3038, line: 100, baseType: !40, size: 32)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6361, file: !3038, line: 100, baseType: !40, size: 32)
!6365 = !DIDerivedType(tag: DW_TAG_member, scope: !6353, file: !3038, line: 101, baseType: !6366, size: 32, offset: 64)
!6366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6353, file: !3038, line: 101, size: 32, elements: !6367)
!6367 = !{!6368, !6369}
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6366, file: !3038, line: 101, baseType: !40, size: 32)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6366, file: !3038, line: 101, baseType: !40, size: 32)
!6370 = !DIDerivedType(tag: DW_TAG_member, scope: !6353, file: !3038, line: 102, baseType: !6371, size: 32, offset: 96)
!6371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6353, file: !3038, line: 102, size: 32, elements: !6372)
!6372 = !{!6373, !6374}
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6371, file: !3038, line: 102, baseType: !40, size: 32)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6371, file: !3038, line: 102, baseType: !40, size: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, scope: !6353, file: !3038, line: 103, baseType: !6376, size: 32, offset: 128)
!6376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6353, file: !3038, line: 103, size: 32, elements: !6377)
!6377 = !{!6378, !6379}
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6376, file: !3038, line: 103, baseType: !40, size: 32)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6376, file: !3038, line: 103, baseType: !40, size: 32)
!6380 = !DIDerivedType(tag: DW_TAG_member, scope: !6353, file: !3038, line: 104, baseType: !6381, size: 32, offset: 160)
!6381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6353, file: !3038, line: 104, size: 32, elements: !6382)
!6382 = !{!6383, !6384}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6381, file: !3038, line: 104, baseType: !40, size: 32)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6381, file: !3038, line: 104, baseType: !40, size: 32)
!6385 = !DIDerivedType(tag: DW_TAG_member, scope: !6353, file: !3038, line: 105, baseType: !6386, size: 32, offset: 192)
!6386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6353, file: !3038, line: 105, size: 32, elements: !6387)
!6387 = !{!6388, !6389}
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6386, file: !3038, line: 105, baseType: !40, size: 32)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6386, file: !3038, line: 105, baseType: !40, size: 32)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6353, file: !3038, line: 106, baseType: !40, size: 32, offset: 224)
!6391 = !{!6392, !6393}
!6392 = !DILocalVariable(name: "reason", arg: 1, scope: !6343, file: !6344, line: 57, type: !41)
!6393 = !DILocalVariable(name: "esf", arg: 2, scope: !6343, file: !6344, line: 57, type: !6347)
!6394 = !DILocation(line: 0, scope: !6343)
!6395 = !DILocation(line: 63, column: 2, scope: !6343)
!6396 = !DILocation(line: 64, column: 1, scope: !6343)
!6397 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6344, file: !6344, line: 82, type: !6398, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6413)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{null, !6347, !6400}
!6400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 32)
!6401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !174, line: 37, baseType: !6402)
!6402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !6403)
!6403 = !{!6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412}
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6402, file: !174, line: 26, baseType: !40, size: 32)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6402, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6402, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6402, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6402, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6402, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6402, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6402, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6402, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!6413 = !{!6414, !6415, !6416}
!6414 = !DILocalVariable(name: "esf", arg: 1, scope: !6397, file: !6344, line: 82, type: !6347)
!6415 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6397, file: !6344, line: 82, type: !6400)
!6416 = !DILocalVariable(name: "reason", scope: !6397, file: !6344, line: 88, type: !41)
!6417 = !DILocation(line: 0, scope: !6397)
!6418 = !DILocation(line: 88, column: 35, scope: !6397)
!6419 = !DILocation(line: 108, column: 2, scope: !6397)
!6420 = !DILocation(line: 131, column: 1, scope: !6397)
!6421 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6344, file: !6344, line: 133, type: !6289, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6422)
!6422 = !{!6423, !6424, !6425}
!6423 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6421, file: !6344, line: 133, type: !39)
!6424 = !DILocalVariable(name: "ssf_contents", scope: !6421, file: !6344, line: 135, type: !1025)
!6425 = !DILocalVariable(name: "oops_esf", scope: !6421, file: !6344, line: 136, type: !6349)
!6426 = !DILocation(line: 0, scope: !6421)
!6427 = !DILocation(line: 136, column: 2, scope: !6421)
!6428 = !DILocation(line: 136, column: 15, scope: !6421)
!6429 = !DILocation(line: 139, column: 22, scope: !6421)
!6430 = !DILocation(line: 139, column: 17, scope: !6421)
!6431 = !DILocation(line: 139, column: 20, scope: !6421)
!6432 = !DILocation(line: 141, column: 2, scope: !6421)
!6433 = !DILocation(line: 142, column: 2, scope: !6421)
!6434 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6435, file: !6435, line: 40, type: !6225, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6436)
!6435 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6436 = !{!6437}
!6437 = !DILocalVariable(name: "irq", arg: 1, scope: !6434, file: !6435, line: 40, type: !41)
!6438 = !DILocation(line: 0, scope: !6434)
!6439 = !DILocation(line: 42, column: 2, scope: !6434)
!6440 = !DILocation(line: 43, column: 1, scope: !6434)
!6441 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !519, file: !519, line: 1684, type: !6442, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{null, !923}
!6444 = !{!6445}
!6445 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6441, file: !519, line: 1684, type: !923)
!6446 = !DILocation(line: 0, scope: !6441)
!6447 = !DILocation(line: 1686, column: 23, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6441, file: !519, line: 1686, column: 7)
!6449 = !DILocation(line: 1686, column: 7, scope: !6441)
!6450 = !DILocation(line: 1688, column: 5, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6448, file: !519, line: 1687, column: 3)
!6452 = !{i64 2151254255}
!6453 = !DILocation(line: 1689, column: 81, scope: !6451)
!6454 = !DILocation(line: 1689, column: 60, scope: !6451)
!6455 = !DILocation(line: 1689, column: 34, scope: !6451)
!6456 = !DILocation(line: 1689, column: 5, scope: !6451)
!6457 = !DILocation(line: 1689, column: 43, scope: !6451)
!6458 = !DILocation(line: 1690, column: 5, scope: !6451)
!6459 = !{i64 2151254369}
!6460 = !DILocation(line: 1691, column: 3, scope: !6451)
!6461 = !DILocation(line: 1692, column: 1, scope: !6441)
!6462 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6435, file: !6435, line: 45, type: !6225, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6463)
!6463 = !{!6464}
!6464 = !DILocalVariable(name: "irq", arg: 1, scope: !6462, file: !6435, line: 45, type: !41)
!6465 = !DILocation(line: 0, scope: !6462)
!6466 = !DILocation(line: 47, column: 2, scope: !6462)
!6467 = !DILocation(line: 48, column: 1, scope: !6462)
!6468 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !519, file: !519, line: 1722, type: !6442, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6469)
!6469 = !{!6470}
!6470 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6468, file: !519, line: 1722, type: !923)
!6471 = !DILocation(line: 0, scope: !6468)
!6472 = !DILocation(line: 1724, column: 23, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6468, file: !519, line: 1724, column: 7)
!6474 = !DILocation(line: 1724, column: 7, scope: !6468)
!6475 = !DILocation(line: 1726, column: 81, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6473, file: !519, line: 1725, column: 3)
!6477 = !DILocation(line: 1726, column: 60, scope: !6476)
!6478 = !DILocation(line: 1726, column: 34, scope: !6476)
!6479 = !DILocation(line: 1726, column: 5, scope: !6476)
!6480 = !DILocation(line: 1726, column: 43, scope: !6476)
!6481 = !DILocation(line: 271, column: 3, scope: !6482, inlinedAt: !6484)
!6482 = distinct !DISubprogram(name: "__DSB", scope: !6483, file: !6483, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !2223)
!6483 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6484 = distinct !DILocation(line: 1727, column: 5, scope: !6476)
!6485 = !{i64 3708638}
!6486 = !DILocation(line: 260, column: 3, scope: !6487, inlinedAt: !6488)
!6487 = distinct !DISubprogram(name: "__ISB", scope: !6483, file: !6483, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !2223)
!6488 = distinct !DILocation(line: 1728, column: 5, scope: !6476)
!6489 = !{i64 3708355}
!6490 = !DILocation(line: 1729, column: 3, scope: !6476)
!6491 = !DILocation(line: 1730, column: 1, scope: !6468)
!6492 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6435, file: !6435, line: 50, type: !6493, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6495)
!6493 = !DISubroutineType(types: !6494)
!6494 = !{!55, !41}
!6495 = !{!6496}
!6496 = !DILocalVariable(name: "irq", arg: 1, scope: !6492, file: !6435, line: 50, type: !41)
!6497 = !DILocation(line: 0, scope: !6492)
!6498 = !DILocation(line: 52, column: 20, scope: !6492)
!6499 = !DILocation(line: 52, column: 9, scope: !6492)
!6500 = !DILocation(line: 52, column: 41, scope: !6492)
!6501 = !DILocation(line: 52, column: 39, scope: !6492)
!6502 = !DILocation(line: 52, column: 2, scope: !6492)
!6503 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6435, file: !6435, line: 64, type: !6504, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6506)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{null, !41, !41, !40}
!6506 = !{!6507, !6508, !6509}
!6507 = !DILocalVariable(name: "irq", arg: 1, scope: !6503, file: !6435, line: 64, type: !41)
!6508 = !DILocalVariable(name: "prio", arg: 2, scope: !6503, file: !6435, line: 64, type: !41)
!6509 = !DILocalVariable(name: "flags", arg: 3, scope: !6503, file: !6435, line: 64, type: !40)
!6510 = !DILocation(line: 0, scope: !6503)
!6511 = !DILocation(line: 83, column: 8, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !6435, line: 82, column: 9)
!6513 = distinct !DILexicalBlock(scope: !6503, file: !6435, line: 76, column: 6)
!6514 = !DILocation(line: 95, column: 2, scope: !6503)
!6515 = !DILocation(line: 96, column: 1, scope: !6503)
!6516 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !519, file: !519, line: 1814, type: !6517, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6519)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{null, !923, !40}
!6519 = !{!6520, !6521}
!6520 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6516, file: !519, line: 1814, type: !923)
!6521 = !DILocalVariable(name: "priority", arg: 2, scope: !6516, file: !519, line: 1814, type: !40)
!6522 = !DILocation(line: 0, scope: !6516)
!6523 = !DILocation(line: 0, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6516, file: !519, line: 1816, column: 7)
!6525 = !DILocation(line: 1816, column: 7, scope: !6516)
!6526 = !DILocation(line: 1824, column: 1, scope: !6516)
!6527 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6435, file: !6435, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !6528)
!6528 = !{!6529}
!6529 = !DILocalVariable(name: "unused", arg: 1, scope: !6527, file: !6435, line: 155, type: !13)
!6530 = !DILocation(line: 0, scope: !6527)
!6531 = !DILocation(line: 159, column: 2, scope: !6527)
!6532 = !DILocation(line: 160, column: 1, scope: !6527)
!6533 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6534, file: !6534, line: 87, type: !3440, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2975, retainedNodes: !2223)
!6534 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6535 = !DILocation(line: 89, column: 2, scope: !6533)
!6536 = !DILocation(line: 90, column: 2, scope: !6533)
!6537 = !DILocation(line: 91, column: 1, scope: !6533)
!6538 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6534, file: !6534, line: 23, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!6539 = !DISubprogram(name: "z_arm_int_exit", scope: !6540, file: !6540, line: 153, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!6540 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6541 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6542, file: !6542, line: 256, type: !3440, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !2223)
!6542 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6543 = !DILocation(line: 258, column: 2, scope: !6541)
!6544 = !DILocation(line: 260, column: 2, scope: !6541)
!6545 = !DILocation(line: 262, column: 2, scope: !6541)
!6546 = !DILocation(line: 263, column: 2, scope: !6541)
!6547 = !DILocation(line: 267, column: 2, scope: !6541)
!6548 = !DILocation(line: 268, column: 2, scope: !6541)
!6549 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6542, file: !6542, line: 53, type: !3440, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !2223)
!6550 = !DILocation(line: 55, column: 12, scope: !6549)
!6551 = !DILocation(line: 271, column: 3, scope: !6552, inlinedAt: !6553)
!6552 = distinct !DISubprogram(name: "__DSB", scope: !6483, file: !6483, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !2223)
!6553 = distinct !DILocation(line: 56, column: 2, scope: !6549)
!6554 = !{i64 3707309}
!6555 = !DILocation(line: 260, column: 3, scope: !6556, inlinedAt: !6557)
!6556 = distinct !DISubprogram(name: "__ISB", scope: !6483, file: !6483, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !2223)
!6557 = distinct !DILocation(line: 57, column: 2, scope: !6549)
!6558 = !{i64 3707026}
!6559 = !DILocation(line: 58, column: 1, scope: !6549)
!6560 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6542, file: !6542, line: 96, type: !3440, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !2223)
!6561 = !DILocation(line: 103, column: 13, scope: !6560)
!6562 = !DILocation(line: 975, column: 3, scope: !6563, inlinedAt: !6568)
!6563 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6483, file: !6483, line: 971, type: !6564, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !6566)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!40}
!6566 = !{!6567}
!6567 = !DILocalVariable(name: "result", scope: !6563, file: !6483, line: 973, type: !40)
!6568 = distinct !DILocation(line: 189, column: 16, scope: !6560)
!6569 = !{i64 3728139}
!6570 = !DILocation(line: 0, scope: !6563, inlinedAt: !6568)
!6571 = !DILocation(line: 189, column: 32, scope: !6560)
!6572 = !DILocalVariable(name: "control", arg: 1, scope: !6573, file: !6483, line: 1001, type: !40)
!6573 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6483, file: !6483, line: 1001, type: !6574, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2977, retainedNodes: !6576)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{null, !40}
!6576 = !{!6572}
!6577 = !DILocation(line: 0, scope: !6573, inlinedAt: !6578)
!6578 = distinct !DILocation(line: 189, column: 2, scope: !6560)
!6579 = !DILocation(line: 1003, column: 3, scope: !6573, inlinedAt: !6578)
!6580 = !{i64 3728859}
!6581 = !DILocation(line: 260, column: 3, scope: !6556, inlinedAt: !6582)
!6582 = distinct !DILocation(line: 1004, column: 3, scope: !6573, inlinedAt: !6578)
!6583 = !DILocation(line: 191, column: 1, scope: !6560)
!6584 = distinct !DISubprogram(name: "arch_swap", scope: !6585, file: !6585, line: 33, type: !6493, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3005, retainedNodes: !6586)
!6585 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6586 = !{!6587}
!6587 = !DILocalVariable(name: "key", arg: 1, scope: !6584, file: !6585, line: 33, type: !41)
!6588 = !DILocation(line: 0, scope: !6584)
!6589 = !DILocation(line: 36, column: 2, scope: !6584)
!6590 = !DILocation(line: 36, column: 17, scope: !6584)
!6591 = !DILocation(line: 36, column: 25, scope: !6584)
!6592 = !DILocation(line: 37, column: 37, scope: !6584)
!6593 = !DILocation(line: 37, column: 17, scope: !6584)
!6594 = !DILocation(line: 37, column: 35, scope: !6584)
!6595 = !DILocation(line: 41, column: 12, scope: !6584)
!6596 = !DILocalVariable(name: "key", arg: 1, scope: !6597, file: !6214, line: 84, type: !41)
!6597 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3005, retainedNodes: !6598)
!6598 = !{!6596}
!6599 = !DILocation(line: 0, scope: !6597, inlinedAt: !6600)
!6600 = distinct !DILocation(line: 44, column: 2, scope: !6584)
!6601 = !DILocation(line: 95, column: 2, scope: !6597, inlinedAt: !6600)
!6602 = !{i64 2277810}
!6603 = !DILocation(line: 53, column: 9, scope: !6584)
!6604 = !DILocation(line: 53, column: 24, scope: !6584)
!6605 = !DILocation(line: 53, column: 2, scope: !6584)
!6606 = distinct !DISubprogram(name: "arch_new_thread", scope: !6607, file: !6607, line: 56, type: !6608, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !6717)
!6607 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6608 = !DISubroutineType(types: !6609)
!6609 = !{null, !6610, !6712, !1297, !34, !39, !39, !39}
!6610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6611, size: 32)
!6611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !6612)
!6612 = !{!6613, !6671, !6683, !6684, !6685, !6686, !6692, !6707}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6611, file: !121, line: 247, baseType: !6614, size: 384)
!6614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !6615)
!6615 = !{!6616, !6640, !6647, !6648, !6649, !6658, !6659, !6660}
!6616 = !DIDerivedType(tag: DW_TAG_member, scope: !6614, file: !121, line: 60, baseType: !6617, size: 64)
!6617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6614, file: !121, line: 60, size: 64, elements: !6618)
!6618 = !{!6619, !6634}
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6617, file: !121, line: 61, baseType: !6620, size: 64)
!6620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !6621)
!6621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !6622)
!6622 = !{!6623, !6629}
!6623 = !DIDerivedType(tag: DW_TAG_member, scope: !6621, file: !77, line: 38, baseType: !6624, size: 32)
!6624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6621, file: !77, line: 38, size: 32, elements: !6625)
!6625 = !{!6626, !6628}
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6624, file: !77, line: 39, baseType: !6627, size: 32)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6621, size: 32)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6624, file: !77, line: 40, baseType: !6627, size: 32)
!6629 = !DIDerivedType(tag: DW_TAG_member, scope: !6621, file: !77, line: 42, baseType: !6630, size: 32, offset: 32)
!6630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6621, file: !77, line: 42, size: 32, elements: !6631)
!6631 = !{!6632, !6633}
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6630, file: !77, line: 43, baseType: !6627, size: 32)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6630, file: !77, line: 44, baseType: !6627, size: 32)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6617, file: !121, line: 62, baseType: !6635, size: 64)
!6635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !6636)
!6636 = !{!6637}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6635, file: !133, line: 50, baseType: !6638, size: 64)
!6638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6639, size: 64, elements: !138)
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6635, size: 32)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6614, file: !121, line: 68, baseType: !6641, size: 32, offset: 64)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 32)
!6642 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !6643)
!6643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !6644)
!6644 = !{!6645}
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6643, file: !72, line: 232, baseType: !6646, size: 64)
!6646 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !6621)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6614, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6614, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!6649 = !DIDerivedType(tag: DW_TAG_member, scope: !6614, file: !121, line: 90, baseType: !6650, size: 16, offset: 112)
!6650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6614, file: !121, line: 90, size: 16, elements: !6651)
!6651 = !{!6652, !6657}
!6652 = !DIDerivedType(tag: DW_TAG_member, scope: !6650, file: !121, line: 91, baseType: !6653, size: 16)
!6653 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6650, file: !121, line: 91, size: 16, elements: !6654)
!6654 = !{!6655, !6656}
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6653, file: !121, line: 96, baseType: !153, size: 8)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6653, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6650, file: !121, line: 100, baseType: !157, size: 16)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6614, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6614, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6614, file: !121, line: 131, baseType: !6661, size: 192, offset: 192)
!6661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !6662)
!6662 = !{!6663, !6664, !6670}
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6661, file: !72, line: 245, baseType: !6620, size: 64)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6661, file: !72, line: 246, baseType: !6665, size: 32, offset: 64)
!6665 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !6666)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 32)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{null, !6669}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6661, size: 32)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6661, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6611, file: !121, line: 250, baseType: !6672, size: 288, offset: 384)
!6672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !6673)
!6673 = !{!6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682}
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6672, file: !174, line: 26, baseType: !40, size: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6672, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6672, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6672, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6672, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6672, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6672, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6672, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6672, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6611, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6611, file: !121, line: 256, baseType: !6642, size: 64, offset: 704)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6611, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6611, file: !121, line: 300, baseType: !6687, size: 96, offset: 800)
!6687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !6688)
!6688 = !{!6689, !6690, !6691}
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6687, file: !121, line: 153, baseType: !22, size: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6687, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6687, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6611, file: !121, line: 325, baseType: !6693, size: 32, offset: 896)
!6693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6694, size: 32)
!6694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !6695)
!6695 = !{!6696, !6702, !6703}
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6694, file: !68, line: 5074, baseType: !6697, size: 96)
!6697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !6698)
!6698 = !{!6699, !6700, !6701}
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6697, file: !473, line: 57, baseType: !476, size: 32)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6697, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6697, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6694, file: !68, line: 5075, baseType: !6642, size: 64, offset: 96)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6694, file: !68, line: 5076, baseType: !6704, size: 8, offset: 160)
!6704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !6705)
!6705 = !{!6706}
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !6704, file: !483, line: 75, baseType: !113, size: 8)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6611, file: !121, line: 343, baseType: !6708, size: 64, offset: 928)
!6708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !6709)
!6709 = !{!6710, !6711}
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6708, file: !174, line: 63, baseType: !40, size: 32)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6708, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!6712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6713, size: 32)
!6713 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !35, line: 44, baseType: !6714)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !110, line: 47, size: 8, elements: !6715)
!6715 = !{!6716}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6714, file: !110, line: 48, baseType: !113, size: 8)
!6717 = !{!6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725}
!6718 = !DILocalVariable(name: "thread", arg: 1, scope: !6606, file: !6607, line: 56, type: !6610)
!6719 = !DILocalVariable(name: "stack", arg: 2, scope: !6606, file: !6607, line: 56, type: !6712)
!6720 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6606, file: !6607, line: 57, type: !1297)
!6721 = !DILocalVariable(name: "entry", arg: 4, scope: !6606, file: !6607, line: 57, type: !34)
!6722 = !DILocalVariable(name: "p1", arg: 5, scope: !6606, file: !6607, line: 58, type: !39)
!6723 = !DILocalVariable(name: "p2", arg: 6, scope: !6606, file: !6607, line: 58, type: !39)
!6724 = !DILocalVariable(name: "p3", arg: 7, scope: !6606, file: !6607, line: 58, type: !39)
!6725 = !DILocalVariable(name: "iframe", scope: !6606, file: !6607, line: 60, type: !3036)
!6726 = !DILocation(line: 0, scope: !6606)
!6727 = !DILocation(line: 85, column: 11, scope: !6606)
!6728 = !DILocation(line: 93, column: 10, scope: !6606)
!6729 = !DILocation(line: 98, column: 13, scope: !6606)
!6730 = !DILocation(line: 100, column: 15, scope: !6606)
!6731 = !DILocation(line: 100, column: 10, scope: !6606)
!6732 = !DILocation(line: 100, column: 13, scope: !6606)
!6733 = !DILocation(line: 101, column: 15, scope: !6606)
!6734 = !DILocation(line: 101, column: 10, scope: !6606)
!6735 = !DILocation(line: 101, column: 13, scope: !6606)
!6736 = !DILocation(line: 102, column: 15, scope: !6606)
!6737 = !DILocation(line: 102, column: 10, scope: !6606)
!6738 = !DILocation(line: 102, column: 13, scope: !6606)
!6739 = !DILocation(line: 103, column: 15, scope: !6606)
!6740 = !DILocation(line: 103, column: 10, scope: !6606)
!6741 = !DILocation(line: 103, column: 13, scope: !6606)
!6742 = !DILocation(line: 106, column: 10, scope: !6606)
!6743 = !DILocation(line: 106, column: 15, scope: !6606)
!6744 = !DILocation(line: 122, column: 29, scope: !6606)
!6745 = !DILocation(line: 122, column: 23, scope: !6606)
!6746 = !DILocation(line: 122, column: 27, scope: !6606)
!6747 = !DILocation(line: 123, column: 15, scope: !6606)
!6748 = !DILocation(line: 123, column: 23, scope: !6606)
!6749 = !DILocation(line: 143, column: 1, scope: !6606)
!6750 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6607, file: !6607, line: 385, type: !6751, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !6754)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{!40, !6753, !6753}
!6753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!6754 = !{!6755, !6756, !6757, !6760}
!6755 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6750, file: !6607, line: 385, type: !6753)
!6756 = !DILocalVariable(name: "psp", arg: 2, scope: !6750, file: !6607, line: 385, type: !6753)
!6757 = !DILocalVariable(name: "thread", scope: !6750, file: !6607, line: 388, type: !6758)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 32)
!6759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6611)
!6760 = !DILocalVariable(name: "guard_len", scope: !6750, file: !6607, line: 405, type: !40)
!6761 = !DILocation(line: 0, scope: !6750)
!6762 = !DILocation(line: 388, column: 34, scope: !6750)
!6763 = !DILocation(line: 390, column: 13, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6750, file: !6607, line: 390, column: 6)
!6765 = !DILocation(line: 390, column: 6, scope: !6750)
!6766 = !DILocation(line: 438, column: 6, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6750, file: !6607, line: 438, column: 6)
!6768 = !DILocation(line: 438, column: 6, scope: !6750)
!6769 = !DILocation(line: 442, column: 3, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6767, file: !6607, line: 440, column: 22)
!6771 = !DILocation(line: 455, column: 1, scope: !6750)
!6772 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6607, file: !6607, line: 530, type: !6773, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !6775)
!6773 = !DISubroutineType(types: !6774)
!6774 = !{null, !6610, !1297, !34}
!6775 = !{!6776, !6777, !6778}
!6776 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6772, file: !6607, line: 530, type: !6610)
!6777 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6772, file: !6607, line: 530, type: !1297)
!6778 = !DILocalVariable(name: "_main", arg: 3, scope: !6772, file: !6607, line: 531, type: !34)
!6779 = !DILocation(line: 0, scope: !6772)
!6780 = !DILocation(line: 535, column: 11, scope: !6772)
!6781 = !DILocation(line: 560, column: 2, scope: !6772)
!6782 = !DILocation(line: 576, column: 2, scope: !6772)
!6783 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6784 = !DILocation(line: 603, column: 2, scope: !6772)
!6785 = distinct !DISubprogram(name: "__aeabi_atexit", scope: !6786, file: !6786, line: 25, type: !6787, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3076, retainedNodes: !6789)
!6786 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/__aeabi_atexit.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6787 = !DISubroutineType(types: !6788)
!6788 = !{!55, !39, !6288, !39}
!6789 = !{!6790, !6791, !6792}
!6790 = !DILocalVariable(name: "objptr", arg: 1, scope: !6785, file: !6786, line: 25, type: !39)
!6791 = !DILocalVariable(name: "destructor", arg: 2, scope: !6785, file: !6786, line: 25, type: !6288)
!6792 = !DILocalVariable(name: "dso", arg: 3, scope: !6785, file: !6786, line: 25, type: !39)
!6793 = !DILocation(line: 0, scope: !6785)
!6794 = !DILocation(line: 27, column: 9, scope: !6785)
!6795 = !DILocation(line: 27, column: 2, scope: !6785)
!6796 = distinct !DISubprogram(name: "z_arm_fault", scope: !6797, file: !6797, line: 1036, type: !6798, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !6813)
!6797 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6798 = !DISubroutineType(types: !6799)
!6799 = !{null, !40, !40, !40, !6800}
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6801, size: 32)
!6801 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !174, line: 37, baseType: !6802)
!6802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !6803)
!6803 = !{!6804, !6805, !6806, !6807, !6808, !6809, !6810, !6811, !6812}
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6802, file: !174, line: 26, baseType: !40, size: 32)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6802, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6802, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6802, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6802, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6802, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6802, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6802, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6802, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!6813 = !{!6814, !6815, !6816, !6817, !6818, !6819, !6820, !6821, !6822, !6823}
!6814 = !DILocalVariable(name: "msp", arg: 1, scope: !6796, file: !6797, line: 1036, type: !40)
!6815 = !DILocalVariable(name: "psp", arg: 2, scope: !6796, file: !6797, line: 1036, type: !40)
!6816 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6796, file: !6797, line: 1036, type: !40)
!6817 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6796, file: !6797, line: 1037, type: !6800)
!6818 = !DILocalVariable(name: "reason", scope: !6796, file: !6797, line: 1039, type: !40)
!6819 = !DILocalVariable(name: "fault", scope: !6796, file: !6797, line: 1040, type: !55)
!6820 = !DILocalVariable(name: "recoverable", scope: !6796, file: !6797, line: 1041, type: !329)
!6821 = !DILocalVariable(name: "nested_exc", scope: !6796, file: !6797, line: 1041, type: !329)
!6822 = !DILocalVariable(name: "esf", scope: !6796, file: !6797, line: 1042, type: !3106)
!6823 = !DILocalVariable(name: "esf_copy", scope: !6796, file: !6797, line: 1047, type: !3107)
!6824 = !DILocation(line: 0, scope: !6796)
!6825 = !DILocation(line: 1040, column: 19, scope: !6796)
!6826 = !DILocation(line: 1040, column: 24, scope: !6796)
!6827 = !DILocation(line: 1041, column: 2, scope: !6796)
!6828 = !DILocation(line: 1047, column: 2, scope: !6796)
!6829 = !DILocation(line: 1047, column: 15, scope: !6796)
!6830 = !DILocalVariable(name: "key", arg: 1, scope: !6831, file: !6214, line: 84, type: !41)
!6831 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !6832)
!6832 = !{!6830}
!6833 = !DILocation(line: 0, scope: !6831, inlinedAt: !6834)
!6834 = distinct !DILocation(line: 1050, column: 2, scope: !6796)
!6835 = !DILocation(line: 95, column: 2, scope: !6831, inlinedAt: !6834)
!6836 = !{i64 2311054}
!6837 = !DILocation(line: 1055, column: 9, scope: !6796)
!6838 = !DILocation(line: 1063, column: 11, scope: !6796)
!6839 = !DILocation(line: 1064, column: 6, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6796, file: !6797, line: 1064, column: 6)
!6841 = !{i8 0, i8 2}
!6842 = !DILocation(line: 1064, column: 6, scope: !6796)
!6843 = !DILocation(line: 1070, column: 20, scope: !6796)
!6844 = !DILocation(line: 1070, column: 2, scope: !6796)
!6845 = !DILocation(line: 1089, column: 6, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6796, file: !6797, line: 1089, column: 6)
!6847 = !DILocation(line: 0, scope: !6846)
!6848 = !DILocation(line: 1089, column: 6, scope: !6796)
!6849 = !DILocation(line: 1090, column: 28, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6797, line: 1090, column: 7)
!6851 = distinct !DILexicalBlock(scope: !6846, file: !6797, line: 1089, column: 18)
!6852 = !DILocation(line: 1090, column: 44, scope: !6850)
!6853 = !DILocation(line: 1090, column: 7, scope: !6851)
!6854 = !DILocation(line: 1091, column: 24, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6850, file: !6797, line: 1090, column: 50)
!6856 = !DILocation(line: 1092, column: 3, scope: !6855)
!6857 = !DILocation(line: 1094, column: 23, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6846, file: !6797, line: 1093, column: 9)
!6859 = !DILocation(line: 1097, column: 2, scope: !6796)
!6860 = !DILocation(line: 1098, column: 1, scope: !6796)
!6861 = distinct !DISubprogram(name: "get_esf", scope: !6797, file: !6797, line: 894, type: !6862, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !6865)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{!3106, !40, !40, !40, !6864}
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!6865 = !{!6866, !6867, !6868, !6869, !6870, !6871}
!6866 = !DILocalVariable(name: "msp", arg: 1, scope: !6861, file: !6797, line: 894, type: !40)
!6867 = !DILocalVariable(name: "psp", arg: 2, scope: !6861, file: !6797, line: 894, type: !40)
!6868 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6861, file: !6797, line: 894, type: !40)
!6869 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6861, file: !6797, line: 895, type: !6864)
!6870 = !DILocalVariable(name: "alternative_state_exc", scope: !6861, file: !6797, line: 897, type: !329)
!6871 = !DILocalVariable(name: "ptr_esf", scope: !6861, file: !6797, line: 898, type: !3106)
!6872 = !DILocation(line: 0, scope: !6861)
!6873 = !DILocation(line: 900, column: 14, scope: !6861)
!6874 = !DILocation(line: 902, column: 49, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6861, file: !6797, line: 902, column: 6)
!6876 = !DILocation(line: 902, column: 6, scope: !6861)
!6877 = !DILocation(line: 983, column: 18, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6861, file: !6797, line: 983, column: 6)
!6879 = !DILocation(line: 991, column: 7, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6797, line: 990, column: 30)
!6881 = distinct !DILexicalBlock(scope: !6861, file: !6797, line: 990, column: 6)
!6882 = !DILocation(line: 998, column: 16, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6797, line: 995, column: 10)
!6884 = distinct !DILexicalBlock(scope: !6880, file: !6797, line: 991, column: 7)
!6885 = !DILocation(line: 1002, column: 2, scope: !6861)
!6886 = !DILocation(line: 1003, column: 1, scope: !6861)
!6887 = distinct !DISubprogram(name: "fault_handle", scope: !6797, file: !6797, line: 786, type: !6888, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !6890)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{!40, !3106, !55, !6864}
!6890 = !{!6891, !6892, !6893, !6894}
!6891 = !DILocalVariable(name: "esf", arg: 1, scope: !6887, file: !6797, line: 786, type: !3106)
!6892 = !DILocalVariable(name: "fault", arg: 2, scope: !6887, file: !6797, line: 786, type: !55)
!6893 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6887, file: !6797, line: 786, type: !6864)
!6894 = !DILocalVariable(name: "reason", scope: !6887, file: !6797, line: 788, type: !40)
!6895 = !DILocation(line: 0, scope: !6887)
!6896 = !DILocation(line: 790, column: 15, scope: !6887)
!6897 = !DILocation(line: 792, column: 2, scope: !6887)
!6898 = !DILocation(line: 794, column: 12, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6887, file: !6797, line: 792, column: 17)
!6900 = !DILocation(line: 795, column: 3, scope: !6899)
!6901 = !DILocation(line: 800, column: 12, scope: !6899)
!6902 = !DILocation(line: 801, column: 3, scope: !6899)
!6903 = !DILocation(line: 803, column: 12, scope: !6899)
!6904 = !DILocation(line: 804, column: 3, scope: !6899)
!6905 = !DILocation(line: 806, column: 12, scope: !6899)
!6906 = !DILocation(line: 807, column: 3, scope: !6899)
!6907 = !DILocation(line: 814, column: 3, scope: !6899)
!6908 = !DILocation(line: 815, column: 3, scope: !6899)
!6909 = !DILocation(line: 829, column: 2, scope: !6887)
!6910 = distinct !DISubprogram(name: "hard_fault", scope: !6797, file: !6797, line: 709, type: !6911, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !6913)
!6911 = !DISubroutineType(types: !6912)
!6912 = !{!40, !3106, !6864}
!6913 = !{!6914, !6915, !6916}
!6914 = !DILocalVariable(name: "esf", arg: 1, scope: !6910, file: !6797, line: 709, type: !3106)
!6915 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6910, file: !6797, line: 709, type: !6864)
!6916 = !DILocalVariable(name: "reason", scope: !6910, file: !6797, line: 711, type: !40)
!6917 = !DILocation(line: 0, scope: !6910)
!6918 = !DILocation(line: 732, column: 15, scope: !6910)
!6919 = !DILocation(line: 734, column: 12, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6910, file: !6797, line: 734, column: 6)
!6921 = !DILocation(line: 734, column: 17, scope: !6920)
!6922 = !DILocation(line: 734, column: 41, scope: !6920)
!6923 = !DILocation(line: 734, column: 6, scope: !6910)
!6924 = !DILocation(line: 736, column: 19, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !6797, line: 736, column: 13)
!6926 = !DILocation(line: 736, column: 49, scope: !6925)
!6927 = !DILocation(line: 736, column: 13, scope: !6920)
!6928 = !DILocation(line: 738, column: 19, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6925, file: !6797, line: 738, column: 13)
!6930 = !DILocation(line: 738, column: 24, scope: !6929)
!6931 = !DILocation(line: 738, column: 47, scope: !6929)
!6932 = !DILocation(line: 738, column: 13, scope: !6925)
!6933 = !DILocation(line: 740, column: 7, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6797, line: 740, column: 7)
!6935 = distinct !DILexicalBlock(scope: !6929, file: !6797, line: 738, column: 53)
!6936 = !DILocation(line: 740, column: 7, scope: !6935)
!6937 = !DILocation(line: 742, column: 24, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6934, file: !6797, line: 740, column: 38)
!6939 = !DILocation(line: 743, column: 3, scope: !6938)
!6940 = !DILocation(line: 743, column: 20, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6934, file: !6797, line: 743, column: 14)
!6942 = !DILocation(line: 743, column: 25, scope: !6941)
!6943 = !DILocation(line: 743, column: 52, scope: !6941)
!6944 = !DILocation(line: 743, column: 14, scope: !6934)
!6945 = !DILocation(line: 744, column: 13, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6941, file: !6797, line: 743, column: 58)
!6947 = !DILocation(line: 745, column: 3, scope: !6946)
!6948 = !DILocation(line: 745, column: 20, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6941, file: !6797, line: 745, column: 14)
!6950 = !DILocation(line: 745, column: 25, scope: !6949)
!6951 = !DILocation(line: 745, column: 52, scope: !6949)
!6952 = !DILocation(line: 745, column: 14, scope: !6941)
!6953 = !DILocation(line: 746, column: 13, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6949, file: !6797, line: 745, column: 58)
!6955 = !DILocation(line: 747, column: 3, scope: !6954)
!6956 = !DILocation(line: 747, column: 20, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6949, file: !6797, line: 747, column: 14)
!6958 = !DILocation(line: 747, column: 52, scope: !6957)
!6959 = !DILocation(line: 747, column: 14, scope: !6949)
!6960 = !DILocation(line: 748, column: 13, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6957, file: !6797, line: 747, column: 58)
!6962 = !DILocation(line: 753, column: 3, scope: !6961)
!6963 = !DILocation(line: 766, column: 2, scope: !6910)
!6964 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6797, file: !6797, line: 229, type: !6888, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !6965)
!6965 = !{!6966, !6967, !6968, !6969, !6970, !6971, !6974}
!6966 = !DILocalVariable(name: "esf", arg: 1, scope: !6964, file: !6797, line: 229, type: !3106)
!6967 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6964, file: !6797, line: 229, type: !55)
!6968 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6964, file: !6797, line: 230, type: !6864)
!6969 = !DILocalVariable(name: "reason", scope: !6964, file: !6797, line: 232, type: !40)
!6970 = !DILocalVariable(name: "mmfar", scope: !6964, file: !6797, line: 233, type: !40)
!6971 = !DILocalVariable(name: "temp", scope: !6972, file: !6797, line: 254, type: !40)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6797, line: 244, column: 48)
!6973 = distinct !DILexicalBlock(scope: !6964, file: !6797, line: 244, column: 6)
!6974 = !DILocalVariable(name: "min_stack_ptr", scope: !6975, file: !6797, line: 309, type: !40)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6797, line: 308, column: 43)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6797, line: 308, column: 7)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6797, line: 289, column: 40)
!6978 = distinct !DILexicalBlock(scope: !6964, file: !6797, line: 288, column: 6)
!6979 = !DILocation(line: 0, scope: !6964)
!6980 = !DILocation(line: 237, column: 12, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6964, file: !6797, line: 237, column: 6)
!6982 = !DILocation(line: 241, column: 12, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6964, file: !6797, line: 241, column: 6)
!6984 = !DILocation(line: 244, column: 12, scope: !6973)
!6985 = !DILocation(line: 244, column: 17, scope: !6973)
!6986 = !DILocation(line: 244, column: 42, scope: !6973)
!6987 = !DILocation(line: 244, column: 6, scope: !6964)
!6988 = !DILocation(line: 254, column: 24, scope: !6972)
!6989 = !DILocation(line: 0, scope: !6972)
!6990 = !DILocation(line: 256, column: 13, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6972, file: !6797, line: 256, column: 7)
!6992 = !DILocation(line: 256, column: 18, scope: !6991)
!6993 = !DILocation(line: 256, column: 44, scope: !6991)
!6994 = !DILocation(line: 256, column: 7, scope: !6972)
!6995 = !DILocation(line: 259, column: 24, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6797, line: 259, column: 8)
!6997 = distinct !DILexicalBlock(scope: !6991, file: !6797, line: 256, column: 50)
!6998 = !DILocation(line: 259, column: 8, scope: !6997)
!6999 = !DILocation(line: 261, column: 15, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6996, file: !6797, line: 259, column: 30)
!7001 = !DILocation(line: 262, column: 4, scope: !7000)
!7002 = !DILocation(line: 265, column: 12, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6964, file: !6797, line: 265, column: 6)
!7004 = !DILocation(line: 269, column: 12, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6964, file: !6797, line: 269, column: 6)
!7006 = !DILocation(line: 288, column: 12, scope: !6978)
!7007 = !DILocation(line: 288, column: 17, scope: !6978)
!7008 = !DILocation(line: 288, column: 41, scope: !6978)
!7009 = !DILocation(line: 289, column: 9, scope: !6978)
!7010 = !DILocation(line: 289, column: 14, scope: !6978)
!7011 = !DILocation(line: 288, column: 6, scope: !6964)
!7012 = !DILocation(line: 308, column: 12, scope: !6976)
!7013 = !DILocation(line: 308, column: 17, scope: !6976)
!7014 = !DILocation(line: 308, column: 7, scope: !6977)
!7015 = !DILocation(line: 310, column: 6, scope: !6975)
!7016 = !DILocation(line: 309, column: 29, scope: !6975)
!7017 = !DILocation(line: 0, scope: !6975)
!7018 = !DILocation(line: 312, column: 8, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6975, file: !6797, line: 312, column: 8)
!7020 = !DILocation(line: 312, column: 8, scope: !6975)
!7021 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7022, file: !6483, line: 1099, type: !40)
!7022 = distinct !DISubprogram(name: "__set_PSP", scope: !6483, file: !6483, line: 1099, type: !6574, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !7023)
!7023 = !{!7021}
!7024 = !DILocation(line: 0, scope: !7022, inlinedAt: !7025)
!7025 = distinct !DILocation(line: 338, column: 5, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7019, file: !6797, line: 312, column: 23)
!7027 = !DILocation(line: 1101, column: 3, scope: !7022, inlinedAt: !7025)
!7028 = !{i64 3758278}
!7029 = !DILocation(line: 341, column: 4, scope: !7026)
!7030 = !DILocation(line: 360, column: 12, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !6964, file: !6797, line: 360, column: 6)
!7032 = !DILocation(line: 360, column: 17, scope: !7031)
!7033 = !DILocation(line: 360, column: 41, scope: !7031)
!7034 = !DILocation(line: 360, column: 6, scope: !6964)
!7035 = !DILocation(line: 361, column: 14, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7031, file: !6797, line: 360, column: 47)
!7037 = !DILocation(line: 362, column: 2, scope: !7036)
!7038 = !DILocation(line: 366, column: 12, scope: !6964)
!7039 = !DILocation(line: 369, column: 15, scope: !6964)
!7040 = !DILocation(line: 371, column: 2, scope: !6964)
!7041 = distinct !DISubprogram(name: "bus_fault", scope: !6797, file: !6797, line: 383, type: !7042, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !7044)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{!55, !3106, !55, !6864}
!7044 = !{!7045, !7046, !7047, !7048, !7049}
!7045 = !DILocalVariable(name: "esf", arg: 1, scope: !7041, file: !6797, line: 383, type: !3106)
!7046 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7041, file: !6797, line: 383, type: !55)
!7047 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7041, file: !6797, line: 383, type: !6864)
!7048 = !DILocalVariable(name: "reason", scope: !7041, file: !6797, line: 385, type: !40)
!7049 = !DILocalVariable(name: "bfar", scope: !7050, file: !6797, line: 405, type: !40)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6797, line: 395, column: 42)
!7051 = distinct !DILexicalBlock(scope: !7041, file: !6797, line: 395, column: 6)
!7052 = !DILocation(line: 0, scope: !7041)
!7053 = !DILocation(line: 389, column: 11, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7041, file: !6797, line: 389, column: 6)
!7055 = !DILocation(line: 392, column: 11, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7041, file: !6797, line: 392, column: 6)
!7057 = !DILocation(line: 395, column: 11, scope: !7051)
!7058 = !DILocation(line: 395, column: 16, scope: !7051)
!7059 = !DILocation(line: 395, column: 6, scope: !7041)
!7060 = !DILocation(line: 405, column: 3, scope: !7050)
!7061 = !DILocation(line: 0, scope: !7050)
!7062 = !DILocation(line: 407, column: 13, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7050, file: !6797, line: 407, column: 7)
!7064 = !DILocation(line: 407, column: 18, scope: !7063)
!7065 = !DILocation(line: 407, column: 44, scope: !7063)
!7066 = !DILocation(line: 407, column: 7, scope: !7050)
!7067 = !DILocation(line: 411, column: 15, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6797, line: 409, column: 30)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !6797, line: 409, column: 8)
!7070 = distinct !DILexicalBlock(scope: !7063, file: !6797, line: 407, column: 50)
!7071 = !DILocation(line: 412, column: 4, scope: !7068)
!7072 = !DILocation(line: 415, column: 11, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7041, file: !6797, line: 415, column: 6)
!7074 = !DILocation(line: 418, column: 12, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7041, file: !6797, line: 418, column: 6)
!7076 = !DILocation(line: 418, column: 17, scope: !7075)
!7077 = !DILocation(line: 418, column: 41, scope: !7075)
!7078 = !DILocation(line: 418, column: 6, scope: !7041)
!7079 = !DILocation(line: 423, column: 18, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !6797, line: 423, column: 13)
!7081 = !DILocation(line: 524, column: 12, scope: !7041)
!7082 = !DILocation(line: 526, column: 15, scope: !7041)
!7083 = !DILocation(line: 528, column: 2, scope: !7041)
!7084 = distinct !DISubprogram(name: "usage_fault", scope: !6797, file: !6797, line: 539, type: !7085, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !7089)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{!40, !7087}
!7087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7088, size: 32)
!7088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3107)
!7089 = !{!7090, !7091}
!7090 = !DILocalVariable(name: "esf", arg: 1, scope: !7084, file: !6797, line: 539, type: !7087)
!7091 = !DILocalVariable(name: "reason", scope: !7084, file: !6797, line: 541, type: !40)
!7092 = !DILocation(line: 0, scope: !7084)
!7093 = !DILocation(line: 546, column: 12, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7084, file: !6797, line: 546, column: 6)
!7095 = !DILocation(line: 549, column: 12, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7084, file: !6797, line: 549, column: 6)
!7097 = !DILocation(line: 567, column: 12, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7084, file: !6797, line: 567, column: 6)
!7099 = !DILocation(line: 570, column: 12, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7084, file: !6797, line: 570, column: 6)
!7101 = !DILocation(line: 573, column: 12, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7084, file: !6797, line: 573, column: 6)
!7103 = !DILocation(line: 576, column: 12, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7084, file: !6797, line: 576, column: 6)
!7105 = !DILocation(line: 581, column: 12, scope: !7084)
!7106 = !DILocation(line: 583, column: 2, scope: !7084)
!7107 = distinct !DISubprogram(name: "debug_monitor", scope: !6797, file: !6797, line: 632, type: !7108, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !7110)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{null, !3106, !6864}
!7110 = !{!7111, !7112}
!7111 = !DILocalVariable(name: "esf", arg: 1, scope: !7107, file: !6797, line: 632, type: !3106)
!7112 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7107, file: !6797, line: 632, type: !6864)
!7113 = !DILocation(line: 0, scope: !7107)
!7114 = !DILocation(line: 634, column: 15, scope: !7107)
!7115 = !DILocation(line: 652, column: 1, scope: !7107)
!7116 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6797, file: !6797, line: 658, type: !7117, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !7119)
!7117 = !DISubroutineType(types: !7118)
!7118 = !{!329, !3106}
!7119 = !{!7120, !7121, !7122}
!7120 = !DILocalVariable(name: "esf", arg: 1, scope: !7116, file: !6797, line: 658, type: !3106)
!7121 = !DILocalVariable(name: "ret_addr", scope: !7116, file: !6797, line: 660, type: !2860)
!7122 = !DILocalVariable(name: "fault_insn", scope: !7116, file: !6797, line: 686, type: !157)
!7123 = !DILocation(line: 0, scope: !7116)
!7124 = !DILocation(line: 660, column: 46, scope: !7116)
!7125 = !DILocation(line: 660, column: 23, scope: !7116)
!7126 = !DILocation(line: 682, column: 11, scope: !7116)
!7127 = !DILocation(line: 271, column: 3, scope: !7128, inlinedAt: !7129)
!7128 = distinct !DISubprogram(name: "__DSB", scope: !6483, file: !6483, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !2223)
!7129 = distinct !DILocation(line: 683, column: 2, scope: !7116)
!7130 = !{i64 3734413}
!7131 = !DILocation(line: 260, column: 3, scope: !7132, inlinedAt: !7133)
!7132 = distinct !DISubprogram(name: "__ISB", scope: !6483, file: !6483, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !2223)
!7133 = distinct !DILocation(line: 684, column: 2, scope: !7116)
!7134 = !{i64 3734130}
!7135 = !DILocation(line: 686, column: 35, scope: !7116)
!7136 = !DILocation(line: 686, column: 24, scope: !7116)
!7137 = !DILocation(line: 688, column: 11, scope: !7116)
!7138 = !DILocation(line: 271, column: 3, scope: !7128, inlinedAt: !7139)
!7139 = distinct !DILocation(line: 689, column: 2, scope: !7116)
!7140 = !DILocation(line: 260, column: 3, scope: !7132, inlinedAt: !7141)
!7141 = distinct !DILocation(line: 690, column: 2, scope: !7116)
!7142 = !DILocation(line: 693, column: 45, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7116, file: !6797, line: 693, column: 6)
!7144 = !DILocation(line: 699, column: 1, scope: !7116)
!7145 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6797, file: !6797, line: 1107, type: !3440, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3078, retainedNodes: !2223)
!7146 = !DILocation(line: 1111, column: 11, scope: !7145)
!7147 = !DILocation(line: 1136, column: 1, scope: !7145)
!7148 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7149, file: !7149, line: 26, type: !3440, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !7150)
!7149 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7150 = !{!7151}
!7151 = !DILocalVariable(name: "irq", scope: !7148, file: !7149, line: 28, type: !55)
!7152 = !DILocation(line: 0, scope: !7148)
!7153 = !DILocation(line: 30, column: 2, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7148, file: !7149, line: 30, column: 2)
!7155 = !DILocation(line: 31, column: 3, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !7149, line: 30, column: 39)
!7157 = distinct !DILexicalBlock(scope: !7154, file: !7149, line: 30, column: 2)
!7158 = !DILocation(line: 30, column: 35, scope: !7157)
!7159 = !DILocation(line: 30, column: 13, scope: !7157)
!7160 = distinct !{!7160, !7153, !7161}
!7161 = !DILocation(line: 32, column: 2, scope: !7154)
!7162 = !DILocation(line: 33, column: 1, scope: !7148)
!7163 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !519, file: !519, line: 1814, type: !6517, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3149, retainedNodes: !7164)
!7164 = !{!7165, !7166}
!7165 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7163, file: !519, line: 1814, type: !923)
!7166 = !DILocalVariable(name: "priority", arg: 2, scope: !7163, file: !519, line: 1814, type: !40)
!7167 = !DILocation(line: 0, scope: !7163)
!7168 = !DILocation(line: 1816, column: 7, scope: !7163)
!7169 = !DILocation(line: 0, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7163, file: !519, line: 1816, column: 7)
!7171 = !DILocation(line: 1824, column: 1, scope: !7163)
!7172 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7173, file: !7173, line: 27, type: !7174, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3194, retainedNodes: !7279)
!7173 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7174 = !DISubroutineType(types: !7175)
!7175 = !{null, !7176}
!7176 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !121, line: 347, baseType: !7177)
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7178, size: 32)
!7178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !7179)
!7179 = !{!7180, !7238, !7250, !7251, !7252, !7253, !7259, !7274}
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7178, file: !121, line: 247, baseType: !7181, size: 384)
!7181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !7182)
!7182 = !{!7183, !7207, !7214, !7215, !7216, !7225, !7226, !7227}
!7183 = !DIDerivedType(tag: DW_TAG_member, scope: !7181, file: !121, line: 60, baseType: !7184, size: 64)
!7184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7181, file: !121, line: 60, size: 64, elements: !7185)
!7185 = !{!7186, !7201}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7184, file: !121, line: 61, baseType: !7187, size: 64)
!7187 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !7188)
!7188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !7189)
!7189 = !{!7190, !7196}
!7190 = !DIDerivedType(tag: DW_TAG_member, scope: !7188, file: !77, line: 38, baseType: !7191, size: 32)
!7191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7188, file: !77, line: 38, size: 32, elements: !7192)
!7192 = !{!7193, !7195}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7191, file: !77, line: 39, baseType: !7194, size: 32)
!7194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7188, size: 32)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7191, file: !77, line: 40, baseType: !7194, size: 32)
!7196 = !DIDerivedType(tag: DW_TAG_member, scope: !7188, file: !77, line: 42, baseType: !7197, size: 32, offset: 32)
!7197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7188, file: !77, line: 42, size: 32, elements: !7198)
!7198 = !{!7199, !7200}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7197, file: !77, line: 43, baseType: !7194, size: 32)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7197, file: !77, line: 44, baseType: !7194, size: 32)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7184, file: !121, line: 62, baseType: !7202, size: 64)
!7202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !7203)
!7203 = !{!7204}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7202, file: !133, line: 50, baseType: !7205, size: 64)
!7205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7206, size: 64, elements: !138)
!7206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7202, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7181, file: !121, line: 68, baseType: !7208, size: 32, offset: 64)
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !7210)
!7210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !7211)
!7211 = !{!7212}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7210, file: !72, line: 232, baseType: !7213, size: 64)
!7213 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !7188)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7181, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7181, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!7216 = !DIDerivedType(tag: DW_TAG_member, scope: !7181, file: !121, line: 90, baseType: !7217, size: 16, offset: 112)
!7217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7181, file: !121, line: 90, size: 16, elements: !7218)
!7218 = !{!7219, !7224}
!7219 = !DIDerivedType(tag: DW_TAG_member, scope: !7217, file: !121, line: 91, baseType: !7220, size: 16)
!7220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7217, file: !121, line: 91, size: 16, elements: !7221)
!7221 = !{!7222, !7223}
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7220, file: !121, line: 96, baseType: !153, size: 8)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7220, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7217, file: !121, line: 100, baseType: !157, size: 16)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7181, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7181, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7181, file: !121, line: 131, baseType: !7228, size: 192, offset: 192)
!7228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !7229)
!7229 = !{!7230, !7231, !7237}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7228, file: !72, line: 245, baseType: !7187, size: 64)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7228, file: !72, line: 246, baseType: !7232, size: 32, offset: 64)
!7232 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !7233)
!7233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7234, size: 32)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{null, !7236}
!7236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7228, size: 32)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7228, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7178, file: !121, line: 250, baseType: !7239, size: 288, offset: 384)
!7239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !7240)
!7240 = !{!7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249}
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7239, file: !174, line: 26, baseType: !40, size: 32)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7239, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7239, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7239, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7239, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7239, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7239, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7239, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7239, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7178, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7178, file: !121, line: 256, baseType: !7209, size: 64, offset: 704)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7178, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7178, file: !121, line: 300, baseType: !7254, size: 96, offset: 800)
!7254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !7255)
!7255 = !{!7256, !7257, !7258}
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7254, file: !121, line: 153, baseType: !22, size: 32)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7254, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7254, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7178, file: !121, line: 325, baseType: !7260, size: 32, offset: 896)
!7260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7261, size: 32)
!7261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !7262)
!7262 = !{!7263, !7269, !7270}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7261, file: !68, line: 5074, baseType: !7264, size: 96)
!7264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !7265)
!7265 = !{!7266, !7267, !7268}
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7264, file: !473, line: 57, baseType: !476, size: 32)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7264, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7264, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7261, file: !68, line: 5075, baseType: !7209, size: 64, offset: 96)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7261, file: !68, line: 5076, baseType: !7271, size: 8, offset: 160)
!7271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !7272)
!7272 = !{!7273}
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !7271, file: !483, line: 75, baseType: !113, size: 8)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7178, file: !121, line: 343, baseType: !7275, size: 64, offset: 928)
!7275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !7276)
!7276 = !{!7277, !7278}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7275, file: !174, line: 63, baseType: !40, size: 32)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7275, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!7279 = !{!7280}
!7280 = !DILocalVariable(name: "thread", arg: 1, scope: !7172, file: !7173, line: 27, type: !7176)
!7281 = !DILocation(line: 0, scope: !7172)
!7282 = !DILocation(line: 29, column: 6, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7172, file: !7173, line: 29, column: 6)
!7284 = !DILocation(line: 29, column: 15, scope: !7283)
!7285 = !DILocation(line: 29, column: 6, scope: !7172)
!7286 = !DILocation(line: 1031, column: 3, scope: !7287, inlinedAt: !7290)
!7287 = distinct !DISubprogram(name: "__get_IPSR", scope: !6483, file: !6483, line: 1027, type: !6564, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3194, retainedNodes: !7288)
!7288 = !{!7289}
!7289 = !DILocalVariable(name: "result", scope: !7287, file: !6483, line: 1029, type: !40)
!7290 = distinct !DILocation(line: 48, column: 10, scope: !7291, inlinedAt: !7295)
!7291 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7292, file: !7292, line: 46, type: !7293, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3194, retainedNodes: !2223)
!7292 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7293 = !DISubroutineType(types: !7294)
!7294 = !{!329}
!7295 = distinct !DILocation(line: 30, column: 7, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7297, file: !7173, line: 30, column: 7)
!7297 = distinct !DILexicalBlock(scope: !7283, file: !7173, line: 29, column: 26)
!7298 = !{i64 3723261}
!7299 = !DILocation(line: 0, scope: !7287, inlinedAt: !7290)
!7300 = !DILocation(line: 48, column: 9, scope: !7291, inlinedAt: !7295)
!7301 = !DILocation(line: 30, column: 7, scope: !7297)
!7302 = !DILocation(line: 42, column: 14, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7296, file: !7173, line: 30, column: 25)
!7304 = !DILocation(line: 48, column: 15, scope: !7303)
!7305 = !DILocation(line: 49, column: 3, scope: !7303)
!7306 = !DILocation(line: 52, column: 2, scope: !7172)
!7307 = !DILocation(line: 53, column: 1, scope: !7172)
!7308 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !382, file: !382, line: 127, type: !3440, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !375, retainedNodes: !2223)
!7309 = !DILocation(line: 134, column: 2, scope: !7308)
!7310 = !DILocation(line: 156, column: 1, scope: !7308)
!7311 = !DILocation(line: 0, scope: !381)
!7312 = !DILocation(line: 289, column: 36, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !381, file: !382, line: 285, column: 2)
!7314 = !DILocation(line: 289, column: 42, scope: !7313)
!7315 = !DILocation(line: 300, column: 36, scope: !381)
!7316 = !DILocation(line: 301, column: 35, scope: !381)
!7317 = !DILocation(line: 302, column: 37, scope: !381)
!7318 = !DILocation(line: 311, column: 2, scope: !381)
!7319 = !DILocation(line: 316, column: 1, scope: !381)
!7320 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !547, file: !547, line: 180, type: !3440, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !2223)
!7321 = !DILocation(line: 188, column: 12, scope: !7320)
!7322 = !DILocation(line: 271, column: 3, scope: !7323, inlinedAt: !7324)
!7323 = distinct !DISubprogram(name: "__DSB", scope: !6483, file: !6483, line: 269, type: !3440, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !2223)
!7324 = distinct !DILocation(line: 192, column: 2, scope: !7320)
!7325 = !{i64 3911163}
!7326 = !DILocation(line: 260, column: 3, scope: !7327, inlinedAt: !7328)
!7327 = distinct !DISubprogram(name: "__ISB", scope: !6483, file: !6483, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !2223)
!7328 = distinct !DILocation(line: 193, column: 2, scope: !7320)
!7329 = !{i64 3910880}
!7330 = !DILocation(line: 194, column: 1, scope: !7320)
!7331 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !547, file: !547, line: 199, type: !3440, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !2223)
!7332 = !DILocation(line: 282, column: 3, scope: !7333, inlinedAt: !7334)
!7333 = distinct !DISubprogram(name: "__DMB", scope: !6483, file: !6483, line: 280, type: !3440, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !2223)
!7334 = distinct !DILocation(line: 202, column: 2, scope: !7331)
!7335 = !{i64 3911439}
!7336 = !DILocation(line: 205, column: 12, scope: !7331)
!7337 = !DILocation(line: 206, column: 1, scope: !7331)
!7338 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !547, file: !547, line: 275, type: !7339, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7352)
!7339 = !DISubroutineType(types: !7340)
!7340 = !{null, !7341, !2005, !6753, !6753}
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7342, size: 32)
!7342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7343)
!7343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !498, line: 52, size: 96, elements: !7344)
!7344 = !{!7345, !7346, !7347}
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7343, file: !498, line: 53, baseType: !22, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7343, file: !498, line: 54, baseType: !193, size: 32, offset: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7343, file: !498, line: 55, baseType: !7348, size: 32, offset: 64)
!7348 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !504, line: 151, baseType: !7349)
!7349 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !504, line: 149, size: 32, elements: !7350)
!7350 = !{!7351}
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7349, file: !504, line: 150, baseType: !40, size: 32)
!7352 = !{!7353, !7354, !7355, !7356}
!7353 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7338, file: !547, line: 276, type: !7341)
!7354 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7338, file: !547, line: 276, type: !2005)
!7355 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7338, file: !547, line: 277, type: !6753)
!7356 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7338, file: !547, line: 277, type: !6753)
!7357 = !DILocation(line: 0, scope: !7338)
!7358 = !DILocation(line: 279, column: 6, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7338, file: !547, line: 279, column: 6)
!7360 = !DILocation(line: 285, column: 1, scope: !7338)
!7361 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7362, file: !7362, line: 220, type: !7363, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7365)
!7362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7363 = !DISubroutineType(types: !7364)
!7364 = !{!55, !7341, !2005, !6753, !6753}
!7365 = !{!7366, !7367, !7368, !7369, !7370}
!7366 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7361, file: !7362, line: 221, type: !7341)
!7367 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7361, file: !7362, line: 221, type: !2005)
!7368 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7361, file: !7362, line: 222, type: !6753)
!7369 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7361, file: !7362, line: 223, type: !6753)
!7370 = !DILocalVariable(name: "mpu_reg_index", scope: !7361, file: !7362, line: 225, type: !55)
!7371 = !DILocation(line: 0, scope: !7361)
!7372 = !DILocation(line: 225, column: 22, scope: !7361)
!7373 = !DILocation(line: 233, column: 18, scope: !7361)
!7374 = !DILocation(line: 236, column: 23, scope: !7361)
!7375 = !DILocation(line: 236, column: 21, scope: !7361)
!7376 = !DILocation(line: 238, column: 2, scope: !7361)
!7377 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !547, file: !547, line: 105, type: !7378, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7380)
!7378 = !DISubroutineType(types: !7379)
!7379 = !{!55, !7341, !143, !143, !329}
!7380 = !{!7381, !7382, !7383, !7384, !7385, !7386}
!7381 = !DILocalVariable(name: "regions", arg: 1, scope: !7377, file: !547, line: 106, type: !7341)
!7382 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7377, file: !547, line: 106, type: !143)
!7383 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7377, file: !547, line: 106, type: !143)
!7384 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7377, file: !547, line: 107, type: !329)
!7385 = !DILocalVariable(name: "i", scope: !7377, file: !547, line: 109, type: !55)
!7386 = !DILocalVariable(name: "reg_index", scope: !7377, file: !547, line: 110, type: !55)
!7387 = !DILocation(line: 0, scope: !7377)
!7388 = !DILocation(line: 110, column: 18, scope: !7377)
!7389 = !DILocation(line: 112, column: 16, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !547, line: 112, column: 2)
!7391 = distinct !DILexicalBlock(scope: !7377, file: !547, line: 112, column: 2)
!7392 = !DILocation(line: 112, column: 2, scope: !7391)
!7393 = !DILocation(line: 113, column: 7, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7395, file: !547, line: 113, column: 7)
!7395 = distinct !DILexicalBlock(scope: !7390, file: !547, line: 112, column: 36)
!7396 = !DILocation(line: 113, column: 18, scope: !7394)
!7397 = !DILocation(line: 113, column: 23, scope: !7394)
!7398 = !DILocation(line: 113, column: 7, scope: !7395)
!7399 = !DILocation(line: 118, column: 23, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7395, file: !547, line: 118, column: 7)
!7401 = !DILocation(line: 119, column: 7, scope: !7400)
!7402 = !DILocation(line: 118, column: 7, scope: !7395)
!7403 = !DILocation(line: 124, column: 36, scope: !7395)
!7404 = !DILocation(line: 124, column: 15, scope: !7395)
!7405 = !DILocation(line: 126, column: 17, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7395, file: !547, line: 126, column: 7)
!7407 = !DILocation(line: 126, column: 7, scope: !7395)
!7408 = !DILocation(line: 131, column: 12, scope: !7395)
!7409 = !DILocation(line: 132, column: 2, scope: !7395)
!7410 = !DILocation(line: 112, column: 32, scope: !7390)
!7411 = distinct !{!7411, !7392, !7412}
!7412 = !DILocation(line: 132, column: 2, scope: !7391)
!7413 = !DILocation(line: 135, column: 1, scope: !7377)
!7414 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7362, file: !7362, line: 63, type: !7415, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7417)
!7415 = !DISubroutineType(types: !7416)
!7416 = !{!55, !7341}
!7417 = !{!7418, !7419}
!7418 = !DILocalVariable(name: "part", arg: 1, scope: !7414, file: !7362, line: 63, type: !7341)
!7419 = !DILocalVariable(name: "partition_is_valid", scope: !7414, file: !7362, line: 70, type: !55)
!7420 = !DILocation(line: 0, scope: !7414)
!7421 = !DILocation(line: 71, column: 11, scope: !7414)
!7422 = !DILocation(line: 71, column: 37, scope: !7414)
!7423 = !DILocation(line: 72, column: 3, scope: !7414)
!7424 = !DILocation(line: 71, column: 30, scope: !7414)
!7425 = !DILocation(line: 75, column: 11, scope: !7414)
!7426 = !DILocation(line: 75, column: 17, scope: !7414)
!7427 = !DILocation(line: 75, column: 38, scope: !7414)
!7428 = !DILocation(line: 77, column: 2, scope: !7414)
!7429 = distinct !DISubprogram(name: "mpu_configure_region", scope: !547, file: !547, line: 79, type: !7430, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7432)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!55, !2005, !7341}
!7432 = !{!7433, !7434, !7435}
!7433 = !DILocalVariable(name: "index", arg: 1, scope: !7429, file: !547, line: 79, type: !2005)
!7434 = !DILocalVariable(name: "new_region", arg: 2, scope: !7429, file: !547, line: 80, type: !7341)
!7435 = !DILocalVariable(name: "region_conf", scope: !7429, file: !547, line: 82, type: !536)
!7436 = !DILocation(line: 0, scope: !7429)
!7437 = !DILocation(line: 82, column: 2, scope: !7429)
!7438 = !DILocation(line: 82, column: 24, scope: !7429)
!7439 = !DILocation(line: 87, column: 33, scope: !7429)
!7440 = !DILocation(line: 87, column: 14, scope: !7429)
!7441 = !DILocation(line: 87, column: 19, scope: !7429)
!7442 = !DILocation(line: 91, column: 55, scope: !7429)
!7443 = !DILocation(line: 92, column: 16, scope: !7429)
!7444 = !DILocation(line: 92, column: 53, scope: !7429)
!7445 = !DILocation(line: 91, column: 2, scope: !7429)
!7446 = !DILocation(line: 95, column: 9, scope: !7429)
!7447 = !DILocation(line: 97, column: 1, scope: !7429)
!7448 = !DILocation(line: 95, column: 2, scope: !7429)
!7449 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7362, file: !7362, line: 113, type: !7450, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7455)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{null, !7452, !7453, !40, !40}
!7452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!7453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7454, size: 32)
!7454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7348)
!7455 = !{!7456, !7457, !7458, !7459}
!7456 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7449, file: !7362, line: 114, type: !7452)
!7457 = !DILocalVariable(name: "attr", arg: 2, scope: !7449, file: !7362, line: 115, type: !7453)
!7458 = !DILocalVariable(name: "base", arg: 3, scope: !7449, file: !7362, line: 115, type: !40)
!7459 = !DILocalVariable(name: "size", arg: 4, scope: !7449, file: !7362, line: 115, type: !40)
!7460 = !DILocation(line: 0, scope: !7449)
!7461 = !DILocation(line: 127, column: 23, scope: !7449)
!7462 = !DILocation(line: 127, column: 35, scope: !7449)
!7463 = !DILocation(line: 127, column: 33, scope: !7449)
!7464 = !DILocation(line: 127, column: 10, scope: !7449)
!7465 = !DILocation(line: 127, column: 15, scope: !7449)
!7466 = !DILocation(line: 129, column: 1, scope: !7449)
!7467 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !547, file: !547, line: 57, type: !7468, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7470)
!7468 = !DISubroutineType(types: !7469)
!7469 = !{!55, !2005, !534}
!7470 = !{!7471, !7472}
!7471 = !DILocalVariable(name: "index", arg: 1, scope: !7467, file: !547, line: 57, type: !2005)
!7472 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7467, file: !547, line: 58, type: !534)
!7473 = !DILocation(line: 0, scope: !7467)
!7474 = !DILocation(line: 61, column: 6, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7467, file: !547, line: 61, column: 6)
!7476 = !DILocation(line: 61, column: 12, scope: !7475)
!7477 = !DILocation(line: 61, column: 6, scope: !7467)
!7478 = !DILocation(line: 71, column: 2, scope: !7467)
!7479 = !DILocation(line: 73, column: 2, scope: !7467)
!7480 = !DILocation(line: 74, column: 1, scope: !7467)
!7481 = distinct !DISubprogram(name: "region_init", scope: !7362, file: !7362, line: 29, type: !7482, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7484)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{null, !6753, !534}
!7484 = !{!7485, !7486}
!7485 = !DILocalVariable(name: "index", arg: 1, scope: !7481, file: !7362, line: 29, type: !6753)
!7486 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7481, file: !7362, line: 30, type: !534)
!7487 = !DILocation(line: 0, scope: !7481)
!7488 = !DILocation(line: 33, column: 2, scope: !7481)
!7489 = !DILocation(line: 47, column: 28, scope: !7481)
!7490 = !DILocation(line: 47, column: 33, scope: !7481)
!7491 = !DILocation(line: 48, column: 26, scope: !7481)
!7492 = !DILocation(line: 47, column: 12, scope: !7481)
!7493 = !DILocation(line: 49, column: 32, scope: !7481)
!7494 = !DILocation(line: 49, column: 37, scope: !7481)
!7495 = !DILocation(line: 49, column: 12, scope: !7481)
!7496 = !DILocation(line: 53, column: 1, scope: !7481)
!7497 = distinct !DISubprogram(name: "set_region_number", scope: !7498, file: !7498, line: 32, type: !6574, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7499)
!7498 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7499 = !{!7500}
!7500 = !DILocalVariable(name: "index", arg: 1, scope: !7497, file: !7498, line: 32, type: !40)
!7501 = !DILocation(line: 0, scope: !7497)
!7502 = !DILocation(line: 34, column: 11, scope: !7497)
!7503 = !DILocation(line: 35, column: 1, scope: !7497)
!7504 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7362, file: !7362, line: 88, type: !7505, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7507)
!7505 = !DISubroutineType(types: !7506)
!7506 = !{!40, !40}
!7507 = !{!7508}
!7508 = !DILocalVariable(name: "size", arg: 1, scope: !7504, file: !7362, line: 88, type: !40)
!7509 = !DILocation(line: 0, scope: !7504)
!7510 = !DILocation(line: 91, column: 11, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7504, file: !7362, line: 91, column: 6)
!7512 = !DILocation(line: 91, column: 6, scope: !7504)
!7513 = !DILocation(line: 100, column: 11, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7504, file: !7362, line: 100, column: 6)
!7515 = !DILocation(line: 100, column: 6, scope: !7504)
!7516 = !DILocation(line: 104, column: 35, scope: !7504)
!7517 = !DILocation(line: 104, column: 16, scope: !7504)
!7518 = !DILocation(line: 104, column: 50, scope: !7504)
!7519 = !DILocation(line: 104, column: 72, scope: !7504)
!7520 = !DILocation(line: 104, column: 2, scope: !7504)
!7521 = !DILocation(line: 106, column: 1, scope: !7504)
!7522 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !547, file: !547, line: 307, type: !7523, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7525)
!7523 = !DISubroutineType(types: !7524)
!7524 = !{null, !7341, !143}
!7525 = !{!7526, !7527}
!7526 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7522, file: !547, line: 308, type: !7341)
!7527 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7522, file: !547, line: 308, type: !143)
!7528 = !DILocation(line: 0, scope: !7522)
!7529 = !DILocation(line: 310, column: 6, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7522, file: !547, line: 310, column: 6)
!7531 = !DILocation(line: 316, column: 1, scope: !7522)
!7532 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7362, file: !7362, line: 249, type: !7533, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7535)
!7533 = !DISubroutineType(types: !7534)
!7534 = !{!55, !7341, !143}
!7535 = !{!7536, !7537, !7538, !7539}
!7536 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7532, file: !7362, line: 250, type: !7341)
!7537 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7532, file: !7362, line: 250, type: !143)
!7538 = !DILocalVariable(name: "mpu_reg_index", scope: !7532, file: !7362, line: 252, type: !55)
!7539 = !DILocalVariable(name: "i", scope: !7540, file: !7362, line: 264, type: !55)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !7362, line: 264, column: 3)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !7362, line: 261, column: 32)
!7542 = distinct !DILexicalBlock(scope: !7532, file: !7362, line: 261, column: 6)
!7543 = !DILocation(line: 0, scope: !7532)
!7544 = !DILocation(line: 252, column: 22, scope: !7532)
!7545 = !DILocation(line: 258, column: 18, scope: !7532)
!7546 = !DILocation(line: 261, column: 20, scope: !7542)
!7547 = !DILocation(line: 261, column: 6, scope: !7532)
!7548 = !DILocation(line: 0, scope: !7540)
!7549 = !DILocation(line: 265, column: 4, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !7362, line: 264, column: 59)
!7551 = distinct !DILexicalBlock(scope: !7540, file: !7362, line: 264, column: 3)
!7552 = !DILocation(line: 264, column: 55, scope: !7551)
!7553 = !DILocation(line: 264, column: 33, scope: !7551)
!7554 = !DILocation(line: 264, column: 3, scope: !7540)
!7555 = distinct !{!7555, !7554, !7556}
!7556 = !DILocation(line: 266, column: 3, scope: !7540)
!7557 = !DILocation(line: 269, column: 2, scope: !7532)
!7558 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7559, file: !7559, line: 218, type: !6574, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7560)
!7559 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7560 = !{!7561}
!7561 = !DILocalVariable(name: "rnr", arg: 1, scope: !7558, file: !7559, line: 218, type: !40)
!7562 = !DILocation(line: 0, scope: !7558)
!7563 = !DILocation(line: 220, column: 12, scope: !7558)
!7564 = !DILocation(line: 221, column: 13, scope: !7558)
!7565 = !DILocation(line: 222, column: 1, scope: !7558)
!7566 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !547, file: !547, line: 326, type: !53, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !514, retainedNodes: !7567)
!7567 = !{!7568}
!7568 = !DILocalVariable(name: "r_index", scope: !7566, file: !547, line: 328, type: !40)
!7569 = !DILocation(line: 330, column: 17, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7566, file: !547, line: 330, column: 6)
!7571 = !DILocation(line: 330, column: 29, scope: !7570)
!7572 = !DILocation(line: 330, column: 6, scope: !7566)
!7573 = !DILocation(line: 347, column: 2, scope: !7566)
!7574 = !DILocation(line: 0, scope: !7566)
!7575 = !DILocation(line: 364, column: 29, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !547, line: 364, column: 2)
!7577 = distinct !DILexicalBlock(scope: !7566, file: !547, line: 364, column: 2)
!7578 = !DILocation(line: 364, column: 2, scope: !7577)
!7579 = !DILocation(line: 365, column: 25, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7576, file: !547, line: 364, column: 66)
!7581 = !DILocation(line: 365, column: 3, scope: !7580)
!7582 = !DILocation(line: 364, column: 62, scope: !7576)
!7583 = distinct !{!7583, !7578, !7584}
!7584 = !DILocation(line: 366, column: 2, scope: !7577)
!7585 = !DILocation(line: 369, column: 23, scope: !7566)
!7586 = !DILocation(line: 369, column: 21, scope: !7566)
!7587 = !DILocation(line: 372, column: 2, scope: !7566)
!7588 = !DILocation(line: 443, column: 2, scope: !7566)
!7589 = !DILocation(line: 444, column: 1, scope: !7566)
!7590 = distinct !DISubprogram(name: "malloc_prepare", scope: !556, file: !556, line: 79, type: !562, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7591)
!7591 = !{!7592}
!7592 = !DILocalVariable(name: "unused", arg: 1, scope: !7590, file: !556, line: 79, type: !564)
!7593 = !DILocation(line: 0, scope: !7590)
!7594 = !DILocation(line: 83, column: 2, scope: !7590)
!7595 = !DILocation(line: 84, column: 2, scope: !7590)
!7596 = !DILocation(line: 86, column: 2, scope: !7590)
!7597 = distinct !DISubprogram(name: "sys_mutex_init", scope: !581, file: !581, line: 146, type: !7598, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7601)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{null, !7600}
!7600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 32)
!7601 = !{!7602}
!7602 = !DILocalVariable(name: "mutex", arg: 1, scope: !7597, file: !581, line: 146, type: !7600)
!7603 = !DILocation(line: 0, scope: !7597)
!7604 = !DILocation(line: 148, column: 2, scope: !7597)
!7605 = !DILocation(line: 149, column: 1, scope: !7597)
!7606 = distinct !DISubprogram(name: "k_mutex_init", scope: !3588, file: !3588, line: 911, type: !7607, scopeLine: 912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7610)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{!55, !7609}
!7609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!7610 = !{!7611}
!7611 = !DILocalVariable(name: "mutex", arg: 1, scope: !7606, file: !3588, line: 911, type: !7609)
!7612 = !DILocation(line: 0, scope: !7606)
!7613 = !DILocation(line: 919, column: 2, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7606, file: !3588, line: 919, column: 2)
!7615 = !{i64 2155078472}
!7616 = !DILocation(line: 920, column: 9, scope: !7606)
!7617 = !DILocation(line: 920, column: 2, scope: !7606)
!7618 = distinct !DISubprogram(name: "malloc", scope: !556, file: !556, line: 38, type: !6299, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7619)
!7619 = !{!7620, !7621, !7622}
!7620 = !DILocalVariable(name: "size", arg: 1, scope: !7618, file: !556, line: 38, type: !193)
!7621 = !DILocalVariable(name: "lock_ret", scope: !7618, file: !556, line: 40, type: !55)
!7622 = !DILocalVariable(name: "ret", scope: !7618, file: !556, line: 45, type: !39)
!7623 = !DILocation(line: 0, scope: !7618)
!7624 = !DILocation(line: 42, column: 13, scope: !7618)
!7625 = !DILocation(line: 45, column: 14, scope: !7618)
!7626 = !DILocation(line: 48, column: 10, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7618, file: !556, line: 48, column: 6)
!7628 = !DILocation(line: 48, column: 18, scope: !7627)
!7629 = !DILocation(line: 49, column: 3, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7627, file: !556, line: 48, column: 32)
!7631 = !DILocation(line: 49, column: 9, scope: !7630)
!7632 = !DILocation(line: 50, column: 2, scope: !7630)
!7633 = !DILocation(line: 52, column: 9, scope: !7618)
!7634 = !DILocation(line: 54, column: 2, scope: !7618)
!7635 = distinct !DISubprogram(name: "sys_mutex_lock", scope: !581, file: !581, line: 151, type: !7636, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7642)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!55, !7600, !7638}
!7638 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !7639)
!7639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, elements: !7640)
!7640 = !{!7641}
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !7639, file: !31, line: 66, baseType: !30, size: 64)
!7642 = !{!7643, !7644}
!7643 = !DILocalVariable(name: "mutex", arg: 1, scope: !7635, file: !581, line: 151, type: !7600)
!7644 = !DILocalVariable(name: "timeout", arg: 2, scope: !7635, file: !581, line: 151, type: !7638)
!7645 = !DILocation(line: 0, scope: !7635)
!7646 = !DILocation(line: 153, column: 9, scope: !7635)
!7647 = !DILocation(line: 153, column: 2, scope: !7635)
!7648 = distinct !DISubprogram(name: "z_errno", scope: !7649, file: !7649, line: 24, type: !7650, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !2223)
!7649 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!7650 = !DISubroutineType(types: !7651)
!7651 = !{!2889}
!7652 = !DILocation(line: 31, column: 2, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7648, file: !7649, line: 31, column: 2)
!7654 = !{i64 2154599828}
!7655 = !DILocation(line: 32, column: 9, scope: !7648)
!7656 = !DILocation(line: 32, column: 2, scope: !7648)
!7657 = distinct !DISubprogram(name: "sys_mutex_unlock", scope: !581, file: !581, line: 156, type: !7658, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7660)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{!55, !7600}
!7660 = !{!7661}
!7661 = !DILocalVariable(name: "mutex", arg: 1, scope: !7657, file: !581, line: 156, type: !7600)
!7662 = !DILocation(line: 0, scope: !7657)
!7663 = !DILocation(line: 158, column: 9, scope: !7657)
!7664 = !DILocation(line: 158, column: 2, scope: !7657)
!7665 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3588, file: !3588, line: 944, type: !7607, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7666)
!7666 = !{!7667}
!7667 = !DILocalVariable(name: "mutex", arg: 1, scope: !7665, file: !3588, line: 944, type: !7609)
!7668 = !DILocation(line: 0, scope: !7665)
!7669 = !DILocation(line: 952, column: 2, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7665, file: !3588, line: 952, column: 2)
!7671 = !{i64 2155078608}
!7672 = !DILocation(line: 953, column: 9, scope: !7665)
!7673 = !DILocation(line: 953, column: 2, scope: !7665)
!7674 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3588, file: !3588, line: 927, type: !7675, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7677)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{!55, !7609, !7638}
!7677 = !{!7678, !7679}
!7678 = !DILocalVariable(name: "mutex", arg: 1, scope: !7674, file: !3588, line: 927, type: !7609)
!7679 = !DILocalVariable(name: "timeout", arg: 2, scope: !7674, file: !3588, line: 927, type: !7638)
!7680 = !DILocation(line: 0, scope: !7674)
!7681 = !DILocation(line: 936, column: 2, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7674, file: !3588, line: 936, column: 2)
!7683 = !{i64 2155078540}
!7684 = !DILocation(line: 937, column: 9, scope: !7674)
!7685 = !DILocation(line: 937, column: 2, scope: !7674)
!7686 = distinct !DISubprogram(name: "realloc", scope: !556, file: !556, line: 89, type: !7687, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7689)
!7687 = !DISubroutineType(types: !7688)
!7688 = !{!39, !39, !193}
!7689 = !{!7690, !7691, !7692, !7693}
!7690 = !DILocalVariable(name: "ptr", arg: 1, scope: !7686, file: !556, line: 89, type: !39)
!7691 = !DILocalVariable(name: "requested_size", arg: 2, scope: !7686, file: !556, line: 89, type: !193)
!7692 = !DILocalVariable(name: "lock_ret", scope: !7686, file: !556, line: 91, type: !55)
!7693 = !DILocalVariable(name: "ret", scope: !7686, file: !556, line: 96, type: !39)
!7694 = !DILocation(line: 0, scope: !7686)
!7695 = !DILocation(line: 93, column: 13, scope: !7686)
!7696 = !DILocation(line: 96, column: 14, scope: !7686)
!7697 = !DILocation(line: 100, column: 10, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7686, file: !556, line: 100, column: 6)
!7699 = !DILocation(line: 100, column: 18, scope: !7698)
!7700 = !DILocation(line: 101, column: 3, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7698, file: !556, line: 100, column: 42)
!7702 = !DILocation(line: 101, column: 9, scope: !7701)
!7703 = !DILocation(line: 102, column: 2, scope: !7701)
!7704 = !DILocation(line: 104, column: 9, scope: !7686)
!7705 = !DILocation(line: 106, column: 2, scope: !7686)
!7706 = distinct !DISubprogram(name: "free", scope: !556, file: !556, line: 109, type: !6289, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7707)
!7707 = !{!7708, !7709}
!7708 = !DILocalVariable(name: "ptr", arg: 1, scope: !7706, file: !556, line: 109, type: !39)
!7709 = !DILocalVariable(name: "lock_ret", scope: !7706, file: !556, line: 111, type: !55)
!7710 = !DILocation(line: 0, scope: !7706)
!7711 = !DILocation(line: 113, column: 13, scope: !7706)
!7712 = !DILocation(line: 115, column: 2, scope: !7706)
!7713 = !DILocation(line: 116, column: 9, scope: !7706)
!7714 = !DILocation(line: 117, column: 1, scope: !7706)
!7715 = distinct !DISubprogram(name: "calloc", scope: !556, file: !556, line: 146, type: !7716, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7718)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!39, !193, !193}
!7718 = !{!7719, !7720, !7721}
!7719 = !DILocalVariable(name: "nmemb", arg: 1, scope: !7715, file: !556, line: 146, type: !193)
!7720 = !DILocalVariable(name: "size", arg: 2, scope: !7715, file: !556, line: 146, type: !193)
!7721 = !DILocalVariable(name: "ret", scope: !7715, file: !556, line: 148, type: !39)
!7722 = !DILocation(line: 0, scope: !7715)
!7723 = !DILocation(line: 150, column: 6, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7715, file: !556, line: 150, column: 6)
!7725 = !DILocation(line: 150, column: 6, scope: !7715)
!7726 = !DILocation(line: 151, column: 3, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7724, file: !556, line: 150, column: 45)
!7728 = !DILocation(line: 151, column: 9, scope: !7727)
!7729 = !DILocation(line: 152, column: 3, scope: !7727)
!7730 = !DILocation(line: 155, column: 15, scope: !7715)
!7731 = !DILocation(line: 155, column: 8, scope: !7715)
!7732 = !DILocation(line: 157, column: 10, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7715, file: !556, line: 157, column: 6)
!7734 = !DILocation(line: 157, column: 6, scope: !7715)
!7735 = !DILocation(line: 158, column: 9, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7733, file: !556, line: 157, column: 19)
!7737 = !DILocation(line: 159, column: 2, scope: !7736)
!7738 = !DILocation(line: 162, column: 1, scope: !7715)
!7739 = distinct !DISubprogram(name: "size_mul_overflow", scope: !7740, file: !7740, line: 105, type: !7741, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7743)
!7740 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!329, !193, !193, !2896}
!7743 = !{!7744, !7745, !7746}
!7744 = !DILocalVariable(name: "a", arg: 1, scope: !7739, file: !7740, line: 105, type: !193)
!7745 = !DILocalVariable(name: "b", arg: 2, scope: !7739, file: !7740, line: 105, type: !193)
!7746 = !DILocalVariable(name: "result", arg: 3, scope: !7739, file: !7740, line: 105, type: !2896)
!7747 = !DILocation(line: 0, scope: !7739)
!7748 = !DILocation(line: 107, column: 9, scope: !7739)
!7749 = !DILocation(line: 107, column: 2, scope: !7739)
!7750 = distinct !DISubprogram(name: "reallocarray", scope: !556, file: !556, line: 166, type: !7751, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !550, retainedNodes: !7753)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{!39, !39, !193, !193}
!7753 = !{!7754, !7755, !7756}
!7754 = !DILocalVariable(name: "ptr", arg: 1, scope: !7750, file: !556, line: 166, type: !39)
!7755 = !DILocalVariable(name: "nmemb", arg: 2, scope: !7750, file: !556, line: 166, type: !193)
!7756 = !DILocalVariable(name: "size", arg: 3, scope: !7750, file: !556, line: 166, type: !193)
!7757 = !DILocation(line: 0, scope: !7750)
!7758 = !DILocation(line: 169, column: 6, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7750, file: !556, line: 169, column: 6)
!7760 = !DILocation(line: 169, column: 6, scope: !7750)
!7761 = !DILocation(line: 170, column: 3, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7759, file: !556, line: 169, column: 45)
!7763 = !DILocation(line: 170, column: 9, scope: !7762)
!7764 = !DILocation(line: 171, column: 3, scope: !7762)
!7765 = !DILocation(line: 173, column: 22, scope: !7750)
!7766 = !DILocation(line: 173, column: 9, scope: !7750)
!7767 = !DILocation(line: 173, column: 2, scope: !7750)
!7768 = !DILocation(line: 177, column: 1, scope: !7750)
!7769 = distinct !DISubprogram(name: "strcpy", scope: !7770, file: !7770, line: 20, type: !7771, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7775)
!7770 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7771 = !DISubroutineType(types: !7772)
!7772 = !{!1297, !7773, !7774}
!7773 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1297)
!7774 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !319)
!7775 = !{!7776, !7777, !7778}
!7776 = !DILocalVariable(name: "d", arg: 1, scope: !7769, file: !7770, line: 20, type: !7773)
!7777 = !DILocalVariable(name: "s", arg: 2, scope: !7769, file: !7770, line: 20, type: !7774)
!7778 = !DILocalVariable(name: "dest", scope: !7769, file: !7770, line: 22, type: !1297)
!7779 = !DILocation(line: 0, scope: !7769)
!7780 = !DILocation(line: 24, column: 9, scope: !7769)
!7781 = !DILocation(line: 24, column: 12, scope: !7769)
!7782 = !DILocation(line: 24, column: 2, scope: !7769)
!7783 = !DILocation(line: 25, column: 6, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7769, file: !7770, line: 24, column: 21)
!7785 = !DILocation(line: 26, column: 4, scope: !7784)
!7786 = !DILocation(line: 27, column: 4, scope: !7784)
!7787 = distinct !{!7787, !7782, !7788}
!7788 = !DILocation(line: 28, column: 2, scope: !7769)
!7789 = !DILocation(line: 30, column: 5, scope: !7769)
!7790 = !DILocation(line: 32, column: 2, scope: !7769)
!7791 = distinct !DISubprogram(name: "strncpy", scope: !7770, file: !7770, line: 42, type: !7792, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7794)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!1297, !7773, !7774, !193}
!7794 = !{!7795, !7796, !7797, !7798}
!7795 = !DILocalVariable(name: "d", arg: 1, scope: !7791, file: !7770, line: 42, type: !7773)
!7796 = !DILocalVariable(name: "s", arg: 2, scope: !7791, file: !7770, line: 42, type: !7774)
!7797 = !DILocalVariable(name: "n", arg: 3, scope: !7791, file: !7770, line: 42, type: !193)
!7798 = !DILocalVariable(name: "dest", scope: !7791, file: !7770, line: 44, type: !1297)
!7799 = !DILocation(line: 0, scope: !7791)
!7800 = !DILocation(line: 46, column: 12, scope: !7791)
!7801 = !DILocation(line: 46, column: 17, scope: !7791)
!7802 = !DILocation(line: 46, column: 20, scope: !7791)
!7803 = !DILocation(line: 46, column: 23, scope: !7791)
!7804 = !DILocation(line: 46, column: 2, scope: !7791)
!7805 = !DILocation(line: 47, column: 6, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7791, file: !7770, line: 46, column: 32)
!7807 = !DILocation(line: 48, column: 4, scope: !7806)
!7808 = !DILocation(line: 49, column: 4, scope: !7806)
!7809 = !DILocation(line: 50, column: 4, scope: !7806)
!7810 = distinct !{!7810, !7804, !7811}
!7811 = !DILocation(line: 51, column: 2, scope: !7791)
!7812 = !DILocation(line: 54, column: 6, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7791, file: !7770, line: 53, column: 16)
!7814 = !DILocation(line: 55, column: 4, scope: !7813)
!7815 = !DILocation(line: 56, column: 4, scope: !7813)
!7816 = !DILocation(line: 53, column: 11, scope: !7791)
!7817 = !DILocation(line: 53, column: 2, scope: !7791)
!7818 = distinct !{!7818, !7817, !7819}
!7819 = !DILocation(line: 57, column: 2, scope: !7791)
!7820 = !DILocation(line: 59, column: 2, scope: !7791)
!7821 = distinct !DISubprogram(name: "strchr", scope: !7770, file: !7770, line: 69, type: !7822, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7824)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!1297, !319, !55}
!7824 = !{!7825, !7826, !7827}
!7825 = !DILocalVariable(name: "s", arg: 1, scope: !7821, file: !7770, line: 69, type: !319)
!7826 = !DILocalVariable(name: "c", arg: 2, scope: !7821, file: !7770, line: 69, type: !55)
!7827 = !DILocalVariable(name: "tmp", scope: !7821, file: !7770, line: 71, type: !113)
!7828 = !DILocation(line: 0, scope: !7821)
!7829 = !DILocation(line: 73, column: 2, scope: !7821)
!7830 = !DILocation(line: 73, column: 10, scope: !7821)
!7831 = !DILocation(line: 73, column: 13, scope: !7821)
!7832 = !DILocation(line: 73, column: 21, scope: !7821)
!7833 = !DILocation(line: 74, column: 4, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7821, file: !7770, line: 73, column: 38)
!7835 = distinct !{!7835, !7829, !7836}
!7836 = !DILocation(line: 75, column: 2, scope: !7821)
!7837 = !DILocation(line: 77, column: 9, scope: !7821)
!7838 = !DILocation(line: 77, column: 2, scope: !7821)
!7839 = distinct !DISubprogram(name: "strrchr", scope: !7770, file: !7770, line: 87, type: !7822, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7840)
!7840 = !{!7841, !7842, !7843}
!7841 = !DILocalVariable(name: "s", arg: 1, scope: !7839, file: !7770, line: 87, type: !319)
!7842 = !DILocalVariable(name: "c", arg: 2, scope: !7839, file: !7770, line: 87, type: !55)
!7843 = !DILocalVariable(name: "match", scope: !7839, file: !7770, line: 89, type: !1297)
!7844 = !DILocation(line: 0, scope: !7839)
!7845 = !DILocation(line: 91, column: 2, scope: !7839)
!7846 = !DILocation(line: 92, column: 7, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7770, line: 92, column: 7)
!7848 = distinct !DILexicalBlock(scope: !7839, file: !7770, line: 91, column: 5)
!7849 = !DILocation(line: 92, column: 10, scope: !7847)
!7850 = !DILocation(line: 92, column: 7, scope: !7848)
!7851 = !DILocation(line: 95, column: 13, scope: !7839)
!7852 = !DILocation(line: 95, column: 2, scope: !7848)
!7853 = distinct !{!7853, !7845, !7854}
!7854 = !DILocation(line: 95, column: 15, scope: !7839)
!7855 = !DILocation(line: 97, column: 2, scope: !7839)
!7856 = distinct !DISubprogram(name: "strlen", scope: !7770, file: !7770, line: 107, type: !7857, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7859)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{!193, !319}
!7859 = !{!7860, !7861}
!7860 = !DILocalVariable(name: "s", arg: 1, scope: !7856, file: !7770, line: 107, type: !319)
!7861 = !DILocalVariable(name: "n", scope: !7856, file: !7770, line: 109, type: !193)
!7862 = !DILocation(line: 0, scope: !7856)
!7863 = !DILocation(line: 111, column: 9, scope: !7856)
!7864 = !DILocation(line: 111, column: 12, scope: !7856)
!7865 = !DILocation(line: 111, column: 2, scope: !7856)
!7866 = !DILocation(line: 112, column: 4, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7856, file: !7770, line: 111, column: 21)
!7868 = !DILocation(line: 113, column: 4, scope: !7867)
!7869 = distinct !{!7869, !7865, !7870}
!7870 = !DILocation(line: 114, column: 2, scope: !7856)
!7871 = !DILocation(line: 116, column: 2, scope: !7856)
!7872 = distinct !DISubprogram(name: "strnlen", scope: !7770, file: !7770, line: 126, type: !7873, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7875)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!193, !319, !193}
!7875 = !{!7876, !7877, !7878}
!7876 = !DILocalVariable(name: "s", arg: 1, scope: !7872, file: !7770, line: 126, type: !319)
!7877 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7872, file: !7770, line: 126, type: !193)
!7878 = !DILocalVariable(name: "n", scope: !7872, file: !7770, line: 128, type: !193)
!7879 = !DILocation(line: 0, scope: !7872)
!7880 = !DILocation(line: 130, column: 9, scope: !7872)
!7881 = !DILocation(line: 130, column: 12, scope: !7872)
!7882 = !DILocation(line: 130, column: 20, scope: !7872)
!7883 = !DILocation(line: 130, column: 2, scope: !7872)
!7884 = !DILocation(line: 131, column: 4, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7872, file: !7770, line: 130, column: 35)
!7886 = !DILocation(line: 132, column: 4, scope: !7885)
!7887 = distinct !{!7887, !7883, !7888}
!7888 = !DILocation(line: 133, column: 2, scope: !7872)
!7889 = !DILocation(line: 135, column: 2, scope: !7872)
!7890 = distinct !DISubprogram(name: "strcmp", scope: !7770, file: !7770, line: 145, type: !7891, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7893)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{!55, !319, !319}
!7893 = !{!7894, !7895}
!7894 = !DILocalVariable(name: "s1", arg: 1, scope: !7890, file: !7770, line: 145, type: !319)
!7895 = !DILocalVariable(name: "s2", arg: 2, scope: !7890, file: !7770, line: 145, type: !319)
!7896 = !DILocation(line: 0, scope: !7890)
!7897 = !DILocation(line: 147, column: 10, scope: !7890)
!7898 = !DILocation(line: 147, column: 17, scope: !7890)
!7899 = !DILocation(line: 147, column: 14, scope: !7890)
!7900 = !DILocation(line: 147, column: 22, scope: !7890)
!7901 = !DILocation(line: 148, column: 5, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7890, file: !7770, line: 147, column: 40)
!7903 = !DILocation(line: 149, column: 5, scope: !7902)
!7904 = distinct !{!7904, !7905, !7906}
!7905 = !DILocation(line: 147, column: 2, scope: !7890)
!7906 = !DILocation(line: 150, column: 2, scope: !7890)
!7907 = !DILocation(line: 152, column: 9, scope: !7890)
!7908 = !DILocation(line: 152, column: 15, scope: !7890)
!7909 = !DILocation(line: 152, column: 13, scope: !7890)
!7910 = !DILocation(line: 152, column: 2, scope: !7890)
!7911 = distinct !DISubprogram(name: "strncmp", scope: !7770, file: !7770, line: 162, type: !7912, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7914)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!55, !319, !319, !193}
!7914 = !{!7915, !7916, !7917}
!7915 = !DILocalVariable(name: "s1", arg: 1, scope: !7911, file: !7770, line: 162, type: !319)
!7916 = !DILocalVariable(name: "s2", arg: 2, scope: !7911, file: !7770, line: 162, type: !319)
!7917 = !DILocalVariable(name: "n", arg: 3, scope: !7911, file: !7770, line: 162, type: !193)
!7918 = !DILocation(line: 0, scope: !7911)
!7919 = !DILocation(line: 164, column: 17, scope: !7911)
!7920 = !DILocation(line: 164, column: 21, scope: !7911)
!7921 = !DILocation(line: 164, column: 28, scope: !7911)
!7922 = !DILocation(line: 164, column: 25, scope: !7911)
!7923 = !DILocation(line: 164, column: 33, scope: !7911)
!7924 = !DILocation(line: 165, column: 5, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7911, file: !7770, line: 164, column: 51)
!7926 = !DILocation(line: 166, column: 5, scope: !7925)
!7927 = !DILocation(line: 167, column: 4, scope: !7925)
!7928 = distinct !{!7928, !7929, !7930}
!7929 = !DILocation(line: 164, column: 2, scope: !7911)
!7930 = !DILocation(line: 168, column: 2, scope: !7911)
!7931 = !DILocation(line: 170, column: 25, scope: !7911)
!7932 = !DILocation(line: 170, column: 31, scope: !7911)
!7933 = !DILocation(line: 170, column: 29, scope: !7911)
!7934 = !DILocation(line: 170, column: 9, scope: !7911)
!7935 = !DILocation(line: 170, column: 2, scope: !7911)
!7936 = distinct !DISubprogram(name: "strtok_r", scope: !7770, file: !7770, line: 180, type: !7937, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7940)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!1297, !1297, !319, !7939}
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!7940 = !{!7941, !7942, !7943, !7944, !7945}
!7941 = !DILocalVariable(name: "str", arg: 1, scope: !7936, file: !7770, line: 180, type: !1297)
!7942 = !DILocalVariable(name: "sep", arg: 2, scope: !7936, file: !7770, line: 180, type: !319)
!7943 = !DILocalVariable(name: "state", arg: 3, scope: !7936, file: !7770, line: 180, type: !7939)
!7944 = !DILocalVariable(name: "start", scope: !7936, file: !7770, line: 182, type: !1297)
!7945 = !DILocalVariable(name: "end", scope: !7936, file: !7770, line: 182, type: !1297)
!7946 = !DILocation(line: 0, scope: !7936)
!7947 = !DILocation(line: 184, column: 10, scope: !7936)
!7948 = !DILocation(line: 184, column: 22, scope: !7936)
!7949 = !DILocation(line: 187, column: 9, scope: !7936)
!7950 = !DILocation(line: 187, column: 16, scope: !7936)
!7951 = !DILocation(line: 187, column: 19, scope: !7936)
!7952 = !DILocation(line: 187, column: 2, scope: !7936)
!7953 = !DILocation(line: 188, column: 8, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7936, file: !7770, line: 187, column: 40)
!7955 = distinct !{!7955, !7952, !7956}
!7956 = !DILocation(line: 189, column: 2, scope: !7936)
!7957 = !DILocation(line: 198, column: 9, scope: !7936)
!7958 = !DILocation(line: 198, column: 18, scope: !7936)
!7959 = !DILocation(line: 198, column: 17, scope: !7936)
!7960 = !DILocation(line: 198, column: 2, scope: !7936)
!7961 = !DILocation(line: 199, column: 6, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7936, file: !7770, line: 198, column: 37)
!7963 = !DILocation(line: 198, column: 14, scope: !7936)
!7964 = distinct !{!7964, !7960, !7965}
!7965 = !DILocation(line: 200, column: 2, scope: !7936)
!7966 = !DILocation(line: 203, column: 8, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !7770, line: 202, column: 20)
!7968 = distinct !DILexicalBlock(scope: !7936, file: !7770, line: 202, column: 6)
!7969 = !DILocation(line: 204, column: 16, scope: !7967)
!7970 = !DILocation(line: 205, column: 2, scope: !7967)
!7971 = !DILocation(line: 210, column: 1, scope: !7936)
!7972 = distinct !DISubprogram(name: "strcat", scope: !7770, file: !7770, line: 212, type: !7771, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7973)
!7973 = !{!7974, !7975}
!7974 = !DILocalVariable(name: "dest", arg: 1, scope: !7972, file: !7770, line: 212, type: !7773)
!7975 = !DILocalVariable(name: "src", arg: 2, scope: !7972, file: !7770, line: 212, type: !7774)
!7976 = !DILocation(line: 0, scope: !7972)
!7977 = !DILocation(line: 214, column: 16, scope: !7972)
!7978 = !DILocation(line: 214, column: 14, scope: !7972)
!7979 = !DILocation(line: 214, column: 2, scope: !7972)
!7980 = !DILocation(line: 215, column: 2, scope: !7972)
!7981 = distinct !DISubprogram(name: "strncat", scope: !7770, file: !7770, line: 218, type: !7792, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !7982)
!7982 = !{!7983, !7984, !7985, !7986, !7987}
!7983 = !DILocalVariable(name: "dest", arg: 1, scope: !7981, file: !7770, line: 218, type: !7773)
!7984 = !DILocalVariable(name: "src", arg: 2, scope: !7981, file: !7770, line: 218, type: !7774)
!7985 = !DILocalVariable(name: "n", arg: 3, scope: !7981, file: !7770, line: 219, type: !193)
!7986 = !DILocalVariable(name: "orig_dest", scope: !7981, file: !7770, line: 221, type: !1297)
!7987 = !DILocalVariable(name: "len", scope: !7981, file: !7770, line: 222, type: !193)
!7988 = !DILocation(line: 0, scope: !7981)
!7989 = !DILocation(line: 222, column: 15, scope: !7981)
!7990 = !DILocation(line: 224, column: 7, scope: !7981)
!7991 = !DILocation(line: 225, column: 14, scope: !7981)
!7992 = !DILocation(line: 225, column: 19, scope: !7981)
!7993 = !DILocation(line: 225, column: 11, scope: !7981)
!7994 = !DILocation(line: 225, column: 23, scope: !7981)
!7995 = !DILocation(line: 225, column: 28, scope: !7981)
!7996 = !DILocation(line: 225, column: 2, scope: !7981)
!7997 = !DILocation(line: 226, column: 17, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7981, file: !7770, line: 225, column: 38)
!7999 = !DILocation(line: 226, column: 8, scope: !7998)
!8000 = !DILocation(line: 226, column: 11, scope: !7998)
!8001 = distinct !{!8001, !7996, !8002}
!8002 = !DILocation(line: 227, column: 2, scope: !7981)
!8003 = !DILocation(line: 228, column: 8, scope: !7981)
!8004 = !DILocation(line: 230, column: 2, scope: !7981)
!8005 = distinct !DISubprogram(name: "memcmp", scope: !7770, file: !7770, line: 239, type: !8006, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8008)
!8006 = !DISubroutineType(types: !8007)
!8007 = !{!55, !13, !13, !193}
!8008 = !{!8009, !8010, !8011, !8012, !8013}
!8009 = !DILocalVariable(name: "m1", arg: 1, scope: !8005, file: !7770, line: 239, type: !13)
!8010 = !DILocalVariable(name: "m2", arg: 2, scope: !8005, file: !7770, line: 239, type: !13)
!8011 = !DILocalVariable(name: "n", arg: 3, scope: !8005, file: !7770, line: 239, type: !193)
!8012 = !DILocalVariable(name: "c1", scope: !8005, file: !7770, line: 241, type: !319)
!8013 = !DILocalVariable(name: "c2", scope: !8005, file: !7770, line: 242, type: !319)
!8014 = !DILocation(line: 0, scope: !8005)
!8015 = !DILocation(line: 244, column: 7, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8005, file: !7770, line: 244, column: 6)
!8017 = !DILocation(line: 244, column: 6, scope: !8005)
!8018 = !DILocation(line: 248, column: 10, scope: !8005)
!8019 = !DILocation(line: 248, column: 14, scope: !8005)
!8020 = !DILocation(line: 248, column: 19, scope: !8005)
!8021 = !DILocation(line: 248, column: 2, scope: !8005)
!8022 = !DILocation(line: 248, column: 23, scope: !8005)
!8023 = !DILocation(line: 248, column: 30, scope: !8005)
!8024 = !DILocation(line: 248, column: 27, scope: !8005)
!8025 = !DILocation(line: 249, column: 5, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8005, file: !7770, line: 248, column: 36)
!8027 = !DILocation(line: 250, column: 5, scope: !8026)
!8028 = distinct !{!8028, !8021, !8029}
!8029 = !DILocation(line: 251, column: 2, scope: !8005)
!8030 = !DILocation(line: 253, column: 9, scope: !8005)
!8031 = !DILocation(line: 253, column: 15, scope: !8005)
!8032 = !DILocation(line: 253, column: 13, scope: !8005)
!8033 = !DILocation(line: 253, column: 2, scope: !8005)
!8034 = !DILocation(line: 254, column: 1, scope: !8005)
!8035 = distinct !DISubprogram(name: "memmove", scope: !7770, file: !7770, line: 263, type: !8036, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8038)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!39, !39, !13, !193}
!8038 = !{!8039, !8040, !8041, !8042, !8043}
!8039 = !DILocalVariable(name: "d", arg: 1, scope: !8035, file: !7770, line: 263, type: !39)
!8040 = !DILocalVariable(name: "s", arg: 2, scope: !8035, file: !7770, line: 263, type: !13)
!8041 = !DILocalVariable(name: "n", arg: 3, scope: !8035, file: !7770, line: 263, type: !193)
!8042 = !DILocalVariable(name: "dest", scope: !8035, file: !7770, line: 265, type: !1297)
!8043 = !DILocalVariable(name: "src", scope: !8035, file: !7770, line: 266, type: !319)
!8044 = !DILocation(line: 0, scope: !8035)
!8045 = !DILocation(line: 268, column: 21, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8035, file: !7770, line: 268, column: 6)
!8047 = !DILocation(line: 268, column: 28, scope: !8046)
!8048 = !DILocation(line: 268, column: 6, scope: !8035)
!8049 = !DILocation(line: 280, column: 12, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8046, file: !7770, line: 278, column: 9)
!8051 = !DILocation(line: 280, column: 3, scope: !8050)
!8052 = !DILocation(line: 275, column: 5, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8054, file: !7770, line: 274, column: 17)
!8054 = distinct !DILexicalBlock(scope: !8046, file: !7770, line: 268, column: 33)
!8055 = !DILocation(line: 276, column: 14, scope: !8053)
!8056 = !DILocation(line: 276, column: 4, scope: !8053)
!8057 = !DILocation(line: 276, column: 12, scope: !8053)
!8058 = !DILocation(line: 274, column: 12, scope: !8054)
!8059 = !DILocation(line: 274, column: 3, scope: !8054)
!8060 = distinct !{!8060, !8059, !8061}
!8061 = !DILocation(line: 277, column: 3, scope: !8054)
!8062 = !DILocation(line: 281, column: 12, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8050, file: !7770, line: 280, column: 17)
!8064 = !DILocation(line: 281, column: 10, scope: !8063)
!8065 = !DILocation(line: 282, column: 8, scope: !8063)
!8066 = !DILocation(line: 283, column: 7, scope: !8063)
!8067 = !DILocation(line: 284, column: 5, scope: !8063)
!8068 = distinct !{!8068, !8051, !8069}
!8069 = !DILocation(line: 285, column: 3, scope: !8050)
!8070 = !DILocation(line: 288, column: 2, scope: !8035)
!8071 = distinct !DISubprogram(name: "memcpy", scope: !7770, file: !7770, line: 298, type: !8072, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8076)
!8072 = !DISubroutineType(types: !8073)
!8073 = !{!39, !8074, !8075, !193}
!8074 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !39)
!8075 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8076 = !{!8077, !8078, !8079, !8080, !8081}
!8077 = !DILocalVariable(name: "d", arg: 1, scope: !8071, file: !7770, line: 298, type: !8074)
!8078 = !DILocalVariable(name: "s", arg: 2, scope: !8071, file: !7770, line: 298, type: !8075)
!8079 = !DILocalVariable(name: "n", arg: 3, scope: !8071, file: !7770, line: 298, type: !193)
!8080 = !DILocalVariable(name: "d_byte", scope: !8071, file: !7770, line: 302, type: !1130)
!8081 = !DILocalVariable(name: "s_byte", scope: !8071, file: !7770, line: 303, type: !3225)
!8082 = !DILocation(line: 0, scope: !8071)
!8083 = !DILocation(line: 337, column: 11, scope: !8071)
!8084 = !DILocation(line: 337, column: 2, scope: !8071)
!8085 = !DILocation(line: 338, column: 25, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8071, file: !7770, line: 337, column: 16)
!8087 = !DILocation(line: 338, column: 17, scope: !8086)
!8088 = !DILocation(line: 338, column: 11, scope: !8086)
!8089 = !DILocation(line: 338, column: 15, scope: !8086)
!8090 = !DILocation(line: 339, column: 4, scope: !8086)
!8091 = distinct !{!8091, !8084, !8092}
!8092 = !DILocation(line: 340, column: 2, scope: !8071)
!8093 = !DILocation(line: 342, column: 2, scope: !8071)
!8094 = distinct !DISubprogram(name: "memset", scope: !7770, file: !7770, line: 352, type: !8095, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8097)
!8095 = !DISubroutineType(types: !8096)
!8096 = !{!39, !39, !55, !193}
!8097 = !{!8098, !8099, !8100, !8101, !8102}
!8098 = !DILocalVariable(name: "buf", arg: 1, scope: !8094, file: !7770, line: 352, type: !39)
!8099 = !DILocalVariable(name: "c", arg: 2, scope: !8094, file: !7770, line: 352, type: !55)
!8100 = !DILocalVariable(name: "n", arg: 3, scope: !8094, file: !7770, line: 352, type: !193)
!8101 = !DILocalVariable(name: "d_byte", scope: !8094, file: !7770, line: 356, type: !1130)
!8102 = !DILocalVariable(name: "c_byte", scope: !8094, file: !7770, line: 357, type: !144)
!8103 = !DILocation(line: 0, scope: !8094)
!8104 = !DILocation(line: 357, column: 25, scope: !8094)
!8105 = !DILocation(line: 389, column: 11, scope: !8094)
!8106 = !DILocation(line: 389, column: 2, scope: !8094)
!8107 = !DILocation(line: 390, column: 11, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8094, file: !7770, line: 389, column: 16)
!8109 = !DILocation(line: 390, column: 15, scope: !8108)
!8110 = !DILocation(line: 391, column: 4, scope: !8108)
!8111 = distinct !{!8111, !8106, !8112}
!8112 = !DILocation(line: 392, column: 2, scope: !8094)
!8113 = !DILocation(line: 394, column: 2, scope: !8094)
!8114 = distinct !DISubprogram(name: "memchr", scope: !7770, file: !7770, line: 404, type: !8115, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3222, retainedNodes: !8117)
!8115 = !DISubroutineType(types: !8116)
!8116 = !{!39, !13, !55, !193}
!8117 = !{!8118, !8119, !8120, !8121}
!8118 = !DILocalVariable(name: "s", arg: 1, scope: !8114, file: !7770, line: 404, type: !13)
!8119 = !DILocalVariable(name: "c", arg: 2, scope: !8114, file: !7770, line: 404, type: !55)
!8120 = !DILocalVariable(name: "n", arg: 3, scope: !8114, file: !7770, line: 404, type: !193)
!8121 = !DILocalVariable(name: "p", scope: !8122, file: !7770, line: 407, type: !3225)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !7770, line: 406, column: 14)
!8123 = distinct !DILexicalBlock(scope: !8114, file: !7770, line: 406, column: 6)
!8124 = !DILocation(line: 0, scope: !8114)
!8125 = !DILocation(line: 406, column: 8, scope: !8123)
!8126 = !DILocation(line: 406, column: 6, scope: !8114)
!8127 = !DILocation(line: 409, column: 3, scope: !8122)
!8128 = !DILocation(line: 0, scope: !8122)
!8129 = !DILocation(line: 410, column: 8, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !7770, line: 410, column: 8)
!8131 = distinct !DILexicalBlock(scope: !8122, file: !7770, line: 409, column: 6)
!8132 = !DILocation(line: 410, column: 13, scope: !8130)
!8133 = !DILocation(line: 410, column: 8, scope: !8131)
!8134 = distinct !{!8134, !8127, !8135}
!8135 = !DILocation(line: 414, column: 20, scope: !8122)
!8136 = !DILocation(line: 417, column: 2, scope: !8114)
!8137 = !DILocation(line: 418, column: 1, scope: !8114)
!8138 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !696, file: !696, line: 23, type: !3789, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8139)
!8139 = !{!8140}
!8140 = !DILocalVariable(name: "hook", arg: 1, scope: !8138, file: !696, line: 23, type: !282)
!8141 = !DILocation(line: 0, scope: !8138)
!8142 = !DILocation(line: 25, column: 15, scope: !8138)
!8143 = !DILocation(line: 26, column: 1, scope: !8138)
!8144 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !696, file: !696, line: 14, type: !283, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8145)
!8145 = !{!8146}
!8146 = !DILocalVariable(name: "c", arg: 1, scope: !8144, file: !696, line: 14, type: !55)
!8147 = !DILocation(line: 0, scope: !8144)
!8148 = !DILocation(line: 18, column: 2, scope: !8144)
!8149 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !696, file: !696, line: 28, type: !8150, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8152)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{!55, !55, !692}
!8152 = !{!8153, !8154}
!8153 = !DILocalVariable(name: "c", arg: 1, scope: !8149, file: !696, line: 28, type: !55)
!8154 = !DILocalVariable(name: "stream", arg: 2, scope: !8149, file: !696, line: 28, type: !692)
!8155 = !DILocation(line: 0, scope: !8149)
!8156 = !DILocation(line: 30, column: 27, scope: !8149)
!8157 = !DILocation(line: 30, column: 50, scope: !8149)
!8158 = !DILocation(line: 30, column: 9, scope: !8149)
!8159 = !DILocation(line: 30, column: 2, scope: !8149)
!8160 = distinct !DISubprogram(name: "fputc", scope: !696, file: !696, line: 41, type: !8150, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8161)
!8161 = !{!8162, !8163}
!8162 = !DILocalVariable(name: "c", arg: 1, scope: !8160, file: !696, line: 41, type: !55)
!8163 = !DILocalVariable(name: "stream", arg: 2, scope: !8160, file: !696, line: 41, type: !692)
!8164 = !DILocation(line: 0, scope: !8160)
!8165 = !DILocation(line: 43, column: 9, scope: !8160)
!8166 = !DILocation(line: 43, column: 2, scope: !8160)
!8167 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8168, file: !8168, line: 72, type: !8150, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8169)
!8168 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!8169 = !{!8170, !8171}
!8170 = !DILocalVariable(name: "c", arg: 1, scope: !8167, file: !8168, line: 72, type: !55)
!8171 = !DILocalVariable(name: "stream", arg: 2, scope: !8167, file: !8168, line: 72, type: !692)
!8172 = !DILocation(line: 0, scope: !8167)
!8173 = !DILocation(line: 81, column: 2, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8167, file: !8168, line: 81, column: 2)
!8175 = !{i64 2155123386}
!8176 = !DILocation(line: 82, column: 9, scope: !8167)
!8177 = !DILocation(line: 82, column: 2, scope: !8167)
!8178 = distinct !DISubprogram(name: "fputs", scope: !696, file: !696, line: 46, type: !8179, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8182)
!8179 = !DISubroutineType(types: !8180)
!8180 = !{!55, !7774, !8181}
!8181 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !692)
!8182 = !{!8183, !8184, !8185, !8186}
!8183 = !DILocalVariable(name: "s", arg: 1, scope: !8178, file: !696, line: 46, type: !7774)
!8184 = !DILocalVariable(name: "stream", arg: 2, scope: !8178, file: !696, line: 46, type: !8181)
!8185 = !DILocalVariable(name: "len", scope: !8178, file: !696, line: 48, type: !55)
!8186 = !DILocalVariable(name: "ret", scope: !8178, file: !696, line: 49, type: !55)
!8187 = !DILocation(line: 0, scope: !8178)
!8188 = !DILocation(line: 48, column: 12, scope: !8178)
!8189 = !DILocation(line: 51, column: 8, scope: !8178)
!8190 = !DILocation(line: 53, column: 13, scope: !8178)
!8191 = !DILocation(line: 53, column: 9, scope: !8178)
!8192 = !DILocation(line: 53, column: 2, scope: !8178)
!8193 = distinct !DISubprogram(name: "fwrite", scope: !696, file: !696, line: 99, type: !8194, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8196)
!8194 = !DISubroutineType(types: !8195)
!8195 = !{!193, !8075, !193, !193, !8181}
!8196 = !{!8197, !8198, !8199, !8200}
!8197 = !DILocalVariable(name: "ptr", arg: 1, scope: !8193, file: !696, line: 99, type: !8075)
!8198 = !DILocalVariable(name: "size", arg: 2, scope: !8193, file: !696, line: 99, type: !193)
!8199 = !DILocalVariable(name: "nitems", arg: 3, scope: !8193, file: !696, line: 99, type: !193)
!8200 = !DILocalVariable(name: "stream", arg: 4, scope: !8193, file: !696, line: 100, type: !8181)
!8201 = !DILocation(line: 0, scope: !8193)
!8202 = !DILocation(line: 102, column: 9, scope: !8193)
!8203 = !DILocation(line: 102, column: 2, scope: !8193)
!8204 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8168, file: !8168, line: 96, type: !8194, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8205)
!8205 = !{!8206, !8207, !8208, !8209}
!8206 = !DILocalVariable(name: "ptr", arg: 1, scope: !8204, file: !8168, line: 96, type: !8075)
!8207 = !DILocalVariable(name: "size", arg: 2, scope: !8204, file: !8168, line: 96, type: !193)
!8208 = !DILocalVariable(name: "nitems", arg: 3, scope: !8204, file: !8168, line: 96, type: !193)
!8209 = !DILocalVariable(name: "stream", arg: 4, scope: !8204, file: !8168, line: 96, type: !8181)
!8210 = !DILocation(line: 0, scope: !8204)
!8211 = !DILocation(line: 107, column: 2, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8204, file: !8168, line: 107, column: 2)
!8213 = !{i64 2155123490}
!8214 = !DILocation(line: 108, column: 9, scope: !8204)
!8215 = !DILocation(line: 108, column: 2, scope: !8204)
!8216 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !696, file: !696, line: 56, type: !8194, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8217)
!8217 = !{!8218, !8219, !8220, !8221, !8222, !8223, !8224, !8225}
!8218 = !DILocalVariable(name: "ptr", arg: 1, scope: !8216, file: !696, line: 56, type: !8075)
!8219 = !DILocalVariable(name: "size", arg: 2, scope: !8216, file: !696, line: 56, type: !193)
!8220 = !DILocalVariable(name: "nitems", arg: 3, scope: !8216, file: !696, line: 57, type: !193)
!8221 = !DILocalVariable(name: "stream", arg: 4, scope: !8216, file: !696, line: 57, type: !8181)
!8222 = !DILocalVariable(name: "i", scope: !8216, file: !696, line: 59, type: !193)
!8223 = !DILocalVariable(name: "j", scope: !8216, file: !696, line: 60, type: !193)
!8224 = !DILocalVariable(name: "p", scope: !8216, file: !696, line: 61, type: !3225)
!8225 = !DILabel(scope: !8216, name: "done", file: !696, line: 82)
!8226 = !DILocation(line: 0, scope: !8216)
!8227 = !DILocation(line: 63, column: 14, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8216, file: !696, line: 63, column: 6)
!8229 = !DILocation(line: 63, column: 24, scope: !8228)
!8230 = !DILocation(line: 72, column: 3, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8216, file: !696, line: 70, column: 5)
!8232 = !DILocation(line: 0, scope: !8231)
!8233 = !DILocation(line: 73, column: 8, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !696, line: 73, column: 8)
!8235 = distinct !DILexicalBlock(scope: !8231, file: !696, line: 72, column: 6)
!8236 = !DILocation(line: 73, column: 29, scope: !8234)
!8237 = !DILocation(line: 73, column: 27, scope: !8234)
!8238 = !DILocation(line: 73, column: 21, scope: !8234)
!8239 = !DILocation(line: 73, column: 33, scope: !8234)
!8240 = !DILocation(line: 73, column: 8, scope: !8235)
!8241 = !DILocation(line: 76, column: 5, scope: !8235)
!8242 = !DILocation(line: 77, column: 14, scope: !8231)
!8243 = !DILocation(line: 77, column: 3, scope: !8235)
!8244 = distinct !{!8244, !8230, !8245}
!8245 = !DILocation(line: 77, column: 17, scope: !8231)
!8246 = !DILocation(line: 79, column: 4, scope: !8231)
!8247 = !DILocation(line: 80, column: 13, scope: !8216)
!8248 = !DILocation(line: 80, column: 2, scope: !8231)
!8249 = distinct !{!8249, !8250, !8251}
!8250 = !DILocation(line: 70, column: 2, scope: !8216)
!8251 = !DILocation(line: 80, column: 16, scope: !8216)
!8252 = !DILocation(line: 82, column: 1, scope: !8216)
!8253 = !DILocation(line: 83, column: 17, scope: !8216)
!8254 = !DILocation(line: 83, column: 2, scope: !8216)
!8255 = !DILocation(line: 84, column: 1, scope: !8216)
!8256 = distinct !DISubprogram(name: "puts", scope: !696, file: !696, line: 106, type: !8257, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !689, retainedNodes: !8259)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{!55, !319}
!8259 = !{!8260}
!8260 = !DILocalVariable(name: "s", arg: 1, scope: !8256, file: !696, line: 106, type: !319)
!8261 = !DILocation(line: 0, scope: !8256)
!8262 = !DILocation(line: 108, column: 6, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8256, file: !696, line: 108, column: 6)
!8264 = !DILocation(line: 108, column: 23, scope: !8263)
!8265 = !DILocation(line: 108, column: 6, scope: !8256)
!8266 = !DILocation(line: 112, column: 9, scope: !8256)
!8267 = !DILocation(line: 112, column: 29, scope: !8256)
!8268 = !DILocation(line: 112, column: 2, scope: !8256)
!8269 = !DILocation(line: 113, column: 1, scope: !8256)
!8270 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !837, file: !837, line: 368, type: !890, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8271)
!8271 = !{!8272}
!8272 = !DILocalVariable(name: "dev", arg: 1, scope: !8270, file: !837, line: 368, type: !866)
!8273 = !DILocation(line: 0, scope: !8270)
!8274 = !DILocation(line: 370, column: 2, scope: !8270)
!8275 = !DILocation(line: 371, column: 1, scope: !8270)
!8276 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !837, file: !837, line: 243, type: !8277, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8279)
!8277 = !DISubroutineType(types: !8278)
!8278 = !{null, !55, !55, !866}
!8279 = !{!8280, !8281, !8282, !8283, !8285}
!8280 = !DILocalVariable(name: "min", arg: 1, scope: !8276, file: !837, line: 243, type: !55)
!8281 = !DILocalVariable(name: "max", arg: 2, scope: !8276, file: !837, line: 243, type: !55)
!8282 = !DILocalVariable(name: "dev", arg: 3, scope: !8276, file: !837, line: 243, type: !866)
!8283 = !DILocalVariable(name: "data", scope: !8276, file: !837, line: 245, type: !8284)
!8284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!8285 = !DILocalVariable(name: "line", scope: !8276, file: !837, line: 246, type: !55)
!8286 = !DILocation(line: 0, scope: !8276)
!8287 = !DILocation(line: 245, column: 38, scope: !8276)
!8288 = !DILocation(line: 249, column: 24, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !837, line: 249, column: 2)
!8290 = distinct !DILexicalBlock(scope: !8276, file: !837, line: 249, column: 2)
!8291 = !DILocation(line: 249, column: 2, scope: !8290)
!8292 = !DILocation(line: 251, column: 7, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !837, line: 251, column: 7)
!8294 = distinct !DILexicalBlock(scope: !8289, file: !837, line: 249, column: 39)
!8295 = !DILocation(line: 251, column: 7, scope: !8294)
!8296 = !DILocation(line: 253, column: 4, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8293, file: !837, line: 251, column: 36)
!8298 = !DILocation(line: 256, column: 24, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8297, file: !837, line: 256, column: 8)
!8300 = !DILocation(line: 256, column: 9, scope: !8299)
!8301 = !DILocation(line: 256, column: 8, scope: !8297)
!8302 = !DILocation(line: 260, column: 43, scope: !8297)
!8303 = !DILocation(line: 260, column: 4, scope: !8297)
!8304 = !DILocation(line: 261, column: 3, scope: !8297)
!8305 = !DILocation(line: 249, column: 35, scope: !8289)
!8306 = distinct !{!8306, !8291, !8307}
!8307 = !DILocation(line: 262, column: 2, scope: !8290)
!8308 = !DILocation(line: 263, column: 1, scope: !8276)
!8309 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !837, file: !837, line: 158, type: !283, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8310)
!8310 = !{!8311}
!8311 = !DILocalVariable(name: "line", arg: 1, scope: !8309, file: !837, line: 158, type: !55)
!8312 = !DILocation(line: 0, scope: !8309)
!8313 = !DILocation(line: 170, column: 38, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !837, line: 160, column: 17)
!8315 = distinct !DILexicalBlock(scope: !8309, file: !837, line: 160, column: 6)
!8316 = !DILocation(line: 170, column: 10, scope: !8314)
!8317 = !DILocation(line: 176, column: 1, scope: !8309)
!8318 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !837, file: !837, line: 183, type: !8319, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8321)
!8319 = !DISubroutineType(types: !8320)
!8320 = !{null, !55}
!8321 = !{!8322}
!8322 = !DILocalVariable(name: "line", arg: 1, scope: !8318, file: !837, line: 183, type: !55)
!8323 = !DILocation(line: 0, scope: !8318)
!8324 = !DILocation(line: 195, column: 28, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !837, line: 185, column: 17)
!8326 = distinct !DILexicalBlock(scope: !8318, file: !837, line: 185, column: 6)
!8327 = !DILocation(line: 195, column: 3, scope: !8325)
!8328 = !DILocation(line: 200, column: 1, scope: !8318)
!8329 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8330, file: !8330, line: 910, type: !6574, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8331)
!8330 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8331 = !{!8332}
!8332 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8329, file: !8330, line: 910, type: !40)
!8333 = !DILocation(line: 0, scope: !8329)
!8334 = !DILocation(line: 912, column: 3, scope: !8329)
!8335 = !DILocation(line: 913, column: 1, scope: !8329)
!8336 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8330, file: !8330, line: 834, type: !7505, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8337)
!8337 = !{!8338}
!8338 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8336, file: !8330, line: 834, type: !40)
!8339 = !DILocation(line: 0, scope: !8336)
!8340 = !DILocation(line: 836, column: 11, scope: !8336)
!8341 = !DILocation(line: 836, column: 40, scope: !8336)
!8342 = !DILocation(line: 836, column: 3, scope: !8336)
!8343 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !837, file: !837, line: 304, type: !890, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8344)
!8344 = !{!8345}
!8345 = !DILocalVariable(name: "dev", arg: 1, scope: !8343, file: !837, line: 304, type: !866)
!8346 = !DILocation(line: 0, scope: !8343)
!8347 = !DILocation(line: 306, column: 2, scope: !8343)
!8348 = !DILocation(line: 307, column: 1, scope: !8343)
!8349 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !837, file: !837, line: 299, type: !890, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8350)
!8350 = !{!8351}
!8351 = !DILocalVariable(name: "dev", arg: 1, scope: !8349, file: !837, line: 299, type: !866)
!8352 = !DILocation(line: 0, scope: !8349)
!8353 = !DILocation(line: 301, column: 2, scope: !8349)
!8354 = !DILocation(line: 302, column: 1, scope: !8349)
!8355 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !837, file: !837, line: 294, type: !890, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8356)
!8356 = !{!8357}
!8357 = !DILocalVariable(name: "dev", arg: 1, scope: !8355, file: !837, line: 294, type: !866)
!8358 = !DILocation(line: 0, scope: !8355)
!8359 = !DILocation(line: 296, column: 2, scope: !8355)
!8360 = !DILocation(line: 297, column: 1, scope: !8355)
!8361 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !837, file: !837, line: 397, type: !890, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8362)
!8362 = !{!8363}
!8363 = !DILocalVariable(name: "dev", arg: 1, scope: !8361, file: !837, line: 397, type: !866)
!8364 = !DILocation(line: 0, scope: !8361)
!8365 = !DILocation(line: 399, column: 2, scope: !8361)
!8366 = !DILocation(line: 400, column: 1, scope: !8361)
!8367 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !837, file: !837, line: 392, type: !890, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8368)
!8368 = !{!8369}
!8369 = !DILocalVariable(name: "dev", arg: 1, scope: !8367, file: !837, line: 392, type: !866)
!8370 = !DILocation(line: 0, scope: !8367)
!8371 = !DILocation(line: 394, column: 2, scope: !8367)
!8372 = !DILocation(line: 395, column: 1, scope: !8367)
!8373 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !837, file: !837, line: 289, type: !890, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8374)
!8374 = !{!8375}
!8375 = !DILocalVariable(name: "dev", arg: 1, scope: !8373, file: !837, line: 289, type: !866)
!8376 = !DILocation(line: 0, scope: !8373)
!8377 = !DILocation(line: 291, column: 2, scope: !8373)
!8378 = !DILocation(line: 292, column: 1, scope: !8373)
!8379 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !837, file: !837, line: 387, type: !890, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8380)
!8380 = !{!8381}
!8381 = !DILocalVariable(name: "dev", arg: 1, scope: !8379, file: !837, line: 387, type: !866)
!8382 = !DILocation(line: 0, scope: !8379)
!8383 = !DILocation(line: 389, column: 2, scope: !8379)
!8384 = !DILocation(line: 390, column: 1, scope: !8379)
!8385 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !837, file: !837, line: 382, type: !890, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8386)
!8386 = !{!8387}
!8387 = !DILocalVariable(name: "dev", arg: 1, scope: !8385, file: !837, line: 382, type: !866)
!8388 = !DILocation(line: 0, scope: !8385)
!8389 = !DILocation(line: 384, column: 2, scope: !8385)
!8390 = !DILocation(line: 385, column: 1, scope: !8385)
!8391 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !837, file: !837, line: 373, type: !890, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8392)
!8392 = !{!8393}
!8393 = !DILocalVariable(name: "dev", arg: 1, scope: !8391, file: !837, line: 373, type: !866)
!8394 = !DILocation(line: 0, scope: !8391)
!8395 = !DILocation(line: 375, column: 2, scope: !8391)
!8396 = !DILocation(line: 376, column: 1, scope: !8391)
!8397 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !837, file: !837, line: 284, type: !890, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8398)
!8398 = !{!8399}
!8399 = !DILocalVariable(name: "dev", arg: 1, scope: !8397, file: !837, line: 284, type: !866)
!8400 = !DILocation(line: 0, scope: !8397)
!8401 = !DILocation(line: 286, column: 2, scope: !8397)
!8402 = !DILocation(line: 287, column: 1, scope: !8397)
!8403 = distinct !DISubprogram(name: "stm32_exti_init", scope: !837, file: !837, line: 416, type: !864, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8404)
!8404 = !{!8405}
!8405 = !DILocalVariable(name: "dev", arg: 1, scope: !8403, file: !837, line: 416, type: !866)
!8406 = !DILocation(line: 0, scope: !8403)
!8407 = !DILocation(line: 418, column: 2, scope: !8403)
!8408 = !DILocation(line: 420, column: 2, scope: !8403)
!8409 = !DILocation(line: 0, scope: !889)
!8410 = !DILocation(line: 493, column: 2, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !889, file: !837, line: 493, column: 2)
!8412 = !DILocation(line: 497, column: 2, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !889, file: !837, line: 497, column: 2)
!8414 = !DILocation(line: 507, column: 2, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !889, file: !837, line: 507, column: 2)
!8416 = !DILocation(line: 512, column: 2, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !889, file: !837, line: 512, column: 2)
!8418 = !DILocation(line: 516, column: 2, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !889, file: !837, line: 516, column: 2)
!8420 = !DILocation(line: 523, column: 2, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !889, file: !837, line: 523, column: 2)
!8422 = !DILocation(line: 527, column: 2, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !889, file: !837, line: 527, column: 2)
!8424 = !DILocation(line: 581, column: 2, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !889, file: !837, line: 581, column: 2)
!8426 = !DILocation(line: 586, column: 2, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !889, file: !837, line: 586, column: 2)
!8428 = !DILocation(line: 591, column: 2, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !889, file: !837, line: 591, column: 2)
!8430 = !DILocation(line: 595, column: 2, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !889, file: !837, line: 595, column: 2)
!8432 = !DILocation(line: 607, column: 1, scope: !889)
!8433 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !837, file: !837, line: 112, type: !8319, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8434)
!8434 = !{!8435, !8436}
!8435 = !DILocalVariable(name: "line", arg: 1, scope: !8433, file: !837, line: 112, type: !55)
!8436 = !DILocalVariable(name: "irqnum", scope: !8433, file: !837, line: 114, type: !55)
!8437 = !DILocation(line: 0, scope: !8433)
!8438 = !DILocation(line: 121, column: 11, scope: !8433)
!8439 = !DILocation(line: 130, column: 26, scope: !8433)
!8440 = !DILocation(line: 130, column: 2, scope: !8433)
!8441 = !DILocation(line: 134, column: 2, scope: !8433)
!8442 = !DILocation(line: 135, column: 1, scope: !8433)
!8443 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8330, file: !8330, line: 268, type: !6574, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8444)
!8444 = !{!8445}
!8445 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8443, file: !8330, line: 268, type: !40)
!8446 = !DILocation(line: 0, scope: !8443)
!8447 = !DILocation(line: 270, column: 3, scope: !8443)
!8448 = !DILocation(line: 271, column: 1, scope: !8443)
!8449 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !837, file: !837, line: 137, type: !8319, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8450)
!8450 = !{!8451}
!8451 = !DILocalVariable(name: "line", arg: 1, scope: !8449, file: !837, line: 137, type: !55)
!8452 = !DILocation(line: 0, scope: !8449)
!8453 = !DILocation(line: 141, column: 11, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8449, file: !837, line: 141, column: 6)
!8455 = !DILocation(line: 141, column: 6, scope: !8449)
!8456 = !DILocation(line: 145, column: 28, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8454, file: !837, line: 141, column: 17)
!8458 = !DILocation(line: 145, column: 3, scope: !8457)
!8459 = !DILocation(line: 147, column: 2, scope: !8457)
!8460 = !DILocation(line: 151, column: 1, scope: !8449)
!8461 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8330, file: !8330, line: 309, type: !6574, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8462)
!8462 = !{!8463}
!8463 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8461, file: !8330, line: 309, type: !40)
!8464 = !DILocation(line: 0, scope: !8461)
!8465 = !DILocation(line: 311, column: 3, scope: !8461)
!8466 = !DILocation(line: 312, column: 1, scope: !8461)
!8467 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !837, file: !837, line: 202, type: !8468, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8470)
!8468 = !DISubroutineType(types: !8469)
!8469 = !{null, !55, !55}
!8470 = !{!8471, !8472}
!8471 = !DILocalVariable(name: "line", arg: 1, scope: !8467, file: !837, line: 202, type: !55)
!8472 = !DILocalVariable(name: "trigger", arg: 2, scope: !8467, file: !837, line: 202, type: !55)
!8473 = !DILocation(line: 0, scope: !8467)
!8474 = !DILocation(line: 211, column: 2, scope: !8467)
!8475 = !DILocation(line: 213, column: 36, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8467, file: !837, line: 211, column: 19)
!8477 = !DILocation(line: 213, column: 3, scope: !8476)
!8478 = !DILocation(line: 214, column: 3, scope: !8476)
!8479 = !DILocation(line: 215, column: 3, scope: !8476)
!8480 = !DILocation(line: 217, column: 35, scope: !8476)
!8481 = !DILocation(line: 217, column: 3, scope: !8476)
!8482 = !DILocation(line: 218, column: 3, scope: !8476)
!8483 = !DILocation(line: 219, column: 3, scope: !8476)
!8484 = !DILocation(line: 221, column: 36, scope: !8476)
!8485 = !DILocation(line: 221, column: 3, scope: !8476)
!8486 = !DILocation(line: 222, column: 3, scope: !8476)
!8487 = !DILocation(line: 223, column: 3, scope: !8476)
!8488 = !DILocation(line: 225, column: 35, scope: !8476)
!8489 = !DILocation(line: 225, column: 3, scope: !8476)
!8490 = !DILocation(line: 226, column: 3, scope: !8476)
!8491 = !DILocation(line: 227, column: 3, scope: !8476)
!8492 = !DILocation(line: 232, column: 1, scope: !8467)
!8493 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8330, file: !8330, line: 573, type: !6574, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8494)
!8494 = !{!8495}
!8495 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8493, file: !8330, line: 573, type: !40)
!8496 = !DILocation(line: 0, scope: !8493)
!8497 = !DILocation(line: 575, column: 3, scope: !8493)
!8498 = !DILocation(line: 577, column: 1, scope: !8493)
!8499 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8330, file: !8330, line: 703, type: !6574, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8500)
!8500 = !{!8501}
!8501 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8499, file: !8330, line: 703, type: !40)
!8502 = !DILocation(line: 0, scope: !8499)
!8503 = !DILocation(line: 705, column: 3, scope: !8499)
!8504 = !DILocation(line: 706, column: 1, scope: !8499)
!8505 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8330, file: !8330, line: 529, type: !6574, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8506)
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8505, file: !8330, line: 529, type: !40)
!8508 = !DILocation(line: 0, scope: !8505)
!8509 = !DILocation(line: 531, column: 3, scope: !8505)
!8510 = !DILocation(line: 533, column: 1, scope: !8505)
!8511 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8330, file: !8330, line: 661, type: !6574, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8512)
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8511, file: !8330, line: 661, type: !40)
!8514 = !DILocation(line: 0, scope: !8511)
!8515 = !DILocation(line: 663, column: 3, scope: !8511)
!8516 = !DILocation(line: 664, column: 1, scope: !8511)
!8517 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !837, file: !837, line: 433, type: !8518, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8520)
!8518 = !DISubroutineType(types: !8519)
!8519 = !{!55, !55, !877, !39}
!8520 = !{!8521, !8522, !8523, !8524, !8526}
!8521 = !DILocalVariable(name: "line", arg: 1, scope: !8517, file: !837, line: 433, type: !55)
!8522 = !DILocalVariable(name: "cb", arg: 2, scope: !8517, file: !837, line: 433, type: !877)
!8523 = !DILocalVariable(name: "arg", arg: 3, scope: !8517, file: !837, line: 433, type: !39)
!8524 = !DILocalVariable(name: "dev", scope: !8517, file: !837, line: 435, type: !8525)
!8525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!8526 = !DILocalVariable(name: "data", scope: !8517, file: !837, line: 436, type: !8284)
!8527 = !DILocation(line: 0, scope: !8517)
!8528 = !DILocation(line: 438, column: 21, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8517, file: !837, line: 438, column: 6)
!8530 = !DILocation(line: 438, column: 6, scope: !8529)
!8531 = !DILocation(line: 438, column: 6, scope: !8517)
!8532 = !DILocation(line: 442, column: 20, scope: !8517)
!8533 = !DILocation(line: 443, column: 17, scope: !8517)
!8534 = !DILocation(line: 443, column: 22, scope: !8517)
!8535 = !DILocation(line: 445, column: 2, scope: !8517)
!8536 = !DILocation(line: 446, column: 1, scope: !8517)
!8537 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !837, file: !837, line: 448, type: !8319, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !8538)
!8538 = !{!8539, !8540, !8541}
!8539 = !DILocalVariable(name: "line", arg: 1, scope: !8537, file: !837, line: 448, type: !55)
!8540 = !DILocalVariable(name: "dev", scope: !8537, file: !837, line: 450, type: !8525)
!8541 = !DILocalVariable(name: "data", scope: !8537, file: !837, line: 451, type: !8284)
!8542 = !DILocation(line: 0, scope: !8537)
!8543 = !DILocation(line: 453, column: 17, scope: !8537)
!8544 = !DILocation(line: 453, column: 20, scope: !8537)
!8545 = !DILocation(line: 454, column: 17, scope: !8537)
!8546 = !DILocation(line: 454, column: 22, scope: !8537)
!8547 = !DILocation(line: 455, column: 1, scope: !8537)
!8548 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1029, file: !1029, line: 183, type: !1067, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8549)
!8549 = !{!8550, !8551, !8552, !8553, !8554}
!8550 = !DILocalVariable(name: "dev", arg: 1, scope: !8548, file: !1029, line: 183, type: !1058)
!8551 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8548, file: !1029, line: 184, type: !1069)
!8552 = !DILocalVariable(name: "pclken", scope: !8548, file: !1029, line: 186, type: !1019)
!8553 = !DILocalVariable(name: "reg", scope: !8548, file: !1029, line: 187, type: !1610)
!8554 = !DILocalVariable(name: "reg_val", scope: !8548, file: !1029, line: 188, type: !40)
!8555 = !DILocation(line: 0, scope: !8548)
!8556 = !DILocation(line: 192, column: 6, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8548, file: !1029, line: 192, column: 6)
!8558 = !DILocation(line: 192, column: 6, scope: !8548)
!8559 = !DILocation(line: 197, column: 52, scope: !8548)
!8560 = !DILocation(line: 197, column: 8, scope: !8548)
!8561 = !DILocation(line: 198, column: 12, scope: !8548)
!8562 = !DILocation(line: 199, column: 21, scope: !8548)
!8563 = !DILocation(line: 199, column: 10, scope: !8548)
!8564 = !DILocation(line: 200, column: 7, scope: !8548)
!8565 = !DILocation(line: 202, column: 2, scope: !8548)
!8566 = !DILocation(line: 203, column: 1, scope: !8548)
!8567 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1029, file: !1029, line: 205, type: !1067, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8568)
!8568 = !{!8569, !8570, !8571, !8572, !8573}
!8569 = !DILocalVariable(name: "dev", arg: 1, scope: !8567, file: !1029, line: 205, type: !1058)
!8570 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8567, file: !1029, line: 206, type: !1069)
!8571 = !DILocalVariable(name: "pclken", scope: !8567, file: !1029, line: 208, type: !1019)
!8572 = !DILocalVariable(name: "reg", scope: !8567, file: !1029, line: 209, type: !1610)
!8573 = !DILocalVariable(name: "reg_val", scope: !8567, file: !1029, line: 210, type: !40)
!8574 = !DILocation(line: 0, scope: !8567)
!8575 = !DILocation(line: 214, column: 6, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8567, file: !1029, line: 214, column: 6)
!8577 = !DILocation(line: 214, column: 6, scope: !8567)
!8578 = !DILocation(line: 219, column: 52, scope: !8567)
!8579 = !DILocation(line: 219, column: 8, scope: !8567)
!8580 = !DILocation(line: 220, column: 12, scope: !8567)
!8581 = !DILocation(line: 221, column: 22, scope: !8567)
!8582 = !DILocation(line: 221, column: 13, scope: !8567)
!8583 = !DILocation(line: 221, column: 10, scope: !8567)
!8584 = !DILocation(line: 222, column: 7, scope: !8567)
!8585 = !DILocation(line: 224, column: 2, scope: !8567)
!8586 = !DILocation(line: 225, column: 1, scope: !8567)
!8587 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1029, file: !1029, line: 262, type: !1083, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8588)
!8588 = !{!8589, !8590, !8591, !8592, !8593, !8594, !8595, !8596}
!8589 = !DILocalVariable(name: "clock", arg: 1, scope: !8587, file: !1029, line: 262, type: !1058)
!8590 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8587, file: !1029, line: 263, type: !1069)
!8591 = !DILocalVariable(name: "rate", arg: 3, scope: !8587, file: !1029, line: 264, type: !1025)
!8592 = !DILocalVariable(name: "pclken", scope: !8587, file: !1029, line: 266, type: !1019)
!8593 = !DILocalVariable(name: "ahb_clock", scope: !8587, file: !1029, line: 273, type: !40)
!8594 = !DILocalVariable(name: "apb1_clock", scope: !8587, file: !1029, line: 274, type: !40)
!8595 = !DILocalVariable(name: "apb2_clock", scope: !8587, file: !1029, line: 276, type: !40)
!8596 = !DILocalVariable(name: "ahb3_clock", scope: !8587, file: !1029, line: 286, type: !40)
!8597 = !DILocation(line: 0, scope: !8587)
!8598 = !DILocation(line: 273, column: 23, scope: !8587)
!8599 = !DILocation(line: 299, column: 18, scope: !8587)
!8600 = !DILocation(line: 299, column: 2, scope: !8587)
!8601 = !DILocation(line: 274, column: 24, scope: !8587)
!8602 = !DILocation(line: 319, column: 3, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8587, file: !1029, line: 299, column: 23)
!8604 = !DILocation(line: 276, column: 24, scope: !8587)
!8605 = !DILocation(line: 323, column: 3, scope: !8603)
!8606 = !DILocation(line: 346, column: 33, scope: !8603)
!8607 = !DILocation(line: 346, column: 11, scope: !8603)
!8608 = !DILocation(line: 350, column: 3, scope: !8603)
!8609 = !DILocation(line: 354, column: 33, scope: !8603)
!8610 = !DILocation(line: 354, column: 11, scope: !8603)
!8611 = !DILocation(line: 358, column: 3, scope: !8603)
!8612 = !DILocation(line: 374, column: 3, scope: !8603)
!8613 = !DILocation(line: 379, column: 3, scope: !8603)
!8614 = !DILocation(line: 0, scope: !8603)
!8615 = !DILocation(line: 396, column: 1, scope: !8587)
!8616 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1029, file: !1029, line: 227, type: !1099, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8617)
!8617 = !{!8618, !8619, !8620, !8621, !8622, !8623, !8624, !8625}
!8618 = !DILocalVariable(name: "dev", arg: 1, scope: !8616, file: !1029, line: 227, type: !1058)
!8619 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8616, file: !1029, line: 228, type: !1069)
!8620 = !DILocalVariable(name: "data", arg: 3, scope: !8616, file: !1029, line: 229, type: !39)
!8621 = !DILocalVariable(name: "pclken", scope: !8616, file: !1029, line: 233, type: !1019)
!8622 = !DILocalVariable(name: "reg", scope: !8616, file: !1029, line: 234, type: !1610)
!8623 = !DILocalVariable(name: "reg_val", scope: !8616, file: !1029, line: 235, type: !40)
!8624 = !DILocalVariable(name: "dt_val", scope: !8616, file: !1029, line: 235, type: !40)
!8625 = !DILocalVariable(name: "err", scope: !8616, file: !1029, line: 236, type: !55)
!8626 = !DILocation(line: 0, scope: !8616)
!8627 = !DILocation(line: 241, column: 30, scope: !8616)
!8628 = !DILocation(line: 241, column: 8, scope: !8616)
!8629 = !DILocation(line: 242, column: 10, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8616, file: !1029, line: 242, column: 6)
!8631 = !DILocation(line: 242, column: 6, scope: !8616)
!8632 = !DILocation(line: 247, column: 11, scope: !8616)
!8633 = !DILocation(line: 248, column: 6, scope: !8616)
!8634 = !DILocation(line: 247, column: 44, scope: !8616)
!8635 = !DILocation(line: 250, column: 6, scope: !8616)
!8636 = !DILocation(line: 249, column: 52, scope: !8616)
!8637 = !DILocation(line: 249, column: 8, scope: !8616)
!8638 = !DILocation(line: 251, column: 12, scope: !8616)
!8639 = !DILocation(line: 252, column: 10, scope: !8616)
!8640 = !DILocation(line: 253, column: 7, scope: !8616)
!8641 = !DILocation(line: 255, column: 2, scope: !8616)
!8642 = !DILocation(line: 260, column: 1, scope: !8616)
!8643 = distinct !DISubprogram(name: "enabled_clock", scope: !1029, file: !1029, line: 100, type: !8644, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8646)
!8644 = !DISubroutineType(types: !8645)
!8645 = !{!55, !40}
!8646 = !{!8647, !8648}
!8647 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8643, file: !1029, line: 100, type: !40)
!8648 = !DILocalVariable(name: "r", scope: !8643, file: !1029, line: 102, type: !55)
!8649 = !DILocation(line: 0, scope: !8643)
!8650 = !DILocation(line: 104, column: 2, scope: !8643)
!8651 = !DILocation(line: 180, column: 2, scope: !8643)
!8652 = !DILocation(line: 181, column: 1, scope: !8643)
!8653 = distinct !DISubprogram(name: "get_bus_clock", scope: !1029, file: !1029, line: 79, type: !8654, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8656)
!8654 = !DISubroutineType(types: !8655)
!8655 = !{!40, !40, !40}
!8656 = !{!8657, !8658}
!8657 = !DILocalVariable(name: "clock", arg: 1, scope: !8653, file: !1029, line: 79, type: !40)
!8658 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8653, file: !1029, line: 79, type: !40)
!8659 = !DILocation(line: 0, scope: !8653)
!8660 = !DILocation(line: 81, column: 15, scope: !8653)
!8661 = !DILocation(line: 81, column: 2, scope: !8653)
!8662 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1029, file: !1029, line: 68, type: !8663, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8665)
!8663 = !DISubroutineType(types: !8664)
!8664 = !{!40, !40, !55, !55, !55}
!8665 = !{!8666, !8667, !8668, !8669}
!8666 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8662, file: !1029, line: 68, type: !40)
!8667 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8662, file: !1029, line: 69, type: !55)
!8668 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8662, file: !1029, line: 70, type: !55)
!8669 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8662, file: !1029, line: 71, type: !55)
!8670 = !DILocation(line: 0, scope: !8662)
!8671 = !DILocation(line: 75, column: 22, scope: !8662)
!8672 = !DILocation(line: 76, column: 13, scope: !8662)
!8673 = !DILocation(line: 75, column: 34, scope: !8662)
!8674 = !DILocation(line: 75, column: 2, scope: !8662)
!8675 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1029, file: !1029, line: 641, type: !1056, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8676)
!8676 = !{!8677, !8678, !8679}
!8677 = !DILocalVariable(name: "dev", arg: 1, scope: !8675, file: !1029, line: 641, type: !1058)
!8678 = !DILocalVariable(name: "old_flash_freq", scope: !8675, file: !1029, line: 664, type: !40)
!8679 = !DILocalVariable(name: "new_flash_freq", scope: !8675, file: !1029, line: 665, type: !40)
!8680 = !DILocation(line: 0, scope: !8675)
!8681 = !DILocation(line: 646, column: 2, scope: !8675)
!8682 = !DILocation(line: 667, column: 19, scope: !8675)
!8683 = !DILocation(line: 674, column: 21, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8675, file: !1029, line: 674, column: 6)
!8685 = !DILocation(line: 674, column: 6, scope: !8675)
!8686 = !DILocation(line: 675, column: 3, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8684, file: !1029, line: 674, column: 59)
!8688 = !DILocation(line: 676, column: 2, scope: !8687)
!8689 = !DILocation(line: 680, column: 2, scope: !8675)
!8690 = !DILocation(line: 683, column: 2, scope: !8675)
!8691 = !DILocation(line: 690, column: 3, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !1029, line: 689, column: 9)
!8693 = distinct !DILexicalBlock(scope: !8675, file: !1029, line: 685, column: 6)
!8694 = !DILocation(line: 695, column: 2, scope: !8675)
!8695 = !DILocation(line: 696, column: 2, scope: !8675)
!8696 = !DILocation(line: 696, column: 9, scope: !8675)
!8697 = !DILocation(line: 696, column: 34, scope: !8675)
!8698 = distinct !{!8698, !8695, !8699}
!8699 = !DILocation(line: 697, column: 2, scope: !8675)
!8700 = !DILocation(line: 720, column: 21, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8675, file: !1029, line: 720, column: 6)
!8702 = !DILocation(line: 720, column: 6, scope: !8675)
!8703 = !DILocation(line: 721, column: 3, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8701, file: !1029, line: 720, column: 60)
!8705 = !DILocation(line: 722, column: 2, scope: !8704)
!8706 = !DILocation(line: 725, column: 18, scope: !8675)
!8707 = !DILocation(line: 728, column: 2, scope: !8675)
!8708 = !DILocation(line: 730, column: 2, scope: !8675)
!8709 = !DILocation(line: 745, column: 2, scope: !8675)
!8710 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8711, file: !8711, line: 3275, type: !6564, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8711 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8712 = !DILocation(line: 3277, column: 21, scope: !8710)
!8713 = !DILocation(line: 3277, column: 3, scope: !8710)
!8714 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1029, file: !1029, line: 507, type: !3440, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8715 = !DILocation(line: 516, column: 4, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !1029, line: 515, column: 10)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !1029, line: 513, column: 7)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !1029, line: 510, column: 37)
!8719 = distinct !DILexicalBlock(scope: !8714, file: !1029, line: 510, column: 6)
!8720 = !DILocation(line: 526, column: 3, scope: !8718)
!8721 = !DILocation(line: 527, column: 3, scope: !8718)
!8722 = !DILocation(line: 527, column: 10, scope: !8718)
!8723 = !DILocation(line: 527, column: 31, scope: !8718)
!8724 = distinct !{!8724, !8721, !8725}
!8725 = !DILocation(line: 529, column: 3, scope: !8718)
!8726 = !DILocation(line: 583, column: 3, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !1029, line: 577, column: 37)
!8728 = distinct !DILexicalBlock(scope: !8714, file: !1029, line: 577, column: 6)
!8729 = !DILocation(line: 584, column: 3, scope: !8727)
!8730 = !DILocation(line: 584, column: 10, scope: !8727)
!8731 = !DILocation(line: 584, column: 31, scope: !8727)
!8732 = distinct !{!8732, !8729, !8733}
!8733 = !DILocation(line: 585, column: 3, scope: !8727)
!8734 = !DILocation(line: 627, column: 1, scope: !8714)
!8735 = distinct !DISubprogram(name: "set_up_plls", scope: !1029, file: !1029, line: 448, type: !3440, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8736 = !DILocation(line: 460, column: 6, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8735, file: !1029, line: 460, column: 6)
!8738 = !DILocation(line: 460, column: 31, scope: !8737)
!8739 = !DILocation(line: 460, column: 6, scope: !8735)
!8740 = !DILocation(line: 461, column: 3, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8737, file: !1029, line: 460, column: 67)
!8742 = !DILocation(line: 462, column: 3, scope: !8741)
!8743 = !DILocation(line: 463, column: 2, scope: !8741)
!8744 = !DILocation(line: 464, column: 2, scope: !8735)
!8745 = !DILocation(line: 488, column: 2, scope: !8735)
!8746 = !DILocation(line: 492, column: 2, scope: !8735)
!8747 = !DILocation(line: 496, column: 2, scope: !8735)
!8748 = !DILocation(line: 499, column: 2, scope: !8735)
!8749 = !DILocation(line: 500, column: 2, scope: !8735)
!8750 = !DILocation(line: 500, column: 9, scope: !8735)
!8751 = !DILocation(line: 500, column: 30, scope: !8735)
!8752 = distinct !{!8752, !8749, !8753}
!8753 = !DILocation(line: 502, column: 2, scope: !8735)
!8754 = !DILocation(line: 505, column: 1, scope: !8735)
!8755 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8711, file: !8711, line: 3224, type: !6574, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8756)
!8756 = !{!8757}
!8757 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8755, file: !8711, line: 3224, type: !40)
!8758 = !DILocation(line: 0, scope: !8755)
!8759 = !DILocation(line: 3226, column: 3, scope: !8755)
!8760 = !DILocation(line: 3227, column: 1, scope: !8755)
!8761 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8711, file: !8711, line: 3188, type: !6574, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8762)
!8762 = !{!8763}
!8763 = !DILocalVariable(name: "Source", arg: 1, scope: !8761, file: !8711, line: 3188, type: !40)
!8764 = !DILocation(line: 0, scope: !8761)
!8765 = !DILocation(line: 3190, column: 3, scope: !8761)
!8766 = !DILocation(line: 3191, column: 1, scope: !8761)
!8767 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8711, file: !8711, line: 3204, type: !6564, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8768 = !DILocation(line: 3206, column: 21, scope: !8767)
!8769 = !DILocation(line: 3206, column: 3, scope: !8767)
!8770 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8711, file: !8711, line: 3240, type: !6574, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8771)
!8771 = !{!8772}
!8772 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8770, file: !8711, line: 3240, type: !40)
!8773 = !DILocation(line: 0, scope: !8770)
!8774 = !DILocation(line: 3242, column: 3, scope: !8770)
!8775 = !DILocation(line: 3243, column: 1, scope: !8770)
!8776 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8711, file: !8711, line: 3256, type: !6574, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8777)
!8777 = !{!8778}
!8778 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8776, file: !8711, line: 3256, type: !40)
!8779 = !DILocation(line: 0, scope: !8776)
!8780 = !DILocation(line: 3258, column: 3, scope: !8776)
!8781 = !DILocation(line: 3259, column: 1, scope: !8776)
!8782 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1029, file: !1029, line: 409, type: !3440, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8783 = !DILocation(line: 412, column: 6, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8782, file: !1029, line: 412, column: 6)
!8785 = !DILocation(line: 412, column: 27, scope: !8784)
!8786 = !DILocation(line: 412, column: 6, scope: !8782)
!8787 = !DILocation(line: 414, column: 3, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8784, file: !1029, line: 412, column: 33)
!8789 = !DILocation(line: 415, column: 3, scope: !8788)
!8790 = !DILocation(line: 415, column: 10, scope: !8788)
!8791 = !DILocation(line: 415, column: 31, scope: !8788)
!8792 = distinct !{!8792, !8789, !8793}
!8793 = !DILocation(line: 417, column: 3, scope: !8788)
!8794 = !DILocation(line: 421, column: 2, scope: !8782)
!8795 = !DILocation(line: 422, column: 2, scope: !8782)
!8796 = !DILocation(line: 422, column: 9, scope: !8782)
!8797 = !DILocation(line: 422, column: 34, scope: !8782)
!8798 = distinct !{!8798, !8795, !8799}
!8799 = !DILocation(line: 423, column: 2, scope: !8782)
!8800 = !DILocation(line: 424, column: 1, scope: !8782)
!8801 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8711, file: !8711, line: 4195, type: !3440, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8802 = !DILocation(line: 4197, column: 3, scope: !8801)
!8803 = !DILocation(line: 4198, column: 1, scope: !8801)
!8804 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8711, file: !8711, line: 4184, type: !3440, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8805 = !DILocation(line: 4186, column: 3, scope: !8804)
!8806 = !DILocation(line: 4187, column: 1, scope: !8804)
!8807 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8711, file: !8711, line: 4205, type: !6564, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8808 = !DILocation(line: 4207, column: 11, scope: !8807)
!8809 = !DILocation(line: 4207, column: 44, scope: !8807)
!8810 = !DILocation(line: 4207, column: 3, scope: !8807)
!8811 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8711, file: !8711, line: 3007, type: !6564, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8812 = !DILocation(line: 3009, column: 11, scope: !8811)
!8813 = !DILocation(line: 3009, column: 44, scope: !8811)
!8814 = !DILocation(line: 3009, column: 3, scope: !8811)
!8815 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8711, file: !8711, line: 2987, type: !3440, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8816 = !DILocation(line: 2989, column: 3, scope: !8815)
!8817 = !DILocation(line: 2990, column: 1, scope: !8815)
!8818 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8711, file: !8711, line: 2939, type: !3440, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8819 = !DILocation(line: 2941, column: 3, scope: !8818)
!8820 = !DILocation(line: 2942, column: 1, scope: !8818)
!8821 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8711, file: !8711, line: 2949, type: !3440, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8822 = !DILocation(line: 2951, column: 3, scope: !8821)
!8823 = !DILocation(line: 2952, column: 1, scope: !8821)
!8824 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8711, file: !8711, line: 2969, type: !6564, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8825 = !DILocation(line: 2971, column: 11, scope: !8824)
!8826 = !DILocation(line: 2971, column: 44, scope: !8824)
!8827 = !DILocation(line: 2971, column: 3, scope: !8824)
!8828 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8711, file: !8711, line: 3143, type: !3440, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8829 = !DILocation(line: 3145, column: 3, scope: !8828)
!8830 = !DILocation(line: 3146, column: 1, scope: !8828)
!8831 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8711, file: !8711, line: 3163, type: !6564, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2223)
!8832 = !DILocation(line: 3165, column: 11, scope: !8831)
!8833 = !DILocation(line: 3165, column: 46, scope: !8831)
!8834 = !DILocation(line: 3165, column: 3, scope: !8831)
!8835 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8836, file: !8836, line: 40, type: !6564, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3227, retainedNodes: !2223)
!8836 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8837 = !DILocation(line: 45, column: 3, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !8836, line: 44, column: 44)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !8836, line: 44, column: 13)
!8840 = distinct !DILexicalBlock(scope: !8835, file: !8836, line: 42, column: 6)
!8841 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8836, file: !8836, line: 56, type: !3440, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3227, retainedNodes: !2223)
!8842 = !DILocation(line: 58, column: 2, scope: !8841)
!8843 = !DILocation(line: 62, column: 1, scope: !8841)
!8844 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8711, file: !8711, line: 4304, type: !8845, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3227, retainedNodes: !8847)
!8845 = !DISubroutineType(types: !8846)
!8846 = !{null, !40, !40, !40, !40}
!8847 = !{!8848, !8849, !8850, !8851}
!8848 = !DILocalVariable(name: "Source", arg: 1, scope: !8844, file: !8711, line: 4304, type: !40)
!8849 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8844, file: !8711, line: 4304, type: !40)
!8850 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8844, file: !8711, line: 4304, type: !40)
!8851 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8844, file: !8711, line: 4304, type: !40)
!8852 = !DILocation(line: 0, scope: !8844)
!8853 = !DILocation(line: 4306, column: 3, scope: !8844)
!8854 = !DILocation(line: 4308, column: 3, scope: !8844)
!8855 = !DILocation(line: 4310, column: 3, scope: !8844)
!8856 = !DILocation(line: 4312, column: 1, scope: !8844)
!8857 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8836, file: !8836, line: 69, type: !3440, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3227, retainedNodes: !2223)
!8858 = !DILocation(line: 72, column: 2, scope: !8857)
!8859 = !DILocation(line: 73, column: 1, scope: !8857)
!8860 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8861, file: !8861, line: 1185, type: !6574, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3227, retainedNodes: !8862)
!8861 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8862 = !{!8863, !8864}
!8863 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8860, file: !8861, line: 1185, type: !40)
!8864 = !DILocalVariable(name: "tmpreg", scope: !8860, file: !8861, line: 1187, type: !296)
!8865 = !DILocation(line: 0, scope: !8860)
!8866 = !DILocation(line: 1187, column: 3, scope: !8860)
!8867 = !DILocation(line: 1187, column: 17, scope: !8860)
!8868 = !DILocation(line: 1188, column: 3, scope: !8860)
!8869 = !DILocation(line: 1190, column: 12, scope: !8860)
!8870 = !DILocation(line: 1190, column: 10, scope: !8860)
!8871 = !DILocation(line: 1191, column: 9, scope: !8860)
!8872 = !DILocation(line: 1192, column: 1, scope: !8860)
!8873 = distinct !DISubprogram(name: "uart_console_init", scope: !1160, file: !1160, line: 588, type: !1137, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !8874)
!8874 = !{!8875}
!8875 = !DILocalVariable(name: "arg", arg: 1, scope: !8873, file: !1160, line: 588, type: !1115)
!8876 = !DILocation(line: 0, scope: !8873)
!8877 = !DILocation(line: 593, column: 7, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8873, file: !1160, line: 593, column: 6)
!8879 = !DILocation(line: 593, column: 6, scope: !8873)
!8880 = !DILocation(line: 597, column: 2, scope: !8873)
!8881 = !DILocation(line: 599, column: 2, scope: !8873)
!8882 = !DILocation(line: 600, column: 1, scope: !8873)
!8883 = distinct !DISubprogram(name: "device_is_ready", scope: !8884, file: !8884, line: 47, type: !8885, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !8887)
!8884 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!329, !1115}
!8887 = !{!8888}
!8888 = !DILocalVariable(name: "dev", arg: 1, scope: !8883, file: !8884, line: 47, type: !1115)
!8889 = !DILocation(line: 0, scope: !8883)
!8890 = !DILocation(line: 55, column: 2, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8883, file: !8884, line: 55, column: 2)
!8892 = !{i64 2155286479}
!8893 = !DILocation(line: 56, column: 9, scope: !8883)
!8894 = !DILocation(line: 56, column: 2, scope: !8883)
!8895 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1160, file: !1160, line: 573, type: !3440, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !2223)
!8896 = !DILocation(line: 576, column: 2, scope: !8895)
!8897 = !DILocation(line: 579, column: 2, scope: !8895)
!8898 = !DILocation(line: 581, column: 1, scope: !8895)
!8899 = distinct !DISubprogram(name: "console_out", scope: !1160, file: !1160, line: 77, type: !283, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !8900)
!8900 = !{!8901}
!8901 = !DILocalVariable(name: "c", arg: 1, scope: !8899, file: !1160, line: 77, type: !55)
!8902 = !DILocation(line: 0, scope: !8899)
!8903 = !DILocation(line: 89, column: 11, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8899, file: !1160, line: 89, column: 6)
!8905 = !DILocation(line: 89, column: 6, scope: !8899)
!8906 = !DILocation(line: 90, column: 3, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !1160, line: 89, column: 17)
!8908 = !DILocation(line: 91, column: 2, scope: !8907)
!8909 = !DILocation(line: 92, column: 34, scope: !8899)
!8910 = !DILocation(line: 92, column: 2, scope: !8899)
!8911 = !DILocation(line: 94, column: 2, scope: !8899)
!8912 = distinct !DISubprogram(name: "uart_poll_out", scope: !8913, file: !8913, line: 95, type: !1133, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !8914)
!8913 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/cpp_synchronization")
!8914 = !{!8915, !8916}
!8915 = !DILocalVariable(name: "dev", arg: 1, scope: !8912, file: !8913, line: 95, type: !1115)
!8916 = !DILocalVariable(name: "out_char", arg: 2, scope: !8912, file: !8913, line: 95, type: !144)
!8917 = !DILocation(line: 0, scope: !8912)
!8918 = !DILocation(line: 105, column: 2, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8912, file: !8913, line: 105, column: 2)
!8920 = !{i64 2155369870}
!8921 = !DILocation(line: 106, column: 2, scope: !8912)
!8922 = !DILocation(line: 107, column: 1, scope: !8912)
!8923 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1109, file: !1109, line: 574, type: !1133, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !8924)
!8924 = !{!8925, !8926, !8927}
!8925 = !DILocalVariable(name: "dev", arg: 1, scope: !8923, file: !1109, line: 574, type: !1115)
!8926 = !DILocalVariable(name: "out_char", arg: 2, scope: !8923, file: !1109, line: 575, type: !144)
!8927 = !DILocalVariable(name: "api", scope: !8923, file: !1109, line: 577, type: !1106)
!8928 = !DILocation(line: 0, scope: !8923)
!8929 = !DILocation(line: 578, column: 40, scope: !8923)
!8930 = !DILocation(line: 580, column: 7, scope: !8923)
!8931 = !DILocation(line: 580, column: 2, scope: !8923)
!8932 = !DILocation(line: 581, column: 1, scope: !8923)
!8933 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !316, file: !316, line: 730, type: !8885, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !8934)
!8934 = !{!8935}
!8935 = !DILocalVariable(name: "dev", arg: 1, scope: !8933, file: !316, line: 730, type: !1115)
!8936 = !DILocation(line: 0, scope: !8933)
!8937 = !DILocation(line: 732, column: 9, scope: !8933)
!8938 = !DILocation(line: 732, column: 2, scope: !8933)
!8939 = distinct !DISubprogram(name: "uart_register_input", scope: !1160, file: !1160, line: 560, type: !8940, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !8987)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{null, !8942, !8942, !8984}
!8942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8943, size: 32)
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !68, line: 2208, size: 160, elements: !8944)
!8944 = !{!8945}
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8943, file: !68, line: 2209, baseType: !8946, size: 160)
!8946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !68, line: 1709, size: 160, elements: !8947)
!8947 = !{!8948, !8961, !8965}
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8946, file: !68, line: 1710, baseType: !8949, size: 64)
!8949 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8950, line: 46, baseType: !8951)
!8950 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8950, line: 41, size: 64, elements: !8952)
!8952 = !{!8953, !8960}
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8951, file: !8950, line: 42, baseType: !8954, size: 32)
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8955, size: 32)
!8955 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8950, line: 39, baseType: !8956)
!8956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8950, line: 35, size: 32, elements: !8957)
!8957 = !{!8958}
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8956, file: !8950, line: 36, baseType: !8959, size: 32)
!8959 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8950, line: 32, baseType: !40)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8951, file: !8950, line: 43, baseType: !8954, size: 32, offset: 32)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8946, file: !68, line: 1711, baseType: !8962, size: 8, offset: 64)
!8962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !8963)
!8963 = !{!8964}
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !8962, file: !483, line: 75, baseType: !113, size: 8)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8946, file: !68, line: 1712, baseType: !8966, size: 64, offset: 96)
!8966 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !8967)
!8967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !8968)
!8968 = !{!8969}
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8967, file: !72, line: 232, baseType: !8970, size: 64)
!8970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !8971)
!8971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !8972)
!8972 = !{!8973, !8979}
!8973 = !DIDerivedType(tag: DW_TAG_member, scope: !8971, file: !77, line: 38, baseType: !8974, size: 32)
!8974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8971, file: !77, line: 38, size: 32, elements: !8975)
!8975 = !{!8976, !8978}
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8974, file: !77, line: 39, baseType: !8977, size: 32)
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8971, size: 32)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8974, file: !77, line: 40, baseType: !8977, size: 32)
!8979 = !DIDerivedType(tag: DW_TAG_member, scope: !8971, file: !77, line: 42, baseType: !8980, size: 32, offset: 32)
!8980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8971, file: !77, line: 42, size: 32, elements: !8981)
!8981 = !{!8982, !8983}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8980, file: !77, line: 43, baseType: !8977, size: 32)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8980, file: !77, line: 44, baseType: !8977, size: 32)
!8984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8985, size: 32)
!8985 = !DISubroutineType(types: !8986)
!8986 = !{!143, !1297, !143}
!8987 = !{!8988, !8989, !8990}
!8988 = !DILocalVariable(name: "avail", arg: 1, scope: !8939, file: !1160, line: 560, type: !8942)
!8989 = !DILocalVariable(name: "lines", arg: 2, scope: !8939, file: !1160, line: 560, type: !8942)
!8990 = !DILocalVariable(name: "completion", arg: 3, scope: !8939, file: !1160, line: 561, type: !8984)
!8991 = !DILocation(line: 0, scope: !8939)
!8992 = !DILocation(line: 566, column: 1, scope: !8939)
!8993 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1341, file: !1341, line: 523, type: !1196, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !8994)
!8994 = !{!8995, !8996, !8997, !8998, !8999}
!8995 = !DILocalVariable(name: "dev", arg: 1, scope: !8993, file: !1341, line: 523, type: !1198)
!8996 = !DILocalVariable(name: "pin", arg: 2, scope: !8993, file: !1341, line: 524, type: !1213)
!8997 = !DILocalVariable(name: "flags", arg: 3, scope: !8993, file: !1341, line: 524, type: !1214)
!8998 = !DILocalVariable(name: "err", scope: !8993, file: !1341, line: 526, type: !55)
!8999 = !DILocalVariable(name: "pincfg", scope: !8993, file: !1341, line: 527, type: !55)
!9000 = !DILocation(line: 0, scope: !8993)
!9001 = !DILocation(line: 527, column: 2, scope: !8993)
!9002 = !DILocation(line: 532, column: 8, scope: !8993)
!9003 = !DILocation(line: 533, column: 10, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8993, file: !1341, line: 533, column: 6)
!9005 = !DILocation(line: 533, column: 6, scope: !8993)
!9006 = !DILocation(line: 543, column: 13, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8993, file: !1341, line: 543, column: 6)
!9008 = !DILocation(line: 543, column: 28, scope: !9007)
!9009 = !DILocation(line: 543, column: 6, scope: !8993)
!9010 = !DILocation(line: 544, column: 14, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !1341, line: 544, column: 7)
!9012 = distinct !DILexicalBlock(scope: !9007, file: !1341, line: 543, column: 34)
!9013 = !DILocation(line: 544, column: 39, scope: !9011)
!9014 = !DILocation(line: 544, column: 7, scope: !9012)
!9015 = !DILocation(line: 545, column: 38, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9011, file: !1341, line: 544, column: 45)
!9017 = !DILocation(line: 545, column: 4, scope: !9016)
!9018 = !DILocation(line: 546, column: 3, scope: !9016)
!9019 = !DILocation(line: 546, column: 21, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9011, file: !1341, line: 546, column: 14)
!9021 = !DILocation(line: 546, column: 45, scope: !9020)
!9022 = !DILocation(line: 546, column: 14, scope: !9011)
!9023 = !DILocation(line: 547, column: 40, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9020, file: !1341, line: 546, column: 51)
!9025 = !DILocation(line: 547, column: 4, scope: !9024)
!9026 = !DILocation(line: 548, column: 3, scope: !9024)
!9027 = !DILocation(line: 551, column: 32, scope: !8993)
!9028 = !DILocation(line: 551, column: 37, scope: !8993)
!9029 = !DILocation(line: 551, column: 2, scope: !8993)
!9030 = !DILocation(line: 554, column: 6, scope: !8993)
!9031 = !DILocation(line: 562, column: 1, scope: !8993)
!9032 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1341, file: !1341, line: 410, type: !9033, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9035)
!9033 = !DISubroutineType(types: !9034)
!9034 = !{!55, !1198, !1025}
!9035 = !{!9036, !9037, !9038, !9040}
!9036 = !DILocalVariable(name: "dev", arg: 1, scope: !9032, file: !1341, line: 410, type: !1198)
!9037 = !DILocalVariable(name: "value", arg: 2, scope: !9032, file: !1341, line: 410, type: !1025)
!9038 = !DILocalVariable(name: "cfg", scope: !9032, file: !1341, line: 412, type: !9039)
!9039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!9040 = !DILocalVariable(name: "gpio", scope: !9032, file: !1341, line: 413, type: !1271)
!9041 = !DILocation(line: 0, scope: !9032)
!9042 = !DILocation(line: 412, column: 45, scope: !9032)
!9043 = !DILocation(line: 413, column: 44, scope: !9032)
!9044 = !DILocation(line: 415, column: 11, scope: !9032)
!9045 = !DILocation(line: 415, column: 9, scope: !9032)
!9046 = !DILocation(line: 417, column: 2, scope: !9032)
!9047 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1341, file: !1341, line: 420, type: !1223, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9048)
!9048 = !{!9049, !9050, !9051, !9052, !9053, !9054}
!9049 = !DILocalVariable(name: "dev", arg: 1, scope: !9047, file: !1341, line: 420, type: !1198)
!9050 = !DILocalVariable(name: "mask", arg: 2, scope: !9047, file: !1341, line: 421, type: !1225)
!9051 = !DILocalVariable(name: "value", arg: 3, scope: !9047, file: !1341, line: 422, type: !1220)
!9052 = !DILocalVariable(name: "cfg", scope: !9047, file: !1341, line: 424, type: !9039)
!9053 = !DILocalVariable(name: "gpio", scope: !9047, file: !1341, line: 425, type: !1271)
!9054 = !DILocalVariable(name: "port_value", scope: !9047, file: !1341, line: 426, type: !40)
!9055 = !DILocation(line: 0, scope: !9047)
!9056 = !DILocation(line: 424, column: 45, scope: !9047)
!9057 = !DILocation(line: 425, column: 44, scope: !9047)
!9058 = !DILocation(line: 430, column: 15, scope: !9047)
!9059 = !DILocation(line: 431, column: 46, scope: !9047)
!9060 = !DILocation(line: 431, column: 44, scope: !9047)
!9061 = !DILocation(line: 431, column: 61, scope: !9047)
!9062 = !DILocation(line: 431, column: 53, scope: !9047)
!9063 = !DILocation(line: 431, column: 2, scope: !9047)
!9064 = !DILocation(line: 435, column: 2, scope: !9047)
!9065 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1341, file: !1341, line: 438, type: !1228, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9066)
!9066 = !{!9067, !9068, !9069, !9070}
!9067 = !DILocalVariable(name: "dev", arg: 1, scope: !9065, file: !1341, line: 438, type: !1198)
!9068 = !DILocalVariable(name: "pins", arg: 2, scope: !9065, file: !1341, line: 439, type: !1225)
!9069 = !DILocalVariable(name: "cfg", scope: !9065, file: !1341, line: 441, type: !9039)
!9070 = !DILocalVariable(name: "gpio", scope: !9065, file: !1341, line: 442, type: !1271)
!9071 = !DILocation(line: 0, scope: !9065)
!9072 = !DILocation(line: 441, column: 45, scope: !9065)
!9073 = !DILocation(line: 442, column: 44, scope: !9065)
!9074 = !DILocation(line: 448, column: 2, scope: !9065)
!9075 = !DILocation(line: 450, column: 2, scope: !9065)
!9076 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1341, file: !1341, line: 453, type: !1228, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9077)
!9077 = !{!9078, !9079, !9080, !9081}
!9078 = !DILocalVariable(name: "dev", arg: 1, scope: !9076, file: !1341, line: 453, type: !1198)
!9079 = !DILocalVariable(name: "pins", arg: 2, scope: !9076, file: !1341, line: 454, type: !1225)
!9080 = !DILocalVariable(name: "cfg", scope: !9076, file: !1341, line: 456, type: !9039)
!9081 = !DILocalVariable(name: "gpio", scope: !9076, file: !1341, line: 457, type: !1271)
!9082 = !DILocation(line: 0, scope: !9076)
!9083 = !DILocation(line: 456, column: 45, scope: !9076)
!9084 = !DILocation(line: 457, column: 44, scope: !9076)
!9085 = !DILocation(line: 467, column: 2, scope: !9076)
!9086 = !DILocation(line: 470, column: 2, scope: !9076)
!9087 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1341, file: !1341, line: 473, type: !1228, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9088)
!9088 = !{!9089, !9090, !9091, !9092}
!9089 = !DILocalVariable(name: "dev", arg: 1, scope: !9087, file: !1341, line: 473, type: !1198)
!9090 = !DILocalVariable(name: "pins", arg: 2, scope: !9087, file: !1341, line: 474, type: !1225)
!9091 = !DILocalVariable(name: "cfg", scope: !9087, file: !1341, line: 476, type: !9039)
!9092 = !DILocalVariable(name: "gpio", scope: !9087, file: !1341, line: 477, type: !1271)
!9093 = !DILocation(line: 0, scope: !9087)
!9094 = !DILocation(line: 476, column: 45, scope: !9087)
!9095 = !DILocation(line: 477, column: 44, scope: !9087)
!9096 = !DILocation(line: 484, column: 2, scope: !9087)
!9097 = !DILocation(line: 487, column: 2, scope: !9087)
!9098 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1341, file: !1341, line: 594, type: !1234, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9099)
!9099 = !{!9100, !9101, !9102, !9103, !9104, !9105, !9107, !9108, !9109}
!9100 = !DILocalVariable(name: "dev", arg: 1, scope: !9098, file: !1341, line: 594, type: !1198)
!9101 = !DILocalVariable(name: "pin", arg: 2, scope: !9098, file: !1341, line: 595, type: !1213)
!9102 = !DILocalVariable(name: "mode", arg: 3, scope: !9098, file: !1341, line: 596, type: !1172)
!9103 = !DILocalVariable(name: "trig", arg: 4, scope: !9098, file: !1341, line: 597, type: !1178)
!9104 = !DILocalVariable(name: "cfg", scope: !9098, file: !1341, line: 599, type: !9039)
!9105 = !DILocalVariable(name: "data", scope: !9098, file: !1341, line: 600, type: !9106)
!9106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!9107 = !DILocalVariable(name: "edge", scope: !9098, file: !1341, line: 601, type: !55)
!9108 = !DILocalVariable(name: "err", scope: !9098, file: !1341, line: 602, type: !55)
!9109 = !DILabel(scope: !9098, name: "exit", file: !1341, line: 643)
!9110 = !DILocation(line: 0, scope: !9098)
!9111 = !DILocation(line: 599, column: 45, scope: !9098)
!9112 = !DILocation(line: 604, column: 6, scope: !9098)
!9113 = !DILocation(line: 605, column: 34, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !1341, line: 605, column: 7)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !1341, line: 604, column: 38)
!9116 = distinct !DILexicalBlock(scope: !9098, file: !1341, line: 604, column: 6)
!9117 = !DILocation(line: 605, column: 7, scope: !9114)
!9118 = !DILocation(line: 605, column: 47, scope: !9114)
!9119 = !DILocation(line: 605, column: 39, scope: !9114)
!9120 = !DILocation(line: 605, column: 7, scope: !9115)
!9121 = !DILocation(line: 606, column: 4, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9114, file: !1341, line: 605, column: 53)
!9123 = !DILocation(line: 607, column: 4, scope: !9122)
!9124 = !DILocation(line: 608, column: 4, scope: !9122)
!9125 = !DILocation(line: 609, column: 3, scope: !9122)
!9126 = !DILocation(line: 600, column: 38, scope: !9098)
!9127 = !DILocation(line: 620, column: 30, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9098, file: !1341, line: 620, column: 6)
!9129 = !DILocation(line: 620, column: 6, scope: !9128)
!9130 = !DILocation(line: 620, column: 57, scope: !9128)
!9131 = !DILocation(line: 620, column: 6, scope: !9098)
!9132 = !DILocation(line: 625, column: 29, scope: !9098)
!9133 = !DILocation(line: 625, column: 2, scope: !9098)
!9134 = !DILocation(line: 627, column: 2, scope: !9098)
!9135 = !DILocation(line: 630, column: 3, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9098, file: !1341, line: 627, column: 16)
!9137 = !DILocation(line: 633, column: 3, scope: !9136)
!9138 = !DILocation(line: 636, column: 3, scope: !9136)
!9139 = !DILocation(line: 639, column: 2, scope: !9098)
!9140 = !DILocation(line: 641, column: 2, scope: !9098)
!9141 = !DILocation(line: 643, column: 1, scope: !9098)
!9142 = !DILocation(line: 644, column: 2, scope: !9098)
!9143 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1341, file: !1341, line: 647, type: !1238, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9144)
!9144 = !{!9145, !9146, !9147, !9148}
!9145 = !DILocalVariable(name: "dev", arg: 1, scope: !9143, file: !1341, line: 647, type: !1198)
!9146 = !DILocalVariable(name: "callback", arg: 2, scope: !9143, file: !1341, line: 648, type: !1240)
!9147 = !DILocalVariable(name: "set", arg: 3, scope: !9143, file: !1341, line: 649, type: !329)
!9148 = !DILocalVariable(name: "data", scope: !9143, file: !1341, line: 651, type: !9106)
!9149 = !DILocation(line: 0, scope: !9143)
!9150 = !DILocation(line: 651, column: 38, scope: !9143)
!9151 = !DILocation(line: 653, column: 37, scope: !9143)
!9152 = !DILocation(line: 653, column: 9, scope: !9143)
!9153 = !DILocation(line: 653, column: 2, scope: !9143)
!9154 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9155, file: !9155, line: 38, type: !9156, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9159)
!9155 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9156 = !DISubroutineType(types: !9157)
!9157 = !{!55, !9158, !1240, !329}
!9158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!9159 = !{!9160, !9161, !9162}
!9160 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9154, file: !9155, line: 38, type: !9158)
!9161 = !DILocalVariable(name: "callback", arg: 2, scope: !9154, file: !9155, line: 39, type: !1240)
!9162 = !DILocalVariable(name: "set", arg: 3, scope: !9154, file: !9155, line: 40, type: !329)
!9163 = !DILocation(line: 0, scope: !9154)
!9164 = !DILocation(line: 45, column: 7, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9154, file: !9155, line: 45, column: 6)
!9166 = !DILocation(line: 45, column: 6, scope: !9154)
!9167 = !DILocation(line: 46, column: 56, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9169, file: !9155, line: 46, column: 7)
!9169 = distinct !DILexicalBlock(scope: !9165, file: !9155, line: 45, column: 38)
!9170 = !DILocation(line: 46, column: 8, scope: !9168)
!9171 = !DILocation(line: 46, column: 7, scope: !9169)
!9172 = !DILocation(line: 51, column: 13, scope: !9165)
!9173 = !DILocation(line: 56, column: 43, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !9155, line: 55, column: 11)
!9175 = distinct !DILexicalBlock(scope: !9154, file: !9155, line: 55, column: 6)
!9176 = !DILocation(line: 56, column: 3, scope: !9174)
!9177 = !DILocation(line: 57, column: 2, scope: !9174)
!9178 = !DILocation(line: 60, column: 1, scope: !9154)
!9179 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1245, file: !1245, line: 261, type: !9180, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9182)
!9180 = !DISubroutineType(types: !9181)
!9181 = !{!329, !9158}
!9182 = !{!9183}
!9183 = !DILocalVariable(name: "list", arg: 1, scope: !9179, file: !1245, line: 261, type: !9158)
!9184 = !DILocation(line: 0, scope: !9179)
!9185 = !DILocation(line: 261, column: 1, scope: !9179)
!9186 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1245, file: !1245, line: 417, type: !9187, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9189)
!9187 = !DISubroutineType(types: !9188)
!9188 = !{!329, !9158, !1414}
!9189 = !{!9190, !9191, !9192, !9193}
!9190 = !DILocalVariable(name: "list", arg: 1, scope: !9186, file: !1245, line: 417, type: !9158)
!9191 = !DILocalVariable(name: "node", arg: 2, scope: !9186, file: !1245, line: 417, type: !1414)
!9192 = !DILocalVariable(name: "prev", scope: !9186, file: !1245, line: 417, type: !1414)
!9193 = !DILocalVariable(name: "test", scope: !9186, file: !1245, line: 417, type: !1414)
!9194 = !DILocation(line: 0, scope: !9186)
!9195 = !DILocation(line: 417, column: 1, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9186, file: !1245, line: 417, column: 1)
!9197 = !DILocation(line: 417, column: 1, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9196, file: !1245, line: 417, column: 1)
!9199 = !DILocation(line: 417, column: 1, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !1245, line: 417, column: 1)
!9201 = distinct !DILexicalBlock(scope: !9198, file: !1245, line: 417, column: 1)
!9202 = !DILocation(line: 417, column: 1, scope: !9201)
!9203 = distinct !{!9203, !9195, !9195}
!9204 = !DILocation(line: 417, column: 1, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9200, file: !1245, line: 417, column: 1)
!9206 = !DILocation(line: 417, column: 1, scope: !9186)
!9207 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1245, file: !1245, line: 298, type: !9208, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9210)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{null, !9158, !1414}
!9210 = !{!9211, !9212}
!9211 = !DILocalVariable(name: "list", arg: 1, scope: !9207, file: !1245, line: 298, type: !9158)
!9212 = !DILocalVariable(name: "node", arg: 2, scope: !9207, file: !1245, line: 298, type: !1414)
!9213 = !DILocation(line: 0, scope: !9207)
!9214 = !DILocation(line: 298, column: 1, scope: !9207)
!9215 = !DILocation(line: 298, column: 1, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9207, file: !1245, line: 298, column: 1)
!9217 = !DILocation(line: 298, column: 1, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9216, file: !1245, line: 298, column: 1)
!9219 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1245, file: !1245, line: 231, type: !9220, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9222)
!9220 = !DISubroutineType(types: !9221)
!9221 = !{!1414, !9158}
!9222 = !{!9223}
!9223 = !DILocalVariable(name: "list", arg: 1, scope: !9219, file: !1245, line: 231, type: !9158)
!9224 = !DILocation(line: 0, scope: !9219)
!9225 = !DILocation(line: 233, column: 15, scope: !9219)
!9226 = !DILocation(line: 233, column: 2, scope: !9219)
!9227 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1245, file: !1245, line: 209, type: !9228, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9230)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{null, !1414, !1414}
!9230 = !{!9231, !9232}
!9231 = !DILocalVariable(name: "parent", arg: 1, scope: !9227, file: !1245, line: 209, type: !1414)
!9232 = !DILocalVariable(name: "child", arg: 2, scope: !9227, file: !1245, line: 209, type: !1414)
!9233 = !DILocation(line: 0, scope: !9227)
!9234 = !DILocation(line: 211, column: 10, scope: !9227)
!9235 = !DILocation(line: 211, column: 15, scope: !9227)
!9236 = !DILocation(line: 212, column: 1, scope: !9227)
!9237 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1245, file: !1245, line: 214, type: !9208, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9238)
!9238 = !{!9239, !9240}
!9239 = !DILocalVariable(name: "list", arg: 1, scope: !9237, file: !1245, line: 214, type: !9158)
!9240 = !DILocalVariable(name: "node", arg: 2, scope: !9237, file: !1245, line: 214, type: !1414)
!9241 = !DILocation(line: 0, scope: !9237)
!9242 = !DILocation(line: 216, column: 8, scope: !9237)
!9243 = !DILocation(line: 216, column: 13, scope: !9237)
!9244 = !DILocation(line: 217, column: 1, scope: !9237)
!9245 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1245, file: !1245, line: 243, type: !9220, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9246)
!9246 = !{!9247}
!9247 = !DILocalVariable(name: "list", arg: 1, scope: !9245, file: !1245, line: 243, type: !9158)
!9248 = !DILocation(line: 0, scope: !9245)
!9249 = !DILocation(line: 245, column: 15, scope: !9245)
!9250 = !DILocation(line: 245, column: 2, scope: !9245)
!9251 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1245, file: !1245, line: 219, type: !9208, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9252)
!9252 = !{!9253, !9254}
!9253 = !DILocalVariable(name: "list", arg: 1, scope: !9251, file: !1245, line: 219, type: !9158)
!9254 = !DILocalVariable(name: "node", arg: 2, scope: !9251, file: !1245, line: 219, type: !1414)
!9255 = !DILocation(line: 0, scope: !9251)
!9256 = !DILocation(line: 221, column: 8, scope: !9251)
!9257 = !DILocation(line: 221, column: 13, scope: !9251)
!9258 = !DILocation(line: 222, column: 1, scope: !9251)
!9259 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1245, file: !1245, line: 401, type: !9260, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{null, !9158, !1414, !1414}
!9262 = !{!9263, !9264, !9265}
!9263 = !DILocalVariable(name: "list", arg: 1, scope: !9259, file: !1245, line: 401, type: !9158)
!9264 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9259, file: !1245, line: 401, type: !1414)
!9265 = !DILocalVariable(name: "node", arg: 3, scope: !9259, file: !1245, line: 401, type: !1414)
!9266 = !DILocation(line: 0, scope: !9259)
!9267 = !DILocation(line: 401, column: 1, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9259, file: !1245, line: 401, column: 1)
!9269 = !DILocation(line: 0, scope: !9268)
!9270 = !DILocation(line: 401, column: 1, scope: !9259)
!9271 = !DILocation(line: 401, column: 1, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !1245, line: 401, column: 1)
!9273 = !DILocation(line: 401, column: 1, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9272, file: !1245, line: 401, column: 1)
!9275 = !DILocation(line: 401, column: 1, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9274, file: !1245, line: 401, column: 1)
!9277 = !DILocation(line: 401, column: 1, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9268, file: !1245, line: 401, column: 1)
!9279 = !DILocation(line: 401, column: 1, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9278, file: !1245, line: 401, column: 1)
!9281 = !DILocation(line: 401, column: 1, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9280, file: !1245, line: 401, column: 1)
!9283 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1245, file: !1245, line: 285, type: !9284, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9286)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{!1414, !1414}
!9286 = !{!9287}
!9287 = !DILocalVariable(name: "node", arg: 1, scope: !9283, file: !1245, line: 285, type: !1414)
!9288 = !DILocation(line: 0, scope: !9283)
!9289 = !DILocation(line: 285, column: 1, scope: !9283)
!9290 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1245, file: !1245, line: 274, type: !9284, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9291)
!9291 = !{!9292}
!9292 = !DILocalVariable(name: "node", arg: 1, scope: !9290, file: !1245, line: 274, type: !1414)
!9293 = !DILocation(line: 0, scope: !9290)
!9294 = !DILocation(line: 274, column: 1, scope: !9290)
!9295 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1245, file: !1245, line: 204, type: !9284, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9296)
!9296 = !{!9297}
!9297 = !DILocalVariable(name: "node", arg: 1, scope: !9295, file: !1245, line: 204, type: !1414)
!9298 = !DILocation(line: 0, scope: !9295)
!9299 = !DILocation(line: 206, column: 15, scope: !9295)
!9300 = !DILocation(line: 206, column: 2, scope: !9295)
!9301 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1341, file: !1341, line: 342, type: !283, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9302)
!9302 = !{!9303, !9304, !9305}
!9303 = !DILocalVariable(name: "pin", arg: 1, scope: !9301, file: !1341, line: 342, type: !55)
!9304 = !DILocalVariable(name: "line", scope: !9301, file: !1341, line: 344, type: !40)
!9305 = !DILocalVariable(name: "port", scope: !9301, file: !1341, line: 345, type: !55)
!9306 = !DILocation(line: 0, scope: !9301)
!9307 = !DILocation(line: 344, column: 18, scope: !9301)
!9308 = !{i32 983040, i32 0}
!9309 = !DILocation(line: 356, column: 9, scope: !9301)
!9310 = !DILocation(line: 370, column: 2, scope: !9301)
!9311 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1341, file: !1341, line: 37, type: !880, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9312)
!9312 = !{!9313, !9314, !9315}
!9313 = !DILocalVariable(name: "line", arg: 1, scope: !9311, file: !1341, line: 37, type: !55)
!9314 = !DILocalVariable(name: "arg", arg: 2, scope: !9311, file: !1341, line: 37, type: !39)
!9315 = !DILocalVariable(name: "data", scope: !9311, file: !1341, line: 39, type: !9106)
!9316 = !DILocation(line: 0, scope: !9311)
!9317 = !DILocation(line: 41, column: 29, scope: !9311)
!9318 = !DILocation(line: 41, column: 39, scope: !9311)
!9319 = !DILocation(line: 41, column: 44, scope: !9311)
!9320 = !DILocation(line: 41, column: 2, scope: !9311)
!9321 = !DILocation(line: 42, column: 1, scope: !9311)
!9322 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1341, file: !1341, line: 376, type: !9323, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9325)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!55, !55, !55}
!9325 = !{!9326, !9327, !9328, !9330, !9331}
!9326 = !DILocalVariable(name: "port", arg: 1, scope: !9322, file: !1341, line: 376, type: !55)
!9327 = !DILocalVariable(name: "pin", arg: 2, scope: !9322, file: !1341, line: 376, type: !55)
!9328 = !DILocalVariable(name: "clk", scope: !9322, file: !1341, line: 386, type: !9329)
!9329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!9330 = !DILocalVariable(name: "pclken", scope: !9322, file: !1341, line: 387, type: !1457)
!9331 = !DILocalVariable(name: "ret", scope: !9322, file: !1341, line: 396, type: !55)
!9332 = !DILocation(line: 0, scope: !9322)
!9333 = !DILocation(line: 387, column: 2, scope: !9322)
!9334 = !DILocation(line: 387, column: 22, scope: !9322)
!9335 = !DILocation(line: 399, column: 8, scope: !9322)
!9336 = !DILocation(line: 400, column: 10, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9322, file: !1341, line: 400, column: 6)
!9338 = !DILocation(line: 400, column: 6, scope: !9322)
!9339 = !DILocation(line: 405, column: 2, scope: !9322)
!9340 = !DILocation(line: 407, column: 2, scope: !9322)
!9341 = !DILocation(line: 408, column: 1, scope: !9322)
!9342 = distinct !DISubprogram(name: "clock_control_on", scope: !973, file: !973, line: 123, type: !1306, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9343)
!9343 = !{!9344, !9345, !9346}
!9344 = !DILocalVariable(name: "dev", arg: 1, scope: !9342, file: !973, line: 123, type: !1198)
!9345 = !DILocalVariable(name: "sys", arg: 2, scope: !9342, file: !973, line: 124, type: !1069)
!9346 = !DILocalVariable(name: "api", scope: !9342, file: !973, line: 126, type: !1299)
!9347 = !DILocation(line: 0, scope: !9342)
!9348 = !DILocation(line: 127, column: 49, scope: !9342)
!9349 = !DILocation(line: 129, column: 14, scope: !9342)
!9350 = !DILocation(line: 129, column: 9, scope: !9342)
!9351 = !DILocation(line: 129, column: 2, scope: !9342)
!9352 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1341, file: !1341, line: 311, type: !8468, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9353)
!9353 = !{!9354, !9355, !9356}
!9354 = !DILocalVariable(name: "port", arg: 1, scope: !9352, file: !1341, line: 311, type: !55)
!9355 = !DILocalVariable(name: "pin", arg: 2, scope: !9352, file: !1341, line: 311, type: !55)
!9356 = !DILocalVariable(name: "line", scope: !9352, file: !1341, line: 313, type: !40)
!9357 = !DILocation(line: 0, scope: !9352)
!9358 = !DILocation(line: 313, column: 18, scope: !9352)
!9359 = !DILocation(line: 337, column: 2, scope: !9352)
!9360 = !DILocation(line: 340, column: 1, scope: !9352)
!9361 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1341, file: !1341, line: 295, type: !9362, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9364)
!9362 = !DISubroutineType(types: !9363)
!9363 = !{!40, !55}
!9364 = !{!9365}
!9365 = !DILocalVariable(name: "pin", arg: 1, scope: !9361, file: !1341, line: 295, type: !55)
!9366 = !DILocation(line: 0, scope: !9361)
!9367 = !DILocation(line: 307, column: 46, scope: !9361)
!9368 = !DILocation(line: 307, column: 27, scope: !9361)
!9369 = !DILocation(line: 307, column: 32, scope: !9361)
!9370 = !DILocation(line: 307, column: 14, scope: !9361)
!9371 = !DILocation(line: 307, column: 39, scope: !9361)
!9372 = !DILocation(line: 307, column: 2, scope: !9361)
!9373 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6235, file: !6235, line: 671, type: !9374, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9376)
!9374 = !DISubroutineType(types: !9375)
!9375 = !{null, !40, !40}
!9376 = !{!9377, !9378}
!9377 = !DILocalVariable(name: "Port", arg: 1, scope: !9373, file: !6235, line: 671, type: !40)
!9378 = !DILocalVariable(name: "Line", arg: 2, scope: !9373, file: !6235, line: 671, type: !40)
!9379 = !DILocation(line: 0, scope: !9373)
!9380 = !DILocation(line: 673, column: 3, scope: !9373)
!9381 = !DILocalVariable(name: "value", arg: 1, scope: !9382, file: !6483, line: 373, type: !40)
!9382 = distinct !DISubprogram(name: "__RBIT", scope: !6483, file: !6483, line: 373, type: !7505, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9383)
!9383 = !{!9381, !9384}
!9384 = !DILocalVariable(name: "result", scope: !9382, file: !6483, line: 375, type: !40)
!9385 = !DILocation(line: 0, scope: !9382, inlinedAt: !9386)
!9386 = distinct !DILocation(line: 673, column: 3, scope: !9373)
!9387 = !DILocation(line: 380, column: 4, scope: !9382, inlinedAt: !9386)
!9388 = !{i64 3730561}
!9389 = !DILocalVariable(name: "value", arg: 1, scope: !9390, file: !6483, line: 403, type: !40)
!9390 = distinct !DISubprogram(name: "__CLZ", scope: !6483, file: !6483, line: 403, type: !9391, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9393)
!9391 = !DISubroutineType(types: !9392)
!9392 = !{!143, !40}
!9393 = !{!9389}
!9394 = !DILocation(line: 0, scope: !9390, inlinedAt: !9395)
!9395 = distinct !DILocation(line: 673, column: 3, scope: !9373)
!9396 = !DILocation(line: 414, column: 7, scope: !9390, inlinedAt: !9395)
!9397 = !DILocation(line: 674, column: 1, scope: !9373)
!9398 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9155, file: !9155, line: 69, type: !9399, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9401)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{null, !9158, !1198, !40}
!9401 = !{!9402, !9403, !9404, !9405, !9406}
!9402 = !DILocalVariable(name: "list", arg: 1, scope: !9398, file: !9155, line: 69, type: !9158)
!9403 = !DILocalVariable(name: "port", arg: 2, scope: !9398, file: !9155, line: 70, type: !1198)
!9404 = !DILocalVariable(name: "pins", arg: 3, scope: !9398, file: !9155, line: 71, type: !40)
!9405 = !DILocalVariable(name: "cb", scope: !9398, file: !9155, line: 73, type: !1240)
!9406 = !DILocalVariable(name: "tmp", scope: !9398, file: !9155, line: 73, type: !1240)
!9407 = !DILocation(line: 0, scope: !9398)
!9408 = !DILocation(line: 75, column: 2, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9398, file: !9155, line: 75, column: 2)
!9410 = !DILocation(line: 0, scope: !9409)
!9411 = !DILocation(line: 76, column: 11, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9413, file: !9155, line: 76, column: 7)
!9413 = distinct !DILexicalBlock(scope: !9414, file: !9155, line: 75, column: 57)
!9414 = distinct !DILexicalBlock(scope: !9409, file: !9155, line: 75, column: 2)
!9415 = !DILocation(line: 76, column: 20, scope: !9412)
!9416 = !DILocation(line: 76, column: 7, scope: !9413)
!9417 = !DILocation(line: 78, column: 8, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9412, file: !9155, line: 76, column: 28)
!9419 = !DILocation(line: 78, column: 4, scope: !9418)
!9420 = !DILocation(line: 79, column: 3, scope: !9418)
!9421 = !DILocation(line: 75, column: 2, scope: !9414)
!9422 = !DILocation(line: 81, column: 1, scope: !9398)
!9423 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6235, file: !6235, line: 710, type: !7505, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9424)
!9424 = !{!9425}
!9425 = !DILocalVariable(name: "Line", arg: 1, scope: !9423, file: !6235, line: 710, type: !40)
!9426 = !DILocation(line: 0, scope: !9423)
!9427 = !DILocation(line: 712, column: 21, scope: !9423)
!9428 = !DILocation(line: 0, scope: !9382, inlinedAt: !9429)
!9429 = distinct !DILocation(line: 712, column: 76, scope: !9423)
!9430 = !DILocation(line: 380, column: 4, scope: !9382, inlinedAt: !9429)
!9431 = !DILocation(line: 0, scope: !9390, inlinedAt: !9432)
!9432 = distinct !DILocation(line: 712, column: 76, scope: !9423)
!9433 = !DILocation(line: 414, column: 7, scope: !9390, inlinedAt: !9432)
!9434 = !DILocation(line: 712, column: 73, scope: !9423)
!9435 = !DILocation(line: 712, column: 3, scope: !9423)
!9436 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9437, file: !9437, line: 910, type: !9438, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9440)
!9437 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9438 = !DISubroutineType(types: !9439)
!9439 = !{null, !1271, !40}
!9440 = !{!9441, !9442}
!9441 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9436, file: !9437, line: 910, type: !1271)
!9442 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9436, file: !9437, line: 910, type: !40)
!9443 = !DILocation(line: 0, scope: !9436)
!9444 = !DILocation(line: 912, column: 3, scope: !9436)
!9445 = !DILocation(line: 913, column: 1, scope: !9436)
!9446 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9437, file: !9437, line: 823, type: !9447, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9449)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{!40, !1271}
!9449 = !{!9450}
!9450 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9446, file: !9437, line: 823, type: !1271)
!9451 = !DILocation(line: 0, scope: !9446)
!9452 = !DILocation(line: 825, column: 21, scope: !9446)
!9453 = !DILocation(line: 825, column: 3, scope: !9446)
!9454 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9437, file: !9437, line: 812, type: !9438, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9455)
!9455 = !{!9456, !9457}
!9456 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9454, file: !9437, line: 812, type: !1271)
!9457 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9454, file: !9437, line: 812, type: !40)
!9458 = !DILocation(line: 0, scope: !9454)
!9459 = !DILocation(line: 814, column: 3, scope: !9454)
!9460 = !DILocation(line: 815, column: 1, scope: !9454)
!9461 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9437, file: !9437, line: 771, type: !9447, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9462)
!9462 = !{!9463}
!9463 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9461, file: !9437, line: 771, type: !1271)
!9464 = !DILocation(line: 0, scope: !9461)
!9465 = !DILocation(line: 773, column: 21, scope: !9461)
!9466 = !DILocation(line: 773, column: 3, scope: !9461)
!9467 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1341, file: !1341, line: 47, type: !9468, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9470)
!9468 = !DISubroutineType(types: !9469)
!9469 = !{!55, !1214, !2889}
!9470 = !{!9471, !9472}
!9471 = !DILocalVariable(name: "flags", arg: 1, scope: !9467, file: !1341, line: 47, type: !1214)
!9472 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9467, file: !1341, line: 47, type: !2889)
!9473 = !DILocation(line: 0, scope: !9467)
!9474 = !DILocation(line: 50, column: 13, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9467, file: !1341, line: 50, column: 6)
!9476 = !DILocation(line: 50, column: 28, scope: !9475)
!9477 = !DILocation(line: 50, column: 6, scope: !9467)
!9478 = !DILocation(line: 53, column: 11, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !1341, line: 50, column: 34)
!9480 = !DILocation(line: 55, column: 14, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9479, file: !1341, line: 55, column: 7)
!9482 = !DILocation(line: 55, column: 35, scope: !9481)
!9483 = !DILocation(line: 55, column: 7, scope: !9479)
!9484 = !DILocation(line: 56, column: 14, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !1341, line: 56, column: 8)
!9486 = distinct !DILexicalBlock(scope: !9481, file: !1341, line: 55, column: 41)
!9487 = !DILocation(line: 56, column: 8, scope: !9486)
!9488 = !DILocation(line: 0, scope: !9481)
!9489 = !DILocation(line: 66, column: 14, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9479, file: !1341, line: 66, column: 7)
!9491 = !DILocation(line: 66, column: 30, scope: !9490)
!9492 = !DILocation(line: 66, column: 7, scope: !9479)
!9493 = !DILocation(line: 67, column: 12, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9490, file: !1341, line: 66, column: 36)
!9495 = !DILocation(line: 68, column: 3, scope: !9494)
!9496 = !DILocation(line: 68, column: 21, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9490, file: !1341, line: 68, column: 14)
!9498 = !DILocation(line: 68, column: 39, scope: !9497)
!9499 = !DILocation(line: 68, column: 14, scope: !9490)
!9500 = !DILocation(line: 69, column: 12, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9497, file: !1341, line: 68, column: 45)
!9502 = !DILocation(line: 70, column: 3, scope: !9501)
!9503 = !DILocation(line: 72, column: 21, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9475, file: !1341, line: 72, column: 14)
!9505 = !DILocation(line: 72, column: 35, scope: !9504)
!9506 = !DILocation(line: 72, column: 14, scope: !9475)
!9507 = !DILocation(line: 77, column: 14, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9509, file: !1341, line: 77, column: 7)
!9509 = distinct !DILexicalBlock(scope: !9504, file: !1341, line: 72, column: 41)
!9510 = !DILocation(line: 77, column: 30, scope: !9508)
!9511 = !DILocation(line: 77, column: 7, scope: !9509)
!9512 = !DILocation(line: 0, scope: !9475)
!9513 = !DILocation(line: 90, column: 1, scope: !9467)
!9514 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1341, file: !1341, line: 157, type: !9515, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9517)
!9515 = !DISubroutineType(types: !9516)
!9516 = !{null, !1198, !55, !55, !55}
!9517 = !{!9518, !9519, !9520, !9521, !9522, !9523, !9524, !9525, !9526, !9527, !9528}
!9518 = !DILocalVariable(name: "dev", arg: 1, scope: !9514, file: !1341, line: 157, type: !1198)
!9519 = !DILocalVariable(name: "pin", arg: 2, scope: !9514, file: !1341, line: 157, type: !55)
!9520 = !DILocalVariable(name: "conf", arg: 3, scope: !9514, file: !1341, line: 158, type: !55)
!9521 = !DILocalVariable(name: "func", arg: 4, scope: !9514, file: !1341, line: 158, type: !55)
!9522 = !DILocalVariable(name: "cfg", scope: !9514, file: !1341, line: 160, type: !9039)
!9523 = !DILocalVariable(name: "gpio", scope: !9514, file: !1341, line: 161, type: !1271)
!9524 = !DILocalVariable(name: "pin_ll", scope: !9514, file: !1341, line: 163, type: !55)
!9525 = !DILocalVariable(name: "mode", scope: !9514, file: !1341, line: 227, type: !41)
!9526 = !DILocalVariable(name: "otype", scope: !9514, file: !1341, line: 227, type: !41)
!9527 = !DILocalVariable(name: "ospeed", scope: !9514, file: !1341, line: 227, type: !41)
!9528 = !DILocalVariable(name: "pupd", scope: !9514, file: !1341, line: 227, type: !41)
!9529 = !DILocation(line: 0, scope: !9514)
!9530 = !DILocation(line: 160, column: 45, scope: !9514)
!9531 = !DILocation(line: 161, column: 44, scope: !9514)
!9532 = !DILocation(line: 163, column: 15, scope: !9514)
!9533 = !DILocation(line: 229, column: 14, scope: !9514)
!9534 = !DILocation(line: 246, column: 47, scope: !9514)
!9535 = !DILocation(line: 246, column: 2, scope: !9514)
!9536 = !DILocation(line: 248, column: 43, scope: !9514)
!9537 = !DILocation(line: 248, column: 2, scope: !9514)
!9538 = !DILocation(line: 250, column: 40, scope: !9514)
!9539 = !DILocation(line: 250, column: 2, scope: !9514)
!9540 = !DILocation(line: 252, column: 11, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9514, file: !1341, line: 252, column: 6)
!9542 = !DILocation(line: 252, column: 6, scope: !9514)
!9543 = !DILocation(line: 253, column: 11, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !1341, line: 253, column: 7)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !1341, line: 252, column: 36)
!9546 = !DILocation(line: 253, column: 7, scope: !9545)
!9547 = !DILocation(line: 254, column: 4, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9544, file: !1341, line: 253, column: 16)
!9549 = !DILocation(line: 255, column: 3, scope: !9548)
!9550 = !DILocation(line: 256, column: 4, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9544, file: !1341, line: 255, column: 10)
!9552 = !DILocation(line: 260, column: 40, scope: !9514)
!9553 = !DILocation(line: 260, column: 2, scope: !9514)
!9554 = !DILocation(line: 265, column: 1, scope: !9514)
!9555 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1341, file: !1341, line: 137, type: !9362, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9556)
!9556 = !{!9557, !9558}
!9557 = !DILocalVariable(name: "pin", arg: 1, scope: !9555, file: !1341, line: 137, type: !55)
!9558 = !DILocalVariable(name: "pinval", scope: !9555, file: !1341, line: 139, type: !40)
!9559 = !DILocation(line: 0, scope: !9555)
!9560 = !DILocation(line: 149, column: 13, scope: !9555)
!9561 = !DILocation(line: 151, column: 2, scope: !9555)
!9562 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9437, file: !9437, line: 342, type: !9563, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9565)
!9563 = !DISubroutineType(types: !9564)
!9564 = !{null, !1271, !40, !40}
!9565 = !{!9566, !9567, !9568}
!9566 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9562, file: !9437, line: 342, type: !1271)
!9567 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9562, file: !9437, line: 342, type: !40)
!9568 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9562, file: !9437, line: 342, type: !40)
!9569 = !DILocation(line: 0, scope: !9562)
!9570 = !DILocation(line: 344, column: 3, scope: !9562)
!9571 = !DILocation(line: 345, column: 1, scope: !9562)
!9572 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9437, file: !9437, line: 413, type: !9563, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9573)
!9573 = !{!9574, !9575, !9576}
!9574 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9572, file: !9437, line: 413, type: !1271)
!9575 = !DILocalVariable(name: "Pin", arg: 2, scope: !9572, file: !9437, line: 413, type: !40)
!9576 = !DILocalVariable(name: "Speed", arg: 3, scope: !9572, file: !9437, line: 413, type: !40)
!9577 = !DILocation(line: 0, scope: !9572)
!9578 = !DILocation(line: 415, column: 3, scope: !9572)
!9579 = !DILocation(line: 0, scope: !9382, inlinedAt: !9580)
!9580 = distinct !DILocation(line: 415, column: 3, scope: !9572)
!9581 = !DILocation(line: 380, column: 4, scope: !9382, inlinedAt: !9580)
!9582 = !DILocation(line: 0, scope: !9390, inlinedAt: !9583)
!9583 = distinct !DILocation(line: 415, column: 3, scope: !9572)
!9584 = !DILocation(line: 414, column: 7, scope: !9390, inlinedAt: !9583)
!9585 = !DILocation(line: 0, scope: !9382, inlinedAt: !9586)
!9586 = distinct !DILocation(line: 415, column: 3, scope: !9572)
!9587 = !DILocation(line: 0, scope: !9390, inlinedAt: !9588)
!9588 = distinct !DILocation(line: 415, column: 3, scope: !9572)
!9589 = !DILocation(line: 417, column: 1, scope: !9572)
!9590 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9437, file: !9437, line: 484, type: !9563, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9591)
!9591 = !{!9592, !9593, !9594}
!9592 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9590, file: !9437, line: 484, type: !1271)
!9593 = !DILocalVariable(name: "Pin", arg: 2, scope: !9590, file: !9437, line: 484, type: !40)
!9594 = !DILocalVariable(name: "Pull", arg: 3, scope: !9590, file: !9437, line: 484, type: !40)
!9595 = !DILocation(line: 0, scope: !9590)
!9596 = !DILocation(line: 486, column: 3, scope: !9590)
!9597 = !DILocation(line: 0, scope: !9382, inlinedAt: !9598)
!9598 = distinct !DILocation(line: 486, column: 3, scope: !9590)
!9599 = !DILocation(line: 380, column: 4, scope: !9382, inlinedAt: !9598)
!9600 = !DILocation(line: 0, scope: !9390, inlinedAt: !9601)
!9601 = distinct !DILocation(line: 486, column: 3, scope: !9590)
!9602 = !DILocation(line: 414, column: 7, scope: !9390, inlinedAt: !9601)
!9603 = !DILocation(line: 0, scope: !9382, inlinedAt: !9604)
!9604 = distinct !DILocation(line: 486, column: 3, scope: !9590)
!9605 = !DILocation(line: 0, scope: !9390, inlinedAt: !9606)
!9606 = distinct !DILocation(line: 486, column: 3, scope: !9590)
!9607 = !DILocation(line: 487, column: 1, scope: !9590)
!9608 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9437, file: !9437, line: 556, type: !9563, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9609)
!9609 = !{!9610, !9611, !9612}
!9610 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9608, file: !9437, line: 556, type: !1271)
!9611 = !DILocalVariable(name: "Pin", arg: 2, scope: !9608, file: !9437, line: 556, type: !40)
!9612 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9608, file: !9437, line: 556, type: !40)
!9613 = !DILocation(line: 0, scope: !9608)
!9614 = !DILocation(line: 558, column: 3, scope: !9608)
!9615 = !DILocation(line: 0, scope: !9382, inlinedAt: !9616)
!9616 = distinct !DILocation(line: 558, column: 3, scope: !9608)
!9617 = !DILocation(line: 380, column: 4, scope: !9382, inlinedAt: !9616)
!9618 = !DILocation(line: 0, scope: !9390, inlinedAt: !9619)
!9619 = distinct !DILocation(line: 558, column: 3, scope: !9608)
!9620 = !DILocation(line: 414, column: 7, scope: !9390, inlinedAt: !9619)
!9621 = !DILocation(line: 0, scope: !9382, inlinedAt: !9622)
!9622 = distinct !DILocation(line: 558, column: 3, scope: !9608)
!9623 = !DILocation(line: 0, scope: !9390, inlinedAt: !9624)
!9624 = distinct !DILocation(line: 558, column: 3, scope: !9608)
!9625 = !DILocation(line: 560, column: 1, scope: !9608)
!9626 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9437, file: !9437, line: 633, type: !9563, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9627)
!9627 = !{!9628, !9629, !9630}
!9628 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9626, file: !9437, line: 633, type: !1271)
!9629 = !DILocalVariable(name: "Pin", arg: 2, scope: !9626, file: !9437, line: 633, type: !40)
!9630 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9626, file: !9437, line: 633, type: !40)
!9631 = !DILocation(line: 0, scope: !9626)
!9632 = !DILocation(line: 635, column: 3, scope: !9626)
!9633 = !DILocation(line: 0, scope: !9382, inlinedAt: !9634)
!9634 = distinct !DILocation(line: 635, column: 3, scope: !9626)
!9635 = !DILocation(line: 380, column: 4, scope: !9382, inlinedAt: !9634)
!9636 = !DILocation(line: 0, scope: !9390, inlinedAt: !9637)
!9637 = distinct !DILocation(line: 635, column: 3, scope: !9626)
!9638 = !DILocation(line: 414, column: 7, scope: !9390, inlinedAt: !9637)
!9639 = !DILocation(line: 0, scope: !9382, inlinedAt: !9640)
!9640 = distinct !DILocation(line: 635, column: 3, scope: !9626)
!9641 = !DILocation(line: 0, scope: !9390, inlinedAt: !9642)
!9642 = distinct !DILocation(line: 635, column: 3, scope: !9626)
!9643 = !DILocation(line: 637, column: 1, scope: !9626)
!9644 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9437, file: !9437, line: 273, type: !9563, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9645)
!9645 = !{!9646, !9647, !9648}
!9646 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9644, file: !9437, line: 273, type: !1271)
!9647 = !DILocalVariable(name: "Pin", arg: 2, scope: !9644, file: !9437, line: 273, type: !40)
!9648 = !DILocalVariable(name: "Mode", arg: 3, scope: !9644, file: !9437, line: 273, type: !40)
!9649 = !DILocation(line: 0, scope: !9644)
!9650 = !DILocation(line: 275, column: 3, scope: !9644)
!9651 = !DILocation(line: 0, scope: !9382, inlinedAt: !9652)
!9652 = distinct !DILocation(line: 275, column: 3, scope: !9644)
!9653 = !DILocation(line: 380, column: 4, scope: !9382, inlinedAt: !9652)
!9654 = !DILocation(line: 0, scope: !9390, inlinedAt: !9655)
!9655 = distinct !DILocation(line: 275, column: 3, scope: !9644)
!9656 = !DILocation(line: 414, column: 7, scope: !9390, inlinedAt: !9655)
!9657 = !DILocation(line: 0, scope: !9382, inlinedAt: !9658)
!9658 = distinct !DILocation(line: 275, column: 3, scope: !9644)
!9659 = !DILocation(line: 0, scope: !9390, inlinedAt: !9660)
!9660 = distinct !DILocation(line: 275, column: 3, scope: !9644)
!9661 = !DILocation(line: 276, column: 1, scope: !9644)
!9662 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1341, file: !1341, line: 698, type: !1354, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9663)
!9663 = !{!9664, !9665, !9666}
!9664 = !DILocalVariable(name: "dev", arg: 1, scope: !9662, file: !1341, line: 698, type: !1198)
!9665 = !DILocalVariable(name: "data", scope: !9662, file: !1341, line: 700, type: !9106)
!9666 = !DILocalVariable(name: "ret", scope: !9662, file: !1341, line: 701, type: !55)
!9667 = !DILocation(line: 0, scope: !9662)
!9668 = !DILocation(line: 700, column: 38, scope: !9662)
!9669 = !DILocation(line: 703, column: 8, scope: !9662)
!9670 = !DILocation(line: 703, column: 12, scope: !9662)
!9671 = !DILocation(line: 705, column: 7, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9662, file: !1341, line: 705, column: 6)
!9673 = !DILocation(line: 705, column: 6, scope: !9662)
!9674 = !DILocation(line: 722, column: 8, scope: !9662)
!9675 = !DILocation(line: 723, column: 10, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9662, file: !1341, line: 723, column: 6)
!9677 = !DILocation(line: 723, column: 6, scope: !9662)
!9678 = !DILocation(line: 731, column: 1, scope: !9662)
!9679 = distinct !DISubprogram(name: "device_is_ready", scope: !8884, file: !8884, line: 47, type: !9680, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9682)
!9680 = !DISubroutineType(types: !9681)
!9681 = !{!329, !1198}
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "dev", arg: 1, scope: !9679, file: !8884, line: 47, type: !1198)
!9684 = !DILocation(line: 0, scope: !9679)
!9685 = !DILocation(line: 55, column: 2, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9679, file: !8884, line: 55, column: 2)
!9687 = !{i64 2155277686}
!9688 = !DILocation(line: 56, column: 9, scope: !9679)
!9689 = !DILocation(line: 56, column: 2, scope: !9679)
!9690 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1341, file: !1341, line: 270, type: !9691, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9693)
!9691 = !DISubroutineType(types: !9692)
!9692 = !{!55, !1198, !329}
!9693 = !{!9694, !9695, !9696, !9697, !9698}
!9694 = !DILocalVariable(name: "dev", arg: 1, scope: !9690, file: !1341, line: 270, type: !1198)
!9695 = !DILocalVariable(name: "on", arg: 2, scope: !9690, file: !1341, line: 270, type: !329)
!9696 = !DILocalVariable(name: "cfg", scope: !9690, file: !1341, line: 272, type: !9039)
!9697 = !DILocalVariable(name: "ret", scope: !9690, file: !1341, line: 273, type: !55)
!9698 = !DILocalVariable(name: "clk", scope: !9690, file: !1341, line: 278, type: !9329)
!9699 = !DILocation(line: 0, scope: !9690)
!9700 = !DILocation(line: 272, column: 45, scope: !9690)
!9701 = !DILocation(line: 282, column: 38, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !1341, line: 280, column: 10)
!9703 = distinct !DILexicalBlock(scope: !9690, file: !1341, line: 280, column: 6)
!9704 = !DILocation(line: 282, column: 6, scope: !9702)
!9705 = !DILocation(line: 281, column: 9, scope: !9702)
!9706 = !DILocation(line: 293, column: 1, scope: !9690)
!9707 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !316, file: !316, line: 730, type: !9680, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9708)
!9708 = !{!9709}
!9709 = !DILocalVariable(name: "dev", arg: 1, scope: !9707, file: !316, line: 730, type: !1198)
!9710 = !DILocation(line: 0, scope: !9707)
!9711 = !DILocation(line: 732, column: 9, scope: !9707)
!9712 = !DILocation(line: 732, column: 2, scope: !9707)
!9713 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1341, file: !1341, line: 496, type: !9714, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !9716)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!55, !1198, !55, !55, !55}
!9716 = !{!9717, !9718, !9719, !9720, !9721, !9722}
!9717 = !DILocalVariable(name: "dev", arg: 1, scope: !9713, file: !1341, line: 496, type: !1198)
!9718 = !DILocalVariable(name: "pin", arg: 2, scope: !9713, file: !1341, line: 496, type: !55)
!9719 = !DILocalVariable(name: "conf", arg: 3, scope: !9713, file: !1341, line: 496, type: !55)
!9720 = !DILocalVariable(name: "func", arg: 4, scope: !9713, file: !1341, line: 496, type: !55)
!9721 = !DILocalVariable(name: "ret", scope: !9713, file: !1341, line: 498, type: !55)
!9722 = !DILocalVariable(name: "gpio_out", scope: !9723, file: !1341, line: 508, type: !40)
!9723 = distinct !DILexicalBlock(scope: !9724, file: !1341, line: 507, column: 27)
!9724 = distinct !DILexicalBlock(scope: !9713, file: !1341, line: 507, column: 6)
!9725 = !DILocation(line: 0, scope: !9713)
!9726 = !DILocation(line: 505, column: 2, scope: !9713)
!9727 = !DILocation(line: 507, column: 11, scope: !9724)
!9728 = !DILocation(line: 507, column: 6, scope: !9713)
!9729 = !DILocation(line: 508, column: 28, scope: !9723)
!9730 = !DILocation(line: 0, scope: !9723)
!9731 = !DILocation(line: 510, column: 16, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9723, file: !1341, line: 510, column: 7)
!9733 = !DILocation(line: 0, scope: !9732)
!9734 = !DILocation(line: 510, column: 7, scope: !9723)
!9735 = !DILocation(line: 511, column: 4, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9732, file: !1341, line: 510, column: 32)
!9737 = !DILocation(line: 512, column: 3, scope: !9736)
!9738 = !DILocation(line: 513, column: 4, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !1341, line: 512, column: 39)
!9740 = distinct !DILexicalBlock(scope: !9732, file: !1341, line: 512, column: 14)
!9741 = !DILocation(line: 514, column: 3, scope: !9739)
!9742 = !DILocation(line: 518, column: 1, scope: !9713)
!9743 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1614, file: !1614, line: 526, type: !1517, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9744)
!9744 = !{!9745, !9746, !9747}
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9743, file: !1614, line: 526, type: !1519)
!9746 = !DILocalVariable(name: "c", arg: 2, scope: !9743, file: !1614, line: 526, type: !1130)
!9747 = !DILocalVariable(name: "config", scope: !9743, file: !1614, line: 528, type: !9748)
!9748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!9749 = !DILocation(line: 0, scope: !9743)
!9750 = !DILocation(line: 528, column: 48, scope: !9743)
!9751 = !DILocation(line: 531, column: 40, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9743, file: !1614, line: 531, column: 6)
!9753 = !DILocation(line: 531, column: 6, scope: !9752)
!9754 = !DILocation(line: 531, column: 6, scope: !9743)
!9755 = !DILocation(line: 532, column: 34, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9752, file: !1614, line: 531, column: 48)
!9757 = !DILocation(line: 532, column: 3, scope: !9756)
!9758 = !DILocation(line: 533, column: 2, scope: !9756)
!9759 = !DILocation(line: 539, column: 42, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9743, file: !1614, line: 539, column: 6)
!9761 = !DILocation(line: 539, column: 7, scope: !9760)
!9762 = !DILocation(line: 539, column: 6, scope: !9743)
!9763 = !DILocation(line: 543, column: 52, scope: !9743)
!9764 = !DILocation(line: 543, column: 22, scope: !9743)
!9765 = !DILocation(line: 543, column: 5, scope: !9743)
!9766 = !DILocation(line: 545, column: 2, scope: !9743)
!9767 = !DILocation(line: 546, column: 1, scope: !9743)
!9768 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1614, file: !1614, line: 548, type: !1536, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9769)
!9769 = !{!9770, !9771, !9772, !9773}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !1614, line: 548, type: !1519)
!9771 = !DILocalVariable(name: "c", arg: 2, scope: !9768, file: !1614, line: 549, type: !144)
!9772 = !DILocalVariable(name: "config", scope: !9768, file: !1614, line: 551, type: !9748)
!9773 = !DILocalVariable(name: "key", scope: !9768, file: !1614, line: 555, type: !41)
!9774 = !DILocation(line: 0, scope: !9768)
!9775 = !DILocation(line: 551, column: 48, scope: !9768)
!9776 = !DILocation(line: 562, column: 2, scope: !9768)
!9777 = !DILocation(line: 563, column: 41, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9779, file: !1614, line: 563, column: 7)
!9779 = distinct !DILexicalBlock(scope: !9768, file: !1614, line: 562, column: 12)
!9780 = !DILocation(line: 563, column: 7, scope: !9778)
!9781 = !DILocation(line: 563, column: 7, scope: !9779)
!9782 = !DILocation(line: 55, column: 2, scope: !9783, inlinedAt: !9787)
!9783 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9784)
!9784 = !{!9785, !9786}
!9785 = !DILocalVariable(name: "key", scope: !9783, file: !6214, line: 44, type: !41)
!9786 = !DILocalVariable(name: "tmp", scope: !9783, file: !6214, line: 53, type: !41)
!9787 = distinct !DILocation(line: 564, column: 10, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9778, file: !1614, line: 563, column: 49)
!9789 = !{i64 2327411}
!9790 = !DILocation(line: 0, scope: !9783, inlinedAt: !9787)
!9791 = !DILocation(line: 565, column: 42, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9788, file: !1614, line: 565, column: 8)
!9793 = !DILocation(line: 565, column: 8, scope: !9792)
!9794 = !DILocation(line: 565, column: 8, scope: !9788)
!9795 = !DILocalVariable(name: "key", arg: 1, scope: !9796, file: !6214, line: 84, type: !41)
!9796 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9797)
!9797 = !{!9795}
!9798 = !DILocation(line: 0, scope: !9796, inlinedAt: !9799)
!9799 = distinct !DILocation(line: 568, column: 4, scope: !9788)
!9800 = !DILocation(line: 95, column: 2, scope: !9796, inlinedAt: !9799)
!9801 = !{i64 2328228}
!9802 = !DILocation(line: 569, column: 3, scope: !9788)
!9803 = distinct !{!9803, !9776, !9804}
!9804 = !DILocation(line: 570, column: 2, scope: !9768)
!9805 = !DILocation(line: 592, column: 33, scope: !9768)
!9806 = !DILocation(line: 592, column: 2, scope: !9768)
!9807 = !DILocation(line: 0, scope: !9796, inlinedAt: !9808)
!9808 = distinct !DILocation(line: 593, column: 2, scope: !9768)
!9809 = !DILocation(line: 95, column: 2, scope: !9796, inlinedAt: !9808)
!9810 = !DILocation(line: 594, column: 1, scope: !9768)
!9811 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1614, file: !1614, line: 596, type: !1540, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9812)
!9812 = !{!9813, !9814, !9815}
!9813 = !DILocalVariable(name: "dev", arg: 1, scope: !9811, file: !1614, line: 596, type: !1519)
!9814 = !DILocalVariable(name: "config", scope: !9811, file: !1614, line: 598, type: !9748)
!9815 = !DILocalVariable(name: "err", scope: !9811, file: !1614, line: 599, type: !40)
!9816 = !DILocation(line: 0, scope: !9811)
!9817 = !DILocation(line: 598, column: 48, scope: !9811)
!9818 = !DILocation(line: 606, column: 40, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 606, column: 6)
!9820 = !DILocation(line: 606, column: 6, scope: !9819)
!9821 = !DILocation(line: 606, column: 6, scope: !9811)
!9822 = !DILocation(line: 610, column: 39, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 610, column: 6)
!9824 = !DILocation(line: 610, column: 6, scope: !9823)
!9825 = !DILocation(line: 610, column: 6, scope: !9811)
!9826 = !DILocation(line: 614, column: 39, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 614, column: 6)
!9828 = !DILocation(line: 614, column: 6, scope: !9827)
!9829 = !DILocation(line: 614, column: 6, scope: !9811)
!9830 = !DILocation(line: 619, column: 40, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 619, column: 6)
!9832 = !DILocation(line: 619, column: 6, scope: !9831)
!9833 = !DILocation(line: 619, column: 6, scope: !9811)
!9834 = !DILocation(line: 623, column: 10, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 623, column: 6)
!9836 = !DILocation(line: 623, column: 6, scope: !9811)
!9837 = !DILocation(line: 624, column: 34, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9835, file: !1614, line: 623, column: 24)
!9839 = !DILocation(line: 624, column: 3, scope: !9838)
!9840 = !DILocation(line: 625, column: 2, scope: !9838)
!9841 = !DILocation(line: 632, column: 10, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 632, column: 6)
!9843 = !DILocation(line: 632, column: 6, scope: !9811)
!9844 = !DILocation(line: 633, column: 34, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9842, file: !1614, line: 632, column: 32)
!9846 = !DILocation(line: 633, column: 3, scope: !9845)
!9847 = !DILocation(line: 634, column: 2, scope: !9845)
!9848 = !DILocation(line: 636, column: 10, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 636, column: 6)
!9850 = !DILocation(line: 636, column: 6, scope: !9811)
!9851 = !DILocation(line: 637, column: 33, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9849, file: !1614, line: 636, column: 31)
!9853 = !DILocation(line: 637, column: 3, scope: !9852)
!9854 = !DILocation(line: 638, column: 2, scope: !9852)
!9855 = !DILocation(line: 640, column: 10, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9811, file: !1614, line: 640, column: 6)
!9857 = !DILocation(line: 640, column: 6, scope: !9811)
!9858 = !DILocation(line: 641, column: 33, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9856, file: !1614, line: 640, column: 32)
!9860 = !DILocation(line: 641, column: 3, scope: !9859)
!9861 = !DILocation(line: 642, column: 2, scope: !9859)
!9862 = !DILocation(line: 646, column: 32, scope: !9811)
!9863 = !DILocation(line: 646, column: 2, scope: !9811)
!9864 = !DILocation(line: 648, column: 2, scope: !9811)
!9865 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1614, file: !1614, line: 419, type: !1544, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9866)
!9866 = !{!9867, !9868, !9869, !9870, !9872, !9873, !9874, !9875}
!9867 = !DILocalVariable(name: "dev", arg: 1, scope: !9865, file: !1614, line: 419, type: !1519)
!9868 = !DILocalVariable(name: "cfg", arg: 2, scope: !9865, file: !1614, line: 420, type: !1546)
!9869 = !DILocalVariable(name: "config", scope: !9865, file: !1614, line: 422, type: !9748)
!9870 = !DILocalVariable(name: "data", scope: !9865, file: !1614, line: 423, type: !9871)
!9871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!9872 = !DILocalVariable(name: "parity", scope: !9865, file: !1614, line: 424, type: !6753)
!9873 = !DILocalVariable(name: "stopbits", scope: !9865, file: !1614, line: 425, type: !6753)
!9874 = !DILocalVariable(name: "databits", scope: !9865, file: !1614, line: 426, type: !6753)
!9875 = !DILocalVariable(name: "flowctrl", scope: !9865, file: !1614, line: 428, type: !6753)
!9876 = !DILocation(line: 0, scope: !9865)
!9877 = !DILocation(line: 422, column: 48, scope: !9865)
!9878 = !DILocation(line: 423, column: 38, scope: !9865)
!9879 = !DILocation(line: 424, column: 56, scope: !9865)
!9880 = !DILocation(line: 424, column: 51, scope: !9865)
!9881 = !DILocation(line: 424, column: 26, scope: !9865)
!9882 = !DILocation(line: 425, column: 60, scope: !9865)
!9883 = !DILocation(line: 425, column: 55, scope: !9865)
!9884 = !DILocation(line: 425, column: 28, scope: !9865)
!9885 = !DILocation(line: 426, column: 60, scope: !9865)
!9886 = !DILocation(line: 426, column: 55, scope: !9865)
!9887 = !DILocation(line: 426, column: 28, scope: !9865)
!9888 = !DILocation(line: 428, column: 58, scope: !9865)
!9889 = !DILocation(line: 428, column: 53, scope: !9865)
!9890 = !DILocation(line: 428, column: 28, scope: !9865)
!9891 = !DILocation(line: 431, column: 44, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 431, column: 6)
!9893 = !DILocation(line: 438, column: 22, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 437, column: 6)
!9895 = !DILocation(line: 437, column: 6, scope: !9865)
!9896 = !DILocation(line: 448, column: 6, scope: !9865)
!9897 = !DILocation(line: 465, column: 47, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 465, column: 6)
!9899 = !DILocation(line: 475, column: 21, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 475, column: 6)
!9901 = !DILocation(line: 475, column: 6, scope: !9865)
!9902 = !DILocation(line: 476, column: 8, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !1614, line: 476, column: 7)
!9904 = distinct !DILexicalBlock(scope: !9900, file: !1614, line: 475, column: 49)
!9905 = !DILocation(line: 477, column: 34, scope: !9903)
!9906 = !DILocation(line: 476, column: 7, scope: !9904)
!9907 = !DILocation(line: 482, column: 27, scope: !9865)
!9908 = !DILocation(line: 482, column: 2, scope: !9865)
!9909 = !DILocation(line: 484, column: 16, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 484, column: 6)
!9911 = !DILocation(line: 484, column: 13, scope: !9910)
!9912 = !DILocation(line: 484, column: 6, scope: !9865)
!9913 = !DILocation(line: 485, column: 3, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9910, file: !1614, line: 484, column: 44)
!9915 = !DILocation(line: 486, column: 2, scope: !9914)
!9916 = !DILocation(line: 488, column: 18, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 488, column: 6)
!9918 = !DILocation(line: 488, column: 15, scope: !9917)
!9919 = !DILocation(line: 488, column: 6, scope: !9865)
!9920 = !DILocation(line: 489, column: 3, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9917, file: !1614, line: 488, column: 48)
!9922 = !DILocation(line: 490, column: 2, scope: !9921)
!9923 = !DILocation(line: 492, column: 18, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 492, column: 6)
!9925 = !DILocation(line: 492, column: 15, scope: !9924)
!9926 = !DILocation(line: 492, column: 6, scope: !9865)
!9927 = !DILocation(line: 493, column: 3, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9924, file: !1614, line: 492, column: 48)
!9929 = !DILocation(line: 494, column: 2, scope: !9928)
!9930 = !DILocation(line: 496, column: 18, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 496, column: 6)
!9932 = !DILocation(line: 496, column: 15, scope: !9931)
!9933 = !DILocation(line: 496, column: 6, scope: !9865)
!9934 = !DILocation(line: 497, column: 3, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9931, file: !1614, line: 496, column: 46)
!9936 = !DILocation(line: 498, column: 2, scope: !9935)
!9937 = !DILocation(line: 500, column: 11, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9865, file: !1614, line: 500, column: 6)
!9939 = !DILocation(line: 500, column: 29, scope: !9938)
!9940 = !DILocation(line: 500, column: 20, scope: !9938)
!9941 = !DILocation(line: 500, column: 6, scope: !9865)
!9942 = !DILocation(line: 501, column: 3, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9938, file: !1614, line: 500, column: 40)
!9944 = !DILocation(line: 502, column: 26, scope: !9943)
!9945 = !DILocation(line: 502, column: 19, scope: !9943)
!9946 = !DILocation(line: 503, column: 2, scope: !9943)
!9947 = !DILocation(line: 505, column: 26, scope: !9865)
!9948 = !DILocation(line: 505, column: 2, scope: !9865)
!9949 = !DILocation(line: 506, column: 2, scope: !9865)
!9950 = !DILocation(line: 507, column: 1, scope: !9865)
!9951 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1614, file: !1614, line: 509, type: !1557, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9952)
!9952 = !{!9953, !9954, !9955}
!9953 = !DILocalVariable(name: "dev", arg: 1, scope: !9951, file: !1614, line: 509, type: !1519)
!9954 = !DILocalVariable(name: "cfg", arg: 2, scope: !9951, file: !1614, line: 510, type: !1559)
!9955 = !DILocalVariable(name: "data", scope: !9951, file: !1614, line: 512, type: !9871)
!9956 = !DILocation(line: 0, scope: !9951)
!9957 = !DILocation(line: 512, column: 38, scope: !9951)
!9958 = !DILocation(line: 514, column: 24, scope: !9951)
!9959 = !DILocation(line: 514, column: 7, scope: !9951)
!9960 = !DILocation(line: 514, column: 16, scope: !9951)
!9961 = !DILocation(line: 515, column: 41, scope: !9951)
!9962 = !{i32 0, i32 1537}
!9963 = !DILocation(line: 515, column: 16, scope: !9951)
!9964 = !DILocation(line: 515, column: 7, scope: !9951)
!9965 = !DILocation(line: 515, column: 14, scope: !9951)
!9966 = !DILocation(line: 517, column: 3, scope: !9951)
!9967 = !{i32 0, i32 12289}
!9968 = !DILocation(line: 516, column: 19, scope: !9951)
!9969 = !DILocation(line: 516, column: 7, scope: !9951)
!9970 = !DILocation(line: 516, column: 17, scope: !9951)
!9971 = !DILocation(line: 519, column: 3, scope: !9951)
!9972 = !DILocation(line: 519, column: 33, scope: !9951)
!9973 = !DILocation(line: 518, column: 19, scope: !9951)
!9974 = !DILocation(line: 518, column: 7, scope: !9951)
!9975 = !DILocation(line: 518, column: 17, scope: !9951)
!9976 = !DILocation(line: 521, column: 3, scope: !9951)
!9977 = !{i32 0, i32 769}
!9978 = !DILocation(line: 520, column: 19, scope: !9951)
!9979 = !DILocation(line: 520, column: 7, scope: !9951)
!9980 = !DILocation(line: 520, column: 17, scope: !9951)
!9981 = !DILocation(line: 522, column: 2, scope: !9951)
!9982 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1614, file: !1614, line: 205, type: !9983, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9985)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{!40, !1519}
!9985 = !{!9986, !9987}
!9986 = !DILocalVariable(name: "dev", arg: 1, scope: !9982, file: !1614, line: 205, type: !1519)
!9987 = !DILocalVariable(name: "config", scope: !9982, file: !1614, line: 207, type: !9748)
!9988 = !DILocation(line: 0, scope: !9982)
!9989 = !DILocation(line: 207, column: 48, scope: !9982)
!9990 = !DILocation(line: 209, column: 36, scope: !9982)
!9991 = !DILocation(line: 209, column: 9, scope: !9982)
!9992 = !DILocation(line: 209, column: 2, scope: !9982)
!9993 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1614, file: !1614, line: 270, type: !9994, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !9996)
!9994 = !DISubroutineType(types: !9995)
!9995 = !{!1485, !40}
!9996 = !{!9997}
!9997 = !DILocalVariable(name: "parity", arg: 1, scope: !9993, file: !1614, line: 270, type: !40)
!9998 = !DILocation(line: 0, scope: !9993)
!9999 = !DILocation(line: 272, column: 2, scope: !9993)
!10000 = !DILocation(line: 281, column: 1, scope: !9993)
!10001 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1614, file: !1614, line: 220, type: !9983, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10002)
!10002 = !{!10003, !10004}
!10003 = !DILocalVariable(name: "dev", arg: 1, scope: !10001, file: !1614, line: 220, type: !1519)
!10004 = !DILocalVariable(name: "config", scope: !10001, file: !1614, line: 222, type: !9748)
!10005 = !DILocation(line: 0, scope: !10001)
!10006 = !DILocation(line: 222, column: 48, scope: !10001)
!10007 = !DILocation(line: 224, column: 44, scope: !10001)
!10008 = !DILocation(line: 224, column: 9, scope: !10001)
!10009 = !DILocation(line: 224, column: 2, scope: !10001)
!10010 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1614, file: !1614, line: 304, type: !10011, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10013)
!10011 = !DISubroutineType(types: !10012)
!10012 = !{!1499, !40}
!10013 = !{!10014}
!10014 = !DILocalVariable(name: "sb", arg: 1, scope: !10010, file: !1614, line: 304, type: !40)
!10015 = !DILocation(line: 0, scope: !10010)
!10016 = !DILocation(line: 306, column: 2, scope: !10010)
!10017 = !DILocation(line: 0, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10010, file: !1614, line: 306, column: 14)
!10019 = !DILocation(line: 323, column: 1, scope: !10010)
!10020 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1614, file: !1614, line: 235, type: !9983, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10021)
!10021 = !{!10022, !10023}
!10022 = !DILocalVariable(name: "dev", arg: 1, scope: !10020, file: !1614, line: 235, type: !1519)
!10023 = !DILocalVariable(name: "config", scope: !10020, file: !1614, line: 237, type: !9748)
!10024 = !DILocation(line: 0, scope: !10020)
!10025 = !DILocation(line: 237, column: 48, scope: !10020)
!10026 = !DILocation(line: 239, column: 39, scope: !10020)
!10027 = !DILocation(line: 239, column: 9, scope: !10020)
!10028 = !DILocation(line: 239, column: 2, scope: !10020)
!10029 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1614, file: !1614, line: 355, type: !10030, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10032)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{!1492, !40, !40}
!10032 = !{!10033, !10034}
!10033 = !DILocalVariable(name: "db", arg: 1, scope: !10029, file: !1614, line: 355, type: !40)
!10034 = !DILocalVariable(name: "p", arg: 2, scope: !10029, file: !1614, line: 356, type: !40)
!10035 = !DILocation(line: 0, scope: !10029)
!10036 = !DILocation(line: 358, column: 2, scope: !10029)
!10037 = !DILocation(line: 384, column: 1, scope: !10029)
!10038 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1614, file: !1614, line: 250, type: !9983, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10039)
!10039 = !{!10040, !10041}
!10040 = !DILocalVariable(name: "dev", arg: 1, scope: !10038, file: !1614, line: 250, type: !1519)
!10041 = !DILocalVariable(name: "config", scope: !10038, file: !1614, line: 252, type: !9748)
!10042 = !DILocation(line: 0, scope: !10038)
!10043 = !DILocation(line: 252, column: 48, scope: !10038)
!10044 = !DILocation(line: 254, column: 40, scope: !10038)
!10045 = !DILocation(line: 254, column: 9, scope: !10038)
!10046 = !DILocation(line: 254, column: 2, scope: !10038)
!10047 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1614, file: !1614, line: 409, type: !10048, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10050)
!10048 = !DISubroutineType(types: !10049)
!10049 = !{!1505, !40}
!10050 = !{!10051}
!10051 = !DILocalVariable(name: "fc", arg: 1, scope: !10047, file: !1614, line: 409, type: !40)
!10052 = !DILocation(line: 0, scope: !10047)
!10053 = !DILocation(line: 411, column: 9, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10047, file: !1614, line: 411, column: 6)
!10055 = !DILocation(line: 416, column: 1, scope: !10047)
!10056 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10057, file: !10057, line: 967, type: !10058, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10060)
!10057 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10058 = !DISubroutineType(types: !10059)
!10059 = !{!40, !1560}
!10060 = !{!10061}
!10061 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10056, file: !10057, line: 967, type: !1560)
!10062 = !DILocation(line: 0, scope: !10056)
!10063 = !DILocation(line: 969, column: 21, scope: !10056)
!10064 = !DILocation(line: 969, column: 3, scope: !10056)
!10065 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10057, file: !10057, line: 601, type: !10058, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10066)
!10066 = !{!10067}
!10067 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10065, file: !10057, line: 601, type: !1560)
!10068 = !DILocation(line: 0, scope: !10065)
!10069 = !DILocation(line: 603, column: 21, scope: !10065)
!10070 = !DILocation(line: 603, column: 3, scope: !10065)
!10071 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10057, file: !10057, line: 820, type: !10058, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10072)
!10072 = !{!10073}
!10073 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10071, file: !10057, line: 820, type: !1560)
!10074 = !DILocation(line: 0, scope: !10071)
!10075 = !DILocation(line: 822, column: 21, scope: !10071)
!10076 = !DILocation(line: 822, column: 3, scope: !10071)
!10077 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10057, file: !10057, line: 547, type: !10058, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10078)
!10078 = !{!10079}
!10079 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10077, file: !10057, line: 547, type: !1560)
!10080 = !DILocation(line: 0, scope: !10077)
!10081 = !DILocation(line: 549, column: 21, scope: !10077)
!10082 = !DILocation(line: 549, column: 3, scope: !10077)
!10083 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1614, file: !1614, line: 257, type: !10084, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10086)
!10084 = !DISubroutineType(types: !10085)
!10085 = !{!40, !1485}
!10086 = !{!10087}
!10087 = !DILocalVariable(name: "parity", arg: 1, scope: !10083, file: !1614, line: 257, type: !1485)
!10088 = !DILocation(line: 0, scope: !10083)
!10089 = !DILocation(line: 259, column: 2, scope: !10083)
!10090 = !DILocation(line: 268, column: 1, scope: !10083)
!10091 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1614, file: !1614, line: 283, type: !10092, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10094)
!10092 = !DISubroutineType(types: !10093)
!10093 = !{!40, !1499}
!10094 = !{!10095}
!10095 = !DILocalVariable(name: "sb", arg: 1, scope: !10091, file: !1614, line: 283, type: !1499)
!10096 = !DILocation(line: 0, scope: !10091)
!10097 = !DILocation(line: 285, column: 2, scope: !10091)
!10098 = !DILocation(line: 0, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10091, file: !1614, line: 285, column: 14)
!10100 = !DILocation(line: 302, column: 1, scope: !10091)
!10101 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1614, file: !1614, line: 325, type: !10102, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10104)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{!40, !1492, !1485}
!10104 = !{!10105, !10106}
!10105 = !DILocalVariable(name: "db", arg: 1, scope: !10101, file: !1614, line: 325, type: !1492)
!10106 = !DILocalVariable(name: "p", arg: 2, scope: !10101, file: !1614, line: 326, type: !1485)
!10107 = !DILocation(line: 0, scope: !10101)
!10108 = !DILocation(line: 328, column: 2, scope: !10101)
!10109 = !DILocation(line: 353, column: 1, scope: !10101)
!10110 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1614, file: !1614, line: 393, type: !10111, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10113)
!10111 = !DISubroutineType(types: !10112)
!10112 = !{!40, !1505}
!10113 = !{!10114}
!10114 = !DILocalVariable(name: "fc", arg: 1, scope: !10110, file: !1614, line: 393, type: !1505)
!10115 = !DILocation(line: 0, scope: !10110)
!10116 = !DILocation(line: 395, column: 9, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10110, file: !1614, line: 395, column: 6)
!10118 = !DILocation(line: 400, column: 1, scope: !10110)
!10119 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10057, file: !10057, line: 424, type: !10120, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10122)
!10120 = !DISubroutineType(types: !10121)
!10121 = !{null, !1560}
!10122 = !{!10123}
!10123 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10119, file: !10057, line: 424, type: !1560)
!10124 = !DILocation(line: 0, scope: !10119)
!10125 = !DILocation(line: 426, column: 3, scope: !10119)
!10126 = !DILocation(line: 427, column: 1, scope: !10119)
!10127 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1614, file: !1614, line: 197, type: !10128, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10130)
!10128 = !DISubroutineType(types: !10129)
!10129 = !{null, !1519, !40}
!10130 = !{!10131, !10132, !10133}
!10131 = !DILocalVariable(name: "dev", arg: 1, scope: !10127, file: !1614, line: 197, type: !1519)
!10132 = !DILocalVariable(name: "parity", arg: 2, scope: !10127, file: !1614, line: 198, type: !40)
!10133 = !DILocalVariable(name: "config", scope: !10127, file: !1614, line: 200, type: !9748)
!10134 = !DILocation(line: 0, scope: !10127)
!10135 = !DILocation(line: 200, column: 48, scope: !10127)
!10136 = !DILocation(line: 202, column: 29, scope: !10127)
!10137 = !DILocation(line: 202, column: 2, scope: !10127)
!10138 = !DILocation(line: 203, column: 1, scope: !10127)
!10139 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1614, file: !1614, line: 212, type: !10128, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10140)
!10140 = !{!10141, !10142, !10143}
!10141 = !DILocalVariable(name: "dev", arg: 1, scope: !10139, file: !1614, line: 212, type: !1519)
!10142 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10139, file: !1614, line: 213, type: !40)
!10143 = !DILocalVariable(name: "config", scope: !10139, file: !1614, line: 215, type: !9748)
!10144 = !DILocation(line: 0, scope: !10139)
!10145 = !DILocation(line: 215, column: 48, scope: !10139)
!10146 = !DILocation(line: 217, column: 37, scope: !10139)
!10147 = !DILocation(line: 217, column: 2, scope: !10139)
!10148 = !DILocation(line: 218, column: 1, scope: !10139)
!10149 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1614, file: !1614, line: 227, type: !10128, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10150)
!10150 = !{!10151, !10152, !10153}
!10151 = !DILocalVariable(name: "dev", arg: 1, scope: !10149, file: !1614, line: 227, type: !1519)
!10152 = !DILocalVariable(name: "databits", arg: 2, scope: !10149, file: !1614, line: 228, type: !40)
!10153 = !DILocalVariable(name: "config", scope: !10149, file: !1614, line: 230, type: !9748)
!10154 = !DILocation(line: 0, scope: !10149)
!10155 = !DILocation(line: 230, column: 48, scope: !10149)
!10156 = !DILocation(line: 232, column: 32, scope: !10149)
!10157 = !DILocation(line: 232, column: 2, scope: !10149)
!10158 = !DILocation(line: 233, column: 1, scope: !10149)
!10159 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1614, file: !1614, line: 242, type: !10128, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10160)
!10160 = !{!10161, !10162, !10163}
!10161 = !DILocalVariable(name: "dev", arg: 1, scope: !10159, file: !1614, line: 242, type: !1519)
!10162 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10159, file: !1614, line: 243, type: !40)
!10163 = !DILocalVariable(name: "config", scope: !10159, file: !1614, line: 245, type: !9748)
!10164 = !DILocation(line: 0, scope: !10159)
!10165 = !DILocation(line: 245, column: 48, scope: !10159)
!10166 = !DILocation(line: 247, column: 33, scope: !10159)
!10167 = !DILocation(line: 247, column: 2, scope: !10159)
!10168 = !DILocation(line: 248, column: 1, scope: !10159)
!10169 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1614, file: !1614, line: 107, type: !10128, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10170)
!10170 = !{!10171, !10172, !10173, !10174, !10175}
!10171 = !DILocalVariable(name: "dev", arg: 1, scope: !10169, file: !1614, line: 107, type: !1519)
!10172 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10169, file: !1614, line: 107, type: !40)
!10173 = !DILocalVariable(name: "config", scope: !10169, file: !1614, line: 109, type: !9748)
!10174 = !DILocalVariable(name: "data", scope: !10169, file: !1614, line: 110, type: !9871)
!10175 = !DILocalVariable(name: "clock_rate", scope: !10169, file: !1614, line: 112, type: !40)
!10176 = !DILocation(line: 0, scope: !10169)
!10177 = !DILocation(line: 109, column: 48, scope: !10169)
!10178 = !DILocation(line: 110, column: 38, scope: !10169)
!10179 = !DILocation(line: 112, column: 2, scope: !10169)
!10180 = !DILocation(line: 123, column: 36, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !1614, line: 123, column: 7)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !1614, line: 122, column: 9)
!10183 = distinct !DILexicalBlock(scope: !10169, file: !1614, line: 115, column: 6)
!10184 = !DILocation(line: 124, column: 42, scope: !10181)
!10185 = !DILocation(line: 123, column: 7, scope: !10181)
!10186 = !DILocation(line: 125, column: 22, scope: !10181)
!10187 = !DILocation(line: 123, column: 7, scope: !10182)
!10188 = !DILocation(line: 176, column: 36, scope: !10169)
!10189 = !DILocation(line: 176, column: 3, scope: !10169)
!10190 = !DILocation(line: 179, column: 32, scope: !10169)
!10191 = !DILocation(line: 180, column: 10, scope: !10169)
!10192 = !DILocation(line: 179, column: 3, scope: !10169)
!10193 = !DILocation(line: 195, column: 1, scope: !10169)
!10194 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10057, file: !10057, line: 410, type: !10120, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10195)
!10195 = !{!10196}
!10196 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10194, file: !10057, line: 410, type: !1560)
!10197 = !DILocation(line: 0, scope: !10194)
!10198 = !DILocation(line: 412, column: 3, scope: !10194)
!10199 = !DILocation(line: 413, column: 1, scope: !10194)
!10200 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !973, file: !973, line: 216, type: !1593, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10201)
!10201 = !{!10202, !10203, !10204, !10205}
!10202 = !DILocalVariable(name: "dev", arg: 1, scope: !10200, file: !973, line: 216, type: !1519)
!10203 = !DILocalVariable(name: "sys", arg: 2, scope: !10200, file: !973, line: 217, type: !1069)
!10204 = !DILocalVariable(name: "rate", arg: 3, scope: !10200, file: !973, line: 218, type: !1025)
!10205 = !DILocalVariable(name: "api", scope: !10200, file: !973, line: 220, type: !1571)
!10206 = !DILocation(line: 0, scope: !10200)
!10207 = !DILocation(line: 221, column: 49, scope: !10200)
!10208 = !DILocation(line: 223, column: 11, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10200, file: !973, line: 223, column: 6)
!10210 = !DILocation(line: 223, column: 20, scope: !10209)
!10211 = !DILocation(line: 223, column: 6, scope: !10200)
!10212 = !DILocation(line: 227, column: 9, scope: !10200)
!10213 = !DILocation(line: 227, column: 2, scope: !10200)
!10214 = !DILocation(line: 228, column: 1, scope: !10200)
!10215 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10057, file: !10057, line: 615, type: !10216, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10218)
!10216 = !DISubroutineType(types: !10217)
!10217 = !{null, !1560, !40}
!10218 = !{!10219, !10220}
!10219 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10215, file: !10057, line: 615, type: !1560)
!10220 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10215, file: !10057, line: 615, type: !40)
!10221 = !DILocation(line: 0, scope: !10215)
!10222 = !DILocation(line: 617, column: 3, scope: !10215)
!10223 = !DILocation(line: 618, column: 1, scope: !10215)
!10224 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10057, file: !10057, line: 1020, type: !10225, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10227)
!10225 = !DISubroutineType(types: !10226)
!10226 = !{null, !1560, !40, !40, !40}
!10227 = !{!10228, !10229, !10230, !10231}
!10228 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10224, file: !10057, line: 1020, type: !1560)
!10229 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10224, file: !10057, line: 1020, type: !40)
!10230 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10224, file: !10057, line: 1020, type: !40)
!10231 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10224, file: !10057, line: 1021, type: !40)
!10232 = !DILocation(line: 0, scope: !10224)
!10233 = !DILocation(line: 1029, column: 30, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !10057, line: 1028, column: 3)
!10235 = distinct !DILexicalBlock(scope: !10224, file: !10057, line: 1023, column: 7)
!10236 = !DILocation(line: 1029, column: 19, scope: !10234)
!10237 = !DILocation(line: 1029, column: 13, scope: !10234)
!10238 = !DILocation(line: 1029, column: 17, scope: !10234)
!10239 = !DILocation(line: 1031, column: 1, scope: !10224)
!10240 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10057, file: !10057, line: 949, type: !10216, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10241)
!10241 = !{!10242, !10243}
!10242 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10240, file: !10057, line: 949, type: !1560)
!10243 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10240, file: !10057, line: 949, type: !40)
!10244 = !DILocation(line: 0, scope: !10240)
!10245 = !DILocation(line: 951, column: 3, scope: !10240)
!10246 = !DILocation(line: 952, column: 1, scope: !10240)
!10247 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10057, file: !10057, line: 588, type: !10216, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10248)
!10248 = !{!10249, !10250}
!10249 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10247, file: !10057, line: 588, type: !1560)
!10250 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10247, file: !10057, line: 588, type: !40)
!10251 = !DILocation(line: 0, scope: !10247)
!10252 = !DILocation(line: 590, column: 3, scope: !10247)
!10253 = !DILocation(line: 591, column: 1, scope: !10247)
!10254 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10057, file: !10057, line: 805, type: !10216, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10255)
!10255 = !{!10256, !10257}
!10256 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10254, file: !10057, line: 805, type: !1560)
!10257 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10254, file: !10057, line: 805, type: !40)
!10258 = !DILocation(line: 0, scope: !10254)
!10259 = !DILocation(line: 807, column: 3, scope: !10254)
!10260 = !DILocation(line: 808, column: 1, scope: !10254)
!10261 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10057, file: !10057, line: 532, type: !10216, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10262)
!10262 = !{!10263, !10264}
!10263 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10261, file: !10057, line: 532, type: !1560)
!10264 = !DILocalVariable(name: "Parity", arg: 2, scope: !10261, file: !10057, line: 532, type: !40)
!10265 = !DILocation(line: 0, scope: !10261)
!10266 = !DILocation(line: 534, column: 3, scope: !10261)
!10267 = !DILocation(line: 535, column: 1, scope: !10261)
!10268 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10057, file: !10057, line: 1770, type: !10058, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10269)
!10269 = !{!10270}
!10270 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10268, file: !10057, line: 1770, type: !1560)
!10271 = !DILocation(line: 0, scope: !10268)
!10272 = !DILocation(line: 1772, column: 11, scope: !10268)
!10273 = !DILocation(line: 1772, column: 46, scope: !10268)
!10274 = !DILocation(line: 1772, column: 3, scope: !10268)
!10275 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10057, file: !10057, line: 1737, type: !10058, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10276)
!10276 = !{!10277}
!10277 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10275, file: !10057, line: 1737, type: !1560)
!10278 = !DILocation(line: 0, scope: !10275)
!10279 = !DILocation(line: 1739, column: 11, scope: !10275)
!10280 = !DILocation(line: 1739, column: 3, scope: !10275)
!10281 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10057, file: !10057, line: 1748, type: !10058, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10282)
!10282 = !{!10283}
!10283 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10281, file: !10057, line: 1748, type: !1560)
!10284 = !DILocation(line: 0, scope: !10281)
!10285 = !DILocation(line: 1750, column: 11, scope: !10281)
!10286 = !DILocation(line: 1750, column: 45, scope: !10281)
!10287 = !DILocation(line: 1750, column: 3, scope: !10281)
!10288 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10057, file: !10057, line: 1827, type: !10058, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10289)
!10289 = !{!10290}
!10290 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10288, file: !10057, line: 1827, type: !1560)
!10291 = !DILocation(line: 0, scope: !10288)
!10292 = !DILocation(line: 1829, column: 11, scope: !10288)
!10293 = !DILocation(line: 1829, column: 46, scope: !10288)
!10294 = !DILocation(line: 1829, column: 3, scope: !10288)
!10295 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10057, file: !10057, line: 1992, type: !10120, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10296)
!10296 = !{!10297}
!10297 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10295, file: !10057, line: 1992, type: !1560)
!10298 = !DILocation(line: 0, scope: !10295)
!10299 = !DILocation(line: 1994, column: 3, scope: !10295)
!10300 = !DILocation(line: 1995, column: 1, scope: !10295)
!10301 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10057, file: !10057, line: 1934, type: !10120, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10302)
!10302 = !{!10303, !10304}
!10303 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10301, file: !10057, line: 1934, type: !1560)
!10304 = !DILocalVariable(name: "tmpreg", scope: !10301, file: !10057, line: 1936, type: !296)
!10305 = !DILocation(line: 0, scope: !10301)
!10306 = !DILocation(line: 1936, column: 3, scope: !10301)
!10307 = !DILocation(line: 1936, column: 17, scope: !10301)
!10308 = !DILocation(line: 1937, column: 20, scope: !10301)
!10309 = !DILocation(line: 1937, column: 10, scope: !10301)
!10310 = !DILocation(line: 1938, column: 10, scope: !10301)
!10311 = !DILocation(line: 1939, column: 20, scope: !10301)
!10312 = !DILocation(line: 1939, column: 10, scope: !10301)
!10313 = !DILocation(line: 1940, column: 10, scope: !10301)
!10314 = !DILocation(line: 1941, column: 1, scope: !10301)
!10315 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10057, file: !10057, line: 1877, type: !10120, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10316)
!10316 = !{!10317, !10318}
!10317 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10315, file: !10057, line: 1877, type: !1560)
!10318 = !DILocalVariable(name: "tmpreg", scope: !10315, file: !10057, line: 1879, type: !296)
!10319 = !DILocation(line: 0, scope: !10315)
!10320 = !DILocation(line: 1879, column: 3, scope: !10315)
!10321 = !DILocation(line: 1879, column: 17, scope: !10315)
!10322 = !DILocation(line: 1880, column: 20, scope: !10315)
!10323 = !DILocation(line: 1880, column: 10, scope: !10315)
!10324 = !DILocation(line: 1881, column: 10, scope: !10315)
!10325 = !DILocation(line: 1882, column: 20, scope: !10315)
!10326 = !DILocation(line: 1882, column: 10, scope: !10315)
!10327 = !DILocation(line: 1883, column: 10, scope: !10315)
!10328 = !DILocation(line: 1884, column: 1, scope: !10315)
!10329 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10057, file: !10057, line: 1896, type: !10120, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10330)
!10330 = !{!10331, !10332}
!10331 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10329, file: !10057, line: 1896, type: !1560)
!10332 = !DILocalVariable(name: "tmpreg", scope: !10329, file: !10057, line: 1898, type: !296)
!10333 = !DILocation(line: 0, scope: !10329)
!10334 = !DILocation(line: 1898, column: 3, scope: !10329)
!10335 = !DILocation(line: 1898, column: 17, scope: !10329)
!10336 = !DILocation(line: 1899, column: 20, scope: !10329)
!10337 = !DILocation(line: 1899, column: 10, scope: !10329)
!10338 = !DILocation(line: 1900, column: 10, scope: !10329)
!10339 = !DILocation(line: 1901, column: 20, scope: !10329)
!10340 = !DILocation(line: 1901, column: 10, scope: !10329)
!10341 = !DILocation(line: 1902, column: 10, scope: !10329)
!10342 = !DILocation(line: 1903, column: 1, scope: !10329)
!10343 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10057, file: !10057, line: 1915, type: !10120, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10344)
!10344 = !{!10345, !10346}
!10345 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10343, file: !10057, line: 1915, type: !1560)
!10346 = !DILocalVariable(name: "tmpreg", scope: !10343, file: !10057, line: 1917, type: !296)
!10347 = !DILocation(line: 0, scope: !10343)
!10348 = !DILocation(line: 1917, column: 3, scope: !10343)
!10349 = !DILocation(line: 1917, column: 17, scope: !10343)
!10350 = !DILocation(line: 1918, column: 20, scope: !10343)
!10351 = !DILocation(line: 1918, column: 10, scope: !10343)
!10352 = !DILocation(line: 1919, column: 10, scope: !10343)
!10353 = !DILocation(line: 1920, column: 20, scope: !10343)
!10354 = !DILocation(line: 1920, column: 10, scope: !10343)
!10355 = !DILocation(line: 1921, column: 10, scope: !10343)
!10356 = !DILocation(line: 1922, column: 1, scope: !10343)
!10357 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10057, file: !10057, line: 1814, type: !10058, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10358)
!10358 = !{!10359}
!10359 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10357, file: !10057, line: 1814, type: !1560)
!10360 = !DILocation(line: 0, scope: !10357)
!10361 = !DILocation(line: 1816, column: 11, scope: !10357)
!10362 = !DILocation(line: 1816, column: 46, scope: !10357)
!10363 = !DILocation(line: 1816, column: 3, scope: !10357)
!10364 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10057, file: !10057, line: 2426, type: !10365, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10367)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{null, !1560, !143}
!10367 = !{!10368, !10369}
!10368 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10364, file: !10057, line: 2426, type: !1560)
!10369 = !DILocalVariable(name: "Value", arg: 2, scope: !10364, file: !10057, line: 2426, type: !143)
!10370 = !DILocation(line: 0, scope: !10364)
!10371 = !DILocation(line: 2428, column: 16, scope: !10364)
!10372 = !DILocation(line: 2428, column: 11, scope: !10364)
!10373 = !DILocation(line: 2428, column: 14, scope: !10364)
!10374 = !DILocation(line: 2429, column: 1, scope: !10364)
!10375 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10057, file: !10057, line: 1792, type: !10058, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10376)
!10376 = !{!10377}
!10377 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10375, file: !10057, line: 1792, type: !1560)
!10378 = !DILocation(line: 0, scope: !10375)
!10379 = !DILocation(line: 1794, column: 11, scope: !10375)
!10380 = !DILocation(line: 1794, column: 47, scope: !10375)
!10381 = !DILocation(line: 1794, column: 3, scope: !10375)
!10382 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10057, file: !10057, line: 2403, type: !10383, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10385)
!10383 = !DISubroutineType(types: !10384)
!10384 = !{!143, !1560}
!10385 = !{!10386}
!10386 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10382, file: !10057, line: 2403, type: !1560)
!10387 = !DILocation(line: 0, scope: !10382)
!10388 = !DILocation(line: 2405, column: 20, scope: !10382)
!10389 = !DILocation(line: 2405, column: 10, scope: !10382)
!10390 = !DILocation(line: 2405, column: 3, scope: !10382)
!10391 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1614, file: !1614, line: 1583, type: !1540, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10392)
!10392 = !{!10393, !10394, !10395, !10396, !10397, !10398}
!10393 = !DILocalVariable(name: "dev", arg: 1, scope: !10391, file: !1614, line: 1583, type: !1519)
!10394 = !DILocalVariable(name: "config", scope: !10391, file: !1614, line: 1585, type: !9748)
!10395 = !DILocalVariable(name: "data", scope: !10391, file: !1614, line: 1586, type: !9871)
!10396 = !DILocalVariable(name: "ll_parity", scope: !10391, file: !1614, line: 1587, type: !40)
!10397 = !DILocalVariable(name: "ll_datawidth", scope: !10391, file: !1614, line: 1588, type: !40)
!10398 = !DILocalVariable(name: "err", scope: !10391, file: !1614, line: 1589, type: !55)
!10399 = !DILocation(line: 0, scope: !10391)
!10400 = !DILocation(line: 1585, column: 48, scope: !10391)
!10401 = !DILocation(line: 1586, column: 38, scope: !10391)
!10402 = !DILocation(line: 1591, column: 2, scope: !10391)
!10403 = !DILocation(line: 1593, column: 29, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10391, file: !1614, line: 1593, column: 6)
!10405 = !DILocation(line: 1593, column: 7, scope: !10404)
!10406 = !DILocation(line: 1593, column: 6, scope: !10391)
!10407 = !DILocation(line: 1599, column: 31, scope: !10391)
!10408 = !DILocation(line: 1599, column: 71, scope: !10391)
!10409 = !DILocation(line: 1599, column: 8, scope: !10391)
!10410 = !DILocation(line: 1600, column: 10, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10391, file: !1614, line: 1600, column: 6)
!10412 = !DILocation(line: 1600, column: 6, scope: !10391)
!10413 = !DILocation(line: 1616, column: 36, scope: !10391)
!10414 = !DILocation(line: 1616, column: 8, scope: !10391)
!10415 = !DILocation(line: 1617, column: 10, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10391, file: !1614, line: 1617, column: 6)
!10417 = !DILocation(line: 1617, column: 6, scope: !10391)
!10418 = !DILocation(line: 1621, column: 27, scope: !10391)
!10419 = !DILocation(line: 1621, column: 2, scope: !10391)
!10420 = !DILocation(line: 1624, column: 40, scope: !10391)
!10421 = !DILocation(line: 1624, column: 2, scope: !10391)
!10422 = !DILocation(line: 1630, column: 14, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10391, file: !1614, line: 1630, column: 6)
!10424 = !DILocation(line: 1630, column: 6, scope: !10391)
!10425 = !DILocation(line: 1638, column: 2, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10427, file: !1614, line: 1634, column: 34)
!10427 = distinct !DILexicalBlock(scope: !10423, file: !1614, line: 1634, column: 13)
!10428 = !DILocation(line: 0, scope: !10423)
!10429 = !DILocation(line: 1649, column: 35, scope: !10391)
!10430 = !DILocation(line: 1649, column: 2, scope: !10391)
!10431 = !DILocation(line: 1654, column: 14, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10391, file: !1614, line: 1654, column: 6)
!10433 = !DILocation(line: 1654, column: 6, scope: !10391)
!10434 = !DILocation(line: 1655, column: 3, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10432, file: !1614, line: 1654, column: 31)
!10436 = !DILocation(line: 1656, column: 2, scope: !10435)
!10437 = !DILocation(line: 1659, column: 37, scope: !10391)
!10438 = !DILocation(line: 1659, column: 2, scope: !10391)
!10439 = !DILocation(line: 1662, column: 14, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10391, file: !1614, line: 1662, column: 6)
!10441 = !DILocation(line: 1662, column: 6, scope: !10391)
!10442 = !DILocation(line: 1663, column: 37, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10440, file: !1614, line: 1662, column: 27)
!10444 = !DILocation(line: 1663, column: 3, scope: !10443)
!10445 = !DILocation(line: 1664, column: 2, scope: !10443)
!10446 = !DILocation(line: 1684, column: 26, scope: !10391)
!10447 = !DILocation(line: 1684, column: 2, scope: !10391)
!10448 = !DILocation(line: 1722, column: 2, scope: !10391)
!10449 = !DILocation(line: 1724, column: 1, scope: !10391)
!10450 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1614, file: !1614, line: 651, type: !10451, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10453)
!10451 = !DISubroutineType(types: !10452)
!10452 = !{null, !1519}
!10453 = !{!10454, !10455, !10456}
!10454 = !DILocalVariable(name: "dev", arg: 1, scope: !10450, file: !1614, line: 651, type: !1519)
!10455 = !DILocalVariable(name: "data", scope: !10450, file: !1614, line: 653, type: !9871)
!10456 = !DILocalVariable(name: "clk", scope: !10450, file: !1614, line: 654, type: !10457)
!10457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!10458 = !DILocation(line: 0, scope: !10450)
!10459 = !DILocation(line: 653, column: 38, scope: !10450)
!10460 = !DILocation(line: 656, column: 8, scope: !10450)
!10461 = !DILocation(line: 656, column: 14, scope: !10450)
!10462 = !DILocation(line: 657, column: 1, scope: !10450)
!10463 = distinct !DISubprogram(name: "device_is_ready", scope: !8884, file: !8884, line: 47, type: !10464, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10466)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!329, !1519}
!10466 = !{!10467}
!10467 = !DILocalVariable(name: "dev", arg: 1, scope: !10463, file: !8884, line: 47, type: !1519)
!10468 = !DILocation(line: 0, scope: !10463)
!10469 = !DILocation(line: 55, column: 2, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10463, file: !8884, line: 55, column: 2)
!10471 = !{i64 2155368849}
!10472 = !DILocation(line: 56, column: 9, scope: !10463)
!10473 = !DILocation(line: 56, column: 2, scope: !10463)
!10474 = distinct !DISubprogram(name: "clock_control_on", scope: !973, file: !973, line: 123, type: !1578, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10475)
!10475 = !{!10476, !10477, !10478}
!10476 = !DILocalVariable(name: "dev", arg: 1, scope: !10474, file: !973, line: 123, type: !1519)
!10477 = !DILocalVariable(name: "sys", arg: 2, scope: !10474, file: !973, line: 124, type: !1069)
!10478 = !DILocalVariable(name: "api", scope: !10474, file: !973, line: 126, type: !1571)
!10479 = !DILocation(line: 0, scope: !10474)
!10480 = !DILocation(line: 127, column: 49, scope: !10474)
!10481 = !DILocation(line: 129, column: 14, scope: !10474)
!10482 = !DILocation(line: 129, column: 9, scope: !10474)
!10483 = !DILocation(line: 129, column: 2, scope: !10474)
!10484 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1665, file: !1665, line: 342, type: !10485, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10487)
!10485 = !DISubroutineType(types: !10486)
!10486 = !{!55, !1715, !143}
!10487 = !{!10488, !10489, !10490, !10491}
!10488 = !DILocalVariable(name: "config", arg: 1, scope: !10484, file: !1665, line: 342, type: !1715)
!10489 = !DILocalVariable(name: "id", arg: 2, scope: !10484, file: !1665, line: 343, type: !143)
!10490 = !DILocalVariable(name: "ret", scope: !10484, file: !1665, line: 345, type: !55)
!10491 = !DILocalVariable(name: "state", scope: !10484, file: !1665, line: 346, type: !1668)
!10492 = !DILocation(line: 0, scope: !10484)
!10493 = !DILocation(line: 346, column: 2, scope: !10484)
!10494 = !DILocation(line: 348, column: 8, scope: !10484)
!10495 = !DILocation(line: 349, column: 10, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10484, file: !1665, line: 349, column: 6)
!10497 = !DILocation(line: 349, column: 6, scope: !10484)
!10498 = !DILocation(line: 353, column: 44, scope: !10484)
!10499 = !DILocation(line: 353, column: 9, scope: !10484)
!10500 = !DILocation(line: 353, column: 2, scope: !10484)
!10501 = !DILocation(line: 354, column: 1, scope: !10484)
!10502 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10057, file: !10057, line: 497, type: !10216, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10503)
!10503 = !{!10504, !10505, !10506}
!10504 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10502, file: !10057, line: 497, type: !1560)
!10505 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10502, file: !10057, line: 497, type: !40)
!10506 = !DILocalVariable(name: "val", scope: !10507, file: !10057, line: 499, type: !40)
!10507 = distinct !DILexicalBlock(scope: !10502, file: !10057, line: 499, column: 3)
!10508 = !DILocation(line: 0, scope: !10502)
!10509 = !DILocation(line: 499, column: 3, scope: !10507)
!10510 = !DILocalVariable(name: "addr", arg: 1, scope: !10511, file: !6483, line: 476, type: !1610)
!10511 = distinct !DISubprogram(name: "__LDREXW", scope: !6483, file: !6483, line: 476, type: !10512, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10514)
!10512 = !DISubroutineType(types: !10513)
!10513 = !{!40, !1610}
!10514 = !{!10510, !10515}
!10515 = !DILocalVariable(name: "result", scope: !10511, file: !6483, line: 478, type: !40)
!10516 = !DILocation(line: 0, scope: !10511, inlinedAt: !10517)
!10517 = distinct !DILocation(line: 499, column: 3, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10507, file: !10057, line: 499, column: 3)
!10519 = !DILocation(line: 480, column: 4, scope: !10511, inlinedAt: !10517)
!10520 = !{i64 3758168}
!10521 = !DILocation(line: 499, column: 3, scope: !10518)
!10522 = !DILocation(line: 0, scope: !10507)
!10523 = !DILocalVariable(name: "value", arg: 1, scope: !10524, file: !6483, line: 527, type: !40)
!10524 = distinct !DISubprogram(name: "__STREXW", scope: !6483, file: !6483, line: 527, type: !10525, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10527)
!10525 = !DISubroutineType(types: !10526)
!10526 = !{!40, !40, !1610}
!10527 = !{!10523, !10528, !10529}
!10528 = !DILocalVariable(name: "addr", arg: 2, scope: !10524, file: !6483, line: 527, type: !1610)
!10529 = !DILocalVariable(name: "result", scope: !10524, file: !6483, line: 529, type: !40)
!10530 = !DILocation(line: 0, scope: !10524, inlinedAt: !10531)
!10531 = distinct !DILocation(line: 499, column: 3, scope: !10507)
!10532 = !DILocation(line: 531, column: 4, scope: !10524, inlinedAt: !10531)
!10533 = !{i64 3759604}
!10534 = distinct !{!10534, !10509, !10509}
!10535 = !DILocation(line: 500, column: 1, scope: !10502)
!10536 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10057, file: !10057, line: 850, type: !10225, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10537)
!10537 = !{!10538, !10539, !10540, !10541}
!10538 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10536, file: !10057, line: 850, type: !1560)
!10539 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10536, file: !10057, line: 850, type: !40)
!10540 = !DILocalVariable(name: "Parity", arg: 3, scope: !10536, file: !10057, line: 850, type: !40)
!10541 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10536, file: !10057, line: 851, type: !40)
!10542 = !DILocation(line: 0, scope: !10536)
!10543 = !DILocation(line: 853, column: 3, scope: !10536)
!10544 = !DILocation(line: 854, column: 3, scope: !10536)
!10545 = !DILocation(line: 855, column: 1, scope: !10536)
!10546 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10057, file: !10057, line: 1337, type: !10120, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10547)
!10547 = !{!10548}
!10548 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10546, file: !10057, line: 1337, type: !1560)
!10549 = !DILocation(line: 0, scope: !10546)
!10550 = !DILocation(line: 1339, column: 3, scope: !10546)
!10551 = !DILocation(line: 1340, column: 1, scope: !10546)
!10552 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1665, file: !1665, line: 316, type: !10553, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10555)
!10553 = !DISubroutineType(types: !10554)
!10554 = !{!55, !1715, !1668}
!10555 = !{!10556, !10557, !10558}
!10556 = !DILocalVariable(name: "config", arg: 1, scope: !10552, file: !1665, line: 317, type: !1715)
!10557 = !DILocalVariable(name: "state", arg: 2, scope: !10552, file: !1665, line: 318, type: !1668)
!10558 = !DILocalVariable(name: "reg", scope: !10552, file: !1665, line: 320, type: !22)
!10559 = !DILocation(line: 0, scope: !10552)
!10560 = !DILocation(line: 329, column: 39, scope: !10552)
!10561 = !DILocation(line: 329, column: 52, scope: !10552)
!10562 = !DILocation(line: 329, column: 9, scope: !10552)
!10563 = !DILocation(line: 329, column: 2, scope: !10552)
!10564 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !316, file: !316, line: 730, type: !10464, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1475, retainedNodes: !10565)
!10565 = !{!10566}
!10566 = !DILocalVariable(name: "dev", arg: 1, scope: !10564, file: !316, line: 730, type: !1519)
!10567 = !DILocation(line: 0, scope: !10564)
!10568 = !DILocation(line: 732, column: 9, scope: !10564)
!10569 = !DILocation(line: 732, column: 2, scope: !10564)
!10570 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1830, file: !1830, line: 270, type: !1836, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10571)
!10571 = !{!10572}
!10572 = !DILocalVariable(name: "dev", arg: 1, scope: !10570, file: !1830, line: 270, type: !1838)
!10573 = !DILocation(line: 0, scope: !10570)
!10574 = !DILocation(line: 274, column: 2, scope: !10570)
!10575 = !DILocation(line: 275, column: 12, scope: !10570)
!10576 = !DILocation(line: 276, column: 15, scope: !10570)
!10577 = !DILocation(line: 277, column: 16, scope: !10570)
!10578 = !DILocation(line: 278, column: 15, scope: !10570)
!10579 = !DILocation(line: 279, column: 16, scope: !10570)
!10580 = !DILocation(line: 282, column: 2, scope: !10570)
!10581 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !519, file: !519, line: 1814, type: !6517, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10582)
!10582 = !{!10583, !10584}
!10583 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10581, file: !519, line: 1814, type: !923)
!10584 = !DILocalVariable(name: "priority", arg: 2, scope: !10581, file: !519, line: 1814, type: !40)
!10585 = !DILocation(line: 0, scope: !10581)
!10586 = !DILocation(line: 1822, column: 46, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !519, line: 1821, column: 3)
!10588 = distinct !DILexicalBlock(scope: !10581, file: !519, line: 1816, column: 7)
!10589 = !DILocation(line: 1824, column: 1, scope: !10581)
!10590 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1830, file: !1830, line: 118, type: !6289, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10591)
!10591 = !{!10592, !10593}
!10592 = !DILocalVariable(name: "arg", arg: 1, scope: !10590, file: !1830, line: 118, type: !39)
!10593 = !DILocalVariable(name: "dticks", scope: !10590, file: !1830, line: 121, type: !40)
!10594 = !DILocation(line: 0, scope: !10590)
!10595 = !DILocation(line: 124, column: 2, scope: !10590)
!10596 = !DILocation(line: 129, column: 17, scope: !10590)
!10597 = !DILocation(line: 129, column: 14, scope: !10590)
!10598 = !DILocation(line: 130, column: 15, scope: !10590)
!10599 = !DILocation(line: 145, column: 27, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10601, file: !1830, line: 132, column: 16)
!10601 = distinct !DILexicalBlock(scope: !10590, file: !1830, line: 132, column: 6)
!10602 = !DILocation(line: 145, column: 25, scope: !10600)
!10603 = !DILocation(line: 145, column: 45, scope: !10600)
!10604 = !DILocation(line: 146, column: 30, scope: !10600)
!10605 = !DILocation(line: 146, column: 20, scope: !10600)
!10606 = !DILocation(line: 147, column: 3, scope: !10600)
!10607 = !DILocation(line: 151, column: 2, scope: !10590)
!10608 = !DILocation(line: 152, column: 1, scope: !10590)
!10609 = distinct !DISubprogram(name: "elapsed", scope: !1830, file: !1830, line: 85, type: !6564, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10610)
!10610 = !{!10611, !10612, !10613}
!10611 = !DILocalVariable(name: "val1", scope: !10609, file: !1830, line: 87, type: !40)
!10612 = !DILocalVariable(name: "ctrl", scope: !10609, file: !1830, line: 88, type: !40)
!10613 = !DILocalVariable(name: "val2", scope: !10609, file: !1830, line: 89, type: !40)
!10614 = !DILocation(line: 87, column: 27, scope: !10609)
!10615 = !DILocation(line: 0, scope: !10609)
!10616 = !DILocation(line: 88, column: 27, scope: !10609)
!10617 = !DILocation(line: 89, column: 27, scope: !10609)
!10618 = !DILocation(line: 105, column: 12, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10609, file: !1830, line: 105, column: 6)
!10620 = !DILocation(line: 106, column: 6, scope: !10619)
!10621 = !DILocation(line: 107, column: 16, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10619, file: !1830, line: 106, column: 24)
!10623 = !DILocation(line: 111, column: 18, scope: !10622)
!10624 = !DILocation(line: 112, column: 2, scope: !10622)
!10625 = !DILocation(line: 114, column: 20, scope: !10609)
!10626 = !DILocation(line: 114, column: 30, scope: !10609)
!10627 = !DILocation(line: 114, column: 28, scope: !10609)
!10628 = !DILocation(line: 114, column: 2, scope: !10609)
!10629 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1830, file: !1830, line: 154, type: !10630, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10632)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{null, !897, !329}
!10632 = !{!10633, !10634, !10635, !10636, !10637, !10638, !10639, !10644, !10645}
!10633 = !DILocalVariable(name: "ticks", arg: 1, scope: !10629, file: !1830, line: 154, type: !897)
!10634 = !DILocalVariable(name: "idle", arg: 2, scope: !10629, file: !1830, line: 154, type: !329)
!10635 = !DILocalVariable(name: "delay", scope: !10629, file: !1830, line: 169, type: !40)
!10636 = !DILocalVariable(name: "val1", scope: !10629, file: !1830, line: 170, type: !40)
!10637 = !DILocalVariable(name: "val2", scope: !10629, file: !1830, line: 170, type: !40)
!10638 = !DILocalVariable(name: "last_load_", scope: !10629, file: !1830, line: 171, type: !40)
!10639 = !DILocalVariable(name: "key", scope: !10629, file: !1830, line: 176, type: !10640)
!10640 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !483, line: 106, baseType: !10641)
!10641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !483, line: 32, size: 32, elements: !10642)
!10642 = !{!10643}
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10641, file: !483, line: 33, baseType: !55, size: 32)
!10644 = !DILocalVariable(name: "pending", scope: !10629, file: !1830, line: 178, type: !40)
!10645 = !DILocalVariable(name: "unannounced", scope: !10629, file: !1830, line: 185, type: !40)
!10646 = !DILocation(line: 0, scope: !10629)
!10647 = !DILocation(line: 162, column: 49, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10629, file: !1830, line: 162, column: 6)
!10649 = !DILocation(line: 163, column: 17, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10648, file: !1830, line: 162, column: 78)
!10651 = !DILocation(line: 164, column: 13, scope: !10650)
!10652 = !DILocation(line: 165, column: 3, scope: !10650)
!10653 = !DILocation(line: 171, column: 24, scope: !10629)
!10654 = !DILocation(line: 173, column: 10, scope: !10629)
!10655 = !DILocation(line: 174, column: 10, scope: !10629)
!10656 = !DILocalVariable(name: "l", arg: 1, scope: !10657, file: !483, line: 136, type: !10660)
!10657 = distinct !DISubprogram(name: "k_spin_lock", scope: !483, file: !483, line: 136, type: !10658, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10661)
!10658 = !DISubroutineType(types: !10659)
!10659 = !{!10640, !10660}
!10660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!10661 = !{!10656, !10662}
!10662 = !DILocalVariable(name: "k", scope: !10657, file: !483, line: 139, type: !10640)
!10663 = !DILocation(line: 0, scope: !10657, inlinedAt: !10664)
!10664 = distinct !DILocation(line: 176, column: 25, scope: !10629)
!10665 = !DILocation(line: 55, column: 2, scope: !10666, inlinedAt: !10670)
!10666 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10667)
!10667 = !{!10668, !10669}
!10668 = !DILocalVariable(name: "key", scope: !10666, file: !6214, line: 44, type: !41)
!10669 = !DILocalVariable(name: "tmp", scope: !10666, file: !6214, line: 53, type: !41)
!10670 = distinct !DILocation(line: 145, column: 10, scope: !10657, inlinedAt: !10664)
!10671 = !{i64 2279020}
!10672 = !DILocation(line: 0, scope: !10666, inlinedAt: !10670)
!10673 = !DILocation(line: 178, column: 21, scope: !10629)
!10674 = !DILocation(line: 180, column: 18, scope: !10629)
!10675 = !DILocation(line: 182, column: 14, scope: !10629)
!10676 = !DILocation(line: 183, column: 15, scope: !10629)
!10677 = !DILocation(line: 185, column: 39, scope: !10629)
!10678 = !DILocation(line: 185, column: 37, scope: !10629)
!10679 = !DILocation(line: 187, column: 27, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10629, file: !1830, line: 187, column: 6)
!10681 = !DILocation(line: 187, column: 6, scope: !10629)
!10682 = !DILocation(line: 202, column: 27, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10680, file: !1830, line: 195, column: 9)
!10684 = !DILocation(line: 202, column: 48, scope: !10683)
!10685 = !DILocation(line: 203, column: 9, scope: !10683)
!10686 = !DILocation(line: 204, column: 11, scope: !10683)
!10687 = !DILocation(line: 205, column: 13, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10683, file: !1830, line: 205, column: 7)
!10689 = !DILocation(line: 205, column: 7, scope: !10683)
!10690 = !DILocation(line: 0, scope: !10680)
!10691 = !DILocation(line: 212, column: 18, scope: !10629)
!10692 = !DILocation(line: 214, column: 28, scope: !10629)
!10693 = !DILocation(line: 214, column: 16, scope: !10629)
!10694 = !DILocation(line: 215, column: 15, scope: !10629)
!10695 = !DILocation(line: 227, column: 11, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10629, file: !1830, line: 227, column: 6)
!10697 = !DILocation(line: 227, column: 6, scope: !10629)
!10698 = !DILocation(line: 228, column: 15, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10696, file: !1830, line: 227, column: 19)
!10700 = !DILocation(line: 228, column: 38, scope: !10699)
!10701 = !DILocation(line: 228, column: 24, scope: !10699)
!10702 = !DILocation(line: 229, column: 2, scope: !10699)
!10703 = !DILocation(line: 230, column: 24, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10696, file: !1830, line: 229, column: 9)
!10705 = !DILocation(line: 230, column: 15, scope: !10704)
!10706 = !DILocation(line: 0, scope: !10696)
!10707 = !DILocalVariable(name: "key", arg: 2, scope: !10708, file: !483, line: 190, type: !10640)
!10708 = distinct !DISubprogram(name: "k_spin_unlock", scope: !483, file: !483, line: 189, type: !10709, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10711)
!10709 = !DISubroutineType(types: !10710)
!10710 = !{null, !10660, !10640}
!10711 = !{!10712, !10707}
!10712 = !DILocalVariable(name: "l", arg: 1, scope: !10708, file: !483, line: 189, type: !10660)
!10713 = !DILocation(line: 0, scope: !10708, inlinedAt: !10714)
!10714 = distinct !DILocation(line: 232, column: 2, scope: !10629)
!10715 = !DILocalVariable(name: "key", arg: 1, scope: !10716, file: !6214, line: 84, type: !41)
!10716 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10717)
!10717 = !{!10715}
!10718 = !DILocation(line: 0, scope: !10716, inlinedAt: !10719)
!10719 = distinct !DILocation(line: 215, column: 2, scope: !10708, inlinedAt: !10714)
!10720 = !DILocation(line: 95, column: 2, scope: !10716, inlinedAt: !10719)
!10721 = !{i64 2279837}
!10722 = !DILocation(line: 234, column: 1, scope: !10629)
!10723 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1830, file: !1830, line: 236, type: !6564, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10724)
!10724 = !{!10725, !10726}
!10725 = !DILocalVariable(name: "key", scope: !10723, file: !1830, line: 242, type: !10640)
!10726 = !DILocalVariable(name: "cyc", scope: !10723, file: !1830, line: 243, type: !40)
!10727 = !DILocation(line: 0, scope: !10657, inlinedAt: !10728)
!10728 = distinct !DILocation(line: 242, column: 25, scope: !10723)
!10729 = !DILocation(line: 55, column: 2, scope: !10666, inlinedAt: !10730)
!10730 = distinct !DILocation(line: 145, column: 10, scope: !10657, inlinedAt: !10728)
!10731 = !DILocation(line: 0, scope: !10666, inlinedAt: !10730)
!10732 = !DILocation(line: 0, scope: !10723)
!10733 = !DILocation(line: 243, column: 17, scope: !10723)
!10734 = !DILocation(line: 243, column: 29, scope: !10723)
!10735 = !DILocation(line: 243, column: 27, scope: !10723)
!10736 = !DILocation(line: 243, column: 43, scope: !10723)
!10737 = !DILocation(line: 243, column: 41, scope: !10723)
!10738 = !DILocation(line: 0, scope: !10708, inlinedAt: !10739)
!10739 = distinct !DILocation(line: 245, column: 2, scope: !10723)
!10740 = !DILocation(line: 0, scope: !10716, inlinedAt: !10741)
!10741 = distinct !DILocation(line: 215, column: 2, scope: !10708, inlinedAt: !10739)
!10742 = !DILocation(line: 95, column: 2, scope: !10716, inlinedAt: !10741)
!10743 = !DILocation(line: 246, column: 13, scope: !10723)
!10744 = !DILocation(line: 246, column: 2, scope: !10723)
!10745 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1830, file: !1830, line: 249, type: !6564, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !10746)
!10746 = !{!10747, !10748}
!10747 = !DILocalVariable(name: "key", scope: !10745, file: !1830, line: 251, type: !10640)
!10748 = !DILocalVariable(name: "ret", scope: !10745, file: !1830, line: 252, type: !40)
!10749 = !DILocation(line: 0, scope: !10657, inlinedAt: !10750)
!10750 = distinct !DILocation(line: 251, column: 25, scope: !10745)
!10751 = !DILocation(line: 55, column: 2, scope: !10666, inlinedAt: !10752)
!10752 = distinct !DILocation(line: 145, column: 10, scope: !10657, inlinedAt: !10750)
!10753 = !DILocation(line: 0, scope: !10666, inlinedAt: !10752)
!10754 = !DILocation(line: 0, scope: !10745)
!10755 = !DILocation(line: 252, column: 17, scope: !10745)
!10756 = !DILocation(line: 252, column: 29, scope: !10745)
!10757 = !DILocation(line: 252, column: 27, scope: !10745)
!10758 = !DILocation(line: 0, scope: !10708, inlinedAt: !10759)
!10759 = distinct !DILocation(line: 254, column: 2, scope: !10745)
!10760 = !DILocation(line: 0, scope: !10716, inlinedAt: !10761)
!10761 = distinct !DILocation(line: 215, column: 2, scope: !10708, inlinedAt: !10759)
!10762 = !DILocation(line: 95, column: 2, scope: !10716, inlinedAt: !10761)
!10763 = !DILocation(line: 255, column: 2, scope: !10745)
!10764 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1830, file: !1830, line: 258, type: !3440, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !2223)
!10765 = !DILocation(line: 260, column: 6, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10764, file: !1830, line: 260, column: 6)
!10767 = !DILocation(line: 260, column: 16, scope: !10766)
!10768 = !DILocation(line: 260, column: 6, scope: !10764)
!10769 = !DILocation(line: 261, column: 17, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10766, file: !1830, line: 260, column: 34)
!10771 = !DILocation(line: 262, column: 2, scope: !10770)
!10772 = !DILocation(line: 263, column: 1, scope: !10764)
!10773 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1830, file: !1830, line: 265, type: !3440, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !2223)
!10774 = !DILocation(line: 267, column: 16, scope: !10773)
!10775 = !DILocation(line: 268, column: 1, scope: !10773)
!10776 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10777, file: !10777, line: 9, type: !10778, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3268, retainedNodes: !10801)
!10777 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10778 = !DISubroutineType(types: !10779)
!10779 = !{!55, !10780, !143, !10800}
!10780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10781, size: 32)
!10781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10782)
!10782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1665, line: 60, size: 64, elements: !10783)
!10783 = !{!10784, !10799}
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10782, file: !1665, line: 69, baseType: !10785, size: 32)
!10785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10786, size: 32)
!10786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10787)
!10787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1665, line: 50, size: 64, elements: !10788)
!10788 = !{!10789, !10797, !10798}
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10787, file: !1665, line: 52, baseType: !10790, size: 32)
!10790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10791, size: 32)
!10791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10792)
!10792 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !10793)
!10793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !10794)
!10794 = !{!10795, !10796}
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10793, file: !1676, line: 34, baseType: !40, size: 32)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10793, file: !1676, line: 36, baseType: !40, size: 32, offset: 32)
!10797 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10787, file: !1665, line: 54, baseType: !143, size: 8, offset: 32)
!10798 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10787, file: !1665, line: 56, baseType: !143, size: 8, offset: 40)
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10782, file: !1665, line: 71, baseType: !143, size: 8, offset: 32)
!10800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10785, size: 32)
!10801 = !{!10802, !10803, !10804}
!10802 = !DILocalVariable(name: "config", arg: 1, scope: !10776, file: !10777, line: 9, type: !10780)
!10803 = !DILocalVariable(name: "id", arg: 2, scope: !10776, file: !10777, line: 9, type: !143)
!10804 = !DILocalVariable(name: "state", arg: 3, scope: !10776, file: !10777, line: 10, type: !10800)
!10805 = !DILocation(line: 0, scope: !10776)
!10806 = !DILocation(line: 12, column: 20, scope: !10776)
!10807 = !DILocation(line: 13, column: 27, scope: !10776)
!10808 = !DILocation(line: 13, column: 42, scope: !10776)
!10809 = !DILocation(line: 13, column: 19, scope: !10776)
!10810 = !DILocation(line: 13, column: 16, scope: !10776)
!10811 = !DILocation(line: 13, column: 2, scope: !10776)
!10812 = distinct !{!10812, !10811, !10813}
!10813 = !DILocation(line: 19, column: 2, scope: !10776)
!10814 = !DILocation(line: 14, column: 23, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !10777, line: 14, column: 7)
!10816 = distinct !DILexicalBlock(scope: !10776, file: !10777, line: 13, column: 54)
!10817 = !DILocation(line: 14, column: 10, scope: !10815)
!10818 = !DILocation(line: 18, column: 11, scope: !10816)
!10819 = !DILocation(line: 14, column: 7, scope: !10816)
!10820 = !DILocation(line: 22, column: 1, scope: !10776)
!10821 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1949, file: !1949, line: 193, type: !10822, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1867, retainedNodes: !10831)
!10822 = !DISubroutineType(types: !10823)
!10823 = !{!55, !10824, !143, !22}
!10824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10825, size: 32)
!10825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10826)
!10826 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1676, line: 37, baseType: !10827)
!10827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1676, line: 32, size: 64, elements: !10828)
!10828 = !{!10829, !10830}
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10827, file: !1676, line: 34, baseType: !40, size: 32)
!10830 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10827, file: !1676, line: 36, baseType: !40, size: 32, offset: 32)
!10831 = !{!10832, !10833, !10834, !10835, !10836, !10837, !10838, !10839, !10841}
!10832 = !DILocalVariable(name: "pins", arg: 1, scope: !10821, file: !1949, line: 193, type: !10824)
!10833 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10821, file: !1949, line: 193, type: !143)
!10834 = !DILocalVariable(name: "reg", arg: 3, scope: !10821, file: !1949, line: 194, type: !22)
!10835 = !DILocalVariable(name: "pin", scope: !10821, file: !1949, line: 196, type: !40)
!10836 = !DILocalVariable(name: "mux", scope: !10821, file: !1949, line: 196, type: !40)
!10837 = !DILocalVariable(name: "pin_cgf", scope: !10821, file: !1949, line: 197, type: !40)
!10838 = !DILocalVariable(name: "ret", scope: !10821, file: !1949, line: 198, type: !55)
!10839 = !DILocalVariable(name: "i", scope: !10840, file: !1949, line: 209, type: !143)
!10840 = distinct !DILexicalBlock(scope: !10821, file: !1949, line: 209, column: 2)
!10841 = !DILocalVariable(name: "gpio_out", scope: !10842, file: !1949, line: 239, type: !40)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !1949, line: 238, column: 55)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !1949, line: 238, column: 14)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !1949, line: 236, column: 14)
!10845 = distinct !DILexicalBlock(scope: !10846, file: !1949, line: 234, column: 7)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !1949, line: 209, column: 41)
!10847 = distinct !DILexicalBlock(scope: !10840, file: !1949, line: 209, column: 2)
!10848 = !DILocation(line: 0, scope: !10821)
!10849 = !DILocation(line: 0, scope: !10840)
!10850 = !DILocation(line: 209, column: 25, scope: !10847)
!10851 = !DILocation(line: 209, column: 2, scope: !10840)
!10852 = distinct !{!10852, !10851, !10853}
!10853 = !DILocation(line: 259, column: 2, scope: !10840)
!10854 = !DILocation(line: 210, column: 17, scope: !10846)
!10855 = !DILocation(line: 234, column: 7, scope: !10845)
!10856 = !DILocation(line: 234, column: 33, scope: !10845)
!10857 = !DILocation(line: 234, column: 7, scope: !10846)
!10858 = !DILocation(line: 235, column: 22, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10845, file: !1949, line: 234, column: 49)
!10860 = !DILocation(line: 235, column: 29, scope: !10859)
!10861 = !DILocation(line: 236, column: 3, scope: !10859)
!10862 = !DILocation(line: 236, column: 14, scope: !10845)
!10863 = !DILocation(line: 239, column: 32, scope: !10842)
!10864 = !DILocation(line: 0, scope: !10842)
!10865 = !DILocation(line: 241, column: 8, scope: !10842)
!10866 = !DILocation(line: 246, column: 3, scope: !10842)
!10867 = !DILocation(line: 252, column: 9, scope: !10846)
!10868 = !DILocation(line: 255, column: 9, scope: !10846)
!10869 = !DILocation(line: 256, column: 11, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10846, file: !1949, line: 256, column: 7)
!10871 = !DILocation(line: 209, column: 37, scope: !10847)
!10872 = !DILocation(line: 256, column: 7, scope: !10846)
!10873 = !DILocation(line: 262, column: 1, scope: !10821)
!10874 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1949, file: !1949, line: 176, type: !10875, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1867, retainedNodes: !10877)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{!55, !40, !40, !40}
!10877 = !{!10878, !10879, !10880, !10881}
!10878 = !DILocalVariable(name: "pin", arg: 1, scope: !10874, file: !1949, line: 176, type: !40)
!10879 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10874, file: !1949, line: 176, type: !40)
!10880 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10874, file: !1949, line: 176, type: !40)
!10881 = !DILocalVariable(name: "port_device", scope: !10874, file: !1949, line: 178, type: !1879)
!10882 = !DILocation(line: 0, scope: !10874)
!10883 = !DILocation(line: 180, column: 22, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10874, file: !1949, line: 180, column: 6)
!10885 = !DILocation(line: 180, column: 6, scope: !10874)
!10886 = !DILocation(line: 180, column: 6, scope: !10884)
!10887 = !DILocation(line: 184, column: 16, scope: !10874)
!10888 = !DILocation(line: 186, column: 19, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10874, file: !1949, line: 186, column: 6)
!10890 = !DILocation(line: 186, column: 28, scope: !10889)
!10891 = !DILocation(line: 186, column: 33, scope: !10889)
!10892 = !DILocation(line: 186, column: 6, scope: !10874)
!10893 = !DILocation(line: 190, column: 43, scope: !10874)
!10894 = !DILocation(line: 190, column: 9, scope: !10874)
!10895 = !DILocation(line: 190, column: 2, scope: !10874)
!10896 = !DILocation(line: 191, column: 1, scope: !10874)
!10897 = distinct !DISubprogram(name: "device_is_ready", scope: !8884, file: !8884, line: 47, type: !10898, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1867, retainedNodes: !10900)
!10898 = !DISubroutineType(types: !10899)
!10899 = !{!329, !1879}
!10900 = !{!10901}
!10901 = !DILocalVariable(name: "dev", arg: 1, scope: !10897, file: !8884, line: 47, type: !1879)
!10902 = !DILocation(line: 0, scope: !10897)
!10903 = !DILocation(line: 55, column: 2, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10897, file: !8884, line: 55, column: 2)
!10905 = !{i64 2149513029}
!10906 = !DILocation(line: 56, column: 9, scope: !10897)
!10907 = !DILocation(line: 56, column: 2, scope: !10897)
!10908 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !316, file: !316, line: 730, type: !10898, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1867, retainedNodes: !10909)
!10909 = !{!10910}
!10910 = !DILocalVariable(name: "dev", arg: 1, scope: !10908, file: !316, line: 730, type: !1879)
!10911 = !DILocation(line: 0, scope: !10908)
!10912 = !DILocation(line: 732, column: 9, scope: !10908)
!10913 = !DILocation(line: 732, column: 2, scope: !10908)
!10914 = distinct !DISubprogram(name: "SystemInit", scope: !2001, file: !2001, line: 167, type: !3440, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2223)
!10915 = !DILocation(line: 182, column: 1, scope: !10914)
!10916 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2001, file: !2001, line: 220, type: !3440, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !10917)
!10917 = !{!10918, !10919, !10920, !10921, !10922}
!10918 = !DILocalVariable(name: "tmp", scope: !10916, file: !2001, line: 222, type: !40)
!10919 = !DILocalVariable(name: "pllvco", scope: !10916, file: !2001, line: 222, type: !40)
!10920 = !DILocalVariable(name: "pllp", scope: !10916, file: !2001, line: 222, type: !40)
!10921 = !DILocalVariable(name: "pllsource", scope: !10916, file: !2001, line: 222, type: !40)
!10922 = !DILocalVariable(name: "pllm", scope: !10916, file: !2001, line: 222, type: !40)
!10923 = !DILocation(line: 0, scope: !10916)
!10924 = !DILocation(line: 225, column: 14, scope: !10916)
!10925 = !DILocation(line: 225, column: 19, scope: !10916)
!10926 = !DILocation(line: 227, column: 3, scope: !10916)
!10927 = !DILocation(line: 240, column: 25, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10916, file: !2001, line: 228, column: 3)
!10929 = !DILocation(line: 241, column: 19, scope: !10928)
!10930 = !DILocation(line: 241, column: 27, scope: !10928)
!10931 = !DILocation(line: 0, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10928, file: !2001, line: 243, column: 11)
!10933 = !DILocation(line: 254, column: 22, scope: !10928)
!10934 = !DILocation(line: 254, column: 62, scope: !10928)
!10935 = !DILocation(line: 255, column: 31, scope: !10928)
!10936 = !DILocation(line: 256, column: 7, scope: !10928)
!10937 = !DILocation(line: 0, scope: !10928)
!10938 = !DILocation(line: 263, column: 30, scope: !10916)
!10939 = !DILocation(line: 263, column: 52, scope: !10916)
!10940 = !DILocation(line: 263, column: 9, scope: !10916)
!10941 = !DILocation(line: 265, column: 19, scope: !10916)
!10942 = !DILocation(line: 266, column: 1, scope: !10916)
!10943 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !10944, file: !10944, line: 87, type: !10945, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !10984)
!10944 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10945 = !DISubroutineType(types: !10946)
!10946 = !{!10947, !10948}
!10947 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3274, line: 44, baseType: !3273)
!10948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10949, size: 32)
!10949 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !10950, line: 172, baseType: !10951)
!10950 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10951 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10950, line: 121, size: 736, elements: !10952)
!10952 = !{!10953, !10954, !10963, !10971, !10972, !10973, !10974, !10975, !10976, !10977, !10978, !10979, !10980, !10981, !10982, !10983}
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !10951, file: !10950, line: 123, baseType: !40, size: 32)
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !10951, file: !10950, line: 126, baseType: !10955, size: 160, offset: 32)
!10955 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !10950, line: 97, baseType: !10956)
!10956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10950, line: 79, size: 160, elements: !10957)
!10957 = !{!10958, !10959, !10960, !10961, !10962}
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !10956, file: !10950, line: 81, baseType: !40, size: 32)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !10956, file: !10950, line: 84, baseType: !40, size: 32, offset: 32)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !10956, file: !10950, line: 87, baseType: !40, size: 32, offset: 64)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !10956, file: !10950, line: 90, baseType: !40, size: 32, offset: 96)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !10956, file: !10950, line: 94, baseType: !40, size: 32, offset: 128)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !10951, file: !10950, line: 129, baseType: !10964, size: 128, offset: 192)
!10964 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !10950, line: 116, baseType: !10965)
!10965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10950, line: 102, size: 128, elements: !10966)
!10966 = !{!10967, !10968, !10969, !10970}
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !10965, file: !10950, line: 104, baseType: !40, size: 32)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !10965, file: !10950, line: 107, baseType: !40, size: 32, offset: 32)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !10965, file: !10950, line: 110, baseType: !40, size: 32, offset: 64)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !10965, file: !10950, line: 113, baseType: !40, size: 32, offset: 96)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !10951, file: !10950, line: 132, baseType: !40, size: 32, offset: 320)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !10951, file: !10950, line: 136, baseType: !40, size: 32, offset: 352)
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !10951, file: !10950, line: 140, baseType: !40, size: 32, offset: 384)
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !10951, file: !10950, line: 143, baseType: !40, size: 32, offset: 416)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !10951, file: !10950, line: 146, baseType: !40, size: 32, offset: 448)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !10951, file: !10950, line: 149, baseType: !40, size: 32, offset: 480)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !10951, file: !10950, line: 152, baseType: !40, size: 32, offset: 512)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !10951, file: !10950, line: 155, baseType: !40, size: 32, offset: 544)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !10951, file: !10950, line: 158, baseType: !40, size: 32, offset: 576)
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !10951, file: !10950, line: 161, baseType: !40, size: 32, offset: 608)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !10951, file: !10950, line: 164, baseType: !40, size: 32, offset: 640)
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !10951, file: !10950, line: 167, baseType: !40, size: 32, offset: 672)
!10983 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !10951, file: !10950, line: 170, baseType: !143, size: 8, offset: 704)
!10984 = !{!10985, !10986, !10987, !10988, !10989, !10990, !10991, !10992, !10993, !10994, !10995}
!10985 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !10943, file: !10944, line: 87, type: !10948)
!10986 = !DILocalVariable(name: "tickstart", scope: !10943, file: !10944, line: 89, type: !40)
!10987 = !DILocalVariable(name: "tmpreg1", scope: !10943, file: !10944, line: 90, type: !40)
!10988 = !DILocalVariable(name: "plli2sp", scope: !10943, file: !10944, line: 91, type: !40)
!10989 = !DILocalVariable(name: "plli2sq", scope: !10943, file: !10944, line: 92, type: !40)
!10990 = !DILocalVariable(name: "plli2sr", scope: !10943, file: !10944, line: 93, type: !40)
!10991 = !DILocalVariable(name: "pllsaip", scope: !10943, file: !10944, line: 94, type: !40)
!10992 = !DILocalVariable(name: "pllsaiq", scope: !10943, file: !10944, line: 95, type: !40)
!10993 = !DILocalVariable(name: "plli2sused", scope: !10943, file: !10944, line: 96, type: !40)
!10994 = !DILocalVariable(name: "pllsaiused", scope: !10943, file: !10944, line: 97, type: !40)
!10995 = !DILocalVariable(name: "tmpreg", scope: !10996, file: !10944, line: 184, type: !296)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !10944, line: 184, column: 5)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !10944, line: 179, column: 3)
!10998 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 178, column: 6)
!10999 = !DILocation(line: 0, scope: !10943)
!11000 = !DILocation(line: 103, column: 23, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 103, column: 6)
!11002 = !DILocation(line: 103, column: 45, scope: !11001)
!11003 = !DILocation(line: 103, column: 71, scope: !11001)
!11004 = !DILocation(line: 103, column: 6, scope: !10943)
!11005 = !DILocation(line: 109, column: 5, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11001, file: !10944, line: 104, column: 3)
!11007 = !DILocation(line: 111, column: 23, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11006, file: !10944, line: 111, column: 8)
!11009 = !DILocation(line: 111, column: 45, scope: !11008)
!11010 = !DILocation(line: 111, column: 8, scope: !11006)
!11011 = !DILocation(line: 119, column: 23, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 119, column: 6)
!11013 = !DILocation(line: 119, column: 45, scope: !11012)
!11014 = !DILocation(line: 119, column: 71, scope: !11012)
!11015 = !DILocation(line: 119, column: 6, scope: !10943)
!11016 = !DILocation(line: 125, column: 5, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11012, file: !10944, line: 120, column: 3)
!11018 = !DILocation(line: 127, column: 23, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11017, file: !10944, line: 127, column: 8)
!11020 = !DILocation(line: 127, column: 45, scope: !11019)
!11021 = !DILocation(line: 127, column: 8, scope: !11017)
!11022 = !DILocation(line: 135, column: 23, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 135, column: 6)
!11024 = !DILocation(line: 135, column: 45, scope: !11023)
!11025 = !DILocation(line: 135, column: 67, scope: !11023)
!11026 = !DILocation(line: 135, column: 6, scope: !10943)
!11027 = !DILocation(line: 141, column: 5, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11023, file: !10944, line: 136, column: 3)
!11029 = !DILocation(line: 143, column: 23, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11028, file: !10944, line: 143, column: 8)
!11031 = !DILocation(line: 143, column: 42, scope: !11030)
!11032 = !DILocation(line: 143, column: 8, scope: !11028)
!11033 = !DILocation(line: 148, column: 42, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11028, file: !10944, line: 148, column: 8)
!11035 = !DILocation(line: 148, column: 8, scope: !11028)
!11036 = !DILocation(line: 156, column: 23, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 156, column: 6)
!11038 = !DILocation(line: 156, column: 45, scope: !11037)
!11039 = !DILocation(line: 156, column: 67, scope: !11037)
!11040 = !DILocation(line: 156, column: 6, scope: !10943)
!11041 = !DILocation(line: 162, column: 5, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11037, file: !10944, line: 157, column: 3)
!11043 = !DILocation(line: 165, column: 23, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11042, file: !10944, line: 165, column: 8)
!11045 = !DILocation(line: 165, column: 42, scope: !11044)
!11046 = !DILocation(line: 165, column: 8, scope: !11042)
!11047 = !DILocation(line: 170, column: 42, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11042, file: !10944, line: 170, column: 8)
!11049 = !DILocation(line: 170, column: 8, scope: !11042)
!11050 = !DILocation(line: 178, column: 23, scope: !10998)
!11051 = !DILocation(line: 178, column: 45, scope: !10998)
!11052 = !DILocation(line: 178, column: 66, scope: !10998)
!11053 = !DILocation(line: 178, column: 6, scope: !10943)
!11054 = !DILocation(line: 184, column: 5, scope: !10996)
!11055 = !DILocation(line: 184, column: 5, scope: !10997)
!11056 = !DILocation(line: 187, column: 13, scope: !10997)
!11057 = !DILocation(line: 190, column: 17, scope: !10997)
!11058 = !DILocation(line: 192, column: 5, scope: !10997)
!11059 = !DILocation(line: 192, column: 17, scope: !10997)
!11060 = !DILocation(line: 192, column: 20, scope: !10997)
!11061 = !DILocation(line: 192, column: 34, scope: !10997)
!11062 = !DILocation(line: 194, column: 11, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !10944, line: 194, column: 10)
!11064 = distinct !DILexicalBlock(scope: !10997, file: !10944, line: 193, column: 5)
!11065 = !DILocation(line: 194, column: 25, scope: !11063)
!11066 = !DILocation(line: 194, column: 39, scope: !11063)
!11067 = !DILocation(line: 194, column: 10, scope: !11064)
!11068 = distinct !{!11068, !11058, !11069}
!11069 = !DILocation(line: 198, column: 5, scope: !10997)
!11070 = !DILocation(line: 200, column: 21, scope: !10997)
!11071 = !DILocation(line: 200, column: 26, scope: !10997)
!11072 = !DILocation(line: 201, column: 17, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !10997, file: !10944, line: 201, column: 8)
!11074 = !DILocation(line: 201, column: 33, scope: !11073)
!11075 = !DILocation(line: 201, column: 66, scope: !11073)
!11076 = !DILocation(line: 201, column: 84, scope: !11073)
!11077 = !DILocation(line: 201, column: 47, scope: !11073)
!11078 = !DILocation(line: 201, column: 8, scope: !10997)
!11079 = !DILocation(line: 204, column: 23, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11073, file: !10944, line: 202, column: 5)
!11081 = !DILocation(line: 204, column: 28, scope: !11080)
!11082 = !DILocation(line: 206, column: 7, scope: !11080)
!11083 = !DILocation(line: 207, column: 7, scope: !11080)
!11084 = !DILocation(line: 209, column: 17, scope: !11080)
!11085 = !DILocation(line: 212, column: 10, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11080, file: !10944, line: 212, column: 10)
!11087 = !DILocation(line: 212, column: 10, scope: !11080)
!11088 = !DILocation(line: 215, column: 21, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11086, file: !10944, line: 213, column: 7)
!11090 = !DILocation(line: 218, column: 9, scope: !11089)
!11091 = !DILocation(line: 218, column: 15, scope: !11089)
!11092 = !DILocation(line: 218, column: 51, scope: !11089)
!11093 = !DILocation(line: 220, column: 15, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !10944, line: 220, column: 14)
!11095 = distinct !DILexicalBlock(scope: !11089, file: !10944, line: 219, column: 9)
!11096 = !DILocation(line: 220, column: 29, scope: !11094)
!11097 = !DILocation(line: 220, column: 43, scope: !11094)
!11098 = !DILocation(line: 220, column: 14, scope: !11095)
!11099 = distinct !{!11099, !11090, !11100}
!11100 = !DILocation(line: 224, column: 9, scope: !11089)
!11101 = !DILocation(line: 227, column: 5, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !10997, file: !10944, line: 227, column: 5)
!11103 = !DILocation(line: 232, column: 23, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 232, column: 6)
!11105 = !DILocation(line: 228, column: 3, scope: !10997)
!11106 = !DILocation(line: 232, column: 45, scope: !11104)
!11107 = !DILocation(line: 232, column: 66, scope: !11104)
!11108 = !DILocation(line: 232, column: 6, scope: !10943)
!11109 = !DILocation(line: 235, column: 5, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11104, file: !10944, line: 233, column: 3)
!11111 = !DILocation(line: 240, column: 23, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 240, column: 6)
!11113 = !DILocation(line: 236, column: 3, scope: !11110)
!11114 = !DILocation(line: 240, column: 45, scope: !11112)
!11115 = !DILocation(line: 240, column: 70, scope: !11112)
!11116 = !DILocation(line: 240, column: 6, scope: !10943)
!11117 = !DILocation(line: 246, column: 5, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11112, file: !10944, line: 241, column: 3)
!11119 = !DILocation(line: 251, column: 23, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 251, column: 6)
!11121 = !DILocation(line: 247, column: 3, scope: !11118)
!11122 = !DILocation(line: 251, column: 45, scope: !11120)
!11123 = !DILocation(line: 251, column: 66, scope: !11120)
!11124 = !DILocation(line: 251, column: 6, scope: !10943)
!11125 = !DILocation(line: 257, column: 5, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11120, file: !10944, line: 252, column: 3)
!11127 = !DILocation(line: 262, column: 23, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 262, column: 6)
!11129 = !DILocation(line: 258, column: 3, scope: !11126)
!11130 = !DILocation(line: 262, column: 45, scope: !11128)
!11131 = !DILocation(line: 262, column: 68, scope: !11128)
!11132 = !DILocation(line: 262, column: 6, scope: !10943)
!11133 = !DILocation(line: 268, column: 5, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11128, file: !10944, line: 263, column: 3)
!11135 = !DILocation(line: 271, column: 23, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11134, file: !10944, line: 271, column: 8)
!11137 = !DILocation(line: 271, column: 43, scope: !11136)
!11138 = !DILocation(line: 271, column: 8, scope: !11134)
!11139 = !DILocation(line: 279, column: 23, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 279, column: 6)
!11141 = !DILocation(line: 279, column: 45, scope: !11140)
!11142 = !DILocation(line: 279, column: 67, scope: !11140)
!11143 = !DILocation(line: 279, column: 6, scope: !10943)
!11144 = !DILocation(line: 285, column: 5, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11140, file: !10944, line: 280, column: 3)
!11146 = !DILocation(line: 290, column: 23, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 290, column: 6)
!11148 = !DILocation(line: 286, column: 3, scope: !11145)
!11149 = !DILocation(line: 290, column: 45, scope: !11147)
!11150 = !DILocation(line: 290, column: 70, scope: !11147)
!11151 = !DILocation(line: 290, column: 6, scope: !10943)
!11152 = !DILocation(line: 296, column: 5, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11147, file: !10944, line: 291, column: 3)
!11154 = !DILocation(line: 298, column: 23, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11153, file: !10944, line: 298, column: 8)
!11156 = !DILocation(line: 298, column: 43, scope: !11155)
!11157 = !DILocation(line: 298, column: 8, scope: !11153)
!11158 = !DILocation(line: 308, column: 44, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 308, column: 6)
!11160 = !DILocation(line: 308, column: 18, scope: !11159)
!11161 = !DILocation(line: 308, column: 25, scope: !11159)
!11162 = !DILocation(line: 308, column: 65, scope: !11159)
!11163 = !DILocation(line: 308, column: 6, scope: !10943)
!11164 = !DILocation(line: 311, column: 5, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11159, file: !10944, line: 309, column: 3)
!11166 = !DILocation(line: 313, column: 17, scope: !11165)
!11167 = !DILocation(line: 315, column: 5, scope: !11165)
!11168 = !DILocation(line: 315, column: 11, scope: !11165)
!11169 = !DILocation(line: 317, column: 11, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11171, file: !10944, line: 317, column: 10)
!11171 = distinct !DILexicalBlock(scope: !11165, file: !10944, line: 316, column: 5)
!11172 = !DILocation(line: 317, column: 25, scope: !11170)
!11173 = !DILocation(line: 317, column: 39, scope: !11170)
!11174 = !DILocation(line: 317, column: 10, scope: !11171)
!11175 = distinct !{!11175, !11167, !11176}
!11176 = !DILocation(line: 322, column: 5, scope: !11165)
!11177 = !DILocation(line: 329, column: 27, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11165, file: !10944, line: 329, column: 8)
!11179 = !DILocation(line: 329, column: 49, scope: !11178)
!11180 = !DILocation(line: 329, column: 75, scope: !11178)
!11181 = !DILocation(line: 329, column: 102, scope: !11178)
!11182 = !DILocation(line: 329, column: 121, scope: !11178)
!11183 = !DILocation(line: 329, column: 143, scope: !11178)
!11184 = !DILocation(line: 329, column: 176, scope: !11178)
!11185 = !DILocation(line: 330, column: 49, scope: !11178)
!11186 = !DILocation(line: 330, column: 75, scope: !11178)
!11187 = !DILocation(line: 330, column: 102, scope: !11178)
!11188 = !DILocation(line: 330, column: 121, scope: !11178)
!11189 = !DILocation(line: 330, column: 143, scope: !11178)
!11190 = !DILocation(line: 329, column: 8, scope: !11165)
!11191 = !DILocation(line: 336, column: 26, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11178, file: !10944, line: 331, column: 5)
!11193 = !DILocation(line: 336, column: 100, scope: !11192)
!11194 = !DILocation(line: 337, column: 24, scope: !11192)
!11195 = !DILocation(line: 337, column: 61, scope: !11192)
!11196 = !DILocation(line: 341, column: 7, scope: !11192)
!11197 = !DILocation(line: 345, column: 27, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11165, file: !10944, line: 345, column: 8)
!11199 = !DILocation(line: 342, column: 5, scope: !11192)
!11200 = !DILocation(line: 345, column: 49, scope: !11198)
!11201 = !DILocation(line: 345, column: 71, scope: !11198)
!11202 = !DILocation(line: 345, column: 94, scope: !11198)
!11203 = !DILocation(line: 345, column: 113, scope: !11198)
!11204 = !DILocation(line: 345, column: 132, scope: !11198)
!11205 = !DILocation(line: 345, column: 162, scope: !11198)
!11206 = !DILocation(line: 346, column: 49, scope: !11198)
!11207 = !DILocation(line: 346, column: 71, scope: !11198)
!11208 = !DILocation(line: 346, column: 94, scope: !11198)
!11209 = !DILocation(line: 346, column: 113, scope: !11198)
!11210 = !DILocation(line: 346, column: 132, scope: !11198)
!11211 = !DILocation(line: 345, column: 8, scope: !11165)
!11212 = !DILocation(line: 354, column: 26, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11198, file: !10944, line: 347, column: 5)
!11214 = !DILocation(line: 354, column: 100, scope: !11213)
!11215 = !DILocation(line: 355, column: 24, scope: !11213)
!11216 = !DILocation(line: 355, column: 61, scope: !11213)
!11217 = !DILocation(line: 360, column: 7, scope: !11213)
!11218 = !DILocation(line: 363, column: 7, scope: !11213)
!11219 = !DILocation(line: 367, column: 26, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11165, file: !10944, line: 367, column: 8)
!11221 = !DILocation(line: 364, column: 5, scope: !11213)
!11222 = !DILocation(line: 367, column: 48, scope: !11220)
!11223 = !DILocation(line: 367, column: 73, scope: !11220)
!11224 = !DILocation(line: 367, column: 99, scope: !11220)
!11225 = !DILocation(line: 367, column: 118, scope: !11220)
!11226 = !DILocation(line: 367, column: 138, scope: !11220)
!11227 = !DILocation(line: 367, column: 8, scope: !11165)
!11228 = !DILocation(line: 372, column: 26, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11220, file: !10944, line: 368, column: 5)
!11230 = !DILocation(line: 373, column: 24, scope: !11229)
!11231 = !DILocation(line: 373, column: 61, scope: !11229)
!11232 = !DILocation(line: 377, column: 7, scope: !11229)
!11233 = !DILocation(line: 381, column: 24, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11165, file: !10944, line: 381, column: 8)
!11235 = !DILocation(line: 378, column: 5, scope: !11229)
!11236 = !DILocation(line: 381, column: 45, scope: !11234)
!11237 = !DILocation(line: 381, column: 69, scope: !11234)
!11238 = !DILocation(line: 381, column: 8, scope: !11165)
!11239 = !DILocation(line: 390, column: 7, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11234, file: !10944, line: 382, column: 5)
!11241 = !DILocation(line: 391, column: 5, scope: !11240)
!11242 = !DILocation(line: 394, column: 5, scope: !11165)
!11243 = !DILocation(line: 396, column: 17, scope: !11165)
!11244 = !DILocation(line: 398, column: 5, scope: !11165)
!11245 = !DILocation(line: 398, column: 11, scope: !11165)
!11246 = !DILocation(line: 398, column: 51, scope: !11165)
!11247 = !DILocation(line: 400, column: 11, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !10944, line: 400, column: 10)
!11249 = distinct !DILexicalBlock(scope: !11165, file: !10944, line: 399, column: 5)
!11250 = !DILocation(line: 400, column: 25, scope: !11248)
!11251 = !DILocation(line: 400, column: 39, scope: !11248)
!11252 = !DILocation(line: 400, column: 10, scope: !11249)
!11253 = distinct !{!11253, !11244, !11254}
!11254 = !DILocation(line: 405, column: 5, scope: !11165)
!11255 = !DILocation(line: 411, column: 17, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !10943, file: !10944, line: 411, column: 6)
!11257 = !DILocation(line: 411, column: 6, scope: !10943)
!11258 = !DILocation(line: 414, column: 5, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11256, file: !10944, line: 412, column: 3)
!11260 = !DILocation(line: 416, column: 17, scope: !11259)
!11261 = !DILocation(line: 418, column: 5, scope: !11259)
!11262 = !DILocation(line: 418, column: 11, scope: !11259)
!11263 = !DILocation(line: 420, column: 11, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !10944, line: 420, column: 10)
!11265 = distinct !DILexicalBlock(scope: !11259, file: !10944, line: 419, column: 5)
!11266 = !DILocation(line: 420, column: 25, scope: !11264)
!11267 = !DILocation(line: 420, column: 39, scope: !11264)
!11268 = !DILocation(line: 420, column: 10, scope: !11265)
!11269 = distinct !{!11269, !11261, !11270}
!11270 = !DILocation(line: 425, column: 5, scope: !11259)
!11271 = !DILocation(line: 432, column: 27, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11259, file: !10944, line: 432, column: 8)
!11273 = !DILocation(line: 432, column: 49, scope: !11272)
!11274 = !DILocation(line: 432, column: 71, scope: !11272)
!11275 = !DILocation(line: 432, column: 94, scope: !11272)
!11276 = !DILocation(line: 432, column: 113, scope: !11272)
!11277 = !DILocation(line: 432, column: 132, scope: !11272)
!11278 = !DILocation(line: 432, column: 162, scope: !11272)
!11279 = !DILocation(line: 433, column: 49, scope: !11272)
!11280 = !DILocation(line: 433, column: 71, scope: !11272)
!11281 = !DILocation(line: 433, column: 94, scope: !11272)
!11282 = !DILocation(line: 433, column: 113, scope: !11272)
!11283 = !DILocation(line: 433, column: 132, scope: !11272)
!11284 = !DILocation(line: 432, column: 8, scope: !11259)
!11285 = !DILocation(line: 441, column: 26, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11272, file: !10944, line: 434, column: 5)
!11287 = !DILocation(line: 441, column: 100, scope: !11286)
!11288 = !DILocation(line: 445, column: 7, scope: !11286)
!11289 = !DILocation(line: 448, column: 7, scope: !11286)
!11290 = !DILocation(line: 453, column: 26, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11259, file: !10944, line: 453, column: 8)
!11292 = !DILocation(line: 449, column: 5, scope: !11286)
!11293 = !DILocation(line: 453, column: 48, scope: !11291)
!11294 = !DILocation(line: 453, column: 71, scope: !11291)
!11295 = !DILocation(line: 453, column: 95, scope: !11291)
!11296 = !DILocation(line: 453, column: 114, scope: !11291)
!11297 = !DILocation(line: 453, column: 134, scope: !11291)
!11298 = !DILocation(line: 453, column: 8, scope: !11259)
!11299 = !DILocation(line: 458, column: 24, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11291, file: !10944, line: 454, column: 5)
!11301 = !DILocation(line: 458, column: 61, scope: !11300)
!11302 = !DILocation(line: 462, column: 7, scope: !11300)
!11303 = !DILocation(line: 463, column: 5, scope: !11300)
!11304 = !DILocation(line: 466, column: 5, scope: !11259)
!11305 = !DILocation(line: 468, column: 17, scope: !11259)
!11306 = !DILocation(line: 470, column: 5, scope: !11259)
!11307 = !DILocation(line: 470, column: 11, scope: !11259)
!11308 = !DILocation(line: 470, column: 39, scope: !11259)
!11309 = !DILocation(line: 472, column: 11, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !10944, line: 472, column: 10)
!11311 = distinct !DILexicalBlock(scope: !11259, file: !10944, line: 471, column: 5)
!11312 = !DILocation(line: 472, column: 25, scope: !11310)
!11313 = !DILocation(line: 472, column: 39, scope: !11310)
!11314 = !DILocation(line: 472, column: 10, scope: !11311)
!11315 = distinct !{!11315, !11306, !11316}
!11316 = !DILocation(line: 477, column: 5, scope: !11259)
!11317 = !DILocation(line: 480, column: 1, scope: !10943)
!11318 = !DISubprogram(name: "HAL_GetTick", scope: !11319, file: !11319, line: 234, type: !6564, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!11319 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11320 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !10944, file: !10944, line: 489, type: !11321, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11323)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{null, !10948}
!11323 = !{!11324, !11325}
!11324 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11320, file: !10944, line: 489, type: !10948)
!11325 = !DILocalVariable(name: "tempreg", scope: !11320, file: !10944, line: 491, type: !40)
!11326 = !DILocation(line: 0, scope: !11320)
!11327 = !DILocation(line: 494, column: 18, scope: !11320)
!11328 = !DILocation(line: 494, column: 39, scope: !11320)
!11329 = !DILocation(line: 502, column: 52, scope: !11320)
!11330 = !DILocation(line: 502, column: 63, scope: !11320)
!11331 = !DILocation(line: 502, column: 25, scope: !11320)
!11332 = !DILocation(line: 502, column: 33, scope: !11320)
!11333 = !DILocation(line: 503, column: 52, scope: !11320)
!11334 = !DILocation(line: 503, column: 89, scope: !11320)
!11335 = !DILocation(line: 503, column: 25, scope: !11320)
!11336 = !DILocation(line: 503, column: 33, scope: !11320)
!11337 = !DILocation(line: 504, column: 54, scope: !11320)
!11338 = !DILocation(line: 504, column: 128, scope: !11320)
!11339 = !DILocation(line: 504, column: 25, scope: !11320)
!11340 = !DILocation(line: 504, column: 33, scope: !11320)
!11341 = !DILocation(line: 505, column: 52, scope: !11320)
!11342 = !DILocation(line: 505, column: 89, scope: !11320)
!11343 = !DILocation(line: 505, column: 25, scope: !11320)
!11344 = !DILocation(line: 505, column: 33, scope: !11320)
!11345 = !DILocation(line: 506, column: 52, scope: !11320)
!11346 = !DILocation(line: 506, column: 89, scope: !11320)
!11347 = !DILocation(line: 506, column: 25, scope: !11320)
!11348 = !DILocation(line: 506, column: 33, scope: !11320)
!11349 = !DILocation(line: 508, column: 52, scope: !11320)
!11350 = !DILocation(line: 508, column: 63, scope: !11320)
!11351 = !DILocation(line: 508, column: 25, scope: !11320)
!11352 = !DILocation(line: 508, column: 33, scope: !11320)
!11353 = !DILocation(line: 509, column: 52, scope: !11320)
!11354 = !DILocation(line: 509, column: 89, scope: !11320)
!11355 = !DILocation(line: 509, column: 25, scope: !11320)
!11356 = !DILocation(line: 509, column: 33, scope: !11320)
!11357 = !DILocation(line: 510, column: 54, scope: !11320)
!11358 = !DILocation(line: 510, column: 128, scope: !11320)
!11359 = !DILocation(line: 510, column: 25, scope: !11320)
!11360 = !DILocation(line: 510, column: 33, scope: !11320)
!11361 = !DILocation(line: 511, column: 52, scope: !11320)
!11362 = !DILocation(line: 511, column: 89, scope: !11320)
!11363 = !DILocation(line: 511, column: 25, scope: !11320)
!11364 = !DILocation(line: 511, column: 33, scope: !11320)
!11365 = !DILocation(line: 513, column: 48, scope: !11320)
!11366 = !DILocation(line: 513, column: 56, scope: !11320)
!11367 = !DILocation(line: 513, column: 18, scope: !11320)
!11368 = !DILocation(line: 513, column: 29, scope: !11320)
!11369 = !DILocation(line: 514, column: 48, scope: !11320)
!11370 = !DILocation(line: 514, column: 82, scope: !11320)
!11371 = !DILocation(line: 514, column: 18, scope: !11320)
!11372 = !DILocation(line: 514, column: 29, scope: !11320)
!11373 = !DILocation(line: 517, column: 39, scope: !11320)
!11374 = !DILocation(line: 517, column: 18, scope: !11320)
!11375 = !DILocation(line: 517, column: 37, scope: !11320)
!11376 = !DILocation(line: 520, column: 39, scope: !11320)
!11377 = !DILocation(line: 520, column: 18, scope: !11320)
!11378 = !DILocation(line: 520, column: 37, scope: !11320)
!11379 = !DILocation(line: 523, column: 42, scope: !11320)
!11380 = !DILocation(line: 523, column: 18, scope: !11320)
!11381 = !DILocation(line: 523, column: 40, scope: !11320)
!11382 = !DILocation(line: 526, column: 42, scope: !11320)
!11383 = !DILocation(line: 526, column: 18, scope: !11320)
!11384 = !DILocation(line: 526, column: 40, scope: !11320)
!11385 = !DILocation(line: 529, column: 19, scope: !11320)
!11386 = !DILocation(line: 529, column: 24, scope: !11320)
!11387 = !DILocation(line: 530, column: 67, scope: !11320)
!11388 = !DILocation(line: 530, column: 72, scope: !11320)
!11389 = !DILocation(line: 530, column: 59, scope: !11320)
!11390 = !DILocation(line: 530, column: 18, scope: !11320)
!11391 = !DILocation(line: 530, column: 36, scope: !11320)
!11392 = !DILocation(line: 533, column: 38, scope: !11320)
!11393 = !DILocation(line: 533, column: 18, scope: !11320)
!11394 = !DILocation(line: 533, column: 36, scope: !11320)
!11395 = !DILocation(line: 536, column: 42, scope: !11320)
!11396 = !DILocation(line: 536, column: 18, scope: !11320)
!11397 = !DILocation(line: 536, column: 40, scope: !11320)
!11398 = !DILocation(line: 539, column: 40, scope: !11320)
!11399 = !DILocation(line: 539, column: 18, scope: !11320)
!11400 = !DILocation(line: 539, column: 38, scope: !11320)
!11401 = !DILocation(line: 542, column: 39, scope: !11320)
!11402 = !DILocation(line: 542, column: 18, scope: !11320)
!11403 = !DILocation(line: 542, column: 37, scope: !11320)
!11404 = !DILocation(line: 545, column: 40, scope: !11320)
!11405 = !DILocation(line: 545, column: 18, scope: !11320)
!11406 = !DILocation(line: 545, column: 38, scope: !11320)
!11407 = !DILocation(line: 548, column: 13, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11320, file: !10944, line: 548, column: 7)
!11409 = !DILocation(line: 548, column: 7, scope: !11320)
!11410 = !DILocation(line: 550, column: 20, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11408, file: !10944, line: 549, column: 3)
!11412 = !DILocation(line: 550, column: 37, scope: !11411)
!11413 = !DILocation(line: 556, column: 1, scope: !11320)
!11414 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !10944, file: !10944, line: 569, type: !7505, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11415)
!11415 = !{!11416, !11417, !11418, !11419, !11420, !11421, !11422}
!11416 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11414, file: !10944, line: 569, type: !40)
!11417 = !DILocalVariable(name: "tmpreg1", scope: !11414, file: !10944, line: 571, type: !40)
!11418 = !DILocalVariable(name: "frequency", scope: !11414, file: !10944, line: 573, type: !40)
!11419 = !DILocalVariable(name: "vcoinput", scope: !11414, file: !10944, line: 575, type: !40)
!11420 = !DILocalVariable(name: "saiclocksource", scope: !11414, file: !10944, line: 577, type: !40)
!11421 = !DILocalVariable(name: "srcclk", scope: !11414, file: !10944, line: 578, type: !40)
!11422 = !DILocalVariable(name: "vcooutput", scope: !11414, file: !10944, line: 580, type: !40)
!11423 = !DILocation(line: 0, scope: !11414)
!11424 = !DILocation(line: 581, column: 3, scope: !11414)
!11425 = !DILocation(line: 586, column: 29, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !10944, line: 585, column: 5)
!11427 = distinct !DILexicalBlock(scope: !11414, file: !10944, line: 582, column: 3)
!11428 = !DILocation(line: 588, column: 7, scope: !11426)
!11429 = !DILocation(line: 594, column: 20, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11431, file: !10944, line: 594, column: 14)
!11431 = distinct !DILexicalBlock(scope: !11432, file: !10944, line: 591, column: 9)
!11432 = distinct !DILexicalBlock(scope: !11426, file: !10944, line: 589, column: 7)
!11433 = !DILocation(line: 0, scope: !11430)
!11434 = !DILocation(line: 606, column: 27, scope: !11431)
!11435 = !DILocation(line: 606, column: 64, scope: !11431)
!11436 = !DILocation(line: 607, column: 42, scope: !11431)
!11437 = !DILocation(line: 607, column: 79, scope: !11431)
!11438 = !DILocation(line: 607, column: 33, scope: !11431)
!11439 = !DILocation(line: 607, column: 86, scope: !11431)
!11440 = !DILocation(line: 610, column: 29, scope: !11431)
!11441 = !DILocation(line: 610, column: 63, scope: !11431)
!11442 = !DILocation(line: 610, column: 70, scope: !11431)
!11443 = !DILocation(line: 611, column: 32, scope: !11431)
!11444 = !DILocation(line: 612, column: 11, scope: !11431)
!11445 = !DILocation(line: 619, column: 20, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !10944, line: 619, column: 14)
!11447 = distinct !DILexicalBlock(scope: !11432, file: !10944, line: 616, column: 9)
!11448 = !DILocation(line: 0, scope: !11446)
!11449 = !DILocation(line: 632, column: 27, scope: !11447)
!11450 = !DILocation(line: 632, column: 64, scope: !11447)
!11451 = !DILocation(line: 633, column: 42, scope: !11447)
!11452 = !DILocation(line: 633, column: 79, scope: !11447)
!11453 = !DILocation(line: 633, column: 33, scope: !11447)
!11454 = !DILocation(line: 633, column: 86, scope: !11447)
!11455 = !DILocation(line: 636, column: 28, scope: !11447)
!11456 = !DILocation(line: 636, column: 36, scope: !11447)
!11457 = !DILocation(line: 636, column: 62, scope: !11447)
!11458 = !DILocation(line: 637, column: 32, scope: !11447)
!11459 = !DILocation(line: 638, column: 11, scope: !11447)
!11460 = !DILocation(line: 645, column: 20, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !10944, line: 645, column: 14)
!11462 = distinct !DILexicalBlock(scope: !11432, file: !10944, line: 642, column: 9)
!11463 = !DILocation(line: 0, scope: !11461)
!11464 = !DILocation(line: 658, column: 27, scope: !11462)
!11465 = !DILocation(line: 658, column: 55, scope: !11462)
!11466 = !DILocation(line: 659, column: 42, scope: !11462)
!11467 = !DILocation(line: 659, column: 70, scope: !11462)
!11468 = !DILocation(line: 659, column: 33, scope: !11462)
!11469 = !DILocation(line: 659, column: 77, scope: !11462)
!11470 = !DILocation(line: 660, column: 11, scope: !11462)
!11471 = !DILocation(line: 665, column: 11, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11432, file: !10944, line: 663, column: 9)
!11473 = !DILocation(line: 669, column: 20, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !10944, line: 669, column: 14)
!11475 = distinct !DILexicalBlock(scope: !11432, file: !10944, line: 668, column: 9)
!11476 = !DILocation(line: 691, column: 16, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11427, file: !10944, line: 689, column: 5)
!11478 = !DILocation(line: 692, column: 7, scope: !11477)
!11479 = !DILocation(line: 706, column: 20, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11481, file: !10944, line: 706, column: 14)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !10944, line: 703, column: 9)
!11482 = distinct !DILexicalBlock(scope: !11477, file: !10944, line: 693, column: 7)
!11483 = !DILocation(line: 0, scope: !11480)
!11484 = !DILocation(line: 718, column: 53, scope: !11481)
!11485 = !DILocation(line: 718, column: 90, scope: !11481)
!11486 = !DILocation(line: 718, column: 43, scope: !11481)
!11487 = !DILocation(line: 720, column: 53, scope: !11481)
!11488 = !DILocation(line: 720, column: 90, scope: !11481)
!11489 = !DILocation(line: 720, column: 44, scope: !11481)
!11490 = !DILocation(line: 721, column: 11, scope: !11481)
!11491 = !DILocation(line: 728, column: 20, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11493, file: !10944, line: 728, column: 14)
!11493 = distinct !DILexicalBlock(scope: !11482, file: !10944, line: 725, column: 9)
!11494 = !DILocation(line: 0, scope: !11492)
!11495 = !DILocation(line: 740, column: 53, scope: !11493)
!11496 = !DILocation(line: 740, column: 81, scope: !11493)
!11497 = !DILocation(line: 740, column: 43, scope: !11493)
!11498 = !DILocation(line: 742, column: 53, scope: !11493)
!11499 = !DILocation(line: 742, column: 81, scope: !11493)
!11500 = !DILocation(line: 742, column: 44, scope: !11493)
!11501 = !DILocation(line: 743, column: 11, scope: !11493)
!11502 = !DILocation(line: 748, column: 20, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11504, file: !10944, line: 748, column: 14)
!11504 = distinct !DILexicalBlock(scope: !11482, file: !10944, line: 747, column: 9)
!11505 = !DILocation(line: 770, column: 16, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11427, file: !10944, line: 768, column: 5)
!11507 = !DILocation(line: 771, column: 7, scope: !11506)
!11508 = !DILocation(line: 785, column: 20, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !10944, line: 785, column: 14)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !10944, line: 782, column: 9)
!11511 = distinct !DILexicalBlock(scope: !11506, file: !10944, line: 772, column: 7)
!11512 = !DILocation(line: 0, scope: !11509)
!11513 = !DILocation(line: 797, column: 53, scope: !11510)
!11514 = !DILocation(line: 797, column: 90, scope: !11510)
!11515 = !DILocation(line: 797, column: 43, scope: !11510)
!11516 = !DILocation(line: 799, column: 53, scope: !11510)
!11517 = !DILocation(line: 799, column: 90, scope: !11510)
!11518 = !DILocation(line: 799, column: 44, scope: !11510)
!11519 = !DILocation(line: 800, column: 11, scope: !11510)
!11520 = !DILocation(line: 807, column: 20, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !10944, line: 807, column: 14)
!11522 = distinct !DILexicalBlock(scope: !11511, file: !10944, line: 804, column: 9)
!11523 = !DILocation(line: 0, scope: !11521)
!11524 = !DILocation(line: 819, column: 53, scope: !11522)
!11525 = !DILocation(line: 819, column: 81, scope: !11522)
!11526 = !DILocation(line: 819, column: 43, scope: !11522)
!11527 = !DILocation(line: 821, column: 53, scope: !11522)
!11528 = !DILocation(line: 821, column: 81, scope: !11522)
!11529 = !DILocation(line: 821, column: 44, scope: !11522)
!11530 = !DILocation(line: 822, column: 11, scope: !11522)
!11531 = !DILocation(line: 827, column: 20, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11533, file: !10944, line: 827, column: 14)
!11533 = distinct !DILexicalBlock(scope: !11511, file: !10944, line: 826, column: 9)
!11534 = !DILocation(line: 847, column: 3, scope: !11414)
!11535 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !10944, file: !10944, line: 2766, type: !11536, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11538)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{null, !143}
!11538 = !{!11539}
!11539 = !DILocalVariable(name: "Mode", arg: 1, scope: !11535, file: !10944, line: 2766, type: !143)
!11540 = !DILocation(line: 0, scope: !11535)
!11541 = !DILocation(line: 2770, column: 11, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11535, file: !10944, line: 2770, column: 6)
!11543 = !DILocation(line: 0, scope: !11542)
!11544 = !DILocation(line: 2770, column: 6, scope: !11535)
!11545 = !DILocation(line: 2778, column: 1, scope: !11535)
!11546 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !10944, file: !10944, line: 2803, type: !11547, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11550)
!11547 = !DISubroutineType(types: !11548)
!11548 = !{!10947, !11549}
!11549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10955, size: 32)
!11550 = !{!11551, !11552}
!11551 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11546, file: !10944, line: 2803, type: !11549)
!11552 = !DILocalVariable(name: "tickstart", scope: !11546, file: !10944, line: 2805, type: !40)
!11553 = !DILocation(line: 0, scope: !11546)
!11554 = !DILocation(line: 2821, column: 3, scope: !11546)
!11555 = !DILocation(line: 2824, column: 15, scope: !11546)
!11556 = !DILocation(line: 2825, column: 3, scope: !11546)
!11557 = !DILocation(line: 2825, column: 9, scope: !11546)
!11558 = !DILocation(line: 2827, column: 9, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !10944, line: 2827, column: 8)
!11560 = distinct !DILexicalBlock(scope: !11546, file: !10944, line: 2826, column: 3)
!11561 = !DILocation(line: 2827, column: 23, scope: !11559)
!11562 = !DILocation(line: 2827, column: 37, scope: !11559)
!11563 = !DILocation(line: 2827, column: 8, scope: !11560)
!11564 = distinct !{!11564, !11556, !11565}
!11565 = !DILocation(line: 2832, column: 3, scope: !11546)
!11566 = !DILocation(line: 2840, column: 3, scope: !11546)
!11567 = !DILocation(line: 2866, column: 3, scope: !11546)
!11568 = !DILocation(line: 2869, column: 15, scope: !11546)
!11569 = !DILocation(line: 2870, column: 3, scope: !11546)
!11570 = !DILocation(line: 2870, column: 9, scope: !11546)
!11571 = !DILocation(line: 2870, column: 48, scope: !11546)
!11572 = !DILocation(line: 2872, column: 9, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11574, file: !10944, line: 2872, column: 8)
!11574 = distinct !DILexicalBlock(scope: !11546, file: !10944, line: 2871, column: 3)
!11575 = !DILocation(line: 2872, column: 23, scope: !11573)
!11576 = !DILocation(line: 2872, column: 37, scope: !11573)
!11577 = !DILocation(line: 2872, column: 8, scope: !11574)
!11578 = distinct !{!11578, !11569, !11579}
!11579 = !DILocation(line: 2877, column: 3, scope: !11546)
!11580 = !DILocation(line: 2880, column: 1, scope: !11546)
!11581 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !10944, file: !10944, line: 2886, type: !11582, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11584)
!11582 = !DISubroutineType(types: !11583)
!11583 = !{!10947}
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "tickstart", scope: !11581, file: !10944, line: 2888, type: !40)
!11586 = !DILocation(line: 2891, column: 3, scope: !11581)
!11587 = !DILocation(line: 2894, column: 15, scope: !11581)
!11588 = !DILocation(line: 0, scope: !11581)
!11589 = !DILocation(line: 2895, column: 3, scope: !11581)
!11590 = !DILocation(line: 2895, column: 9, scope: !11581)
!11591 = !DILocation(line: 2895, column: 45, scope: !11581)
!11592 = !DILocation(line: 2897, column: 9, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11594, file: !10944, line: 2897, column: 8)
!11594 = distinct !DILexicalBlock(scope: !11581, file: !10944, line: 2896, column: 3)
!11595 = !DILocation(line: 2897, column: 23, scope: !11593)
!11596 = !DILocation(line: 2897, column: 36, scope: !11593)
!11597 = !DILocation(line: 2897, column: 8, scope: !11594)
!11598 = distinct !{!11598, !11589, !11599}
!11599 = !DILocation(line: 2902, column: 3, scope: !11581)
!11600 = !DILocation(line: 2905, column: 1, scope: !11581)
!11601 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !10944, file: !10944, line: 2916, type: !11602, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11605)
!11602 = !DISubroutineType(types: !11603)
!11603 = !{!10947, !11604}
!11604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10964, size: 32)
!11605 = !{!11606, !11607}
!11606 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11601, file: !10944, line: 2916, type: !11604)
!11607 = !DILocalVariable(name: "tickstart", scope: !11601, file: !10944, line: 2918, type: !40)
!11608 = !DILocation(line: 0, scope: !11601)
!11609 = !DILocation(line: 2934, column: 3, scope: !11601)
!11610 = !DILocation(line: 2937, column: 15, scope: !11601)
!11611 = !DILocation(line: 2938, column: 3, scope: !11601)
!11612 = !DILocation(line: 2938, column: 9, scope: !11601)
!11613 = !DILocation(line: 2940, column: 9, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !10944, line: 2940, column: 8)
!11615 = distinct !DILexicalBlock(scope: !11601, file: !10944, line: 2939, column: 3)
!11616 = !DILocation(line: 2940, column: 23, scope: !11614)
!11617 = !DILocation(line: 2940, column: 37, scope: !11614)
!11618 = !DILocation(line: 2940, column: 8, scope: !11615)
!11619 = distinct !{!11619, !11611, !11620}
!11620 = !DILocation(line: 2945, column: 3, scope: !11601)
!11621 = !DILocation(line: 2953, column: 3, scope: !11601)
!11622 = !DILocation(line: 2970, column: 3, scope: !11601)
!11623 = !DILocation(line: 2973, column: 15, scope: !11601)
!11624 = !DILocation(line: 2974, column: 3, scope: !11601)
!11625 = !DILocation(line: 2974, column: 9, scope: !11601)
!11626 = !DILocation(line: 2974, column: 37, scope: !11601)
!11627 = !DILocation(line: 2976, column: 9, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !10944, line: 2976, column: 8)
!11629 = distinct !DILexicalBlock(scope: !11601, file: !10944, line: 2975, column: 3)
!11630 = !DILocation(line: 2976, column: 23, scope: !11628)
!11631 = !DILocation(line: 2976, column: 37, scope: !11628)
!11632 = !DILocation(line: 2976, column: 8, scope: !11629)
!11633 = distinct !{!11633, !11624, !11634}
!11634 = !DILocation(line: 2981, column: 3, scope: !11601)
!11635 = !DILocation(line: 2984, column: 1, scope: !11601)
!11636 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !10944, file: !10944, line: 2990, type: !11582, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11637)
!11637 = !{!11638}
!11638 = !DILocalVariable(name: "tickstart", scope: !11636, file: !10944, line: 2992, type: !40)
!11639 = !DILocation(line: 2995, column: 3, scope: !11636)
!11640 = !DILocation(line: 2998, column: 15, scope: !11636)
!11641 = !DILocation(line: 0, scope: !11636)
!11642 = !DILocation(line: 2999, column: 3, scope: !11636)
!11643 = !DILocation(line: 2999, column: 9, scope: !11636)
!11644 = !DILocation(line: 3001, column: 9, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11646, file: !10944, line: 3001, column: 8)
!11646 = distinct !DILexicalBlock(scope: !11636, file: !10944, line: 3000, column: 3)
!11647 = !DILocation(line: 3001, column: 23, scope: !11645)
!11648 = !DILocation(line: 3001, column: 36, scope: !11645)
!11649 = !DILocation(line: 3001, column: 8, scope: !11646)
!11650 = distinct !{!11650, !11642, !11651}
!11651 = !DILocation(line: 3006, column: 3, scope: !11636)
!11652 = !DILocation(line: 3009, column: 1, scope: !11636)
!11653 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10944, file: !10944, line: 3051, type: !6564, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11654)
!11654 = !{!11655, !11656, !11657, !11658, !11659}
!11655 = !DILocalVariable(name: "pllm", scope: !11653, file: !10944, line: 3053, type: !40)
!11656 = !DILocalVariable(name: "pllvco", scope: !11653, file: !10944, line: 3054, type: !40)
!11657 = !DILocalVariable(name: "pllp", scope: !11653, file: !10944, line: 3055, type: !40)
!11658 = !DILocalVariable(name: "pllr", scope: !11653, file: !10944, line: 3056, type: !40)
!11659 = !DILocalVariable(name: "sysclockfreq", scope: !11653, file: !10944, line: 3057, type: !40)
!11660 = !DILocation(line: 0, scope: !11653)
!11661 = !DILocation(line: 3060, column: 16, scope: !11653)
!11662 = !DILocation(line: 3060, column: 3, scope: !11653)
!11663 = !DILocation(line: 3076, column: 19, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11665, file: !10944, line: 3073, column: 5)
!11665 = distinct !DILexicalBlock(scope: !11653, file: !10944, line: 3061, column: 3)
!11666 = !DILocation(line: 3076, column: 27, scope: !11664)
!11667 = !DILocation(line: 3077, column: 10, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11664, file: !10944, line: 3077, column: 10)
!11669 = !DILocation(line: 0, scope: !11668)
!11670 = !DILocation(line: 3087, column: 23, scope: !11664)
!11671 = !DILocation(line: 3087, column: 82, scope: !11664)
!11672 = !DILocation(line: 3089, column: 28, scope: !11664)
!11673 = !DILocation(line: 3090, column: 7, scope: !11664)
!11674 = !DILocation(line: 3096, column: 19, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11665, file: !10944, line: 3093, column: 5)
!11676 = !DILocation(line: 3096, column: 27, scope: !11675)
!11677 = !DILocation(line: 3097, column: 10, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11675, file: !10944, line: 3097, column: 10)
!11679 = !DILocation(line: 0, scope: !11678)
!11680 = !DILocation(line: 3107, column: 21, scope: !11675)
!11681 = !DILocation(line: 3107, column: 49, scope: !11675)
!11682 = !DILocation(line: 3109, column: 28, scope: !11675)
!11683 = !DILocation(line: 3110, column: 7, scope: !11675)
!11684 = !DILocation(line: 0, scope: !11665)
!11685 = !DILocation(line: 3118, column: 3, scope: !11653)
!11686 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10944, file: !10944, line: 3143, type: !11582, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11687)
!11687 = !{!11688}
!11688 = !DILocalVariable(name: "tickstart", scope: !11686, file: !10944, line: 3145, type: !40)
!11689 = !DILocation(line: 3148, column: 15, scope: !11686)
!11690 = !DILocation(line: 0, scope: !11686)
!11691 = !DILocation(line: 3151, column: 3, scope: !11686)
!11692 = !DILocation(line: 3154, column: 3, scope: !11686)
!11693 = !DILocation(line: 3154, column: 10, scope: !11686)
!11694 = !DILocation(line: 3154, column: 43, scope: !11686)
!11695 = !DILocation(line: 3156, column: 10, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !10944, line: 3156, column: 9)
!11697 = distinct !DILexicalBlock(scope: !11686, file: !10944, line: 3155, column: 3)
!11698 = !DILocation(line: 3156, column: 24, scope: !11696)
!11699 = !DILocation(line: 3156, column: 37, scope: !11696)
!11700 = !DILocation(line: 3156, column: 9, scope: !11697)
!11701 = distinct !{!11701, !11692, !11702}
!11702 = !DILocation(line: 3160, column: 3, scope: !11686)
!11703 = !DILocation(line: 3163, column: 3, scope: !11686)
!11704 = !DILocation(line: 3166, column: 15, scope: !11686)
!11705 = !DILocation(line: 3169, column: 3, scope: !11686)
!11706 = !DILocation(line: 3172, column: 3, scope: !11686)
!11707 = !DILocation(line: 3172, column: 10, scope: !11686)
!11708 = !DILocation(line: 3172, column: 44, scope: !11686)
!11709 = !DILocation(line: 3174, column: 24, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !10944, line: 3174, column: 9)
!11711 = distinct !DILexicalBlock(scope: !11686, file: !10944, line: 3173, column: 3)
!11712 = !DILocation(line: 3174, column: 37, scope: !11710)
!11713 = !DILocation(line: 3174, column: 9, scope: !11711)
!11714 = distinct !{!11714, !11706, !11715}
!11715 = !DILocation(line: 3178, column: 3, scope: !11686)
!11716 = !DILocation(line: 3184, column: 3, scope: !11686)
!11717 = !DILocation(line: 3187, column: 3, scope: !11686)
!11718 = !DILocation(line: 3187, column: 10, scope: !11686)
!11719 = !DILocation(line: 3187, column: 43, scope: !11686)
!11720 = !DILocation(line: 3189, column: 24, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !10944, line: 3189, column: 9)
!11722 = distinct !DILexicalBlock(scope: !11686, file: !10944, line: 3188, column: 3)
!11723 = !DILocation(line: 3189, column: 37, scope: !11721)
!11724 = !DILocation(line: 3189, column: 9, scope: !11722)
!11725 = distinct !{!11725, !11717, !11726}
!11726 = !DILocation(line: 3193, column: 3, scope: !11686)
!11727 = !DILocation(line: 3199, column: 3, scope: !11686)
!11728 = !DILocation(line: 3202, column: 3, scope: !11686)
!11729 = !DILocation(line: 3202, column: 10, scope: !11686)
!11730 = !DILocation(line: 3202, column: 43, scope: !11686)
!11731 = !DILocation(line: 3204, column: 24, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !10944, line: 3204, column: 9)
!11733 = distinct !DILexicalBlock(scope: !11686, file: !10944, line: 3203, column: 3)
!11734 = !DILocation(line: 3204, column: 37, scope: !11732)
!11735 = !DILocation(line: 3204, column: 9, scope: !11733)
!11736 = distinct !{!11736, !11728, !11737}
!11737 = !DILocation(line: 3208, column: 3, scope: !11686)
!11738 = !DILocation(line: 3215, column: 3, scope: !11686)
!11739 = !DILocation(line: 3218, column: 3, scope: !11686)
!11740 = !DILocation(line: 3218, column: 10, scope: !11686)
!11741 = !DILocation(line: 3218, column: 46, scope: !11686)
!11742 = !DILocation(line: 3220, column: 24, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !10944, line: 3220, column: 9)
!11744 = distinct !DILexicalBlock(scope: !11686, file: !10944, line: 3219, column: 3)
!11745 = !DILocation(line: 3220, column: 37, scope: !11743)
!11746 = !DILocation(line: 3220, column: 9, scope: !11744)
!11747 = distinct !{!11747, !11739, !11748}
!11748 = !DILocation(line: 3224, column: 3, scope: !11686)
!11749 = !DILocation(line: 3232, column: 3, scope: !11686)
!11750 = !DILocation(line: 3235, column: 3, scope: !11686)
!11751 = !DILocation(line: 3235, column: 10, scope: !11686)
!11752 = !DILocation(line: 3235, column: 46, scope: !11686)
!11753 = !DILocation(line: 3237, column: 10, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !10944, line: 3237, column: 9)
!11755 = distinct !DILexicalBlock(scope: !11686, file: !10944, line: 3236, column: 3)
!11756 = !DILocation(line: 3237, column: 24, scope: !11754)
!11757 = !DILocation(line: 3237, column: 37, scope: !11754)
!11758 = !DILocation(line: 3237, column: 9, scope: !11755)
!11759 = distinct !{!11759, !11750, !11760}
!11760 = !DILocation(line: 3241, column: 3, scope: !11686)
!11761 = !DILocation(line: 3247, column: 16, scope: !11686)
!11762 = !DILocation(line: 3257, column: 19, scope: !11686)
!11763 = !DILocation(line: 3270, column: 19, scope: !11686)
!11764 = !DILocation(line: 3274, column: 3, scope: !11686)
!11765 = !DILocation(line: 3277, column: 3, scope: !11686)
!11766 = !DILocation(line: 3281, column: 3, scope: !11686)
!11767 = !DILocation(line: 3285, column: 3, scope: !11686)
!11768 = !DILocation(line: 3288, column: 3, scope: !11686)
!11769 = !DILocation(line: 3292, column: 3, scope: !11686)
!11770 = !DILocation(line: 3296, column: 3, scope: !11686)
!11771 = !DILocation(line: 3299, column: 3, scope: !11686)
!11772 = !DILocation(line: 3302, column: 19, scope: !11686)
!11773 = !DILocation(line: 3305, column: 19, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11686, file: !10944, line: 3305, column: 6)
!11775 = !DILocation(line: 3305, column: 6, scope: !11774)
!11776 = !DILocation(line: 3305, column: 31, scope: !11774)
!11777 = !DILocation(line: 0, scope: !11774)
!11778 = !DILocation(line: 3313, column: 1, scope: !11686)
!11779 = !DISubprogram(name: "HAL_InitTick", scope: !11319, file: !11319, line: 223, type: !11780, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!10947, !40}
!11782 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10944, file: !10944, line: 3333, type: !11783, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !11807)
!11783 = !DISubroutineType(types: !11784)
!11784 = !{!10947, !11785}
!11785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11786, size: 32)
!11786 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11787, line: 70, baseType: !11788)
!11787 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11787, line: 49, size: 416, elements: !11789)
!11789 = !{!11790, !11791, !11792, !11793, !11794, !11795, !11796}
!11790 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11788, file: !11787, line: 51, baseType: !40, size: 32)
!11791 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11788, file: !11787, line: 54, baseType: !40, size: 32, offset: 32)
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11788, file: !11787, line: 57, baseType: !40, size: 32, offset: 64)
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11788, file: !11787, line: 60, baseType: !40, size: 32, offset: 96)
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11788, file: !11787, line: 63, baseType: !40, size: 32, offset: 128)
!11795 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11788, file: !11787, line: 66, baseType: !40, size: 32, offset: 160)
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11788, file: !11787, line: 69, baseType: !11797, size: 224, offset: 192)
!11797 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10950, line: 73, baseType: !11798)
!11798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10950, line: 45, size: 224, elements: !11799)
!11799 = !{!11800, !11801, !11802, !11803, !11804, !11805, !11806}
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11798, file: !10950, line: 47, baseType: !40, size: 32)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11798, file: !10950, line: 50, baseType: !40, size: 32, offset: 32)
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11798, file: !10950, line: 53, baseType: !40, size: 32, offset: 64)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11798, file: !10950, line: 56, baseType: !40, size: 32, offset: 96)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11798, file: !10950, line: 60, baseType: !40, size: 32, offset: 128)
!11805 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11798, file: !10950, line: 63, baseType: !40, size: 32, offset: 160)
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11798, file: !10950, line: 68, baseType: !40, size: 32, offset: 192)
!11807 = !{!11808, !11809, !11810, !11811, !11815}
!11808 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11782, file: !10944, line: 3333, type: !11785)
!11809 = !DILocalVariable(name: "tickstart", scope: !11782, file: !10944, line: 3335, type: !40)
!11810 = !DILocalVariable(name: "pll_config", scope: !11782, file: !10944, line: 3335, type: !40)
!11811 = !DILocalVariable(name: "pwrclkchanged", scope: !11812, file: !10944, line: 3517, type: !11814)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !10944, line: 3516, column: 3)
!11813 = distinct !DILexicalBlock(scope: !11782, file: !10944, line: 3515, column: 6)
!11814 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !968, line: 188, baseType: !3280)
!11815 = !DILocalVariable(name: "tmpreg", scope: !11816, file: !10944, line: 3526, type: !296)
!11816 = distinct !DILexicalBlock(scope: !11817, file: !10944, line: 3526, column: 7)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !10944, line: 3525, column: 5)
!11818 = distinct !DILexicalBlock(scope: !11812, file: !10944, line: 3524, column: 8)
!11819 = !DILocation(line: 0, scope: !11782)
!11820 = !DILocation(line: 3338, column: 24, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11782, file: !10944, line: 3338, column: 6)
!11822 = !DILocation(line: 3338, column: 6, scope: !11782)
!11823 = !DILocation(line: 3346, column: 27, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11782, file: !10944, line: 3346, column: 6)
!11825 = !DILocation(line: 3346, column: 43, scope: !11824)
!11826 = !DILocation(line: 3346, column: 69, scope: !11824)
!11827 = !DILocation(line: 3346, column: 6, scope: !11782)
!11828 = !DILocation(line: 3352, column: 9, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !10944, line: 3352, column: 8)
!11830 = distinct !DILexicalBlock(scope: !11824, file: !10944, line: 3347, column: 3)
!11831 = !DILocation(line: 3352, column: 39, scope: !11829)
!11832 = !DILocation(line: 3352, column: 128, scope: !11829)
!11833 = !DILocation(line: 3353, column: 9, scope: !11829)
!11834 = !DILocation(line: 3353, column: 39, scope: !11829)
!11835 = !DILocation(line: 3353, column: 60, scope: !11829)
!11836 = !DILocation(line: 3353, column: 70, scope: !11829)
!11837 = !DILocation(line: 3353, column: 78, scope: !11829)
!11838 = !DILocation(line: 3353, column: 100, scope: !11829)
!11839 = !DILocation(line: 3353, column: 128, scope: !11829)
!11840 = !DILocation(line: 3354, column: 9, scope: !11829)
!11841 = !DILocation(line: 3354, column: 39, scope: !11829)
!11842 = !DILocation(line: 3354, column: 61, scope: !11829)
!11843 = !DILocation(line: 3354, column: 71, scope: !11829)
!11844 = !DILocation(line: 3354, column: 79, scope: !11829)
!11845 = !DILocation(line: 3354, column: 101, scope: !11829)
!11846 = !DILocation(line: 3352, column: 8, scope: !11830)
!11847 = !DILocation(line: 3360, column: 11, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !10944, line: 3360, column: 10)
!11849 = distinct !DILexicalBlock(scope: !11829, file: !10944, line: 3359, column: 5)
!11850 = !DILocation(line: 3360, column: 57, scope: !11848)
!11851 = !DILocation(line: 3360, column: 80, scope: !11848)
!11852 = !DILocation(line: 3360, column: 89, scope: !11848)
!11853 = !DILocation(line: 3360, column: 10, scope: !11849)
!11854 = !DILocation(line: 3368, column: 7, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11856, file: !10944, line: 3368, column: 7)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !10944, line: 3368, column: 7)
!11857 = distinct !DILexicalBlock(scope: !11829, file: !10944, line: 3366, column: 5)
!11858 = !DILocation(line: 3368, column: 7, scope: !11856)
!11859 = !DILocation(line: 3368, column: 7, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11855, file: !10944, line: 3368, column: 7)
!11861 = !DILocation(line: 3368, column: 7, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !10944, line: 3368, column: 7)
!11863 = distinct !DILexicalBlock(scope: !11855, file: !10944, line: 3368, column: 7)
!11864 = !DILocation(line: 3368, column: 7, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11863, file: !10944, line: 3368, column: 7)
!11866 = !DILocation(line: 0, scope: !11855)
!11867 = !DILocation(line: 3371, column: 30, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11857, file: !10944, line: 3371, column: 10)
!11869 = !DILocation(line: 3371, column: 40, scope: !11868)
!11870 = !DILocation(line: 0, scope: !11868)
!11871 = !DILocation(line: 3371, column: 10, scope: !11857)
!11872 = !DILocation(line: 3377, column: 15, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11868, file: !10944, line: 3372, column: 7)
!11874 = !DILocation(line: 3377, column: 51, scope: !11873)
!11875 = !DILocation(line: 3377, column: 9, scope: !11873)
!11876 = !DILocation(line: 3379, column: 15, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !10944, line: 3379, column: 14)
!11878 = distinct !DILexicalBlock(scope: !11873, file: !10944, line: 3378, column: 9)
!11879 = !DILocation(line: 3379, column: 29, scope: !11877)
!11880 = !DILocation(line: 3379, column: 43, scope: !11877)
!11881 = !DILocation(line: 3379, column: 14, scope: !11878)
!11882 = distinct !{!11882, !11875, !11883}
!11883 = !DILocation(line: 3383, column: 9, scope: !11873)
!11884 = !DILocation(line: 3391, column: 15, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11868, file: !10944, line: 3386, column: 7)
!11886 = !DILocation(line: 3391, column: 9, scope: !11885)
!11887 = !DILocation(line: 3393, column: 15, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !10944, line: 3393, column: 14)
!11889 = distinct !DILexicalBlock(scope: !11885, file: !10944, line: 3392, column: 9)
!11890 = !DILocation(line: 3393, column: 29, scope: !11888)
!11891 = !DILocation(line: 3393, column: 43, scope: !11888)
!11892 = !DILocation(line: 3393, column: 14, scope: !11889)
!11893 = distinct !{!11893, !11886, !11894}
!11894 = !DILocation(line: 3397, column: 9, scope: !11885)
!11895 = !DILocation(line: 3402, column: 27, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11782, file: !10944, line: 3402, column: 6)
!11897 = !DILocation(line: 3402, column: 43, scope: !11896)
!11898 = !DILocation(line: 3402, column: 69, scope: !11896)
!11899 = !DILocation(line: 3402, column: 6, scope: !11782)
!11900 = !DILocation(line: 3410, column: 9, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !10944, line: 3410, column: 8)
!11902 = distinct !DILexicalBlock(scope: !11896, file: !10944, line: 3403, column: 3)
!11903 = !DILocation(line: 3410, column: 39, scope: !11901)
!11904 = !DILocation(line: 3410, column: 128, scope: !11901)
!11905 = !DILocation(line: 3411, column: 9, scope: !11901)
!11906 = !DILocation(line: 3411, column: 39, scope: !11901)
!11907 = !DILocation(line: 3411, column: 60, scope: !11901)
!11908 = !DILocation(line: 3411, column: 70, scope: !11901)
!11909 = !DILocation(line: 3411, column: 78, scope: !11901)
!11910 = !DILocation(line: 3411, column: 100, scope: !11901)
!11911 = !DILocation(line: 3411, column: 128, scope: !11901)
!11912 = !DILocation(line: 3412, column: 9, scope: !11901)
!11913 = !DILocation(line: 3412, column: 39, scope: !11901)
!11914 = !DILocation(line: 3412, column: 61, scope: !11901)
!11915 = !DILocation(line: 3412, column: 71, scope: !11901)
!11916 = !DILocation(line: 3412, column: 79, scope: !11901)
!11917 = !DILocation(line: 3412, column: 101, scope: !11901)
!11918 = !DILocation(line: 3410, column: 8, scope: !11902)
!11919 = !DILocation(line: 3419, column: 11, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11921, file: !10944, line: 3419, column: 10)
!11921 = distinct !DILexicalBlock(scope: !11901, file: !10944, line: 3417, column: 5)
!11922 = !DILocation(line: 3419, column: 57, scope: !11920)
!11923 = !DILocation(line: 3419, column: 80, scope: !11920)
!11924 = !DILocation(line: 3419, column: 89, scope: !11920)
!11925 = !DILocation(line: 3419, column: 10, scope: !11921)
!11926 = !DILocation(line: 3433, column: 30, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !10944, line: 3433, column: 10)
!11928 = distinct !DILexicalBlock(scope: !11901, file: !10944, line: 3431, column: 5)
!11929 = !DILocation(line: 3433, column: 39, scope: !11927)
!11930 = !DILocation(line: 3433, column: 10, scope: !11928)
!11931 = !DILocation(line: 3436, column: 9, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11927, file: !10944, line: 3434, column: 7)
!11933 = !DILocation(line: 3439, column: 21, scope: !11932)
!11934 = !DILocation(line: 3442, column: 9, scope: !11932)
!11935 = !DILocation(line: 3442, column: 15, scope: !11932)
!11936 = !DILocation(line: 3442, column: 51, scope: !11932)
!11937 = !DILocation(line: 3444, column: 15, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11939, file: !10944, line: 3444, column: 14)
!11939 = distinct !DILexicalBlock(scope: !11932, file: !10944, line: 3443, column: 9)
!11940 = !DILocation(line: 3444, column: 29, scope: !11938)
!11941 = !DILocation(line: 3444, column: 43, scope: !11938)
!11942 = !DILocation(line: 3444, column: 14, scope: !11939)
!11943 = distinct !{!11943, !11934, !11944}
!11944 = !DILocation(line: 3448, column: 9, scope: !11932)
!11945 = !DILocation(line: 3456, column: 9, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11927, file: !10944, line: 3454, column: 7)
!11947 = !DILocation(line: 3459, column: 21, scope: !11946)
!11948 = !DILocation(line: 3462, column: 9, scope: !11946)
!11949 = !DILocation(line: 3462, column: 15, scope: !11946)
!11950 = !DILocation(line: 3464, column: 15, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !10944, line: 3464, column: 14)
!11952 = distinct !DILexicalBlock(scope: !11946, file: !10944, line: 3463, column: 9)
!11953 = !DILocation(line: 3464, column: 29, scope: !11951)
!11954 = !DILocation(line: 3464, column: 43, scope: !11951)
!11955 = !DILocation(line: 3464, column: 14, scope: !11952)
!11956 = distinct !{!11956, !11948, !11957}
!11957 = !DILocation(line: 3468, column: 9, scope: !11946)
!11958 = !DILocation(line: 0, scope: !11901)
!11959 = !DILocation(line: 3473, column: 27, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11782, file: !10944, line: 3473, column: 6)
!11961 = !DILocation(line: 3473, column: 43, scope: !11960)
!11962 = !DILocation(line: 3473, column: 69, scope: !11960)
!11963 = !DILocation(line: 3473, column: 6, scope: !11782)
!11964 = !DILocation(line: 3479, column: 28, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !10944, line: 3479, column: 8)
!11966 = distinct !DILexicalBlock(scope: !11960, file: !10944, line: 3474, column: 3)
!11967 = !DILocation(line: 3479, column: 37, scope: !11965)
!11968 = !DILocation(line: 3479, column: 8, scope: !11966)
!11969 = !DILocation(line: 3482, column: 7, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11965, file: !10944, line: 3480, column: 5)
!11971 = !DILocation(line: 3485, column: 19, scope: !11970)
!11972 = !DILocation(line: 3488, column: 7, scope: !11970)
!11973 = !DILocation(line: 3488, column: 13, scope: !11970)
!11974 = !DILocation(line: 3488, column: 49, scope: !11970)
!11975 = !DILocation(line: 3490, column: 13, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !10944, line: 3490, column: 12)
!11977 = distinct !DILexicalBlock(scope: !11970, file: !10944, line: 3489, column: 7)
!11978 = !DILocation(line: 3490, column: 27, scope: !11976)
!11979 = !DILocation(line: 3490, column: 41, scope: !11976)
!11980 = !DILocation(line: 3490, column: 12, scope: !11977)
!11981 = distinct !{!11981, !11972, !11982}
!11982 = !DILocation(line: 3494, column: 7, scope: !11970)
!11983 = !DILocation(line: 3499, column: 7, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11965, file: !10944, line: 3497, column: 5)
!11985 = !DILocation(line: 3502, column: 19, scope: !11984)
!11986 = !DILocation(line: 3505, column: 7, scope: !11984)
!11987 = !DILocation(line: 3505, column: 13, scope: !11984)
!11988 = !DILocation(line: 3507, column: 13, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11990, file: !10944, line: 3507, column: 12)
!11990 = distinct !DILexicalBlock(scope: !11984, file: !10944, line: 3506, column: 7)
!11991 = !DILocation(line: 3507, column: 27, scope: !11989)
!11992 = !DILocation(line: 3507, column: 41, scope: !11989)
!11993 = !DILocation(line: 3507, column: 12, scope: !11990)
!11994 = distinct !{!11994, !11986, !11995}
!11995 = !DILocation(line: 3511, column: 7, scope: !11984)
!11996 = !DILocation(line: 3515, column: 27, scope: !11813)
!11997 = !DILocation(line: 3515, column: 43, scope: !11813)
!11998 = !DILocation(line: 3515, column: 69, scope: !11813)
!11999 = !DILocation(line: 3515, column: 6, scope: !11782)
!12000 = !DILocation(line: 0, scope: !11812)
!12001 = !DILocation(line: 3524, column: 8, scope: !11818)
!12002 = !DILocation(line: 3524, column: 8, scope: !11812)
!12003 = !DILocation(line: 3526, column: 7, scope: !11816)
!12004 = !DILocation(line: 3526, column: 7, scope: !11817)
!12005 = !DILocation(line: 3528, column: 5, scope: !11817)
!12006 = !DILocation(line: 3530, column: 8, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11812, file: !10944, line: 3530, column: 8)
!12008 = !DILocation(line: 3530, column: 8, scope: !11812)
!12009 = !DILocation(line: 3533, column: 7, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12007, file: !10944, line: 3531, column: 5)
!12011 = !DILocation(line: 3536, column: 19, scope: !12010)
!12012 = !DILocation(line: 3538, column: 7, scope: !12010)
!12013 = !DILocation(line: 3538, column: 13, scope: !12010)
!12014 = !DILocation(line: 3540, column: 13, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !10944, line: 3540, column: 12)
!12016 = distinct !DILexicalBlock(scope: !12010, file: !10944, line: 3539, column: 7)
!12017 = !DILocation(line: 3540, column: 27, scope: !12015)
!12018 = !DILocation(line: 3540, column: 40, scope: !12015)
!12019 = !DILocation(line: 3540, column: 12, scope: !12016)
!12020 = distinct !{!12020, !12012, !12021}
!12021 = !DILocation(line: 3544, column: 7, scope: !12010)
!12022 = !DILocation(line: 3548, column: 5, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12024, file: !10944, line: 3548, column: 5)
!12024 = distinct !DILexicalBlock(scope: !11812, file: !10944, line: 3548, column: 5)
!12025 = !DILocation(line: 3548, column: 5, scope: !12024)
!12026 = !DILocation(line: 3548, column: 5, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12023, file: !10944, line: 3548, column: 5)
!12028 = !DILocation(line: 3548, column: 5, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !10944, line: 3548, column: 5)
!12030 = distinct !DILexicalBlock(scope: !12023, file: !10944, line: 3548, column: 5)
!12031 = !DILocation(line: 3548, column: 5, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12030, file: !10944, line: 3548, column: 5)
!12033 = !DILocation(line: 0, scope: !12023)
!12034 = !DILocation(line: 3550, column: 28, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11812, file: !10944, line: 3550, column: 8)
!12036 = !DILocation(line: 3550, column: 38, scope: !12035)
!12037 = !DILocation(line: 0, scope: !12035)
!12038 = !DILocation(line: 3550, column: 8, scope: !11812)
!12039 = !DILocation(line: 3556, column: 13, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12035, file: !10944, line: 3551, column: 5)
!12041 = !DILocation(line: 3556, column: 49, scope: !12040)
!12042 = !DILocation(line: 3556, column: 7, scope: !12040)
!12043 = !DILocation(line: 3558, column: 13, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !10944, line: 3558, column: 12)
!12045 = distinct !DILexicalBlock(scope: !12040, file: !10944, line: 3557, column: 7)
!12046 = !DILocation(line: 3558, column: 27, scope: !12044)
!12047 = !DILocation(line: 3558, column: 41, scope: !12044)
!12048 = !DILocation(line: 3558, column: 12, scope: !12045)
!12049 = distinct !{!12049, !12042, !12050}
!12050 = !DILocation(line: 3562, column: 7, scope: !12040)
!12051 = !DILocation(line: 3570, column: 13, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12035, file: !10944, line: 3565, column: 5)
!12053 = !DILocation(line: 3570, column: 7, scope: !12052)
!12054 = !DILocation(line: 3572, column: 13, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !10944, line: 3572, column: 12)
!12056 = distinct !DILexicalBlock(scope: !12052, file: !10944, line: 3571, column: 7)
!12057 = !DILocation(line: 3572, column: 27, scope: !12055)
!12058 = !DILocation(line: 3572, column: 41, scope: !12055)
!12059 = !DILocation(line: 3572, column: 12, scope: !12056)
!12060 = distinct !{!12060, !12053, !12061}
!12061 = !DILocation(line: 3576, column: 7, scope: !12052)
!12062 = !DILocation(line: 3580, column: 8, scope: !11812)
!12063 = !DILocation(line: 3582, column: 7, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !10944, line: 3581, column: 5)
!12065 = distinct !DILexicalBlock(scope: !11812, file: !10944, line: 3580, column: 8)
!12066 = !DILocation(line: 3583, column: 5, scope: !12064)
!12067 = !DILocation(line: 3588, column: 31, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !11782, file: !10944, line: 3588, column: 7)
!12069 = !DILocation(line: 3588, column: 41, scope: !12068)
!12070 = !DILocation(line: 3588, column: 7, scope: !11782)
!12071 = !DILocation(line: 3591, column: 8, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12073, file: !10944, line: 3591, column: 8)
!12073 = distinct !DILexicalBlock(scope: !12068, file: !10944, line: 3589, column: 3)
!12074 = !DILocation(line: 3591, column: 38, scope: !12072)
!12075 = !DILocation(line: 3591, column: 8, scope: !12073)
!12076 = !DILocation(line: 3593, column: 44, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !10944, line: 3593, column: 10)
!12078 = distinct !DILexicalBlock(scope: !12072, file: !10944, line: 3592, column: 5)
!12079 = !DILocation(line: 0, scope: !12077)
!12080 = !DILocation(line: 3593, column: 10, scope: !12078)
!12081 = !DILocation(line: 3610, column: 15, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12077, file: !10944, line: 3594, column: 7)
!12083 = !DILocation(line: 3610, column: 9, scope: !12082)
!12084 = !DILocation(line: 3612, column: 15, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12086, file: !10944, line: 3612, column: 14)
!12086 = distinct !DILexicalBlock(scope: !12082, file: !10944, line: 3611, column: 9)
!12087 = !DILocation(line: 3612, column: 29, scope: !12085)
!12088 = !DILocation(line: 3612, column: 43, scope: !12085)
!12089 = !DILocation(line: 3612, column: 14, scope: !12086)
!12090 = distinct !{!12090, !12083, !12091}
!12091 = !DILocation(line: 3616, column: 9, scope: !12082)
!12092 = !DILocation(line: 3619, column: 9, scope: !12082)
!12093 = !DILocation(line: 3626, column: 9, scope: !12082)
!12094 = !DILocation(line: 3629, column: 21, scope: !12082)
!12095 = !DILocation(line: 3632, column: 9, scope: !12082)
!12096 = !DILocation(line: 3632, column: 15, scope: !12082)
!12097 = !DILocation(line: 3632, column: 51, scope: !12082)
!12098 = !DILocation(line: 3634, column: 15, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !10944, line: 3634, column: 14)
!12100 = distinct !DILexicalBlock(scope: !12082, file: !10944, line: 3633, column: 9)
!12101 = !DILocation(line: 3634, column: 29, scope: !12099)
!12102 = !DILocation(line: 3634, column: 43, scope: !12099)
!12103 = !DILocation(line: 3634, column: 14, scope: !12100)
!12104 = distinct !{!12104, !12095, !12105}
!12105 = !DILocation(line: 3638, column: 9, scope: !12082)
!12106 = !DILocation(line: 3649, column: 15, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12077, file: !10944, line: 3641, column: 7)
!12108 = !DILocation(line: 3649, column: 9, scope: !12107)
!12109 = !DILocation(line: 3651, column: 15, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !10944, line: 3651, column: 14)
!12111 = distinct !DILexicalBlock(scope: !12107, file: !10944, line: 3650, column: 9)
!12112 = !DILocation(line: 3651, column: 29, scope: !12110)
!12113 = !DILocation(line: 3651, column: 43, scope: !12110)
!12114 = !DILocation(line: 3651, column: 14, scope: !12111)
!12115 = distinct !{!12115, !12108, !12116}
!12116 = !DILocation(line: 3655, column: 9, scope: !12107)
!12117 = !DILocation(line: 3661, column: 44, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !10944, line: 3661, column: 10)
!12119 = distinct !DILexicalBlock(scope: !12072, file: !10944, line: 3659, column: 5)
!12120 = !DILocation(line: 3661, column: 10, scope: !12119)
!12121 = !DILocation(line: 3668, column: 27, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12118, file: !10944, line: 3666, column: 7)
!12123 = !DILocation(line: 3671, column: 14, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12122, file: !10944, line: 3670, column: 13)
!12125 = !DILocation(line: 3671, column: 81, scope: !12124)
!12126 = !DILocation(line: 3671, column: 55, scope: !12124)
!12127 = !DILocation(line: 3671, column: 92, scope: !12124)
!12128 = !DILocation(line: 3672, column: 14, scope: !12124)
!12129 = !DILocation(line: 3672, column: 80, scope: !12124)
!12130 = !DILocation(line: 3672, column: 53, scope: !12124)
!12131 = !DILocation(line: 3672, column: 111, scope: !12124)
!12132 = !DILocation(line: 3673, column: 14, scope: !12124)
!12133 = !DILocation(line: 3673, column: 80, scope: !12124)
!12134 = !DILocation(line: 3673, column: 86, scope: !12124)
!12135 = !DILocation(line: 3673, column: 53, scope: !12124)
!12136 = !DILocation(line: 3673, column: 111, scope: !12124)
!12137 = !DILocation(line: 3674, column: 14, scope: !12124)
!12138 = !DILocation(line: 3674, column: 82, scope: !12124)
!12139 = !DILocation(line: 3674, column: 101, scope: !12124)
!12140 = !DILocation(line: 3674, column: 53, scope: !12124)
!12141 = !DILocation(line: 3674, column: 126, scope: !12124)
!12142 = !DILocation(line: 3675, column: 14, scope: !12124)
!12143 = !DILocation(line: 3675, column: 80, scope: !12124)
!12144 = !DILocation(line: 3675, column: 85, scope: !12124)
!12145 = !DILocation(line: 3675, column: 53, scope: !12124)
!12146 = !DILocation(line: 3675, column: 111, scope: !12124)
!12147 = !DILocation(line: 3676, column: 14, scope: !12124)
!12148 = !DILocation(line: 3676, column: 80, scope: !12124)
!12149 = !DILocation(line: 3676, column: 85, scope: !12124)
!12150 = !DILocation(line: 3676, column: 53, scope: !12124)
!12151 = !DILocation(line: 3670, column: 13, scope: !12122)
!12152 = !DILocation(line: 3691, column: 3, scope: !11782)
!12153 = !DILocation(line: 3692, column: 1, scope: !11782)
!12154 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10944, file: !10944, line: 3703, type: !12155, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3270, retainedNodes: !12157)
!12155 = !DISubroutineType(types: !12156)
!12156 = !{null, !11785}
!12157 = !{!12158}
!12158 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12154, file: !10944, line: 3703, type: !11785)
!12159 = !DILocation(line: 0, scope: !12154)
!12160 = !DILocation(line: 3706, column: 22, scope: !12154)
!12161 = !DILocation(line: 3706, column: 37, scope: !12154)
!12162 = !DILocation(line: 3709, column: 12, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12154, file: !10944, line: 3709, column: 6)
!12164 = !DILocation(line: 3709, column: 15, scope: !12163)
!12165 = !DILocation(line: 3709, column: 31, scope: !12163)
!12166 = !DILocation(line: 3709, column: 6, scope: !12154)
!12167 = !DILocation(line: 3711, column: 24, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12163, file: !10944, line: 3710, column: 3)
!12169 = !DILocation(line: 3711, column: 33, scope: !12168)
!12170 = !DILocation(line: 3712, column: 3, scope: !12168)
!12171 = !DILocation(line: 3713, column: 17, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12163, file: !10944, line: 3713, column: 11)
!12173 = !DILocation(line: 3713, column: 20, scope: !12172)
!12174 = !DILocation(line: 3713, column: 35, scope: !12172)
!12175 = !DILocation(line: 0, scope: !12172)
!12176 = !DILocation(line: 3713, column: 11, scope: !12163)
!12177 = !DILocation(line: 3715, column: 33, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12172, file: !10944, line: 3714, column: 3)
!12179 = !DILocation(line: 3716, column: 3, scope: !12178)
!12180 = !DILocation(line: 3719, column: 33, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12172, file: !10944, line: 3718, column: 3)
!12182 = !DILocation(line: 3723, column: 12, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12154, file: !10944, line: 3723, column: 6)
!12184 = !DILocation(line: 3723, column: 15, scope: !12183)
!12185 = !DILocation(line: 3729, column: 24, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12183, file: !10944, line: 3728, column: 3)
!12187 = !DILocation(line: 3729, column: 33, scope: !12186)
!12188 = !DILocation(line: 3732, column: 61, scope: !12154)
!12189 = !DILocation(line: 3732, column: 81, scope: !12154)
!12190 = !DILocation(line: 3732, column: 22, scope: !12154)
!12191 = !DILocation(line: 3732, column: 42, scope: !12154)
!12192 = !DILocation(line: 3735, column: 12, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12154, file: !10944, line: 3735, column: 6)
!12194 = !DILocation(line: 3735, column: 17, scope: !12193)
!12195 = !DILocation(line: 3735, column: 35, scope: !12193)
!12196 = !DILocation(line: 3735, column: 6, scope: !12154)
!12197 = !DILocation(line: 3737, column: 24, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12193, file: !10944, line: 3736, column: 3)
!12199 = !DILocation(line: 3737, column: 33, scope: !12198)
!12200 = !DILocation(line: 3738, column: 3, scope: !12198)
!12201 = !DILocation(line: 3739, column: 17, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12193, file: !10944, line: 3739, column: 11)
!12203 = !DILocation(line: 3739, column: 22, scope: !12202)
!12204 = !DILocation(line: 3739, column: 39, scope: !12202)
!12205 = !DILocation(line: 0, scope: !12202)
!12206 = !DILocation(line: 3739, column: 11, scope: !12193)
!12207 = !DILocation(line: 3741, column: 33, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12202, file: !10944, line: 3740, column: 3)
!12209 = !DILocation(line: 3742, column: 3, scope: !12208)
!12210 = !DILocation(line: 3745, column: 33, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12202, file: !10944, line: 3744, column: 3)
!12212 = !DILocation(line: 3749, column: 12, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12154, file: !10944, line: 3749, column: 6)
!12214 = !DILocation(line: 3749, column: 16, scope: !12213)
!12215 = !DILocation(line: 3755, column: 24, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12213, file: !10944, line: 3754, column: 3)
!12217 = !DILocation(line: 3755, column: 33, scope: !12216)
!12218 = !DILocation(line: 3759, column: 12, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12154, file: !10944, line: 3759, column: 6)
!12220 = !DILocation(line: 3759, column: 15, scope: !12219)
!12221 = !DILocation(line: 3759, column: 30, scope: !12219)
!12222 = !DILocation(line: 3759, column: 6, scope: !12154)
!12223 = !DILocation(line: 3765, column: 28, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12219, file: !10944, line: 3764, column: 3)
!12225 = !DILocation(line: 3765, column: 37, scope: !12224)
!12226 = !DILocation(line: 3767, column: 54, scope: !12154)
!12227 = !DILocation(line: 3767, column: 62, scope: !12154)
!12228 = !DILocation(line: 3767, column: 26, scope: !12154)
!12229 = !DILocation(line: 3767, column: 36, scope: !12154)
!12230 = !DILocation(line: 3768, column: 49, scope: !12154)
!12231 = !DILocation(line: 3768, column: 57, scope: !12154)
!12232 = !DILocation(line: 3768, column: 26, scope: !12154)
!12233 = !DILocation(line: 3768, column: 31, scope: !12154)
!12234 = !DILocation(line: 3769, column: 50, scope: !12154)
!12235 = !DILocation(line: 3769, column: 78, scope: !12154)
!12236 = !DILocation(line: 3769, column: 26, scope: !12154)
!12237 = !DILocation(line: 3769, column: 31, scope: !12154)
!12238 = !DILocation(line: 3770, column: 52, scope: !12154)
!12239 = !DILocation(line: 3770, column: 102, scope: !12154)
!12240 = !DILocation(line: 3770, column: 109, scope: !12154)
!12241 = !DILocation(line: 3770, column: 26, scope: !12154)
!12242 = !DILocation(line: 3770, column: 31, scope: !12154)
!12243 = !DILocation(line: 3771, column: 50, scope: !12154)
!12244 = !DILocation(line: 3771, column: 78, scope: !12154)
!12245 = !DILocation(line: 3771, column: 26, scope: !12154)
!12246 = !DILocation(line: 3771, column: 31, scope: !12154)
!12247 = !DILocation(line: 3772, column: 50, scope: !12154)
!12248 = !DILocation(line: 3772, column: 78, scope: !12154)
!12249 = !DILocation(line: 3772, column: 26, scope: !12154)
!12250 = !DILocation(line: 3772, column: 31, scope: !12154)
!12251 = !DILocation(line: 3773, column: 1, scope: !12154)
!12252 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12253, file: !12253, line: 257, type: !6574, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12254)
!12253 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12254 = !{!12255}
!12255 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12252, file: !12253, line: 257, type: !40)
!12256 = !DILocation(line: 0, scope: !12252)
!12257 = !DILocation(line: 260, column: 3, scope: !12252)
!12258 = !DILocation(line: 261, column: 1, scope: !12252)
!12259 = distinct !DISubprogram(name: "LL_InitTick", scope: !12260, file: !12260, line: 260, type: !9374, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12261)
!12260 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12261 = !{!12262, !12263}
!12262 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12259, file: !12260, line: 260, type: !40)
!12263 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12259, file: !12260, line: 260, type: !40)
!12264 = !DILocation(line: 0, scope: !12259)
!12265 = !DILocation(line: 263, column: 46, scope: !12259)
!12266 = !DILocation(line: 263, column: 55, scope: !12259)
!12267 = !DILocation(line: 263, column: 18, scope: !12259)
!12268 = !DILocation(line: 264, column: 18, scope: !12259)
!12269 = !DILocation(line: 265, column: 18, scope: !12259)
!12270 = !DILocation(line: 267, column: 1, scope: !12259)
!12271 = distinct !DISubprogram(name: "LL_mDelay", scope: !12253, file: !12253, line: 273, type: !6574, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12272)
!12272 = !{!12273, !12274}
!12273 = !DILocalVariable(name: "Delay", arg: 1, scope: !12271, file: !12253, line: 273, type: !40)
!12274 = !DILocalVariable(name: "tmp", scope: !12271, file: !12253, line: 275, type: !296)
!12275 = !DILocation(line: 0, scope: !12271)
!12276 = !DILocation(line: 275, column: 3, scope: !12271)
!12277 = !DILocation(line: 275, column: 18, scope: !12271)
!12278 = !DILocation(line: 275, column: 33, scope: !12271)
!12279 = !DILocation(line: 277, column: 10, scope: !12271)
!12280 = !DILocation(line: 280, column: 12, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12271, file: !12253, line: 280, column: 6)
!12282 = !DILocation(line: 285, column: 3, scope: !12271)
!12283 = !DILocation(line: 287, column: 18, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !12253, line: 287, column: 8)
!12285 = distinct !DILexicalBlock(scope: !12271, file: !12253, line: 286, column: 3)
!12286 = !DILocation(line: 292, column: 1, scope: !12271)
!12287 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12253, file: !12253, line: 323, type: !6574, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12288)
!12288 = !{!12289}
!12289 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12287, file: !12253, line: 323, type: !40)
!12290 = !DILocation(line: 0, scope: !12287)
!12291 = !DILocation(line: 326, column: 19, scope: !12287)
!12292 = !DILocation(line: 327, column: 1, scope: !12287)
!12293 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12253, file: !12253, line: 338, type: !12294, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12297)
!12294 = !DISubroutineType(types: !12295)
!12295 = !{!12296, !40}
!12296 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !968, line: 201, baseType: !967)
!12297 = !{!12298, !12299, !12300, !12301, !12302}
!12298 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12293, file: !12253, line: 338, type: !40)
!12299 = !DILocalVariable(name: "timeout", scope: !12293, file: !12253, line: 340, type: !40)
!12300 = !DILocalVariable(name: "getlatency", scope: !12293, file: !12253, line: 341, type: !40)
!12301 = !DILocalVariable(name: "latency", scope: !12293, file: !12253, line: 342, type: !40)
!12302 = !DILocalVariable(name: "status", scope: !12293, file: !12253, line: 343, type: !12296)
!12303 = !DILocation(line: 0, scope: !12293)
!12304 = !DILocation(line: 347, column: 21, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12293, file: !12253, line: 347, column: 6)
!12306 = !DILocation(line: 347, column: 6, scope: !12293)
!12307 = !DILocation(line: 353, column: 8, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !12253, line: 353, column: 8)
!12309 = distinct !DILexicalBlock(scope: !12305, file: !12253, line: 352, column: 3)
!12310 = !DILocation(line: 353, column: 40, scope: !12308)
!12311 = !DILocation(line: 353, column: 8, scope: !12309)
!12312 = !DILocation(line: 356, column: 26, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12314, file: !12253, line: 356, column: 10)
!12314 = distinct !DILexicalBlock(scope: !12308, file: !12253, line: 354, column: 5)
!12315 = !DILocation(line: 356, column: 55, scope: !12313)
!12316 = !DILocation(line: 362, column: 55, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12314, file: !12253, line: 362, column: 10)
!12318 = !DILocation(line: 368, column: 55, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12314, file: !12253, line: 368, column: 10)
!12320 = !DILocation(line: 374, column: 26, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12314, file: !12253, line: 374, column: 10)
!12322 = !DILocation(line: 374, column: 55, scope: !12321)
!12323 = !DILocation(line: 380, column: 28, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12325, file: !12253, line: 380, column: 12)
!12325 = distinct !DILexicalBlock(scope: !12321, file: !12253, line: 379, column: 7)
!12326 = !DILocation(line: 380, column: 57, scope: !12324)
!12327 = !DILocation(line: 387, column: 8, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12309, file: !12253, line: 387, column: 8)
!12329 = !DILocation(line: 387, column: 40, scope: !12328)
!12330 = !DILocation(line: 387, column: 8, scope: !12309)
!12331 = !DILocation(line: 390, column: 26, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12333, file: !12253, line: 390, column: 10)
!12333 = distinct !DILexicalBlock(scope: !12328, file: !12253, line: 388, column: 5)
!12334 = !DILocation(line: 390, column: 55, scope: !12332)
!12335 = !DILocation(line: 396, column: 26, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12333, file: !12253, line: 396, column: 10)
!12337 = !DILocation(line: 396, column: 55, scope: !12336)
!12338 = !DILocation(line: 402, column: 26, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12333, file: !12253, line: 402, column: 10)
!12340 = !DILocation(line: 402, column: 55, scope: !12339)
!12341 = !DILocation(line: 407, column: 26, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12333, file: !12253, line: 407, column: 10)
!12343 = !DILocation(line: 407, column: 55, scope: !12342)
!12344 = !DILocation(line: 413, column: 28, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !12253, line: 413, column: 12)
!12346 = distinct !DILexicalBlock(scope: !12342, file: !12253, line: 412, column: 7)
!12347 = !DILocation(line: 413, column: 57, scope: !12345)
!12348 = !DILocation(line: 0, scope: !12309)
!12349 = !DILocation(line: 420, column: 8, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12309, file: !12253, line: 420, column: 8)
!12351 = !DILocation(line: 420, column: 40, scope: !12350)
!12352 = !DILocation(line: 420, column: 8, scope: !12309)
!12353 = !DILocation(line: 423, column: 26, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12355, file: !12253, line: 423, column: 10)
!12355 = distinct !DILexicalBlock(scope: !12350, file: !12253, line: 421, column: 5)
!12356 = !DILocation(line: 423, column: 55, scope: !12354)
!12357 = !DILocation(line: 429, column: 26, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12355, file: !12253, line: 429, column: 10)
!12359 = !DILocation(line: 429, column: 55, scope: !12358)
!12360 = !DILocation(line: 435, column: 28, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12362, file: !12253, line: 435, column: 12)
!12362 = distinct !DILexicalBlock(scope: !12358, file: !12253, line: 434, column: 7)
!12363 = !DILocation(line: 435, column: 57, scope: !12361)
!12364 = !DILocation(line: 444, column: 5, scope: !12309)
!12365 = !DILocation(line: 448, column: 5, scope: !12309)
!12366 = !DILocation(line: 451, column: 18, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12309, file: !12253, line: 449, column: 5)
!12368 = !DILocation(line: 452, column: 12, scope: !12367)
!12369 = !DILocation(line: 453, column: 26, scope: !12309)
!12370 = !DILocation(line: 453, column: 38, scope: !12309)
!12371 = !DILocation(line: 453, column: 5, scope: !12367)
!12372 = distinct !{!12372, !12365, !12373}
!12373 = !DILocation(line: 453, column: 54, scope: !12309)
!12374 = !DILocation(line: 0, scope: !12305)
!12375 = !DILocation(line: 464, column: 3, scope: !12293)
!12376 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12377, file: !12377, line: 519, type: !6564, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12377 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12378 = !DILocation(line: 521, column: 21, scope: !12376)
!12379 = !DILocation(line: 521, column: 3, scope: !12376)
!12380 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6235, file: !6235, line: 1543, type: !6574, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12381)
!12381 = !{!12382}
!12382 = !DILocalVariable(name: "Latency", arg: 1, scope: !12380, file: !6235, line: 1543, type: !40)
!12383 = !DILocation(line: 0, scope: !12380)
!12384 = !DILocation(line: 1545, column: 3, scope: !12380)
!12385 = !DILocation(line: 1546, column: 1, scope: !12380)
!12386 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6235, file: !6235, line: 1569, type: !6564, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12387 = !DILocation(line: 1571, column: 21, scope: !12386)
!12388 = !DILocation(line: 1571, column: 3, scope: !12386)
!12389 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12253, file: !12253, line: 483, type: !12390, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12406)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{!12296, !12392, !12399}
!12392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12393, size: 32)
!12393 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12260, line: 114, baseType: !12394)
!12394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12260, line: 94, size: 96, elements: !12395)
!12395 = !{!12396, !12397, !12398}
!12396 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12394, file: !12260, line: 96, baseType: !40, size: 32)
!12397 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12394, file: !12260, line: 102, baseType: !40, size: 32, offset: 32)
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12394, file: !12260, line: 109, baseType: !40, size: 32, offset: 64)
!12399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12400, size: 32)
!12400 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12260, line: 139, baseType: !12401)
!12401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12260, line: 119, size: 96, elements: !12402)
!12402 = !{!12403, !12404, !12405}
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12401, file: !12260, line: 121, baseType: !40, size: 32)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12401, file: !12260, line: 127, baseType: !40, size: 32, offset: 32)
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12401, file: !12260, line: 133, baseType: !40, size: 32, offset: 64)
!12406 = !{!12407, !12408, !12409, !12410}
!12407 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12389, file: !12253, line: 483, type: !12392)
!12408 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12389, file: !12253, line: 484, type: !12399)
!12409 = !DILocalVariable(name: "status", scope: !12389, file: !12253, line: 486, type: !12296)
!12410 = !DILocalVariable(name: "pllfreq", scope: !12389, file: !12253, line: 487, type: !40)
!12411 = !DILocation(line: 0, scope: !12389)
!12412 = !DILocation(line: 490, column: 6, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12389, file: !12253, line: 490, column: 6)
!12414 = !DILocation(line: 490, column: 25, scope: !12413)
!12415 = !DILocation(line: 490, column: 6, scope: !12389)
!12416 = !DILocation(line: 493, column: 15, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12413, file: !12253, line: 491, column: 3)
!12418 = !DILocation(line: 496, column: 8, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12417, file: !12253, line: 496, column: 8)
!12420 = !DILocation(line: 496, column: 29, scope: !12419)
!12421 = !DILocation(line: 496, column: 8, scope: !12417)
!12422 = !DILocation(line: 498, column: 7, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12419, file: !12253, line: 497, column: 5)
!12424 = !DILocation(line: 499, column: 7, scope: !12423)
!12425 = !DILocation(line: 499, column: 14, scope: !12423)
!12426 = !DILocation(line: 499, column: 35, scope: !12423)
!12427 = distinct !{!12427, !12424, !12428}
!12428 = !DILocation(line: 502, column: 7, scope: !12423)
!12429 = !DILocation(line: 506, column: 76, scope: !12417)
!12430 = !DILocation(line: 506, column: 103, scope: !12417)
!12431 = !DILocation(line: 507, column: 54, scope: !12417)
!12432 = !DILocation(line: 506, column: 5, scope: !12417)
!12433 = !DILocation(line: 510, column: 14, scope: !12417)
!12434 = !DILocation(line: 511, column: 3, scope: !12417)
!12435 = !DILocation(line: 0, scope: !12413)
!12436 = !DILocation(line: 518, column: 3, scope: !12389)
!12437 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12253, file: !12253, line: 642, type: !12438, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12440)
!12438 = !DISubroutineType(types: !12439)
!12439 = !{!12296}
!12440 = !{!12441}
!12441 = !DILocalVariable(name: "status", scope: !12437, file: !12253, line: 644, type: !12296)
!12442 = !DILocation(line: 0, scope: !12437)
!12443 = !DILocation(line: 647, column: 6, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12437, file: !12253, line: 647, column: 6)
!12445 = !DILocation(line: 647, column: 27, scope: !12444)
!12446 = !DILocation(line: 655, column: 6, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12437, file: !12253, line: 655, column: 6)
!12448 = !DILocation(line: 655, column: 30, scope: !12447)
!12449 = !DILocation(line: 663, column: 6, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12437, file: !12253, line: 663, column: 6)
!12451 = !DILocation(line: 663, column: 30, scope: !12450)
!12452 = !DILocation(line: 663, column: 6, scope: !12437)
!12453 = !DILocation(line: 669, column: 3, scope: !12437)
!12454 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12253, file: !12253, line: 611, type: !12455, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12457)
!12455 = !DISubroutineType(types: !12456)
!12456 = !{!40, !40, !12392}
!12457 = !{!12458, !12459, !12460}
!12458 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12454, file: !12253, line: 611, type: !40)
!12459 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12454, file: !12253, line: 611, type: !12392)
!12460 = !DILocalVariable(name: "pllfreq", scope: !12454, file: !12253, line: 613, type: !40)
!12461 = !DILocation(line: 0, scope: !12454)
!12462 = !DILocation(line: 622, column: 56, scope: !12454)
!12463 = !DILocation(line: 622, column: 61, scope: !12454)
!12464 = !DILocation(line: 622, column: 32, scope: !12454)
!12465 = !DILocation(line: 626, column: 45, scope: !12454)
!12466 = !DILocation(line: 626, column: 50, scope: !12454)
!12467 = !DILocation(line: 626, column: 21, scope: !12454)
!12468 = !DILocation(line: 630, column: 47, scope: !12454)
!12469 = !DILocation(line: 630, column: 82, scope: !12454)
!12470 = !DILocation(line: 630, column: 21, scope: !12454)
!12471 = !DILocation(line: 633, column: 3, scope: !12454)
!12472 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8711, file: !8711, line: 3007, type: !6564, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12473 = !DILocation(line: 3009, column: 11, scope: !12472)
!12474 = !DILocation(line: 3009, column: 44, scope: !12472)
!12475 = !DILocation(line: 3009, column: 3, scope: !12472)
!12476 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8711, file: !8711, line: 2987, type: !3440, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12477 = !DILocation(line: 2989, column: 3, scope: !12476)
!12478 = !DILocation(line: 2990, column: 1, scope: !12476)
!12479 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8711, file: !8711, line: 4304, type: !8845, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12480)
!12480 = !{!12481, !12482, !12483, !12484}
!12481 = !DILocalVariable(name: "Source", arg: 1, scope: !12479, file: !8711, line: 4304, type: !40)
!12482 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12479, file: !8711, line: 4304, type: !40)
!12483 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12479, file: !8711, line: 4304, type: !40)
!12484 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12479, file: !8711, line: 4304, type: !40)
!12485 = !DILocation(line: 0, scope: !12479)
!12486 = !DILocation(line: 4306, column: 3, scope: !12479)
!12487 = !DILocation(line: 4308, column: 3, scope: !12479)
!12488 = !DILocation(line: 4310, column: 3, scope: !12479)
!12489 = !DILocation(line: 4312, column: 1, scope: !12479)
!12490 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12253, file: !12253, line: 681, type: !12491, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12493)
!12491 = !DISubroutineType(types: !12492)
!12492 = !{!12296, !40, !12399}
!12493 = !{!12494, !12495, !12496, !12497}
!12494 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12490, file: !12253, line: 681, type: !40)
!12495 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12490, file: !12253, line: 681, type: !12399)
!12496 = !DILocalVariable(name: "status", scope: !12490, file: !12253, line: 683, type: !12296)
!12497 = !DILocalVariable(name: "hclk_frequency", scope: !12490, file: !12253, line: 684, type: !40)
!12498 = !DILocation(line: 0, scope: !12490)
!12499 = !DILocation(line: 691, column: 20, scope: !12490)
!12500 = !DILocation(line: 694, column: 6, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12490, file: !12253, line: 694, column: 6)
!12502 = !DILocation(line: 694, column: 22, scope: !12501)
!12503 = !DILocation(line: 694, column: 6, scope: !12490)
!12504 = !DILocation(line: 697, column: 14, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12501, file: !12253, line: 695, column: 3)
!12506 = !DILocation(line: 701, column: 13, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12490, file: !12253, line: 701, column: 6)
!12508 = !DILocation(line: 701, column: 6, scope: !12490)
!12509 = !DILocation(line: 704, column: 5, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12507, file: !12253, line: 702, column: 3)
!12511 = !DILocation(line: 705, column: 5, scope: !12510)
!12512 = !DILocation(line: 705, column: 12, scope: !12510)
!12513 = !DILocation(line: 705, column: 33, scope: !12510)
!12514 = distinct !{!12514, !12511, !12515}
!12515 = !DILocation(line: 708, column: 5, scope: !12510)
!12516 = !DILocation(line: 711, column: 49, scope: !12510)
!12517 = !DILocation(line: 711, column: 5, scope: !12510)
!12518 = !DILocation(line: 712, column: 5, scope: !12510)
!12519 = !DILocation(line: 713, column: 5, scope: !12510)
!12520 = !DILocation(line: 713, column: 12, scope: !12510)
!12521 = !DILocation(line: 713, column: 37, scope: !12510)
!12522 = distinct !{!12522, !12519, !12523}
!12523 = !DILocation(line: 716, column: 5, scope: !12510)
!12524 = !DILocation(line: 719, column: 50, scope: !12510)
!12525 = !DILocation(line: 719, column: 5, scope: !12510)
!12526 = !DILocation(line: 720, column: 50, scope: !12510)
!12527 = !DILocation(line: 720, column: 5, scope: !12510)
!12528 = !DILocation(line: 721, column: 3, scope: !12510)
!12529 = !DILocation(line: 724, column: 6, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12490, file: !12253, line: 724, column: 6)
!12531 = !DILocation(line: 724, column: 22, scope: !12530)
!12532 = !DILocation(line: 724, column: 6, scope: !12490)
!12533 = !DILocation(line: 727, column: 14, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12530, file: !12253, line: 725, column: 3)
!12535 = !DILocation(line: 728, column: 3, scope: !12534)
!12536 = !DILocation(line: 731, column: 13, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12490, file: !12253, line: 731, column: 6)
!12538 = !DILocation(line: 731, column: 6, scope: !12490)
!12539 = !DILocation(line: 733, column: 5, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12537, file: !12253, line: 732, column: 3)
!12541 = !DILocation(line: 734, column: 3, scope: !12540)
!12542 = !DILocation(line: 736, column: 3, scope: !12490)
!12543 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8711, file: !8711, line: 4184, type: !3440, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12544 = !DILocation(line: 4186, column: 3, scope: !12543)
!12545 = !DILocation(line: 4187, column: 1, scope: !12543)
!12546 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8711, file: !8711, line: 4205, type: !6564, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12547 = !DILocation(line: 4207, column: 11, scope: !12546)
!12548 = !DILocation(line: 4207, column: 44, scope: !12546)
!12549 = !DILocation(line: 4207, column: 3, scope: !12546)
!12550 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8711, file: !8711, line: 3224, type: !6574, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12551)
!12551 = !{!12552}
!12552 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12550, file: !8711, line: 3224, type: !40)
!12553 = !DILocation(line: 0, scope: !12550)
!12554 = !DILocation(line: 3226, column: 3, scope: !12550)
!12555 = !DILocation(line: 3227, column: 1, scope: !12550)
!12556 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8711, file: !8711, line: 3188, type: !6574, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12557)
!12557 = !{!12558}
!12558 = !DILocalVariable(name: "Source", arg: 1, scope: !12556, file: !8711, line: 3188, type: !40)
!12559 = !DILocation(line: 0, scope: !12556)
!12560 = !DILocation(line: 3190, column: 3, scope: !12556)
!12561 = !DILocation(line: 3191, column: 1, scope: !12556)
!12562 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8711, file: !8711, line: 3204, type: !6564, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12563 = !DILocation(line: 3206, column: 21, scope: !12562)
!12564 = !DILocation(line: 3206, column: 3, scope: !12562)
!12565 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8711, file: !8711, line: 3240, type: !6574, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12566)
!12566 = !{!12567}
!12567 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12565, file: !8711, line: 3240, type: !40)
!12568 = !DILocation(line: 0, scope: !12565)
!12569 = !DILocation(line: 3242, column: 3, scope: !12565)
!12570 = !DILocation(line: 3243, column: 1, scope: !12565)
!12571 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8711, file: !8711, line: 3256, type: !6574, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12572)
!12572 = !{!12573}
!12573 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12571, file: !8711, line: 3256, type: !40)
!12574 = !DILocation(line: 0, scope: !12571)
!12575 = !DILocation(line: 3258, column: 3, scope: !12571)
!12576 = !DILocation(line: 3259, column: 1, scope: !12571)
!12577 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8711, file: !8711, line: 5969, type: !6564, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12578 = !DILocation(line: 5971, column: 11, scope: !12577)
!12579 = !DILocation(line: 5971, column: 47, scope: !12577)
!12580 = !DILocation(line: 5971, column: 3, scope: !12577)
!12581 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8711, file: !8711, line: 5153, type: !6564, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12582 = !DILocation(line: 5155, column: 11, scope: !12581)
!12583 = !DILocation(line: 5155, column: 47, scope: !12581)
!12584 = !DILocation(line: 5155, column: 3, scope: !12581)
!12585 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12253, file: !12253, line: 540, type: !12586, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !12588)
!12586 = !DISubroutineType(types: !12587)
!12587 = !{!12296, !40, !40, !12392, !12399}
!12588 = !{!12589, !12590, !12591, !12592, !12593, !12594}
!12589 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12585, file: !12253, line: 540, type: !40)
!12590 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12585, file: !12253, line: 540, type: !40)
!12591 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12585, file: !12253, line: 541, type: !12392)
!12592 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12585, file: !12253, line: 541, type: !12399)
!12593 = !DILocalVariable(name: "status", scope: !12585, file: !12253, line: 543, type: !12296)
!12594 = !DILocalVariable(name: "pllfreq", scope: !12585, file: !12253, line: 544, type: !40)
!12595 = !DILocation(line: 0, scope: !12585)
!12596 = !DILocation(line: 551, column: 6, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12585, file: !12253, line: 551, column: 6)
!12598 = !DILocation(line: 551, column: 25, scope: !12597)
!12599 = !DILocation(line: 551, column: 6, scope: !12585)
!12600 = !DILocation(line: 554, column: 15, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12597, file: !12253, line: 552, column: 3)
!12602 = !DILocation(line: 557, column: 8, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12601, file: !12253, line: 557, column: 8)
!12604 = !DILocation(line: 557, column: 29, scope: !12603)
!12605 = !DILocation(line: 557, column: 8, scope: !12601)
!12606 = !DILocation(line: 560, column: 20, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12253, line: 560, column: 10)
!12608 = distinct !DILexicalBlock(scope: !12603, file: !12253, line: 558, column: 5)
!12609 = !DILocation(line: 560, column: 10, scope: !12608)
!12610 = !DILocation(line: 562, column: 9, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12607, file: !12253, line: 561, column: 7)
!12612 = !DILocation(line: 563, column: 7, scope: !12611)
!12613 = !DILocation(line: 566, column: 9, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12607, file: !12253, line: 565, column: 7)
!12615 = !DILocation(line: 570, column: 7, scope: !12608)
!12616 = !DILocation(line: 571, column: 7, scope: !12608)
!12617 = !DILocation(line: 571, column: 14, scope: !12608)
!12618 = !DILocation(line: 571, column: 35, scope: !12608)
!12619 = distinct !{!12619, !12616, !12620}
!12620 = !DILocation(line: 574, column: 7, scope: !12608)
!12621 = !DILocation(line: 578, column: 76, scope: !12601)
!12622 = !DILocation(line: 578, column: 103, scope: !12601)
!12623 = !DILocation(line: 579, column: 54, scope: !12601)
!12624 = !DILocation(line: 578, column: 5, scope: !12601)
!12625 = !DILocation(line: 582, column: 14, scope: !12601)
!12626 = !DILocation(line: 583, column: 3, scope: !12601)
!12627 = !DILocation(line: 0, scope: !12597)
!12628 = !DILocation(line: 590, column: 3, scope: !12585)
!12629 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8711, file: !8711, line: 2969, type: !6564, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12630 = !DILocation(line: 2971, column: 11, scope: !12629)
!12631 = !DILocation(line: 2971, column: 44, scope: !12629)
!12632 = !DILocation(line: 2971, column: 3, scope: !12629)
!12633 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8711, file: !8711, line: 2929, type: !3440, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12634 = !DILocation(line: 2931, column: 3, scope: !12633)
!12635 = !DILocation(line: 2932, column: 1, scope: !12633)
!12636 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8711, file: !8711, line: 2939, type: !3440, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12637 = !DILocation(line: 2941, column: 3, scope: !12636)
!12638 = !DILocation(line: 2942, column: 1, scope: !12636)
!12639 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8711, file: !8711, line: 2949, type: !3440, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3333, retainedNodes: !2223)
!12640 = !DILocation(line: 2951, column: 3, scope: !12639)
!12641 = !DILocation(line: 2952, column: 1, scope: !12639)
!12642 = distinct !DISubprogram(name: "z_device_state_init", scope: !12643, file: !12643, line: 23, type: !3440, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12644)
!12643 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12644 = !{!12645}
!12645 = !DILocalVariable(name: "dev", scope: !12642, file: !12643, line: 25, type: !12646)
!12646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12647, size: 32)
!12647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12648)
!12648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !316, line: 378, size: 192, elements: !12649)
!12649 = !{!12650, !12651, !12652, !12653, !12659, !12660}
!12650 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12648, file: !316, line: 380, baseType: !319, size: 32)
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12648, file: !316, line: 382, baseType: !13, size: 32, offset: 32)
!12652 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12648, file: !316, line: 384, baseType: !13, size: 32, offset: 64)
!12653 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12648, file: !316, line: 386, baseType: !12654, size: 32, offset: 96)
!12654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12655, size: 32)
!12655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !316, line: 351, size: 16, elements: !12656)
!12656 = !{!12657, !12658}
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12655, file: !316, line: 359, baseType: !143, size: 8)
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12655, file: !316, line: 364, baseType: !329, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12648, file: !316, line: 388, baseType: !39, size: 32, offset: 128)
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12648, file: !316, line: 396, baseType: !332, size: 32, offset: 160)
!12661 = !DILocation(line: 0, scope: !12642)
!12662 = !DILocation(line: 31, column: 1, scope: !12642)
!12663 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12643, file: !12643, line: 33, type: !12664, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12666)
!12664 = !DISubroutineType(types: !12665)
!12665 = !{!12646, !319}
!12666 = !{!12667, !12668}
!12667 = !DILocalVariable(name: "name", arg: 1, scope: !12663, file: !12643, line: 33, type: !319)
!12668 = !DILocalVariable(name: "dev", scope: !12663, file: !12643, line: 35, type: !12646)
!12669 = !DILocation(line: 0, scope: !12663)
!12670 = !DILocation(line: 40, column: 12, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12663, file: !12643, line: 40, column: 6)
!12672 = !DILocation(line: 40, column: 21, scope: !12671)
!12673 = !DILocation(line: 40, column: 25, scope: !12671)
!12674 = !DILocation(line: 40, column: 33, scope: !12671)
!12675 = !DILocation(line: 40, column: 6, scope: !12663)
!12676 = !DILocation(line: 55, column: 2, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12663, file: !12643, line: 55, column: 2)
!12678 = !DILocation(line: 50, column: 7, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !12643, line: 50, column: 7)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !12643, line: 49, column: 57)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !12643, line: 49, column: 2)
!12682 = distinct !DILexicalBlock(scope: !12663, file: !12643, line: 49, column: 2)
!12683 = !DILocation(line: 50, column: 30, scope: !12679)
!12684 = !DILocation(line: 50, column: 39, scope: !12679)
!12685 = !DILocation(line: 50, column: 44, scope: !12679)
!12686 = !DILocation(line: 50, column: 7, scope: !12680)
!12687 = !DILocation(line: 49, column: 53, scope: !12681)
!12688 = !DILocation(line: 49, column: 33, scope: !12681)
!12689 = !DILocation(line: 49, column: 2, scope: !12682)
!12690 = distinct !{!12690, !12689, !12691}
!12691 = !DILocation(line: 53, column: 2, scope: !12682)
!12692 = !DILocation(line: 56, column: 7, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12694, file: !12643, line: 56, column: 7)
!12694 = distinct !DILexicalBlock(scope: !12695, file: !12643, line: 55, column: 57)
!12695 = distinct !DILexicalBlock(scope: !12677, file: !12643, line: 55, column: 2)
!12696 = !DILocation(line: 56, column: 30, scope: !12693)
!12697 = !DILocation(line: 56, column: 52, scope: !12693)
!12698 = !DILocation(line: 56, column: 34, scope: !12693)
!12699 = !DILocation(line: 56, column: 58, scope: !12693)
!12700 = !DILocation(line: 56, column: 7, scope: !12694)
!12701 = !DILocation(line: 55, column: 53, scope: !12695)
!12702 = !DILocation(line: 55, column: 33, scope: !12695)
!12703 = distinct !{!12703, !12676, !12704}
!12704 = !DILocation(line: 59, column: 2, scope: !12677)
!12705 = !DILocation(line: 62, column: 1, scope: !12663)
!12706 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12643, file: !12643, line: 93, type: !12707, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12709)
!12707 = !DISubroutineType(types: !12708)
!12708 = !{!329, !12646}
!12709 = !{!12710}
!12710 = !DILocalVariable(name: "dev", arg: 1, scope: !12706, file: !12643, line: 93, type: !12646)
!12711 = !DILocation(line: 0, scope: !12706)
!12712 = !DILocation(line: 99, column: 10, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12706, file: !12643, line: 99, column: 6)
!12714 = !DILocation(line: 99, column: 6, scope: !12706)
!12715 = !DILocation(line: 103, column: 14, scope: !12706)
!12716 = !DILocation(line: 103, column: 21, scope: !12706)
!12717 = !DILocation(line: 103, column: 33, scope: !12706)
!12718 = !DILocation(line: 103, column: 49, scope: !12706)
!12719 = !DILocation(line: 103, column: 58, scope: !12706)
!12720 = !DILocation(line: 104, column: 1, scope: !12706)
!12721 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12643, file: !12643, line: 87, type: !12722, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12725)
!12722 = !DISubroutineType(types: !12723)
!12723 = !{!193, !12724}
!12724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12646, size: 32)
!12725 = !{!12726}
!12726 = !DILocalVariable(name: "devices", arg: 1, scope: !12721, file: !12643, line: 87, type: !12724)
!12727 = !DILocation(line: 0, scope: !12721)
!12728 = !DILocation(line: 89, column: 11, scope: !12721)
!12729 = !DILocation(line: 90, column: 2, scope: !12721)
!12730 = distinct !DISubprogram(name: "device_required_foreach", scope: !12643, file: !12643, line: 125, type: !12731, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12737)
!12731 = !DISubroutineType(types: !12732)
!12732 = !{!55, !12646, !12733, !39}
!12733 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !316, line: 471, baseType: !12734)
!12734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12735, size: 32)
!12735 = !DISubroutineType(types: !12736)
!12736 = !{!55, !12646, !39}
!12737 = !{!12738, !12739, !12740, !12741, !12742}
!12738 = !DILocalVariable(name: "dev", arg: 1, scope: !12730, file: !12643, line: 125, type: !12646)
!12739 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12730, file: !12643, line: 126, type: !12733)
!12740 = !DILocalVariable(name: "context", arg: 3, scope: !12730, file: !12643, line: 127, type: !39)
!12741 = !DILocalVariable(name: "handle_count", scope: !12730, file: !12643, line: 129, type: !193)
!12742 = !DILocalVariable(name: "handles", scope: !12730, file: !12643, line: 130, type: !332)
!12743 = !DILocation(line: 0, scope: !12730)
!12744 = !DILocation(line: 129, column: 2, scope: !12730)
!12745 = !DILocation(line: 129, column: 9, scope: !12730)
!12746 = !DILocation(line: 130, column: 35, scope: !12730)
!12747 = !DILocation(line: 132, column: 33, scope: !12730)
!12748 = !DILocation(line: 132, column: 9, scope: !12730)
!12749 = !DILocation(line: 133, column: 1, scope: !12730)
!12750 = !DILocation(line: 132, column: 2, scope: !12730)
!12751 = distinct !DISubprogram(name: "device_required_handles_get", scope: !316, file: !316, line: 493, type: !12752, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12754)
!12752 = !DISubroutineType(types: !12753)
!12753 = !{!332, !12646, !2896}
!12754 = !{!12755, !12756, !12757, !12758}
!12755 = !DILocalVariable(name: "dev", arg: 1, scope: !12751, file: !316, line: 493, type: !12646)
!12756 = !DILocalVariable(name: "count", arg: 2, scope: !12751, file: !316, line: 493, type: !2896)
!12757 = !DILocalVariable(name: "rv", scope: !12751, file: !316, line: 495, type: !332)
!12758 = !DILocalVariable(name: "i", scope: !12759, file: !316, line: 498, type: !193)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !316, line: 497, column: 18)
!12760 = distinct !DILexicalBlock(scope: !12751, file: !316, line: 497, column: 6)
!12761 = !DILocation(line: 0, scope: !12751)
!12762 = !DILocation(line: 495, column: 35, scope: !12751)
!12763 = !DILocation(line: 497, column: 9, scope: !12760)
!12764 = !DILocation(line: 497, column: 6, scope: !12751)
!12765 = !DILocation(line: 0, scope: !12759)
!12766 = !DILocation(line: 500, column: 11, scope: !12759)
!12767 = !DILocation(line: 500, column: 40, scope: !12759)
!12768 = !DILocation(line: 502, column: 4, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12759, file: !316, line: 501, column: 40)
!12770 = distinct !{!12770, !12771, !12772}
!12771 = !DILocation(line: 500, column: 3, scope: !12759)
!12772 = !DILocation(line: 503, column: 3, scope: !12759)
!12773 = !DILocation(line: 504, column: 10, scope: !12759)
!12774 = !DILocation(line: 505, column: 2, scope: !12759)
!12775 = !DILocation(line: 507, column: 2, scope: !12751)
!12776 = distinct !DISubprogram(name: "device_visitor", scope: !12643, file: !12643, line: 106, type: !12777, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12779)
!12777 = !DISubroutineType(types: !12778)
!12778 = !{!55, !332, !193, !12733, !39}
!12779 = !{!12780, !12781, !12782, !12783, !12784, !12786, !12789, !12790}
!12780 = !DILocalVariable(name: "handles", arg: 1, scope: !12776, file: !12643, line: 106, type: !332)
!12781 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12776, file: !12643, line: 107, type: !193)
!12782 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12776, file: !12643, line: 108, type: !12733)
!12783 = !DILocalVariable(name: "context", arg: 4, scope: !12776, file: !12643, line: 109, type: !39)
!12784 = !DILocalVariable(name: "i", scope: !12785, file: !12643, line: 112, type: !193)
!12785 = distinct !DILexicalBlock(scope: !12776, file: !12643, line: 112, column: 2)
!12786 = !DILocalVariable(name: "dh", scope: !12787, file: !12643, line: 113, type: !334)
!12787 = distinct !DILexicalBlock(scope: !12788, file: !12643, line: 112, column: 44)
!12788 = distinct !DILexicalBlock(scope: !12785, file: !12643, line: 112, column: 2)
!12789 = !DILocalVariable(name: "rdev", scope: !12787, file: !12643, line: 114, type: !12646)
!12790 = !DILocalVariable(name: "rc", scope: !12787, file: !12643, line: 115, type: !55)
!12791 = !DILocation(line: 0, scope: !12776)
!12792 = !DILocation(line: 0, scope: !12785)
!12793 = !DILocation(line: 112, column: 23, scope: !12788)
!12794 = !DILocation(line: 112, column: 2, scope: !12785)
!12795 = distinct !{!12795, !12794, !12796}
!12796 = !DILocation(line: 120, column: 2, scope: !12785)
!12797 = !DILocation(line: 113, column: 24, scope: !12787)
!12798 = !DILocation(line: 0, scope: !12787)
!12799 = !DILocation(line: 114, column: 31, scope: !12787)
!12800 = !DILocation(line: 115, column: 12, scope: !12787)
!12801 = !DILocation(line: 117, column: 10, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12787, file: !12643, line: 117, column: 7)
!12803 = !DILocation(line: 112, column: 39, scope: !12788)
!12804 = !DILocation(line: 123, column: 1, scope: !12776)
!12805 = distinct !DISubprogram(name: "device_from_handle", scope: !316, file: !316, line: 439, type: !12806, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12808)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{!12646, !334}
!12808 = !{!12809, !12810, !12811}
!12809 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12805, file: !316, line: 439, type: !334)
!12810 = !DILocalVariable(name: "dev", scope: !12805, file: !316, line: 443, type: !12646)
!12811 = !DILocalVariable(name: "numdev", scope: !12805, file: !316, line: 444, type: !193)
!12812 = !DILocation(line: 0, scope: !12805)
!12813 = !DILocation(line: 446, column: 7, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12805, file: !316, line: 446, column: 6)
!12815 = !DILocation(line: 446, column: 18, scope: !12814)
!12816 = !DILocation(line: 446, column: 23, scope: !12814)
!12817 = !DILocation(line: 450, column: 2, scope: !12805)
!12818 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12643, file: !12643, line: 135, type: !12731, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12819)
!12819 = !{!12820, !12821, !12822, !12823, !12824}
!12820 = !DILocalVariable(name: "dev", arg: 1, scope: !12818, file: !12643, line: 135, type: !12646)
!12821 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12818, file: !12643, line: 136, type: !12733)
!12822 = !DILocalVariable(name: "context", arg: 3, scope: !12818, file: !12643, line: 137, type: !39)
!12823 = !DILocalVariable(name: "handle_count", scope: !12818, file: !12643, line: 139, type: !193)
!12824 = !DILocalVariable(name: "handles", scope: !12818, file: !12643, line: 140, type: !332)
!12825 = !DILocation(line: 0, scope: !12818)
!12826 = !DILocation(line: 139, column: 2, scope: !12818)
!12827 = !DILocation(line: 139, column: 9, scope: !12818)
!12828 = !DILocation(line: 140, column: 35, scope: !12818)
!12829 = !DILocation(line: 142, column: 33, scope: !12818)
!12830 = !DILocation(line: 142, column: 9, scope: !12818)
!12831 = !DILocation(line: 143, column: 1, scope: !12818)
!12832 = !DILocation(line: 142, column: 2, scope: !12818)
!12833 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !316, file: !316, line: 573, type: !12752, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !12834)
!12834 = !{!12835, !12836, !12837, !12838, !12839}
!12835 = !DILocalVariable(name: "dev", arg: 1, scope: !12833, file: !316, line: 573, type: !12646)
!12836 = !DILocalVariable(name: "count", arg: 2, scope: !12833, file: !316, line: 573, type: !2896)
!12837 = !DILocalVariable(name: "rv", scope: !12833, file: !316, line: 575, type: !332)
!12838 = !DILocalVariable(name: "region", scope: !12833, file: !316, line: 576, type: !193)
!12839 = !DILocalVariable(name: "i", scope: !12833, file: !316, line: 577, type: !193)
!12840 = !DILocation(line: 0, scope: !12833)
!12841 = !DILocation(line: 575, column: 35, scope: !12833)
!12842 = !DILocation(line: 579, column: 9, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12833, file: !316, line: 579, column: 6)
!12844 = !DILocation(line: 579, column: 6, scope: !12833)
!12845 = !DILocation(line: 582, column: 8, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !316, line: 582, column: 8)
!12847 = distinct !DILexicalBlock(scope: !12848, file: !316, line: 581, column: 23)
!12848 = distinct !DILexicalBlock(scope: !12843, file: !316, line: 579, column: 18)
!12849 = !DILocation(line: 582, column: 12, scope: !12846)
!12850 = !DILocation(line: 585, column: 6, scope: !12847)
!12851 = !DILocation(line: 0, scope: !12848)
!12852 = !DILocation(line: 581, column: 17, scope: !12848)
!12853 = !DILocation(line: 581, column: 3, scope: !12848)
!12854 = !DILocation(line: 588, column: 10, scope: !12848)
!12855 = !DILocation(line: 588, column: 16, scope: !12848)
!12856 = !DILocation(line: 589, column: 4, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12848, file: !316, line: 588, column: 39)
!12858 = !DILocation(line: 588, column: 3, scope: !12848)
!12859 = distinct !{!12859, !12858, !12860}
!12860 = !DILocation(line: 590, column: 3, scope: !12848)
!12861 = !DILocation(line: 591, column: 10, scope: !12848)
!12862 = !DILocation(line: 592, column: 2, scope: !12848)
!12863 = !DILocation(line: 575, column: 25, scope: !12833)
!12864 = !DILocation(line: 594, column: 2, scope: !12833)
!12865 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2014, file: !2014, line: 49, type: !7650, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2011, retainedNodes: !2223)
!12866 = !DILocation(line: 51, column: 10, scope: !12865)
!12867 = !DILocation(line: 51, column: 20, scope: !12865)
!12868 = !DILocation(line: 51, column: 2, scope: !12865)
!12869 = distinct !DISubprogram(name: "coredump", scope: !3407, file: !3407, line: 209, type: !12870, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13018)
!12870 = !DISubroutineType(types: !12871)
!12871 = !{null, !41, !12872, !12916}
!12872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12873, size: 32)
!12873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12874)
!12874 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3038, line: 141, baseType: !12875)
!12875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3038, line: 97, size: 256, elements: !12876)
!12876 = !{!12877}
!12877 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12875, file: !3038, line: 107, baseType: !12878, size: 256)
!12878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3038, line: 98, size: 256, elements: !12879)
!12879 = !{!12880, !12885, !12890, !12895, !12900, !12905, !12910, !12915}
!12880 = !DIDerivedType(tag: DW_TAG_member, scope: !12878, file: !3038, line: 99, baseType: !12881, size: 32)
!12881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !3038, line: 99, size: 32, elements: !12882)
!12882 = !{!12883, !12884}
!12883 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12881, file: !3038, line: 99, baseType: !40, size: 32)
!12884 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12881, file: !3038, line: 99, baseType: !40, size: 32)
!12885 = !DIDerivedType(tag: DW_TAG_member, scope: !12878, file: !3038, line: 100, baseType: !12886, size: 32, offset: 32)
!12886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !3038, line: 100, size: 32, elements: !12887)
!12887 = !{!12888, !12889}
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12886, file: !3038, line: 100, baseType: !40, size: 32)
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12886, file: !3038, line: 100, baseType: !40, size: 32)
!12890 = !DIDerivedType(tag: DW_TAG_member, scope: !12878, file: !3038, line: 101, baseType: !12891, size: 32, offset: 64)
!12891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !3038, line: 101, size: 32, elements: !12892)
!12892 = !{!12893, !12894}
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12891, file: !3038, line: 101, baseType: !40, size: 32)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12891, file: !3038, line: 101, baseType: !40, size: 32)
!12895 = !DIDerivedType(tag: DW_TAG_member, scope: !12878, file: !3038, line: 102, baseType: !12896, size: 32, offset: 96)
!12896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !3038, line: 102, size: 32, elements: !12897)
!12897 = !{!12898, !12899}
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12896, file: !3038, line: 102, baseType: !40, size: 32)
!12899 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12896, file: !3038, line: 102, baseType: !40, size: 32)
!12900 = !DIDerivedType(tag: DW_TAG_member, scope: !12878, file: !3038, line: 103, baseType: !12901, size: 32, offset: 128)
!12901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !3038, line: 103, size: 32, elements: !12902)
!12902 = !{!12903, !12904}
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12901, file: !3038, line: 103, baseType: !40, size: 32)
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12901, file: !3038, line: 103, baseType: !40, size: 32)
!12905 = !DIDerivedType(tag: DW_TAG_member, scope: !12878, file: !3038, line: 104, baseType: !12906, size: 32, offset: 160)
!12906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !3038, line: 104, size: 32, elements: !12907)
!12907 = !{!12908, !12909}
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12906, file: !3038, line: 104, baseType: !40, size: 32)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12906, file: !3038, line: 104, baseType: !40, size: 32)
!12910 = !DIDerivedType(tag: DW_TAG_member, scope: !12878, file: !3038, line: 105, baseType: !12911, size: 32, offset: 192)
!12911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !3038, line: 105, size: 32, elements: !12912)
!12912 = !{!12913, !12914}
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12911, file: !3038, line: 105, baseType: !40, size: 32)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12911, file: !3038, line: 105, baseType: !40, size: 32)
!12915 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12878, file: !3038, line: 106, baseType: !40, size: 32, offset: 224)
!12916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12917, size: 32)
!12917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !12918)
!12918 = !{!12919, !12977, !12989, !12990, !12991, !12992, !12998, !13013}
!12919 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12917, file: !121, line: 247, baseType: !12920, size: 384)
!12920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !12921)
!12921 = !{!12922, !12946, !12953, !12954, !12955, !12964, !12965, !12966}
!12922 = !DIDerivedType(tag: DW_TAG_member, scope: !12920, file: !121, line: 60, baseType: !12923, size: 64)
!12923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12920, file: !121, line: 60, size: 64, elements: !12924)
!12924 = !{!12925, !12940}
!12925 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12923, file: !121, line: 61, baseType: !12926, size: 64)
!12926 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !77, line: 49, baseType: !12927)
!12927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !77, line: 37, size: 64, elements: !12928)
!12928 = !{!12929, !12935}
!12929 = !DIDerivedType(tag: DW_TAG_member, scope: !12927, file: !77, line: 38, baseType: !12930, size: 32)
!12930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12927, file: !77, line: 38, size: 32, elements: !12931)
!12931 = !{!12932, !12934}
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12930, file: !77, line: 39, baseType: !12933, size: 32)
!12933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12927, size: 32)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12930, file: !77, line: 40, baseType: !12933, size: 32)
!12935 = !DIDerivedType(tag: DW_TAG_member, scope: !12927, file: !77, line: 42, baseType: !12936, size: 32, offset: 32)
!12936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12927, file: !77, line: 42, size: 32, elements: !12937)
!12937 = !{!12938, !12939}
!12938 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12936, file: !77, line: 43, baseType: !12933, size: 32)
!12939 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12936, file: !77, line: 44, baseType: !12933, size: 32)
!12940 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12923, file: !121, line: 62, baseType: !12941, size: 64)
!12941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !12942)
!12942 = !{!12943}
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12941, file: !133, line: 50, baseType: !12944, size: 64)
!12944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12945, size: 64, elements: !138)
!12945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12941, size: 32)
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12920, file: !121, line: 68, baseType: !12947, size: 32, offset: 64)
!12947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12948, size: 32)
!12948 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !12949)
!12949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !12950)
!12950 = !{!12951}
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12949, file: !72, line: 232, baseType: !12952, size: 64)
!12952 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !12927)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12920, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12920, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!12955 = !DIDerivedType(tag: DW_TAG_member, scope: !12920, file: !121, line: 90, baseType: !12956, size: 16, offset: 112)
!12956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12920, file: !121, line: 90, size: 16, elements: !12957)
!12957 = !{!12958, !12963}
!12958 = !DIDerivedType(tag: DW_TAG_member, scope: !12956, file: !121, line: 91, baseType: !12959, size: 16)
!12959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12956, file: !121, line: 91, size: 16, elements: !12960)
!12960 = !{!12961, !12962}
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12959, file: !121, line: 96, baseType: !153, size: 8)
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12959, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!12963 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12956, file: !121, line: 100, baseType: !157, size: 16)
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12920, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!12965 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12920, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!12966 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12920, file: !121, line: 131, baseType: !12967, size: 192, offset: 192)
!12967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !12968)
!12968 = !{!12969, !12970, !12976}
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12967, file: !72, line: 245, baseType: !12926, size: 64)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12967, file: !72, line: 246, baseType: !12971, size: 32, offset: 64)
!12971 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !12972)
!12972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12973, size: 32)
!12973 = !DISubroutineType(types: !12974)
!12974 = !{null, !12975}
!12975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12967, size: 32)
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12967, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12917, file: !121, line: 250, baseType: !12978, size: 288, offset: 384)
!12978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !12979)
!12979 = !{!12980, !12981, !12982, !12983, !12984, !12985, !12986, !12987, !12988}
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12978, file: !174, line: 26, baseType: !40, size: 32)
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12978, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!12982 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12978, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!12983 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12978, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!12984 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12978, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!12985 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12978, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12978, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12978, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!12988 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12978, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12917, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!12990 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12917, file: !121, line: 256, baseType: !12948, size: 64, offset: 704)
!12991 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12917, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!12992 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12917, file: !121, line: 300, baseType: !12993, size: 96, offset: 800)
!12993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !12994)
!12994 = !{!12995, !12996, !12997}
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12993, file: !121, line: 153, baseType: !22, size: 32)
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12993, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!12997 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12993, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12917, file: !121, line: 325, baseType: !12999, size: 32, offset: 896)
!12999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13000, size: 32)
!13000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !13001)
!13001 = !{!13002, !13008, !13009}
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13000, file: !68, line: 5074, baseType: !13003, size: 96)
!13003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !13004)
!13004 = !{!13005, !13006, !13007}
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13003, file: !473, line: 57, baseType: !476, size: 32)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13003, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13003, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13000, file: !68, line: 5075, baseType: !12948, size: 64, offset: 96)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13000, file: !68, line: 5076, baseType: !13010, size: 8, offset: 160)
!13010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !483, line: 43, size: 8, elements: !13011)
!13011 = !{!13012}
!13012 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !13010, file: !483, line: 75, baseType: !113, size: 8)
!13013 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12917, file: !121, line: 343, baseType: !13014, size: 64, offset: 928)
!13014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !13015)
!13015 = !{!13016, !13017}
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13014, file: !174, line: 63, baseType: !40, size: 32)
!13017 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13014, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!13018 = !{!13019, !13020, !13021}
!13019 = !DILocalVariable(name: "reason", arg: 1, scope: !12869, file: !3407, line: 209, type: !41)
!13020 = !DILocalVariable(name: "esf", arg: 2, scope: !12869, file: !3407, line: 209, type: !12872)
!13021 = !DILocalVariable(name: "thread", arg: 3, scope: !12869, file: !3407, line: 210, type: !12916)
!13022 = !DILocation(line: 0, scope: !12869)
!13023 = !DILocation(line: 212, column: 1, scope: !12869)
!13024 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3407, file: !3407, line: 214, type: !13025, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13027)
!13025 = !DISubroutineType(types: !13026)
!13026 = !{null, !22, !22}
!13027 = !{!13028, !13029}
!13028 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13024, file: !3407, line: 214, type: !22)
!13029 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13024, file: !3407, line: 214, type: !22)
!13030 = !DILocation(line: 0, scope: !13024)
!13031 = !DILocation(line: 216, column: 1, scope: !13024)
!13032 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3407, file: !3407, line: 218, type: !13033, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13035)
!13033 = !DISubroutineType(types: !13034)
!13034 = !{null, !2055, !193}
!13035 = !{!13036, !13037}
!13036 = !DILocalVariable(name: "buf", arg: 1, scope: !13032, file: !3407, line: 218, type: !2055)
!13037 = !DILocalVariable(name: "buflen", arg: 2, scope: !13032, file: !3407, line: 218, type: !193)
!13038 = !DILocation(line: 0, scope: !13032)
!13039 = !DILocation(line: 220, column: 1, scope: !13032)
!13040 = distinct !DISubprogram(name: "coredump_query", scope: !3407, file: !3407, line: 222, type: !13041, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13043)
!13041 = !DISubroutineType(types: !13042)
!13042 = !{!55, !3406, !39}
!13043 = !{!13044, !13045}
!13044 = !DILocalVariable(name: "query_id", arg: 1, scope: !13040, file: !3407, line: 222, type: !3406)
!13045 = !DILocalVariable(name: "arg", arg: 2, scope: !13040, file: !3407, line: 222, type: !39)
!13046 = !DILocation(line: 0, scope: !13040)
!13047 = !DILocation(line: 224, column: 2, scope: !13040)
!13048 = distinct !DISubprogram(name: "coredump_cmd", scope: !3407, file: !3407, line: 227, type: !13049, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13051)
!13049 = !DISubroutineType(types: !13050)
!13050 = !{!55, !3413, !39}
!13051 = !{!13052, !13053}
!13052 = !DILocalVariable(name: "query_id", arg: 1, scope: !13048, file: !3407, line: 227, type: !3413)
!13053 = !DILocalVariable(name: "arg", arg: 2, scope: !13048, file: !3407, line: 227, type: !39)
!13054 = !DILocation(line: 0, scope: !13048)
!13055 = !DILocation(line: 229, column: 2, scope: !13048)
!13056 = distinct !DISubprogram(name: "arch_system_halt", scope: !13057, file: !13057, line: 23, type: !6225, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13058)
!13057 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13058 = !{!13059}
!13059 = !DILocalVariable(name: "reason", arg: 1, scope: !13056, file: !13057, line: 23, type: !41)
!13060 = !DILocation(line: 0, scope: !13056)
!13061 = !DILocation(line: 55, column: 2, scope: !13062, inlinedAt: !13066)
!13062 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13063)
!13063 = !{!13064, !13065}
!13064 = !DILocalVariable(name: "key", scope: !13062, file: !6214, line: 44, type: !41)
!13065 = !DILocalVariable(name: "tmp", scope: !13062, file: !6214, line: 53, type: !41)
!13066 = distinct !DILocation(line: 31, column: 8, scope: !13056)
!13067 = !{i64 2279971}
!13068 = !DILocation(line: 0, scope: !13062, inlinedAt: !13066)
!13069 = !DILocation(line: 32, column: 2, scope: !13056)
!13070 = !DILocation(line: 32, column: 2, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !13057, line: 32, column: 2)
!13072 = distinct !DILexicalBlock(scope: !13056, file: !13057, line: 32, column: 2)
!13073 = distinct !{!13073, !13074, !13075}
!13074 = !DILocation(line: 32, column: 2, scope: !13072)
!13075 = !DILocation(line: 34, column: 2, scope: !13072)
!13076 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13057, file: !13057, line: 39, type: !13077, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13079)
!13077 = !DISubroutineType(types: !13078)
!13078 = !{null, !41, !12872}
!13079 = !{!13080, !13081}
!13080 = !DILocalVariable(name: "reason", arg: 1, scope: !13076, file: !13057, line: 39, type: !41)
!13081 = !DILocalVariable(name: "esf", arg: 2, scope: !13076, file: !13057, line: 40, type: !12872)
!13082 = !DILocation(line: 0, scope: !13076)
!13083 = !DILocation(line: 46, column: 2, scope: !13076)
!13084 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13057, file: !13057, line: 81, type: !6225, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13085)
!13085 = !{!13086}
!13086 = !DILocalVariable(name: "reason", arg: 1, scope: !13084, file: !13057, line: 81, type: !41)
!13087 = !DILocation(line: 0, scope: !13084)
!13088 = !DILocation(line: 83, column: 2, scope: !13084)
!13089 = distinct !DISubprogram(name: "z_fatal_error", scope: !13057, file: !13057, line: 96, type: !13077, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13090)
!13090 = !{!13091, !13092, !13093, !13094}
!13091 = !DILocalVariable(name: "reason", arg: 1, scope: !13089, file: !13057, line: 96, type: !41)
!13092 = !DILocalVariable(name: "esf", arg: 2, scope: !13089, file: !13057, line: 96, type: !12872)
!13093 = !DILocalVariable(name: "key", scope: !13089, file: !13057, line: 102, type: !41)
!13094 = !DILocalVariable(name: "thread", scope: !13089, file: !13057, line: 103, type: !12916)
!13095 = !DILocation(line: 0, scope: !13089)
!13096 = !DILocation(line: 55, column: 2, scope: !13062, inlinedAt: !13097)
!13097 = distinct !DILocation(line: 102, column: 21, scope: !13089)
!13098 = !DILocation(line: 0, scope: !13062, inlinedAt: !13097)
!13099 = !DILocation(line: 119, column: 11, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13089, file: !13057, line: 119, column: 6)
!13101 = !DILocation(line: 119, column: 20, scope: !13100)
!13102 = !DILocation(line: 131, column: 2, scope: !13089)
!13103 = !DILocation(line: 151, column: 7, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13105, file: !13057, line: 146, column: 32)
!13105 = distinct !DILexicalBlock(scope: !13089, file: !13057, line: 146, column: 6)
!13106 = !DILocation(line: 151, column: 21, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13104, file: !13057, line: 151, column: 7)
!13108 = !DILocation(line: 104, column: 4, scope: !13089)
!13109 = !DILocalVariable(name: "key", arg: 1, scope: !13110, file: !6214, line: 84, type: !41)
!13110 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13111)
!13111 = !{!13109}
!13112 = !DILocation(line: 0, scope: !13110, inlinedAt: !13113)
!13113 = distinct !DILocation(line: 186, column: 2, scope: !13089)
!13114 = !DILocation(line: 95, column: 2, scope: !13110, inlinedAt: !13113)
!13115 = !{i64 2280788}
!13116 = !DILocation(line: 189, column: 3, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !13057, line: 188, column: 41)
!13118 = distinct !DILexicalBlock(scope: !13089, file: !13057, line: 188, column: 6)
!13119 = !DILocation(line: 191, column: 1, scope: !13089)
!13120 = distinct !DISubprogram(name: "k_current_get", scope: !68, file: !68, line: 530, type: !13121, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !2223)
!13121 = !DISubroutineType(types: !13122)
!13122 = !{!13123}
!13123 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !121, line: 347, baseType: !12916)
!13124 = !DILocation(line: 535, column: 9, scope: !13120)
!13125 = !DILocation(line: 535, column: 2, scope: !13120)
!13126 = distinct !DISubprogram(name: "k_thread_abort", scope: !3588, file: !3588, line: 188, type: !13127, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !13129)
!13127 = !DISubroutineType(types: !13128)
!13128 = !{null, !13123}
!13129 = !{!13130}
!13130 = !DILocalVariable(name: "thread", arg: 1, scope: !13126, file: !3588, line: 188, type: !13123)
!13131 = !DILocation(line: 0, scope: !13126)
!13132 = !DILocation(line: 197, column: 2, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13126, file: !3588, line: 197, column: 2)
!13134 = !{i64 2155061542}
!13135 = !DILocation(line: 198, column: 2, scope: !13126)
!13136 = !DILocation(line: 199, column: 1, scope: !13126)
!13137 = distinct !DISubprogram(name: "z_current_get", scope: !3588, file: !3588, line: 173, type: !13121, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !2223)
!13138 = !DILocation(line: 180, column: 2, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13137, file: !3588, line: 180, column: 2)
!13140 = !{i64 2155061474}
!13141 = !DILocation(line: 181, column: 9, scope: !13137)
!13142 = !DILocation(line: 181, column: 2, scope: !13137)
!13143 = distinct !DISubprogram(name: "z_early_memset", scope: !2022, file: !2022, line: 108, type: !13144, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13146)
!13144 = !DISubroutineType(types: !13145)
!13145 = !{null, !39, !55, !193}
!13146 = !{!13147, !13148, !13149}
!13147 = !DILocalVariable(name: "dst", arg: 1, scope: !13143, file: !2022, line: 108, type: !39)
!13148 = !DILocalVariable(name: "c", arg: 2, scope: !13143, file: !2022, line: 108, type: !55)
!13149 = !DILocalVariable(name: "n", arg: 3, scope: !13143, file: !2022, line: 108, type: !193)
!13150 = !DILocation(line: 0, scope: !13143)
!13151 = !DILocation(line: 110, column: 9, scope: !13143)
!13152 = !DILocation(line: 111, column: 1, scope: !13143)
!13153 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2022, file: !2022, line: 121, type: !13154, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13156)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{null, !39, !13, !193}
!13156 = !{!13157, !13158, !13159}
!13157 = !DILocalVariable(name: "dst", arg: 1, scope: !13153, file: !2022, line: 121, type: !39)
!13158 = !DILocalVariable(name: "src", arg: 2, scope: !13153, file: !2022, line: 121, type: !13)
!13159 = !DILocalVariable(name: "n", arg: 3, scope: !13153, file: !2022, line: 121, type: !193)
!13160 = !DILocation(line: 0, scope: !13153)
!13161 = !DILocation(line: 123, column: 9, scope: !13153)
!13162 = !DILocation(line: 124, column: 1, scope: !13153)
!13163 = distinct !DISubprogram(name: "z_bss_zero", scope: !2022, file: !2022, line: 132, type: !3440, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !2223)
!13164 = !DILocation(line: 143, column: 2, scope: !13163)
!13165 = !DILocation(line: 168, column: 1, scope: !13163)
!13166 = distinct !DISubprogram(name: "z_init_cpu", scope: !2022, file: !2022, line: 372, type: !8319, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13167)
!13167 = !{!13168}
!13168 = !DILocalVariable(name: "id", arg: 1, scope: !13166, file: !2022, line: 372, type: !55)
!13169 = !DILocation(line: 0, scope: !13166)
!13170 = !DILocation(line: 374, column: 2, scope: !13166)
!13171 = !DILocation(line: 375, column: 34, scope: !13166)
!13172 = !DILocation(line: 375, column: 19, scope: !13166)
!13173 = !DILocation(line: 375, column: 31, scope: !13166)
!13174 = !DILocation(line: 376, column: 24, scope: !13166)
!13175 = !DILocation(line: 376, column: 19, scope: !13166)
!13176 = !DILocation(line: 376, column: 22, scope: !13166)
!13177 = !DILocation(line: 378, column: 26, scope: !13166)
!13178 = !DILocation(line: 378, column: 4, scope: !13166)
!13179 = !DILocation(line: 378, column: 50, scope: !13166)
!13180 = !DILocation(line: 377, column: 19, scope: !13166)
!13181 = !DILocation(line: 377, column: 29, scope: !13166)
!13182 = !DILocation(line: 384, column: 1, scope: !13166)
!13183 = distinct !DISubprogram(name: "init_idle_thread", scope: !2022, file: !2022, line: 343, type: !8319, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13184)
!13184 = !{!13185, !13186, !13187, !13190}
!13185 = !DILocalVariable(name: "i", arg: 1, scope: !13183, file: !2022, line: 343, type: !55)
!13186 = !DILocalVariable(name: "thread", scope: !13183, file: !2022, line: 345, type: !2115)
!13187 = !DILocalVariable(name: "stack", scope: !13183, file: !2022, line: 346, type: !13188)
!13188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13189, size: 32)
!13189 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !35, line: 44, baseType: !2232)
!13190 = !DILocalVariable(name: "tname", scope: !13183, file: !2022, line: 358, type: !1297)
!13191 = !DILocation(line: 0, scope: !13183)
!13192 = !DILocation(line: 345, column: 29, scope: !13183)
!13193 = !DILocation(line: 346, column: 28, scope: !13183)
!13194 = !DILocation(line: 362, column: 37, scope: !13183)
!13195 = !DILocation(line: 362, column: 36, scope: !13183)
!13196 = !DILocation(line: 361, column: 2, scope: !13183)
!13197 = !DILocation(line: 365, column: 2, scope: !13183)
!13198 = !DILocation(line: 370, column: 1, scope: !13183)
!13199 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !110, file: !110, line: 331, type: !13200, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13202)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{!1297, !13188}
!13202 = !{!13203}
!13203 = !DILocalVariable(name: "sym", arg: 1, scope: !13199, file: !110, line: 331, type: !13188)
!13204 = !DILocation(line: 0, scope: !13199)
!13205 = !DILocation(line: 333, column: 21, scope: !13199)
!13206 = !DILocation(line: 333, column: 2, scope: !13199)
!13207 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13208, file: !13208, line: 155, type: !13209, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13211)
!13208 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13209 = !DISubroutineType(types: !13210)
!13210 = !{null, !2115}
!13211 = !{!13212}
!13212 = !DILocalVariable(name: "thread", arg: 1, scope: !13207, file: !13208, line: 155, type: !2115)
!13213 = !DILocation(line: 0, scope: !13207)
!13214 = !DILocation(line: 157, column: 15, scope: !13207)
!13215 = !DILocation(line: 157, column: 28, scope: !13207)
!13216 = !DILocation(line: 158, column: 1, scope: !13207)
!13217 = distinct !DISubprogram(name: "z_cstart", scope: !2022, file: !2022, line: 501, type: !3440, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13218)
!13218 = !{!13219}
!13219 = !DILocalVariable(name: "dummy_thread", scope: !13217, file: !2022, line: 518, type: !2116)
!13220 = !DILocation(line: 507, column: 2, scope: !13217)
!13221 = !DILocation(line: 43, column: 14, scope: !13222, inlinedAt: !13226)
!13222 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13223, file: !13223, line: 40, type: !3440, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13224)
!13223 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13224 = !{!13225}
!13225 = !DILocalVariable(name: "msp", scope: !13222, file: !13223, line: 42, type: !40)
!13226 = distinct !DILocation(line: 44, column: 2, scope: !13227, inlinedAt: !13229)
!13227 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13228, file: !13228, line: 42, type: !3440, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !2223)
!13228 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13229 = distinct !DILocation(line: 510, column: 2, scope: !13217)
!13230 = !DILocation(line: 43, column: 3, scope: !13222, inlinedAt: !13226)
!13231 = !DILocation(line: 43, column: 60, scope: !13222, inlinedAt: !13226)
!13232 = !DILocation(line: 0, scope: !13222, inlinedAt: !13226)
!13233 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13234, file: !6483, line: 1153, type: !40)
!13234 = distinct !DISubprogram(name: "__set_MSP", scope: !6483, file: !6483, line: 1153, type: !6574, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13235)
!13235 = !{!13233}
!13236 = !DILocation(line: 0, scope: !13234, inlinedAt: !13237)
!13237 = distinct !DILocation(line: 46, column: 2, scope: !13222, inlinedAt: !13226)
!13238 = !DILocation(line: 1155, column: 3, scope: !13234, inlinedAt: !13237)
!13239 = !{i64 3745910}
!13240 = !DILocation(line: 62, column: 11, scope: !13222, inlinedAt: !13226)
!13241 = !DILocation(line: 102, column: 2, scope: !13242, inlinedAt: !13243)
!13242 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7292, file: !7292, line: 97, type: !3440, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !2223)
!13243 = distinct !DILocation(line: 45, column: 2, scope: !13227, inlinedAt: !13229)
!13244 = !DILocation(line: 108, column: 2, scope: !13242, inlinedAt: !13243)
!13245 = !DILocation(line: 112, column: 2, scope: !13242, inlinedAt: !13243)
!13246 = !DILocation(line: 113, column: 2, scope: !13242, inlinedAt: !13243)
!13247 = !DILocation(line: 114, column: 2, scope: !13242, inlinedAt: !13243)
!13248 = !DILocation(line: 116, column: 2, scope: !13242, inlinedAt: !13243)
!13249 = !DILocation(line: 123, column: 13, scope: !13242, inlinedAt: !13243)
!13250 = !DILocation(line: 46, column: 2, scope: !13227, inlinedAt: !13229)
!13251 = !DILocation(line: 47, column: 2, scope: !13227, inlinedAt: !13229)
!13252 = !DILocation(line: 174, column: 12, scope: !13253, inlinedAt: !13254)
!13253 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7292, file: !7292, line: 169, type: !3440, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !2223)
!13254 = distinct !DILocation(line: 48, column: 2, scope: !13227, inlinedAt: !13229)
!13255 = !DILocation(line: 179, column: 12, scope: !13253, inlinedAt: !13254)
!13256 = !DILocation(line: 50, column: 2, scope: !13227, inlinedAt: !13229)
!13257 = !DILocation(line: 57, column: 2, scope: !13227, inlinedAt: !13229)
!13258 = !DILocation(line: 518, column: 2, scope: !13217)
!13259 = !DILocation(line: 518, column: 18, scope: !13217)
!13260 = !DILocation(line: 520, column: 2, scope: !13217)
!13261 = !DILocation(line: 523, column: 2, scope: !13217)
!13262 = !DILocation(line: 526, column: 2, scope: !13217)
!13263 = !DILocation(line: 527, column: 2, scope: !13217)
!13264 = !DILocation(line: 543, column: 24, scope: !13217)
!13265 = !DILocation(line: 543, column: 2, scope: !13217)
!13266 = !DILocation(line: 0, scope: !2251)
!13267 = !DILocation(line: 246, column: 15, scope: !2269)
!13268 = !DILocation(line: 246, column: 36, scope: !2268)
!13269 = !DILocation(line: 246, column: 2, scope: !2269)
!13270 = !DILocation(line: 247, column: 37, scope: !2267)
!13271 = !DILocation(line: 0, scope: !2267)
!13272 = !DILocation(line: 248, column: 19, scope: !2267)
!13273 = !DILocation(line: 248, column: 12, scope: !2267)
!13274 = !DILocation(line: 250, column: 11, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !2267, file: !2022, line: 250, column: 7)
!13276 = !DILocation(line: 250, column: 7, scope: !2267)
!13277 = !DILocation(line: 254, column: 11, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13279, file: !2022, line: 254, column: 8)
!13279 = distinct !DILexicalBlock(scope: !13275, file: !2022, line: 250, column: 20)
!13280 = !DILocation(line: 254, column: 8, scope: !13279)
!13281 = !DILocation(line: 255, column: 9, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13278, file: !2022, line: 254, column: 17)
!13283 = !DILocation(line: 258, column: 9, scope: !13282)
!13284 = !DILocation(line: 261, column: 28, scope: !13282)
!13285 = !DILocation(line: 261, column: 10, scope: !13282)
!13286 = !DILocation(line: 261, column: 17, scope: !13282)
!13287 = !DILocation(line: 261, column: 26, scope: !13282)
!13288 = !DILocation(line: 262, column: 4, scope: !13282)
!13289 = !DILocation(line: 263, column: 9, scope: !13279)
!13290 = !DILocation(line: 263, column: 16, scope: !13279)
!13291 = !DILocation(line: 263, column: 28, scope: !13279)
!13292 = !DILocation(line: 264, column: 3, scope: !13279)
!13293 = !DILocation(line: 246, column: 60, scope: !2268)
!13294 = distinct !{!13294, !13269, !13295}
!13295 = !DILocation(line: 265, column: 2, scope: !2269)
!13296 = !DILocation(line: 266, column: 1, scope: !2251)
!13297 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !519, file: !519, line: 1814, type: !6517, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13298)
!13298 = !{!13299, !13300}
!13299 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13297, file: !519, line: 1814, type: !923)
!13300 = !DILocalVariable(name: "priority", arg: 2, scope: !13297, file: !519, line: 1814, type: !40)
!13301 = !DILocation(line: 0, scope: !13297)
!13302 = !DILocation(line: 1822, column: 48, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13304, file: !519, line: 1821, column: 3)
!13304 = distinct !DILexicalBlock(scope: !13297, file: !519, line: 1816, column: 7)
!13305 = !DILocation(line: 1822, column: 32, scope: !13303)
!13306 = !DILocation(line: 1822, column: 40, scope: !13303)
!13307 = !DILocation(line: 1822, column: 5, scope: !13303)
!13308 = !DILocation(line: 1822, column: 46, scope: !13303)
!13309 = !DILocation(line: 1824, column: 1, scope: !13297)
!13310 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13228, file: !13228, line: 32, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!13311 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13312, file: !13312, line: 215, type: !13209, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13313)
!13312 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13313 = !{!13314}
!13314 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13311, file: !13312, line: 215, type: !2115)
!13315 = !DILocation(line: 0, scope: !13311)
!13316 = !DILocation(line: 217, column: 21, scope: !13311)
!13317 = !DILocation(line: 217, column: 34, scope: !13311)
!13318 = !DILocation(line: 221, column: 21, scope: !13311)
!13319 = !DILocation(line: 221, column: 34, scope: !13311)
!13320 = !DILocation(line: 223, column: 27, scope: !13311)
!13321 = !DILocation(line: 223, column: 33, scope: !13311)
!13322 = !DILocation(line: 224, column: 27, scope: !13311)
!13323 = !DILocation(line: 224, column: 32, scope: !13311)
!13324 = !DILocation(line: 232, column: 16, scope: !13311)
!13325 = !DILocation(line: 232, column: 30, scope: !13311)
!13326 = !DILocation(line: 239, column: 24, scope: !13311)
!13327 = !DILocation(line: 240, column: 1, scope: !13311)
!13328 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2022, file: !2022, line: 399, type: !13329, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13331)
!13329 = !DISubroutineType(types: !13330)
!13330 = !{!1297}
!13331 = !{!13332}
!13332 = !DILocalVariable(name: "stack_ptr", scope: !13328, file: !2022, line: 401, type: !1297)
!13333 = !DILocation(line: 404, column: 2, scope: !13328)
!13334 = !DILocation(line: 416, column: 24, scope: !13328)
!13335 = !DILocation(line: 418, column: 14, scope: !13328)
!13336 = !DILocation(line: 0, scope: !13328)
!13337 = !DILocation(line: 423, column: 2, scope: !13328)
!13338 = !DILocation(line: 424, column: 2, scope: !13328)
!13339 = !DILocation(line: 426, column: 2, scope: !13328)
!13340 = !DILocation(line: 428, column: 2, scope: !13328)
!13341 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2022, file: !2022, line: 432, type: !13342, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13344)
!13342 = !DISubroutineType(types: !13343)
!13343 = !{null, !1297}
!13344 = !{!13345}
!13345 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13341, file: !2022, line: 432, type: !1297)
!13346 = !DILocation(line: 0, scope: !13341)
!13347 = !DILocation(line: 435, column: 2, scope: !13341)
!13348 = !DILocation(line: 445, column: 2, scope: !13341)
!13349 = distinct !DISubprogram(name: "bg_thread_main", scope: !2022, file: !2022, line: 277, type: !37, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2018, retainedNodes: !13350)
!13350 = !{!13351, !13352, !13353}
!13351 = !DILocalVariable(name: "unused1", arg: 1, scope: !13349, file: !2022, line: 277, type: !39)
!13352 = !DILocalVariable(name: "unused2", arg: 2, scope: !13349, file: !2022, line: 277, type: !39)
!13353 = !DILocalVariable(name: "unused3", arg: 3, scope: !13349, file: !2022, line: 277, type: !39)
!13354 = !DILocation(line: 0, scope: !13349)
!13355 = !DILocation(line: 291, column: 20, scope: !13349)
!13356 = !DILocation(line: 293, column: 2, scope: !13349)
!13357 = !DILocation(line: 297, column: 2, scope: !13349)
!13358 = !DILocation(line: 301, column: 2, scope: !13349)
!13359 = !DILocation(line: 305, column: 2, scope: !13349)
!13360 = !DILocation(line: 307, column: 2, scope: !13349)
!13361 = !DILocation(line: 330, column: 8, scope: !13349)
!13362 = !DILocation(line: 333, column: 34, scope: !13349)
!13363 = !DILocation(line: 339, column: 1, scope: !13349)
!13364 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2280, file: !2280, line: 45, type: !13365, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13373)
!13365 = !DISubroutineType(types: !13366)
!13366 = !{null, !13367, !39}
!13367 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !68, line: 103, baseType: !13368)
!13368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13369, size: 32)
!13369 = !DISubroutineType(types: !13370)
!13370 = !{null, !13371, !39}
!13371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13372, size: 32)
!13372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2285)
!13373 = !{!13374, !13375}
!13374 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13364, file: !2280, line: 45, type: !13367)
!13375 = !DILocalVariable(name: "user_data", arg: 2, scope: !13364, file: !2280, line: 45, type: !39)
!13376 = !DILocation(line: 0, scope: !13364)
!13377 = !DILocation(line: 71, column: 1, scope: !13364)
!13378 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2280, file: !2280, line: 73, type: !13365, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13379)
!13379 = !{!13380, !13381}
!13380 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13378, file: !2280, line: 73, type: !13367)
!13381 = !DILocalVariable(name: "user_data", arg: 2, scope: !13378, file: !2280, line: 73, type: !39)
!13382 = !DILocation(line: 0, scope: !13378)
!13383 = !DILocation(line: 95, column: 1, scope: !13378)
!13384 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2280, file: !2280, line: 97, type: !7293, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !2223)
!13385 = !DILocation(line: 1031, column: 3, scope: !13386, inlinedAt: !13389)
!13386 = distinct !DISubprogram(name: "__get_IPSR", scope: !6483, file: !6483, line: 1027, type: !6564, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13387)
!13387 = !{!13388}
!13388 = !DILocalVariable(name: "result", scope: !13386, file: !6483, line: 1029, type: !40)
!13389 = distinct !DILocation(line: 48, column: 10, scope: !13390, inlinedAt: !13391)
!13390 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7292, file: !7292, line: 46, type: !7293, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !2223)
!13391 = distinct !DILocation(line: 99, column: 9, scope: !13384)
!13392 = !{i64 3751561}
!13393 = !DILocation(line: 0, scope: !13386, inlinedAt: !13389)
!13394 = !DILocation(line: 48, column: 9, scope: !13390, inlinedAt: !13391)
!13395 = !DILocation(line: 99, column: 2, scope: !13384)
!13396 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2280, file: !2280, line: 106, type: !3440, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !2223)
!13397 = !DILocation(line: 108, column: 2, scope: !13396)
!13398 = !DILocation(line: 108, column: 17, scope: !13396)
!13399 = !DILocation(line: 108, column: 30, scope: !13396)
!13400 = !DILocation(line: 109, column: 1, scope: !13396)
!13401 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2280, file: !2280, line: 116, type: !3440, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !2223)
!13402 = !DILocation(line: 118, column: 2, scope: !13401)
!13403 = !DILocation(line: 118, column: 17, scope: !13401)
!13404 = !DILocation(line: 118, column: 30, scope: !13401)
!13405 = !DILocation(line: 119, column: 1, scope: !13401)
!13406 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2280, file: !2280, line: 126, type: !7293, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !2223)
!13407 = !DILocation(line: 128, column: 10, scope: !13406)
!13408 = !DILocation(line: 128, column: 25, scope: !13406)
!13409 = !DILocation(line: 128, column: 38, scope: !13406)
!13410 = !DILocation(line: 128, column: 53, scope: !13406)
!13411 = !DILocation(line: 128, column: 2, scope: !13406)
!13412 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2280, file: !2280, line: 187, type: !13413, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13415)
!13413 = !DISubroutineType(types: !13414)
!13414 = !{!55, !2284, !319}
!13415 = !{!13416, !13417}
!13416 = !DILocalVariable(name: "thread", arg: 1, scope: !13412, file: !2280, line: 187, type: !2284)
!13417 = !DILocalVariable(name: "value", arg: 2, scope: !13412, file: !2280, line: 187, type: !319)
!13418 = !DILocation(line: 0, scope: !13412)
!13419 = !DILocation(line: 206, column: 2, scope: !13412)
!13420 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2280, file: !2280, line: 238, type: !13421, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13423)
!13421 = !DISubroutineType(types: !13422)
!13422 = !{!319, !2284}
!13423 = !{!13424}
!13424 = !DILocalVariable(name: "thread", arg: 1, scope: !13420, file: !2280, line: 238, type: !2284)
!13425 = !DILocation(line: 0, scope: !13420)
!13426 = !DILocation(line: 244, column: 2, scope: !13420)
!13427 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2280, file: !2280, line: 248, type: !13428, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13430)
!13428 = !DISubroutineType(types: !13429)
!13429 = !{!55, !2283, !1297, !193}
!13430 = !{!13431, !13432, !13433}
!13431 = !DILocalVariable(name: "thread", arg: 1, scope: !13427, file: !2280, line: 248, type: !2283)
!13432 = !DILocalVariable(name: "buf", arg: 2, scope: !13427, file: !2280, line: 248, type: !1297)
!13433 = !DILocalVariable(name: "size", arg: 3, scope: !13427, file: !2280, line: 248, type: !193)
!13434 = !DILocation(line: 0, scope: !13427)
!13435 = !DILocation(line: 257, column: 2, scope: !13427)
!13436 = !DILocation(line: 0, scope: !2279)
!13437 = !DILocation(line: 281, column: 11, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !2279, file: !2280, line: 281, column: 6)
!13439 = !DILocation(line: 281, column: 20, scope: !13438)
!13440 = !DILocation(line: 275, column: 45, scope: !2279)
!13441 = !DILocation(line: 285, column: 10, scope: !2279)
!13442 = !DILocation(line: 0, scope: !2402)
!13443 = !DILocation(line: 293, column: 39, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !2402, file: !2280, line: 293, column: 2)
!13445 = !DILocation(line: 293, column: 2, scope: !2402)
!13446 = !DILocation(line: 273, column: 14, scope: !2279)
!13447 = !DILocation(line: 309, column: 2, scope: !2279)
!13448 = !DILocation(line: 309, column: 11, scope: !2279)
!13449 = !DILocation(line: 311, column: 2, scope: !2279)
!13450 = !DILocation(line: 293, column: 26, scope: !13444)
!13451 = !DILocation(line: 294, column: 9, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13444, file: !2280, line: 293, column: 54)
!13453 = !DILocation(line: 295, column: 21, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13452, file: !2280, line: 295, column: 7)
!13455 = !DILocation(line: 295, column: 28, scope: !13454)
!13456 = !DILocation(line: 295, column: 7, scope: !13452)
!13457 = !DILocation(line: 299, column: 25, scope: !13452)
!13458 = !DILocation(line: 299, column: 41, scope: !13452)
!13459 = !DILocation(line: 300, column: 7, scope: !13452)
!13460 = !DILocation(line: 300, column: 26, scope: !13452)
!13461 = !DILocation(line: 299, column: 10, scope: !13452)
!13462 = !DILocation(line: 299, column: 7, scope: !13452)
!13463 = !DILocation(line: 302, column: 16, scope: !13452)
!13464 = !DILocation(line: 304, column: 20, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13452, file: !2280, line: 304, column: 7)
!13466 = !DILocation(line: 304, column: 7, scope: !13452)
!13467 = !DILocation(line: 305, column: 26, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13465, file: !2280, line: 304, column: 26)
!13469 = !DILocation(line: 305, column: 42, scope: !13468)
!13470 = !DILocation(line: 305, column: 11, scope: !13468)
!13471 = !DILocation(line: 305, column: 8, scope: !13468)
!13472 = !DILocation(line: 306, column: 3, scope: !13468)
!13473 = !DILocation(line: 293, column: 50, scope: !13444)
!13474 = !DILocation(line: 312, column: 1, scope: !2279)
!13475 = distinct !DISubprogram(name: "copy_bytes", scope: !2280, file: !2280, line: 261, type: !13476, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13478)
!13476 = !DISubroutineType(types: !13477)
!13477 = !{!193, !1297, !193, !319, !193}
!13478 = !{!13479, !13480, !13481, !13482, !13483}
!13479 = !DILocalVariable(name: "dest", arg: 1, scope: !13475, file: !2280, line: 261, type: !1297)
!13480 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13475, file: !2280, line: 261, type: !193)
!13481 = !DILocalVariable(name: "src", arg: 3, scope: !13475, file: !2280, line: 261, type: !319)
!13482 = !DILocalVariable(name: "src_size", arg: 4, scope: !13475, file: !2280, line: 261, type: !193)
!13483 = !DILocalVariable(name: "bytes_to_copy", scope: !13475, file: !2280, line: 263, type: !193)
!13484 = !DILocation(line: 0, scope: !13475)
!13485 = !DILocation(line: 265, column: 18, scope: !13475)
!13486 = !DILocation(line: 266, column: 2, scope: !13475)
!13487 = !DILocation(line: 268, column: 2, scope: !13475)
!13488 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2280, file: !2280, line: 383, type: !13489, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13491)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{null, !2284}
!13491 = !{!13492}
!13492 = !DILocalVariable(name: "thread", arg: 1, scope: !13488, file: !2280, line: 383, type: !2284)
!13493 = !DILocation(line: 0, scope: !13488)
!13494 = !DILocation(line: 387, column: 2, scope: !13488)
!13495 = !DILocation(line: 388, column: 1, scope: !13488)
!13496 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2280, file: !2280, line: 528, type: !13497, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13504)
!13497 = !DISubroutineType(types: !13498)
!13498 = !{!1297, !2284, !13499, !193, !34, !39, !39, !39, !55, !40, !319}
!13499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13500, size: 32)
!13500 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !35, line: 44, baseType: !13501)
!13501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !110, line: 47, size: 8, elements: !13502)
!13502 = !{!13503}
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13501, file: !110, line: 48, baseType: !113, size: 8)
!13504 = !{!13505, !13506, !13507, !13508, !13509, !13510, !13511, !13512, !13513, !13514, !13515}
!13505 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13496, file: !2280, line: 528, type: !2284)
!13506 = !DILocalVariable(name: "stack", arg: 2, scope: !13496, file: !2280, line: 529, type: !13499)
!13507 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13496, file: !2280, line: 529, type: !193)
!13508 = !DILocalVariable(name: "entry", arg: 4, scope: !13496, file: !2280, line: 530, type: !34)
!13509 = !DILocalVariable(name: "p1", arg: 5, scope: !13496, file: !2280, line: 531, type: !39)
!13510 = !DILocalVariable(name: "p2", arg: 6, scope: !13496, file: !2280, line: 531, type: !39)
!13511 = !DILocalVariable(name: "p3", arg: 7, scope: !13496, file: !2280, line: 531, type: !39)
!13512 = !DILocalVariable(name: "prio", arg: 8, scope: !13496, file: !2280, line: 532, type: !55)
!13513 = !DILocalVariable(name: "options", arg: 9, scope: !13496, file: !2280, line: 532, type: !40)
!13514 = !DILocalVariable(name: "name", arg: 10, scope: !13496, file: !2280, line: 532, type: !319)
!13515 = !DILocalVariable(name: "stack_ptr", scope: !13496, file: !2280, line: 534, type: !1297)
!13516 = !DILocation(line: 0, scope: !13496)
!13517 = !DILocation(line: 550, column: 28, scope: !13496)
!13518 = !DILocation(line: 550, column: 2, scope: !13496)
!13519 = !DILocation(line: 553, column: 34, scope: !13496)
!13520 = !DILocation(line: 553, column: 2, scope: !13496)
!13521 = !DILocation(line: 554, column: 14, scope: !13496)
!13522 = !DILocation(line: 564, column: 2, scope: !13496)
!13523 = !DILocation(line: 567, column: 14, scope: !13496)
!13524 = !DILocation(line: 567, column: 24, scope: !13496)
!13525 = !DILocation(line: 612, column: 7, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13496, file: !2280, line: 612, column: 6)
!13527 = !DILocation(line: 612, column: 6, scope: !13496)
!13528 = !DILocation(line: 627, column: 40, scope: !13496)
!13529 = !DILocation(line: 637, column: 2, scope: !13496)
!13530 = !DILocation(line: 613, column: 15, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13526, file: !2280, line: 612, column: 17)
!13532 = !DILocation(line: 613, column: 29, scope: !13531)
!13533 = !DILocation(line: 638, column: 1, scope: !13496)
!13534 = distinct !DISubprogram(name: "z_waitq_init", scope: !13535, file: !13535, line: 47, type: !13536, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13538)
!13535 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13536 = !DISubroutineType(types: !13537)
!13537 = !{null, !2315}
!13538 = !{!13539}
!13539 = !DILocalVariable(name: "w", arg: 1, scope: !13534, file: !13535, line: 47, type: !2315)
!13540 = !DILocation(line: 0, scope: !13534)
!13541 = !DILocation(line: 49, column: 21, scope: !13534)
!13542 = !DILocation(line: 49, column: 2, scope: !13534)
!13543 = !DILocation(line: 50, column: 1, scope: !13534)
!13544 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2280, file: !2280, line: 791, type: !13545, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13548)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{null, !13547, !55, !40, !41}
!13547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!13548 = !{!13549, !13550, !13551, !13552}
!13549 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13544, file: !2280, line: 791, type: !13547)
!13550 = !DILocalVariable(name: "priority", arg: 2, scope: !13544, file: !2280, line: 791, type: !55)
!13551 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13544, file: !2280, line: 792, type: !40)
!13552 = !DILocalVariable(name: "options", arg: 4, scope: !13544, file: !2280, line: 792, type: !41)
!13553 = !DILocation(line: 0, scope: !13544)
!13554 = !DILocation(line: 795, column: 15, scope: !13544)
!13555 = !DILocation(line: 795, column: 25, scope: !13544)
!13556 = !DILocation(line: 796, column: 30, scope: !13544)
!13557 = !DILocation(line: 796, column: 15, scope: !13544)
!13558 = !DILocation(line: 796, column: 28, scope: !13544)
!13559 = !DILocation(line: 797, column: 30, scope: !13544)
!13560 = !DILocation(line: 797, column: 15, scope: !13544)
!13561 = !DILocation(line: 797, column: 28, scope: !13544)
!13562 = !DILocation(line: 799, column: 22, scope: !13544)
!13563 = !DILocation(line: 799, column: 15, scope: !13544)
!13564 = !DILocation(line: 799, column: 20, scope: !13544)
!13565 = !DILocation(line: 801, column: 15, scope: !13544)
!13566 = !DILocation(line: 801, column: 28, scope: !13544)
!13567 = !DILocation(line: 814, column: 2, scope: !13544)
!13568 = !DILocation(line: 815, column: 1, scope: !13544)
!13569 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2280, file: !2280, line: 449, type: !13570, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13572)
!13570 = !DISubroutineType(types: !13571)
!13571 = !{!1297, !2284, !13499, !193}
!13572 = !{!13573, !13574, !13575, !13576, !13577, !13578, !13579, !13580}
!13573 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13569, file: !2280, line: 449, type: !2284)
!13574 = !DILocalVariable(name: "stack", arg: 2, scope: !13569, file: !2280, line: 450, type: !13499)
!13575 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13569, file: !2280, line: 450, type: !193)
!13576 = !DILocalVariable(name: "stack_obj_size", scope: !13569, file: !2280, line: 452, type: !193)
!13577 = !DILocalVariable(name: "stack_buf_size", scope: !13569, file: !2280, line: 452, type: !193)
!13578 = !DILocalVariable(name: "stack_ptr", scope: !13569, file: !2280, line: 453, type: !1297)
!13579 = !DILocalVariable(name: "stack_buf_start", scope: !13569, file: !2280, line: 453, type: !1297)
!13580 = !DILocalVariable(name: "delta", scope: !13569, file: !2280, line: 454, type: !193)
!13581 = !DILocation(line: 0, scope: !13569)
!13582 = !DILocation(line: 465, column: 20, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13569, file: !2280, line: 463, column: 2)
!13584 = !DILocation(line: 466, column: 21, scope: !13583)
!13585 = !DILocation(line: 473, column: 28, scope: !13569)
!13586 = !DILocation(line: 514, column: 33, scope: !13569)
!13587 = !DILocation(line: 514, column: 25, scope: !13569)
!13588 = !DILocation(line: 514, column: 31, scope: !13569)
!13589 = !DILocation(line: 515, column: 25, scope: !13569)
!13590 = !DILocation(line: 515, column: 30, scope: !13569)
!13591 = !DILocation(line: 516, column: 25, scope: !13569)
!13592 = !DILocation(line: 516, column: 31, scope: !13569)
!13593 = !DILocation(line: 520, column: 2, scope: !13569)
!13594 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !110, file: !110, line: 331, type: !13595, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13597)
!13595 = !DISubroutineType(types: !13596)
!13596 = !{!1297, !13499}
!13597 = !{!13598}
!13598 = !DILocalVariable(name: "sym", arg: 1, scope: !13594, file: !110, line: 331, type: !13499)
!13599 = !DILocation(line: 0, scope: !13594)
!13600 = !DILocation(line: 333, column: 21, scope: !13594)
!13601 = !DILocation(line: 333, column: 2, scope: !13594)
!13602 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13603, file: !13603, line: 40, type: !13604, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13606)
!13603 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13604 = !DISubroutineType(types: !13605)
!13605 = !{null, !13547}
!13606 = !{!13607}
!13607 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13602, file: !13603, line: 40, type: !13547)
!13608 = !DILocation(line: 0, scope: !13602)
!13609 = !DILocation(line: 42, column: 31, scope: !13602)
!13610 = !DILocation(line: 42, column: 2, scope: !13602)
!13611 = !DILocation(line: 43, column: 1, scope: !13602)
!13612 = distinct !DISubprogram(name: "z_init_timeout", scope: !13603, file: !13603, line: 25, type: !2341, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13613)
!13613 = !{!13614}
!13614 = !DILocalVariable(name: "to", arg: 1, scope: !13612, file: !13603, line: 25, type: !2343)
!13615 = !DILocation(line: 0, scope: !13612)
!13616 = !DILocation(line: 27, column: 22, scope: !13612)
!13617 = !DILocation(line: 27, column: 2, scope: !13612)
!13618 = !DILocation(line: 28, column: 1, scope: !13612)
!13619 = distinct !DISubprogram(name: "sys_dnode_init", scope: !77, file: !77, line: 211, type: !13620, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13622)
!13620 = !DISubroutineType(types: !13621)
!13621 = !{null, !2389}
!13622 = !{!13623}
!13623 = !DILocalVariable(name: "node", arg: 1, scope: !13619, file: !77, line: 211, type: !2389)
!13624 = !DILocation(line: 0, scope: !13619)
!13625 = !DILocation(line: 213, column: 8, scope: !13619)
!13626 = !DILocation(line: 213, column: 13, scope: !13619)
!13627 = !DILocation(line: 214, column: 8, scope: !13619)
!13628 = !DILocation(line: 214, column: 13, scope: !13619)
!13629 = !DILocation(line: 215, column: 1, scope: !13619)
!13630 = distinct !DISubprogram(name: "sys_dlist_init", scope: !77, file: !77, line: 197, type: !13631, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13634)
!13631 = !DISubroutineType(types: !13632)
!13632 = !{null, !13633}
!13633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!13634 = !{!13635}
!13635 = !DILocalVariable(name: "list", arg: 1, scope: !13630, file: !77, line: 197, type: !13633)
!13636 = !DILocation(line: 0, scope: !13630)
!13637 = !DILocation(line: 199, column: 8, scope: !13630)
!13638 = !DILocation(line: 199, column: 13, scope: !13630)
!13639 = !DILocation(line: 200, column: 8, scope: !13630)
!13640 = !DILocation(line: 200, column: 13, scope: !13630)
!13641 = !DILocation(line: 201, column: 1, scope: !13630)
!13642 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2280, file: !2280, line: 641, type: !13643, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13649)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{!2283, !2284, !13499, !193, !34, !39, !39, !39, !55, !40, !13645}
!13645 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !13646)
!13646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, elements: !13647)
!13647 = !{!13648}
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13646, file: !31, line: 66, baseType: !30, size: 64)
!13649 = !{!13650, !13651, !13652, !13653, !13654, !13655, !13656, !13657, !13658, !13659}
!13650 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13642, file: !2280, line: 641, type: !2284)
!13651 = !DILocalVariable(name: "stack", arg: 2, scope: !13642, file: !2280, line: 642, type: !13499)
!13652 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13642, file: !2280, line: 643, type: !193)
!13653 = !DILocalVariable(name: "entry", arg: 4, scope: !13642, file: !2280, line: 643, type: !34)
!13654 = !DILocalVariable(name: "p1", arg: 5, scope: !13642, file: !2280, line: 644, type: !39)
!13655 = !DILocalVariable(name: "p2", arg: 6, scope: !13642, file: !2280, line: 644, type: !39)
!13656 = !DILocalVariable(name: "p3", arg: 7, scope: !13642, file: !2280, line: 644, type: !39)
!13657 = !DILocalVariable(name: "prio", arg: 8, scope: !13642, file: !2280, line: 645, type: !55)
!13658 = !DILocalVariable(name: "options", arg: 9, scope: !13642, file: !2280, line: 645, type: !40)
!13659 = !DILocalVariable(name: "delay", arg: 10, scope: !13642, file: !2280, line: 645, type: !13645)
!13660 = !DILocation(line: 0, scope: !13642)
!13661 = !DILocation(line: 649, column: 2, scope: !13642)
!13662 = !DILocation(line: 652, column: 7, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13642, file: !2280, line: 652, column: 6)
!13664 = !DILocation(line: 652, column: 6, scope: !13642)
!13665 = !DILocation(line: 653, column: 3, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13663, file: !2280, line: 652, column: 39)
!13667 = !DILocation(line: 654, column: 2, scope: !13666)
!13668 = !DILocation(line: 656, column: 2, scope: !13642)
!13669 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2280, file: !2280, line: 401, type: !13670, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13672)
!13670 = !DISubroutineType(types: !13671)
!13671 = !{null, !2284, !13645}
!13672 = !{!13673, !13674}
!13673 = !DILocalVariable(name: "thread", arg: 1, scope: !13669, file: !2280, line: 401, type: !2284)
!13674 = !DILocalVariable(name: "delay", arg: 2, scope: !13669, file: !2280, line: 401, type: !13645)
!13675 = !DILocation(line: 0, scope: !13669)
!13676 = !DILocation(line: 404, column: 6, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13669, file: !2280, line: 404, column: 6)
!13678 = !DILocation(line: 404, column: 6, scope: !13669)
!13679 = !DILocation(line: 405, column: 3, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13677, file: !2280, line: 404, column: 38)
!13681 = !DILocation(line: 406, column: 2, scope: !13680)
!13682 = !DILocation(line: 407, column: 3, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13677, file: !2280, line: 406, column: 9)
!13684 = !DILocation(line: 413, column: 1, scope: !13669)
!13685 = distinct !DISubprogram(name: "k_thread_start", scope: !3588, file: !3588, line: 205, type: !13686, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13688)
!13686 = !DISubroutineType(types: !13687)
!13687 = !{null, !2283}
!13688 = !{!13689}
!13689 = !DILocalVariable(name: "thread", arg: 1, scope: !13685, file: !3588, line: 205, type: !2283)
!13690 = !DILocation(line: 0, scope: !13685)
!13691 = !DILocation(line: 214, column: 2, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13685, file: !3588, line: 214, column: 2)
!13693 = !{i64 2155086766}
!13694 = !DILocation(line: 215, column: 2, scope: !13685)
!13695 = !DILocation(line: 216, column: 1, scope: !13685)
!13696 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13603, file: !13603, line: 47, type: !13670, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13697)
!13697 = !{!13698, !13699}
!13698 = !DILocalVariable(name: "thread", arg: 1, scope: !13696, file: !13603, line: 47, type: !2284)
!13699 = !DILocalVariable(name: "ticks", arg: 2, scope: !13696, file: !13603, line: 47, type: !13645)
!13700 = !DILocation(line: 0, scope: !13696)
!13701 = !DILocation(line: 49, column: 30, scope: !13696)
!13702 = !DILocation(line: 49, column: 2, scope: !13696)
!13703 = !DILocation(line: 50, column: 1, scope: !13696)
!13704 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2280, file: !2280, line: 748, type: !3440, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13705)
!13705 = !{!13706, !13723}
!13706 = !DILocalVariable(name: "thread_data", scope: !13707, file: !2280, line: 750, type: !13708)
!13707 = distinct !DILexicalBlock(scope: !13704, file: !2280, line: 750, column: 2)
!13708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13709, size: 32)
!13709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !68, line: 620, size: 384, elements: !13710)
!13710 = !{!13711, !13712, !13713, !13714, !13715, !13716, !13717, !13718, !13719, !13720, !13721, !13722}
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13709, file: !68, line: 621, baseType: !2284, size: 32)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13709, file: !68, line: 622, baseType: !13499, size: 32, offset: 32)
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13709, file: !68, line: 623, baseType: !41, size: 32, offset: 64)
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13709, file: !68, line: 624, baseType: !34, size: 32, offset: 96)
!13715 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13709, file: !68, line: 625, baseType: !39, size: 32, offset: 128)
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13709, file: !68, line: 626, baseType: !39, size: 32, offset: 160)
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13709, file: !68, line: 627, baseType: !39, size: 32, offset: 192)
!13718 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13709, file: !68, line: 628, baseType: !55, size: 32, offset: 224)
!13719 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13709, file: !68, line: 629, baseType: !40, size: 32, offset: 256)
!13720 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13709, file: !68, line: 630, baseType: !897, size: 32, offset: 288)
!13721 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13709, file: !68, line: 631, baseType: !6258, size: 32, offset: 320)
!13722 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13709, file: !68, line: 632, baseType: !319, size: 32, offset: 352)
!13723 = !DILocalVariable(name: "thread_data", scope: !13724, file: !2280, line: 781, type: !13708)
!13724 = distinct !DILexicalBlock(scope: !13704, file: !2280, line: 781, column: 2)
!13725 = !DILocation(line: 0, scope: !13707)
!13726 = !DILocation(line: 750, column: 2, scope: !13707)
!13727 = !DILocation(line: 780, column: 2, scope: !13704)
!13728 = !DILocation(line: 0, scope: !13724)
!13729 = !DILocation(line: 781, column: 2, scope: !13724)
!13730 = !DILocation(line: 752, column: 17, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13732, file: !2280, line: 750, column: 38)
!13732 = distinct !DILexicalBlock(scope: !13707, file: !2280, line: 750, column: 2)
!13733 = !DILocation(line: 753, column: 17, scope: !13731)
!13734 = !DILocation(line: 754, column: 17, scope: !13731)
!13735 = !DILocation(line: 755, column: 17, scope: !13731)
!13736 = !DILocation(line: 756, column: 17, scope: !13731)
!13737 = !DILocation(line: 757, column: 17, scope: !13731)
!13738 = !DILocation(line: 758, column: 17, scope: !13731)
!13739 = !DILocation(line: 759, column: 17, scope: !13731)
!13740 = !DILocation(line: 760, column: 17, scope: !13731)
!13741 = !DILocation(line: 751, column: 3, scope: !13731)
!13742 = !DILocation(line: 763, column: 16, scope: !13731)
!13743 = !DILocation(line: 763, column: 29, scope: !13731)
!13744 = !DILocation(line: 763, column: 39, scope: !13731)
!13745 = !DILocation(line: 750, column: 2, scope: !13732)
!13746 = !DILocation(line: 750, column: 2, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13732, file: !2280, line: 750, column: 2)
!13748 = distinct !{!13748, !13726, !13749}
!13749 = !DILocation(line: 764, column: 2, scope: !13707)
!13750 = !DILocation(line: 787, column: 2, scope: !13704)
!13751 = !DILocation(line: 788, column: 1, scope: !13704)
!13752 = !DILocation(line: 782, column: 20, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13754, file: !2280, line: 782, column: 7)
!13754 = distinct !DILexicalBlock(scope: !13755, file: !2280, line: 781, column: 38)
!13755 = distinct !DILexicalBlock(scope: !13724, file: !2280, line: 781, column: 2)
!13756 = !DILocation(line: 782, column: 31, scope: !13753)
!13757 = !DILocation(line: 782, column: 7, scope: !13754)
!13758 = !DILocation(line: 783, column: 37, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13753, file: !2280, line: 782, column: 51)
!13760 = !DILocation(line: 784, column: 10, scope: !13759)
!13761 = !DILocation(line: 783, column: 4, scope: !13759)
!13762 = !DILocation(line: 785, column: 3, scope: !13759)
!13763 = !DILocation(line: 781, column: 2, scope: !13755)
!13764 = !DILocation(line: 781, column: 2, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13755, file: !2280, line: 781, column: 2)
!13766 = distinct !{!13766, !13729, !13767}
!13767 = !DILocation(line: 786, column: 2, scope: !13724)
!13768 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3601, file: !3601, line: 403, type: !3602, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13769)
!13769 = !{!13770}
!13770 = !DILocalVariable(name: "t", arg: 1, scope: !13768, file: !3601, line: 403, type: !42)
!13771 = !DILocation(line: 0, scope: !13768)
!13772 = !DILocalVariable(name: "t", arg: 1, scope: !13773, file: !3601, line: 102, type: !42)
!13773 = distinct !DISubprogram(name: "z_tmcvt", scope: !3601, file: !3601, line: 102, type: !13774, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13776)
!13774 = !DISubroutineType(types: !13775)
!13775 = !{!42, !42, !40, !40, !329, !329, !329, !329}
!13776 = !{!13772, !13777, !13778, !13779, !13780, !13781, !13782, !13783, !13784, !13785, !13786}
!13777 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13773, file: !3601, line: 102, type: !40)
!13778 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13773, file: !3601, line: 103, type: !40)
!13779 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13773, file: !3601, line: 103, type: !329)
!13780 = !DILocalVariable(name: "result32", arg: 5, scope: !13773, file: !3601, line: 104, type: !329)
!13781 = !DILocalVariable(name: "round_up", arg: 6, scope: !13773, file: !3601, line: 104, type: !329)
!13782 = !DILocalVariable(name: "round_off", arg: 7, scope: !13773, file: !3601, line: 105, type: !329)
!13783 = !DILocalVariable(name: "mul_ratio", scope: !13773, file: !3601, line: 107, type: !329)
!13784 = !DILocalVariable(name: "div_ratio", scope: !13773, file: !3601, line: 109, type: !329)
!13785 = !DILocalVariable(name: "off", scope: !13773, file: !3601, line: 116, type: !42)
!13786 = !DILocalVariable(name: "rdivisor", scope: !13787, file: !3601, line: 119, type: !40)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !3601, line: 118, column: 18)
!13788 = distinct !DILexicalBlock(scope: !13773, file: !3601, line: 118, column: 6)
!13789 = !DILocation(line: 0, scope: !13773, inlinedAt: !13790)
!13790 = distinct !DILocation(line: 406, column: 9, scope: !13768)
!13791 = !DILocation(line: 145, column: 13, scope: !13792, inlinedAt: !13790)
!13792 = distinct !DILexicalBlock(scope: !13793, file: !3601, line: 144, column: 10)
!13793 = distinct !DILexicalBlock(scope: !13794, file: !3601, line: 142, column: 7)
!13794 = distinct !DILexicalBlock(scope: !13795, file: !3601, line: 141, column: 24)
!13795 = distinct !DILexicalBlock(scope: !13796, file: !3601, line: 141, column: 13)
!13796 = distinct !DILexicalBlock(scope: !13773, file: !3601, line: 134, column: 6)
!13797 = !DILocation(line: 406, column: 2, scope: !13768)
!13798 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2280, file: !2280, line: 817, type: !3967, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13799)
!13799 = !{!13800, !13801, !13802, !13803}
!13800 = !DILocalVariable(name: "entry", arg: 1, scope: !13798, file: !2280, line: 817, type: !34)
!13801 = !DILocalVariable(name: "p1", arg: 2, scope: !13798, file: !2280, line: 818, type: !39)
!13802 = !DILocalVariable(name: "p2", arg: 3, scope: !13798, file: !2280, line: 818, type: !39)
!13803 = !DILocalVariable(name: "p3", arg: 4, scope: !13798, file: !2280, line: 818, type: !39)
!13804 = !DILocation(line: 0, scope: !13798)
!13805 = !DILocation(line: 822, column: 2, scope: !13798)
!13806 = !DILocation(line: 822, column: 17, scope: !13798)
!13807 = !DILocation(line: 822, column: 30, scope: !13798)
!13808 = !DILocation(line: 823, column: 2, scope: !13798)
!13809 = !DILocation(line: 845, column: 2, scope: !13798)
!13810 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2280, file: !2280, line: 888, type: !13811, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13813)
!13811 = !DISubroutineType(types: !13812)
!13812 = !{!55, !2284}
!13813 = !{!13814}
!13814 = !DILocalVariable(name: "thread", arg: 1, scope: !13810, file: !2280, line: 888, type: !2284)
!13815 = !DILocation(line: 0, scope: !13810)
!13816 = !DILocation(line: 893, column: 2, scope: !13810)
!13817 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2280, file: !2280, line: 897, type: !13818, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13820)
!13818 = !DISubroutineType(types: !13819)
!13819 = !{!55, !2284, !41}
!13820 = !{!13821, !13822}
!13821 = !DILocalVariable(name: "thread", arg: 1, scope: !13817, file: !2280, line: 897, type: !2284)
!13822 = !DILocalVariable(name: "options", arg: 2, scope: !13817, file: !2280, line: 897, type: !41)
!13823 = !DILocation(line: 0, scope: !13817)
!13824 = !DILocation(line: 902, column: 2, scope: !13817)
!13825 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2280, file: !2280, line: 1072, type: !13826, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13831)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{!55, !2283, !13828}
!13828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13829, size: 32)
!13829 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !121, line: 234, baseType: !13830)
!13830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !121, line: 192, elements: !2223)
!13831 = !{!13832, !13833}
!13832 = !DILocalVariable(name: "thread", arg: 1, scope: !13825, file: !2280, line: 1072, type: !2283)
!13833 = !DILocalVariable(name: "stats", arg: 2, scope: !13825, file: !2280, line: 1073, type: !13828)
!13834 = !DILocation(line: 0, scope: !13825)
!13835 = !DILocation(line: 1075, column: 14, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13825, file: !2280, line: 1075, column: 6)
!13837 = !DILocation(line: 1075, column: 23, scope: !13836)
!13838 = !DILocation(line: 1086, column: 1, scope: !13825)
!13839 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2280, file: !2280, line: 1088, type: !13840, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !13842)
!13840 = !DISubroutineType(types: !13841)
!13841 = !{!55, !13828}
!13842 = !{!13843}
!13843 = !DILocalVariable(name: "stats", arg: 1, scope: !13839, file: !2280, line: 1088, type: !13828)
!13844 = !DILocation(line: 0, scope: !13839)
!13845 = !DILocation(line: 1094, column: 12, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13839, file: !2280, line: 1094, column: 6)
!13847 = !DILocation(line: 1120, column: 1, scope: !13839)
!13848 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13849, file: !13849, line: 20, type: !3440, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !2223)
!13849 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13850 = !DILocation(line: 30, column: 2, scope: !13848)
!13851 = !DILocation(line: 31, column: 1, scope: !13848)
!13852 = distinct !DISubprogram(name: "idle", scope: !13849, file: !13849, line: 33, type: !37, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !13853)
!13853 = !{!13854, !13855, !13856}
!13854 = !DILocalVariable(name: "unused1", arg: 1, scope: !13852, file: !13849, line: 33, type: !39)
!13855 = !DILocalVariable(name: "unused2", arg: 2, scope: !13852, file: !13849, line: 33, type: !39)
!13856 = !DILocalVariable(name: "unused3", arg: 3, scope: !13852, file: !13849, line: 33, type: !39)
!13857 = !DILocation(line: 0, scope: !13852)
!13858 = !DILocation(line: 41, column: 2, scope: !13852)
!13859 = !DILocation(line: 55, column: 2, scope: !13860, inlinedAt: !13864)
!13860 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !13861)
!13861 = !{!13862, !13863}
!13862 = !DILocalVariable(name: "key", scope: !13860, file: !6214, line: 44, type: !41)
!13863 = !DILocalVariable(name: "tmp", scope: !13860, file: !6214, line: 53, type: !41)
!13864 = distinct !DILocation(line: 62, column: 10, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13852, file: !13849, line: 41, column: 15)
!13866 = !{i64 2278313}
!13867 = !DILocation(line: 0, scope: !13860, inlinedAt: !13864)
!13868 = !DILocation(line: 86, column: 3, scope: !13865)
!13869 = distinct !{!13869, !13858, !13870}
!13870 = !DILocation(line: 105, column: 2, scope: !13852)
!13871 = distinct !DISubprogram(name: "k_cpu_idle", scope: !68, file: !68, line: 5627, type: !3440, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3421, retainedNodes: !2223)
!13872 = !DILocation(line: 5629, column: 2, scope: !13871)
!13873 = !DILocation(line: 5630, column: 1, scope: !13871)
!13874 = !DISubprogram(name: "arch_cpu_idle", scope: !35, file: !35, line: 167, type: !3440, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!13875 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2513, file: !2513, line: 49, type: !13876, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13885)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{!55, !13878}
!13878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13879, size: 32)
!13879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !68, line: 2720, size: 160, elements: !13880)
!13880 = !{!13881, !13882, !13883, !13884}
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13879, file: !68, line: 2722, baseType: !2442, size: 64)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13879, file: !68, line: 2724, baseType: !2424, size: 32, offset: 64)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13879, file: !68, line: 2727, baseType: !40, size: 32, offset: 96)
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13879, file: !68, line: 2730, baseType: !55, size: 32, offset: 128)
!13885 = !{!13886}
!13886 = !DILocalVariable(name: "mutex", arg: 1, scope: !13875, file: !2513, line: 49, type: !13878)
!13887 = !DILocation(line: 0, scope: !13875)
!13888 = !DILocation(line: 51, column: 9, scope: !13875)
!13889 = !DILocation(line: 51, column: 15, scope: !13875)
!13890 = !DILocation(line: 52, column: 9, scope: !13875)
!13891 = !DILocation(line: 52, column: 20, scope: !13875)
!13892 = !DILocation(line: 54, column: 23, scope: !13875)
!13893 = !DILocation(line: 54, column: 2, scope: !13875)
!13894 = !DILocation(line: 60, column: 2, scope: !13875)
!13895 = distinct !DISubprogram(name: "z_waitq_init", scope: !13535, file: !13535, line: 47, type: !13896, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13898)
!13896 = !DISubroutineType(types: !13897)
!13897 = !{null, !2441}
!13898 = !{!13899}
!13899 = !DILocalVariable(name: "w", arg: 1, scope: !13895, file: !13535, line: 47, type: !2441)
!13900 = !DILocation(line: 0, scope: !13895)
!13901 = !DILocation(line: 49, column: 21, scope: !13895)
!13902 = !DILocation(line: 49, column: 2, scope: !13895)
!13903 = !DILocation(line: 50, column: 1, scope: !13895)
!13904 = distinct !DISubprogram(name: "sys_dlist_init", scope: !77, file: !77, line: 197, type: !13905, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13908)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{null, !13907}
!13907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!13908 = !{!13909}
!13909 = !DILocalVariable(name: "list", arg: 1, scope: !13904, file: !77, line: 197, type: !13907)
!13910 = !DILocation(line: 0, scope: !13904)
!13911 = !DILocation(line: 199, column: 8, scope: !13904)
!13912 = !DILocation(line: 199, column: 13, scope: !13904)
!13913 = !DILocation(line: 200, column: 8, scope: !13904)
!13914 = !DILocation(line: 200, column: 13, scope: !13904)
!13915 = !DILocation(line: 201, column: 1, scope: !13904)
!13916 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2513, file: !2513, line: 95, type: !13917, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13923)
!13917 = !DISubroutineType(types: !13918)
!13918 = !{!55, !13878, !13919}
!13919 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !13920)
!13920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, elements: !13921)
!13921 = !{!13922}
!13922 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13920, file: !31, line: 66, baseType: !30, size: 64)
!13923 = !{!13924, !13925, !13926, !13927, !13932, !13933, !13934}
!13924 = !DILocalVariable(name: "mutex", arg: 1, scope: !13916, file: !2513, line: 95, type: !13878)
!13925 = !DILocalVariable(name: "timeout", arg: 2, scope: !13916, file: !2513, line: 95, type: !13919)
!13926 = !DILocalVariable(name: "new_prio", scope: !13916, file: !2513, line: 97, type: !55)
!13927 = !DILocalVariable(name: "key", scope: !13916, file: !2513, line: 98, type: !13928)
!13928 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !483, line: 106, baseType: !13929)
!13929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !483, line: 32, size: 32, elements: !13930)
!13930 = !{!13931}
!13931 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13929, file: !483, line: 33, baseType: !55, size: 32)
!13932 = !DILocalVariable(name: "resched", scope: !13916, file: !2513, line: 99, type: !329)
!13933 = !DILocalVariable(name: "got_mutex", scope: !13916, file: !2513, line: 146, type: !55)
!13934 = !DILocalVariable(name: "waiter", scope: !13935, file: !2513, line: 169, type: !2424)
!13935 = distinct !DILexicalBlock(scope: !13936, file: !2513, line: 168, column: 36)
!13936 = distinct !DILexicalBlock(scope: !13916, file: !2513, line: 168, column: 6)
!13937 = !DILocation(line: 0, scope: !13916)
!13938 = !DILocalVariable(name: "l", arg: 1, scope: !13939, file: !483, line: 136, type: !13942)
!13939 = distinct !DISubprogram(name: "k_spin_lock", scope: !483, file: !483, line: 136, type: !13940, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13943)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{!13928, !13942}
!13942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!13943 = !{!13938, !13944}
!13944 = !DILocalVariable(name: "k", scope: !13939, file: !483, line: 139, type: !13928)
!13945 = !DILocation(line: 0, scope: !13939, inlinedAt: !13946)
!13946 = distinct !DILocation(line: 105, column: 8, scope: !13916)
!13947 = !DILocation(line: 55, column: 2, scope: !13948, inlinedAt: !13952)
!13948 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13949)
!13949 = !{!13950, !13951}
!13950 = !DILocalVariable(name: "key", scope: !13948, file: !6214, line: 44, type: !41)
!13951 = !DILocalVariable(name: "tmp", scope: !13948, file: !6214, line: 53, type: !41)
!13952 = distinct !DILocation(line: 145, column: 10, scope: !13939, inlinedAt: !13946)
!13953 = !{i64 2282721}
!13954 = !DILocation(line: 0, scope: !13948, inlinedAt: !13952)
!13955 = !DILocation(line: 107, column: 6, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13916, file: !2513, line: 107, column: 6)
!13957 = !DILocation(line: 107, column: 6, scope: !13916)
!13958 = !{!"branch_weights", i32 2000, i32 1}
!13959 = !DILocation(line: 110, column: 6, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13956, file: !2513, line: 107, column: 71)
!13961 = !DILocation(line: 110, column: 21, scope: !13960)
!13962 = !DILocation(line: 109, column: 28, scope: !13960)
!13963 = !DILocation(line: 111, column: 13, scope: !13960)
!13964 = !DILocation(line: 114, column: 18, scope: !13960)
!13965 = !DILocation(line: 109, column: 10, scope: !13960)
!13966 = !DILocation(line: 109, column: 26, scope: !13960)
!13967 = !DILocation(line: 113, column: 20, scope: !13960)
!13968 = !DILocation(line: 114, column: 10, scope: !13960)
!13969 = !DILocation(line: 114, column: 16, scope: !13960)
!13970 = !DILocalVariable(name: "key", arg: 2, scope: !13971, file: !483, line: 190, type: !13928)
!13971 = distinct !DISubprogram(name: "k_spin_unlock", scope: !483, file: !483, line: 189, type: !13972, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13974)
!13972 = !DISubroutineType(types: !13973)
!13973 = !{null, !13942, !13928}
!13974 = !{!13975, !13970}
!13975 = !DILocalVariable(name: "l", arg: 1, scope: !13971, file: !483, line: 189, type: !13942)
!13976 = !DILocation(line: 0, scope: !13971, inlinedAt: !13977)
!13977 = distinct !DILocation(line: 120, column: 3, scope: !13960)
!13978 = !DILocalVariable(name: "key", arg: 1, scope: !13979, file: !6214, line: 84, type: !41)
!13979 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !13980)
!13980 = !{!13978}
!13981 = !DILocation(line: 0, scope: !13979, inlinedAt: !13982)
!13982 = distinct !DILocation(line: 215, column: 2, scope: !13971, inlinedAt: !13977)
!13983 = !DILocation(line: 95, column: 2, scope: !13979, inlinedAt: !13982)
!13984 = !{i64 2283538}
!13985 = !DILocation(line: 124, column: 3, scope: !13960)
!13986 = !DILocation(line: 127, column: 6, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13916, file: !2513, line: 127, column: 6)
!13988 = !DILocation(line: 127, column: 6, scope: !13916)
!13989 = !{!"branch_weights", i32 1, i32 2000}
!13990 = !DILocation(line: 0, scope: !13971, inlinedAt: !13991)
!13991 = distinct !DILocation(line: 128, column: 3, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13987, file: !2513, line: 127, column: 50)
!13993 = !DILocation(line: 0, scope: !13979, inlinedAt: !13994)
!13994 = distinct !DILocation(line: 215, column: 2, scope: !13971, inlinedAt: !13991)
!13995 = !DILocation(line: 95, column: 2, scope: !13979, inlinedAt: !13994)
!13996 = !DILocation(line: 132, column: 3, scope: !13992)
!13997 = !DILocation(line: 137, column: 53, scope: !13916)
!13998 = !DILocation(line: 137, column: 38, scope: !13916)
!13999 = !DILocation(line: 138, column: 29, scope: !13916)
!14000 = !DILocation(line: 138, column: 10, scope: !13916)
!14001 = !DILocation(line: 137, column: 13, scope: !13916)
!14002 = !DILocation(line: 142, column: 6, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13916, file: !2513, line: 142, column: 6)
!14004 = !DILocation(line: 142, column: 6, scope: !13916)
!14005 = !DILocation(line: 143, column: 13, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14003, file: !2513, line: 142, column: 59)
!14007 = !DILocation(line: 144, column: 2, scope: !14006)
!14008 = !DILocation(line: 146, column: 50, scope: !13916)
!14009 = !DILocation(line: 146, column: 18, scope: !13916)
!14010 = !DILocation(line: 153, column: 16, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !13916, file: !2513, line: 153, column: 6)
!14012 = !DILocation(line: 153, column: 6, scope: !13916)
!14013 = !DILocation(line: 0, scope: !13939, inlinedAt: !14014)
!14014 = distinct !DILocation(line: 162, column: 8, scope: !13916)
!14015 = !DILocation(line: 55, column: 2, scope: !13948, inlinedAt: !14016)
!14016 = distinct !DILocation(line: 145, column: 10, scope: !13939, inlinedAt: !14014)
!14017 = !DILocation(line: 0, scope: !13948, inlinedAt: !14016)
!14018 = !DILocation(line: 168, column: 6, scope: !13936)
!14019 = !DILocation(line: 168, column: 6, scope: !13916)
!14020 = !DILocation(line: 169, column: 29, scope: !13935)
!14021 = !DILocation(line: 0, scope: !13935)
!14022 = !DILocation(line: 171, column: 22, scope: !13935)
!14023 = !DILocation(line: 171, column: 14, scope: !13935)
!14024 = !DILocation(line: 172, column: 42, scope: !13935)
!14025 = !DILocation(line: 172, column: 29, scope: !13935)
!14026 = !DILocation(line: 172, column: 55, scope: !13935)
!14027 = !DILocation(line: 172, column: 4, scope: !13935)
!14028 = !DILocation(line: 173, column: 11, scope: !13935)
!14029 = !DILocation(line: 177, column: 13, scope: !13935)
!14030 = !DILocation(line: 177, column: 48, scope: !13935)
!14031 = !DILocation(line: 180, column: 6, scope: !13916)
!14032 = !DILocation(line: 181, column: 3, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !2513, line: 180, column: 15)
!14034 = distinct !DILexicalBlock(scope: !13916, file: !2513, line: 180, column: 6)
!14035 = !DILocation(line: 182, column: 2, scope: !14033)
!14036 = !DILocation(line: 0, scope: !13971, inlinedAt: !14037)
!14037 = distinct !DILocation(line: 183, column: 3, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14034, file: !2513, line: 182, column: 9)
!14039 = !DILocation(line: 0, scope: !13979, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 215, column: 2, scope: !13971, inlinedAt: !14037)
!14041 = !DILocation(line: 95, column: 2, scope: !13979, inlinedAt: !14040)
!14042 = !DILocation(line: 189, column: 1, scope: !13916)
!14043 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2513, file: !2513, line: 72, type: !14044, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14046)
!14044 = !DISubroutineType(types: !14045)
!14045 = !{!897, !897, !897}
!14046 = !{!14047, !14048, !14049}
!14047 = !DILocalVariable(name: "target", arg: 1, scope: !14043, file: !2513, line: 72, type: !897)
!14048 = !DILocalVariable(name: "limit", arg: 2, scope: !14043, file: !2513, line: 72, type: !897)
!14049 = !DILocalVariable(name: "new_prio", scope: !14043, file: !2513, line: 74, type: !55)
!14050 = !DILocation(line: 0, scope: !14043)
!14051 = !DILocation(line: 74, column: 17, scope: !14043)
!14052 = !DILocation(line: 76, column: 13, scope: !14043)
!14053 = !DILocation(line: 78, column: 2, scope: !14043)
!14054 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13208, file: !13208, line: 211, type: !14055, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14057)
!14055 = !DISubroutineType(types: !14056)
!14056 = !{!329, !55, !55}
!14057 = !{!14058, !14059}
!14058 = !DILocalVariable(name: "prio", arg: 1, scope: !14054, file: !13208, line: 211, type: !55)
!14059 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14054, file: !13208, line: 211, type: !55)
!14060 = !DILocation(line: 0, scope: !14054)
!14061 = !DILocation(line: 213, column: 9, scope: !14054)
!14062 = !DILocation(line: 213, column: 2, scope: !14054)
!14063 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2513, file: !2513, line: 81, type: !14064, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14066)
!14064 = !DISubroutineType(types: !14065)
!14065 = !{!329, !13878, !897}
!14066 = !{!14067, !14068}
!14067 = !DILocalVariable(name: "mutex", arg: 1, scope: !14063, file: !2513, line: 81, type: !13878)
!14068 = !DILocalVariable(name: "new_prio", arg: 2, scope: !14063, file: !2513, line: 81, type: !897)
!14069 = !DILocation(line: 0, scope: !14063)
!14070 = !DILocation(line: 83, column: 13, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14063, file: !2513, line: 83, column: 6)
!14072 = !DILocation(line: 83, column: 25, scope: !14071)
!14073 = !DILocation(line: 83, column: 6, scope: !14071)
!14074 = !DILocation(line: 83, column: 30, scope: !14071)
!14075 = !DILocation(line: 83, column: 6, scope: !14063)
!14076 = !DILocation(line: 90, column: 10, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14071, file: !2513, line: 83, column: 43)
!14078 = !DILocation(line: 90, column: 3, scope: !14077)
!14079 = !DILocation(line: 93, column: 1, scope: !14063)
!14080 = distinct !DISubprogram(name: "z_waitq_head", scope: !13535, file: !13535, line: 52, type: !14081, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14083)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{!2424, !2441}
!14083 = !{!14084}
!14084 = !DILocalVariable(name: "w", arg: 1, scope: !14080, file: !13535, line: 52, type: !2441)
!14085 = !DILocation(line: 0, scope: !14080)
!14086 = !DILocation(line: 54, column: 52, scope: !14080)
!14087 = !DILocation(line: 54, column: 28, scope: !14080)
!14088 = !DILocation(line: 54, column: 9, scope: !14080)
!14089 = !DILocation(line: 54, column: 2, scope: !14080)
!14090 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !77, file: !77, line: 294, type: !14091, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14093)
!14091 = !DISubroutineType(types: !14092)
!14092 = !{!2409, !13907}
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "list", arg: 1, scope: !14090, file: !77, line: 294, type: !13907)
!14095 = !DILocation(line: 0, scope: !14090)
!14096 = !DILocation(line: 296, column: 9, scope: !14090)
!14097 = !DILocation(line: 296, column: 49, scope: !14090)
!14098 = !DILocation(line: 296, column: 2, scope: !14090)
!14099 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !77, file: !77, line: 266, type: !14100, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14102)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{!329, !13907}
!14102 = !{!14103}
!14103 = !DILocalVariable(name: "list", arg: 1, scope: !14099, file: !77, line: 266, type: !13907)
!14104 = !DILocation(line: 0, scope: !14099)
!14105 = !DILocation(line: 268, column: 15, scope: !14099)
!14106 = !DILocation(line: 268, column: 20, scope: !14099)
!14107 = !DILocation(line: 268, column: 2, scope: !14099)
!14108 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13208, file: !13208, line: 206, type: !14055, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14109)
!14109 = !{!14110, !14111}
!14110 = !DILocalVariable(name: "prio1", arg: 1, scope: !14108, file: !13208, line: 206, type: !55)
!14111 = !DILocalVariable(name: "prio2", arg: 2, scope: !14108, file: !13208, line: 206, type: !55)
!14112 = !DILocation(line: 0, scope: !14108)
!14113 = !DILocation(line: 208, column: 15, scope: !14108)
!14114 = !DILocation(line: 208, column: 2, scope: !14108)
!14115 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13208, file: !13208, line: 186, type: !283, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14116)
!14116 = !{!14117}
!14117 = !DILocalVariable(name: "prio", arg: 1, scope: !14115, file: !13208, line: 186, type: !55)
!14118 = !DILocation(line: 0, scope: !14115)
!14119 = !DILocation(line: 188, column: 9, scope: !14115)
!14120 = !DILocation(line: 188, column: 2, scope: !14115)
!14121 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13208, file: !13208, line: 181, type: !14122, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14124)
!14122 = !DISubroutineType(types: !14123)
!14123 = !{!329, !55}
!14124 = !{!14125}
!14125 = !DILocalVariable(name: "prio", arg: 1, scope: !14121, file: !13208, line: 181, type: !55)
!14126 = !DILocation(line: 0, scope: !14121)
!14127 = !DILocation(line: 183, column: 14, scope: !14121)
!14128 = !DILocation(line: 183, column: 2, scope: !14121)
!14129 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2513, file: !2513, line: 201, type: !13876, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14130)
!14130 = !{!14131, !14132, !14133, !14134}
!14131 = !DILocalVariable(name: "mutex", arg: 1, scope: !14129, file: !2513, line: 201, type: !13878)
!14132 = !DILocalVariable(name: "new_owner", scope: !14129, file: !2513, line: 203, type: !2424)
!14133 = !DILocalVariable(name: "key", scope: !14129, file: !2513, line: 242, type: !13928)
!14134 = !DILabel(scope: !14129, name: "k_mutex_unlock_return", file: !2513, line: 270)
!14135 = !DILocation(line: 0, scope: !14129)
!14136 = !DILocation(line: 209, column: 2, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14129, file: !2513, line: 209, column: 2)
!14138 = !DILocation(line: 209, column: 2, scope: !14129)
!14139 = !DILocation(line: 217, column: 2, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14129, file: !2513, line: 217, column: 2)
!14141 = !DILocation(line: 217, column: 2, scope: !14129)
!14142 = !DILocation(line: 237, column: 13, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14129, file: !2513, line: 237, column: 6)
!14144 = !DILocation(line: 237, column: 24, scope: !14143)
!14145 = !DILocation(line: 237, column: 6, scope: !14129)
!14146 = !DILocation(line: 238, column: 20, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14143, file: !2513, line: 237, column: 30)
!14148 = !DILocation(line: 239, column: 3, scope: !14147)
!14149 = !DILocation(line: 0, scope: !13939, inlinedAt: !14150)
!14150 = distinct !DILocation(line: 242, column: 25, scope: !14129)
!14151 = !DILocation(line: 55, column: 2, scope: !13948, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 145, column: 10, scope: !13939, inlinedAt: !14150)
!14153 = !DILocation(line: 0, scope: !13948, inlinedAt: !14152)
!14154 = !DILocation(line: 244, column: 34, scope: !14129)
!14155 = !DILocation(line: 244, column: 2, scope: !14129)
!14156 = !DILocation(line: 247, column: 44, scope: !14129)
!14157 = !DILocation(line: 247, column: 14, scope: !14129)
!14158 = !DILocation(line: 249, column: 15, scope: !14129)
!14159 = !DILocation(line: 254, column: 16, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14129, file: !2513, line: 254, column: 6)
!14161 = !DILocation(line: 254, column: 6, scope: !14129)
!14162 = !DILocation(line: 260, column: 44, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14160, file: !2513, line: 254, column: 25)
!14164 = !DILocation(line: 260, column: 28, scope: !14163)
!14165 = !DILocation(line: 260, column: 26, scope: !14163)
!14166 = !DILocalVariable(name: "thread", arg: 1, scope: !14167, file: !13228, line: 65, type: !2424)
!14167 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13228, file: !13228, line: 65, type: !14168, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !14170)
!14168 = !DISubroutineType(types: !14169)
!14169 = !{null, !2424, !41}
!14170 = !{!14166, !14171}
!14171 = !DILocalVariable(name: "value", arg: 2, scope: !14167, file: !13228, line: 65, type: !41)
!14172 = !DILocation(line: 0, scope: !14167, inlinedAt: !14173)
!14173 = distinct !DILocation(line: 261, column: 3, scope: !14163)
!14174 = !DILocation(line: 67, column: 15, scope: !14167, inlinedAt: !14173)
!14175 = !DILocation(line: 67, column: 33, scope: !14167, inlinedAt: !14173)
!14176 = !DILocation(line: 262, column: 3, scope: !14163)
!14177 = !DILocation(line: 263, column: 3, scope: !14163)
!14178 = !DILocation(line: 264, column: 2, scope: !14163)
!14179 = !DILocation(line: 265, column: 21, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14160, file: !2513, line: 264, column: 9)
!14181 = !DILocation(line: 0, scope: !13971, inlinedAt: !14182)
!14182 = distinct !DILocation(line: 266, column: 3, scope: !14180)
!14183 = !DILocation(line: 0, scope: !13979, inlinedAt: !14184)
!14184 = distinct !DILocation(line: 215, column: 2, scope: !13971, inlinedAt: !14182)
!14185 = !DILocation(line: 95, column: 2, scope: !13979, inlinedAt: !14184)
!14186 = !DILocation(line: 274, column: 1, scope: !14129)
!14187 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2535, file: !2535, line: 41, type: !14188, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14201)
!14188 = !DISubroutineType(types: !14189)
!14189 = !{!55, !14190, !41, !41}
!14190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14191, size: 32)
!14191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !68, line: 2909, size: 128, elements: !14192)
!14192 = !{!14193, !14199, !14200}
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14191, file: !68, line: 2910, baseType: !14194, size: 64)
!14194 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !72, line: 233, baseType: !14195)
!14195 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 231, size: 64, elements: !14196)
!14196 = !{!14197}
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14195, file: !72, line: 232, baseType: !14198, size: 64)
!14198 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !77, line: 48, baseType: !2521)
!14199 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14191, file: !68, line: 2911, baseType: !41, size: 32, offset: 64)
!14200 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14191, file: !68, line: 2912, baseType: !41, size: 32, offset: 96)
!14201 = !{!14202, !14203, !14204}
!14202 = !DILocalVariable(name: "sem", arg: 1, scope: !14187, file: !2535, line: 41, type: !14190)
!14203 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14187, file: !2535, line: 41, type: !41)
!14204 = !DILocalVariable(name: "limit", arg: 3, scope: !14187, file: !2535, line: 42, type: !41)
!14205 = !DILocation(line: 0, scope: !14187)
!14206 = !DILocation(line: 47, column: 2, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14187, file: !2535, line: 47, column: 2)
!14208 = !DILocation(line: 53, column: 7, scope: !14187)
!14209 = !DILocation(line: 53, column: 13, scope: !14187)
!14210 = !DILocation(line: 54, column: 7, scope: !14187)
!14211 = !DILocation(line: 54, column: 13, scope: !14187)
!14212 = !DILocation(line: 58, column: 21, scope: !14187)
!14213 = !DILocation(line: 58, column: 2, scope: !14187)
!14214 = !DILocation(line: 64, column: 2, scope: !14187)
!14215 = !DILocation(line: 65, column: 1, scope: !14187)
!14216 = distinct !DISubprogram(name: "z_waitq_init", scope: !13535, file: !13535, line: 47, type: !14217, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14220)
!14217 = !DISubroutineType(types: !14218)
!14218 = !{null, !14219}
!14219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14194, size: 32)
!14220 = !{!14221}
!14221 = !DILocalVariable(name: "w", arg: 1, scope: !14216, file: !13535, line: 47, type: !14219)
!14222 = !DILocation(line: 0, scope: !14216)
!14223 = !DILocation(line: 49, column: 21, scope: !14216)
!14224 = !DILocation(line: 49, column: 2, scope: !14216)
!14225 = !DILocation(line: 50, column: 1, scope: !14216)
!14226 = distinct !DISubprogram(name: "sys_dlist_init", scope: !77, file: !77, line: 197, type: !14227, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14230)
!14227 = !DISubroutineType(types: !14228)
!14228 = !{null, !14229}
!14229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14198, size: 32)
!14230 = !{!14231}
!14231 = !DILocalVariable(name: "list", arg: 1, scope: !14226, file: !77, line: 197, type: !14229)
!14232 = !DILocation(line: 0, scope: !14226)
!14233 = !DILocation(line: 199, column: 8, scope: !14226)
!14234 = !DILocation(line: 199, column: 13, scope: !14226)
!14235 = !DILocation(line: 200, column: 8, scope: !14226)
!14236 = !DILocation(line: 200, column: 13, scope: !14226)
!14237 = !DILocation(line: 201, column: 1, scope: !14226)
!14238 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2535, file: !2535, line: 86, type: !14239, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14241)
!14239 = !DISubroutineType(types: !14240)
!14240 = !{null, !14190}
!14241 = !{!14242, !14243, !14248}
!14242 = !DILocalVariable(name: "sem", arg: 1, scope: !14238, file: !2535, line: 86, type: !14190)
!14243 = !DILocalVariable(name: "key", scope: !14238, file: !2535, line: 88, type: !14244)
!14244 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !483, line: 106, baseType: !14245)
!14245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !483, line: 32, size: 32, elements: !14246)
!14246 = !{!14247}
!14247 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14245, file: !483, line: 33, baseType: !55, size: 32)
!14248 = !DILocalVariable(name: "thread", scope: !14238, file: !2535, line: 89, type: !14249)
!14249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14250, size: 32)
!14250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !121, line: 245, size: 1024, elements: !14251)
!14251 = !{!14252, !14290, !14302, !14303, !14304, !14305, !14311, !14323}
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14250, file: !121, line: 247, baseType: !14253, size: 384)
!14253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !121, line: 57, size: 384, elements: !14254)
!14254 = !{!14255, !14265, !14266, !14267, !14268, !14277, !14278, !14279}
!14255 = !DIDerivedType(tag: DW_TAG_member, scope: !14253, file: !121, line: 60, baseType: !14256, size: 64)
!14256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14253, file: !121, line: 60, size: 64, elements: !14257)
!14257 = !{!14258, !14259}
!14258 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14256, file: !121, line: 61, baseType: !2520, size: 64)
!14259 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14256, file: !121, line: 62, baseType: !14260, size: 64)
!14260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !133, line: 49, size: 64, elements: !14261)
!14261 = !{!14262}
!14262 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14260, file: !133, line: 50, baseType: !14263, size: 64)
!14263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14264, size: 64, elements: !138)
!14264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14260, size: 32)
!14265 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14253, file: !121, line: 68, baseType: !14219, size: 32, offset: 64)
!14266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14253, file: !121, line: 71, baseType: !143, size: 8, offset: 96)
!14267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14253, file: !121, line: 74, baseType: !143, size: 8, offset: 104)
!14268 = !DIDerivedType(tag: DW_TAG_member, scope: !14253, file: !121, line: 90, baseType: !14269, size: 16, offset: 112)
!14269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14253, file: !121, line: 90, size: 16, elements: !14270)
!14270 = !{!14271, !14276}
!14271 = !DIDerivedType(tag: DW_TAG_member, scope: !14269, file: !121, line: 91, baseType: !14272, size: 16)
!14272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14269, file: !121, line: 91, size: 16, elements: !14273)
!14273 = !{!14274, !14275}
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14272, file: !121, line: 96, baseType: !153, size: 8)
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14272, file: !121, line: 97, baseType: !143, size: 8, offset: 8)
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14269, file: !121, line: 100, baseType: !157, size: 16)
!14277 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14253, file: !121, line: 107, baseType: !40, size: 32, offset: 128)
!14278 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14253, file: !121, line: 127, baseType: !39, size: 32, offset: 160)
!14279 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14253, file: !121, line: 131, baseType: !14280, size: 192, offset: 192)
!14280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !72, line: 244, size: 192, elements: !14281)
!14281 = !{!14282, !14283, !14289}
!14282 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14280, file: !72, line: 245, baseType: !2520, size: 64)
!14283 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14280, file: !72, line: 246, baseType: !14284, size: 32, offset: 64)
!14284 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !72, line: 242, baseType: !14285)
!14285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14286, size: 32)
!14286 = !DISubroutineType(types: !14287)
!14287 = !{null, !14288}
!14288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14280, size: 32)
!14289 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14280, file: !72, line: 249, baseType: !32, size: 64, offset: 128)
!14290 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14250, file: !121, line: 250, baseType: !14291, size: 288, offset: 384)
!14291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !174, line: 25, size: 288, elements: !14292)
!14292 = !{!14293, !14294, !14295, !14296, !14297, !14298, !14299, !14300, !14301}
!14293 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14291, file: !174, line: 26, baseType: !40, size: 32)
!14294 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14291, file: !174, line: 27, baseType: !40, size: 32, offset: 32)
!14295 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14291, file: !174, line: 28, baseType: !40, size: 32, offset: 64)
!14296 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14291, file: !174, line: 29, baseType: !40, size: 32, offset: 96)
!14297 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14291, file: !174, line: 30, baseType: !40, size: 32, offset: 128)
!14298 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14291, file: !174, line: 31, baseType: !40, size: 32, offset: 160)
!14299 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14291, file: !174, line: 32, baseType: !40, size: 32, offset: 192)
!14300 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14291, file: !174, line: 33, baseType: !40, size: 32, offset: 224)
!14301 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14291, file: !174, line: 34, baseType: !40, size: 32, offset: 256)
!14302 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14250, file: !121, line: 253, baseType: !39, size: 32, offset: 672)
!14303 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14250, file: !121, line: 256, baseType: !14194, size: 64, offset: 704)
!14304 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14250, file: !121, line: 294, baseType: !55, size: 32, offset: 768)
!14305 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14250, file: !121, line: 300, baseType: !14306, size: 96, offset: 800)
!14306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !121, line: 149, size: 96, elements: !14307)
!14307 = !{!14308, !14309, !14310}
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14306, file: !121, line: 153, baseType: !22, size: 32)
!14309 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14306, file: !121, line: 162, baseType: !193, size: 32, offset: 32)
!14310 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14306, file: !121, line: 168, baseType: !193, size: 32, offset: 64)
!14311 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14250, file: !121, line: 325, baseType: !14312, size: 32, offset: 896)
!14312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14313, size: 32)
!14313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !68, line: 5073, size: 192, elements: !14314)
!14314 = !{!14315, !14321, !14322}
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14313, file: !68, line: 5074, baseType: !14316, size: 96)
!14316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !473, line: 56, size: 96, elements: !14317)
!14317 = !{!14318, !14319, !14320}
!14318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14316, file: !473, line: 57, baseType: !476, size: 32)
!14319 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14316, file: !473, line: 58, baseType: !39, size: 32, offset: 32)
!14320 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14316, file: !473, line: 59, baseType: !193, size: 32, offset: 64)
!14321 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14313, file: !68, line: 5075, baseType: !14194, size: 64, offset: 96)
!14322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14313, file: !68, line: 5076, baseType: !2536, size: 8, offset: 160)
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14250, file: !121, line: 343, baseType: !14324, size: 64, offset: 928)
!14324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !174, line: 60, size: 64, elements: !14325)
!14325 = !{!14326, !14327}
!14326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14324, file: !174, line: 63, baseType: !40, size: 32)
!14327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14324, file: !174, line: 66, baseType: !40, size: 32, offset: 32)
!14328 = !DILocation(line: 0, scope: !14238)
!14329 = !DILocalVariable(name: "l", arg: 1, scope: !14330, file: !483, line: 136, type: !14333)
!14330 = distinct !DISubprogram(name: "k_spin_lock", scope: !483, file: !483, line: 136, type: !14331, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14334)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{!14244, !14333}
!14333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!14334 = !{!14329, !14335}
!14335 = !DILocalVariable(name: "k", scope: !14330, file: !483, line: 139, type: !14244)
!14336 = !DILocation(line: 0, scope: !14330, inlinedAt: !14337)
!14337 = distinct !DILocation(line: 88, column: 25, scope: !14238)
!14338 = !DILocation(line: 55, column: 2, scope: !14339, inlinedAt: !14343)
!14339 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14340)
!14340 = !{!14341, !14342}
!14341 = !DILocalVariable(name: "key", scope: !14339, file: !6214, line: 44, type: !41)
!14342 = !DILocalVariable(name: "tmp", scope: !14339, file: !6214, line: 53, type: !41)
!14343 = distinct !DILocation(line: 145, column: 10, scope: !14330, inlinedAt: !14337)
!14344 = !{i64 2279875}
!14345 = !DILocation(line: 0, scope: !14339, inlinedAt: !14343)
!14346 = !DILocation(line: 93, column: 39, scope: !14238)
!14347 = !DILocation(line: 93, column: 11, scope: !14238)
!14348 = !DILocation(line: 95, column: 13, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14238, file: !2535, line: 95, column: 6)
!14350 = !DILocation(line: 95, column: 6, scope: !14238)
!14351 = !DILocalVariable(name: "thread", arg: 1, scope: !14352, file: !13228, line: 65, type: !14249)
!14352 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13228, file: !13228, line: 65, type: !14353, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14355)
!14353 = !DISubroutineType(types: !14354)
!14354 = !{null, !14249, !41}
!14355 = !{!14351, !14356}
!14356 = !DILocalVariable(name: "value", arg: 2, scope: !14352, file: !13228, line: 65, type: !41)
!14357 = !DILocation(line: 0, scope: !14352, inlinedAt: !14358)
!14358 = distinct !DILocation(line: 96, column: 3, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14349, file: !2535, line: 95, column: 22)
!14360 = !DILocation(line: 67, column: 15, scope: !14352, inlinedAt: !14358)
!14361 = !DILocation(line: 67, column: 33, scope: !14352, inlinedAt: !14358)
!14362 = !DILocation(line: 97, column: 3, scope: !14359)
!14363 = !DILocation(line: 98, column: 2, scope: !14359)
!14364 = !DILocation(line: 99, column: 23, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14349, file: !2535, line: 98, column: 9)
!14366 = !DILocation(line: 99, column: 37, scope: !14365)
!14367 = !DILocation(line: 99, column: 29, scope: !14365)
!14368 = !DILocation(line: 99, column: 17, scope: !14365)
!14369 = !DILocation(line: 99, column: 14, scope: !14365)
!14370 = !DILocation(line: 103, column: 2, scope: !14238)
!14371 = !DILocation(line: 106, column: 1, scope: !14238)
!14372 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2535, file: !2535, line: 117, type: !14373, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14379)
!14373 = !DISubroutineType(types: !14374)
!14374 = !{!55, !14190, !14375}
!14375 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !14376)
!14376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, elements: !14377)
!14377 = !{!14378}
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14376, file: !31, line: 66, baseType: !30, size: 64)
!14379 = !{!14380, !14381, !14382, !14383, !14384}
!14380 = !DILocalVariable(name: "sem", arg: 1, scope: !14372, file: !2535, line: 117, type: !14190)
!14381 = !DILocalVariable(name: "timeout", arg: 2, scope: !14372, file: !2535, line: 117, type: !14375)
!14382 = !DILocalVariable(name: "ret", scope: !14372, file: !2535, line: 119, type: !55)
!14383 = !DILocalVariable(name: "key", scope: !14372, file: !2535, line: 124, type: !14244)
!14384 = !DILabel(scope: !14372, name: "out", file: !2535, line: 145)
!14385 = !DILocation(line: 0, scope: !14372)
!14386 = !DILocation(line: 0, scope: !14330, inlinedAt: !14387)
!14387 = distinct !DILocation(line: 124, column: 25, scope: !14372)
!14388 = !DILocation(line: 55, column: 2, scope: !14339, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 145, column: 10, scope: !14330, inlinedAt: !14387)
!14390 = !DILocation(line: 0, scope: !14339, inlinedAt: !14389)
!14391 = !DILocation(line: 128, column: 6, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14372, file: !2535, line: 128, column: 6)
!14393 = !DILocation(line: 128, column: 6, scope: !14372)
!14394 = !DILocation(line: 129, column: 13, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14392, file: !2535, line: 128, column: 31)
!14396 = !DILocalVariable(name: "key", arg: 2, scope: !14397, file: !483, line: 190, type: !14244)
!14397 = distinct !DISubprogram(name: "k_spin_unlock", scope: !483, file: !483, line: 189, type: !14398, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14400)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{null, !14333, !14244}
!14400 = !{!14401, !14396}
!14401 = !DILocalVariable(name: "l", arg: 1, scope: !14397, file: !483, line: 189, type: !14333)
!14402 = !DILocation(line: 0, scope: !14397, inlinedAt: !14403)
!14403 = distinct !DILocation(line: 130, column: 3, scope: !14395)
!14404 = !DILocalVariable(name: "key", arg: 1, scope: !14405, file: !6214, line: 84, type: !41)
!14405 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14406)
!14406 = !{!14404}
!14407 = !DILocation(line: 0, scope: !14405, inlinedAt: !14408)
!14408 = distinct !DILocation(line: 215, column: 2, scope: !14397, inlinedAt: !14403)
!14409 = !DILocation(line: 95, column: 2, scope: !14405, inlinedAt: !14408)
!14410 = !{i64 2280692}
!14411 = !DILocation(line: 132, column: 3, scope: !14395)
!14412 = !DILocation(line: 135, column: 6, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14372, file: !2535, line: 135, column: 6)
!14414 = !DILocation(line: 135, column: 6, scope: !14372)
!14415 = !DILocation(line: 0, scope: !14397, inlinedAt: !14416)
!14416 = distinct !DILocation(line: 136, column: 3, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14413, file: !2535, line: 135, column: 40)
!14418 = !DILocation(line: 0, scope: !14405, inlinedAt: !14419)
!14419 = distinct !DILocation(line: 215, column: 2, scope: !14397, inlinedAt: !14416)
!14420 = !DILocation(line: 95, column: 2, scope: !14405, inlinedAt: !14419)
!14421 = !DILocation(line: 138, column: 3, scope: !14417)
!14422 = !DILocation(line: 143, column: 38, scope: !14372)
!14423 = !DILocation(line: 143, column: 8, scope: !14372)
!14424 = !DILocation(line: 143, column: 2, scope: !14372)
!14425 = !DILocation(line: 145, column: 1, scope: !14372)
!14426 = !DILocation(line: 148, column: 2, scope: !14372)
!14427 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2535, file: !2535, line: 151, type: !14239, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !14428)
!14428 = !{!14429, !14430, !14431}
!14429 = !DILocalVariable(name: "sem", arg: 1, scope: !14427, file: !2535, line: 151, type: !14190)
!14430 = !DILocalVariable(name: "thread", scope: !14427, file: !2535, line: 153, type: !14249)
!14431 = !DILocalVariable(name: "key", scope: !14427, file: !2535, line: 154, type: !14244)
!14432 = !DILocation(line: 0, scope: !14427)
!14433 = !DILocation(line: 0, scope: !14330, inlinedAt: !14434)
!14434 = distinct !DILocation(line: 154, column: 25, scope: !14427)
!14435 = !DILocation(line: 55, column: 2, scope: !14339, inlinedAt: !14436)
!14436 = distinct !DILocation(line: 145, column: 10, scope: !14330, inlinedAt: !14434)
!14437 = !DILocation(line: 0, scope: !14339, inlinedAt: !14436)
!14438 = !DILocation(line: 157, column: 12, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14427, file: !2535, line: 156, column: 15)
!14440 = !DILocation(line: 158, column: 14, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14439, file: !2535, line: 158, column: 7)
!14442 = !DILocation(line: 158, column: 7, scope: !14439)
!14443 = !DILocation(line: 0, scope: !14352, inlinedAt: !14444)
!14444 = distinct !DILocation(line: 161, column: 3, scope: !14439)
!14445 = !DILocation(line: 67, column: 15, scope: !14352, inlinedAt: !14444)
!14446 = !DILocation(line: 67, column: 33, scope: !14352, inlinedAt: !14444)
!14447 = !DILocation(line: 162, column: 3, scope: !14439)
!14448 = distinct !{!14448, !14449, !14450}
!14449 = !DILocation(line: 156, column: 2, scope: !14427)
!14450 = !DILocation(line: 163, column: 2, scope: !14427)
!14451 = !DILocation(line: 164, column: 7, scope: !14427)
!14452 = !DILocation(line: 164, column: 13, scope: !14427)
!14453 = !DILocation(line: 170, column: 2, scope: !14427)
!14454 = !DILocation(line: 171, column: 1, scope: !14427)
!14455 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2651, file: !2651, line: 93, type: !14456, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14458)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{!897, !2544, !2544}
!14458 = !{!14459, !14460, !14461, !14462}
!14459 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14455, file: !2651, line: 93, type: !2544)
!14460 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14455, file: !2651, line: 94, type: !2544)
!14461 = !DILocalVariable(name: "b1", scope: !14455, file: !2651, line: 97, type: !897)
!14462 = !DILocalVariable(name: "b2", scope: !14455, file: !2651, line: 98, type: !897)
!14463 = !DILocation(line: 0, scope: !14455)
!14464 = !DILocation(line: 97, column: 30, scope: !14455)
!14465 = !DILocation(line: 98, column: 30, scope: !14455)
!14466 = !DILocation(line: 100, column: 9, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14455, file: !2651, line: 100, column: 6)
!14468 = !DILocation(line: 100, column: 6, scope: !14455)
!14469 = !DILocation(line: 125, column: 1, scope: !14455)
!14470 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2651, file: !2651, line: 428, type: !14471, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14473)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{null, !2544}
!14473 = !{!14474}
!14474 = !DILocalVariable(name: "curr", arg: 1, scope: !14470, file: !2651, line: 428, type: !2544)
!14475 = !DILocation(line: 0, scope: !14470)
!14476 = !DILocation(line: 434, column: 6, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14470, file: !2651, line: 434, column: 6)
!14478 = !DILocation(line: 434, column: 23, scope: !14477)
!14479 = !DILocation(line: 434, column: 6, scope: !14470)
!14480 = !DILocation(line: 435, column: 50, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14477, file: !2651, line: 434, column: 29)
!14482 = !DILocation(line: 435, column: 48, scope: !14481)
!14483 = !DILocation(line: 435, column: 29, scope: !14481)
!14484 = !DILocation(line: 436, column: 24, scope: !14481)
!14485 = !DILocation(line: 436, column: 3, scope: !14481)
!14486 = !DILocation(line: 437, column: 2, scope: !14481)
!14487 = !DILocation(line: 438, column: 1, scope: !14470)
!14488 = distinct !DISubprogram(name: "slice_time", scope: !2651, file: !2651, line: 407, type: !14489, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14491)
!14489 = !DISubroutineType(types: !14490)
!14490 = !{!55, !2544}
!14491 = !{!14492, !14493}
!14492 = !DILocalVariable(name: "curr", arg: 1, scope: !14488, file: !2651, line: 407, type: !2544)
!14493 = !DILocalVariable(name: "ret", scope: !14488, file: !2651, line: 409, type: !55)
!14494 = !DILocation(line: 0, scope: !14488)
!14495 = !DILocation(line: 409, column: 12, scope: !14488)
!14496 = !DILocation(line: 416, column: 2, scope: !14488)
!14497 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2651, file: !2651, line: 440, type: !14498, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14500)
!14498 = !DISubroutineType(types: !14499)
!14499 = !{null, !897, !55}
!14500 = !{!14501, !14502, !14503, !14509}
!14501 = !DILocalVariable(name: "slice", arg: 1, scope: !14497, file: !2651, line: 440, type: !897)
!14502 = !DILocalVariable(name: "prio", arg: 2, scope: !14497, file: !2651, line: 440, type: !55)
!14503 = !DILocalVariable(name: "__i", scope: !14504, file: !2651, line: 442, type: !14505)
!14504 = distinct !DILexicalBlock(scope: !14497, file: !2651, line: 442, column: 2)
!14505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !483, line: 106, baseType: !14506)
!14506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !483, line: 32, size: 32, elements: !14507)
!14507 = !{!14508}
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14506, file: !483, line: 33, baseType: !55, size: 32)
!14509 = !DILocalVariable(name: "__key", scope: !14504, file: !2651, line: 442, type: !14505)
!14510 = !DILocation(line: 0, scope: !14497)
!14511 = !DILocation(line: 0, scope: !14504)
!14512 = !DILocalVariable(name: "l", arg: 1, scope: !14513, file: !483, line: 136, type: !14516)
!14513 = distinct !DISubprogram(name: "k_spin_lock", scope: !483, file: !483, line: 136, type: !14514, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14517)
!14514 = !DISubroutineType(types: !14515)
!14515 = !{!14505, !14516}
!14516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!14517 = !{!14512, !14518}
!14518 = !DILocalVariable(name: "k", scope: !14513, file: !483, line: 139, type: !14505)
!14519 = !DILocation(line: 0, scope: !14513, inlinedAt: !14520)
!14520 = distinct !DILocation(line: 442, column: 2, scope: !14504)
!14521 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !14526)
!14522 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14523)
!14523 = !{!14524, !14525}
!14524 = !DILocalVariable(name: "key", scope: !14522, file: !6214, line: 44, type: !41)
!14525 = !DILocalVariable(name: "tmp", scope: !14522, file: !6214, line: 53, type: !41)
!14526 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !14520)
!14527 = !{i64 2322284}
!14528 = !DILocation(line: 0, scope: !14522, inlinedAt: !14526)
!14529 = !DILocation(line: 443, column: 29, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14531, file: !2651, line: 442, column: 26)
!14531 = distinct !DILexicalBlock(scope: !14504, file: !2651, line: 442, column: 2)
!14532 = !DILocation(line: 444, column: 17, scope: !14530)
!14533 = !DILocation(line: 445, column: 51, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14530, file: !2651, line: 445, column: 7)
!14535 = !DILocation(line: 445, column: 7, scope: !14530)
!14536 = !DILocation(line: 0, scope: !14530)
!14537 = !DILocation(line: 451, column: 18, scope: !14530)
!14538 = !DILocation(line: 452, column: 3, scope: !14530)
!14539 = !DILocalVariable(name: "key", arg: 2, scope: !14540, file: !483, line: 190, type: !14505)
!14540 = distinct !DISubprogram(name: "k_spin_unlock", scope: !483, file: !483, line: 189, type: !14541, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14543)
!14541 = !DISubroutineType(types: !14542)
!14542 = !{null, !14516, !14505}
!14543 = !{!14544, !14539}
!14544 = !DILocalVariable(name: "l", arg: 1, scope: !14540, file: !483, line: 189, type: !14516)
!14545 = !DILocation(line: 0, scope: !14540, inlinedAt: !14546)
!14546 = distinct !DILocation(line: 442, column: 2, scope: !14531)
!14547 = !DILocalVariable(name: "key", arg: 1, scope: !14548, file: !6214, line: 84, type: !41)
!14548 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14549)
!14549 = !{!14547}
!14550 = !DILocation(line: 0, scope: !14548, inlinedAt: !14551)
!14551 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !14546)
!14552 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !14551)
!14553 = !{i64 2323101}
!14554 = !DILocation(line: 454, column: 1, scope: !14497)
!14555 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3601, file: !3601, line: 389, type: !7505, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14556)
!14556 = !{!14557}
!14557 = !DILocalVariable(name: "t", arg: 1, scope: !14555, file: !3601, line: 389, type: !40)
!14558 = !DILocation(line: 0, scope: !14555)
!14559 = !DILocalVariable(name: "t", arg: 1, scope: !14560, file: !3601, line: 102, type: !42)
!14560 = distinct !DISubprogram(name: "z_tmcvt", scope: !3601, file: !3601, line: 102, type: !13774, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14561)
!14561 = !{!14559, !14562, !14563, !14564, !14565, !14566, !14567, !14568, !14569, !14570, !14571}
!14562 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14560, file: !3601, line: 102, type: !40)
!14563 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14560, file: !3601, line: 103, type: !40)
!14564 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14560, file: !3601, line: 103, type: !329)
!14565 = !DILocalVariable(name: "result32", arg: 5, scope: !14560, file: !3601, line: 104, type: !329)
!14566 = !DILocalVariable(name: "round_up", arg: 6, scope: !14560, file: !3601, line: 104, type: !329)
!14567 = !DILocalVariable(name: "round_off", arg: 7, scope: !14560, file: !3601, line: 105, type: !329)
!14568 = !DILocalVariable(name: "mul_ratio", scope: !14560, file: !3601, line: 107, type: !329)
!14569 = !DILocalVariable(name: "div_ratio", scope: !14560, file: !3601, line: 109, type: !329)
!14570 = !DILocalVariable(name: "off", scope: !14560, file: !3601, line: 116, type: !42)
!14571 = !DILocalVariable(name: "rdivisor", scope: !14572, file: !3601, line: 119, type: !40)
!14572 = distinct !DILexicalBlock(scope: !14573, file: !3601, line: 118, column: 18)
!14573 = distinct !DILexicalBlock(scope: !14560, file: !3601, line: 118, column: 6)
!14574 = !DILocation(line: 0, scope: !14560, inlinedAt: !14575)
!14575 = distinct !DILocation(line: 392, column: 9, scope: !14555)
!14576 = !DILocation(line: 143, column: 25, scope: !14577, inlinedAt: !14575)
!14577 = distinct !DILexicalBlock(scope: !14578, file: !3601, line: 142, column: 17)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !3601, line: 142, column: 7)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !3601, line: 141, column: 24)
!14580 = distinct !DILexicalBlock(scope: !14581, file: !3601, line: 141, column: 13)
!14581 = distinct !DILexicalBlock(scope: !14560, file: !3601, line: 134, column: 6)
!14582 = !DILocation(line: 392, column: 2, scope: !14555)
!14583 = distinct !DISubprogram(name: "z_time_slice", scope: !2651, file: !2651, line: 502, type: !8319, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14584)
!14584 = !{!14585, !14586}
!14585 = !DILocalVariable(name: "ticks", arg: 1, scope: !14583, file: !2651, line: 502, type: !55)
!14586 = !DILocalVariable(name: "key", scope: !14583, file: !2651, line: 511, type: !14505)
!14587 = !DILocation(line: 0, scope: !14583)
!14588 = !DILocation(line: 0, scope: !14513, inlinedAt: !14589)
!14589 = distinct !DILocation(line: 511, column: 25, scope: !14583)
!14590 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !14589)
!14592 = !DILocation(line: 0, scope: !14522, inlinedAt: !14591)
!14593 = !DILocation(line: 514, column: 6, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14583, file: !2651, line: 514, column: 6)
!14595 = !DILocation(line: 514, column: 25, scope: !14594)
!14596 = !DILocation(line: 514, column: 22, scope: !14594)
!14597 = !DILocation(line: 514, column: 6, scope: !14583)
!14598 = !DILocation(line: 515, column: 3, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14594, file: !2651, line: 514, column: 35)
!14600 = !DILocation(line: 0, scope: !14540, inlinedAt: !14601)
!14601 = distinct !DILocation(line: 516, column: 3, scope: !14599)
!14602 = !DILocation(line: 0, scope: !14548, inlinedAt: !14603)
!14603 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !14601)
!14604 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !14603)
!14605 = !DILocation(line: 517, column: 3, scope: !14599)
!14606 = !DILocation(line: 519, column: 18, scope: !14583)
!14607 = !DILocation(line: 522, column: 6, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14583, file: !2651, line: 522, column: 6)
!14609 = !DILocation(line: 522, column: 27, scope: !14608)
!14610 = !DILocation(line: 522, column: 30, scope: !14608)
!14611 = !DILocation(line: 522, column: 6, scope: !14583)
!14612 = !DILocation(line: 523, column: 30, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !2651, line: 523, column: 7)
!14614 = distinct !DILexicalBlock(scope: !14608, file: !2651, line: 522, column: 51)
!14615 = !DILocation(line: 523, column: 13, scope: !14613)
!14616 = !DILocation(line: 523, column: 7, scope: !14614)
!14617 = !DILocation(line: 530, column: 10, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14613, file: !2651, line: 523, column: 43)
!14619 = !DILocation(line: 531, column: 3, scope: !14618)
!14620 = !DILocation(line: 532, column: 30, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14613, file: !2651, line: 531, column: 10)
!14622 = !DILocation(line: 535, column: 29, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14608, file: !2651, line: 534, column: 9)
!14624 = !DILocation(line: 0, scope: !14540, inlinedAt: !14625)
!14625 = distinct !DILocation(line: 537, column: 2, scope: !14583)
!14626 = !DILocation(line: 0, scope: !14548, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !14625)
!14628 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !14627)
!14629 = !DILocation(line: 538, column: 1, scope: !14583)
!14630 = distinct !DISubprogram(name: "sliceable", scope: !2651, file: !2651, line: 468, type: !14631, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14633)
!14631 = !DISubroutineType(types: !14632)
!14632 = !{!329, !2544}
!14633 = !{!14634, !14635}
!14634 = !DILocalVariable(name: "thread", arg: 1, scope: !14630, file: !2651, line: 468, type: !2544)
!14635 = !DILocalVariable(name: "ret", scope: !14630, file: !2651, line: 470, type: !329)
!14636 = !DILocation(line: 0, scope: !14630)
!14637 = !DILocation(line: 470, column: 13, scope: !14630)
!14638 = !DILocation(line: 471, column: 3, scope: !14630)
!14639 = !DILocation(line: 471, column: 7, scope: !14630)
!14640 = !DILocation(line: 472, column: 3, scope: !14630)
!14641 = !DILocation(line: 472, column: 37, scope: !14630)
!14642 = !DILocation(line: 472, column: 24, scope: !14630)
!14643 = !DILocation(line: 472, column: 43, scope: !14630)
!14644 = !DILocation(line: 472, column: 7, scope: !14630)
!14645 = !DILocation(line: 473, column: 3, scope: !14630)
!14646 = !DILocation(line: 473, column: 7, scope: !14630)
!14647 = !DILocation(line: 473, column: 6, scope: !14630)
!14648 = !DILocation(line: 479, column: 2, scope: !14630)
!14649 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2651, file: !2651, line: 482, type: !14650, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14652)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{!14505, !14505}
!14652 = !{!14653, !14654}
!14653 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14649, file: !2651, line: 482, type: !14505)
!14654 = !DILocalVariable(name: "curr", scope: !14649, file: !2651, line: 484, type: !2544)
!14655 = !DILocation(line: 0, scope: !14649)
!14656 = !DILocation(line: 484, column: 26, scope: !14649)
!14657 = !DILocation(line: 493, column: 7, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14649, file: !2651, line: 493, column: 6)
!14659 = !DILocation(line: 493, column: 6, scope: !14649)
!14660 = !DILocation(line: 494, column: 3, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14658, file: !2651, line: 493, column: 49)
!14662 = !DILocation(line: 495, column: 2, scope: !14661)
!14663 = !DILocation(line: 496, column: 2, scope: !14649)
!14664 = !DILocation(line: 499, column: 1, scope: !14649)
!14665 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13208, file: !13208, line: 106, type: !14631, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14666)
!14666 = !{!14667, !14668}
!14667 = !DILocalVariable(name: "thread", arg: 1, scope: !14665, file: !13208, line: 106, type: !2544)
!14668 = !DILocalVariable(name: "state", scope: !14665, file: !13208, line: 108, type: !143)
!14669 = !DILocation(line: 0, scope: !14665)
!14670 = !DILocation(line: 108, column: 31, scope: !14665)
!14671 = !DILocation(line: 110, column: 16, scope: !14665)
!14672 = !DILocation(line: 111, column: 41, scope: !14665)
!14673 = !DILocation(line: 110, column: 2, scope: !14665)
!14674 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2651, file: !2651, line: 393, type: !14471, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14675)
!14675 = !{!14676}
!14676 = !DILocalVariable(name: "thread", arg: 1, scope: !14674, file: !2651, line: 393, type: !2544)
!14677 = !DILocation(line: 0, scope: !14674)
!14678 = !DILocation(line: 395, column: 6, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14674, file: !2651, line: 395, column: 6)
!14680 = !DILocation(line: 395, column: 6, scope: !14674)
!14681 = !DILocalVariable(name: "thread", arg: 1, scope: !14682, file: !2651, line: 264, type: !2544)
!14682 = distinct !DISubprogram(name: "dequeue_thread", scope: !2651, file: !2651, line: 264, type: !14471, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14683)
!14683 = !{!14681}
!14684 = !DILocation(line: 0, scope: !14682, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 396, column: 3, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14679, file: !2651, line: 395, column: 34)
!14687 = !DILocation(line: 266, column: 15, scope: !14682, inlinedAt: !14685)
!14688 = !DILocation(line: 266, column: 28, scope: !14682, inlinedAt: !14685)
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14690, file: !2651, line: 232, type: !2544)
!14690 = distinct !DISubprogram(name: "runq_remove", scope: !2651, file: !2651, line: 232, type: !14471, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14691)
!14691 = !{!14689}
!14692 = !DILocation(line: 0, scope: !14690, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 268, column: 3, scope: !14694, inlinedAt: !14685)
!14694 = distinct !DILexicalBlock(scope: !14695, file: !2651, line: 267, column: 35)
!14695 = distinct !DILexicalBlock(scope: !14682, file: !2651, line: 267, column: 6)
!14696 = !DILocation(line: 234, column: 2, scope: !14690, inlinedAt: !14693)
!14697 = !DILocation(line: 397, column: 2, scope: !14686)
!14698 = !DILocalVariable(name: "thread", arg: 1, scope: !14699, file: !2651, line: 250, type: !2544)
!14699 = distinct !DISubprogram(name: "queue_thread", scope: !2651, file: !2651, line: 250, type: !14471, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14700)
!14700 = !{!14698}
!14701 = !DILocation(line: 0, scope: !14699, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 398, column: 2, scope: !14674)
!14703 = !DILocation(line: 252, column: 15, scope: !14699, inlinedAt: !14702)
!14704 = !DILocation(line: 252, column: 28, scope: !14699, inlinedAt: !14702)
!14705 = !DILocalVariable(name: "thread", arg: 1, scope: !14706, file: !2651, line: 227, type: !2544)
!14706 = distinct !DISubprogram(name: "runq_add", scope: !2651, file: !2651, line: 227, type: !14471, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14707)
!14707 = !{!14705}
!14708 = !DILocation(line: 0, scope: !14706, inlinedAt: !14709)
!14709 = distinct !DILocation(line: 254, column: 3, scope: !14710, inlinedAt: !14702)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !2651, line: 253, column: 35)
!14711 = distinct !DILexicalBlock(scope: !14699, file: !2651, line: 253, column: 6)
!14712 = !DILocalVariable(name: "pq", arg: 1, scope: !14713, file: !2651, line: 181, type: !14716)
!14713 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2651, file: !2651, line: 181, type: !14714, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14717)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{null, !14716, !2544}
!14716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!14717 = !{!14712, !14718, !14719}
!14718 = !DILocalVariable(name: "thread", arg: 2, scope: !14713, file: !2651, line: 182, type: !2544)
!14719 = !DILocalVariable(name: "t", scope: !14713, file: !2651, line: 184, type: !2544)
!14720 = !DILocation(line: 0, scope: !14713, inlinedAt: !14721)
!14721 = distinct !DILocation(line: 229, column: 2, scope: !14706, inlinedAt: !14709)
!14722 = !DILocation(line: 188, column: 2, scope: !14723, inlinedAt: !14721)
!14723 = distinct !DILexicalBlock(scope: !14713, file: !2651, line: 188, column: 2)
!14724 = !DILocation(line: 188, column: 2, scope: !14725, inlinedAt: !14721)
!14725 = distinct !DILexicalBlock(scope: !14723, file: !2651, line: 188, column: 2)
!14726 = !DILocation(line: 0, scope: !14723, inlinedAt: !14721)
!14727 = !DILocation(line: 189, column: 7, scope: !14728, inlinedAt: !14721)
!14728 = distinct !DILexicalBlock(scope: !14729, file: !2651, line: 189, column: 7)
!14729 = distinct !DILexicalBlock(scope: !14725, file: !2651, line: 188, column: 56)
!14730 = !DILocation(line: 189, column: 35, scope: !14728, inlinedAt: !14721)
!14731 = !DILocation(line: 189, column: 7, scope: !14729, inlinedAt: !14721)
!14732 = !DILocation(line: 191, column: 21, scope: !14733, inlinedAt: !14721)
!14733 = distinct !DILexicalBlock(scope: !14728, file: !2651, line: 189, column: 40)
!14734 = !DILocation(line: 190, column: 4, scope: !14733, inlinedAt: !14721)
!14735 = !DILocation(line: 192, column: 4, scope: !14733, inlinedAt: !14721)
!14736 = distinct !{!14736, !14722, !14737}
!14737 = !DILocation(line: 194, column: 2, scope: !14723, inlinedAt: !14721)
!14738 = !DILocation(line: 196, column: 37, scope: !14713, inlinedAt: !14721)
!14739 = !DILocation(line: 196, column: 2, scope: !14713, inlinedAt: !14721)
!14740 = !DILocation(line: 197, column: 1, scope: !14713, inlinedAt: !14721)
!14741 = !DILocation(line: 399, column: 25, scope: !14674)
!14742 = !DILocation(line: 399, column: 22, scope: !14674)
!14743 = !DILocation(line: 399, column: 2, scope: !14674)
!14744 = !DILocation(line: 400, column: 1, scope: !14674)
!14745 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13208, file: !13208, line: 136, type: !14631, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14746)
!14746 = !{!14747}
!14747 = !DILocalVariable(name: "thread", arg: 1, scope: !14745, file: !13208, line: 136, type: !2544)
!14748 = !DILocation(line: 0, scope: !14745)
!14749 = !DILocation(line: 138, column: 9, scope: !14745)
!14750 = !DILocation(line: 138, column: 2, scope: !14745)
!14751 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2651, file: !2651, line: 1137, type: !14714, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14752)
!14752 = !{!14753, !14754}
!14753 = !DILocalVariable(name: "pq", arg: 1, scope: !14751, file: !2651, line: 1137, type: !14716)
!14754 = !DILocalVariable(name: "thread", arg: 2, scope: !14751, file: !2651, line: 1137, type: !2544)
!14755 = !DILocation(line: 0, scope: !14751)
!14756 = !DILocation(line: 1141, column: 33, scope: !14751)
!14757 = !DILocation(line: 1141, column: 2, scope: !14751)
!14758 = !DILocation(line: 1142, column: 1, scope: !14751)
!14759 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !77, file: !77, line: 294, type: !14760, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14762)
!14760 = !DISubroutineType(types: !14761)
!14761 = !{!2647, !14716}
!14762 = !{!14763}
!14763 = !DILocalVariable(name: "list", arg: 1, scope: !14759, file: !77, line: 294, type: !14716)
!14764 = !DILocation(line: 0, scope: !14759)
!14765 = !DILocation(line: 296, column: 9, scope: !14759)
!14766 = !DILocation(line: 296, column: 49, scope: !14759)
!14767 = !DILocation(line: 296, column: 2, scope: !14759)
!14768 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !77, file: !77, line: 443, type: !14769, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14771)
!14769 = !DISubroutineType(types: !14770)
!14770 = !{null, !2647, !2647}
!14771 = !{!14772, !14773, !14774}
!14772 = !DILocalVariable(name: "successor", arg: 1, scope: !14768, file: !77, line: 443, type: !2647)
!14773 = !DILocalVariable(name: "node", arg: 2, scope: !14768, file: !77, line: 443, type: !2647)
!14774 = !DILocalVariable(name: "prev", scope: !14768, file: !77, line: 445, type: !14775)
!14775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2647)
!14776 = !DILocation(line: 0, scope: !14768)
!14777 = !DILocation(line: 445, column: 39, scope: !14768)
!14778 = !DILocation(line: 447, column: 8, scope: !14768)
!14779 = !DILocation(line: 447, column: 13, scope: !14768)
!14780 = !DILocation(line: 448, column: 8, scope: !14768)
!14781 = !DILocation(line: 448, column: 13, scope: !14768)
!14782 = !DILocation(line: 449, column: 8, scope: !14768)
!14783 = !DILocation(line: 449, column: 13, scope: !14768)
!14784 = !DILocation(line: 450, column: 18, scope: !14768)
!14785 = !DILocation(line: 451, column: 1, scope: !14768)
!14786 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !77, file: !77, line: 341, type: !14787, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14789)
!14787 = !DISubroutineType(types: !14788)
!14788 = !{!2647, !14716, !2647}
!14789 = !{!14790, !14791}
!14790 = !DILocalVariable(name: "list", arg: 1, scope: !14786, file: !77, line: 341, type: !14716)
!14791 = !DILocalVariable(name: "node", arg: 2, scope: !14786, file: !77, line: 342, type: !2647)
!14792 = !DILocation(line: 0, scope: !14786)
!14793 = !DILocation(line: 344, column: 15, scope: !14786)
!14794 = !DILocation(line: 344, column: 9, scope: !14786)
!14795 = !DILocation(line: 344, column: 26, scope: !14786)
!14796 = !DILocation(line: 344, column: 2, scope: !14786)
!14797 = distinct !DISubprogram(name: "sys_dlist_append", scope: !77, file: !77, line: 404, type: !14798, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14800)
!14798 = !DISubroutineType(types: !14799)
!14799 = !{null, !14716, !2647}
!14800 = !{!14801, !14802, !14803}
!14801 = !DILocalVariable(name: "list", arg: 1, scope: !14797, file: !77, line: 404, type: !14716)
!14802 = !DILocalVariable(name: "node", arg: 2, scope: !14797, file: !77, line: 404, type: !2647)
!14803 = !DILocalVariable(name: "tail", scope: !14797, file: !77, line: 406, type: !14775)
!14804 = !DILocation(line: 0, scope: !14797)
!14805 = !DILocation(line: 406, column: 34, scope: !14797)
!14806 = !DILocation(line: 408, column: 8, scope: !14797)
!14807 = !DILocation(line: 408, column: 13, scope: !14797)
!14808 = !DILocation(line: 409, column: 8, scope: !14797)
!14809 = !DILocation(line: 409, column: 13, scope: !14797)
!14810 = !DILocation(line: 411, column: 8, scope: !14797)
!14811 = !DILocation(line: 411, column: 13, scope: !14797)
!14812 = !DILocation(line: 412, column: 13, scope: !14797)
!14813 = !DILocation(line: 413, column: 1, scope: !14797)
!14814 = distinct !DISubprogram(name: "update_cache", scope: !2651, file: !2651, line: 559, type: !8319, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14815)
!14815 = !{!14816, !14817}
!14816 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14814, file: !2651, line: 559, type: !55)
!14817 = !DILocalVariable(name: "thread", scope: !14814, file: !2651, line: 562, type: !2544)
!14818 = !DILocation(line: 0, scope: !14814)
!14819 = !DILocation(line: 239, column: 9, scope: !14820, inlinedAt: !14823)
!14820 = distinct !DISubprogram(name: "runq_best", scope: !2651, file: !2651, line: 237, type: !14821, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!14821 = !DISubroutineType(types: !14822)
!14822 = !{!2544}
!14823 = distinct !DILocation(line: 314, column: 28, scope: !14824, inlinedAt: !14827)
!14824 = distinct !DISubprogram(name: "next_up", scope: !2651, file: !2651, line: 312, type: !14821, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14825)
!14825 = !{!14826}
!14826 = !DILocalVariable(name: "thread", scope: !14824, file: !2651, line: 314, type: !2544)
!14827 = distinct !DILocation(line: 562, column: 28, scope: !14814)
!14828 = !DILocation(line: 0, scope: !14824, inlinedAt: !14827)
!14829 = !DILocation(line: 340, column: 17, scope: !14824, inlinedAt: !14827)
!14830 = !DILocation(line: 340, column: 9, scope: !14824, inlinedAt: !14827)
!14831 = !DILocalVariable(name: "thread", arg: 1, scope: !14832, file: !2651, line: 127, type: !2544)
!14832 = distinct !DISubprogram(name: "should_preempt", scope: !2651, file: !2651, line: 127, type: !14833, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14835)
!14833 = !DISubroutineType(types: !14834)
!14834 = !{!329, !2544, !55}
!14835 = !{!14831, !14836}
!14836 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14832, file: !2651, line: 128, type: !55)
!14837 = !DILocation(line: 0, scope: !14832, inlinedAt: !14838)
!14838 = distinct !DILocation(line: 564, column: 6, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14814, file: !2651, line: 564, column: 6)
!14840 = !DILocation(line: 133, column: 17, scope: !14841, inlinedAt: !14838)
!14841 = distinct !DILexicalBlock(scope: !14832, file: !2651, line: 133, column: 6)
!14842 = !DILocation(line: 0, scope: !14839)
!14843 = !DILocation(line: 133, column: 6, scope: !14832, inlinedAt: !14838)
!14844 = !DILocation(line: 140, column: 6, scope: !14845, inlinedAt: !14838)
!14845 = distinct !DILexicalBlock(scope: !14832, file: !2651, line: 140, column: 6)
!14846 = !DILocation(line: 140, column: 6, scope: !14832, inlinedAt: !14838)
!14847 = !DILocation(line: 150, column: 9, scope: !14848, inlinedAt: !14838)
!14848 = distinct !DILexicalBlock(scope: !14832, file: !2651, line: 149, column: 6)
!14849 = !DILocation(line: 149, column: 6, scope: !14832, inlinedAt: !14838)
!14850 = !DILocation(line: 157, column: 6, scope: !14851, inlinedAt: !14838)
!14851 = distinct !DILexicalBlock(scope: !14832, file: !2651, line: 157, column: 6)
!14852 = !DILocation(line: 564, column: 6, scope: !14814)
!14853 = !DILocation(line: 566, column: 14, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14855, file: !2651, line: 566, column: 7)
!14855 = distinct !DILexicalBlock(scope: !14839, file: !2651, line: 564, column: 42)
!14856 = !DILocation(line: 566, column: 7, scope: !14855)
!14857 = !DILocation(line: 567, column: 4, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14854, file: !2651, line: 566, column: 27)
!14859 = !DILocation(line: 568, column: 3, scope: !14858)
!14860 = !DILocation(line: 585, column: 1, scope: !14814)
!14861 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2651, file: !2651, line: 1144, type: !14862, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14864)
!14862 = !DISubroutineType(types: !14863)
!14863 = !{!2544, !14716}
!14864 = !{!14865, !14866, !14867}
!14865 = !DILocalVariable(name: "pq", arg: 1, scope: !14861, file: !2651, line: 1144, type: !14716)
!14866 = !DILocalVariable(name: "thread", scope: !14861, file: !2651, line: 1146, type: !2544)
!14867 = !DILocalVariable(name: "n", scope: !14861, file: !2651, line: 1147, type: !2647)
!14868 = !DILocation(line: 0, scope: !14861)
!14869 = !DILocation(line: 1147, column: 19, scope: !14861)
!14870 = !DILocation(line: 1152, column: 2, scope: !14861)
!14871 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13208, file: !13208, line: 115, type: !14631, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14872)
!14872 = !{!14873}
!14873 = !DILocalVariable(name: "thread", arg: 1, scope: !14871, file: !13208, line: 115, type: !2544)
!14874 = !DILocation(line: 0, scope: !14871)
!14875 = !DILocation(line: 117, column: 46, scope: !14871)
!14876 = !DILocation(line: 117, column: 10, scope: !14871)
!14877 = !DILocation(line: 117, column: 9, scope: !14871)
!14878 = !DILocation(line: 117, column: 2, scope: !14871)
!14879 = distinct !DISubprogram(name: "is_preempt", scope: !2651, file: !2651, line: 62, type: !14489, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14880)
!14880 = !{!14881}
!14881 = !DILocalVariable(name: "thread", arg: 1, scope: !14879, file: !2651, line: 62, type: !2544)
!14882 = !DILocation(line: 0, scope: !14879)
!14883 = !DILocation(line: 65, column: 22, scope: !14879)
!14884 = !DILocation(line: 65, column: 30, scope: !14879)
!14885 = !DILocation(line: 65, column: 2, scope: !14879)
!14886 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13603, file: !13603, line: 35, type: !14887, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14891)
!14887 = !DISubroutineType(types: !14888)
!14888 = !{!329, !14889}
!14889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14890, size: 32)
!14890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2595)
!14891 = !{!14892}
!14892 = !DILocalVariable(name: "to", arg: 1, scope: !14886, file: !13603, line: 35, type: !14889)
!14893 = !DILocation(line: 0, scope: !14886)
!14894 = !DILocation(line: 37, column: 35, scope: !14886)
!14895 = !DILocation(line: 37, column: 10, scope: !14886)
!14896 = !DILocation(line: 37, column: 9, scope: !14886)
!14897 = !DILocation(line: 37, column: 2, scope: !14886)
!14898 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !77, file: !77, line: 225, type: !14899, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14903)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{!329, !14901}
!14901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14902, size: 32)
!14902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2554)
!14903 = !{!14904}
!14904 = !DILocalVariable(name: "node", arg: 1, scope: !14898, file: !77, line: 225, type: !14901)
!14905 = !DILocation(line: 0, scope: !14898)
!14906 = !DILocation(line: 227, column: 15, scope: !14898)
!14907 = !DILocation(line: 227, column: 20, scope: !14898)
!14908 = !DILocation(line: 227, column: 2, scope: !14898)
!14909 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !77, file: !77, line: 325, type: !14787, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14910)
!14910 = !{!14911, !14912}
!14911 = !DILocalVariable(name: "list", arg: 1, scope: !14909, file: !77, line: 325, type: !14716)
!14912 = !DILocalVariable(name: "node", arg: 2, scope: !14909, file: !77, line: 326, type: !2647)
!14913 = !DILocation(line: 0, scope: !14909)
!14914 = !DILocation(line: 328, column: 24, scope: !14909)
!14915 = !DILocation(line: 328, column: 15, scope: !14909)
!14916 = !DILocation(line: 328, column: 9, scope: !14909)
!14917 = !DILocation(line: 328, column: 45, scope: !14909)
!14918 = !DILocation(line: 328, column: 2, scope: !14909)
!14919 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !77, file: !77, line: 266, type: !14920, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14922)
!14920 = !DISubroutineType(types: !14921)
!14921 = !{!329, !14716}
!14922 = !{!14923}
!14923 = !DILocalVariable(name: "list", arg: 1, scope: !14919, file: !77, line: 266, type: !14716)
!14924 = !DILocation(line: 0, scope: !14919)
!14925 = !DILocation(line: 268, column: 15, scope: !14919)
!14926 = !DILocation(line: 268, column: 20, scope: !14919)
!14927 = !DILocation(line: 268, column: 2, scope: !14919)
!14928 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !77, file: !77, line: 496, type: !14929, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14931)
!14929 = !DISubroutineType(types: !14930)
!14930 = !{null, !2647}
!14931 = !{!14932, !14933, !14934}
!14932 = !DILocalVariable(name: "node", arg: 1, scope: !14928, file: !77, line: 496, type: !2647)
!14933 = !DILocalVariable(name: "prev", scope: !14928, file: !77, line: 498, type: !14775)
!14934 = !DILocalVariable(name: "next", scope: !14928, file: !77, line: 499, type: !14775)
!14935 = !DILocation(line: 0, scope: !14928)
!14936 = !DILocation(line: 498, column: 34, scope: !14928)
!14937 = !DILocation(line: 499, column: 34, scope: !14928)
!14938 = !DILocation(line: 501, column: 8, scope: !14928)
!14939 = !DILocation(line: 501, column: 13, scope: !14928)
!14940 = !DILocation(line: 502, column: 8, scope: !14928)
!14941 = !DILocation(line: 502, column: 13, scope: !14928)
!14942 = !DILocation(line: 503, column: 2, scope: !14928)
!14943 = !DILocation(line: 504, column: 1, scope: !14928)
!14944 = distinct !DISubprogram(name: "sys_dnode_init", scope: !77, file: !77, line: 211, type: !14929, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14945)
!14945 = !{!14946}
!14946 = !DILocalVariable(name: "node", arg: 1, scope: !14944, file: !77, line: 211, type: !2647)
!14947 = !DILocation(line: 0, scope: !14944)
!14948 = !DILocation(line: 213, column: 8, scope: !14944)
!14949 = !DILocation(line: 213, column: 13, scope: !14944)
!14950 = !DILocation(line: 214, column: 8, scope: !14944)
!14951 = !DILocation(line: 214, column: 13, scope: !14944)
!14952 = !DILocation(line: 215, column: 1, scope: !14944)
!14953 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13208, file: !13208, line: 131, type: !14954, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14956)
!14954 = !DISubroutineType(types: !14955)
!14955 = !{!329, !2544, !40}
!14956 = !{!14957, !14958}
!14957 = !DILocalVariable(name: "thread", arg: 1, scope: !14953, file: !13208, line: 131, type: !2544)
!14958 = !DILocalVariable(name: "state", arg: 2, scope: !14953, file: !13208, line: 131, type: !40)
!14959 = !DILocation(line: 0, scope: !14953)
!14960 = !DILocation(line: 133, column: 23, scope: !14953)
!14961 = !DILocation(line: 133, column: 45, scope: !14953)
!14962 = !DILocation(line: 133, column: 2, scope: !14953)
!14963 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13208, file: !13208, line: 211, type: !14055, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14964)
!14964 = !{!14965, !14966}
!14965 = !DILocalVariable(name: "prio", arg: 1, scope: !14963, file: !13208, line: 211, type: !55)
!14966 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14963, file: !13208, line: 211, type: !55)
!14967 = !DILocation(line: 0, scope: !14963)
!14968 = !DILocation(line: 213, column: 9, scope: !14963)
!14969 = !DILocation(line: 213, column: 2, scope: !14963)
!14970 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13208, file: !13208, line: 83, type: !14631, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14971)
!14971 = !{!14972}
!14972 = !DILocalVariable(name: "thread", arg: 1, scope: !14970, file: !13208, line: 83, type: !2544)
!14973 = !DILocation(line: 0, scope: !14970)
!14974 = !DILocation(line: 89, column: 16, scope: !14970)
!14975 = !DILocation(line: 89, column: 2, scope: !14970)
!14976 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13208, file: !13208, line: 206, type: !14055, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14977)
!14977 = !{!14978, !14979}
!14978 = !DILocalVariable(name: "prio1", arg: 1, scope: !14976, file: !13208, line: 206, type: !55)
!14979 = !DILocalVariable(name: "prio2", arg: 2, scope: !14976, file: !13208, line: 206, type: !55)
!14980 = !DILocation(line: 0, scope: !14976)
!14981 = !DILocation(line: 208, column: 15, scope: !14976)
!14982 = !DILocation(line: 208, column: 2, scope: !14976)
!14983 = distinct !DISubprogram(name: "z_ready_thread", scope: !2651, file: !2651, line: 635, type: !14471, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !14984)
!14984 = !{!14985, !14986, !14988}
!14985 = !DILocalVariable(name: "thread", arg: 1, scope: !14983, file: !2651, line: 635, type: !2544)
!14986 = !DILocalVariable(name: "__i", scope: !14987, file: !2651, line: 637, type: !14505)
!14987 = distinct !DILexicalBlock(scope: !14983, file: !2651, line: 637, column: 2)
!14988 = !DILocalVariable(name: "__key", scope: !14987, file: !2651, line: 637, type: !14505)
!14989 = !DILocation(line: 0, scope: !14983)
!14990 = !DILocation(line: 0, scope: !14987)
!14991 = !DILocation(line: 0, scope: !14513, inlinedAt: !14992)
!14992 = distinct !DILocation(line: 637, column: 2, scope: !14987)
!14993 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !14994)
!14994 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !14992)
!14995 = !DILocation(line: 0, scope: !14522, inlinedAt: !14994)
!14996 = !DILocation(line: 639, column: 4, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14998, file: !2651, line: 638, column: 41)
!14998 = distinct !DILexicalBlock(scope: !14999, file: !2651, line: 638, column: 7)
!14999 = distinct !DILexicalBlock(scope: !15000, file: !2651, line: 637, column: 26)
!15000 = distinct !DILexicalBlock(scope: !14987, file: !2651, line: 637, column: 2)
!15001 = !DILocation(line: 0, scope: !14540, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 637, column: 2, scope: !15000)
!15003 = !DILocation(line: 0, scope: !14548, inlinedAt: !15004)
!15004 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15002)
!15005 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15004)
!15006 = !DILocation(line: 642, column: 1, scope: !14983)
!15007 = distinct !DISubprogram(name: "ready_thread", scope: !2651, file: !2651, line: 617, type: !14471, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15008)
!15008 = !{!15009}
!15009 = !DILocalVariable(name: "thread", arg: 1, scope: !15007, file: !2651, line: 617, type: !2544)
!15010 = !DILocation(line: 0, scope: !15007)
!15011 = !DILocation(line: 626, column: 7, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15007, file: !2651, line: 626, column: 6)
!15013 = !DILocation(line: 626, column: 34, scope: !15012)
!15014 = !DILocation(line: 626, column: 37, scope: !15012)
!15015 = !DILocation(line: 626, column: 6, scope: !15007)
!15016 = !DILocation(line: 0, scope: !14699, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 629, column: 3, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !15012, file: !2651, line: 626, column: 64)
!15019 = !DILocation(line: 252, column: 15, scope: !14699, inlinedAt: !15017)
!15020 = !DILocation(line: 252, column: 28, scope: !14699, inlinedAt: !15017)
!15021 = !DILocation(line: 0, scope: !14706, inlinedAt: !15022)
!15022 = distinct !DILocation(line: 254, column: 3, scope: !14710, inlinedAt: !15017)
!15023 = !DILocation(line: 0, scope: !14713, inlinedAt: !15024)
!15024 = distinct !DILocation(line: 229, column: 2, scope: !14706, inlinedAt: !15022)
!15025 = !DILocation(line: 188, column: 2, scope: !14723, inlinedAt: !15024)
!15026 = !DILocation(line: 188, column: 2, scope: !14725, inlinedAt: !15024)
!15027 = !DILocation(line: 0, scope: !14723, inlinedAt: !15024)
!15028 = !DILocation(line: 189, column: 7, scope: !14728, inlinedAt: !15024)
!15029 = !DILocation(line: 189, column: 35, scope: !14728, inlinedAt: !15024)
!15030 = !DILocation(line: 189, column: 7, scope: !14729, inlinedAt: !15024)
!15031 = !DILocation(line: 191, column: 21, scope: !14733, inlinedAt: !15024)
!15032 = !DILocation(line: 190, column: 4, scope: !14733, inlinedAt: !15024)
!15033 = !DILocation(line: 192, column: 4, scope: !14733, inlinedAt: !15024)
!15034 = distinct !{!15034, !15025, !15035}
!15035 = !DILocation(line: 194, column: 2, scope: !14723, inlinedAt: !15024)
!15036 = !DILocation(line: 196, column: 37, scope: !14713, inlinedAt: !15024)
!15037 = !DILocation(line: 196, column: 2, scope: !14713, inlinedAt: !15024)
!15038 = !DILocation(line: 197, column: 1, scope: !14713, inlinedAt: !15024)
!15039 = !DILocation(line: 630, column: 3, scope: !15018)
!15040 = !DILocation(line: 632, column: 2, scope: !15018)
!15041 = !DILocation(line: 633, column: 1, scope: !15007)
!15042 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13208, file: !13208, line: 120, type: !14631, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15043)
!15043 = !{!15044}
!15044 = !DILocalVariable(name: "thread", arg: 1, scope: !15042, file: !13208, line: 120, type: !2544)
!15045 = !DILocation(line: 0, scope: !15042)
!15046 = !DILocation(line: 122, column: 12, scope: !15042)
!15047 = !DILocation(line: 122, column: 62, scope: !15042)
!15048 = !DILocation(line: 123, column: 4, scope: !15042)
!15049 = !DILocation(line: 122, column: 2, scope: !15042)
!15050 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2651, file: !2651, line: 644, type: !14471, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15051)
!15051 = !{!15052, !15053, !15055}
!15052 = !DILocalVariable(name: "thread", arg: 1, scope: !15050, file: !2651, line: 644, type: !2544)
!15053 = !DILocalVariable(name: "__i", scope: !15054, file: !2651, line: 646, type: !14505)
!15054 = distinct !DILexicalBlock(scope: !15050, file: !2651, line: 646, column: 2)
!15055 = !DILocalVariable(name: "__key", scope: !15054, file: !2651, line: 646, type: !14505)
!15056 = !DILocation(line: 0, scope: !15050)
!15057 = !DILocation(line: 0, scope: !15054)
!15058 = !DILocation(line: 0, scope: !14513, inlinedAt: !15059)
!15059 = distinct !DILocation(line: 646, column: 2, scope: !15054)
!15060 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15061)
!15061 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15059)
!15062 = !DILocation(line: 0, scope: !14522, inlinedAt: !15061)
!15063 = !DILocation(line: 647, column: 3, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15065, file: !2651, line: 646, column: 26)
!15065 = distinct !DILexicalBlock(scope: !15054, file: !2651, line: 646, column: 2)
!15066 = !DILocation(line: 0, scope: !14540, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 646, column: 2, scope: !15065)
!15068 = !DILocation(line: 0, scope: !14548, inlinedAt: !15069)
!15069 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15067)
!15070 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15069)
!15071 = !DILocation(line: 649, column: 1, scope: !15050)
!15072 = distinct !DISubprogram(name: "z_sched_start", scope: !2651, file: !2651, line: 651, type: !14471, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15073)
!15073 = !{!15074, !15075}
!15074 = !DILocalVariable(name: "thread", arg: 1, scope: !15072, file: !2651, line: 651, type: !2544)
!15075 = !DILocalVariable(name: "key", scope: !15072, file: !2651, line: 653, type: !14505)
!15076 = !DILocation(line: 0, scope: !15072)
!15077 = !DILocation(line: 0, scope: !14513, inlinedAt: !15078)
!15078 = distinct !DILocation(line: 653, column: 25, scope: !15072)
!15079 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15080)
!15080 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15078)
!15081 = !DILocation(line: 0, scope: !14522, inlinedAt: !15080)
!15082 = !DILocation(line: 655, column: 6, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15072, file: !2651, line: 655, column: 6)
!15084 = !DILocation(line: 655, column: 6, scope: !15072)
!15085 = !DILocation(line: 0, scope: !14540, inlinedAt: !15086)
!15086 = distinct !DILocation(line: 656, column: 3, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15083, file: !2651, line: 655, column: 36)
!15088 = !DILocation(line: 0, scope: !14548, inlinedAt: !15089)
!15089 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15086)
!15090 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15089)
!15091 = !DILocation(line: 657, column: 3, scope: !15087)
!15092 = !DILocation(line: 660, column: 2, scope: !15072)
!15093 = !DILocation(line: 661, column: 2, scope: !15072)
!15094 = !DILocation(line: 662, column: 2, scope: !15072)
!15095 = !DILocation(line: 663, column: 1, scope: !15072)
!15096 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13208, file: !13208, line: 126, type: !14631, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15097)
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "thread", arg: 1, scope: !15096, file: !13208, line: 126, type: !2544)
!15099 = !DILocation(line: 0, scope: !15096)
!15100 = !DILocation(line: 128, column: 23, scope: !15096)
!15101 = !DILocation(line: 128, column: 36, scope: !15096)
!15102 = !DILocation(line: 128, column: 56, scope: !15096)
!15103 = !DILocation(line: 128, column: 2, scope: !15096)
!15104 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13208, file: !13208, line: 155, type: !14471, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15105)
!15105 = !{!15106}
!15106 = !DILocalVariable(name: "thread", arg: 1, scope: !15104, file: !13208, line: 155, type: !2544)
!15107 = !DILocation(line: 0, scope: !15104)
!15108 = !DILocation(line: 157, column: 15, scope: !15104)
!15109 = !DILocation(line: 157, column: 28, scope: !15104)
!15110 = !DILocation(line: 158, column: 1, scope: !15104)
!15111 = distinct !DISubprogram(name: "z_reschedule", scope: !2651, file: !2651, line: 967, type: !14541, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15112)
!15112 = !{!15113, !15114}
!15113 = !DILocalVariable(name: "lock", arg: 1, scope: !15111, file: !2651, line: 967, type: !14516)
!15114 = !DILocalVariable(name: "key", arg: 2, scope: !15111, file: !2651, line: 967, type: !14505)
!15115 = !DILocation(line: 0, scope: !15111)
!15116 = !DILocation(line: 969, column: 6, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15111, file: !2651, line: 969, column: 6)
!15118 = !DILocation(line: 969, column: 23, scope: !15117)
!15119 = !DILocation(line: 969, column: 26, scope: !15117)
!15120 = !DILocation(line: 969, column: 6, scope: !15111)
!15121 = !DILocalVariable(name: "key", arg: 2, scope: !15122, file: !13312, line: 193, type: !14505)
!15122 = distinct !DISubprogram(name: "z_swap", scope: !13312, file: !13312, line: 193, type: !15123, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15125)
!15123 = !DISubroutineType(types: !15124)
!15124 = !{!55, !14516, !14505}
!15125 = !{!15126, !15121}
!15126 = !DILocalVariable(name: "lock", arg: 1, scope: !15122, file: !13312, line: 193, type: !14516)
!15127 = !DILocation(line: 0, scope: !15122, inlinedAt: !15128)
!15128 = distinct !DILocation(line: 970, column: 3, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15117, file: !2651, line: 969, column: 39)
!15130 = !DILocation(line: 196, column: 9, scope: !15122, inlinedAt: !15128)
!15131 = !DILocation(line: 971, column: 2, scope: !15129)
!15132 = !DILocation(line: 0, scope: !14540, inlinedAt: !15133)
!15133 = distinct !DILocation(line: 972, column: 3, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15117, file: !2651, line: 971, column: 9)
!15135 = !DILocation(line: 0, scope: !14548, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15133)
!15137 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15136)
!15138 = !DILocation(line: 975, column: 1, scope: !15111)
!15139 = distinct !DISubprogram(name: "resched", scope: !2651, file: !2651, line: 940, type: !15140, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15142)
!15140 = !DISubroutineType(types: !15141)
!15141 = !{!329, !40}
!15142 = !{!15143}
!15143 = !DILocalVariable(name: "key", arg: 1, scope: !15139, file: !2651, line: 940, type: !40)
!15144 = !DILocation(line: 0, scope: !15139)
!15145 = !DILocalVariable(name: "key", arg: 1, scope: !15146, file: !6214, line: 112, type: !41)
!15146 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6214, file: !6214, line: 112, type: !15147, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15149)
!15147 = !DISubroutineType(types: !15148)
!15148 = !{!329, !41}
!15149 = !{!15145}
!15150 = !DILocation(line: 0, scope: !15146, inlinedAt: !15151)
!15151 = distinct !DILocation(line: 946, column: 9, scope: !15139)
!15152 = !DILocation(line: 115, column: 13, scope: !15146, inlinedAt: !15151)
!15153 = !DILocation(line: 946, column: 32, scope: !15139)
!15154 = !DILocation(line: 1031, column: 3, scope: !15155, inlinedAt: !15158)
!15155 = distinct !DISubprogram(name: "__get_IPSR", scope: !6483, file: !6483, line: 1027, type: !6564, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15156)
!15156 = !{!15157}
!15157 = !DILocalVariable(name: "result", scope: !15155, file: !6483, line: 1029, type: !40)
!15158 = distinct !DILocation(line: 48, column: 10, scope: !15159, inlinedAt: !15160)
!15159 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7292, file: !7292, line: 46, type: !7293, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!15160 = distinct !DILocation(line: 946, column: 36, scope: !15139)
!15161 = !{i64 3768718}
!15162 = !DILocation(line: 0, scope: !15155, inlinedAt: !15158)
!15163 = !DILocation(line: 48, column: 9, scope: !15159, inlinedAt: !15160)
!15164 = !DILocation(line: 946, column: 2, scope: !15139)
!15165 = distinct !DISubprogram(name: "need_swap", scope: !2651, file: !2651, line: 953, type: !7293, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15166)
!15166 = !{!15167}
!15167 = !DILocalVariable(name: "new_thread", scope: !15165, file: !2651, line: 959, type: !2544)
!15168 = !DILocation(line: 962, column: 31, scope: !15165)
!15169 = !DILocation(line: 0, scope: !15165)
!15170 = !DILocation(line: 963, column: 23, scope: !15165)
!15171 = !DILocation(line: 963, column: 20, scope: !15165)
!15172 = !DILocation(line: 963, column: 2, scope: !15165)
!15173 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13312, file: !13312, line: 181, type: !6493, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15174)
!15174 = !{!15175, !15176}
!15175 = !DILocalVariable(name: "key", arg: 1, scope: !15173, file: !13312, line: 181, type: !41)
!15176 = !DILocalVariable(name: "ret", scope: !15173, file: !13312, line: 183, type: !55)
!15177 = !DILocation(line: 0, scope: !15173)
!15178 = !DILocation(line: 185, column: 8, scope: !15173)
!15179 = !DILocation(line: 186, column: 2, scope: !15173)
!15180 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2651, file: !2651, line: 665, type: !14471, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15181)
!15181 = !{!15182, !15183, !15185}
!15182 = !DILocalVariable(name: "thread", arg: 1, scope: !15180, file: !2651, line: 665, type: !2544)
!15183 = !DILocalVariable(name: "__i", scope: !15184, file: !2651, line: 671, type: !14505)
!15184 = distinct !DILexicalBlock(scope: !15180, file: !2651, line: 671, column: 2)
!15185 = !DILocalVariable(name: "__key", scope: !15184, file: !2651, line: 671, type: !14505)
!15186 = !DILocation(line: 0, scope: !15180)
!15187 = !DILocation(line: 669, column: 8, scope: !15180)
!15188 = !DILocation(line: 0, scope: !15184)
!15189 = !DILocation(line: 0, scope: !14513, inlinedAt: !15190)
!15190 = distinct !DILocation(line: 671, column: 2, scope: !15184)
!15191 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15190)
!15193 = !DILocation(line: 0, scope: !14522, inlinedAt: !15192)
!15194 = !DILocation(line: 672, column: 7, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15196, file: !2651, line: 672, column: 7)
!15196 = distinct !DILexicalBlock(scope: !15197, file: !2651, line: 671, column: 26)
!15197 = distinct !DILexicalBlock(scope: !15184, file: !2651, line: 671, column: 2)
!15198 = !DILocation(line: 672, column: 7, scope: !15196)
!15199 = !DILocation(line: 0, scope: !14682, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 673, column: 4, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15195, file: !2651, line: 672, column: 35)
!15202 = !DILocation(line: 266, column: 15, scope: !14682, inlinedAt: !15200)
!15203 = !DILocation(line: 266, column: 28, scope: !14682, inlinedAt: !15200)
!15204 = !DILocation(line: 0, scope: !14690, inlinedAt: !15205)
!15205 = distinct !DILocation(line: 268, column: 3, scope: !14694, inlinedAt: !15200)
!15206 = !DILocation(line: 234, column: 2, scope: !14690, inlinedAt: !15205)
!15207 = !DILocation(line: 674, column: 3, scope: !15201)
!15208 = !DILocation(line: 675, column: 3, scope: !15196)
!15209 = !DILocation(line: 676, column: 26, scope: !15196)
!15210 = !DILocation(line: 676, column: 23, scope: !15196)
!15211 = !DILocation(line: 676, column: 3, scope: !15196)
!15212 = !DILocation(line: 0, scope: !14540, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 671, column: 2, scope: !15197)
!15214 = !DILocation(line: 0, scope: !14548, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15213)
!15216 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15215)
!15217 = !DILocation(line: 679, column: 16, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15180, file: !2651, line: 679, column: 6)
!15219 = !DILocation(line: 679, column: 13, scope: !15218)
!15220 = !DILocation(line: 679, column: 6, scope: !15180)
!15221 = !DILocation(line: 680, column: 3, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15218, file: !2651, line: 679, column: 26)
!15223 = !DILocation(line: 681, column: 2, scope: !15222)
!15224 = !DILocation(line: 684, column: 1, scope: !15180)
!15225 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13603, file: !13603, line: 52, type: !14489, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15226)
!15226 = !{!15227}
!15227 = !DILocalVariable(name: "thread", arg: 1, scope: !15225, file: !13603, line: 52, type: !2544)
!15228 = !DILocation(line: 0, scope: !15225)
!15229 = !DILocation(line: 54, column: 39, scope: !15225)
!15230 = !DILocation(line: 54, column: 9, scope: !15225)
!15231 = !DILocation(line: 54, column: 2, scope: !15225)
!15232 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13208, file: !13208, line: 141, type: !14471, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15233)
!15233 = !{!15234}
!15234 = !DILocalVariable(name: "thread", arg: 1, scope: !15232, file: !13208, line: 141, type: !2544)
!15235 = !DILocation(line: 0, scope: !15232)
!15236 = !DILocation(line: 143, column: 15, scope: !15232)
!15237 = !DILocation(line: 143, column: 28, scope: !15232)
!15238 = !DILocation(line: 146, column: 1, scope: !15232)
!15239 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13208, file: !13208, line: 73, type: !3440, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!15240 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 75, column: 30, scope: !15239)
!15242 = !DILocation(line: 0, scope: !14522, inlinedAt: !15241)
!15243 = !DILocation(line: 75, column: 9, scope: !15239)
!15244 = !DILocation(line: 76, column: 1, scope: !15239)
!15245 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2651, file: !2651, line: 977, type: !6574, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15246)
!15246 = !{!15247}
!15247 = !DILocalVariable(name: "key", arg: 1, scope: !15245, file: !2651, line: 977, type: !40)
!15248 = !DILocation(line: 0, scope: !15245)
!15249 = !DILocation(line: 979, column: 6, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15245, file: !2651, line: 979, column: 6)
!15251 = !DILocation(line: 979, column: 6, scope: !15245)
!15252 = !DILocation(line: 980, column: 3, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15250, file: !2651, line: 979, column: 20)
!15254 = !DILocation(line: 981, column: 2, scope: !15253)
!15255 = !DILocation(line: 0, scope: !14548, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 982, column: 3, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15250, file: !2651, line: 981, column: 9)
!15258 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15256)
!15259 = !DILocation(line: 985, column: 1, scope: !15245)
!15260 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2651, file: !2651, line: 695, type: !14471, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15261)
!15261 = !{!15262, !15263}
!15262 = !DILocalVariable(name: "thread", arg: 1, scope: !15260, file: !2651, line: 695, type: !2544)
!15263 = !DILocalVariable(name: "key", scope: !15260, file: !2651, line: 699, type: !14505)
!15264 = !DILocation(line: 0, scope: !15260)
!15265 = !DILocation(line: 0, scope: !14513, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 699, column: 25, scope: !15260)
!15267 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15266)
!15269 = !DILocation(line: 0, scope: !14522, inlinedAt: !15268)
!15270 = !DILocation(line: 702, column: 7, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15260, file: !2651, line: 702, column: 6)
!15272 = !DILocation(line: 702, column: 6, scope: !15260)
!15273 = !DILocation(line: 0, scope: !14540, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 703, column: 3, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15271, file: !2651, line: 702, column: 38)
!15276 = !DILocation(line: 0, scope: !14548, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15274)
!15278 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15277)
!15279 = !DILocation(line: 704, column: 3, scope: !15275)
!15280 = !DILocation(line: 707, column: 2, scope: !15260)
!15281 = !DILocation(line: 708, column: 2, scope: !15260)
!15282 = !DILocation(line: 710, column: 2, scope: !15260)
!15283 = !DILocation(line: 713, column: 1, scope: !15260)
!15284 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13208, file: !13208, line: 96, type: !14631, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15285)
!15285 = !{!15286}
!15286 = !DILocalVariable(name: "thread", arg: 1, scope: !15284, file: !13208, line: 96, type: !2544)
!15287 = !DILocation(line: 0, scope: !15284)
!15288 = !DILocation(line: 98, column: 23, scope: !15284)
!15289 = !DILocation(line: 98, column: 36, scope: !15284)
!15290 = !DILocation(line: 98, column: 57, scope: !15284)
!15291 = !DILocation(line: 98, column: 2, scope: !15284)
!15292 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13208, file: !13208, line: 148, type: !14471, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15293)
!15293 = !{!15294}
!15294 = !DILocalVariable(name: "thread", arg: 1, scope: !15292, file: !13208, line: 148, type: !2544)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 150, column: 15, scope: !15292)
!15297 = !DILocation(line: 150, column: 28, scope: !15292)
!15298 = !DILocation(line: 153, column: 1, scope: !15292)
!15299 = distinct !DISubprogram(name: "z_pend_thread", scope: !2651, file: !2651, line: 770, type: !15300, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15306)
!15300 = !DISubroutineType(types: !15301)
!15301 = !{null, !2544, !2575, !15302}
!15302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !15303)
!15303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, elements: !15304)
!15304 = !{!15305}
!15305 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15303, file: !31, line: 66, baseType: !30, size: 64)
!15306 = !{!15307, !15308, !15309, !15310, !15312}
!15307 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !2651, line: 770, type: !2544)
!15308 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15299, file: !2651, line: 770, type: !2575)
!15309 = !DILocalVariable(name: "timeout", arg: 3, scope: !15299, file: !2651, line: 771, type: !15302)
!15310 = !DILocalVariable(name: "__i", scope: !15311, file: !2651, line: 774, type: !14505)
!15311 = distinct !DILexicalBlock(scope: !15299, file: !2651, line: 774, column: 2)
!15312 = !DILocalVariable(name: "__key", scope: !15311, file: !2651, line: 774, type: !14505)
!15313 = !DILocation(line: 0, scope: !15299)
!15314 = !DILocation(line: 0, scope: !15311)
!15315 = !DILocation(line: 0, scope: !14513, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 774, column: 2, scope: !15311)
!15317 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15316)
!15319 = !DILocation(line: 0, scope: !14522, inlinedAt: !15318)
!15320 = !DILocation(line: 775, column: 3, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15322, file: !2651, line: 774, column: 26)
!15322 = distinct !DILexicalBlock(scope: !15311, file: !2651, line: 774, column: 2)
!15323 = !DILocation(line: 0, scope: !14540, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 774, column: 2, scope: !15322)
!15325 = !DILocation(line: 0, scope: !14548, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15324)
!15327 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15326)
!15328 = !DILocation(line: 777, column: 1, scope: !15299)
!15329 = distinct !DISubprogram(name: "pend_locked", scope: !2651, file: !2651, line: 760, type: !15300, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15330)
!15330 = !{!15331, !15332, !15333}
!15331 = !DILocalVariable(name: "thread", arg: 1, scope: !15329, file: !2651, line: 760, type: !2544)
!15332 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15329, file: !2651, line: 760, type: !2575)
!15333 = !DILocalVariable(name: "timeout", arg: 3, scope: !15329, file: !2651, line: 761, type: !15302)
!15334 = !DILocation(line: 0, scope: !15329)
!15335 = !DILocation(line: 766, column: 2, scope: !15329)
!15336 = !DILocation(line: 767, column: 2, scope: !15329)
!15337 = !DILocation(line: 768, column: 1, scope: !15329)
!15338 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2651, file: !2651, line: 740, type: !15339, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15341)
!15339 = !DISubroutineType(types: !15340)
!15340 = !{null, !2544, !2575}
!15341 = !{!15342, !15343}
!15342 = !DILocalVariable(name: "thread", arg: 1, scope: !15338, file: !2651, line: 740, type: !2544)
!15343 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15338, file: !2651, line: 740, type: !2575)
!15344 = !DILocation(line: 0, scope: !15338)
!15345 = !DILocation(line: 742, column: 2, scope: !15338)
!15346 = !DILocation(line: 743, column: 2, scope: !15338)
!15347 = !DILocation(line: 747, column: 13, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15338, file: !2651, line: 747, column: 6)
!15349 = !DILocation(line: 747, column: 6, scope: !15338)
!15350 = !DILocation(line: 748, column: 16, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15348, file: !2651, line: 747, column: 22)
!15352 = !DILocation(line: 748, column: 26, scope: !15351)
!15353 = !DILocation(line: 749, column: 28, scope: !15351)
!15354 = !DILocation(line: 0, scope: !14713, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 749, column: 3, scope: !15351)
!15356 = !DILocation(line: 188, column: 2, scope: !14723, inlinedAt: !15355)
!15357 = !DILocation(line: 188, column: 2, scope: !14725, inlinedAt: !15355)
!15358 = !DILocation(line: 0, scope: !14723, inlinedAt: !15355)
!15359 = !DILocation(line: 189, column: 7, scope: !14728, inlinedAt: !15355)
!15360 = !DILocation(line: 189, column: 35, scope: !14728, inlinedAt: !15355)
!15361 = !DILocation(line: 189, column: 7, scope: !14729, inlinedAt: !15355)
!15362 = !DILocation(line: 191, column: 21, scope: !14733, inlinedAt: !15355)
!15363 = !DILocation(line: 190, column: 4, scope: !14733, inlinedAt: !15355)
!15364 = !DILocation(line: 192, column: 4, scope: !14733, inlinedAt: !15355)
!15365 = distinct !{!15365, !15356, !15366}
!15366 = !DILocation(line: 194, column: 2, scope: !14723, inlinedAt: !15355)
!15367 = !DILocation(line: 196, column: 37, scope: !14713, inlinedAt: !15355)
!15368 = !DILocation(line: 196, column: 2, scope: !14713, inlinedAt: !15355)
!15369 = !DILocation(line: 197, column: 1, scope: !14713, inlinedAt: !15355)
!15370 = !DILocation(line: 751, column: 1, scope: !15338)
!15371 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2651, file: !2651, line: 753, type: !15372, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15374)
!15372 = !DISubroutineType(types: !15373)
!15373 = !{null, !2544, !15302}
!15374 = !{!15375, !15376}
!15375 = !DILocalVariable(name: "thread", arg: 1, scope: !15371, file: !2651, line: 753, type: !2544)
!15376 = !DILocalVariable(name: "timeout", arg: 2, scope: !15371, file: !2651, line: 753, type: !15302)
!15377 = !DILocation(line: 0, scope: !15371)
!15378 = !DILocation(line: 755, column: 7, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15371, file: !2651, line: 755, column: 6)
!15380 = !DILocation(line: 755, column: 6, scope: !15371)
!15381 = !DILocation(line: 756, column: 3, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15379, file: !2651, line: 755, column: 41)
!15383 = !DILocation(line: 757, column: 2, scope: !15382)
!15384 = !DILocation(line: 758, column: 1, scope: !15371)
!15385 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13603, file: !13603, line: 47, type: !15372, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15386)
!15386 = !{!15387, !15388}
!15387 = !DILocalVariable(name: "thread", arg: 1, scope: !15385, file: !13603, line: 47, type: !2544)
!15388 = !DILocalVariable(name: "ticks", arg: 2, scope: !15385, file: !13603, line: 47, type: !15302)
!15389 = !DILocation(line: 0, scope: !15385)
!15390 = !DILocation(line: 49, column: 30, scope: !15385)
!15391 = !DILocation(line: 49, column: 2, scope: !15385)
!15392 = !DILocation(line: 50, column: 1, scope: !15385)
!15393 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2651, file: !2651, line: 795, type: !2601, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15394)
!15394 = !{!15395, !15396, !15397, !15399, !15400}
!15395 = !DILocalVariable(name: "timeout", arg: 1, scope: !15393, file: !2651, line: 795, type: !2603)
!15396 = !DILocalVariable(name: "thread", scope: !15393, file: !2651, line: 797, type: !2544)
!15397 = !DILocalVariable(name: "__i", scope: !15398, file: !2651, line: 800, type: !14505)
!15398 = distinct !DILexicalBlock(scope: !15393, file: !2651, line: 800, column: 2)
!15399 = !DILocalVariable(name: "__key", scope: !15398, file: !2651, line: 800, type: !14505)
!15400 = !DILocalVariable(name: "killed", scope: !15401, file: !2651, line: 801, type: !329)
!15401 = distinct !DILexicalBlock(scope: !15402, file: !2651, line: 800, column: 26)
!15402 = distinct !DILexicalBlock(scope: !15398, file: !2651, line: 800, column: 2)
!15403 = !DILocation(line: 0, scope: !15393)
!15404 = !DILocation(line: 797, column: 28, scope: !15393)
!15405 = !DILocation(line: 0, scope: !15398)
!15406 = !DILocation(line: 0, scope: !14513, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 800, column: 2, scope: !15398)
!15408 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15407)
!15410 = !DILocation(line: 0, scope: !14522, inlinedAt: !15409)
!15411 = !DILocation(line: 801, column: 27, scope: !15401)
!15412 = !DILocation(line: 801, column: 32, scope: !15401)
!15413 = !DILocation(line: 801, column: 61, scope: !15401)
!15414 = !DILocation(line: 0, scope: !15401)
!15415 = !DILocation(line: 804, column: 7, scope: !15401)
!15416 = !DILocation(line: 805, column: 21, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15418, file: !2651, line: 805, column: 8)
!15418 = distinct !DILexicalBlock(scope: !15419, file: !2651, line: 804, column: 16)
!15419 = distinct !DILexicalBlock(scope: !15401, file: !2651, line: 804, column: 7)
!15420 = !DILocation(line: 805, column: 31, scope: !15417)
!15421 = !DILocation(line: 805, column: 8, scope: !15418)
!15422 = !DILocation(line: 806, column: 5, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15417, file: !2651, line: 805, column: 40)
!15424 = !DILocation(line: 807, column: 4, scope: !15423)
!15425 = !DILocation(line: 808, column: 4, scope: !15418)
!15426 = !DILocation(line: 809, column: 4, scope: !15418)
!15427 = !DILocation(line: 810, column: 4, scope: !15418)
!15428 = !DILocation(line: 811, column: 3, scope: !15418)
!15429 = !DILocation(line: 0, scope: !14540, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 800, column: 2, scope: !15402)
!15431 = !DILocation(line: 0, scope: !14548, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15430)
!15433 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15432)
!15434 = !DILocation(line: 813, column: 1, scope: !15393)
!15435 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2651, file: !2651, line: 779, type: !14471, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15436)
!15436 = !{!15437}
!15437 = !DILocalVariable(name: "thread", arg: 1, scope: !15435, file: !2651, line: 779, type: !2544)
!15438 = !DILocation(line: 0, scope: !15435)
!15439 = !DILocation(line: 781, column: 2, scope: !15435)
!15440 = !DILocation(line: 782, column: 2, scope: !15435)
!15441 = !DILocation(line: 783, column: 15, scope: !15435)
!15442 = !DILocation(line: 783, column: 25, scope: !15435)
!15443 = !DILocation(line: 784, column: 1, scope: !15435)
!15444 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13208, file: !13208, line: 165, type: !14471, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15445)
!15445 = !{!15446}
!15446 = !DILocalVariable(name: "thread", arg: 1, scope: !15444, file: !13208, line: 165, type: !2544)
!15447 = !DILocation(line: 0, scope: !15444)
!15448 = !DILocation(line: 167, column: 15, scope: !15444)
!15449 = !DILocation(line: 167, column: 28, scope: !15444)
!15450 = !DILocation(line: 168, column: 1, scope: !15444)
!15451 = distinct !DISubprogram(name: "unready_thread", scope: !2651, file: !2651, line: 731, type: !14471, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15452)
!15452 = !{!15453}
!15453 = !DILocalVariable(name: "thread", arg: 1, scope: !15451, file: !2651, line: 731, type: !2544)
!15454 = !DILocation(line: 0, scope: !15451)
!15455 = !DILocation(line: 733, column: 6, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15451, file: !2651, line: 733, column: 6)
!15457 = !DILocation(line: 733, column: 6, scope: !15451)
!15458 = !DILocation(line: 0, scope: !14682, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 734, column: 3, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15456, file: !2651, line: 733, column: 34)
!15461 = !DILocation(line: 266, column: 15, scope: !14682, inlinedAt: !15459)
!15462 = !DILocation(line: 266, column: 28, scope: !14682, inlinedAt: !15459)
!15463 = !DILocation(line: 0, scope: !14690, inlinedAt: !15464)
!15464 = distinct !DILocation(line: 268, column: 3, scope: !14694, inlinedAt: !15459)
!15465 = !DILocation(line: 234, column: 2, scope: !14690, inlinedAt: !15464)
!15466 = !DILocation(line: 735, column: 2, scope: !15460)
!15467 = !DILocation(line: 736, column: 25, scope: !15451)
!15468 = !DILocation(line: 736, column: 22, scope: !15451)
!15469 = !DILocation(line: 736, column: 2, scope: !15451)
!15470 = !DILocation(line: 737, column: 1, scope: !15451)
!15471 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13208, file: !13208, line: 160, type: !14471, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15472)
!15472 = !{!15473}
!15473 = !DILocalVariable(name: "thread", arg: 1, scope: !15471, file: !13208, line: 160, type: !2544)
!15474 = !DILocation(line: 0, scope: !15471)
!15475 = !DILocation(line: 162, column: 15, scope: !15471)
!15476 = !DILocation(line: 162, column: 28, scope: !15471)
!15477 = !DILocation(line: 163, column: 1, scope: !15471)
!15478 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2651, file: !2651, line: 786, type: !14471, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15479)
!15479 = !{!15480, !15481, !15483}
!15480 = !DILocalVariable(name: "thread", arg: 1, scope: !15478, file: !2651, line: 786, type: !2544)
!15481 = !DILocalVariable(name: "__i", scope: !15482, file: !2651, line: 788, type: !14505)
!15482 = distinct !DILexicalBlock(scope: !15478, file: !2651, line: 788, column: 2)
!15483 = !DILocalVariable(name: "__key", scope: !15482, file: !2651, line: 788, type: !14505)
!15484 = !DILocation(line: 0, scope: !15478)
!15485 = !DILocation(line: 0, scope: !15482)
!15486 = !DILocation(line: 0, scope: !14513, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 788, column: 2, scope: !15482)
!15488 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15487)
!15490 = !DILocation(line: 0, scope: !14522, inlinedAt: !15489)
!15491 = !DILocation(line: 789, column: 3, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15493, file: !2651, line: 788, column: 26)
!15493 = distinct !DILexicalBlock(scope: !15482, file: !2651, line: 788, column: 2)
!15494 = !DILocation(line: 0, scope: !14540, inlinedAt: !15495)
!15495 = distinct !DILocation(line: 788, column: 2, scope: !15493)
!15496 = !DILocation(line: 0, scope: !14548, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15495)
!15498 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15497)
!15499 = !DILocation(line: 791, column: 1, scope: !15478)
!15500 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2651, file: !2651, line: 816, type: !15501, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15503)
!15501 = !DISubroutineType(types: !15502)
!15502 = !{!55, !40, !2575, !15302}
!15503 = !{!15504, !15505, !15506, !15507, !15508, !15510}
!15504 = !DILocalVariable(name: "key", arg: 1, scope: !15500, file: !2651, line: 816, type: !40)
!15505 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15500, file: !2651, line: 816, type: !2575)
!15506 = !DILocalVariable(name: "timeout", arg: 3, scope: !15500, file: !2651, line: 816, type: !15302)
!15507 = !DILocalVariable(name: "ret", scope: !15500, file: !2651, line: 828, type: !55)
!15508 = !DILocalVariable(name: "__i", scope: !15509, file: !2651, line: 829, type: !14505)
!15509 = distinct !DILexicalBlock(scope: !15500, file: !2651, line: 829, column: 2)
!15510 = !DILocalVariable(name: "__key", scope: !15509, file: !2651, line: 829, type: !14505)
!15511 = !DILocation(line: 0, scope: !15500)
!15512 = !DILocation(line: 823, column: 14, scope: !15500)
!15513 = !DILocation(line: 823, column: 2, scope: !15500)
!15514 = !DILocation(line: 826, column: 20, scope: !15500)
!15515 = !DILocation(line: 826, column: 18, scope: !15500)
!15516 = !DILocation(line: 828, column: 12, scope: !15500)
!15517 = !DILocation(line: 0, scope: !15509)
!15518 = !DILocation(line: 0, scope: !14513, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 829, column: 2, scope: !15509)
!15520 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15519)
!15522 = !DILocation(line: 0, scope: !14522, inlinedAt: !15521)
!15523 = !DILocation(line: 830, column: 7, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15525, file: !2651, line: 830, column: 7)
!15525 = distinct !DILexicalBlock(scope: !15526, file: !2651, line: 829, column: 26)
!15526 = distinct !DILexicalBlock(scope: !15509, file: !2651, line: 829, column: 2)
!15527 = !DILocation(line: 830, column: 26, scope: !15524)
!15528 = !DILocation(line: 830, column: 23, scope: !15524)
!15529 = !DILocation(line: 830, column: 7, scope: !15525)
!15530 = !DILocation(line: 831, column: 20, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15524, file: !2651, line: 830, column: 36)
!15532 = !DILocation(line: 832, column: 3, scope: !15531)
!15533 = !DILocation(line: 0, scope: !14540, inlinedAt: !15534)
!15534 = distinct !DILocation(line: 829, column: 2, scope: !15526)
!15535 = !DILocation(line: 0, scope: !14548, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15534)
!15537 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15536)
!15538 = !DILocation(line: 834, column: 2, scope: !15500)
!15539 = distinct !DISubprogram(name: "z_pend_curr", scope: !2651, file: !2651, line: 840, type: !15540, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15542)
!15540 = !DISubroutineType(types: !15541)
!15541 = !{!55, !14516, !14505, !2575, !15302}
!15542 = !{!15543, !15544, !15545, !15546}
!15543 = !DILocalVariable(name: "lock", arg: 1, scope: !15539, file: !2651, line: 840, type: !14516)
!15544 = !DILocalVariable(name: "key", arg: 2, scope: !15539, file: !2651, line: 840, type: !14505)
!15545 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15539, file: !2651, line: 841, type: !2575)
!15546 = !DILocalVariable(name: "timeout", arg: 4, scope: !15539, file: !2651, line: 841, type: !15302)
!15547 = !DILocation(line: 0, scope: !15539)
!15548 = !DILocation(line: 844, column: 20, scope: !15539)
!15549 = !DILocation(line: 844, column: 18, scope: !15539)
!15550 = !DILocation(line: 0, scope: !14513, inlinedAt: !15551)
!15551 = distinct !DILocation(line: 856, column: 9, scope: !15539)
!15552 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15553)
!15553 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15551)
!15554 = !DILocation(line: 0, scope: !14522, inlinedAt: !15553)
!15555 = !DILocation(line: 857, column: 14, scope: !15539)
!15556 = !DILocation(line: 857, column: 2, scope: !15539)
!15557 = !DILocation(line: 0, scope: !15122, inlinedAt: !15558)
!15558 = distinct !DILocation(line: 859, column: 9, scope: !15539)
!15559 = !DILocation(line: 196, column: 9, scope: !15122, inlinedAt: !15558)
!15560 = !DILocation(line: 859, column: 2, scope: !15539)
!15561 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2651, file: !2651, line: 862, type: !15562, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15564)
!15562 = !DISubroutineType(types: !15563)
!15563 = !{!2544, !2575}
!15564 = !{!15565, !15566, !15567, !15569}
!15565 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15561, file: !2651, line: 862, type: !2575)
!15566 = !DILocalVariable(name: "thread", scope: !15561, file: !2651, line: 864, type: !2544)
!15567 = !DILocalVariable(name: "__i", scope: !15568, file: !2651, line: 866, type: !14505)
!15568 = distinct !DILexicalBlock(scope: !15561, file: !2651, line: 866, column: 2)
!15569 = !DILocalVariable(name: "__key", scope: !15568, file: !2651, line: 866, type: !14505)
!15570 = !DILocation(line: 0, scope: !15561)
!15571 = !DILocation(line: 0, scope: !15568)
!15572 = !DILocation(line: 0, scope: !14513, inlinedAt: !15573)
!15573 = distinct !DILocation(line: 866, column: 2, scope: !15568)
!15574 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15575)
!15575 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15573)
!15576 = !DILocation(line: 0, scope: !14522, inlinedAt: !15575)
!15577 = !DILocation(line: 867, column: 12, scope: !15578)
!15578 = distinct !DILexicalBlock(scope: !15579, file: !2651, line: 866, column: 26)
!15579 = distinct !DILexicalBlock(scope: !15568, file: !2651, line: 866, column: 2)
!15580 = !DILocation(line: 869, column: 14, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15578, file: !2651, line: 869, column: 7)
!15582 = !DILocation(line: 869, column: 7, scope: !15578)
!15583 = !DILocation(line: 870, column: 4, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15581, file: !2651, line: 869, column: 23)
!15585 = !DILocation(line: 871, column: 3, scope: !15584)
!15586 = !DILocation(line: 0, scope: !14540, inlinedAt: !15587)
!15587 = distinct !DILocation(line: 866, column: 2, scope: !15579)
!15588 = !DILocation(line: 0, scope: !14548, inlinedAt: !15589)
!15589 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15587)
!15590 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15589)
!15591 = !DILocation(line: 874, column: 2, scope: !15561)
!15592 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2651, file: !2651, line: 877, type: !15562, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15593)
!15593 = !{!15594, !15595, !15596, !15598}
!15594 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15592, file: !2651, line: 877, type: !2575)
!15595 = !DILocalVariable(name: "thread", scope: !15592, file: !2651, line: 879, type: !2544)
!15596 = !DILocalVariable(name: "__i", scope: !15597, file: !2651, line: 881, type: !14505)
!15597 = distinct !DILexicalBlock(scope: !15592, file: !2651, line: 881, column: 2)
!15598 = !DILocalVariable(name: "__key", scope: !15597, file: !2651, line: 881, type: !14505)
!15599 = !DILocation(line: 0, scope: !15592)
!15600 = !DILocation(line: 0, scope: !15597)
!15601 = !DILocation(line: 0, scope: !14513, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 881, column: 2, scope: !15597)
!15603 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15602)
!15605 = !DILocation(line: 0, scope: !14522, inlinedAt: !15604)
!15606 = !DILocation(line: 882, column: 12, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !2651, line: 881, column: 26)
!15608 = distinct !DILexicalBlock(scope: !15597, file: !2651, line: 881, column: 2)
!15609 = !DILocation(line: 884, column: 14, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15607, file: !2651, line: 884, column: 7)
!15611 = !DILocation(line: 884, column: 7, scope: !15607)
!15612 = !DILocation(line: 885, column: 4, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15610, file: !2651, line: 884, column: 23)
!15614 = !DILocation(line: 886, column: 10, scope: !15613)
!15615 = !DILocation(line: 887, column: 3, scope: !15613)
!15616 = !DILocation(line: 0, scope: !14540, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 881, column: 2, scope: !15608)
!15618 = !DILocation(line: 0, scope: !14548, inlinedAt: !15619)
!15619 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15617)
!15620 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15619)
!15621 = !DILocation(line: 890, column: 2, scope: !15592)
!15622 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2651, file: !2651, line: 893, type: !14471, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15623)
!15623 = !{!15624}
!15624 = !DILocalVariable(name: "thread", arg: 1, scope: !15622, file: !2651, line: 893, type: !2544)
!15625 = !DILocation(line: 0, scope: !15622)
!15626 = !DILocation(line: 0, scope: !15478, inlinedAt: !15627)
!15627 = distinct !DILocation(line: 895, column: 2, scope: !15622)
!15628 = !DILocation(line: 0, scope: !15482, inlinedAt: !15627)
!15629 = !DILocation(line: 0, scope: !14513, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 788, column: 2, scope: !15482, inlinedAt: !15627)
!15631 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15632)
!15632 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15630)
!15633 = !DILocation(line: 0, scope: !14522, inlinedAt: !15632)
!15634 = !DILocation(line: 789, column: 3, scope: !15492, inlinedAt: !15627)
!15635 = !DILocation(line: 0, scope: !14540, inlinedAt: !15636)
!15636 = distinct !DILocation(line: 788, column: 2, scope: !15493, inlinedAt: !15627)
!15637 = !DILocation(line: 0, scope: !14548, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15636)
!15639 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15638)
!15640 = !DILocation(line: 896, column: 8, scope: !15622)
!15641 = !DILocation(line: 897, column: 1, scope: !15622)
!15642 = distinct !DISubprogram(name: "z_set_prio", scope: !2651, file: !2651, line: 902, type: !14833, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15643)
!15643 = !{!15644, !15645, !15646, !15647, !15649}
!15644 = !DILocalVariable(name: "thread", arg: 1, scope: !15642, file: !2651, line: 902, type: !2544)
!15645 = !DILocalVariable(name: "prio", arg: 2, scope: !15642, file: !2651, line: 902, type: !55)
!15646 = !DILocalVariable(name: "need_sched", scope: !15642, file: !2651, line: 904, type: !329)
!15647 = !DILocalVariable(name: "__i", scope: !15648, file: !2651, line: 906, type: !14505)
!15648 = distinct !DILexicalBlock(scope: !15642, file: !2651, line: 906, column: 2)
!15649 = !DILocalVariable(name: "__key", scope: !15648, file: !2651, line: 906, type: !14505)
!15650 = !DILocation(line: 0, scope: !15642)
!15651 = !DILocation(line: 0, scope: !15648)
!15652 = !DILocation(line: 0, scope: !14513, inlinedAt: !15653)
!15653 = distinct !DILocation(line: 906, column: 2, scope: !15648)
!15654 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15655)
!15655 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15653)
!15656 = !DILocation(line: 0, scope: !14522, inlinedAt: !15655)
!15657 = !DILocation(line: 907, column: 16, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15659, file: !2651, line: 906, column: 26)
!15659 = distinct !DILexicalBlock(scope: !15648, file: !2651, line: 906, column: 2)
!15660 = !DILocation(line: 909, column: 7, scope: !15658)
!15661 = !DILocation(line: 0, scope: !14682, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 912, column: 5, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15664, file: !2651, line: 911, column: 63)
!15664 = distinct !DILexicalBlock(scope: !15665, file: !2651, line: 911, column: 8)
!15665 = distinct !DILexicalBlock(scope: !15666, file: !2651, line: 909, column: 19)
!15666 = distinct !DILexicalBlock(scope: !15658, file: !2651, line: 909, column: 7)
!15667 = !DILocation(line: 266, column: 28, scope: !14682, inlinedAt: !15662)
!15668 = !DILocation(line: 0, scope: !14690, inlinedAt: !15669)
!15669 = distinct !DILocation(line: 268, column: 3, scope: !14694, inlinedAt: !15662)
!15670 = !DILocation(line: 234, column: 2, scope: !14690, inlinedAt: !15669)
!15671 = !DILocation(line: 913, column: 23, scope: !15663)
!15672 = !DILocation(line: 0, scope: !14699, inlinedAt: !15673)
!15673 = distinct !DILocation(line: 914, column: 5, scope: !15663)
!15674 = !DILocation(line: 252, column: 28, scope: !14699, inlinedAt: !15673)
!15675 = !DILocation(line: 0, scope: !14706, inlinedAt: !15676)
!15676 = distinct !DILocation(line: 254, column: 3, scope: !14710, inlinedAt: !15673)
!15677 = !DILocation(line: 0, scope: !14713, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 229, column: 2, scope: !14706, inlinedAt: !15676)
!15679 = !DILocation(line: 188, column: 2, scope: !14723, inlinedAt: !15678)
!15680 = !DILocation(line: 188, column: 2, scope: !14725, inlinedAt: !15678)
!15681 = !DILocation(line: 0, scope: !14723, inlinedAt: !15678)
!15682 = !DILocation(line: 189, column: 7, scope: !14728, inlinedAt: !15678)
!15683 = !DILocation(line: 189, column: 35, scope: !14728, inlinedAt: !15678)
!15684 = !DILocation(line: 189, column: 7, scope: !14729, inlinedAt: !15678)
!15685 = !DILocation(line: 190, column: 4, scope: !14733, inlinedAt: !15678)
!15686 = !DILocation(line: 192, column: 4, scope: !14733, inlinedAt: !15678)
!15687 = distinct !{!15687, !15679, !15688}
!15688 = !DILocation(line: 194, column: 2, scope: !14723, inlinedAt: !15678)
!15689 = !DILocation(line: 196, column: 2, scope: !14713, inlinedAt: !15678)
!15690 = !DILocation(line: 197, column: 1, scope: !14713, inlinedAt: !15678)
!15691 = !DILocation(line: 918, column: 4, scope: !15665)
!15692 = !DILocation(line: 919, column: 3, scope: !15665)
!15693 = !DILocation(line: 920, column: 22, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15666, file: !2651, line: 919, column: 10)
!15695 = !DILocation(line: 0, scope: !14540, inlinedAt: !15696)
!15696 = distinct !DILocation(line: 906, column: 2, scope: !15659)
!15697 = !DILocation(line: 0, scope: !14548, inlinedAt: !15698)
!15698 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15696)
!15699 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15698)
!15700 = !DILocation(line: 926, column: 2, scope: !15642)
!15701 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2651, file: !2651, line: 929, type: !15702, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15704)
!15702 = !DISubroutineType(types: !15703)
!15703 = !{null, !2544, !55}
!15704 = !{!15705, !15706, !15707}
!15705 = !DILocalVariable(name: "thread", arg: 1, scope: !15701, file: !2651, line: 929, type: !2544)
!15706 = !DILocalVariable(name: "prio", arg: 2, scope: !15701, file: !2651, line: 929, type: !55)
!15707 = !DILocalVariable(name: "need_sched", scope: !15701, file: !2651, line: 931, type: !329)
!15708 = !DILocation(line: 0, scope: !15701)
!15709 = !DILocation(line: 931, column: 20, scope: !15701)
!15710 = !DILocation(line: 935, column: 17, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15701, file: !2651, line: 935, column: 6)
!15712 = !DILocation(line: 935, column: 20, scope: !15711)
!15713 = !DILocation(line: 935, column: 35, scope: !15711)
!15714 = !DILocation(line: 935, column: 48, scope: !15711)
!15715 = !DILocation(line: 935, column: 6, scope: !15701)
!15716 = !DILocation(line: 936, column: 3, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15711, file: !2651, line: 935, column: 55)
!15718 = !DILocation(line: 937, column: 2, scope: !15717)
!15719 = !DILocation(line: 938, column: 1, scope: !15701)
!15720 = distinct !DISubprogram(name: "k_sched_lock", scope: !2651, file: !2651, line: 987, type: !3440, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15721)
!15721 = !{!15722, !15724}
!15722 = !DILocalVariable(name: "__i", scope: !15723, file: !2651, line: 989, type: !14505)
!15723 = distinct !DILexicalBlock(scope: !15720, file: !2651, line: 989, column: 2)
!15724 = !DILocalVariable(name: "__key", scope: !15723, file: !2651, line: 989, type: !14505)
!15725 = !DILocation(line: 0, scope: !15723)
!15726 = !DILocation(line: 0, scope: !14513, inlinedAt: !15727)
!15727 = distinct !DILocation(line: 989, column: 2, scope: !15723)
!15728 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15729)
!15729 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15727)
!15730 = !DILocation(line: 0, scope: !14522, inlinedAt: !15729)
!15731 = !DILocation(line: 992, column: 3, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !2651, line: 989, column: 26)
!15733 = distinct !DILexicalBlock(scope: !15723, file: !2651, line: 989, column: 2)
!15734 = !DILocation(line: 0, scope: !14540, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 989, column: 2, scope: !15733)
!15736 = !DILocation(line: 0, scope: !14548, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15735)
!15738 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15737)
!15739 = !DILocation(line: 994, column: 1, scope: !15720)
!15740 = distinct !DISubprogram(name: "z_sched_lock", scope: !13208, file: !13208, line: 251, type: !3440, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!15741 = !DILocation(line: 256, column: 4, scope: !15740)
!15742 = !DILocation(line: 256, column: 19, scope: !15740)
!15743 = !DILocation(line: 256, column: 2, scope: !15740)
!15744 = !DILocation(line: 258, column: 2, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15740, file: !13208, line: 258, column: 2)
!15746 = !{i64 2155185942}
!15747 = !DILocation(line: 259, column: 1, scope: !15740)
!15748 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2651, file: !2651, line: 996, type: !3440, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15749)
!15749 = !{!15750, !15752}
!15750 = !DILocalVariable(name: "__i", scope: !15751, file: !2651, line: 998, type: !14505)
!15751 = distinct !DILexicalBlock(scope: !15748, file: !2651, line: 998, column: 2)
!15752 = !DILocalVariable(name: "__key", scope: !15751, file: !2651, line: 998, type: !14505)
!15753 = !DILocation(line: 0, scope: !15751)
!15754 = !DILocation(line: 0, scope: !14513, inlinedAt: !15755)
!15755 = distinct !DILocation(line: 998, column: 2, scope: !15751)
!15756 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !15757)
!15757 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !15755)
!15758 = !DILocation(line: 0, scope: !14522, inlinedAt: !15757)
!15759 = !DILocation(line: 1002, column: 5, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15761, file: !2651, line: 998, column: 26)
!15761 = distinct !DILexicalBlock(scope: !15751, file: !2651, line: 998, column: 2)
!15762 = !DILocation(line: 1002, column: 20, scope: !15760)
!15763 = !DILocation(line: 1002, column: 3, scope: !15760)
!15764 = !DILocation(line: 1003, column: 3, scope: !15760)
!15765 = !DILocation(line: 0, scope: !14540, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 998, column: 2, scope: !15761)
!15767 = !DILocation(line: 0, scope: !14548, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !15766)
!15769 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !15768)
!15770 = !DILocation(line: 1011, column: 2, scope: !15748)
!15771 = !DILocation(line: 1012, column: 1, scope: !15748)
!15772 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2651, file: !2651, line: 1014, type: !14821, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!15773 = !DILocation(line: 1028, column: 25, scope: !15772)
!15774 = !DILocation(line: 1028, column: 2, scope: !15772)
!15775 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2651, file: !2651, line: 1155, type: !15776, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15778)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{!329, !2573, !2573}
!15778 = !{!15779, !15780, !15781, !15782, !15783}
!15779 = !DILocalVariable(name: "a", arg: 1, scope: !15775, file: !2651, line: 1155, type: !2573)
!15780 = !DILocalVariable(name: "b", arg: 2, scope: !15775, file: !2651, line: 1155, type: !2573)
!15781 = !DILocalVariable(name: "thread_a", scope: !15775, file: !2651, line: 1157, type: !2544)
!15782 = !DILocalVariable(name: "thread_b", scope: !15775, file: !2651, line: 1157, type: !2544)
!15783 = !DILocalVariable(name: "cmp", scope: !15775, file: !2651, line: 1158, type: !897)
!15784 = !DILocation(line: 0, scope: !15775)
!15785 = !DILocation(line: 1160, column: 13, scope: !15775)
!15786 = !DILocation(line: 1161, column: 13, scope: !15775)
!15787 = !DILocation(line: 1163, column: 8, scope: !15775)
!15788 = !DILocation(line: 1165, column: 10, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15775, file: !2651, line: 1165, column: 6)
!15790 = !DILocation(line: 1165, column: 6, scope: !15775)
!15791 = !DILocation(line: 1167, column: 17, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15789, file: !2651, line: 1167, column: 13)
!15793 = !DILocation(line: 1167, column: 13, scope: !15789)
!15794 = !DILocation(line: 1170, column: 25, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15792, file: !2651, line: 1169, column: 9)
!15796 = !DILocation(line: 1170, column: 52, scope: !15795)
!15797 = !DILocation(line: 1170, column: 35, scope: !15795)
!15798 = !DILocation(line: 1170, column: 3, scope: !15795)
!15799 = !DILocation(line: 0, scope: !15789)
!15800 = !DILocation(line: 1173, column: 1, scope: !15775)
!15801 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2651, file: !2651, line: 1175, type: !15802, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15817)
!15802 = !DISubroutineType(types: !15803)
!15803 = !{null, !15804, !2544}
!15804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15805, size: 32)
!15805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15806, line: 37, size: 128, elements: !15807)
!15806 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15807 = !{!15808, !15816}
!15808 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15805, file: !15806, line: 38, baseType: !15809, size: 96)
!15809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !133, line: 83, size: 96, elements: !15810)
!15810 = !{!15811, !15812, !15815}
!15811 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15809, file: !133, line: 84, baseType: !2573, size: 32)
!15812 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15809, file: !133, line: 85, baseType: !15813, size: 32, offset: 32)
!15813 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !133, line: 81, baseType: !15814)
!15814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15776, size: 32)
!15815 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15809, file: !133, line: 86, baseType: !55, size: 32, offset: 64)
!15816 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15805, file: !15806, line: 39, baseType: !55, size: 32, offset: 96)
!15817 = !{!15818, !15819, !15820, !15821, !15830}
!15818 = !DILocalVariable(name: "pq", arg: 1, scope: !15801, file: !2651, line: 1175, type: !15804)
!15819 = !DILocalVariable(name: "thread", arg: 2, scope: !15801, file: !2651, line: 1175, type: !2544)
!15820 = !DILocalVariable(name: "t", scope: !15801, file: !2651, line: 1177, type: !2544)
!15821 = !DILocalVariable(name: "__f", scope: !15822, file: !2651, line: 1190, type: !15825)
!15822 = distinct !DILexicalBlock(scope: !15823, file: !2651, line: 1190, column: 3)
!15823 = distinct !DILexicalBlock(scope: !15824, file: !2651, line: 1189, column: 27)
!15824 = distinct !DILexicalBlock(scope: !15801, file: !2651, line: 1189, column: 6)
!15825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !133, line: 155, size: 96, elements: !15826)
!15826 = !{!15827, !15828, !15829}
!15827 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15825, file: !133, line: 156, baseType: !2646, size: 32)
!15828 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15825, file: !133, line: 157, baseType: !2055, size: 32, offset: 32)
!15829 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15825, file: !133, line: 158, baseType: !897, size: 32, offset: 64)
!15830 = !DILocalVariable(name: "n", scope: !15831, file: !2651, line: 1190, type: !2573)
!15831 = distinct !DILexicalBlock(scope: !15832, file: !2651, line: 1190, column: 3)
!15832 = distinct !DILexicalBlock(scope: !15822, file: !2651, line: 1190, column: 3)
!15833 = !DILocation(line: 0, scope: !15801)
!15834 = !DILocation(line: 1181, column: 31, scope: !15801)
!15835 = !DILocation(line: 1181, column: 45, scope: !15801)
!15836 = !DILocation(line: 1181, column: 15, scope: !15801)
!15837 = !DILocation(line: 1181, column: 25, scope: !15801)
!15838 = !DILocation(line: 1189, column: 11, scope: !15824)
!15839 = !DILocation(line: 1189, column: 7, scope: !15824)
!15840 = !DILocation(line: 1189, column: 6, scope: !15801)
!15841 = !DILocation(line: 1190, column: 3, scope: !15822)
!15842 = !DILocation(line: 1190, column: 3, scope: !15831)
!15843 = !DILocation(line: 0, scope: !15831)
!15844 = !DILocation(line: 1190, column: 3, scope: !15832)
!15845 = !DILocation(line: 1193, column: 2, scope: !15823)
!15846 = !DILocation(line: 1191, column: 42, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15832, file: !2651, line: 1190, column: 54)
!15848 = !DILocation(line: 1191, column: 12, scope: !15847)
!15849 = !DILocation(line: 1191, column: 22, scope: !15847)
!15850 = distinct !{!15850, !15841, !15851}
!15851 = !DILocation(line: 1192, column: 3, scope: !15822)
!15852 = !DILocation(line: 1195, column: 17, scope: !15801)
!15853 = !DILocation(line: 1195, column: 37, scope: !15801)
!15854 = !DILocation(line: 1195, column: 2, scope: !15801)
!15855 = !DILocation(line: 1196, column: 1, scope: !15801)
!15856 = !DISubprogram(name: "z_rb_foreach_next", scope: !133, file: !133, line: 176, type: !15857, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!15857 = !DISubroutineType(types: !15858)
!15858 = !{!2573, !15859, !15860}
!15859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15809, size: 32)
!15860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15825, size: 32)
!15861 = !DISubprogram(name: "rb_insert", scope: !133, file: !133, line: 105, type: !15862, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!15862 = !DISubroutineType(types: !15863)
!15863 = !{null, !15859, !2573}
!15864 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2651, file: !2651, line: 1198, type: !15802, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15865)
!15865 = !{!15866, !15867}
!15866 = !DILocalVariable(name: "pq", arg: 1, scope: !15864, file: !2651, line: 1198, type: !15804)
!15867 = !DILocalVariable(name: "thread", arg: 2, scope: !15864, file: !2651, line: 1198, type: !2544)
!15868 = !DILocation(line: 0, scope: !15864)
!15869 = !DILocation(line: 1202, column: 17, scope: !15864)
!15870 = !DILocation(line: 1202, column: 37, scope: !15864)
!15871 = !DILocation(line: 1202, column: 2, scope: !15864)
!15872 = !DILocation(line: 1204, column: 16, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15864, file: !2651, line: 1204, column: 6)
!15874 = !DILocation(line: 1204, column: 7, scope: !15873)
!15875 = !DILocation(line: 1204, column: 6, scope: !15864)
!15876 = !DILocation(line: 1205, column: 7, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15873, file: !2651, line: 1204, column: 22)
!15878 = !DILocation(line: 1205, column: 22, scope: !15877)
!15879 = !DILocation(line: 1206, column: 2, scope: !15877)
!15880 = !DILocation(line: 1207, column: 1, scope: !15864)
!15881 = !DISubprogram(name: "rb_remove", scope: !133, file: !133, line: 110, type: !15862, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!15882 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2651, file: !2651, line: 1209, type: !15883, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15885)
!15883 = !DISubroutineType(types: !15884)
!15884 = !{!2544, !15804}
!15885 = !{!15886, !15887, !15888}
!15886 = !DILocalVariable(name: "pq", arg: 1, scope: !15882, file: !2651, line: 1209, type: !15804)
!15887 = !DILocalVariable(name: "thread", scope: !15882, file: !2651, line: 1211, type: !2544)
!15888 = !DILocalVariable(name: "n", scope: !15882, file: !2651, line: 1212, type: !2573)
!15889 = !DILocation(line: 0, scope: !15882)
!15890 = !DILocation(line: 1212, column: 37, scope: !15882)
!15891 = !DILocation(line: 1212, column: 21, scope: !15882)
!15892 = !DILocation(line: 1217, column: 2, scope: !15882)
!15893 = distinct !DISubprogram(name: "rb_get_min", scope: !133, file: !133, line: 115, type: !15894, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15896)
!15894 = !DISubroutineType(types: !15895)
!15895 = !{!2573, !15859}
!15896 = !{!15897}
!15897 = !DILocalVariable(name: "tree", arg: 1, scope: !15893, file: !133, line: 115, type: !15859)
!15898 = !DILocation(line: 0, scope: !15893)
!15899 = !DILocation(line: 117, column: 9, scope: !15893)
!15900 = !DILocation(line: 117, column: 2, scope: !15893)
!15901 = !DISubprogram(name: "z_rb_get_minmax", scope: !133, file: !133, line: 100, type: !15902, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2223)
!15902 = !DISubroutineType(types: !15903)
!15903 = !{!2573, !15859, !143}
!15904 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2651, file: !2651, line: 1246, type: !15905, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15915)
!15905 = !DISubroutineType(types: !15906)
!15906 = !{!2544, !15907}
!15907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15908, size: 32)
!15908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15806, line: 53, size: 2080, elements: !15909)
!15909 = !{!15910, !15914}
!15910 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15908, file: !15806, line: 54, baseType: !15911, size: 2048)
!15911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2580, size: 2048, elements: !15912)
!15912 = !{!15913}
!15913 = !DISubrange(count: 32)
!15914 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15908, file: !15806, line: 55, baseType: !41, size: 32, offset: 2048)
!15915 = !{!15916, !15917, !15918, !15919}
!15916 = !DILocalVariable(name: "pq", arg: 1, scope: !15904, file: !2651, line: 1246, type: !15907)
!15917 = !DILocalVariable(name: "thread", scope: !15904, file: !2651, line: 1252, type: !2544)
!15918 = !DILocalVariable(name: "l", scope: !15904, file: !2651, line: 1253, type: !14716)
!15919 = !DILocalVariable(name: "n", scope: !15904, file: !2651, line: 1254, type: !2647)
!15920 = !DILocation(line: 0, scope: !15904)
!15921 = !DILocation(line: 1248, column: 11, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15904, file: !2651, line: 1248, column: 6)
!15923 = !DILocation(line: 1248, column: 7, scope: !15922)
!15924 = !DILocation(line: 1248, column: 6, scope: !15904)
!15925 = !DILocation(line: 1253, column: 31, scope: !15904)
!15926 = !DILocation(line: 1253, column: 20, scope: !15904)
!15927 = !DILocation(line: 1254, column: 19, scope: !15904)
!15928 = !DILocation(line: 1260, column: 1, scope: !15904)
!15929 = distinct !DISubprogram(name: "z_unpend_all", scope: !2651, file: !2651, line: 1262, type: !15930, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15932)
!15930 = !DISubroutineType(types: !15931)
!15931 = !{!55, !2575}
!15932 = !{!15933, !15934, !15935}
!15933 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15929, file: !2651, line: 1262, type: !2575)
!15934 = !DILocalVariable(name: "need_sched", scope: !15929, file: !2651, line: 1264, type: !55)
!15935 = !DILocalVariable(name: "thread", scope: !15929, file: !2651, line: 1265, type: !2544)
!15936 = !DILocation(line: 0, scope: !15929)
!15937 = !DILocation(line: 1267, column: 19, scope: !15929)
!15938 = !DILocation(line: 1267, column: 41, scope: !15929)
!15939 = !DILocation(line: 1267, column: 2, scope: !15929)
!15940 = !DILocation(line: 1268, column: 3, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15929, file: !2651, line: 1267, column: 50)
!15942 = !DILocation(line: 1269, column: 3, scope: !15941)
!15943 = distinct !{!15943, !15939, !15944}
!15944 = !DILocation(line: 1271, column: 2, scope: !15929)
!15945 = !DILocation(line: 1273, column: 2, scope: !15929)
!15946 = distinct !DISubprogram(name: "z_waitq_head", scope: !13535, file: !13535, line: 52, type: !15562, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15947)
!15947 = !{!15948}
!15948 = !DILocalVariable(name: "w", arg: 1, scope: !15946, file: !13535, line: 52, type: !2575)
!15949 = !DILocation(line: 0, scope: !15946)
!15950 = !DILocation(line: 54, column: 52, scope: !15946)
!15951 = !DILocation(line: 54, column: 28, scope: !15946)
!15952 = !DILocation(line: 54, column: 9, scope: !15946)
!15953 = !DILocation(line: 54, column: 2, scope: !15946)
!15954 = distinct !DISubprogram(name: "init_ready_q", scope: !2651, file: !2651, line: 1276, type: !15955, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15962)
!15955 = !DISubroutineType(types: !15956)
!15956 = !{null, !15957}
!15957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15958, size: 32)
!15958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !72, line: 83, size: 96, elements: !15959)
!15959 = !{!15960, !15961}
!15960 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15958, file: !72, line: 86, baseType: !2544, size: 32)
!15961 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15958, file: !72, line: 90, baseType: !2580, size: 64, offset: 32)
!15962 = !{!15963}
!15963 = !DILocalVariable(name: "rq", arg: 1, scope: !15954, file: !2651, line: 1276, type: !15957)
!15964 = !DILocation(line: 0, scope: !15954)
!15965 = !DILocation(line: 1289, column: 22, scope: !15954)
!15966 = !DILocation(line: 1289, column: 2, scope: !15954)
!15967 = !DILocation(line: 1291, column: 1, scope: !15954)
!15968 = distinct !DISubprogram(name: "sys_dlist_init", scope: !77, file: !77, line: 197, type: !15969, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15971)
!15969 = !DISubroutineType(types: !15970)
!15970 = !{null, !14716}
!15971 = !{!15972}
!15972 = !DILocalVariable(name: "list", arg: 1, scope: !15968, file: !77, line: 197, type: !14716)
!15973 = !DILocation(line: 0, scope: !15968)
!15974 = !DILocation(line: 199, column: 8, scope: !15968)
!15975 = !DILocation(line: 199, column: 13, scope: !15968)
!15976 = !DILocation(line: 200, column: 8, scope: !15968)
!15977 = !DILocation(line: 200, column: 13, scope: !15968)
!15978 = !DILocation(line: 201, column: 1, scope: !15968)
!15979 = distinct !DISubprogram(name: "z_sched_init", scope: !2651, file: !2651, line: 1293, type: !3440, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!15980 = !DILocation(line: 1302, column: 2, scope: !15979)
!15981 = !DILocation(line: 1306, column: 2, scope: !15979)
!15982 = !DILocation(line: 1309, column: 1, scope: !15979)
!15983 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2651, file: !2651, line: 1311, type: !15984, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15987)
!15984 = !DISubroutineType(types: !15985)
!15985 = !{!55, !15986}
!15986 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !121, line: 347, baseType: !2544)
!15987 = !{!15988}
!15988 = !DILocalVariable(name: "thread", arg: 1, scope: !15983, file: !2651, line: 1311, type: !15986)
!15989 = !DILocation(line: 0, scope: !15983)
!15990 = !DILocation(line: 1313, column: 22, scope: !15983)
!15991 = !DILocation(line: 1313, column: 9, scope: !15983)
!15992 = !DILocation(line: 1313, column: 2, scope: !15983)
!15993 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2651, file: !2651, line: 1325, type: !15994, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !15996)
!15994 = !DISubroutineType(types: !15995)
!15995 = !{null, !15986, !55}
!15996 = !{!15997, !15998, !15999}
!15997 = !DILocalVariable(name: "thread", arg: 1, scope: !15993, file: !2651, line: 1325, type: !15986)
!15998 = !DILocalVariable(name: "prio", arg: 2, scope: !15993, file: !2651, line: 1325, type: !55)
!15999 = !DILocalVariable(name: "th", scope: !15993, file: !2651, line: 1334, type: !2544)
!16000 = !DILocation(line: 0, scope: !15993)
!16001 = !DILocation(line: 1336, column: 2, scope: !15993)
!16002 = !DILocation(line: 1337, column: 1, scope: !15993)
!16003 = distinct !DISubprogram(name: "k_can_yield", scope: !2651, file: !2651, line: 1384, type: !7293, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!16004 = !DILocation(line: 1386, column: 11, scope: !16003)
!16005 = !DILocation(line: 1386, column: 29, scope: !16003)
!16006 = !DILocation(line: 1386, column: 32, scope: !16003)
!16007 = !DILocation(line: 1386, column: 46, scope: !16003)
!16008 = !DILocation(line: 1387, column: 28, scope: !16003)
!16009 = !DILocation(line: 1387, column: 4, scope: !16003)
!16010 = !DILocation(line: 1386, column: 2, scope: !16003)
!16011 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !68, file: !68, line: 989, type: !7293, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!16012 = !DILocation(line: 993, column: 10, scope: !16011)
!16013 = !DILocation(line: 993, column: 2, scope: !16011)
!16014 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2651, file: !2651, line: 1390, type: !3440, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16015)
!16015 = !{!16016}
!16016 = !DILocalVariable(name: "key", scope: !16014, file: !2651, line: 1396, type: !14505)
!16017 = !DILocation(line: 0, scope: !14513, inlinedAt: !16018)
!16018 = distinct !DILocation(line: 1396, column: 25, scope: !16014)
!16019 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !16020)
!16020 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !16018)
!16021 = !DILocation(line: 0, scope: !14522, inlinedAt: !16020)
!16022 = !DILocation(line: 0, scope: !16014)
!16023 = !DILocation(line: 1400, column: 18, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16025, file: !2651, line: 1399, column: 36)
!16025 = distinct !DILexicalBlock(scope: !16014, file: !2651, line: 1398, column: 6)
!16026 = !DILocation(line: 0, scope: !14682, inlinedAt: !16027)
!16027 = distinct !DILocation(line: 1400, column: 3, scope: !16024)
!16028 = !DILocation(line: 266, column: 15, scope: !14682, inlinedAt: !16027)
!16029 = !DILocation(line: 266, column: 28, scope: !14682, inlinedAt: !16027)
!16030 = !DILocation(line: 0, scope: !14690, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 268, column: 3, scope: !14694, inlinedAt: !16027)
!16032 = !DILocation(line: 234, column: 2, scope: !14690, inlinedAt: !16031)
!16033 = !DILocation(line: 1402, column: 15, scope: !16014)
!16034 = !DILocation(line: 0, scope: !14699, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 1402, column: 2, scope: !16014)
!16036 = !DILocation(line: 252, column: 15, scope: !14699, inlinedAt: !16035)
!16037 = !DILocation(line: 252, column: 28, scope: !14699, inlinedAt: !16035)
!16038 = !DILocation(line: 0, scope: !14706, inlinedAt: !16039)
!16039 = distinct !DILocation(line: 254, column: 3, scope: !14710, inlinedAt: !16035)
!16040 = !DILocation(line: 0, scope: !14713, inlinedAt: !16041)
!16041 = distinct !DILocation(line: 229, column: 2, scope: !14706, inlinedAt: !16039)
!16042 = !DILocation(line: 188, column: 2, scope: !14723, inlinedAt: !16041)
!16043 = !DILocation(line: 188, column: 2, scope: !14725, inlinedAt: !16041)
!16044 = !DILocation(line: 0, scope: !14723, inlinedAt: !16041)
!16045 = !DILocation(line: 189, column: 7, scope: !14728, inlinedAt: !16041)
!16046 = !DILocation(line: 189, column: 35, scope: !14728, inlinedAt: !16041)
!16047 = !DILocation(line: 189, column: 7, scope: !14729, inlinedAt: !16041)
!16048 = !DILocation(line: 191, column: 21, scope: !14733, inlinedAt: !16041)
!16049 = !DILocation(line: 190, column: 4, scope: !14733, inlinedAt: !16041)
!16050 = !DILocation(line: 192, column: 4, scope: !14733, inlinedAt: !16041)
!16051 = distinct !{!16051, !16042, !16052}
!16052 = !DILocation(line: 194, column: 2, scope: !14723, inlinedAt: !16041)
!16053 = !DILocation(line: 196, column: 37, scope: !14713, inlinedAt: !16041)
!16054 = !DILocation(line: 196, column: 2, scope: !14713, inlinedAt: !16041)
!16055 = !DILocation(line: 197, column: 1, scope: !14713, inlinedAt: !16041)
!16056 = !DILocation(line: 1403, column: 2, scope: !16014)
!16057 = !DILocation(line: 0, scope: !15122, inlinedAt: !16058)
!16058 = distinct !DILocation(line: 1404, column: 2, scope: !16014)
!16059 = !DILocation(line: 196, column: 9, scope: !15122, inlinedAt: !16058)
!16060 = !DILocation(line: 1405, column: 1, scope: !16014)
!16061 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2651, file: !2651, line: 1459, type: !16062, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16064)
!16062 = !DISubroutineType(types: !16063)
!16063 = !{!897, !15302}
!16064 = !{!16065, !16066, !16067}
!16065 = !DILocalVariable(name: "timeout", arg: 1, scope: !16061, file: !2651, line: 1459, type: !15302)
!16066 = !DILocalVariable(name: "ticks", scope: !16061, file: !2651, line: 1461, type: !30)
!16067 = !DILocalVariable(name: "ret", scope: !16061, file: !2651, line: 1480, type: !897)
!16068 = !DILocation(line: 0, scope: !16061)
!16069 = !DILocation(line: 1468, column: 6, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16061, file: !2651, line: 1468, column: 6)
!16071 = !DILocation(line: 1468, column: 6, scope: !16061)
!16072 = !DILocation(line: 1469, column: 20, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16070, file: !2651, line: 1468, column: 40)
!16074 = !DILocation(line: 1469, column: 3, scope: !16073)
!16075 = !DILocation(line: 1473, column: 3, scope: !16073)
!16076 = !DILocation(line: 1478, column: 10, scope: !16061)
!16077 = !DILocation(line: 1480, column: 16, scope: !16061)
!16078 = !DILocation(line: 1485, column: 1, scope: !16061)
!16079 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3588, file: !3588, line: 310, type: !16080, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16082)
!16080 = !DISubroutineType(types: !16081)
!16081 = !{null, !15986}
!16082 = !{!16083}
!16083 = !DILocalVariable(name: "thread", arg: 1, scope: !16079, file: !3588, line: 310, type: !15986)
!16084 = !DILocation(line: 0, scope: !16079)
!16085 = !DILocation(line: 319, column: 2, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16079, file: !3588, line: 319, column: 2)
!16087 = !{i64 2155104331}
!16088 = !DILocation(line: 320, column: 2, scope: !16079)
!16089 = !DILocation(line: 321, column: 1, scope: !16079)
!16090 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2651, file: !2651, line: 1415, type: !16091, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16093)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{!897, !30}
!16093 = !{!16094, !16095, !16096, !16097}
!16094 = !DILocalVariable(name: "ticks", arg: 1, scope: !16090, file: !2651, line: 1415, type: !30)
!16095 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16090, file: !2651, line: 1418, type: !40)
!16096 = !DILocalVariable(name: "timeout", scope: !16090, file: !2651, line: 1430, type: !15302)
!16097 = !DILocalVariable(name: "key", scope: !16090, file: !2651, line: 1437, type: !14505)
!16098 = !DILocation(line: 0, scope: !16090)
!16099 = !DILocation(line: 1425, column: 12, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16090, file: !2651, line: 1425, column: 6)
!16101 = !DILocation(line: 1425, column: 6, scope: !16090)
!16102 = !DILocation(line: 1426, column: 3, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16100, file: !2651, line: 1425, column: 18)
!16104 = !DILocation(line: 1427, column: 3, scope: !16103)
!16105 = !DILocation(line: 1431, column: 24, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16090, file: !2651, line: 1431, column: 6)
!16107 = !DILocation(line: 1431, column: 6, scope: !16090)
!16108 = !DILocation(line: 1432, column: 35, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16106, file: !2651, line: 1431, column: 30)
!16110 = !DILocation(line: 1432, column: 27, scope: !16109)
!16111 = !DILocation(line: 1433, column: 2, scope: !16109)
!16112 = !DILocation(line: 1434, column: 27, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16106, file: !2651, line: 1433, column: 9)
!16114 = !DILocation(line: 0, scope: !16106)
!16115 = !DILocation(line: 0, scope: !14513, inlinedAt: !16116)
!16116 = distinct !DILocation(line: 1437, column: 25, scope: !16090)
!16117 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !16116)
!16119 = !DILocation(line: 0, scope: !14522, inlinedAt: !16118)
!16120 = !DILocation(line: 1440, column: 20, scope: !16090)
!16121 = !DILocation(line: 1440, column: 18, scope: !16090)
!16122 = !DILocation(line: 1442, column: 2, scope: !16090)
!16123 = !DILocation(line: 1443, column: 23, scope: !16090)
!16124 = !DILocation(line: 1443, column: 2, scope: !16090)
!16125 = !DILocation(line: 1444, column: 29, scope: !16090)
!16126 = !DILocation(line: 1444, column: 2, scope: !16090)
!16127 = !DILocation(line: 0, scope: !15122, inlinedAt: !16128)
!16128 = distinct !DILocation(line: 1446, column: 8, scope: !16090)
!16129 = !DILocation(line: 196, column: 9, scope: !15122, inlinedAt: !16128)
!16130 = !DILocation(line: 1450, column: 10, scope: !16090)
!16131 = !DILocation(line: 1450, column: 45, scope: !16090)
!16132 = !DILocation(line: 1450, column: 43, scope: !16090)
!16133 = !DILocation(line: 1451, column: 6, scope: !16090)
!16134 = !DILocation(line: 1457, column: 1, scope: !16090)
!16135 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3601, file: !3601, line: 1103, type: !3602, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16136)
!16136 = !{!16137}
!16137 = !DILocalVariable(name: "t", arg: 1, scope: !16135, file: !3601, line: 1103, type: !42)
!16138 = !DILocation(line: 0, scope: !16135)
!16139 = !DILocation(line: 0, scope: !14560, inlinedAt: !16140)
!16140 = distinct !DILocation(line: 1106, column: 9, scope: !16135)
!16141 = !DILocation(line: 139, column: 13, scope: !16142, inlinedAt: !16140)
!16142 = distinct !DILexicalBlock(scope: !16143, file: !3601, line: 138, column: 10)
!16143 = distinct !DILexicalBlock(scope: !16144, file: !3601, line: 136, column: 7)
!16144 = distinct !DILexicalBlock(scope: !14581, file: !3601, line: 134, column: 17)
!16145 = !DILocation(line: 1106, column: 2, scope: !16135)
!16146 = distinct !DISubprogram(name: "k_yield", scope: !3588, file: !3588, line: 140, type: !3440, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!16147 = !DILocation(line: 148, column: 2, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16146, file: !3588, line: 148, column: 2)
!16149 = !{i64 2155103651}
!16150 = !DILocation(line: 149, column: 2, scope: !16146)
!16151 = !DILocation(line: 150, column: 1, scope: !16146)
!16152 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2651, file: !2651, line: 1495, type: !16153, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16155)
!16153 = !DISubroutineType(types: !16154)
!16154 = !{!897, !55}
!16155 = !{!16156, !16157}
!16156 = !DILocalVariable(name: "us", arg: 1, scope: !16152, file: !2651, line: 1495, type: !55)
!16157 = !DILocalVariable(name: "ticks", scope: !16152, file: !2651, line: 1497, type: !897)
!16158 = !DILocation(line: 0, scope: !16152)
!16159 = !DILocation(line: 1501, column: 31, scope: !16152)
!16160 = !DILocation(line: 1501, column: 10, scope: !16152)
!16161 = !DILocation(line: 1502, column: 23, scope: !16152)
!16162 = !DILocation(line: 1502, column: 10, scope: !16152)
!16163 = !DILocation(line: 1506, column: 31, scope: !16152)
!16164 = !DILocation(line: 1506, column: 9, scope: !16152)
!16165 = !DILocation(line: 1506, column: 2, scope: !16152)
!16166 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3601, file: !3601, line: 571, type: !3602, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16167)
!16167 = !{!16168}
!16168 = !DILocalVariable(name: "t", arg: 1, scope: !16166, file: !3601, line: 571, type: !42)
!16169 = !DILocation(line: 0, scope: !16166)
!16170 = !DILocation(line: 0, scope: !14560, inlinedAt: !16171)
!16171 = distinct !DILocation(line: 574, column: 9, scope: !16166)
!16172 = !DILocation(line: 135, column: 5, scope: !16144, inlinedAt: !16171)
!16173 = !DILocation(line: 139, column: 13, scope: !16142, inlinedAt: !16171)
!16174 = !DILocation(line: 574, column: 2, scope: !16166)
!16175 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3601, file: !3601, line: 1187, type: !3602, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16176)
!16176 = !{!16177}
!16177 = !DILocalVariable(name: "t", arg: 1, scope: !16175, file: !3601, line: 1187, type: !42)
!16178 = !DILocation(line: 0, scope: !16175)
!16179 = !DILocation(line: 0, scope: !14560, inlinedAt: !16180)
!16180 = distinct !DILocation(line: 1190, column: 9, scope: !16175)
!16181 = !DILocation(line: 145, column: 13, scope: !16182, inlinedAt: !16180)
!16182 = distinct !DILexicalBlock(scope: !14578, file: !3601, line: 144, column: 10)
!16183 = !DILocation(line: 1190, column: 2, scope: !16175)
!16184 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2651, file: !2651, line: 1517, type: !16080, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16185)
!16185 = !{!16186}
!16186 = !DILocalVariable(name: "thread", arg: 1, scope: !16184, file: !2651, line: 1517, type: !15986)
!16187 = !DILocation(line: 0, scope: !16184)
!16188 = !DILocation(line: 1521, column: 6, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16184, file: !2651, line: 1521, column: 6)
!16190 = !DILocation(line: 1521, column: 6, scope: !16184)
!16191 = !DILocation(line: 1525, column: 6, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16184, file: !2651, line: 1525, column: 6)
!16193 = !DILocation(line: 1525, column: 37, scope: !16192)
!16194 = !DILocation(line: 1525, column: 6, scope: !16184)
!16195 = !DILocation(line: 1527, column: 20, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16197, file: !2651, line: 1527, column: 7)
!16197 = distinct !DILexicalBlock(scope: !16192, file: !2651, line: 1525, column: 42)
!16198 = !DILocation(line: 1527, column: 33, scope: !16196)
!16199 = !DILocation(line: 1527, column: 7, scope: !16197)
!16200 = !DILocation(line: 1532, column: 2, scope: !16184)
!16201 = !DILocation(line: 1533, column: 2, scope: !16184)
!16202 = !DILocation(line: 1031, column: 3, scope: !15155, inlinedAt: !16203)
!16203 = distinct !DILocation(line: 48, column: 10, scope: !15159, inlinedAt: !16204)
!16204 = distinct !DILocation(line: 1537, column: 7, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16184, file: !2651, line: 1537, column: 6)
!16206 = !DILocation(line: 0, scope: !15155, inlinedAt: !16203)
!16207 = !DILocation(line: 48, column: 9, scope: !15159, inlinedAt: !16204)
!16208 = !DILocation(line: 1537, column: 6, scope: !16184)
!16209 = !DILocation(line: 1538, column: 3, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16205, file: !2651, line: 1537, column: 25)
!16211 = !DILocation(line: 1539, column: 2, scope: !16210)
!16212 = !DILocation(line: 1540, column: 1, scope: !16184)
!16213 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13208, file: !13208, line: 101, type: !14631, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16214)
!16214 = !{!16215}
!16215 = !DILocalVariable(name: "thread", arg: 1, scope: !16213, file: !13208, line: 101, type: !2544)
!16216 = !DILocation(line: 0, scope: !16213)
!16217 = !DILocation(line: 103, column: 23, scope: !16213)
!16218 = !DILocation(line: 103, column: 36, scope: !16213)
!16219 = !DILocation(line: 103, column: 55, scope: !16213)
!16220 = !DILocation(line: 103, column: 2, scope: !16213)
!16221 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2651, file: !2651, line: 1567, type: !16222, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16224)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{!15986}
!16224 = !{!16225}
!16225 = !DILocalVariable(name: "ret", scope: !16221, file: !2651, line: 1577, type: !15986)
!16226 = !DILocation(line: 1577, column: 30, scope: !16221)
!16227 = !DILocation(line: 0, scope: !16221)
!16228 = !DILocation(line: 1582, column: 2, scope: !16221)
!16229 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2651, file: !2651, line: 1593, type: !53, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2223)
!16230 = !DILocation(line: 1031, column: 3, scope: !15155, inlinedAt: !16231)
!16231 = distinct !DILocation(line: 48, column: 10, scope: !15159, inlinedAt: !16232)
!16232 = distinct !DILocation(line: 1595, column: 10, scope: !16229)
!16233 = !DILocation(line: 0, scope: !15155, inlinedAt: !16231)
!16234 = !DILocation(line: 48, column: 9, scope: !15159, inlinedAt: !16232)
!16235 = !DILocation(line: 1595, column: 27, scope: !16229)
!16236 = !DILocation(line: 1595, column: 41, scope: !16229)
!16237 = !DILocation(line: 1595, column: 30, scope: !16229)
!16238 = !DILocation(line: 1595, column: 2, scope: !16229)
!16239 = distinct !DISubprogram(name: "z_thread_abort", scope: !2651, file: !2651, line: 1725, type: !14471, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16240)
!16240 = !{!16241, !16242}
!16241 = !DILocalVariable(name: "thread", arg: 1, scope: !16239, file: !2651, line: 1725, type: !2544)
!16242 = !DILocalVariable(name: "key", scope: !16239, file: !2651, line: 1727, type: !14505)
!16243 = !DILocation(line: 0, scope: !16239)
!16244 = !DILocation(line: 0, scope: !14513, inlinedAt: !16245)
!16245 = distinct !DILocation(line: 1727, column: 25, scope: !16239)
!16246 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !16247)
!16247 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !16245)
!16248 = !DILocation(line: 0, scope: !14522, inlinedAt: !16247)
!16249 = !DILocation(line: 1729, column: 20, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16239, file: !2651, line: 1729, column: 6)
!16251 = !DILocation(line: 1729, column: 33, scope: !16250)
!16252 = !DILocation(line: 1729, column: 48, scope: !16250)
!16253 = !DILocation(line: 1729, column: 6, scope: !16239)
!16254 = !DILocation(line: 0, scope: !14540, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 1730, column: 3, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16250, file: !2651, line: 1729, column: 54)
!16257 = !DILocation(line: 0, scope: !14548, inlinedAt: !16258)
!16258 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !16255)
!16259 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !16258)
!16260 = !DILocation(line: 1732, column: 3, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16256, file: !2651, line: 1732, column: 3)
!16262 = !{i64 2155841061, i64 2155841077, i64 2155841103, i64 2155841131, i64 2155841151}
!16263 = !DILocation(line: 1733, column: 3, scope: !16256)
!16264 = !DILocation(line: 1736, column: 20, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16239, file: !2651, line: 1736, column: 6)
!16266 = !DILocation(line: 1736, column: 33, scope: !16265)
!16267 = !DILocation(line: 1736, column: 49, scope: !16265)
!16268 = !DILocation(line: 1736, column: 6, scope: !16239)
!16269 = !DILocation(line: 0, scope: !14540, inlinedAt: !16270)
!16270 = distinct !DILocation(line: 1737, column: 3, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16265, file: !2651, line: 1736, column: 56)
!16272 = !DILocation(line: 0, scope: !14548, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !16270)
!16274 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !16273)
!16275 = !DILocation(line: 1738, column: 3, scope: !16271)
!16276 = !DILocation(line: 1775, column: 2, scope: !16239)
!16277 = !DILocation(line: 1776, column: 16, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16239, file: !2651, line: 1776, column: 6)
!16279 = !DILocation(line: 1776, column: 13, scope: !16278)
!16280 = !DILocation(line: 1776, column: 25, scope: !16278)
!16281 = !DILocation(line: 1031, column: 3, scope: !15155, inlinedAt: !16282)
!16282 = distinct !DILocation(line: 48, column: 10, scope: !15159, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 1776, column: 29, scope: !16278)
!16284 = !DILocation(line: 0, scope: !15155, inlinedAt: !16282)
!16285 = !DILocation(line: 48, column: 9, scope: !15159, inlinedAt: !16283)
!16286 = !DILocation(line: 1776, column: 6, scope: !16239)
!16287 = !DILocation(line: 0, scope: !15122, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 1777, column: 3, scope: !16289)
!16289 = distinct !DILexicalBlock(scope: !16278, file: !2651, line: 1776, column: 47)
!16290 = !DILocation(line: 196, column: 9, scope: !15122, inlinedAt: !16288)
!16291 = !DILocation(line: 1779, column: 2, scope: !16289)
!16292 = !DILocation(line: 0, scope: !14540, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 1780, column: 2, scope: !16239)
!16294 = !DILocation(line: 0, scope: !14548, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !16293)
!16296 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !16295)
!16297 = !DILocation(line: 1781, column: 1, scope: !16239)
!16298 = distinct !DISubprogram(name: "end_thread", scope: !2651, file: !2651, line: 1690, type: !14471, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16299)
!16299 = !{!16300}
!16300 = !DILocalVariable(name: "thread", arg: 1, scope: !16298, file: !2651, line: 1690, type: !2544)
!16301 = !DILocation(line: 0, scope: !16298)
!16302 = !DILocation(line: 1695, column: 20, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16298, file: !2651, line: 1695, column: 6)
!16304 = !DILocation(line: 1695, column: 33, scope: !16303)
!16305 = !DILocation(line: 1695, column: 49, scope: !16303)
!16306 = !DILocation(line: 1695, column: 6, scope: !16298)
!16307 = !DILocation(line: 1697, column: 29, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16303, file: !2651, line: 1695, column: 56)
!16309 = !DILocation(line: 1698, column: 7, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16308, file: !2651, line: 1698, column: 7)
!16311 = !DILocation(line: 1698, column: 7, scope: !16308)
!16312 = !DILocation(line: 0, scope: !14682, inlinedAt: !16313)
!16313 = distinct !DILocation(line: 1699, column: 4, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16310, file: !2651, line: 1698, column: 35)
!16315 = !DILocation(line: 266, column: 28, scope: !14682, inlinedAt: !16313)
!16316 = !DILocation(line: 0, scope: !14690, inlinedAt: !16317)
!16317 = distinct !DILocation(line: 268, column: 3, scope: !14694, inlinedAt: !16313)
!16318 = !DILocation(line: 234, column: 2, scope: !14690, inlinedAt: !16317)
!16319 = !DILocation(line: 1700, column: 3, scope: !16314)
!16320 = !DILocation(line: 1701, column: 20, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16308, file: !2651, line: 1701, column: 7)
!16322 = !DILocation(line: 1701, column: 30, scope: !16321)
!16323 = !DILocation(line: 1701, column: 7, scope: !16308)
!16324 = !DILocation(line: 1702, column: 4, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16321, file: !2651, line: 1701, column: 39)
!16326 = !DILocation(line: 1703, column: 3, scope: !16325)
!16327 = !DILocation(line: 1704, column: 9, scope: !16308)
!16328 = !DILocation(line: 1705, column: 23, scope: !16308)
!16329 = !DILocation(line: 1705, column: 3, scope: !16308)
!16330 = !DILocation(line: 1706, column: 3, scope: !16308)
!16331 = !DILocation(line: 1722, column: 2, scope: !16308)
!16332 = !DILocation(line: 1723, column: 1, scope: !16298)
!16333 = distinct !DISubprogram(name: "unpend_all", scope: !2651, file: !2651, line: 1674, type: !16334, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16336)
!16334 = !DISubroutineType(types: !16335)
!16335 = !{null, !2575}
!16336 = !{!16337, !16338}
!16337 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16333, file: !2651, line: 1674, type: !2575)
!16338 = !DILocalVariable(name: "thread", scope: !16333, file: !2651, line: 1676, type: !2544)
!16339 = !DILocation(line: 0, scope: !16333)
!16340 = !DILocation(line: 1678, column: 19, scope: !16333)
!16341 = !DILocation(line: 1678, column: 41, scope: !16333)
!16342 = !DILocation(line: 1678, column: 2, scope: !16333)
!16343 = !DILocation(line: 1679, column: 3, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16333, file: !2651, line: 1678, column: 50)
!16345 = !DILocation(line: 1680, column: 9, scope: !16344)
!16346 = !DILocalVariable(name: "thread", arg: 1, scope: !16347, file: !13228, line: 65, type: !2544)
!16347 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13228, file: !13228, line: 65, type: !16348, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16350)
!16348 = !DISubroutineType(types: !16349)
!16349 = !{null, !2544, !41}
!16350 = !{!16346, !16351}
!16351 = !DILocalVariable(name: "value", arg: 2, scope: !16347, file: !13228, line: 65, type: !41)
!16352 = !DILocation(line: 0, scope: !16347, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 1681, column: 3, scope: !16344)
!16354 = !DILocation(line: 67, column: 15, scope: !16347, inlinedAt: !16353)
!16355 = !DILocation(line: 67, column: 33, scope: !16347, inlinedAt: !16353)
!16356 = !DILocation(line: 1682, column: 3, scope: !16344)
!16357 = distinct !{!16357, !16342, !16358}
!16358 = !DILocation(line: 1683, column: 2, scope: !16333)
!16359 = !DILocation(line: 1684, column: 1, scope: !16333)
!16360 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2651, file: !2651, line: 1794, type: !16361, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16363)
!16361 = !DISubroutineType(types: !16362)
!16362 = !{!55, !2544, !15302}
!16363 = !{!16364, !16365, !16366, !16367}
!16364 = !DILocalVariable(name: "thread", arg: 1, scope: !16360, file: !2651, line: 1794, type: !2544)
!16365 = !DILocalVariable(name: "timeout", arg: 2, scope: !16360, file: !2651, line: 1794, type: !15302)
!16366 = !DILocalVariable(name: "key", scope: !16360, file: !2651, line: 1796, type: !14505)
!16367 = !DILocalVariable(name: "ret", scope: !16360, file: !2651, line: 1797, type: !55)
!16368 = !DILocation(line: 0, scope: !16360)
!16369 = !DILocation(line: 0, scope: !14513, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 1796, column: 25, scope: !16360)
!16371 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !16372)
!16372 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !16370)
!16373 = !DILocation(line: 0, scope: !14522, inlinedAt: !16372)
!16374 = !DILocation(line: 1801, column: 20, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16360, file: !2651, line: 1801, column: 6)
!16376 = !DILocation(line: 1801, column: 33, scope: !16375)
!16377 = !DILocation(line: 1801, column: 49, scope: !16375)
!16378 = !DILocation(line: 1801, column: 6, scope: !16360)
!16379 = !DILocation(line: 1803, column: 13, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16375, file: !2651, line: 1803, column: 13)
!16381 = !DILocation(line: 1803, column: 13, scope: !16375)
!16382 = !DILocation(line: 1805, column: 24, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16380, file: !2651, line: 1805, column: 13)
!16384 = !DILocation(line: 1805, column: 21, scope: !16383)
!16385 = !DILocation(line: 1805, column: 34, scope: !16383)
!16386 = !DILocation(line: 1806, column: 20, scope: !16383)
!16387 = !DILocation(line: 1806, column: 44, scope: !16383)
!16388 = !DILocation(line: 1806, column: 30, scope: !16383)
!16389 = !DILocation(line: 1805, column: 13, scope: !16380)
!16390 = !DILocation(line: 1810, column: 42, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16383, file: !2651, line: 1808, column: 9)
!16392 = !DILocation(line: 1810, column: 3, scope: !16391)
!16393 = !DILocation(line: 1811, column: 22, scope: !16391)
!16394 = !DILocation(line: 1811, column: 3, scope: !16391)
!16395 = !DILocation(line: 0, scope: !15122, inlinedAt: !16396)
!16396 = distinct !DILocation(line: 1814, column: 9, scope: !16391)
!16397 = !DILocation(line: 196, column: 9, scope: !15122, inlinedAt: !16396)
!16398 = !DILocation(line: 1817, column: 3, scope: !16391)
!16399 = !DILocation(line: 0, scope: !16375)
!16400 = !DILocation(line: 0, scope: !14540, inlinedAt: !16401)
!16401 = distinct !DILocation(line: 1822, column: 2, scope: !16360)
!16402 = !DILocation(line: 0, scope: !14548, inlinedAt: !16403)
!16403 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !16401)
!16404 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !16403)
!16405 = !DILocation(line: 1823, column: 2, scope: !16360)
!16406 = !DILocation(line: 1824, column: 1, scope: !16360)
!16407 = distinct !DISubprogram(name: "z_sched_wake", scope: !2651, file: !2651, line: 1882, type: !16408, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16410)
!16408 = !DISubroutineType(types: !16409)
!16409 = !{!329, !2575, !55, !39}
!16410 = !{!16411, !16412, !16413, !16414, !16415, !16416, !16418}
!16411 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16407, file: !2651, line: 1882, type: !2575)
!16412 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16407, file: !2651, line: 1882, type: !55)
!16413 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16407, file: !2651, line: 1882, type: !39)
!16414 = !DILocalVariable(name: "thread", scope: !16407, file: !2651, line: 1884, type: !2544)
!16415 = !DILocalVariable(name: "ret", scope: !16407, file: !2651, line: 1885, type: !329)
!16416 = !DILocalVariable(name: "__i", scope: !16417, file: !2651, line: 1887, type: !14505)
!16417 = distinct !DILexicalBlock(scope: !16407, file: !2651, line: 1887, column: 2)
!16418 = !DILocalVariable(name: "__key", scope: !16417, file: !2651, line: 1887, type: !14505)
!16419 = !DILocation(line: 0, scope: !16407)
!16420 = !DILocation(line: 0, scope: !16417)
!16421 = !DILocation(line: 0, scope: !14513, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 1887, column: 2, scope: !16417)
!16423 = !DILocation(line: 55, column: 2, scope: !14522, inlinedAt: !16424)
!16424 = distinct !DILocation(line: 145, column: 10, scope: !14513, inlinedAt: !16422)
!16425 = !DILocation(line: 0, scope: !14522, inlinedAt: !16424)
!16426 = !DILocation(line: 1888, column: 12, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16428, file: !2651, line: 1887, column: 26)
!16428 = distinct !DILexicalBlock(scope: !16417, file: !2651, line: 1887, column: 2)
!16429 = !DILocation(line: 1890, column: 14, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16427, file: !2651, line: 1890, column: 7)
!16431 = !DILocation(line: 1890, column: 7, scope: !16427)
!16432 = !DILocalVariable(name: "thread", arg: 1, scope: !16433, file: !16434, line: 134, type: !2544)
!16433 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16434, file: !16434, line: 134, type: !16435, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16437)
!16434 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16435 = !DISubroutineType(types: !16436)
!16436 = !{null, !2544, !41, !39}
!16437 = !{!16432, !16438, !16439}
!16438 = !DILocalVariable(name: "value", arg: 2, scope: !16433, file: !16434, line: 135, type: !41)
!16439 = !DILocalVariable(name: "data", arg: 3, scope: !16433, file: !16434, line: 136, type: !39)
!16440 = !DILocation(line: 0, scope: !16433, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 1891, column: 4, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16430, file: !2651, line: 1890, column: 23)
!16443 = !DILocation(line: 0, scope: !16347, inlinedAt: !16444)
!16444 = distinct !DILocation(line: 138, column: 2, scope: !16433, inlinedAt: !16441)
!16445 = !DILocation(line: 67, column: 15, scope: !16347, inlinedAt: !16444)
!16446 = !DILocation(line: 67, column: 33, scope: !16347, inlinedAt: !16444)
!16447 = !DILocation(line: 139, column: 15, scope: !16433, inlinedAt: !16441)
!16448 = !DILocation(line: 139, column: 25, scope: !16433, inlinedAt: !16441)
!16449 = !DILocation(line: 1894, column: 4, scope: !16442)
!16450 = !DILocation(line: 1895, column: 10, scope: !16442)
!16451 = !DILocation(line: 1896, column: 4, scope: !16442)
!16452 = !DILocation(line: 1898, column: 3, scope: !16442)
!16453 = !DILocation(line: 0, scope: !14540, inlinedAt: !16454)
!16454 = distinct !DILocation(line: 1887, column: 2, scope: !16428)
!16455 = !DILocation(line: 0, scope: !14548, inlinedAt: !16456)
!16456 = distinct !DILocation(line: 215, column: 2, scope: !14540, inlinedAt: !16454)
!16457 = !DILocation(line: 95, column: 2, scope: !14548, inlinedAt: !16456)
!16458 = !DILocation(line: 1901, column: 2, scope: !16407)
!16459 = distinct !DISubprogram(name: "z_sched_wait", scope: !2651, file: !2651, line: 1904, type: !16460, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !16463)
!16460 = !DISubroutineType(types: !16461)
!16461 = !{!55, !14516, !14505, !2575, !15302, !16462}
!16462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 32)
!16463 = !{!16464, !16465, !16466, !16467, !16468, !16469}
!16464 = !DILocalVariable(name: "lock", arg: 1, scope: !16459, file: !2651, line: 1904, type: !14516)
!16465 = !DILocalVariable(name: "key", arg: 2, scope: !16459, file: !2651, line: 1904, type: !14505)
!16466 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16459, file: !2651, line: 1905, type: !2575)
!16467 = !DILocalVariable(name: "timeout", arg: 4, scope: !16459, file: !2651, line: 1905, type: !15302)
!16468 = !DILocalVariable(name: "data", arg: 5, scope: !16459, file: !2651, line: 1905, type: !16462)
!16469 = !DILocalVariable(name: "ret", scope: !16459, file: !2651, line: 1907, type: !55)
!16470 = !DILocation(line: 0, scope: !16459)
!16471 = !DILocation(line: 1907, column: 12, scope: !16459)
!16472 = !DILocation(line: 1909, column: 11, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16459, file: !2651, line: 1909, column: 6)
!16474 = !DILocation(line: 1909, column: 6, scope: !16459)
!16475 = !DILocation(line: 1910, column: 11, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16473, file: !2651, line: 1909, column: 20)
!16477 = !DILocation(line: 1910, column: 26, scope: !16476)
!16478 = !DILocation(line: 1910, column: 9, scope: !16476)
!16479 = !DILocation(line: 1911, column: 2, scope: !16476)
!16480 = !DILocation(line: 1912, column: 2, scope: !16459)
!16481 = distinct !DISubprogram(name: "z_data_copy", scope: !16482, file: !16482, line: 22, type: !3440, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3423, retainedNodes: !2223)
!16482 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16483 = !DILocation(line: 24, column: 2, scope: !16481)
!16484 = !DILocation(line: 27, column: 2, scope: !16481)
!16485 = !DILocation(line: 71, column: 1, scope: !16481)
!16486 = distinct !DISubprogram(name: "z_add_timeout", scope: !2688, file: !2688, line: 88, type: !16487, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16493)
!16487 = !DISubroutineType(types: !16488)
!16488 = !{null, !2661, !2680, !16489}
!16489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !31, line: 67, baseType: !16490)
!16490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 65, size: 64, elements: !16491)
!16491 = !{!16492}
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16490, file: !31, line: 66, baseType: !30, size: 64)
!16493 = !{!16494, !16495, !16496, !16497, !16503, !16504, !16507, !16510}
!16494 = !DILocalVariable(name: "to", arg: 1, scope: !16486, file: !2688, line: 88, type: !2661)
!16495 = !DILocalVariable(name: "fn", arg: 2, scope: !16486, file: !2688, line: 88, type: !2680)
!16496 = !DILocalVariable(name: "timeout", arg: 3, scope: !16486, file: !2688, line: 89, type: !16489)
!16497 = !DILocalVariable(name: "__i", scope: !16498, file: !2688, line: 102, type: !16499)
!16498 = distinct !DILexicalBlock(scope: !16486, file: !2688, line: 102, column: 2)
!16499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !483, line: 106, baseType: !16500)
!16500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !483, line: 32, size: 32, elements: !16501)
!16501 = !{!16502}
!16502 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16500, file: !483, line: 33, baseType: !55, size: 32)
!16503 = !DILocalVariable(name: "__key", scope: !16498, file: !2688, line: 102, type: !16499)
!16504 = !DILocalVariable(name: "t", scope: !16505, file: !2688, line: 103, type: !2661)
!16505 = distinct !DILexicalBlock(scope: !16506, file: !2688, line: 102, column: 24)
!16506 = distinct !DILexicalBlock(scope: !16498, file: !2688, line: 102, column: 2)
!16507 = !DILocalVariable(name: "ticks", scope: !16508, file: !2688, line: 107, type: !30)
!16508 = distinct !DILexicalBlock(scope: !16509, file: !2688, line: 106, column: 39)
!16509 = distinct !DILexicalBlock(scope: !16505, file: !2688, line: 105, column: 7)
!16510 = !DILocalVariable(name: "next_time", scope: !16511, file: !2688, line: 137, type: !897)
!16511 = distinct !DILexicalBlock(scope: !16512, file: !2688, line: 127, column: 22)
!16512 = distinct !DILexicalBlock(scope: !16505, file: !2688, line: 127, column: 7)
!16513 = !DILocation(line: 0, scope: !16486)
!16514 = !DILocation(line: 91, column: 6, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16486, file: !2688, line: 91, column: 6)
!16516 = !DILocation(line: 91, column: 6, scope: !16486)
!16517 = !DILocation(line: 100, column: 6, scope: !16486)
!16518 = !DILocation(line: 100, column: 9, scope: !16486)
!16519 = !DILocation(line: 0, scope: !16498)
!16520 = !DILocalVariable(name: "l", arg: 1, scope: !16521, file: !483, line: 136, type: !16524)
!16521 = distinct !DISubprogram(name: "k_spin_lock", scope: !483, file: !483, line: 136, type: !16522, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16525)
!16522 = !DISubroutineType(types: !16523)
!16523 = !{!16499, !16524}
!16524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!16525 = !{!16520, !16526}
!16526 = !DILocalVariable(name: "k", scope: !16521, file: !483, line: 139, type: !16499)
!16527 = !DILocation(line: 0, scope: !16521, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 102, column: 2, scope: !16498)
!16529 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16534)
!16530 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16531)
!16531 = !{!16532, !16533}
!16532 = !DILocalVariable(name: "key", scope: !16530, file: !6214, line: 44, type: !41)
!16533 = !DILocalVariable(name: "tmp", scope: !16530, file: !6214, line: 53, type: !41)
!16534 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16528)
!16535 = !{i64 2283826}
!16536 = !DILocation(line: 0, scope: !16530, inlinedAt: !16534)
!16537 = !DILocation(line: 106, column: 33, scope: !16509)
!16538 = !DILocation(line: 105, column: 7, scope: !16505)
!16539 = !DILocation(line: 107, column: 50, scope: !16508)
!16540 = !DILocation(line: 107, column: 48, scope: !16508)
!16541 = !DILocation(line: 0, scope: !16508)
!16542 = !DILocation(line: 109, column: 17, scope: !16508)
!16543 = !DILocation(line: 110, column: 3, scope: !16508)
!16544 = !DILocation(line: 111, column: 31, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16509, file: !2688, line: 110, column: 10)
!16546 = !DILocation(line: 111, column: 37, scope: !16545)
!16547 = !DILocation(line: 111, column: 35, scope: !16545)
!16548 = !DILocation(line: 0, scope: !16509)
!16549 = !DILocation(line: 109, column: 8, scope: !16508)
!16550 = !DILocation(line: 109, column: 15, scope: !16508)
!16551 = !DILocation(line: 114, column: 12, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16505, file: !2688, line: 114, column: 3)
!16553 = !DILocation(line: 0, scope: !16505)
!16554 = !DILocation(line: 114, column: 3, scope: !16552)
!16555 = !DILocation(line: 115, column: 24, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16557, file: !2688, line: 115, column: 8)
!16557 = distinct !DILexicalBlock(scope: !16558, file: !2688, line: 114, column: 45)
!16558 = distinct !DILexicalBlock(scope: !16552, file: !2688, line: 114, column: 3)
!16559 = !DILocation(line: 115, column: 11, scope: !16556)
!16560 = !DILocation(line: 115, column: 18, scope: !16556)
!16561 = !DILocation(line: 115, column: 8, scope: !16557)
!16562 = !DILocation(line: 116, column: 15, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16556, file: !2688, line: 115, column: 32)
!16564 = !DILocation(line: 117, column: 26, scope: !16563)
!16565 = !DILocation(line: 117, column: 37, scope: !16563)
!16566 = !DILocation(line: 117, column: 5, scope: !16563)
!16567 = !DILocation(line: 123, column: 7, scope: !16505)
!16568 = !DILocation(line: 120, column: 15, scope: !16557)
!16569 = !DILocation(line: 114, column: 36, scope: !16558)
!16570 = distinct !{!16570, !16554, !16571}
!16571 = !DILocation(line: 121, column: 3, scope: !16552)
!16572 = !DILocation(line: 124, column: 41, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !2688, line: 123, column: 18)
!16574 = distinct !DILexicalBlock(scope: !16505, file: !2688, line: 123, column: 7)
!16575 = !DILocation(line: 124, column: 4, scope: !16573)
!16576 = !DILocation(line: 125, column: 3, scope: !16573)
!16577 = !DILocation(line: 127, column: 13, scope: !16512)
!16578 = !DILocation(line: 127, column: 10, scope: !16512)
!16579 = !DILocation(line: 127, column: 7, scope: !16505)
!16580 = !DILocation(line: 137, column: 24, scope: !16511)
!16581 = !DILocation(line: 0, scope: !16511)
!16582 = !DILocation(line: 139, column: 18, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16511, file: !2688, line: 139, column: 8)
!16584 = !DILocation(line: 139, column: 23, scope: !16583)
!16585 = !DILocation(line: 141, column: 5, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16583, file: !2688, line: 140, column: 48)
!16587 = !DILocation(line: 142, column: 4, scope: !16586)
!16588 = !DILocalVariable(name: "key", arg: 2, scope: !16589, file: !483, line: 190, type: !16499)
!16589 = distinct !DISubprogram(name: "k_spin_unlock", scope: !483, file: !483, line: 189, type: !16590, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16592)
!16590 = !DISubroutineType(types: !16591)
!16591 = !{null, !16524, !16499}
!16592 = !{!16593, !16588}
!16593 = !DILocalVariable(name: "l", arg: 1, scope: !16589, file: !483, line: 189, type: !16524)
!16594 = !DILocation(line: 0, scope: !16589, inlinedAt: !16595)
!16595 = distinct !DILocation(line: 102, column: 2, scope: !16506)
!16596 = !DILocalVariable(name: "key", arg: 1, scope: !16597, file: !6214, line: 84, type: !41)
!16597 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16598)
!16598 = !{!16596}
!16599 = !DILocation(line: 0, scope: !16597, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !16595)
!16601 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !16600)
!16602 = !{i64 2284643}
!16603 = !DILocation(line: 148, column: 1, scope: !16486)
!16604 = distinct !DISubprogram(name: "elapsed", scope: !2688, file: !2688, line: 62, type: !16605, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !2223)
!16605 = !DISubroutineType(types: !16606)
!16606 = !{!897}
!16607 = !DILocation(line: 64, column: 9, scope: !16604)
!16608 = !DILocation(line: 64, column: 28, scope: !16604)
!16609 = !DILocation(line: 64, column: 35, scope: !16604)
!16610 = !DILocation(line: 64, column: 2, scope: !16604)
!16611 = distinct !DISubprogram(name: "first", scope: !2688, file: !2688, line: 39, type: !16612, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16614)
!16612 = !DISubroutineType(types: !16613)
!16613 = !{!2661}
!16614 = !{!16615}
!16615 = !DILocalVariable(name: "t", scope: !16611, file: !2688, line: 41, type: !16616)
!16616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!16617 = !DILocation(line: 41, column: 19, scope: !16611)
!16618 = !DILocation(line: 0, scope: !16611)
!16619 = !DILocation(line: 43, column: 9, scope: !16611)
!16620 = !DILocation(line: 43, column: 2, scope: !16611)
!16621 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !77, file: !77, line: 443, type: !16622, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16624)
!16622 = !DISubroutineType(types: !16623)
!16623 = !{null, !16616, !16616}
!16624 = !{!16625, !16626, !16627}
!16625 = !DILocalVariable(name: "successor", arg: 1, scope: !16621, file: !77, line: 443, type: !16616)
!16626 = !DILocalVariable(name: "node", arg: 2, scope: !16621, file: !77, line: 443, type: !16616)
!16627 = !DILocalVariable(name: "prev", scope: !16621, file: !77, line: 445, type: !16628)
!16628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16616)
!16629 = !DILocation(line: 0, scope: !16621)
!16630 = !DILocation(line: 445, column: 39, scope: !16621)
!16631 = !DILocation(line: 447, column: 8, scope: !16621)
!16632 = !DILocation(line: 447, column: 13, scope: !16621)
!16633 = !DILocation(line: 448, column: 8, scope: !16621)
!16634 = !DILocation(line: 448, column: 13, scope: !16621)
!16635 = !DILocation(line: 449, column: 8, scope: !16621)
!16636 = !DILocation(line: 449, column: 13, scope: !16621)
!16637 = !DILocation(line: 450, column: 18, scope: !16621)
!16638 = !DILocation(line: 451, column: 1, scope: !16621)
!16639 = distinct !DISubprogram(name: "next", scope: !2688, file: !2688, line: 46, type: !16640, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16642)
!16640 = !DISubroutineType(types: !16641)
!16641 = !{!2661, !2661}
!16642 = !{!16643, !16644}
!16643 = !DILocalVariable(name: "t", arg: 1, scope: !16639, file: !2688, line: 46, type: !2661)
!16644 = !DILocalVariable(name: "n", scope: !16639, file: !2688, line: 48, type: !16616)
!16645 = !DILocation(line: 0, scope: !16639)
!16646 = !DILocation(line: 48, column: 58, scope: !16639)
!16647 = !DILocation(line: 48, column: 19, scope: !16639)
!16648 = !DILocation(line: 50, column: 9, scope: !16639)
!16649 = !DILocation(line: 50, column: 2, scope: !16639)
!16650 = distinct !DISubprogram(name: "sys_dlist_append", scope: !77, file: !77, line: 404, type: !16651, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16654)
!16651 = !DISubroutineType(types: !16652)
!16652 = !{null, !16653, !16616}
!16653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 32)
!16654 = !{!16655, !16656, !16657}
!16655 = !DILocalVariable(name: "list", arg: 1, scope: !16650, file: !77, line: 404, type: !16653)
!16656 = !DILocalVariable(name: "node", arg: 2, scope: !16650, file: !77, line: 404, type: !16616)
!16657 = !DILocalVariable(name: "tail", scope: !16650, file: !77, line: 406, type: !16628)
!16658 = !DILocation(line: 0, scope: !16650)
!16659 = !DILocation(line: 406, column: 34, scope: !16650)
!16660 = !DILocation(line: 408, column: 8, scope: !16650)
!16661 = !DILocation(line: 408, column: 13, scope: !16650)
!16662 = !DILocation(line: 409, column: 8, scope: !16650)
!16663 = !DILocation(line: 409, column: 13, scope: !16650)
!16664 = !DILocation(line: 411, column: 8, scope: !16650)
!16665 = !DILocation(line: 411, column: 13, scope: !16650)
!16666 = !DILocation(line: 412, column: 13, scope: !16650)
!16667 = !DILocation(line: 413, column: 1, scope: !16650)
!16668 = distinct !DISubprogram(name: "next_timeout", scope: !2688, file: !2688, line: 67, type: !16605, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16669)
!16669 = !{!16670, !16671, !16672}
!16670 = !DILocalVariable(name: "to", scope: !16668, file: !2688, line: 69, type: !2661)
!16671 = !DILocalVariable(name: "ticks_elapsed", scope: !16668, file: !2688, line: 70, type: !897)
!16672 = !DILocalVariable(name: "ret", scope: !16668, file: !2688, line: 71, type: !897)
!16673 = !DILocation(line: 69, column: 24, scope: !16668)
!16674 = !DILocation(line: 0, scope: !16668)
!16675 = !DILocation(line: 70, column: 26, scope: !16668)
!16676 = !DILocation(line: 73, column: 10, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16668, file: !2688, line: 73, column: 6)
!16678 = !DILocation(line: 73, column: 19, scope: !16677)
!16679 = !DILocation(line: 74, column: 21, scope: !16677)
!16680 = !DILocation(line: 74, column: 30, scope: !16677)
!16681 = !DILocation(line: 74, column: 28, scope: !16677)
!16682 = !DILocation(line: 74, column: 45, scope: !16677)
!16683 = !DILocation(line: 73, column: 6, scope: !16668)
!16684 = !DILocation(line: 77, column: 9, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16677, file: !2688, line: 76, column: 9)
!16686 = !DILocation(line: 0, scope: !16677)
!16687 = !DILocation(line: 81, column: 20, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16668, file: !2688, line: 81, column: 6)
!16689 = !DILocation(line: 81, column: 6, scope: !16688)
!16690 = !DILocation(line: 81, column: 32, scope: !16688)
!16691 = !DILocation(line: 85, column: 2, scope: !16668)
!16692 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !77, file: !77, line: 341, type: !16693, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16695)
!16693 = !DISubroutineType(types: !16694)
!16694 = !{!16616, !16653, !16616}
!16695 = !{!16696, !16697}
!16696 = !DILocalVariable(name: "list", arg: 1, scope: !16692, file: !77, line: 341, type: !16653)
!16697 = !DILocalVariable(name: "node", arg: 2, scope: !16692, file: !77, line: 342, type: !16616)
!16698 = !DILocation(line: 0, scope: !16692)
!16699 = !DILocation(line: 344, column: 15, scope: !16692)
!16700 = !DILocation(line: 344, column: 9, scope: !16692)
!16701 = !DILocation(line: 344, column: 26, scope: !16692)
!16702 = !DILocation(line: 344, column: 2, scope: !16692)
!16703 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !77, file: !77, line: 325, type: !16693, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16704)
!16704 = !{!16705, !16706}
!16705 = !DILocalVariable(name: "list", arg: 1, scope: !16703, file: !77, line: 325, type: !16653)
!16706 = !DILocalVariable(name: "node", arg: 2, scope: !16703, file: !77, line: 326, type: !16616)
!16707 = !DILocation(line: 0, scope: !16703)
!16708 = !DILocation(line: 328, column: 24, scope: !16703)
!16709 = !DILocation(line: 328, column: 15, scope: !16703)
!16710 = !DILocation(line: 328, column: 9, scope: !16703)
!16711 = !DILocation(line: 328, column: 45, scope: !16703)
!16712 = !DILocation(line: 328, column: 2, scope: !16703)
!16713 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !77, file: !77, line: 294, type: !16714, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16716)
!16714 = !DISubroutineType(types: !16715)
!16715 = !{!16616, !16653}
!16716 = !{!16717}
!16717 = !DILocalVariable(name: "list", arg: 1, scope: !16713, file: !77, line: 294, type: !16653)
!16718 = !DILocation(line: 0, scope: !16713)
!16719 = !DILocation(line: 296, column: 9, scope: !16713)
!16720 = !DILocation(line: 296, column: 2, scope: !16713)
!16721 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !77, file: !77, line: 266, type: !16722, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16724)
!16722 = !DISubroutineType(types: !16723)
!16723 = !{!329, !16653}
!16724 = !{!16725}
!16725 = !DILocalVariable(name: "list", arg: 1, scope: !16721, file: !77, line: 266, type: !16653)
!16726 = !DILocation(line: 0, scope: !16721)
!16727 = !DILocation(line: 268, column: 15, scope: !16721)
!16728 = !DILocation(line: 268, column: 20, scope: !16721)
!16729 = !DILocation(line: 268, column: 2, scope: !16721)
!16730 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2688, file: !2688, line: 150, type: !16731, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16733)
!16731 = !DISubroutineType(types: !16732)
!16732 = !{!55, !2661}
!16733 = !{!16734, !16735, !16736, !16738}
!16734 = !DILocalVariable(name: "to", arg: 1, scope: !16730, file: !2688, line: 150, type: !2661)
!16735 = !DILocalVariable(name: "ret", scope: !16730, file: !2688, line: 152, type: !55)
!16736 = !DILocalVariable(name: "__i", scope: !16737, file: !2688, line: 154, type: !16499)
!16737 = distinct !DILexicalBlock(scope: !16730, file: !2688, line: 154, column: 2)
!16738 = !DILocalVariable(name: "__key", scope: !16737, file: !2688, line: 154, type: !16499)
!16739 = !DILocation(line: 0, scope: !16730)
!16740 = !DILocation(line: 0, scope: !16737)
!16741 = !DILocation(line: 0, scope: !16521, inlinedAt: !16742)
!16742 = distinct !DILocation(line: 154, column: 2, scope: !16737)
!16743 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16744)
!16744 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16742)
!16745 = !DILocation(line: 0, scope: !16530, inlinedAt: !16744)
!16746 = !DILocation(line: 155, column: 7, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16748, file: !2688, line: 155, column: 7)
!16748 = distinct !DILexicalBlock(scope: !16749, file: !2688, line: 154, column: 24)
!16749 = distinct !DILexicalBlock(scope: !16737, file: !2688, line: 154, column: 2)
!16750 = !DILocation(line: 155, column: 7, scope: !16748)
!16751 = !DILocation(line: 156, column: 4, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16747, file: !2688, line: 155, column: 39)
!16753 = !DILocation(line: 158, column: 3, scope: !16752)
!16754 = !DILocation(line: 0, scope: !16589, inlinedAt: !16755)
!16755 = distinct !DILocation(line: 154, column: 2, scope: !16749)
!16756 = !DILocation(line: 0, scope: !16597, inlinedAt: !16757)
!16757 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !16755)
!16758 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !16757)
!16759 = !DILocation(line: 161, column: 2, scope: !16730)
!16760 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !77, file: !77, line: 225, type: !16761, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16765)
!16761 = !DISubroutineType(types: !16762)
!16762 = !{!329, !16763}
!16763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16764, size: 32)
!16764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2665)
!16765 = !{!16766}
!16766 = !DILocalVariable(name: "node", arg: 1, scope: !16760, file: !77, line: 225, type: !16763)
!16767 = !DILocation(line: 0, scope: !16760)
!16768 = !DILocation(line: 227, column: 15, scope: !16760)
!16769 = !DILocation(line: 227, column: 20, scope: !16760)
!16770 = !DILocation(line: 227, column: 2, scope: !16760)
!16771 = distinct !DISubprogram(name: "remove_timeout", scope: !2688, file: !2688, line: 53, type: !2682, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16772)
!16772 = !{!16773}
!16773 = !DILocalVariable(name: "t", arg: 1, scope: !16771, file: !2688, line: 53, type: !2661)
!16774 = !DILocation(line: 0, scope: !16771)
!16775 = !DILocation(line: 55, column: 6, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16771, file: !2688, line: 55, column: 6)
!16777 = !DILocation(line: 55, column: 14, scope: !16776)
!16778 = !DILocation(line: 55, column: 6, scope: !16771)
!16779 = !DILocation(line: 56, column: 25, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16776, file: !2688, line: 55, column: 23)
!16781 = !DILocation(line: 56, column: 12, scope: !16780)
!16782 = !DILocation(line: 56, column: 19, scope: !16780)
!16783 = !DILocation(line: 57, column: 2, scope: !16780)
!16784 = !DILocation(line: 59, column: 23, scope: !16771)
!16785 = !DILocation(line: 59, column: 2, scope: !16771)
!16786 = !DILocation(line: 60, column: 1, scope: !16771)
!16787 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !77, file: !77, line: 496, type: !16788, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16790)
!16788 = !DISubroutineType(types: !16789)
!16789 = !{null, !16616}
!16790 = !{!16791, !16792, !16793}
!16791 = !DILocalVariable(name: "node", arg: 1, scope: !16787, file: !77, line: 496, type: !16616)
!16792 = !DILocalVariable(name: "prev", scope: !16787, file: !77, line: 498, type: !16628)
!16793 = !DILocalVariable(name: "next", scope: !16787, file: !77, line: 499, type: !16628)
!16794 = !DILocation(line: 0, scope: !16787)
!16795 = !DILocation(line: 498, column: 34, scope: !16787)
!16796 = !DILocation(line: 499, column: 34, scope: !16787)
!16797 = !DILocation(line: 501, column: 8, scope: !16787)
!16798 = !DILocation(line: 501, column: 13, scope: !16787)
!16799 = !DILocation(line: 502, column: 8, scope: !16787)
!16800 = !DILocation(line: 502, column: 13, scope: !16787)
!16801 = !DILocation(line: 503, column: 2, scope: !16787)
!16802 = !DILocation(line: 504, column: 1, scope: !16787)
!16803 = distinct !DISubprogram(name: "sys_dnode_init", scope: !77, file: !77, line: 211, type: !16788, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16804)
!16804 = !{!16805}
!16805 = !DILocalVariable(name: "node", arg: 1, scope: !16803, file: !77, line: 211, type: !16616)
!16806 = !DILocation(line: 0, scope: !16803)
!16807 = !DILocation(line: 213, column: 8, scope: !16803)
!16808 = !DILocation(line: 213, column: 13, scope: !16803)
!16809 = !DILocation(line: 214, column: 8, scope: !16803)
!16810 = !DILocation(line: 214, column: 13, scope: !16803)
!16811 = !DILocation(line: 215, column: 1, scope: !16803)
!16812 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2688, file: !2688, line: 183, type: !16813, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16817)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{!30, !16815}
!16815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16816, size: 32)
!16816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2662)
!16817 = !{!16818, !16819, !16820, !16822}
!16818 = !DILocalVariable(name: "timeout", arg: 1, scope: !16812, file: !2688, line: 183, type: !16815)
!16819 = !DILocalVariable(name: "ticks", scope: !16812, file: !2688, line: 185, type: !30)
!16820 = !DILocalVariable(name: "__i", scope: !16821, file: !2688, line: 187, type: !16499)
!16821 = distinct !DILexicalBlock(scope: !16812, file: !2688, line: 187, column: 2)
!16822 = !DILocalVariable(name: "__key", scope: !16821, file: !2688, line: 187, type: !16499)
!16823 = !DILocation(line: 0, scope: !16812)
!16824 = !DILocation(line: 0, scope: !16821)
!16825 = !DILocation(line: 0, scope: !16521, inlinedAt: !16826)
!16826 = distinct !DILocation(line: 187, column: 2, scope: !16821)
!16827 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16828)
!16828 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16826)
!16829 = !DILocation(line: 0, scope: !16530, inlinedAt: !16828)
!16830 = !DILocation(line: 188, column: 11, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16832, file: !2688, line: 187, column: 24)
!16832 = distinct !DILexicalBlock(scope: !16821, file: !2688, line: 187, column: 2)
!16833 = !DILocation(line: 0, scope: !16589, inlinedAt: !16834)
!16834 = distinct !DILocation(line: 187, column: 2, scope: !16832)
!16835 = !DILocation(line: 0, scope: !16597, inlinedAt: !16836)
!16836 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !16834)
!16837 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !16836)
!16838 = !DILocation(line: 191, column: 2, scope: !16812)
!16839 = distinct !DISubprogram(name: "timeout_rem", scope: !2688, file: !2688, line: 165, type: !16813, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16840)
!16840 = !{!16841, !16842, !16843}
!16841 = !DILocalVariable(name: "timeout", arg: 1, scope: !16839, file: !2688, line: 165, type: !16815)
!16842 = !DILocalVariable(name: "ticks", scope: !16839, file: !2688, line: 167, type: !30)
!16843 = !DILocalVariable(name: "t", scope: !16844, file: !2688, line: 173, type: !2661)
!16844 = distinct !DILexicalBlock(scope: !16839, file: !2688, line: 173, column: 2)
!16845 = !DILocation(line: 0, scope: !16839)
!16846 = !DILocation(line: 169, column: 6, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16839, file: !2688, line: 169, column: 6)
!16848 = !DILocation(line: 169, column: 6, scope: !16839)
!16849 = !DILocation(line: 173, column: 28, scope: !16844)
!16850 = !DILocation(line: 0, scope: !16844)
!16851 = !DILocation(line: 173, column: 39, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16844, file: !2688, line: 173, column: 2)
!16853 = !DILocation(line: 173, column: 2, scope: !16844)
!16854 = !DILocation(line: 174, column: 15, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16852, file: !2688, line: 173, column: 61)
!16856 = !DILocation(line: 174, column: 9, scope: !16855)
!16857 = !DILocation(line: 175, column: 15, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16855, file: !2688, line: 175, column: 7)
!16859 = !DILocation(line: 175, column: 7, scope: !16855)
!16860 = !DILocation(line: 173, column: 52, scope: !16852)
!16861 = distinct !{!16861, !16853, !16862}
!16862 = !DILocation(line: 178, column: 2, scope: !16844)
!16863 = !DILocation(line: 180, column: 17, scope: !16839)
!16864 = !DILocation(line: 180, column: 15, scope: !16839)
!16865 = !DILocation(line: 180, column: 2, scope: !16839)
!16866 = !DILocation(line: 181, column: 1, scope: !16839)
!16867 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13603, file: !13603, line: 35, type: !16868, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16870)
!16868 = !DISubroutineType(types: !16869)
!16869 = !{!329, !16815}
!16870 = !{!16871}
!16871 = !DILocalVariable(name: "to", arg: 1, scope: !16867, file: !13603, line: 35, type: !16815)
!16872 = !DILocation(line: 0, scope: !16867)
!16873 = !DILocation(line: 37, column: 35, scope: !16867)
!16874 = !DILocation(line: 37, column: 10, scope: !16867)
!16875 = !DILocation(line: 37, column: 9, scope: !16867)
!16876 = !DILocation(line: 37, column: 2, scope: !16867)
!16877 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2688, file: !2688, line: 194, type: !16813, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16878)
!16878 = !{!16879, !16880, !16881, !16883}
!16879 = !DILocalVariable(name: "timeout", arg: 1, scope: !16877, file: !2688, line: 194, type: !16815)
!16880 = !DILocalVariable(name: "ticks", scope: !16877, file: !2688, line: 196, type: !30)
!16881 = !DILocalVariable(name: "__i", scope: !16882, file: !2688, line: 198, type: !16499)
!16882 = distinct !DILexicalBlock(scope: !16877, file: !2688, line: 198, column: 2)
!16883 = !DILocalVariable(name: "__key", scope: !16882, file: !2688, line: 198, type: !16499)
!16884 = !DILocation(line: 0, scope: !16877)
!16885 = !DILocation(line: 0, scope: !16882)
!16886 = !DILocation(line: 0, scope: !16521, inlinedAt: !16887)
!16887 = distinct !DILocation(line: 198, column: 2, scope: !16882)
!16888 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16889)
!16889 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16887)
!16890 = !DILocation(line: 0, scope: !16530, inlinedAt: !16889)
!16891 = !DILocation(line: 199, column: 11, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16893, file: !2688, line: 198, column: 24)
!16893 = distinct !DILexicalBlock(scope: !16882, file: !2688, line: 198, column: 2)
!16894 = !DILocation(line: 199, column: 23, scope: !16892)
!16895 = !DILocation(line: 0, scope: !16589, inlinedAt: !16896)
!16896 = distinct !DILocation(line: 198, column: 2, scope: !16893)
!16897 = !DILocation(line: 0, scope: !16597, inlinedAt: !16898)
!16898 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !16896)
!16899 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !16898)
!16900 = !DILocation(line: 199, column: 21, scope: !16892)
!16901 = !DILocation(line: 202, column: 2, scope: !16877)
!16902 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2688, file: !2688, line: 205, type: !16605, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16903)
!16903 = !{!16904, !16905, !16907}
!16904 = !DILocalVariable(name: "ret", scope: !16902, file: !2688, line: 207, type: !897)
!16905 = !DILocalVariable(name: "__i", scope: !16906, file: !2688, line: 209, type: !16499)
!16906 = distinct !DILexicalBlock(scope: !16902, file: !2688, line: 209, column: 2)
!16907 = !DILocalVariable(name: "__key", scope: !16906, file: !2688, line: 209, type: !16499)
!16908 = !DILocation(line: 0, scope: !16902)
!16909 = !DILocation(line: 0, scope: !16906)
!16910 = !DILocation(line: 0, scope: !16521, inlinedAt: !16911)
!16911 = distinct !DILocation(line: 209, column: 2, scope: !16906)
!16912 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16913)
!16913 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16911)
!16914 = !DILocation(line: 0, scope: !16530, inlinedAt: !16913)
!16915 = !DILocation(line: 210, column: 9, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16917, file: !2688, line: 209, column: 24)
!16917 = distinct !DILexicalBlock(scope: !16906, file: !2688, line: 209, column: 2)
!16918 = !DILocation(line: 0, scope: !16589, inlinedAt: !16919)
!16919 = distinct !DILocation(line: 209, column: 2, scope: !16917)
!16920 = !DILocation(line: 0, scope: !16597, inlinedAt: !16921)
!16921 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !16919)
!16922 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !16921)
!16923 = !DILocation(line: 212, column: 2, scope: !16902)
!16924 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2688, file: !2688, line: 215, type: !10630, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16925)
!16925 = !{!16926, !16927, !16928, !16930, !16931, !16934, !16935}
!16926 = !DILocalVariable(name: "ticks", arg: 1, scope: !16924, file: !2688, line: 215, type: !897)
!16927 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16924, file: !2688, line: 215, type: !329)
!16928 = !DILocalVariable(name: "__i", scope: !16929, file: !2688, line: 217, type: !16499)
!16929 = distinct !DILexicalBlock(scope: !16924, file: !2688, line: 217, column: 2)
!16930 = !DILocalVariable(name: "__key", scope: !16929, file: !2688, line: 217, type: !16499)
!16931 = !DILocalVariable(name: "next_to", scope: !16932, file: !2688, line: 218, type: !55)
!16932 = distinct !DILexicalBlock(scope: !16933, file: !2688, line: 217, column: 24)
!16933 = distinct !DILexicalBlock(scope: !16929, file: !2688, line: 217, column: 2)
!16934 = !DILocalVariable(name: "sooner", scope: !16932, file: !2688, line: 219, type: !329)
!16935 = !DILocalVariable(name: "imminent", scope: !16932, file: !2688, line: 221, type: !329)
!16936 = !DILocation(line: 0, scope: !16924)
!16937 = !DILocation(line: 0, scope: !16929)
!16938 = !DILocation(line: 0, scope: !16521, inlinedAt: !16939)
!16939 = distinct !DILocation(line: 217, column: 2, scope: !16929)
!16940 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16941)
!16941 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16939)
!16942 = !DILocation(line: 0, scope: !16530, inlinedAt: !16941)
!16943 = !DILocation(line: 218, column: 17, scope: !16932)
!16944 = !DILocation(line: 0, scope: !16932)
!16945 = !DILocation(line: 221, column: 27, scope: !16932)
!16946 = !DILocation(line: 233, column: 17, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16932, file: !2688, line: 233, column: 7)
!16948 = !DILocation(line: 234, column: 26, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16947, file: !2688, line: 233, column: 56)
!16950 = !DILocation(line: 234, column: 4, scope: !16949)
!16951 = !DILocation(line: 235, column: 3, scope: !16949)
!16952 = !DILocation(line: 0, scope: !16589, inlinedAt: !16953)
!16953 = distinct !DILocation(line: 217, column: 2, scope: !16933)
!16954 = !DILocation(line: 0, scope: !16597, inlinedAt: !16955)
!16955 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !16953)
!16956 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !16955)
!16957 = !DILocation(line: 237, column: 1, scope: !16924)
!16958 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2688, file: !2688, line: 239, type: !16959, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !16961)
!16959 = !DISubroutineType(types: !16960)
!16960 = !{null, !897}
!16961 = !{!16962, !16963, !16964, !16966}
!16962 = !DILocalVariable(name: "ticks", arg: 1, scope: !16958, file: !2688, line: 239, type: !897)
!16963 = !DILocalVariable(name: "key", scope: !16958, file: !2688, line: 245, type: !16499)
!16964 = !DILocalVariable(name: "t", scope: !16965, file: !2688, line: 262, type: !2661)
!16965 = distinct !DILexicalBlock(scope: !16958, file: !2688, line: 261, column: 67)
!16966 = !DILocalVariable(name: "dt", scope: !16965, file: !2688, line: 263, type: !55)
!16967 = !DILocation(line: 0, scope: !16958)
!16968 = !DILocation(line: 242, column: 2, scope: !16958)
!16969 = !DILocation(line: 0, scope: !16521, inlinedAt: !16970)
!16970 = distinct !DILocation(line: 245, column: 25, scope: !16958)
!16971 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16970)
!16973 = !DILocation(line: 0, scope: !16530, inlinedAt: !16972)
!16974 = !DILocation(line: 261, column: 9, scope: !16958)
!16975 = !DILocation(line: 261, column: 17, scope: !16958)
!16976 = !DILocation(line: 261, column: 25, scope: !16958)
!16977 = !DILocation(line: 261, column: 37, scope: !16958)
!16978 = !DILocation(line: 261, column: 47, scope: !16958)
!16979 = !DILocation(line: 261, column: 44, scope: !16958)
!16980 = !DILocation(line: 261, column: 2, scope: !16958)
!16981 = !DILocation(line: 0, scope: !16965)
!16982 = !DILocation(line: 263, column: 12, scope: !16965)
!16983 = !DILocation(line: 265, column: 16, scope: !16965)
!16984 = !DILocation(line: 265, column: 13, scope: !16965)
!16985 = !DILocation(line: 266, column: 13, scope: !16965)
!16986 = !DILocation(line: 267, column: 3, scope: !16965)
!16987 = !DILocation(line: 0, scope: !16589, inlinedAt: !16988)
!16988 = distinct !DILocation(line: 269, column: 3, scope: !16965)
!16989 = !DILocation(line: 0, scope: !16597, inlinedAt: !16990)
!16990 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !16988)
!16991 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !16990)
!16992 = !DILocation(line: 270, column: 6, scope: !16965)
!16993 = !DILocation(line: 270, column: 3, scope: !16965)
!16994 = !DILocation(line: 0, scope: !16521, inlinedAt: !16995)
!16995 = distinct !DILocation(line: 271, column: 9, scope: !16965)
!16996 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16997)
!16997 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16995)
!16998 = !DILocation(line: 0, scope: !16530, inlinedAt: !16997)
!16999 = !DILocation(line: 272, column: 22, scope: !16965)
!17000 = distinct !{!17000, !16980, !17001}
!17001 = !DILocation(line: 273, column: 2, scope: !16958)
!17002 = !DILocation(line: 276, column: 19, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !17004, file: !2688, line: 275, column: 23)
!17004 = distinct !DILexicalBlock(scope: !16958, file: !2688, line: 275, column: 6)
!17005 = !DILocation(line: 277, column: 2, scope: !17003)
!17006 = !DILocation(line: 279, column: 15, scope: !16958)
!17007 = !DILocation(line: 279, column: 12, scope: !16958)
!17008 = !DILocation(line: 280, column: 21, scope: !16958)
!17009 = !DILocation(line: 282, column: 24, scope: !16958)
!17010 = !DILocation(line: 282, column: 2, scope: !16958)
!17011 = !DILocation(line: 0, scope: !16589, inlinedAt: !17012)
!17012 = distinct !DILocation(line: 284, column: 2, scope: !16958)
!17013 = !DILocation(line: 0, scope: !16597, inlinedAt: !17014)
!17014 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !17012)
!17015 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !17014)
!17016 = !DILocation(line: 285, column: 1, scope: !16958)
!17017 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2688, file: !2688, line: 287, type: !17018, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !17020)
!17018 = !DISubroutineType(types: !17019)
!17019 = !{!32}
!17020 = !{!17021, !17022, !17024}
!17021 = !DILocalVariable(name: "t", scope: !17017, file: !2688, line: 289, type: !42)
!17022 = !DILocalVariable(name: "__i", scope: !17023, file: !2688, line: 291, type: !16499)
!17023 = distinct !DILexicalBlock(scope: !17017, file: !2688, line: 291, column: 2)
!17024 = !DILocalVariable(name: "__key", scope: !17023, file: !2688, line: 291, type: !16499)
!17025 = !DILocation(line: 0, scope: !17017)
!17026 = !DILocation(line: 0, scope: !17023)
!17027 = !DILocation(line: 0, scope: !16521, inlinedAt: !17028)
!17028 = distinct !DILocation(line: 291, column: 2, scope: !17023)
!17029 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !17030)
!17030 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !17028)
!17031 = !DILocation(line: 0, scope: !16530, inlinedAt: !17030)
!17032 = !DILocation(line: 292, column: 7, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17034, file: !2688, line: 291, column: 24)
!17034 = distinct !DILexicalBlock(scope: !17023, file: !2688, line: 291, column: 2)
!17035 = !DILocation(line: 292, column: 19, scope: !17033)
!17036 = !DILocation(line: 0, scope: !16589, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 291, column: 2, scope: !17034)
!17038 = !DILocation(line: 0, scope: !16597, inlinedAt: !17039)
!17039 = distinct !DILocation(line: 215, column: 2, scope: !16589, inlinedAt: !17037)
!17040 = !DILocation(line: 95, column: 2, scope: !16597, inlinedAt: !17039)
!17041 = !DILocation(line: 292, column: 17, scope: !17033)
!17042 = !DILocation(line: 294, column: 2, scope: !17017)
!17043 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2688, file: !2688, line: 297, type: !6564, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !2223)
!17044 = !DILocation(line: 300, column: 19, scope: !17043)
!17045 = !DILocation(line: 300, column: 9, scope: !17043)
!17046 = !DILocation(line: 300, column: 2, scope: !17043)
!17047 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2688, file: !2688, line: 306, type: !17018, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !2223)
!17048 = !DILocation(line: 308, column: 9, scope: !17047)
!17049 = !DILocation(line: 308, column: 2, scope: !17047)
!17050 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2688, file: !2688, line: 319, type: !6574, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !17051)
!17051 = !{!17052, !17053, !17054, !17055}
!17052 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17050, file: !2688, line: 319, type: !40)
!17053 = !DILocalVariable(name: "start_cycles", scope: !17050, file: !2688, line: 328, type: !40)
!17054 = !DILocalVariable(name: "cycles_to_wait", scope: !17050, file: !2688, line: 331, type: !40)
!17055 = !DILocalVariable(name: "current_cycles", scope: !17056, file: !2688, line: 338, type: !40)
!17056 = distinct !DILexicalBlock(scope: !17057, file: !2688, line: 337, column: 11)
!17057 = distinct !DILexicalBlock(scope: !17058, file: !2688, line: 337, column: 2)
!17058 = distinct !DILexicalBlock(scope: !17050, file: !2688, line: 337, column: 2)
!17059 = !DILocation(line: 0, scope: !17050)
!17060 = !DILocation(line: 322, column: 19, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17050, file: !2688, line: 322, column: 6)
!17062 = !DILocation(line: 322, column: 6, scope: !17050)
!17063 = !DILocation(line: 328, column: 26, scope: !17050)
!17064 = !DILocation(line: 333, column: 43, scope: !17050)
!17065 = !DILocation(line: 337, column: 2, scope: !17050)
!17066 = !DILocation(line: 338, column: 29, scope: !17056)
!17067 = !DILocation(line: 0, scope: !17056)
!17068 = !DILocation(line: 341, column: 23, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17056, file: !2688, line: 341, column: 7)
!17070 = !DILocation(line: 341, column: 39, scope: !17069)
!17071 = !DILocation(line: 349, column: 1, scope: !17050)
!17072 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !68, file: !68, line: 1675, type: !6564, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !2223)
!17073 = !DILocation(line: 1677, column: 9, scope: !17072)
!17074 = !DILocation(line: 1677, column: 2, scope: !17072)
!17075 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17076, file: !17076, line: 24, type: !6564, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !2223)
!17076 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17077 = !DILocation(line: 26, column: 9, scope: !17075)
!17078 = !DILocation(line: 26, column: 2, scope: !17075)
!17079 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2688, file: !2688, line: 364, type: !17080, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !17082)
!17080 = !DISubroutineType(types: !17081)
!17081 = !{!42, !16489}
!17082 = !{!17083, !17084}
!17083 = !DILocalVariable(name: "timeout", arg: 1, scope: !17079, file: !2688, line: 364, type: !16489)
!17084 = !DILocalVariable(name: "dt", scope: !17079, file: !2688, line: 366, type: !30)
!17085 = !DILocation(line: 0, scope: !17079)
!17086 = !DILocation(line: 368, column: 6, scope: !17079)
!17087 = !DILocation(line: 371, column: 10, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17089, file: !2688, line: 370, column: 47)
!17089 = distinct !DILexicalBlock(scope: !17090, file: !2688, line: 370, column: 13)
!17090 = distinct !DILexicalBlock(scope: !17079, file: !2688, line: 368, column: 6)
!17091 = !DILocation(line: 371, column: 3, scope: !17088)
!17092 = !DILocation(line: 376, column: 58, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17094, file: !2688, line: 376, column: 7)
!17094 = distinct !DILexicalBlock(scope: !17089, file: !2688, line: 372, column: 9)
!17095 = !DILocation(line: 376, column: 7, scope: !17094)
!17096 = !DILocation(line: 376, column: 43, scope: !17093)
!17097 = !DILocation(line: 377, column: 4, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17093, file: !2688, line: 376, column: 64)
!17099 = !DILocation(line: 379, column: 10, scope: !17094)
!17100 = !DILocation(line: 379, column: 33, scope: !17094)
!17101 = !DILocation(line: 379, column: 31, scope: !17094)
!17102 = !DILocation(line: 379, column: 3, scope: !17094)
!17103 = !DILocation(line: 0, scope: !17090)
!17104 = !DILocation(line: 381, column: 1, scope: !17079)
!17105 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2823, file: !2823, line: 23, type: !2726, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17106)
!17106 = !{!17107, !17108, !17109, !17110, !17115}
!17107 = !DILocalVariable(name: "t", arg: 1, scope: !17105, file: !2823, line: 23, type: !2728)
!17108 = !DILocalVariable(name: "timer", scope: !17105, file: !2823, line: 25, type: !2702)
!17109 = !DILocalVariable(name: "thread", scope: !17105, file: !2823, line: 26, type: !2748)
!17110 = !DILocalVariable(name: "key", scope: !17105, file: !2823, line: 27, type: !17111)
!17111 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !483, line: 106, baseType: !17112)
!17112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !483, line: 32, size: 32, elements: !17113)
!17113 = !{!17114}
!17114 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17112, file: !483, line: 33, baseType: !55, size: 32)
!17115 = !DILocalVariable(name: "next", scope: !17116, file: !2823, line: 35, type: !2742)
!17116 = distinct !DILexicalBlock(scope: !17117, file: !2823, line: 34, column: 47)
!17117 = distinct !DILexicalBlock(scope: !17105, file: !2823, line: 33, column: 6)
!17118 = !DILocation(line: 0, scope: !17105)
!17119 = !DILocation(line: 25, column: 26, scope: !17105)
!17120 = !DILocalVariable(name: "l", arg: 1, scope: !17121, file: !483, line: 136, type: !17124)
!17121 = distinct !DISubprogram(name: "k_spin_lock", scope: !483, file: !483, line: 136, type: !17122, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17125)
!17122 = !DISubroutineType(types: !17123)
!17123 = !{!17111, !17124}
!17124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 32)
!17125 = !{!17120, !17126}
!17126 = !DILocalVariable(name: "k", scope: !17121, file: !483, line: 139, type: !17111)
!17127 = !DILocation(line: 0, scope: !17121, inlinedAt: !17128)
!17128 = distinct !DILocation(line: 27, column: 25, scope: !17105)
!17129 = !DILocation(line: 55, column: 2, scope: !17130, inlinedAt: !17134)
!17130 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6214, file: !6214, line: 42, type: !6215, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17131)
!17131 = !{!17132, !17133}
!17132 = !DILocalVariable(name: "key", scope: !17130, file: !6214, line: 44, type: !41)
!17133 = !DILocalVariable(name: "tmp", scope: !17130, file: !6214, line: 53, type: !41)
!17134 = distinct !DILocation(line: 145, column: 10, scope: !17121, inlinedAt: !17128)
!17135 = !{i64 2282877}
!17136 = !DILocation(line: 0, scope: !17130, inlinedAt: !17134)
!17137 = !DILocation(line: 33, column: 7, scope: !17117)
!17138 = !DILocation(line: 33, column: 46, scope: !17117)
!17139 = !DILocation(line: 0, scope: !17116)
!17140 = !DILocation(line: 49, column: 10, scope: !17116)
!17141 = !DILocation(line: 52, column: 3, scope: !17116)
!17142 = !DILocation(line: 54, column: 2, scope: !17116)
!17143 = !DILocation(line: 57, column: 9, scope: !17105)
!17144 = !DILocation(line: 57, column: 16, scope: !17105)
!17145 = !DILocation(line: 60, column: 13, scope: !17146)
!17146 = distinct !DILexicalBlock(scope: !17105, file: !2823, line: 60, column: 6)
!17147 = !DILocation(line: 60, column: 23, scope: !17146)
!17148 = !DILocation(line: 60, column: 6, scope: !17105)
!17149 = !DILocalVariable(name: "key", arg: 2, scope: !17150, file: !483, line: 190, type: !17111)
!17150 = distinct !DISubprogram(name: "k_spin_unlock", scope: !483, file: !483, line: 189, type: !17151, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17153)
!17151 = !DISubroutineType(types: !17152)
!17152 = !{null, !17124, !17111}
!17153 = !{!17154, !17149}
!17154 = !DILocalVariable(name: "l", arg: 1, scope: !17150, file: !483, line: 189, type: !17124)
!17155 = !DILocation(line: 0, scope: !17150, inlinedAt: !17156)
!17156 = distinct !DILocation(line: 62, column: 3, scope: !17157)
!17157 = distinct !DILexicalBlock(scope: !17146, file: !2823, line: 60, column: 32)
!17158 = !DILocalVariable(name: "key", arg: 1, scope: !17159, file: !6214, line: 84, type: !41)
!17159 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6214, file: !6214, line: 84, type: !6225, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17160)
!17160 = !{!17158}
!17161 = !DILocation(line: 0, scope: !17159, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 215, column: 2, scope: !17150, inlinedAt: !17156)
!17163 = !DILocation(line: 95, column: 2, scope: !17159, inlinedAt: !17162)
!17164 = !{i64 2283694}
!17165 = !DILocation(line: 63, column: 10, scope: !17157)
!17166 = !DILocation(line: 63, column: 3, scope: !17157)
!17167 = !DILocation(line: 0, scope: !17121, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 64, column: 9, scope: !17157)
!17169 = !DILocation(line: 55, column: 2, scope: !17130, inlinedAt: !17170)
!17170 = distinct !DILocation(line: 145, column: 10, scope: !17121, inlinedAt: !17168)
!17171 = !DILocation(line: 0, scope: !17130, inlinedAt: !17170)
!17172 = !DILocation(line: 65, column: 2, scope: !17157)
!17173 = !DILocation(line: 72, column: 32, scope: !17105)
!17174 = !DILocation(line: 72, column: 11, scope: !17105)
!17175 = !DILocation(line: 74, column: 13, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17105, file: !2823, line: 74, column: 6)
!17177 = !DILocation(line: 74, column: 6, scope: !17105)
!17178 = !DILocation(line: 0, scope: !17150, inlinedAt: !17179)
!17179 = distinct !DILocation(line: 75, column: 3, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17176, file: !2823, line: 74, column: 22)
!17181 = !DILocation(line: 0, scope: !17159, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 215, column: 2, scope: !17150, inlinedAt: !17179)
!17183 = !DILocation(line: 95, column: 2, scope: !17159, inlinedAt: !17182)
!17184 = !DILocation(line: 76, column: 3, scope: !17180)
!17185 = !DILocation(line: 79, column: 2, scope: !17105)
!17186 = !DILocalVariable(name: "thread", arg: 1, scope: !17187, file: !13228, line: 65, type: !2748)
!17187 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13228, file: !13228, line: 65, type: !17188, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17190)
!17188 = !DISubroutineType(types: !17189)
!17189 = !{null, !2748, !41}
!17190 = !{!17186, !17191}
!17191 = !DILocalVariable(name: "value", arg: 2, scope: !17187, file: !13228, line: 65, type: !41)
!17192 = !DILocation(line: 0, scope: !17187, inlinedAt: !17193)
!17193 = distinct !DILocation(line: 81, column: 2, scope: !17105)
!17194 = !DILocation(line: 67, column: 15, scope: !17187, inlinedAt: !17193)
!17195 = !DILocation(line: 67, column: 33, scope: !17187, inlinedAt: !17193)
!17196 = !DILocation(line: 0, scope: !17150, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 83, column: 2, scope: !17105)
!17198 = !DILocation(line: 0, scope: !17159, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 215, column: 2, scope: !17150, inlinedAt: !17197)
!17200 = !DILocation(line: 95, column: 2, scope: !17159, inlinedAt: !17199)
!17201 = !DILocation(line: 85, column: 2, scope: !17105)
!17202 = !DILocation(line: 86, column: 1, scope: !17105)
!17203 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3588, file: !3588, line: 564, type: !17018, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !2223)
!17204 = !DILocation(line: 573, column: 2, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17203, file: !3588, line: 573, column: 2)
!17206 = !{i64 2155065944}
!17207 = !DILocation(line: 574, column: 9, scope: !17203)
!17208 = !DILocation(line: 574, column: 2, scope: !17203)
!17209 = distinct !DISubprogram(name: "z_waitq_head", scope: !13535, file: !13535, line: 52, type: !17210, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17212)
!17210 = !DISubroutineType(types: !17211)
!17211 = !{!2748, !2765}
!17212 = !{!17213}
!17213 = !DILocalVariable(name: "w", arg: 1, scope: !17209, file: !13535, line: 52, type: !2765)
!17214 = !DILocation(line: 0, scope: !17209)
!17215 = !DILocation(line: 54, column: 52, scope: !17209)
!17216 = !DILocation(line: 54, column: 28, scope: !17209)
!17217 = !DILocation(line: 54, column: 9, scope: !17209)
!17218 = !DILocation(line: 54, column: 2, scope: !17209)
!17219 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !77, file: !77, line: 294, type: !17220, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17223)
!17220 = !DISubroutineType(types: !17221)
!17221 = !{!2821, !17222}
!17222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 32)
!17223 = !{!17224}
!17224 = !DILocalVariable(name: "list", arg: 1, scope: !17219, file: !77, line: 294, type: !17222)
!17225 = !DILocation(line: 0, scope: !17219)
!17226 = !DILocation(line: 296, column: 9, scope: !17219)
!17227 = !DILocation(line: 296, column: 49, scope: !17219)
!17228 = !DILocation(line: 296, column: 2, scope: !17219)
!17229 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !77, file: !77, line: 266, type: !17230, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17232)
!17230 = !DISubroutineType(types: !17231)
!17231 = !{!329, !17222}
!17232 = !{!17233}
!17233 = !DILocalVariable(name: "list", arg: 1, scope: !17229, file: !77, line: 266, type: !17222)
!17234 = !DILocation(line: 0, scope: !17229)
!17235 = !DILocation(line: 268, column: 15, scope: !17229)
!17236 = !DILocation(line: 268, column: 20, scope: !17229)
!17237 = !DILocation(line: 268, column: 2, scope: !17229)
!17238 = distinct !DISubprogram(name: "k_timer_init", scope: !2823, file: !2823, line: 89, type: !17239, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17243)
!17239 = !DISubroutineType(types: !17240)
!17240 = !{null, !2702, !17241, !17242}
!17241 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !68, line: 1381, baseType: !2737)
!17242 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !68, line: 1397, baseType: !2737)
!17243 = !{!17244, !17245, !17246}
!17244 = !DILocalVariable(name: "timer", arg: 1, scope: !17238, file: !2823, line: 89, type: !2702)
!17245 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !17238, file: !2823, line: 90, type: !17241)
!17246 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !17238, file: !2823, line: 91, type: !17242)
!17247 = !DILocation(line: 0, scope: !17238)
!17248 = !DILocation(line: 93, column: 9, scope: !17238)
!17249 = !DILocation(line: 93, column: 19, scope: !17238)
!17250 = !DILocation(line: 94, column: 9, scope: !17238)
!17251 = !DILocation(line: 94, column: 17, scope: !17238)
!17252 = !DILocation(line: 95, column: 9, scope: !17238)
!17253 = !DILocation(line: 95, column: 16, scope: !17238)
!17254 = !DILocation(line: 98, column: 24, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17256, file: !2823, line: 97, column: 41)
!17256 = distinct !DILexicalBlock(scope: !17238, file: !2823, line: 97, column: 6)
!17257 = !DILocation(line: 98, column: 3, scope: !17255)
!17258 = !DILocation(line: 101, column: 25, scope: !17238)
!17259 = !DILocation(line: 101, column: 2, scope: !17238)
!17260 = !DILocation(line: 105, column: 9, scope: !17238)
!17261 = !DILocation(line: 105, column: 19, scope: !17238)
!17262 = !DILocation(line: 108, column: 1, scope: !17238)
!17263 = distinct !DISubprogram(name: "z_waitq_init", scope: !13535, file: !13535, line: 47, type: !17264, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17266)
!17264 = !DISubroutineType(types: !17265)
!17265 = !{null, !2765}
!17266 = !{!17267}
!17267 = !DILocalVariable(name: "w", arg: 1, scope: !17263, file: !13535, line: 47, type: !2765)
!17268 = !DILocation(line: 0, scope: !17263)
!17269 = !DILocation(line: 49, column: 21, scope: !17263)
!17270 = !DILocation(line: 49, column: 2, scope: !17263)
!17271 = !DILocation(line: 50, column: 1, scope: !17263)
!17272 = distinct !DISubprogram(name: "z_init_timeout", scope: !13603, file: !13603, line: 25, type: !2726, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17273)
!17273 = !{!17274}
!17274 = !DILocalVariable(name: "to", arg: 1, scope: !17272, file: !13603, line: 25, type: !2728)
!17275 = !DILocation(line: 0, scope: !17272)
!17276 = !DILocation(line: 27, column: 22, scope: !17272)
!17277 = !DILocation(line: 27, column: 2, scope: !17272)
!17278 = !DILocation(line: 28, column: 1, scope: !17272)
!17279 = distinct !DISubprogram(name: "sys_dnode_init", scope: !77, file: !77, line: 211, type: !17280, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17282)
!17280 = !DISubroutineType(types: !17281)
!17281 = !{null, !2821}
!17282 = !{!17283}
!17283 = !DILocalVariable(name: "node", arg: 1, scope: !17279, file: !77, line: 211, type: !2821)
!17284 = !DILocation(line: 0, scope: !17279)
!17285 = !DILocation(line: 213, column: 8, scope: !17279)
!17286 = !DILocation(line: 213, column: 13, scope: !17279)
!17287 = !DILocation(line: 214, column: 8, scope: !17279)
!17288 = !DILocation(line: 214, column: 13, scope: !17279)
!17289 = !DILocation(line: 215, column: 1, scope: !17279)
!17290 = distinct !DISubprogram(name: "sys_dlist_init", scope: !77, file: !77, line: 197, type: !17291, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17293)
!17291 = !DISubroutineType(types: !17292)
!17292 = !{null, !17222}
!17293 = !{!17294}
!17294 = !DILocalVariable(name: "list", arg: 1, scope: !17290, file: !77, line: 197, type: !17222)
!17295 = !DILocation(line: 0, scope: !17290)
!17296 = !DILocation(line: 199, column: 8, scope: !17290)
!17297 = !DILocation(line: 199, column: 13, scope: !17290)
!17298 = !DILocation(line: 200, column: 8, scope: !17290)
!17299 = !DILocation(line: 200, column: 13, scope: !17290)
!17300 = !DILocation(line: 201, column: 1, scope: !17290)
!17301 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2823, file: !2823, line: 111, type: !17302, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17304)
!17302 = !DISubroutineType(types: !17303)
!17303 = !{null, !2702, !2742, !2742}
!17304 = !{!17305, !17306, !17307}
!17305 = !DILocalVariable(name: "timer", arg: 1, scope: !17301, file: !2823, line: 111, type: !2702)
!17306 = !DILocalVariable(name: "duration", arg: 2, scope: !17301, file: !2823, line: 111, type: !2742)
!17307 = !DILocalVariable(name: "period", arg: 3, scope: !17301, file: !2823, line: 112, type: !2742)
!17308 = !DILocation(line: 0, scope: !17301)
!17309 = !DILocation(line: 116, column: 6, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17301, file: !2823, line: 116, column: 6)
!17311 = !DILocation(line: 116, column: 6, scope: !17301)
!17312 = !DILocation(line: 133, column: 39, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17301, file: !2823, line: 133, column: 6)
!17314 = !DILocation(line: 137, column: 33, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17301, file: !2823, line: 137, column: 6)
!17316 = !DILocation(line: 137, column: 6, scope: !17301)
!17317 = !DILocation(line: 141, column: 32, scope: !17301)
!17318 = !DILocation(line: 141, column: 8, scope: !17301)
!17319 = !DILocation(line: 142, column: 18, scope: !17301)
!17320 = !DILocation(line: 143, column: 9, scope: !17301)
!17321 = !DILocation(line: 143, column: 16, scope: !17301)
!17322 = !DILocation(line: 145, column: 2, scope: !17301)
!17323 = !DILocation(line: 147, column: 1, scope: !17301)
!17324 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2823, file: !2823, line: 160, type: !2738, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17325)
!17325 = !{!17326, !17327, !17328}
!17326 = !DILocalVariable(name: "timer", arg: 1, scope: !17324, file: !2823, line: 160, type: !2702)
!17327 = !DILocalVariable(name: "inactive", scope: !17324, file: !2823, line: 164, type: !329)
!17328 = !DILocalVariable(name: "pending_thread", scope: !17329, file: !2823, line: 175, type: !2748)
!17329 = distinct !DILexicalBlock(scope: !17330, file: !2823, line: 174, column: 41)
!17330 = distinct !DILexicalBlock(scope: !17324, file: !2823, line: 174, column: 6)
!17331 = !DILocation(line: 0, scope: !17324)
!17332 = !DILocation(line: 164, column: 43, scope: !17324)
!17333 = !DILocation(line: 164, column: 19, scope: !17324)
!17334 = !DILocation(line: 164, column: 52, scope: !17324)
!17335 = !DILocation(line: 166, column: 6, scope: !17324)
!17336 = !DILocation(line: 170, column: 13, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17324, file: !2823, line: 170, column: 6)
!17338 = !DILocation(line: 170, column: 21, scope: !17337)
!17339 = !DILocation(line: 170, column: 6, scope: !17324)
!17340 = !DILocation(line: 171, column: 3, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17337, file: !2823, line: 170, column: 30)
!17342 = !DILocation(line: 172, column: 2, scope: !17341)
!17343 = !DILocation(line: 175, column: 66, scope: !17329)
!17344 = !DILocation(line: 175, column: 37, scope: !17329)
!17345 = !DILocation(line: 0, scope: !17329)
!17346 = !DILocation(line: 177, column: 22, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17329, file: !2823, line: 177, column: 7)
!17348 = !DILocation(line: 177, column: 7, scope: !17329)
!17349 = !DILocation(line: 178, column: 4, scope: !17350)
!17350 = distinct !DILexicalBlock(scope: !17347, file: !2823, line: 177, column: 31)
!17351 = !DILocation(line: 179, column: 4, scope: !17350)
!17352 = !DILocation(line: 180, column: 3, scope: !17350)
!17353 = !DILocation(line: 182, column: 1, scope: !17324)
!17354 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13208, file: !13208, line: 73, type: !3440, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !2223)
!17355 = !DILocation(line: 55, column: 2, scope: !17130, inlinedAt: !17356)
!17356 = distinct !DILocation(line: 75, column: 30, scope: !17354)
!17357 = !DILocation(line: 0, scope: !17130, inlinedAt: !17356)
!17358 = !DILocation(line: 75, column: 9, scope: !17354)
!17359 = !DILocation(line: 76, column: 1, scope: !17354)
!17360 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2823, file: !2823, line: 193, type: !17361, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17363)
!17361 = !DISubroutineType(types: !17362)
!17362 = !{!40, !2702}
!17363 = !{!17364, !17365, !17366}
!17364 = !DILocalVariable(name: "timer", arg: 1, scope: !17360, file: !2823, line: 193, type: !2702)
!17365 = !DILocalVariable(name: "key", scope: !17360, file: !2823, line: 195, type: !17111)
!17366 = !DILocalVariable(name: "result", scope: !17360, file: !2823, line: 196, type: !40)
!17367 = !DILocation(line: 0, scope: !17360)
!17368 = !DILocation(line: 0, scope: !17121, inlinedAt: !17369)
!17369 = distinct !DILocation(line: 195, column: 25, scope: !17360)
!17370 = !DILocation(line: 55, column: 2, scope: !17130, inlinedAt: !17371)
!17371 = distinct !DILocation(line: 145, column: 10, scope: !17121, inlinedAt: !17369)
!17372 = !DILocation(line: 0, scope: !17130, inlinedAt: !17371)
!17373 = !DILocation(line: 196, column: 27, scope: !17360)
!17374 = !DILocation(line: 198, column: 16, scope: !17360)
!17375 = !DILocation(line: 0, scope: !17150, inlinedAt: !17376)
!17376 = distinct !DILocation(line: 199, column: 2, scope: !17360)
!17377 = !DILocation(line: 0, scope: !17159, inlinedAt: !17378)
!17378 = distinct !DILocation(line: 215, column: 2, scope: !17150, inlinedAt: !17376)
!17379 = !DILocation(line: 95, column: 2, scope: !17159, inlinedAt: !17378)
!17380 = !DILocation(line: 201, column: 2, scope: !17360)
!17381 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2823, file: !2823, line: 213, type: !17361, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17382)
!17382 = !{!17383, !17384, !17385}
!17383 = !DILocalVariable(name: "timer", arg: 1, scope: !17381, file: !2823, line: 213, type: !2702)
!17384 = !DILocalVariable(name: "key", scope: !17381, file: !2823, line: 241, type: !17111)
!17385 = !DILocalVariable(name: "result", scope: !17381, file: !2823, line: 242, type: !40)
!17386 = !DILocation(line: 0, scope: !17381)
!17387 = !DILocation(line: 0, scope: !17121, inlinedAt: !17388)
!17388 = distinct !DILocation(line: 241, column: 25, scope: !17381)
!17389 = !DILocation(line: 55, column: 2, scope: !17130, inlinedAt: !17390)
!17390 = distinct !DILocation(line: 145, column: 10, scope: !17121, inlinedAt: !17388)
!17391 = !DILocation(line: 0, scope: !17130, inlinedAt: !17390)
!17392 = !DILocation(line: 242, column: 27, scope: !17381)
!17393 = !DILocation(line: 244, column: 13, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17381, file: !2823, line: 244, column: 6)
!17395 = !DILocation(line: 244, column: 6, scope: !17381)
!17396 = !DILocation(line: 245, column: 38, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17398, file: !2823, line: 245, column: 7)
!17398 = distinct !DILexicalBlock(scope: !17394, file: !2823, line: 244, column: 20)
!17399 = !DILocation(line: 245, column: 8, scope: !17397)
!17400 = !DILocation(line: 245, column: 7, scope: !17398)
!17401 = !DILocation(line: 249, column: 42, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17397, file: !2823, line: 245, column: 48)
!17403 = !DILocation(line: 249, column: 10, scope: !17402)
!17404 = !DILocation(line: 0, scope: !17121, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 252, column: 10, scope: !17402)
!17406 = !DILocation(line: 55, column: 2, scope: !17130, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 145, column: 10, scope: !17121, inlinedAt: !17405)
!17408 = !DILocation(line: 0, scope: !17130, inlinedAt: !17407)
!17409 = !DILocation(line: 253, column: 20, scope: !17402)
!17410 = !DILocation(line: 254, column: 3, scope: !17402)
!17411 = !DILocation(line: 261, column: 16, scope: !17381)
!17412 = !DILocation(line: 0, scope: !17150, inlinedAt: !17413)
!17413 = distinct !DILocation(line: 262, column: 2, scope: !17381)
!17414 = !DILocation(line: 0, scope: !17159, inlinedAt: !17415)
!17415 = distinct !DILocation(line: 215, column: 2, scope: !17150, inlinedAt: !17413)
!17416 = !DILocation(line: 95, column: 2, scope: !17159, inlinedAt: !17415)
!17417 = !DILocation(line: 269, column: 2, scope: !17381)
!17418 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13603, file: !13603, line: 35, type: !17419, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17423)
!17419 = !DISubroutineType(types: !17420)
!17420 = !{!329, !17421}
!17421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17422, size: 32)
!17422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2706)
!17423 = !{!17424}
!17424 = !DILocalVariable(name: "to", arg: 1, scope: !17418, file: !13603, line: 35, type: !17421)
!17425 = !DILocation(line: 0, scope: !17418)
!17426 = !DILocation(line: 37, column: 35, scope: !17418)
!17427 = !DILocation(line: 37, column: 10, scope: !17418)
!17428 = !DILocation(line: 37, column: 9, scope: !17418)
!17429 = !DILocation(line: 37, column: 2, scope: !17418)
!17430 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !77, file: !77, line: 225, type: !17431, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !17435)
!17431 = !DISubroutineType(types: !17432)
!17432 = !{!329, !17433}
!17433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17434, size: 32)
!17434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2709)
!17435 = !{!17436}
!17436 = !DILocalVariable(name: "node", arg: 1, scope: !17430, file: !77, line: 225, type: !17433)
!17437 = !DILocation(line: 0, scope: !17430)
!17438 = !DILocation(line: 227, column: 15, scope: !17430)
!17439 = !DILocation(line: 227, column: 20, scope: !17430)
!17440 = !DILocation(line: 227, column: 2, scope: !17430)
!17441 = distinct !DISubprogram(name: "boot_banner", scope: !17442, file: !17442, line: 26, type: !3440, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3426, retainedNodes: !2223)
!17442 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17443 = !DILocation(line: 34, column: 2, scope: !17441)
!17444 = !DILocation(line: 36, column: 1, scope: !17441)
