; ModuleID = 'build/96b_stm32_sensor_mez/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229767 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229747 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229737 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229837 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229827 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229817 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229807 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229797 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229787 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229777 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231640 to i8*), void (i8*)* inttoptr (i32 134229757 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !220
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !249
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !255
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !395
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !431
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !441
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !446
@.str.51 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.52 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !466
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !668
@.str.53 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !629
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !612
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !585
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !601
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !631
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !645
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !647
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !649
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !651
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !653
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !655
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !657
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !659
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !661
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !663
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !673
@.str.55 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !706
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !803
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !792
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !844
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !693
@.str.64 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !910
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1189
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1159
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1145
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1090
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !691
@.str.1.65 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1191
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1163
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1161
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1104
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !689
@.str.2.66 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1204
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1167
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1165
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1110
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !687
@.str.3.67 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1206
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1171
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1169
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1119
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !685
@.str.4.68 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1208
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1175
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1173
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1125
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !683
@.str.5.69 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1210
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1179
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1177
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1131
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !681
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1212
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1183
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1181
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1137
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !679
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1214
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1187
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1185
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1143
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !701
@.str.73 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1216
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1431
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1386
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1433
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1359
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1361
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !699
@.str.1.74 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1440
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1465
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.74, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1370
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1372
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !697
@.str.2.75 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1467
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1390
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1477
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.75, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1376
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1378
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !695
@.str.3.78 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1479
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1392
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1489
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.78, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1382
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1384
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1394
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1402
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1425
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1428
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !776
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1457
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1459
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1461
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1463
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1469
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1471
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1473
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1475
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1481
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1483
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1485
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1487
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1491
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1602
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1604
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1600
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1571
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1606
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1088
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1102
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1108
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1117
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1123
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1129
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1135
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1141
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1696
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1740
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1743
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1750
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1757
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1967
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1976
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1983
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1988
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.128 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.133, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.135, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.136, i32 0, i32 0)], align 4, !dbg !2016
@.str.130 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.131 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.132 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.133 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.134 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.135 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.129 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.136 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2128
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2141
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2249
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2252
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2254
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1981
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1978
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2256
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2292
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1845
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2290
@.str.189 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2883 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2887, !srcloc !2888
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2889, !srcloc !2890
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2891, !srcloc !2892
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2893, !srcloc !2894
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2895, !srcloc !2896
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2897, !srcloc !2898
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2899, !srcloc !2900
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2901, !srcloc !2902
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2903, !srcloc !2904
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2905, !srcloc !2906
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2907, !srcloc !2908
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2909, !srcloc !2910
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2927, !srcloc !2928
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2929, !srcloc !2930
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2931, !srcloc !2932
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2933, !srcloc !2934
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2935, !srcloc !2936
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2937, !srcloc !2938
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2939, !srcloc !2940
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2941, !srcloc !2944
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2945, !srcloc !2946
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2947, !srcloc !2948
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2949, !srcloc !2950
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2951, !srcloc !2952
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2953, !srcloc !2954
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2955, !srcloc !2956
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2957, !srcloc !2958
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2959, !srcloc !2960
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2961, !srcloc !2962
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2963, !srcloc !2964
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2965, !srcloc !2966
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2967, !srcloc !2968
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2969, !srcloc !2970
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2971, !srcloc !2972
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2973, !srcloc !2974
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2975, !srcloc !2976
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2977, !srcloc !2978
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2979, !srcloc !2980
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2981, !srcloc !2982
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2983, !srcloc !2984
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2985, !srcloc !2986
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2987, !srcloc !2988
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2989, !srcloc !2990
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2991, !srcloc !2992
  ret void, !dbg !2993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2996 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #25, !dbg !2999
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #25, !dbg !3000
  tail call void @print_sys_memory_stats() #26, !dbg !3001
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #25, !dbg !3002
  call void @llvm.dbg.value(metadata i8* %1, metadata !2998, metadata !DIExpression()), !dbg !3003
  tail call void @print_sys_memory_stats() #26, !dbg !3004
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #25, !dbg !3005
  call void @llvm.dbg.value(metadata i8* %2, metadata !2998, metadata !DIExpression()), !dbg !3003
  tail call void @print_sys_memory_stats() #26, !dbg !3006
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #25, !dbg !3007
  tail call void @print_sys_memory_stats() #26, !dbg !3008
  ret void, !dbg !3009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !3010 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !3019
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #24, !dbg !3019
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !3012, metadata !DIExpression()), !dbg !3020
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #25, !dbg !3021
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !3022
  %5 = load i32, i32* %4, align 4, !dbg !3022
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !3023
  %7 = load i32, i32* %6, align 4, !dbg !3023
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !3024
  %9 = load i32, i32* %8, align 4, !dbg !3024
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #25, !dbg !3025
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #24, !dbg !3026
  ret void, !dbg !3026
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3029, metadata !DIExpression()), !dbg !3030
  ret i32 0, !dbg !3031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3032 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3036, metadata !DIExpression()), !dbg !3037
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3038
  ret void, !dbg !3039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3040 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3043
  ret i8* %1, !dbg !3044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3045 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3057, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i8* %0, metadata !3056, metadata !DIExpression()), !dbg !3066
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3067
  ret void, !dbg !3069
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3074, metadata !DIExpression()), !dbg !3076
  call void @llvm.dbg.value(metadata i8* %1, metadata !3075, metadata !DIExpression()), !dbg !3076
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3077
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3077
  ret i32 %4, !dbg !3078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3079 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3091, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3088, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.value(metadata i8* %1, metadata !3089, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.value(metadata i8* %2, metadata !3090, metadata !DIExpression()), !dbg !3092
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3093
  ret void, !dbg !3094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3099, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i32 %1, metadata !3100, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i32 0, metadata !3101, metadata !DIExpression()), !dbg !3102
  %3 = icmp eq i32 %1, 0, !dbg !3103
  br i1 %3, label %13, label %4, !dbg !3106

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3101, metadata !DIExpression()), !dbg !3102
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3107
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3109
  %8 = load i8, i8* %7, align 1, !dbg !3109
  %9 = zext i8 %8 to i32, !dbg !3109
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3107
  %11 = add nuw i32 %5, 1, !dbg !3110
  call void @llvm.dbg.value(metadata i32 %11, metadata !3101, metadata !DIExpression()), !dbg !3102
  %12 = icmp eq i32 %11, %1, !dbg !3103
  br i1 %12, label %13, label %4, !dbg !3106, !llvm.loop !3111

13:                                               ; preds = %4, %2
  ret void, !dbg !3113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3114 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3118, metadata !DIExpression()), !dbg !3120
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3121
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3119, metadata !DIExpression()), !dbg !3122
  call void @llvm.va_start(i8* nonnull %3), !dbg !3123
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3124
  %5 = load i32, i32* %4, align 4, !dbg !3124
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3124
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3124
  call void @llvm.va_end(i8* nonnull %3), !dbg !3125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3126
  ret void, !dbg !3126
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3127 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3131, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i32 %1, metadata !3132, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i8* %2, metadata !3133, metadata !DIExpression()), !dbg !3136
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3137
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3137
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3134, metadata !DIExpression()), !dbg !3138
  call void @llvm.va_start(i8* nonnull %5), !dbg !3139
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3140
  %7 = load i32, i32* %6, align 4, !dbg !3140
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3140
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3140
  call void @llvm.dbg.value(metadata i32 %9, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.va_end(i8* nonnull %5), !dbg !3141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3142
  ret i32 %9, !dbg !3143
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3144 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3151, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.value(metadata i8* %0, metadata !3148, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.value(metadata i32 %1, metadata !3149, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.value(metadata i8* %2, metadata !3150, metadata !DIExpression()), !dbg !3158
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3159
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3159
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3152, metadata !DIExpression()), !dbg !3160
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3161
  store i8* %0, i8** %7, align 4, !dbg !3161
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3161
  store i32 %1, i32* %8, align 4, !dbg !3161
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3161
  store i32 0, i32* %9, align 4, !dbg !3161
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3162
  %10 = load i32, i32* %9, align 4, !dbg !3163
  %11 = load i32, i32* %8, align 4, !dbg !3165
  %12 = icmp slt i32 %10, %11, !dbg !3166
  br i1 %12, label %13, label %15, !dbg !3167

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3168
  store i8 0, i8* %14, align 1, !dbg !3170
  br label %15, !dbg !3171

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3172
  ret i32 %10, !dbg !3173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3179, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3180, metadata !DIExpression()), !dbg !3181
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3182
  %4 = load i8*, i8** %3, align 4, !dbg !3182
  %5 = icmp eq i8* %4, null, !dbg !3184
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3185
  br i1 %5, label %12, label %8, !dbg !3186

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3187
  %10 = load i32, i32* %9, align 4, !dbg !3187
  %11 = icmp slt i32 %7, %10, !dbg !3188
  br i1 %11, label %15, label %12, !dbg !3189

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3190
  %14 = add nsw i32 %7, 1, !dbg !3192
  store i32 %14, i32* %13, align 4, !dbg !3192
  br label %25, !dbg !3193

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3194
  %17 = icmp eq i32 %7, %16, !dbg !3196
  br i1 %17, label %18, label %21, !dbg !3197

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3198
  store i32 %19, i32* %6, align 4, !dbg !3198
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3200
  store i8 0, i8* %20, align 1, !dbg !3201
  br label %25, !dbg !3202

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3203
  %23 = add nsw i32 %7, 1, !dbg !3205
  store i32 %23, i32* %6, align 4, !dbg !3205
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3206
  store i8 %22, i8* %24, align 1, !dbg !3207
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3208
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3209 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3219, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i8* %1, metadata !3220, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i8* %2, metadata !3221, metadata !DIExpression()), !dbg !3223
  call void @llvm.dbg.value(metadata i8* %3, metadata !3222, metadata !DIExpression()), !dbg !3223
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3224
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3225
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3226
  unreachable, !dbg !3227
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3228 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3332
  ret %struct.k_thread* %1, !dbg !3333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3339, metadata !DIExpression()), !dbg !3340
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3341, !srcloc !3343
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3344
  ret void, !dbg !3345
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3346 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3347, !srcloc !3349
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3350
  ret %struct.k_thread* %1, !dbg !3351
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3352 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3363, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %1, metadata !3364, metadata !DIExpression()), !dbg !3367
  %3 = icmp eq i8* %1, null, !dbg !3368
  br i1 %3, label %13, label %4, !dbg !3370

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3371
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3371
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3365, metadata !DIExpression()), !dbg !3367
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3372, !range !3373
  call void @llvm.dbg.value(metadata i32 %7, metadata !3366, metadata !DIExpression()), !dbg !3367
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3374
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3375, !range !3376
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #26, !dbg !3377
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3378
  %11 = load i32, i32* %10, align 4, !dbg !3379
  %12 = sub i32 %11, %9, !dbg !3379
  store i32 %12, i32* %10, align 4, !dbg !3379
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3380
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3386, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.value(metadata i8* %1, metadata !3387, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.value(metadata i8* %1, metadata !3388, metadata !DIExpression()), !dbg !3390
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3391
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3389, metadata !DIExpression()), !dbg !3390
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3392
  %5 = ptrtoint i8* %4 to i32, !dbg !3393
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3393
  %7 = sub i32 %5, %6, !dbg !3393
  %8 = lshr i32 %7, 3, !dbg !3394
  ret i32 %8, !dbg !3395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3396 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3400, metadata !DIExpression()), !dbg !3405
  call void @llvm.dbg.value(metadata i32 %1, metadata !3401, metadata !DIExpression()), !dbg !3405
  call void @llvm.dbg.value(metadata i1 %2, metadata !3402, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3405
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3406
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3403, metadata !DIExpression()), !dbg !3405
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3404, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3405
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3407
  %6 = bitcast i8* %5 to i16*, !dbg !3407
  %7 = load i16, i16* %6, align 2, !dbg !3407
  %8 = and i16 %7, -2, !dbg !3411
  %9 = zext i1 %2 to i16, !dbg !3411
  %10 = or i16 %8, %9, !dbg !3411
  store i16 %10, i16* %6, align 2, !dbg !3407
  ret void, !dbg !3412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3413 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3418, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.value(metadata i32 %1, metadata !3419, metadata !DIExpression()), !dbg !3420
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3421
  %4 = lshr i32 %3, 1, !dbg !3422
  ret i32 %4, !dbg !3423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3424 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3428, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %1, metadata !3429, metadata !DIExpression()), !dbg !3430
  %3 = shl i32 %1, 3, !dbg !3431
  %4 = add i32 %3, -4, !dbg !3432
  ret i32 %4, !dbg !3433
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3434 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3438, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 %1, metadata !3439, metadata !DIExpression()), !dbg !3440
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3441
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3443
  br i1 %4, label %7, label %5, !dbg !3444

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3445
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3447
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3448
  br label %7, !dbg !3449

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3450, !range !3452
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3453
  br i1 %9, label %13, label %10, !dbg !3454

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3455
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3457, !range !3452
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3458
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3459
  call void @llvm.dbg.value(metadata i32 %12, metadata !3439, metadata !DIExpression()), !dbg !3440
  br label %13, !dbg !3460

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3439, metadata !DIExpression()), !dbg !3440
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3461
  ret void, !dbg !3462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3463 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3467, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %1, metadata !3468, metadata !DIExpression()), !dbg !3469
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3470
  %4 = add i32 %3, %1, !dbg !3471
  ret i32 %4, !dbg !3472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3473 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3477, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata i32 %1, metadata !3478, metadata !DIExpression()), !dbg !3479
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3480
  %4 = and i32 %3, 1, !dbg !3481
  %5 = icmp ne i32 %4, 0, !dbg !3480
  ret i1 %5, !dbg !3482
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3483 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3485, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.value(metadata i32 %1, metadata !3486, metadata !DIExpression()), !dbg !3490
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3491, !range !3376
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3492
  call void @llvm.dbg.value(metadata i32 %4, metadata !3487, metadata !DIExpression()), !dbg !3493
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3494
  ret void, !dbg !3495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3496 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3500, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i32 %1, metadata !3501, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i32 %2, metadata !3502, metadata !DIExpression()), !dbg !3504
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3505
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3506
  %6 = add i32 %5, %4, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %6, metadata !3503, metadata !DIExpression()), !dbg !3504
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3508
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3509
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3510
  ret void, !dbg !3511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3512 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3514, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata i32 %1, metadata !3515, metadata !DIExpression()), !dbg !3516
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3517
  %4 = sub i32 %1, %3, !dbg !3518
  ret i32 %4, !dbg !3519
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3520 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3522, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %1, metadata !3523, metadata !DIExpression()), !dbg !3527
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3528, !range !3376
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3529
  call void @llvm.dbg.value(metadata i32 %4, metadata !3524, metadata !DIExpression()), !dbg !3530
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3531
  ret void, !dbg !3532
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3533 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3537, metadata !DIExpression()), !dbg !3540
  call void @llvm.dbg.value(metadata i32 %1, metadata !3538, metadata !DIExpression()), !dbg !3540
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3541
  %4 = add i32 %1, 1, !dbg !3542
  %5 = sub i32 %4, %3, !dbg !3543
  call void @llvm.dbg.value(metadata i32 %5, metadata !3539, metadata !DIExpression()), !dbg !3540
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3544, !range !3545
  %7 = sub nsw i32 31, %6, !dbg !3546
  ret i32 %7, !dbg !3547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3548 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3552, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.value(metadata i32 %1, metadata !3553, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.value(metadata i32 %2, metadata !3554, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3555, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3561
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3562
  %5 = load i32, i32* %4, align 4, !dbg !3562
  %6 = icmp eq i32 %5, 0, !dbg !3563
  br i1 %6, label %7, label %12, !dbg !3564

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3565
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3567
  %10 = load i32, i32* %9, align 4, !dbg !3568
  %11 = or i32 %10, %8, !dbg !3568
  store i32 %11, i32* %9, align 4, !dbg !3568
  store i32 %1, i32* %4, align 4, !dbg !3569
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3570
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3571
  br label %14, !dbg !3572

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3557, metadata !DIExpression()), !dbg !3573
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3574, !range !3575
  call void @llvm.dbg.value(metadata i32 %13, metadata !3560, metadata !DIExpression()), !dbg !3573
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3576
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3577
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3578
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3579
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3580, !range !3376
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #26, !dbg !3581
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3582
  %18 = load i32, i32* %17, align 4, !dbg !3583
  %19 = add i32 %18, %16, !dbg !3583
  store i32 %19, i32* %17, align 4, !dbg !3583
  ret void, !dbg !3584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3585 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3587, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32 %1, metadata !3588, metadata !DIExpression()), !dbg !3590
  call void @llvm.dbg.value(metadata i32 %2, metadata !3589, metadata !DIExpression()), !dbg !3590
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3591
  ret void, !dbg !3592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3593 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3595, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %1, metadata !3596, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %2, metadata !3597, metadata !DIExpression()), !dbg !3598
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3599
  ret void, !dbg !3600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3601 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3603, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %1, metadata !3604, metadata !DIExpression()), !dbg !3605
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3606
  ret i32 %3, !dbg !3607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3608 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3612, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %1, metadata !3613, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %2, metadata !3614, metadata !DIExpression()), !dbg !3617
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3618
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3615, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3616, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3616, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3617
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3619
  call void @llvm.dbg.value(metadata i8* %5, metadata !3616, metadata !DIExpression()), !dbg !3617
  %6 = bitcast i8* %5 to i16*, !dbg !3620
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3623
  %8 = load i16, i16* %7, align 2, !dbg !3623
  %9 = zext i16 %8 to i32, !dbg !3623
  ret i32 %9, !dbg !3624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3625 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3629, metadata !DIExpression()), !dbg !3630
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3631
  ret %struct.chunk_unit_t* %2, !dbg !3632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3633 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3637, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata i32 %1, metadata !3638, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata i32 %2, metadata !3639, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata i32 %3, metadata !3640, metadata !DIExpression()), !dbg !3643
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3644
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3641, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3642, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3643
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3645
  call void @llvm.dbg.value(metadata i8* %6, metadata !3642, metadata !DIExpression()), !dbg !3643
  %7 = trunc i32 %3 to i16, !dbg !3646
  %8 = bitcast i8* %6 to i16*, !dbg !3649
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3650
  store i16 %7, i16* %9, align 2, !dbg !3651
  ret void, !dbg !3652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3653 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3657, metadata !DIExpression()), !dbg !3658
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3659
  ret i32 %2, !dbg !3660
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3661 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3665, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i32 %1, metadata !3666, metadata !DIExpression()), !dbg !3667
  %3 = add i32 %1, 4, !dbg !3668
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3669
  ret i32 %4, !dbg !3670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3675, metadata !DIExpression()), !dbg !3676
  %2 = add i32 %0, 7, !dbg !3677
  %3 = lshr i32 %2, 3, !dbg !3678
  ret i32 %3, !dbg !3679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3680 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3684, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i32 %1, metadata !3685, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i32 %2, metadata !3686, metadata !DIExpression()), !dbg !3687
  %4 = shl i32 %2, 1, !dbg !3688
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3689
  ret void, !dbg !3690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3691 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3693, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 %1, metadata !3694, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 %2, metadata !3695, metadata !DIExpression()), !dbg !3696
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3697
  ret void, !dbg !3698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3699 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3701, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.value(metadata i32 %1, metadata !3702, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.value(metadata i32 %2, metadata !3703, metadata !DIExpression()), !dbg !3709
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3710
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3704, metadata !DIExpression()), !dbg !3709
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3711
  %6 = icmp eq i32 %5, %1, !dbg !3712
  br i1 %6, label %7, label %14, !dbg !3713

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3714
  %9 = xor i32 %8, -1, !dbg !3716
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3717
  %11 = load i32, i32* %10, align 4, !dbg !3718
  %12 = and i32 %11, %9, !dbg !3718
  store i32 %12, i32* %10, align 4, !dbg !3718
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3719
  store i32 0, i32* %13, align 4, !dbg !3720
  br label %17, !dbg !3721

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3722
  call void @llvm.dbg.value(metadata i32 %15, metadata !3705, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.value(metadata i32 %5, metadata !3708, metadata !DIExpression()), !dbg !3723
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3724
  store i32 %5, i32* %16, align 4, !dbg !3725
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3726
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3727
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3728, !range !3376
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #26, !dbg !3729
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3730
  %21 = load i32, i32* %20, align 4, !dbg !3731
  %22 = sub i32 %21, %19, !dbg !3731
  store i32 %22, i32* %20, align 4, !dbg !3731
  ret void, !dbg !3732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3733 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3735, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32 %1, metadata !3736, metadata !DIExpression()), !dbg !3737
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3738
  ret i32 %3, !dbg !3739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3740 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3744, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i8* %1, metadata !3745, metadata !DIExpression()), !dbg !3751
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3752
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3752
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3746, metadata !DIExpression()), !dbg !3751
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %5, metadata !3747, metadata !DIExpression()), !dbg !3751
  %6 = ptrtoint i8* %1 to i32, !dbg !3754
  call void @llvm.dbg.value(metadata i32 %6, metadata !3748, metadata !DIExpression()), !dbg !3751
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3755
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3755
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %9, metadata !3749, metadata !DIExpression()), !dbg !3751
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3757
  %11 = shl i32 %10, 3, !dbg !3758
  call void @llvm.dbg.value(metadata i32 %11, metadata !3750, metadata !DIExpression()), !dbg !3751
  %12 = sub i32 %9, %6, !dbg !3759
  %13 = add i32 %12, %11, !dbg !3760
  ret i32 %13, !dbg !3761
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3762 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3766, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i32 %1, metadata !3767, metadata !DIExpression()), !dbg !3772
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3773
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3773
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3768, metadata !DIExpression()), !dbg !3772
  %5 = icmp eq i32 %1, 0, !dbg !3774
  br i1 %5, label %21, label %6, !dbg !3776

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3777
  br i1 %7, label %21, label %8, !dbg !3778

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3779, !range !3373
  call void @llvm.dbg.value(metadata i32 %9, metadata !3770, metadata !DIExpression()), !dbg !3772
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3780
  call void @llvm.dbg.value(metadata i32 %10, metadata !3771, metadata !DIExpression()), !dbg !3772
  %11 = icmp eq i32 %10, 0, !dbg !3781
  br i1 %11, label %21, label %12, !dbg !3783

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3784
  %14 = icmp ugt i32 %13, %9, !dbg !3786
  br i1 %14, label %15, label %17, !dbg !3787

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3788
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3790
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3791
  br label %17, !dbg !3792

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3793
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3794
  call void @llvm.dbg.value(metadata i8* %18, metadata !3769, metadata !DIExpression()), !dbg !3772
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3795, !range !3376
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #26, !dbg !3796, !range !3797
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #26, !dbg !3798
  br label %21, !dbg !3799

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3772
  ret i8* %22, !dbg !3800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3801 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3805, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3807
  %3 = lshr i32 %1, 3, !dbg !3808
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3809
  %5 = load i32, i32* %4, align 4, !dbg !3809
  %6 = icmp uge i32 %3, %5, !dbg !3810
  ret i1 %6, !dbg !3811
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3812 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3816, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata i32 %1, metadata !3817, metadata !DIExpression()), !dbg !3831
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %3, metadata !3818, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3819, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3831
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3833
  %5 = load i32, i32* %4, align 4, !dbg !3833
  %6 = icmp eq i32 %5, 0, !dbg !3834
  br i1 %6, label %19, label %7, !dbg !3835

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3836
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3837
  call void @llvm.dbg.value(metadata i32 %9, metadata !3823, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %8, metadata !3824, metadata !DIExpression()), !dbg !3838
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3839
  %11 = icmp ult i32 %10, %1, !dbg !3841
  br i1 %11, label %13, label %12, !dbg !3842

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3843
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3845
  store i32 %14, i32* %4, align 4, !dbg !3846
  %15 = add nsw i32 %9, -1, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %15, metadata !3823, metadata !DIExpression()), !dbg !3837
  %16 = icmp eq i32 %15, 0, !dbg !3847
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3848
  br i1 %18, label %19, label %7, !dbg !3848, !llvm.loop !3849

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3852
  %21 = load i32, i32* %20, align 4, !dbg !3852
  %22 = add nsw i32 %3, 1, !dbg !3853
  %23 = shl nsw i32 -1, %22, !dbg !3853
  %24 = and i32 %21, %23, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %24, metadata !3826, metadata !DIExpression()), !dbg !3831
  %25 = icmp eq i32 %24, 0, !dbg !3855
  br i1 %25, label %30, label %26, !dbg !3856

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3857, !range !3545
  call void @llvm.dbg.value(metadata i32 %27, metadata !3827, metadata !DIExpression()), !dbg !3858
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3859
  %29 = load i32, i32* %28, align 4, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %29, metadata !3830, metadata !DIExpression()), !dbg !3858
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3860
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3831
  ret i32 %31, !dbg !3861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3862 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3864, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.value(metadata i32 %1, metadata !3865, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.value(metadata i32 %2, metadata !3866, metadata !DIExpression()), !dbg !3870
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %4, metadata !3867, metadata !DIExpression()), !dbg !3870
  %5 = sub i32 %2, %1, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %5, metadata !3868, metadata !DIExpression()), !dbg !3870
  %6 = sub i32 %4, %5, !dbg !3873
  call void @llvm.dbg.value(metadata i32 %6, metadata !3869, metadata !DIExpression()), !dbg !3870
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3874
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3875
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3876
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3877
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3878
  ret void, !dbg !3879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3884, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i32 %1, metadata !3885, metadata !DIExpression()), !dbg !3888
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3889
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3886, metadata !DIExpression()), !dbg !3888
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %4, metadata !3887, metadata !DIExpression()), !dbg !3888
  ret i8* %4, !dbg !3891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3892 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3896, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 %1, metadata !3897, metadata !DIExpression()), !dbg !3898
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3899
  %4 = load i32, i32* %3, align 4, !dbg !3900
  %5 = add i32 %4, %1, !dbg !3900
  store i32 %5, i32* %3, align 4, !dbg !3900
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3901
  %7 = load i32, i32* %6, align 4, !dbg !3901
  %8 = icmp ugt i32 %7, %5, !dbg !3901
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3901
  store i32 %9, i32* %6, align 4, !dbg !3902
  ret void, !dbg !3903
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3904 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3908, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %1, metadata !3909, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %2, metadata !3910, metadata !DIExpression()), !dbg !3920
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3921
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3921
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3911, metadata !DIExpression()), !dbg !3920
  %6 = sub i32 0, %1, !dbg !3922
  %7 = and i32 %6, %1, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %7, metadata !3913, metadata !DIExpression()), !dbg !3920
  %8 = icmp eq i32 %7, %1, !dbg !3924
  br i1 %8, label %13, label %9, !dbg !3926

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3927
  call void @llvm.dbg.value(metadata i32 %10, metadata !3909, metadata !DIExpression()), !dbg !3920
  %11 = icmp ult i32 %7, 4, !dbg !3929
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3929
  br label %17, !dbg !3929

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3930
  br i1 %14, label %15, label %17, !dbg !3933

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !3934
  br label %59, !dbg !3936

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3920
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3937
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3909, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %19, metadata !3912, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %18, metadata !3913, metadata !DIExpression()), !dbg !3920
  %21 = icmp eq i32 %2, 0, !dbg !3938
  br i1 %21, label %59, label %22, !dbg !3940

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !3941
  br i1 %23, label %59, label %24, !dbg !3942

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3943
  %26 = add i32 %25, %20, !dbg !3944
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !3945, !range !3373
  call void @llvm.dbg.value(metadata i32 %27, metadata !3914, metadata !DIExpression()), !dbg !3920
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !3946
  call void @llvm.dbg.value(metadata i32 %28, metadata !3915, metadata !DIExpression()), !dbg !3920
  %29 = icmp eq i32 %28, 0, !dbg !3947
  br i1 %29, label %59, label %30, !dbg !3949

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3950
  call void @llvm.dbg.value(metadata i8* %31, metadata !3916, metadata !DIExpression()), !dbg !3920
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3951
  %33 = ptrtoint i8* %32 to i32, !dbg !3951
  %34 = add i32 %20, -1, !dbg !3951
  %35 = add i32 %34, %33, !dbg !3951
  %36 = sub i32 0, %20, !dbg !3951
  %37 = and i32 %35, %36, !dbg !3951
  %38 = inttoptr i32 %37 to i8*, !dbg !3952
  %39 = sub i32 0, %18, !dbg !3953
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3953
  call void @llvm.dbg.value(metadata i8* %40, metadata !3916, metadata !DIExpression()), !dbg !3920
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3954
  %42 = ptrtoint i8* %41 to i32, !dbg !3954
  %43 = add i32 %42, 7, !dbg !3954
  %44 = and i32 %43, -8, !dbg !3954
  call void @llvm.dbg.value(metadata i32 %44, metadata !3917, metadata !DIExpression()), !dbg !3920
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %45, metadata !3918, metadata !DIExpression()), !dbg !3920
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !3956
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3957
  %48 = sub i32 %44, %47, !dbg !3957
  %49 = ashr exact i32 %48, 3, !dbg !3957
  call void @llvm.dbg.value(metadata i32 %49, metadata !3919, metadata !DIExpression()), !dbg !3920
  %50 = icmp ugt i32 %45, %28, !dbg !3958
  br i1 %50, label %51, label %52, !dbg !3960

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !3961
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3963
  br label %52, !dbg !3964

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3965
  %54 = icmp ugt i32 %53, %49, !dbg !3967
  br i1 %54, label %55, label %56, !dbg !3968

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !3969
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !3971
  br label %56, !dbg !3972

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !3973
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3974, !range !3376
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #26, !dbg !3975, !range !3797
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #26, !dbg !3976
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3920
  ret i8* %60, !dbg !3977
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3978 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3982, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.value(metadata i8* %1, metadata !3983, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.value(metadata i32 %2, metadata !3984, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.value(metadata i32 %3, metadata !3985, metadata !DIExpression()), !dbg !4001
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4002
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4002
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3986, metadata !DIExpression()), !dbg !4001
  %7 = icmp eq i8* %1, null, !dbg !4003
  br i1 %7, label %8, label %10, !dbg !4005

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4006
  br label %65, !dbg !4008

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4009
  br i1 %11, label %12, label %13, !dbg !4011

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4012
  br label %65, !dbg !4014

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4015
  br i1 %14, label %65, label %15, !dbg !4017

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4018, !range !3373
  call void @llvm.dbg.value(metadata i32 %16, metadata !3987, metadata !DIExpression()), !dbg !4001
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %17, metadata !3988, metadata !DIExpression()), !dbg !4001
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4020
  %19 = ptrtoint i8* %1 to i32, !dbg !4021
  %20 = ptrtoint i8* %18 to i32, !dbg !4021
  %21 = sub i32 %19, %20, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %21, metadata !3989, metadata !DIExpression()), !dbg !4001
  %22 = add i32 %21, %3, !dbg !4022
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %23, metadata !3990, metadata !DIExpression()), !dbg !4001
  %24 = icmp eq i32 %2, 0, !dbg !4024
  br i1 %24, label %29, label %25, !dbg !4025

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4026
  %27 = and i32 %26, %19, !dbg !4027
  %28 = icmp eq i32 %27, 0, !dbg !4027
  br i1 %28, label %29, label %55, !dbg !4028

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4029
  %31 = icmp eq i32 %23, %30, !dbg !4030
  br i1 %31, label %65, label %32, !dbg !4031

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4032
  br i1 %33, label %34, label %41, !dbg !4033

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !4034
  %36 = shl i32 %35, 3, !dbg !4036
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !4037
  %38 = load i32, i32* %37, align 4, !dbg !4038
  %39 = add i32 %38, %36, !dbg !4038
  store i32 %39, i32* %37, align 4, !dbg !4038
  %40 = add i32 %23, %16, !dbg !4039
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #26, !dbg !4040
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4041
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #26, !dbg !4042
  br label %65, !dbg !4043

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4044
  br i1 %42, label %55, label %43, !dbg !4045

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4046
  %45 = add i32 %44, %30, !dbg !4047
  %46 = icmp ult i32 %45, %23, !dbg !4048
  br i1 %46, label %55, label %47, !dbg !4049

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %48, metadata !3991, metadata !DIExpression()), !dbg !4051
  %49 = shl i32 %48, 3, !dbg !4052
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #26, !dbg !4053
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4054
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4055
  %51 = icmp ult i32 %48, %50, !dbg !4057
  br i1 %51, label %52, label %54, !dbg !4058

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !4059
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #26, !dbg !4061
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4062
  br label %54, !dbg !4063

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4064
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4065
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4066
  call void @llvm.dbg.value(metadata i8* %56, metadata !3997, metadata !DIExpression()), !dbg !4001
  %57 = icmp eq i8* %56, null, !dbg !4067
  br i1 %57, label %65, label %58, !dbg !4068

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4069, !range !3376
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #26, !dbg !4070
  %61 = sub i32 %60, %21, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %61, metadata !3998, metadata !DIExpression()), !dbg !4072
  %62 = icmp ult i32 %61, %3, !dbg !4073
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !4073
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #25, !dbg !4074
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4075
  br label %65, !dbg !4076

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !4001
  ret i8* %66, !dbg !4077
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4078 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4082, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i8* %1, metadata !4083, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i32 %2, metadata !4084, metadata !DIExpression()), !dbg !4093
  %4 = add i32 %2, -4, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %4, metadata !4084, metadata !DIExpression()), !dbg !4093
  %5 = ptrtoint i8* %1 to i32, !dbg !4095
  %6 = add i32 %5, 7, !dbg !4095
  %7 = and i32 %6, -8, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %7, metadata !4085, metadata !DIExpression()), !dbg !4093
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4096
  %9 = ptrtoint i8* %8 to i32, !dbg !4096
  %10 = and i32 %9, -8, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %10, metadata !4086, metadata !DIExpression()), !dbg !4093
  %11 = sub i32 %10, %7, !dbg !4097
  %12 = lshr exact i32 %11, 3, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %12, metadata !4087, metadata !DIExpression()), !dbg !4093
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4099
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4088, metadata !DIExpression()), !dbg !4093
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4100
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4101
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4102
  store i32 %12, i32* %15, align 8, !dbg !4103
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4104
  store i32 0, i32* %16, align 4, !dbg !4105
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4106
  store i32 0, i32* %17, align 8, !dbg !4107
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4108
  store i32 0, i32* %18, align 4, !dbg !4109
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4110
  store i32 0, i32* %19, align 8, !dbg !4111
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %20, metadata !4089, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4093
  %21 = shl i32 %20, 2, !dbg !4113
  %22 = add i32 %21, 32, !dbg !4114
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #26, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %23, metadata !4090, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i32 0, metadata !4091, metadata !DIExpression()), !dbg !4116
  %24 = icmp slt i32 %20, 0, !dbg !4117
  br i1 %24, label %25, label %27, !dbg !4119

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #26, !dbg !4120
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4121
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4122
  %26 = sub i32 %12, %23, !dbg !4123
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #26, !dbg !4124
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #26, !dbg !4125
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4126
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #26, !dbg !4127
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4128
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #26, !dbg !4129
  ret void, !dbg !4130

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4091, metadata !DIExpression()), !dbg !4116
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4131
  store i32 0, i32* %29, align 4, !dbg !4133
  %30 = add nuw i32 %28, 1, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %30, metadata !4091, metadata !DIExpression()), !dbg !4116
  %31 = icmp eq i32 %28, %20, !dbg !4117
  br i1 %31, label %25, label %27, !dbg !4119, !llvm.loop !4135
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4137 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4161, metadata !DIExpression()), !dbg !4187
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4188
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4188
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4162, metadata !DIExpression()), !dbg !4187
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #26, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %7, metadata !4163, metadata !DIExpression()), !dbg !4187
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4163, metadata !DIExpression()), !dbg !4187
  %10 = icmp ult i32 %7, %9, !dbg !4191
  br i1 %10, label %11, label %17, !dbg !4193

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4163, metadata !DIExpression()), !dbg !4187
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #26, !dbg !4194
  br i1 %13, label %14, label %138, !dbg !4197

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #26, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %15, metadata !4163, metadata !DIExpression()), !dbg !4187
  %16 = icmp ult i32 %15, %9, !dbg !4191
  br i1 %16, label %11, label %17, !dbg !4193, !llvm.loop !4199

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4201
  %19 = icmp eq i32 %18, %9, !dbg !4202
  br i1 %19, label %20, label %138, !dbg !4204

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4205
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4205
  %22 = bitcast i32* %3 to i8*, !dbg !4205
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4205
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4206
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4206
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4166, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32* %2, metadata !4164, metadata !DIExpression(DW_OP_deref)), !dbg !4187
  call void @llvm.dbg.value(metadata i32* %3, metadata !4165, metadata !DIExpression(DW_OP_deref)), !dbg !4187
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #26, !dbg !4208
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #26, !dbg !4209
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4210
  %26 = load i32, i32* %25, align 4, !dbg !4210
  %27 = load i32, i32* %2, align 4, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %27, metadata !4164, metadata !DIExpression()), !dbg !4187
  %28 = icmp eq i32 %26, %27, !dbg !4213
  br i1 %28, label %29, label %136, !dbg !4214

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4215
  %31 = load i32, i32* %30, align 4, !dbg !4215
  %32 = load i32, i32* %3, align 4, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %32, metadata !4165, metadata !DIExpression()), !dbg !4187
  %33 = icmp eq i32 %31, %32, !dbg !4217
  br i1 %33, label %34, label %136, !dbg !4218

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4172, metadata !DIExpression()), !dbg !4219
  %35 = load i32, i32* %8, align 4, !dbg !4220
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #26, !dbg !4221
  %37 = icmp slt i32 %36, 0, !dbg !4222
  br i1 %37, label %84, label %38, !dbg !4223

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4223

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4172, metadata !DIExpression()), !dbg !4219
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4224
  %43 = load i32, i32* %42, align 4, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %43, metadata !4174, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.value(metadata i32 0, metadata !4177, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.value(metadata i32 %43, metadata !4163, metadata !DIExpression()), !dbg !4187
  %44 = icmp eq i32 %43, 0, !dbg !4226
  br i1 %44, label %45, label %50, !dbg !4229

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4230
  %47 = shl nuw i32 1, %41, !dbg !4231
  %48 = and i32 %46, %47, !dbg !4232
  %49 = icmp eq i32 %48, 0, !dbg !4233
  call void @llvm.dbg.value(metadata i1 %71, metadata !4178, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4225
  call void @llvm.dbg.value(metadata i1 %72, metadata !4179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4225
  br i1 %49, label %76, label %136, !dbg !4234

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4163, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i32 %52, metadata !4177, metadata !DIExpression()), !dbg !4225
  %53 = icmp eq i32 %52, 0, !dbg !4235
  %54 = icmp ne i32 %51, %43, !dbg !4236
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4236
  br i1 %55, label %61, label %56, !dbg !4237

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4230
  %58 = shl nuw i32 1, %41, !dbg !4231
  %59 = and i32 %57, %58, !dbg !4232
  %60 = icmp eq i32 %59, 0, !dbg !4233
  call void @llvm.dbg.value(metadata i1 %71, metadata !4178, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4225
  call void @llvm.dbg.value(metadata i1 %72, metadata !4179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4225
  br i1 %60, label %136, label %74, !dbg !4234

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4238
  br i1 %62, label %63, label %136, !dbg !4241

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #26, !dbg !4242
  %64 = add i32 %52, 1, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %64, metadata !4177, metadata !DIExpression()), !dbg !4225
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %65, metadata !4163, metadata !DIExpression()), !dbg !4187
  %66 = icmp eq i32 %65, 0, !dbg !4226
  br i1 %66, label %67, label %50, !dbg !4229, !llvm.loop !4245

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4230
  %69 = shl nuw i32 1, %41, !dbg !4231
  %70 = and i32 %68, %69, !dbg !4232
  %71 = icmp eq i32 %70, 0, !dbg !4233
  call void @llvm.dbg.value(metadata i1 %71, metadata !4178, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4225
  %72 = icmp ne i32 %64, 0, !dbg !4247
  call void @llvm.dbg.value(metadata i1 %72, metadata !4179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4225
  %73 = xor i1 %72, %71, !dbg !4248
  br i1 %73, label %74, label %136, !dbg !4234

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4250

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4252
  %78 = icmp eq i32 %77, 0, !dbg !4253
  br i1 %78, label %79, label %136, !dbg !4254

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4255
  call void @llvm.dbg.value(metadata i32 %80, metadata !4172, metadata !DIExpression()), !dbg !4219
  %81 = load i32, i32* %8, align 4, !dbg !4220
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #26, !dbg !4221
  %83 = icmp slt i32 %41, %82, !dbg !4222
  br i1 %83, label %40, label %84, !dbg !4223, !llvm.loop !4256

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4258
  call void @llvm.dbg.value(metadata i32 0, metadata !4180, metadata !DIExpression()), !dbg !4187
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %86, metadata !4163, metadata !DIExpression()), !dbg !4187
  %87 = icmp ult i32 %86, %85, !dbg !4262
  br i1 %87, label %88, label %99, !dbg !4263

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4180, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.value(metadata i32 %90, metadata !4163, metadata !DIExpression()), !dbg !4187
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4264
  br i1 %91, label %92, label %136, !dbg !4267

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4268
  %94 = icmp eq i32 %93, %89, !dbg !4270
  br i1 %94, label %95, label %136, !dbg !4271

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4180, metadata !DIExpression()), !dbg !4187
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #26, !dbg !4272
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #26, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %96, metadata !4163, metadata !DIExpression()), !dbg !4187
  %97 = load i32, i32* %8, align 4, !dbg !4258
  %98 = icmp ult i32 %96, %97, !dbg !4262
  br i1 %98, label %88, label %99, !dbg !4263, !llvm.loop !4274

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4276
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4258
  %102 = icmp eq i32 %100, %101, !dbg !4277
  br i1 %102, label %103, label %136, !dbg !4279

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4181, metadata !DIExpression()), !dbg !4280
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #26, !dbg !4281
  %105 = icmp slt i32 %104, 0, !dbg !4282
  br i1 %105, label %125, label %106, !dbg !4283

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4181, metadata !DIExpression()), !dbg !4280
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4284
  %110 = load i32, i32* %109, align 4, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %110, metadata !4183, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4186, metadata !DIExpression()), !dbg !4285
  %111 = icmp eq i32 %110, 0, !dbg !4286
  br i1 %111, label %120, label %112, !dbg !4288

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4186, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 %113, metadata !4163, metadata !DIExpression()), !dbg !4187
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4289
  br i1 %114, label %136, label %115, !dbg !4294

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #26, !dbg !4295
  call void @llvm.dbg.value(metadata i32 poison, metadata !4186, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4285
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %116, metadata !4163, metadata !DIExpression()), !dbg !4187
  %117 = icmp eq i32 %116, %110, !dbg !4297
  br i1 %117, label %118, label %112, !dbg !4298, !llvm.loop !4299

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4301
  br label %120, !dbg !4302

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4301
  %122 = add nuw nsw i32 %108, 1, !dbg !4302
  call void @llvm.dbg.value(metadata i32 %122, metadata !4181, metadata !DIExpression()), !dbg !4280
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #26, !dbg !4281
  %124 = icmp slt i32 %108, %123, !dbg !4282
  br i1 %124, label %106, label %125, !dbg !4283, !llvm.loop !4303

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4305
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %127, metadata !4163, metadata !DIExpression()), !dbg !4187
  %128 = icmp ult i32 %127, %126, !dbg !4309
  br i1 %128, label %129, label %136, !dbg !4310

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4163, metadata !DIExpression()), !dbg !4187
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4311
  %132 = xor i1 %131, true, !dbg !4313
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #26, !dbg !4314
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4315
  call void @llvm.dbg.value(metadata i32 %133, metadata !4163, metadata !DIExpression()), !dbg !4187
  %134 = load i32, i32* %8, align 4, !dbg !4305
  %135 = icmp ult i32 %133, %134, !dbg !4309
  br i1 %135, label %129, label %136, !dbg !4310, !llvm.loop !4316

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4187
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4318
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4318
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4318
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4187
  ret i1 %139, !dbg !4318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4319 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4323, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i32 %1, metadata !4324, metadata !DIExpression()), !dbg !4325
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4326
  %4 = add i32 %3, %1, !dbg !4327
  ret i32 %4, !dbg !4328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4329 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4333, metadata !DIExpression()), !dbg !4335
  call void @llvm.dbg.value(metadata i32 %1, metadata !4334, metadata !DIExpression()), !dbg !4335
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4336
  %4 = icmp eq i32 %3, 0, !dbg !4336
  br i1 %4, label %33, label %5, !dbg !4339

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4340
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4340
  %8 = load i32, i32* %7, align 4, !dbg !4340
  %9 = icmp ugt i32 %6, %8, !dbg !4340
  br i1 %9, label %33, label %10, !dbg !4343

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4344
  br i1 %11, label %12, label %33, !dbg !4347

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4348
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4348
  %15 = icmp eq i32 %14, %1, !dbg !4348
  br i1 %15, label %16, label %33, !dbg !4351

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4352
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4352
  %19 = icmp eq i32 %18, %1, !dbg !4352
  br i1 %19, label %20, label %33, !dbg !4355

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4356
  br i1 %21, label %32, label %22, !dbg !4358

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4359
  br i1 %23, label %24, label %33, !dbg !4363

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4364
  br i1 %25, label %26, label %33, !dbg !4367

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4368, !range !3575
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #26, !dbg !4368
  br i1 %28, label %29, label %33, !dbg !4373

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4374, !range !3575
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #26, !dbg !4374
  br i1 %31, label %32, label %33, !dbg !4377

32:                                               ; preds = %20, %29
  br label %33, !dbg !4378

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4335
  ret i1 %34, !dbg !4379
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4380 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4384, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32* %1, metadata !4385, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32* %2, metadata !4386, metadata !DIExpression()), !dbg !4388
  store i32 0, i32* %1, align 4, !dbg !4389
  store i32 0, i32* %2, align 4, !dbg !4390
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %4, metadata !4387, metadata !DIExpression()), !dbg !4388
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4387, metadata !DIExpression()), !dbg !4388
  %6 = load i32, i32* %5, align 4, !dbg !4393
  %7 = icmp ult i32 %4, %6, !dbg !4395
  br i1 %7, label %8, label %19, !dbg !4396

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4387, metadata !DIExpression()), !dbg !4388
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4397
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4400, !range !3376
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #26, !dbg !4400
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4400
  %14 = load i32, i32* %13, align 4, !dbg !4400
  %15 = add i32 %14, %12, !dbg !4400
  store i32 %15, i32* %13, align 4, !dbg !4400
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #26, !dbg !4401
  call void @llvm.dbg.value(metadata i32 %16, metadata !4387, metadata !DIExpression()), !dbg !4388
  %17 = load i32, i32* %5, align 4, !dbg !4393
  %18 = icmp ult i32 %16, %17, !dbg !4395
  br i1 %18, label %8, label %19, !dbg !4396, !llvm.loop !4402

19:                                               ; preds = %8, %3
  ret void, !dbg !4404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4405 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4410, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4411, metadata !DIExpression()), !dbg !4412
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4413
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4415
  br i1 %5, label %20, label %6, !dbg !4415

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4416
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4416
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4417
  %10 = load i32, i32* %9, align 4, !dbg !4417
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4418
  store i32 %10, i32* %11, align 4, !dbg !4419
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4420
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4421
  %14 = load i32, i32* %13, align 4, !dbg !4421
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4422
  store i32 %14, i32* %15, align 4, !dbg !4423
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4424
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4425
  %18 = load i32, i32* %17, align 4, !dbg !4425
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4426
  store i32 %18, i32* %19, align 4, !dbg !4427
  br label %20, !dbg !4428

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4412
  ret i32 %21, !dbg !4429
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4430 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4434, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i32 %1, metadata !4435, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i32 %1, metadata !4436, metadata !DIExpression()), !dbg !4437
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4438, !range !3545
  %4 = sub nsw i32 31, %3, !dbg !4439
  ret i32 %4, !dbg !4440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4441 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4445, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata i32 %1, metadata !4446, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata i1 %2, metadata !4447, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4450
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4451
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4448, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4449, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4450
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4452
  %6 = bitcast i8* %5 to i16*, !dbg !4452
  %7 = load i16, i16* %6, align 2, !dbg !4452
  %8 = and i16 %7, -2, !dbg !4456
  %9 = zext i1 %2 to i16, !dbg !4456
  %10 = or i16 %8, %9, !dbg !4456
  store i16 %10, i16* %6, align 2, !dbg !4452
  ret void, !dbg !4457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4458 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4460, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.value(metadata i32 %1, metadata !4461, metadata !DIExpression()), !dbg !4462
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4463
  ret i32 %3, !dbg !4464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4465 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4467, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.value(metadata i32 %1, metadata !4468, metadata !DIExpression()), !dbg !4469
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4470
  %4 = and i32 %3, 1, !dbg !4471
  %5 = icmp ne i32 %4, 0, !dbg !4470
  ret i1 %5, !dbg !4472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4473 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4475, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.value(metadata i32 %1, metadata !4476, metadata !DIExpression()), !dbg !4477
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4478
  %4 = sub i32 %1, %3, !dbg !4479
  ret i32 %4, !dbg !4480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4481 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4485, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %1, metadata !4486, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %2, metadata !4487, metadata !DIExpression()), !dbg !4490
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4491
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4488, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4490
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4490
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4492
  call void @llvm.dbg.value(metadata i8* %5, metadata !4489, metadata !DIExpression()), !dbg !4490
  %6 = bitcast i8* %5 to i16*, !dbg !4493
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4496
  %8 = load i16, i16* %7, align 2, !dbg !4496
  %9 = zext i16 %8 to i32, !dbg !4496
  ret i32 %9, !dbg !4497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4498 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4502, metadata !DIExpression()), !dbg !4503
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4504
  ret %struct.chunk_unit_t* %2, !dbg !4505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4506 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4510, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i32 %1, metadata !4511, metadata !DIExpression()), !dbg !4512
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4513
  %4 = lshr i32 %3, 1, !dbg !4514
  ret i32 %4, !dbg !4515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4516 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4520, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i32 %1, metadata !4521, metadata !DIExpression()), !dbg !4522
  %3 = shl i32 %1, 3, !dbg !4523
  %4 = add i32 %3, -4, !dbg !4524
  ret i32 %4, !dbg !4525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4526 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4528, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.value(metadata i32 %1, metadata !4529, metadata !DIExpression()), !dbg !4530
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4531
  %4 = icmp ugt i32 %3, %1, !dbg !4531
  br i1 %4, label %12, label %5, !dbg !4534

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4535
  %7 = load i32, i32* %6, align 4, !dbg !4535
  %8 = icmp ugt i32 %7, %1, !dbg !4535
  br i1 %8, label %9, label %12, !dbg !4538

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4539
  %11 = icmp ult i32 %10, %7, !dbg !4539
  br label %12, !dbg !4530

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4530
  ret i1 %13, !dbg !4542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4543 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4545, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i32 %1, metadata !4546, metadata !DIExpression()), !dbg !4547
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4548
  ret i32 %3, !dbg !4549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4550 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4567, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4568, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %2, metadata !4569, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %3, metadata !4570, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %4, metadata !4571, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %5, metadata !4572, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %6, metadata !4573, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %7, metadata !4574, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4575, metadata !DIExpression()), !dbg !4605
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4606
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4606
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4576, metadata !DIExpression()), !dbg !4607
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4608
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4608
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4608
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4608
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4608
  store i8* %2, i8** %14, align 4, !dbg !4608
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4608
  store i32 %3, i32* %15, align 4, !dbg !4608
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4608
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4608
  store i8* %5, i8** %17, align 4, !dbg !4608
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4608
  %19 = lshr i32 %6, 3, !dbg !4609
  store i32 %19, i32* %18, align 4, !dbg !4608
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4608
  store i32 0, i32* %20, align 4, !dbg !4608
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4608
  store i32 0, i32* %21, align 4, !dbg !4608
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4608
  store i32 %7, i32* %22, align 4, !dbg !4608
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4610
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4610
  call void @llvm.dbg.value(metadata i32 0, metadata !4593, metadata !DIExpression()), !dbg !4611
  %24 = icmp eq i32 %4, 0, !dbg !4612
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4613
  br i1 %24, label %31, label %26, !dbg !4613

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4613

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4614
  ret void, !dbg !4614

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4593, metadata !DIExpression()), !dbg !4611
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4615
  br i1 %36, label %37, label %50, !dbg !4616

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #26, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %38, metadata !4595, metadata !DIExpression()), !dbg !4618
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #25, !dbg !4619
  call void @llvm.dbg.value(metadata i8* %39, metadata !4600, metadata !DIExpression()), !dbg !4618
  %40 = load i32, i32* %28, align 8, !dbg !4620
  %41 = add i32 %40, 1, !dbg !4620
  store i32 %41, i32* %28, align 8, !dbg !4620
  %42 = icmp eq i8* %39, null, !dbg !4621
  br i1 %42, label %65, label %43, !dbg !4623

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4624
  %45 = add i32 %44, 1, !dbg !4624
  store i32 %45, i32* %29, align 4, !dbg !4624
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4626
  store i8* %39, i8** %46, align 4, !dbg !4627
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4628
  store i32 %38, i32* %47, align 4, !dbg !4629
  %48 = add i32 %34, 1, !dbg !4630
  store i32 %48, i32* %20, align 4, !dbg !4630
  %49 = add i32 %33, %38, !dbg !4631
  store i32 %49, i32* %21, align 4, !dbg !4631
  br label %65, !dbg !4632

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4633
  call void @llvm.dbg.value(metadata i32 %51, metadata !4601, metadata !DIExpression()), !dbg !4634
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4635
  %53 = load i8*, i8** %52, align 4, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %53, metadata !4603, metadata !DIExpression()), !dbg !4634
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4636
  %55 = load i32, i32* %54, align 4, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %55, metadata !4604, metadata !DIExpression()), !dbg !4634
  %56 = load i32, i32* %27, align 8, !dbg !4637
  %57 = add i32 %56, 1, !dbg !4637
  store i32 %57, i32* %27, align 8, !dbg !4637
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4638
  %59 = add i32 %34, -1, !dbg !4639
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4640
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4640
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4640
  %63 = load i64, i64* %61, align 4, !dbg !4640
  store i64 %63, i64* %62, align 4, !dbg !4640
  store i32 %59, i32* %20, align 4, !dbg !4641
  %64 = sub i32 %33, %55, !dbg !4642
  store i32 %64, i32* %21, align 4, !dbg !4642
  tail call void %1(i8* noundef %2, i8* noundef %53) #25, !dbg !4643
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4644
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4645
  %69 = load i64, i64* %30, align 8, !dbg !4646
  %70 = add i64 %69, %68, !dbg !4646
  store i64 %70, i64* %30, align 8, !dbg !4646
  %71 = add nuw i32 %35, 1, !dbg !4647
  call void @llvm.dbg.value(metadata i32 %71, metadata !4593, metadata !DIExpression()), !dbg !4611
  %72 = icmp eq i32 %71, %4, !dbg !4612
  br i1 %72, label %31, label %32, !dbg !4613, !llvm.loop !4648
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4650 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4655, metadata !DIExpression()), !dbg !4662
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4663
  %3 = load i32, i32* %2, align 4, !dbg !4663
  %4 = icmp eq i32 %3, 0, !dbg !4664
  br i1 %4, label %26, label %5, !dbg !4665

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4666
  %7 = load i32, i32* %6, align 4, !dbg !4666
  %8 = icmp ult i32 %3, %7, !dbg !4667
  br i1 %8, label %9, label %26, !dbg !4668

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4669
  %11 = load i32, i32* %10, align 4, !dbg !4669
  %12 = mul i32 %11, 100, !dbg !4670
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4671
  %14 = load i32, i32* %13, align 4, !dbg !4671
  %15 = udiv i32 %12, %14, !dbg !4672
  call void @llvm.dbg.value(metadata i32 %15, metadata !4656, metadata !DIExpression()), !dbg !4673
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4674
  %17 = load i32, i32* %16, align 4, !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4660, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i32 -1, metadata !4661, metadata !DIExpression()), !dbg !4673
  %18 = icmp ult i32 %15, %17, !dbg !4675
  br i1 %18, label %19, label %22, !dbg !4677

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4660, metadata !DIExpression()), !dbg !4673
  %20 = udiv i32 -2147483648, %17, !dbg !4678
  %21 = mul i32 %20, %15, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %21, metadata !4661, metadata !DIExpression()), !dbg !4673
  br label %22, !dbg !4681

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4673
  call void @llvm.dbg.value(metadata i32 %23, metadata !4661, metadata !DIExpression()), !dbg !4673
  %24 = tail call fastcc i32 @rand32() #26, !dbg !4682
  %25 = icmp ugt i32 %24, %23, !dbg !4683
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4684
  ret i1 %27, !dbg !4685
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4686 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4690, metadata !DIExpression()), !dbg !4692
  %1 = tail call fastcc i32 @rand32() #26, !dbg !4693
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4694, !range !3545
  call void @llvm.dbg.value(metadata i32 %2, metadata !4691, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4692
  %3 = tail call fastcc i32 @rand32() #26, !dbg !4695
  %4 = shl i32 16, %2, !dbg !4696
  %5 = add i32 %4, -1, !dbg !4696
  %6 = and i32 %5, %3, !dbg !4697
  ret i32 %6, !dbg !4698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4699 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4701, metadata !DIExpression()), !dbg !4702
  %2 = tail call fastcc i32 @rand32() #26, !dbg !4703
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4704
  %4 = load i32, i32* %3, align 4, !dbg !4704
  %5 = urem i32 %2, %4, !dbg !4705
  ret i32 %5, !dbg !4706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4707
  %2 = mul i64 %1, 2862933555777941757, !dbg !4708
  %3 = add i64 %2, 3037000493, !dbg !4709
  store i64 %3, i64* @rand32.state, align 8, !dbg !4710
  %4 = lshr i64 %3, 32, !dbg !4711
  %5 = trunc i64 %4 to i32, !dbg !4712
  ret i32 %5, !dbg !4713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4714 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4718, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i1 %1, metadata !4719, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4739
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4740
  %6 = load i32, i32* %5, align 4, !dbg !4740
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #26, !dbg !4741
  %8 = add i32 %7, 1, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %8, metadata !4721, metadata !DIExpression()), !dbg !4739
  %9 = bitcast i32* %3 to i8*, !dbg !4743
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4743
  %10 = bitcast i32* %4 to i8*, !dbg !4743
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4743
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4744
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #25, !dbg !4745
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #25, !dbg !4746
  call void @llvm.dbg.value(metadata i32 0, metadata !4720, metadata !DIExpression()), !dbg !4739
  %12 = icmp slt i32 %7, 0, !dbg !4747
  br i1 %12, label %34, label %13, !dbg !4748

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4720, metadata !DIExpression()), !dbg !4739
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4749
  %16 = load i32, i32* %15, align 4, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %16, metadata !4726, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata i32 0, metadata !4730, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata i32 0, metadata !4731, metadata !DIExpression()), !dbg !4750
  %17 = icmp eq i32 %16, 0, !dbg !4751
  br i1 %17, label %31, label %18, !dbg !4752

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4750
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4750
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4753
  call void @llvm.dbg.value(metadata i32 %21, metadata !4732, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i32 %20, metadata !4731, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata i32 %19, metadata !4730, metadata !DIExpression()), !dbg !4750
  %22 = add nuw nsw i32 %20, 1, !dbg !4754
  call void @llvm.dbg.value(metadata i32 %22, metadata !4731, metadata !DIExpression()), !dbg !4750
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4756
  %24 = icmp ugt i32 %19, %23, !dbg !4756
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %25, metadata !4730, metadata !DIExpression()), !dbg !4750
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4757
  call void @llvm.dbg.value(metadata i32 %26, metadata !4732, metadata !DIExpression()), !dbg !4753
  %27 = icmp eq i32 %26, %16, !dbg !4758
  br i1 %27, label %28, label %18, !dbg !4759, !llvm.loop !4760

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4731, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.value(metadata i32 %25, metadata !4730, metadata !DIExpression()), !dbg !4750
  %29 = shl nuw i32 1, %14, !dbg !4763
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #26, !dbg !4766, !range !3797
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #25, !dbg !4767
  br label %31, !dbg !4768

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %32, metadata !4720, metadata !DIExpression()), !dbg !4739
  %33 = icmp eq i32 %14, %7, !dbg !4747
  br i1 %33, label %34, label %13, !dbg !4748, !llvm.loop !4770

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4772

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !4773
  call void @llvm.dbg.value(metadata i32 0, metadata !4735, metadata !DIExpression()), !dbg !4774
  br label %36, !dbg !4775

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4774
  call void @llvm.dbg.value(metadata i32 %37, metadata !4735, metadata !DIExpression()), !dbg !4774
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4776
  %39 = select i1 %38, i32 42, i32 45, !dbg !4776
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4779
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4780
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4781
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #25, !dbg !4782
  %43 = load i32, i32* %5, align 4, !dbg !4783
  %44 = icmp eq i32 %37, %43, !dbg !4785
  br i1 %44, label %47, label %45, !dbg !4786

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #26, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %46, metadata !4735, metadata !DIExpression()), !dbg !4774
  br label %36, !dbg !4788, !llvm.loop !4789

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4722, metadata !DIExpression(DW_OP_deref)), !dbg !4739
  call void @llvm.dbg.value(metadata i32* %4, metadata !4723, metadata !DIExpression(DW_OP_deref)), !dbg !4739
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #26, !dbg !4792
  %48 = load i32, i32* %5, align 4, !dbg !4793
  %49 = shl i32 %48, 3, !dbg !4794
  %50 = or i32 %49, 4, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %50, metadata !4724, metadata !DIExpression()), !dbg !4739
  %51 = load i32, i32* %3, align 4, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %51, metadata !4722, metadata !DIExpression()), !dbg !4739
  %52 = load i32, i32* %4, align 4, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %52, metadata !4723, metadata !DIExpression()), !dbg !4739
  %53 = add i32 %52, %51, !dbg !4798
  %54 = sub i32 %50, %53, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %54, metadata !4725, metadata !DIExpression()), !dbg !4739
  %55 = mul i32 %54, 1000, !dbg !4799
  %56 = lshr exact i32 %50, 1, !dbg !4800
  %57 = add i32 %55, %56, !dbg !4801
  %58 = udiv i32 %57, %50, !dbg !4802
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4803
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #25, !dbg !4804
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4805
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4805
  ret void, !dbg !4805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4806 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4810, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i1 %1, metadata !4811, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4812
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4813
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4813
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #26, !dbg !4814
  ret void, !dbg !4815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4816 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4820, metadata !DIExpression()), !dbg !4821
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4822
  br i1 %2, label %9, label %3, !dbg !4824

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4825
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4825
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4826
  %7 = load i32, i32* %6, align 4, !dbg !4826
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4827
  store i32 %7, i32* %8, align 4, !dbg !4828
  br label %9, !dbg !4829

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4821
  ret i32 %10, !dbg !4830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4831 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4844, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4841, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %1, metadata !4842, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %2, metadata !4843, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %4, metadata !4845, metadata !DIExpression()), !dbg !4972
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4973
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4973
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4846, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i32 0, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i1 undef, metadata !4852, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4972
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4975

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4975

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4976
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4844, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %30, metadata !4843, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %29, metadata !4850, metadata !DIExpression()), !dbg !4972
  %31 = load i8, i8* %30, align 1, !dbg !4977
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4975

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4977
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4978
  call void @llvm.dbg.value(metadata i8* %34, metadata !4843, metadata !DIExpression()), !dbg !4972
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %35, metadata !4854, metadata !DIExpression()), !dbg !4979
  %36 = icmp slt i32 %35, 0, !dbg !4980
  %37 = add i32 %29, 1, !dbg !4978
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %36, label %365, label %28, !llvm.loop !4982

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4984
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4859, metadata !DIExpression()), !dbg !4985
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4985
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4904, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4907, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %30, metadata !4910, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 -1, metadata !4911, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 -1, metadata !4912, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* null, metadata !4913, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %14, metadata !4914, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8 0, metadata !4915, metadata !DIExpression()), !dbg !4986
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4987
  call void @llvm.dbg.value(metadata i8* %39, metadata !4843, metadata !DIExpression()), !dbg !4972
  %40 = load i24, i24* %15, align 8, !dbg !4988
  %41 = and i24 %40, 256, !dbg !4988
  %42 = icmp eq i24 %41, 0, !dbg !4988
  br i1 %42, label %51, label %43, !dbg !4990

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4991
  call void @llvm.dbg.value(metadata i8* %44, metadata !4844, metadata !DIExpression()), !dbg !4972
  %45 = bitcast i8* %27 to i32*, !dbg !4991
  %46 = load i32, i32* %45, align 4, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %46, metadata !4911, metadata !DIExpression()), !dbg !4986
  %47 = icmp slt i32 %46, 0, !dbg !4993
  br i1 %47, label %48, label %56, !dbg !4995

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4996
  store i24 %49, i24* %15, align 8, !dbg !4996
  %50 = sub nsw i32 0, %46, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %50, metadata !4911, metadata !DIExpression()), !dbg !4986
  br label %56, !dbg !4999

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5000
  %53 = icmp eq i24 %52, 0, !dbg !5000
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5002
  br label %56, !dbg !5002

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5003
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4986
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4844, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %58, metadata !4911, metadata !DIExpression()), !dbg !4986
  %60 = and i24 %57, 1024, !dbg !5003
  %61 = icmp eq i24 %60, 0, !dbg !5003
  br i1 %61, label %69, label %62, !dbg !5004

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5005
  call void @llvm.dbg.value(metadata i8* %63, metadata !4844, metadata !DIExpression()), !dbg !4972
  %64 = bitcast i8* %59 to i32*, !dbg !5005
  %65 = load i32, i32* %64, align 4, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %65, metadata !4916, metadata !DIExpression()), !dbg !5006
  %66 = icmp slt i32 %65, 0, !dbg !5007
  br i1 %66, label %67, label %74, !dbg !5009

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5010
  store i24 %68, i24* %15, align 8, !dbg !5010
  br label %74, !dbg !5012

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5013
  %71 = icmp eq i24 %70, 0, !dbg !5013
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5015
  br label %74, !dbg !5015

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5016
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4986
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4986
  call void @llvm.dbg.value(metadata i8* %77, metadata !4844, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %76, metadata !4912, metadata !DIExpression()), !dbg !4986
  store i32 0, i32* %16, align 4, !dbg !5017
  store i32 0, i32* %17, align 8, !dbg !5018
  %78 = lshr i24 %75, 16, !dbg !5016
  call void @llvm.dbg.value(metadata i24 %78, metadata !4919, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4986
  %79 = lshr i24 %75, 11, !dbg !5019
  %80 = and i24 %79, 15, !dbg !5019
  %81 = zext i24 %80 to i32, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %81, metadata !4920, metadata !DIExpression()), !dbg !4986
  %82 = trunc i24 %78 to i3, !dbg !5020
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5020

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5021

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %85, metadata !4844, metadata !DIExpression()), !dbg !4972
  %86 = bitcast i8* %77 to i32*, !dbg !5024
  %87 = load i32, i32* %86, align 4, !dbg !5024
  %88 = sext i32 %87 to i64, !dbg !5024
  store i64 %88, i64* %20, align 8, !dbg !5026
  br label %115, !dbg !5027

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %90, metadata !4844, metadata !DIExpression()), !dbg !4972
  %91 = bitcast i8* %77 to i32*, !dbg !5028
  %92 = load i32, i32* %91, align 4, !dbg !5028
  %93 = sext i32 %92 to i64, !dbg !5028
  store i64 %93, i64* %20, align 8, !dbg !5031
  br label %115, !dbg !5032

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5033
  %96 = add i32 %95, 7, !dbg !5033
  %97 = and i32 %96, -8, !dbg !5033
  %98 = inttoptr i32 %97 to i8*, !dbg !5033
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %99, metadata !4844, metadata !DIExpression()), !dbg !4972
  %100 = inttoptr i32 %97 to i64*, !dbg !5033
  %101 = load i64, i64* %100, align 8, !dbg !5033
  store i64 %101, i64* %20, align 8, !dbg !5034
  br label %115, !dbg !5035

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5036
  %104 = add i32 %103, 7, !dbg !5036
  %105 = and i32 %104, -8, !dbg !5036
  %106 = inttoptr i32 %105 to i8*, !dbg !5036
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %107, metadata !4844, metadata !DIExpression()), !dbg !4972
  %108 = inttoptr i32 %105 to i64*, !dbg !5036
  %109 = load i64, i64* %108, align 8, !dbg !5036
  store i64 %109, i64* %20, align 8, !dbg !5037
  br label %115, !dbg !5038

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %111, metadata !4844, metadata !DIExpression()), !dbg !4972
  %112 = bitcast i8* %77 to i32*, !dbg !5039
  %113 = load i32, i32* %112, align 4, !dbg !5039
  %114 = sext i32 %113 to i64, !dbg !5040
  store i64 %114, i64* %20, align 8, !dbg !5041
  br label %115, !dbg !5042

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5043
  call void @llvm.dbg.value(metadata i8* %117, metadata !4844, metadata !DIExpression()), !dbg !4972
  %118 = trunc i24 %79 to i4, !dbg !5044
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5044

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5045
  %121 = ashr exact i64 %120, 56, !dbg !5045
  store i64 %121, i64* %20, align 8, !dbg !5048
  br label %177, !dbg !5049

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5050
  %124 = ashr exact i64 %123, 48, !dbg !5050
  store i64 %124, i64* %20, align 8, !dbg !5053
  br label %177, !dbg !5054

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5055

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %127, metadata !4844, metadata !DIExpression()), !dbg !4972
  %128 = bitcast i8* %77 to i32*, !dbg !5058
  %129 = load i32, i32* %128, align 4, !dbg !5058
  %130 = zext i32 %129 to i64, !dbg !5058
  store i64 %130, i64* %20, align 8, !dbg !5060
  br label %157, !dbg !5061

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %132, metadata !4844, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %132, metadata !4844, metadata !DIExpression()), !dbg !4972
  %133 = bitcast i8* %77 to i32*, !dbg !5062
  %134 = load i32, i32* %133, align 4, !dbg !5062
  %135 = zext i32 %134 to i64, !dbg !5062
  store i64 %135, i64* %20, align 8, !dbg !5062
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5064
  %138 = add i32 %137, 7, !dbg !5064
  %139 = and i32 %138, -8, !dbg !5064
  %140 = inttoptr i32 %139 to i8*, !dbg !5064
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5064
  call void @llvm.dbg.value(metadata i8* %141, metadata !4844, metadata !DIExpression()), !dbg !4972
  %142 = inttoptr i32 %139 to i64*, !dbg !5064
  %143 = load i64, i64* %142, align 8, !dbg !5064
  store i64 %143, i64* %20, align 8, !dbg !5065
  br label %157, !dbg !5066

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5067
  %146 = add i32 %145, 7, !dbg !5067
  %147 = and i32 %146, -8, !dbg !5067
  %148 = inttoptr i32 %147 to i8*, !dbg !5067
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5067
  call void @llvm.dbg.value(metadata i8* %149, metadata !4844, metadata !DIExpression()), !dbg !4972
  %150 = inttoptr i32 %147 to i64*, !dbg !5067
  %151 = load i64, i64* %150, align 8, !dbg !5067
  store i64 %151, i64* %20, align 8, !dbg !5068
  br label %157, !dbg !5069

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %153, metadata !4844, metadata !DIExpression()), !dbg !4972
  %154 = bitcast i8* %77 to i32*, !dbg !5070
  %155 = load i32, i32* %154, align 4, !dbg !5070
  %156 = zext i32 %155 to i64, !dbg !5071
  store i64 %156, i64* %20, align 8, !dbg !5072
  br label %157, !dbg !5073

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5074
  call void @llvm.dbg.value(metadata i8* %159, metadata !4844, metadata !DIExpression()), !dbg !4972
  %160 = trunc i24 %79 to i4, !dbg !5075
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5075

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5076
  store i64 %162, i64* %20, align 8, !dbg !5079
  br label %177, !dbg !5080

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5081
  store i64 %164, i64* %20, align 8, !dbg !5084
  br label %177, !dbg !5085

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5086
  %167 = add i32 %166, 7, !dbg !5086
  %168 = and i32 %167, -8, !dbg !5086
  %169 = inttoptr i32 %168 to i8*, !dbg !5086
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5086
  call void @llvm.dbg.value(metadata i8* %170, metadata !4844, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %170, metadata !4844, metadata !DIExpression()), !dbg !4972
  %171 = inttoptr i32 %168 to double*, !dbg !5086
  %172 = load double, double* %171, align 8, !dbg !5086
  store double %172, double* %19, align 8, !dbg !5086
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5090
  call void @llvm.dbg.value(metadata i8* %174, metadata !4844, metadata !DIExpression()), !dbg !4972
  %175 = bitcast i8* %77 to i8**, !dbg !5090
  %176 = load i8*, i8** %175, align 4, !dbg !5090
  store i8* %176, i8** %18, align 8, !dbg !5093
  br label %177, !dbg !5094

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4986
  call void @llvm.dbg.value(metadata i8* %178, metadata !4844, metadata !DIExpression()), !dbg !4972
  %179 = and i24 %75, 3, !dbg !5095
  %180 = icmp eq i24 %179, 0, !dbg !5095
  br i1 %180, label %185, label %181, !dbg !5095

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5096
  call void @llvm.dbg.value(metadata i32 %182, metadata !4921, metadata !DIExpression()), !dbg !5097
  %183 = icmp slt i32 %182, 0, !dbg !5098
  %184 = add i32 %182, %29, !dbg !5096
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5100
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5101

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5102
  call void @llvm.dbg.value(metadata i32 %188, metadata !4925, metadata !DIExpression()), !dbg !5103
  %189 = icmp slt i32 %188, 0, !dbg !5104
  %190 = add i32 %29, 1, !dbg !5102
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5106
  call void @llvm.dbg.value(metadata i8* %192, metadata !4913, metadata !DIExpression()), !dbg !4986
  %193 = icmp sgt i32 %76, -1, !dbg !5107
  br i1 %193, label %194, label %196, !dbg !5109

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5110
  call void @llvm.dbg.value(metadata i32 %195, metadata !4928, metadata !DIExpression()), !dbg !5112
  br label %241, !dbg !5113

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %197, metadata !4928, metadata !DIExpression()), !dbg !5112
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4913, metadata !DIExpression()), !dbg !4986
  %199 = load i64, i64* %20, align 8, !dbg !5116
  %200 = trunc i64 %199 to i8, !dbg !5117
  store i8 %200, i8* %10, align 1, !dbg !5118
  call void @llvm.dbg.value(metadata i8* %23, metadata !4914, metadata !DIExpression()), !dbg !4986
  br label %245, !dbg !5119

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5120
  %203 = icmp eq i24 %202, 0, !dbg !5120
  %204 = trunc i24 %75 to i8, !dbg !5122
  %205 = shl i8 %204, 1, !dbg !5122
  %206 = and i8 %205, 32, !dbg !5122
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5122
  call void @llvm.dbg.value(metadata i8 %207, metadata !4915, metadata !DIExpression()), !dbg !4986
  %208 = load i64, i64* %20, align 8, !dbg !5123
  call void @llvm.dbg.value(metadata i64 %208, metadata !4851, metadata !DIExpression()), !dbg !4972
  %209 = icmp slt i64 %208, 0, !dbg !5124
  br i1 %209, label %210, label %212, !dbg !5126

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4915, metadata !DIExpression()), !dbg !4986
  %211 = sub nsw i64 0, %208, !dbg !5127
  store i64 %211, i64* %20, align 8, !dbg !5129
  br label %212, !dbg !5130

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4986
  call void @llvm.dbg.value(metadata i8 %213, metadata !4915, metadata !DIExpression()), !dbg !4986
  %214 = load i64, i64* %20, align 8, !dbg !5131
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5132
  call void @llvm.dbg.value(metadata i8* %215, metadata !4913, metadata !DIExpression()), !dbg !4986
  br label %216, !dbg !5133

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5134
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5135
  call void @llvm.dbg.value(metadata i8* %218, metadata !4913, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8 %217, metadata !4915, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.label(metadata !4971), !dbg !5136
  %219 = icmp sgt i32 %76, -1, !dbg !5137
  br i1 %219, label %222, label %220, !dbg !5138

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5139
  br label %245, !dbg !5138

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5141
  %224 = sub i32 %22, %223, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %224, metadata !4930, metadata !DIExpression()), !dbg !5142
  %225 = load i24, i24* %15, align 8, !dbg !5143
  %226 = and i24 %225, -65, !dbg !5143
  store i24 %226, i24* %15, align 8, !dbg !5143
  %227 = icmp ugt i32 %76, %224, !dbg !5144
  br i1 %227, label %228, label %245, !dbg !5146

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5147
  store i32 %229, i32* %16, align 4, !dbg !5149
  br label %245, !dbg !5150

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5151
  %232 = icmp eq i8* %231, null, !dbg !5153
  br i1 %232, label %245, label %233, !dbg !5154

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5155
  %235 = zext i32 %234 to i64, !dbg !5155
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5157
  call void @llvm.dbg.value(metadata i8* %236, metadata !4913, metadata !DIExpression()), !dbg !4986
  %237 = load i24, i24* %15, align 8, !dbg !5158
  %238 = or i24 %237, 1048576, !dbg !5158
  store i24 %238, i24* %15, align 8, !dbg !5158
  store i8 120, i8* %21, align 1, !dbg !5159
  br label %216, !dbg !5160

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5161
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5164
  br label %363, !dbg !5165

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5166
  call void @llvm.dbg.value(metadata i32 %242, metadata !4928, metadata !DIExpression()), !dbg !5112
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5167
  call void @llvm.dbg.value(metadata i32 -1, metadata !4912, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %29, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %192, metadata !4913, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8* %243, metadata !4914, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8 0, metadata !4915, metadata !DIExpression()), !dbg !4986
  %244 = icmp eq i8* %192, null, !dbg !5168
  br i1 %244, label %363, label %245, !dbg !5170, !llvm.loop !4982

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5139
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4986
  call void @llvm.dbg.value(metadata i32 0, metadata !4934, metadata !DIExpression()), !dbg !4986
  %250 = zext i8 %249 to i32, !dbg !5171
  %251 = icmp eq i8 %249, 0, !dbg !5173
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  call void @llvm.dbg.value(metadata i32 undef, metadata !4933, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  call void @llvm.dbg.value(metadata i32 undef, metadata !4933, metadata !DIExpression()), !dbg !4986
  %252 = icmp sgt i32 %58, 0, !dbg !5174
  br i1 %252, label %253, label %302, !dbg !5175

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5139
  %255 = icmp eq i24 %254, 0, !dbg !5139
  %256 = ptrtoint i8* %248 to i32, !dbg !5176
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  %257 = ptrtoint i8* %247 to i32, !dbg !5176
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  %258 = xor i1 %251, true, !dbg !5177
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  %259 = sext i1 %258 to i32, !dbg !5177
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  %260 = lshr i24 %246, 19, !dbg !5178
  %261 = and i24 %260, 1, !dbg !5178
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5178
  %263 = zext i24 %262 to i32, !dbg !5178
  %264 = add i32 %257, %259, !dbg !5178
  %265 = add i32 %256, %263, !dbg !5178
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  %266 = and i24 %246, 4194304, !dbg !5179
  %267 = icmp eq i24 %266, 0, !dbg !5179
  %268 = load i32, i32* %16, align 4, !dbg !5181
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4986
  call void @llvm.dbg.value(metadata i32 undef, metadata !4933, metadata !DIExpression()), !dbg !4986
  %269 = load i32, i32* %17, align 8, !dbg !5182
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5182
  call void @llvm.dbg.value(metadata i32 undef, metadata !4933, metadata !DIExpression()), !dbg !4986
  %271 = add i32 %264, %58, !dbg !5182
  %272 = add i32 %265, %268, !dbg !5182
  %273 = add i32 %272, %270, !dbg !5183
  %274 = sub i32 %271, %273, !dbg !5183
  call void @llvm.dbg.value(metadata i32 %274, metadata !4911, metadata !DIExpression()), !dbg !4986
  %275 = and i24 %246, 4, !dbg !5184
  %276 = icmp eq i24 %275, 0, !dbg !5184
  br i1 %276, label %277, label %302, !dbg !5185

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4935, metadata !DIExpression()), !dbg !5186
  %278 = and i24 %246, 64, !dbg !5187
  %279 = icmp eq i24 %278, 0, !dbg !5187
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5188
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5188
  %282 = select i1 %279, i32 32, i32 48, !dbg !5188
  br i1 %280, label %287, label %283, !dbg !5188

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5189
  call void @llvm.dbg.value(metadata i32 %284, metadata !4940, metadata !DIExpression()), !dbg !5190
  %285 = icmp slt i32 %284, 0, !dbg !5191
  %286 = add i32 %29, 1, !dbg !5189
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4986
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %290, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8 undef, metadata !4935, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata i8 %288, metadata !4915, metadata !DIExpression()), !dbg !4986
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5193
  %292 = add i32 %291, -1, !dbg !5193
  br label %293, !dbg !5193

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5194
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %295, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %294, metadata !4911, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %294, metadata !4911, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4986
  %296 = icmp sgt i32 %294, 0, !dbg !5195
  br i1 %296, label %297, label %302, !dbg !5193

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5196
  call void @llvm.dbg.value(metadata i32 %298, metadata !4911, metadata !DIExpression()), !dbg !4986
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5197
  call void @llvm.dbg.value(metadata i32 %299, metadata !4946, metadata !DIExpression()), !dbg !5198
  %300 = icmp slt i32 %299, 0, !dbg !5199
  %301 = add i32 %295, 1, !dbg !5197
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %300, label %361, label %293, !llvm.loop !5201

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4986
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4986
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %305, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %304, metadata !4911, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8 %303, metadata !4915, metadata !DIExpression()), !dbg !4986
  %306 = icmp eq i8 %303, 0, !dbg !5203
  br i1 %306, label %312, label %307, !dbg !5204

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5205
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5206
  call void @llvm.dbg.value(metadata i32 %309, metadata !4949, metadata !DIExpression()), !dbg !5207
  %310 = icmp slt i32 %309, 0, !dbg !5208
  %311 = add i32 %305, 1, !dbg !5206
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %313, metadata !4850, metadata !DIExpression()), !dbg !4972
  %314 = lshr i24 %246, 20, !dbg !5210
  %315 = lshr i24 %246, 19, !dbg !5211
  %316 = or i24 %314, %315, !dbg !5212
  %317 = and i24 %316, 1, !dbg !5212
  %318 = icmp eq i24 %317, 0, !dbg !5212
  br i1 %318, label %323, label %319, !dbg !5213

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5214
  call void @llvm.dbg.value(metadata i32 %320, metadata !4953, metadata !DIExpression()), !dbg !5215
  %321 = icmp slt i32 %320, 0, !dbg !5216
  %322 = add i32 %313, 1, !dbg !5214
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %324, metadata !4850, metadata !DIExpression()), !dbg !4972
  %325 = and i24 %246, 1048576, !dbg !5218
  %326 = icmp eq i24 %325, 0, !dbg !5218
  br i1 %326, label %333, label %327, !dbg !5219

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5220
  %329 = zext i8 %328 to i32, !dbg !5220
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5220
  call void @llvm.dbg.value(metadata i32 %330, metadata !4959, metadata !DIExpression()), !dbg !5221
  %331 = icmp slt i32 %330, 0, !dbg !5222
  %332 = add i32 %324, 1, !dbg !5220
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %334, metadata !4850, metadata !DIExpression()), !dbg !4972
  %335 = load i32, i32* %16, align 4, !dbg !5224
  call void @llvm.dbg.value(metadata i32 %335, metadata !4934, metadata !DIExpression()), !dbg !4986
  br label %336, !dbg !5225

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5226
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %338, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %337, metadata !4934, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4986
  %339 = icmp sgt i32 %337, 0, !dbg !5227
  br i1 %339, label %340, label %345, !dbg !5225

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5228
  call void @llvm.dbg.value(metadata i32 %341, metadata !4934, metadata !DIExpression()), !dbg !4986
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5229
  call void @llvm.dbg.value(metadata i32 %342, metadata !4963, metadata !DIExpression()), !dbg !5230
  %343 = icmp slt i32 %342, 0, !dbg !5231
  %344 = add i32 %338, 1, !dbg !5229
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %343, label %361, label %336, !llvm.loop !5233

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5235
  call void @llvm.dbg.value(metadata i32 %346, metadata !4966, metadata !DIExpression()), !dbg !5236
  %347 = icmp slt i32 %346, 0, !dbg !5237
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5235
  call void @llvm.dbg.value(metadata i32 %349, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %304, metadata !4911, metadata !DIExpression()), !dbg !4986
  %350 = icmp sgt i32 %304, 0, !dbg !5239
  br i1 %350, label %351, label %363, !dbg !5240

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5240
  %353 = add i32 %352, %338, !dbg !5240
  br label %354, !dbg !5240

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %355, metadata !4911, metadata !DIExpression()), !dbg !4986
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5241
  call void @llvm.dbg.value(metadata i32 %356, metadata !4968, metadata !DIExpression()), !dbg !5242
  %357 = icmp slt i32 %356, 0, !dbg !5243
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5245
  call void @llvm.dbg.value(metadata i32 undef, metadata !4850, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4972
  call void @llvm.dbg.value(metadata i32 %359, metadata !4911, metadata !DIExpression()), !dbg !4986
  %360 = icmp sgt i32 %355, 1, !dbg !5239
  br i1 %360, label %354, label %363, !dbg !5240, !llvm.loop !5246

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4983
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4976
  call void @llvm.dbg.value(metadata i32 %364, metadata !4850, metadata !DIExpression()), !dbg !4972
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4983
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4972
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5248
  ret i32 %366, !dbg !5248
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5249 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5253, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.value(metadata i8* %1, metadata !5254, metadata !DIExpression()), !dbg !5255
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5256
  store i24 0, i24* %3, align 4, !dbg !5256
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5256
  store i8 0, i8* %4, align 1, !dbg !5256
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5256
  store i32 0, i32* %5, align 4, !dbg !5256
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5256
  store i32 0, i32* %6, align 4, !dbg !5256
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5257
  call void @llvm.dbg.value(metadata i8* %7, metadata !5254, metadata !DIExpression()), !dbg !5255
  %8 = load i8, i8* %7, align 1, !dbg !5258
  %9 = icmp eq i8 %8, 37, !dbg !5260
  br i1 %9, label %10, label %12, !dbg !5261

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5262
  call void @llvm.dbg.value(metadata i8* %11, metadata !5254, metadata !DIExpression()), !dbg !5255
  store i8 37, i8* %4, align 1, !dbg !5264
  br label %18, !dbg !5265

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %13, metadata !5254, metadata !DIExpression()), !dbg !5255
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5267
  call void @llvm.dbg.value(metadata i8* %14, metadata !5254, metadata !DIExpression()), !dbg !5255
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5268
  call void @llvm.dbg.value(metadata i8* %15, metadata !5254, metadata !DIExpression()), !dbg !5255
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5269
  call void @llvm.dbg.value(metadata i8* %16, metadata !5254, metadata !DIExpression()), !dbg !5255
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %17, metadata !5254, metadata !DIExpression()), !dbg !5255
  br label %18, !dbg !5271

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5255
  ret i8* %19, !dbg !5272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5273 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5277, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %1, metadata !5278, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %2, metadata !5279, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %3, metadata !5280, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i32 0, metadata !5281, metadata !DIExpression()), !dbg !5284
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5285

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5286
  call void @llvm.dbg.value(metadata i32 %9, metadata !5281, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %8, metadata !5279, metadata !DIExpression()), !dbg !5284
  %10 = icmp ult i8* %8, %3, !dbg !5287
  br i1 %10, label %11, label %13, !dbg !5288

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5289
  br label %17, !dbg !5288

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5290

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5291
  %16 = icmp eq i8 %15, 0, !dbg !5290
  br i1 %16, label %24, label %17, !dbg !5285

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5289
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %19, metadata !5279, metadata !DIExpression()), !dbg !5284
  %20 = zext i8 %18 to i32, !dbg !5293
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5294
  call void @llvm.dbg.value(metadata i32 %21, metadata !5282, metadata !DIExpression()), !dbg !5295
  %22 = icmp slt i32 %21, 0, !dbg !5296
  %23 = add i32 %9, 1, !dbg !5298
  call void @llvm.dbg.value(metadata i32 undef, metadata !5281, metadata !DIExpression()), !dbg !5284
  br i1 %22, label %24, label %7, !llvm.loop !5299

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5284
  ret i32 %25, !dbg !5301
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5302 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5306, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5307, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8* %2, metadata !5308, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8* %3, metadata !5309, metadata !DIExpression()), !dbg !5316
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5317
  %6 = load i8, i8* %5, align 1, !dbg !5317
  %7 = zext i8 %6 to i32, !dbg !5318
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5319
  %9 = icmp eq i32 %8, 0, !dbg !5319
  call void @llvm.dbg.value(metadata i1 %9, metadata !5310, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5316
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5320
  call void @llvm.dbg.value(metadata i32 %10, metadata !5311, metadata !DIExpression()), !dbg !5316
  %11 = ptrtoint i8* %3 to i32, !dbg !5321
  %12 = ptrtoint i8* %2 to i32, !dbg !5321
  %13 = sub i32 %11, %12, !dbg !5321
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5322
  call void @llvm.dbg.value(metadata i8* %14, metadata !5313, metadata !DIExpression()), !dbg !5316
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5323

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5316
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5306, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8* %18, metadata !5313, metadata !DIExpression()), !dbg !5316
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5324
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %25, metadata !5314, metadata !DIExpression()), !dbg !5326
  %26 = icmp ult i32 %25, 10, !dbg !5327
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5328
  %28 = add i32 %27, %25, !dbg !5326
  %29 = trunc i32 %28 to i8, !dbg !5328
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5329
  call void @llvm.dbg.value(metadata i8* %30, metadata !5313, metadata !DIExpression()), !dbg !5316
  store i8 %29, i8* %30, align 1, !dbg !5330
  call void @llvm.dbg.value(metadata i64 %22, metadata !5306, metadata !DIExpression()), !dbg !5316
  %31 = icmp uge i64 %19, %15, !dbg !5331
  %32 = icmp ugt i8* %30, %2, !dbg !5332
  %33 = and i1 %31, %32, !dbg !5332
  br i1 %33, label %17, label %34, !dbg !5333, !llvm.loop !5334

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5336
  %36 = load i24, i24* %35, align 4, !dbg !5336
  %37 = and i24 %36, 32, !dbg !5336
  %38 = icmp eq i24 %37, 0, !dbg !5336
  br i1 %38, label %44, label %39, !dbg !5338

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5339

40:                                               ; preds = %39
  br label %41, !dbg !5341

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5345
  store i24 %43, i24* %35, align 4, !dbg !5345
  br label %44, !dbg !5346

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5346
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5347 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5353, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i8* %1, metadata !5354, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i32 %2, metadata !5355, metadata !DIExpression()), !dbg !5356
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5357
  %5 = load i24, i24* %4, align 4, !dbg !5357
  %6 = lshr i24 %5, 11, !dbg !5357
  %7 = and i24 %6, 15, !dbg !5357
  %8 = zext i24 %7 to i32, !dbg !5357
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5358

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5359
  store i32 %2, i32* %10, align 4, !dbg !5361
  br label %28, !dbg !5362

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5363
  store i8 %12, i8* %1, align 1, !dbg !5364
  br label %28, !dbg !5365

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5366
  %15 = bitcast i8* %1 to i16*, !dbg !5367
  store i16 %14, i16* %15, align 2, !dbg !5368
  br label %28, !dbg !5369

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5370
  store i32 %2, i32* %17, align 4, !dbg !5371
  br label %28, !dbg !5372

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5373
  %20 = bitcast i8* %1 to i64*, !dbg !5374
  store i64 %19, i64* %20, align 8, !dbg !5375
  br label %28, !dbg !5376

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5377
  %23 = bitcast i8* %1 to i64*, !dbg !5378
  store i64 %22, i64* %23, align 8, !dbg !5379
  br label %28, !dbg !5380

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5381
  store i32 %2, i32* %25, align 4, !dbg !5382
  br label %28, !dbg !5383

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5384
  store i32 %2, i32* %27, align 4, !dbg !5385
  br label %28, !dbg !5386

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5387
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5391, metadata !DIExpression()), !dbg !5392
  %2 = add i32 %0, -65, !dbg !5393
  %3 = icmp ult i32 %2, 26, !dbg !5394
  %4 = zext i1 %3 to i32, !dbg !5394
  ret i32 %4, !dbg !5395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5396 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5400, metadata !DIExpression()), !dbg !5401
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5402

2:                                                ; preds = %1
  br label %4, !dbg !5403

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5405

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5406
  ret i32 %5, !dbg !5407
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5408 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5410, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.value(metadata i8* %1, metadata !5411, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.value(metadata i8 1, metadata !5412, metadata !DIExpression()), !dbg !5413
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5414

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5412, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.value(metadata i8* %5, metadata !5411, metadata !DIExpression()), !dbg !5413
  %6 = load i8, i8* %5, align 1, !dbg !5415
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5417

7:                                                ; preds = %4
  br label %11, !dbg !5418

8:                                                ; preds = %4
  br label %11, !dbg !5420

9:                                                ; preds = %4
  br label %11, !dbg !5421

10:                                               ; preds = %4
  br label %11, !dbg !5422

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5423
  %14 = or i24 %13, %12, !dbg !5423
  store i24 %14, i24* %3, align 4, !dbg !5423
  call void @llvm.dbg.value(metadata i8 poison, metadata !5412, metadata !DIExpression()), !dbg !5413
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5411, metadata !DIExpression()), !dbg !5413
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5412, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.value(metadata i8* %15, metadata !5411, metadata !DIExpression()), !dbg !5413
  %17 = load i24, i24* %3, align 4, !dbg !5424
  %18 = and i24 %17, 68, !dbg !5426
  %19 = icmp eq i24 %18, 68, !dbg !5426
  br i1 %19, label %20, label %22, !dbg !5426

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5427
  store i24 %21, i24* %3, align 4, !dbg !5427
  br label %22, !dbg !5429

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5430
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5431 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5433, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata i8* %1, metadata !5434, metadata !DIExpression()), !dbg !5437
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5438
  %5 = load i24, i24* %4, align 4, !dbg !5439
  %6 = or i24 %5, 128, !dbg !5439
  store i24 %6, i24* %4, align 4, !dbg !5439
  call void @llvm.dbg.value(metadata i8* %1, metadata !5434, metadata !DIExpression()), !dbg !5437
  %7 = load i8, i8* %1, align 1, !dbg !5440
  %8 = icmp eq i8 %7, 42, !dbg !5442
  br i1 %8, label %9, label %12, !dbg !5443

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5444
  store i24 %10, i24* %4, align 4, !dbg !5444
  call void @llvm.dbg.value(metadata i8* %1, metadata !5434, metadata !DIExpression()), !dbg !5437
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5446
  call void @llvm.dbg.value(metadata i8* %11, metadata !5434, metadata !DIExpression()), !dbg !5437
  store i8* %11, i8** %3, align 4, !dbg !5446
  br label %29, !dbg !5447

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5435, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.value(metadata i8** %3, metadata !5434, metadata !DIExpression(DW_OP_deref)), !dbg !5437
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5448
  call void @llvm.dbg.value(metadata i32 %13, metadata !5436, metadata !DIExpression()), !dbg !5437
  %14 = load i8*, i8** %3, align 4, !dbg !5449
  call void @llvm.dbg.value(metadata i8* %14, metadata !5434, metadata !DIExpression()), !dbg !5437
  %15 = icmp eq i8* %14, %1, !dbg !5451
  br i1 %15, label %29, label %16, !dbg !5452

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5453
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5455
  store i32 %13, i32* %18, align 4, !dbg !5456
  %19 = lshr i32 %13, 31, !dbg !5457
  %20 = lshr i24 %17, 1, !dbg !5458
  %21 = and i24 %20, 1, !dbg !5458
  %22 = zext i24 %21 to i32, !dbg !5458
  %23 = or i32 %19, %22, !dbg !5458
  %24 = trunc i32 %23 to i24, !dbg !5458
  %25 = shl nuw nsw i24 %24, 1, !dbg !5458
  %26 = and i24 %17, -131, !dbg !5458
  %27 = or i24 %26, 128, !dbg !5458
  %28 = or i24 %25, %27, !dbg !5458
  store i24 %28, i24* %4, align 4, !dbg !5458
  br label %29, !dbg !5459

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5437
  ret i8* %30, !dbg !5460
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5461 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5463, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i8* %1, metadata !5464, metadata !DIExpression()), !dbg !5466
  %4 = load i8, i8* %1, align 1, !dbg !5467
  %5 = icmp eq i8 %4, 46, !dbg !5468
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5469
  %7 = load i24, i24* %6, align 4, !dbg !5470
  %8 = select i1 %5, i24 512, i24 0, !dbg !5470
  %9 = and i24 %7, -513, !dbg !5470
  %10 = or i24 %9, %8, !dbg !5470
  store i24 %10, i24* %6, align 4, !dbg !5470
  br i1 %5, label %11, label %32, !dbg !5471

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5464, metadata !DIExpression()), !dbg !5466
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5472
  call void @llvm.dbg.value(metadata i8* %12, metadata !5464, metadata !DIExpression()), !dbg !5466
  store i8* %12, i8** %3, align 4, !dbg !5472
  %13 = load i8, i8* %12, align 1, !dbg !5473
  %14 = icmp eq i8 %13, 42, !dbg !5475
  br i1 %14, label %15, label %18, !dbg !5476

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5477
  store i24 %16, i24* %6, align 4, !dbg !5477
  call void @llvm.dbg.value(metadata i8* %12, metadata !5464, metadata !DIExpression()), !dbg !5466
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5479
  call void @llvm.dbg.value(metadata i8* %17, metadata !5464, metadata !DIExpression()), !dbg !5466
  store i8* %17, i8** %3, align 4, !dbg !5479
  br label %32, !dbg !5480

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5464, metadata !DIExpression(DW_OP_deref)), !dbg !5466
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5481
  call void @llvm.dbg.value(metadata i32 %19, metadata !5465, metadata !DIExpression()), !dbg !5466
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5482
  store i32 %19, i32* %20, align 4, !dbg !5483
  %21 = lshr i32 %19, 31, !dbg !5484
  %22 = load i24, i24* %6, align 4, !dbg !5485
  %23 = lshr i24 %22, 1, !dbg !5485
  %24 = and i24 %23, 1, !dbg !5485
  %25 = zext i24 %24 to i32, !dbg !5485
  %26 = or i32 %21, %25, !dbg !5485
  %27 = trunc i32 %26 to i24, !dbg !5485
  %28 = shl nuw nsw i24 %27, 1, !dbg !5485
  %29 = and i24 %22, -3, !dbg !5485
  %30 = or i24 %28, %29, !dbg !5485
  store i24 %30, i24* %6, align 4, !dbg !5485
  %31 = load i8*, i8** %3, align 4, !dbg !5486
  call void @llvm.dbg.value(metadata i8* %31, metadata !5464, metadata !DIExpression()), !dbg !5466
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5466
  ret i8* %33, !dbg !5487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5488 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5490, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %1, metadata !5491, metadata !DIExpression()), !dbg !5492
  %3 = load i8, i8* %1, align 1, !dbg !5493
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5494

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5495
  call void @llvm.dbg.value(metadata i8* %5, metadata !5491, metadata !DIExpression()), !dbg !5492
  %6 = load i8, i8* %5, align 1, !dbg !5498
  %7 = icmp eq i8 %6, 104, !dbg !5499
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5500
  %9 = load i24, i24* %8, align 4, !dbg !5500
  %10 = and i24 %9, -30721, !dbg !5500
  br i1 %7, label %11, label %14, !dbg !5501

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5502
  store i24 %12, i24* %8, align 4, !dbg !5502
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5504
  call void @llvm.dbg.value(metadata i8* %13, metadata !5491, metadata !DIExpression()), !dbg !5492
  br label %56, !dbg !5505

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5506
  store i24 %15, i24* %8, align 4, !dbg !5506
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5508
  call void @llvm.dbg.value(metadata i8* %17, metadata !5491, metadata !DIExpression()), !dbg !5492
  %18 = load i8, i8* %17, align 1, !dbg !5510
  %19 = icmp eq i8 %18, 108, !dbg !5511
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5512
  %21 = load i24, i24* %20, align 4, !dbg !5512
  %22 = and i24 %21, -30721, !dbg !5512
  br i1 %19, label %23, label %26, !dbg !5513

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5514
  store i24 %24, i24* %20, align 4, !dbg !5514
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5516
  call void @llvm.dbg.value(metadata i8* %25, metadata !5491, metadata !DIExpression()), !dbg !5492
  br label %56, !dbg !5517

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5518
  store i24 %27, i24* %20, align 4, !dbg !5518
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5520
  %30 = load i24, i24* %29, align 4, !dbg !5521
  %31 = and i24 %30, -30721, !dbg !5521
  %32 = or i24 %31, 10240, !dbg !5521
  store i24 %32, i24* %29, align 4, !dbg !5521
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5522
  call void @llvm.dbg.value(metadata i8* %33, metadata !5491, metadata !DIExpression()), !dbg !5492
  br label %56, !dbg !5523

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5524
  %36 = load i24, i24* %35, align 4, !dbg !5525
  %37 = and i24 %36, -30721, !dbg !5525
  %38 = or i24 %37, 12288, !dbg !5525
  store i24 %38, i24* %35, align 4, !dbg !5525
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5526
  call void @llvm.dbg.value(metadata i8* %39, metadata !5491, metadata !DIExpression()), !dbg !5492
  br label %56, !dbg !5527

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5528
  %42 = load i24, i24* %41, align 4, !dbg !5529
  %43 = and i24 %42, -30721, !dbg !5529
  %44 = or i24 %43, 14336, !dbg !5529
  store i24 %44, i24* %41, align 4, !dbg !5529
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5530
  call void @llvm.dbg.value(metadata i8* %45, metadata !5491, metadata !DIExpression()), !dbg !5492
  br label %56, !dbg !5531

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5532
  %48 = load i24, i24* %47, align 4, !dbg !5533
  %49 = and i24 %48, -30723, !dbg !5533
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5534
  call void @llvm.dbg.value(metadata i8* %50, metadata !5491, metadata !DIExpression()), !dbg !5492
  %51 = or i24 %49, 16386, !dbg !5535
  store i24 %51, i24* %47, align 4, !dbg !5535
  br label %56, !dbg !5536

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5537
  %54 = load i24, i24* %53, align 4, !dbg !5538
  %55 = and i24 %54, -30721, !dbg !5538
  store i24 %55, i24* %53, align 4, !dbg !5538
  br label %56, !dbg !5539

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5491, metadata !DIExpression()), !dbg !5492
  ret i8* %57, !dbg !5540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5541 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5543, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata i8* %1, metadata !5544, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata i8 0, metadata !5545, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata i8* %1, metadata !5544, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5548
  %3 = load i8, i8* %1, align 1, !dbg !5549
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5550
  store i8 %3, i8* %4, align 1, !dbg !5551
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5552

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5553

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5554
  %9 = load i24, i24* %8, align 4, !dbg !5554
  %10 = and i24 %9, -458753, !dbg !5554
  %11 = or i24 %10, %7, !dbg !5554
  call void @llvm.dbg.label(metadata !5546), !dbg !5555
  %12 = and i24 %9, 30720, !dbg !5556
  %13 = icmp eq i24 %12, 16384, !dbg !5556
  %14 = zext i1 %13 to i24, !dbg !5558
  %15 = or i24 %11, %14, !dbg !5558
  %16 = icmp eq i8 %3, 99, !dbg !5559
  br i1 %16, label %17, label %43, !dbg !5561

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5562
  %19 = icmp ne i24 %18, 0, !dbg !5562
  call void @llvm.dbg.value(metadata i1 %19, metadata !5545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5548
  br label %43, !dbg !5564

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5565
  %22 = load i24, i24* %21, align 4, !dbg !5566
  %23 = and i24 %22, -458753, !dbg !5566
  %24 = or i24 %23, 262144, !dbg !5566
  call void @llvm.dbg.value(metadata i8 1, metadata !5545, metadata !DIExpression()), !dbg !5548
  br label %43, !dbg !5567

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5570
  %27 = load i24, i24* %26, align 4, !dbg !5571
  %28 = and i24 %27, -458753, !dbg !5571
  %29 = or i24 %28, 196608, !dbg !5571
  %30 = and i24 %27, 30720, !dbg !5572
  %31 = icmp eq i24 %30, 16384, !dbg !5572
  br label %43, !dbg !5574

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5575
  %34 = load i24, i24* %33, align 4, !dbg !5576
  %35 = and i24 %34, -458753, !dbg !5576
  %36 = or i24 %35, 196608, !dbg !5576
  %37 = and i24 %34, 30720, !dbg !5577
  %38 = icmp ne i24 %37, 0, !dbg !5577
  br label %43, !dbg !5579

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5580
  %41 = load i24, i24* %40, align 4, !dbg !5581
  %42 = or i24 %41, 1, !dbg !5581
  br label %43, !dbg !5582

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5583
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5584
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5585
  call void @llvm.dbg.value(metadata i8* %48, metadata !5544, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata i8 poison, metadata !5545, metadata !DIExpression()), !dbg !5548
  %49 = lshr i24 %44, 1, !dbg !5583
  %50 = and i24 %49, 1, !dbg !5583
  %51 = zext i24 %50 to i32, !dbg !5583
  %52 = or i32 %51, %47, !dbg !5583
  %53 = trunc i32 %52 to i24, !dbg !5583
  %54 = shl nuw nsw i24 %53, 1, !dbg !5583
  %55 = and i24 %44, -3, !dbg !5583
  %56 = or i24 %54, %55, !dbg !5583
  store i24 %56, i24* %46, align 4, !dbg !5583
  ret i8* %48, !dbg !5586
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5587 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5592, metadata !DIExpression()), !dbg !5595
  %2 = load i8*, i8** %0, align 4, !dbg !5596
  call void @llvm.dbg.value(metadata i8* %2, metadata !5593, metadata !DIExpression()), !dbg !5595
  call void @llvm.dbg.value(metadata i32 0, metadata !5594, metadata !DIExpression()), !dbg !5595
  %3 = load i8, i8* %2, align 1, !dbg !5597
  %4 = zext i8 %3 to i32, !dbg !5598
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5599
  %6 = icmp eq i32 %5, 0, !dbg !5600
  br i1 %6, label %19, label %7, !dbg !5600

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5594, metadata !DIExpression()), !dbg !5595
  call void @llvm.dbg.value(metadata i8* %10, metadata !5593, metadata !DIExpression()), !dbg !5595
  %11 = mul i32 %9, 10, !dbg !5601
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5603
  call void @llvm.dbg.value(metadata i8* %12, metadata !5593, metadata !DIExpression()), !dbg !5595
  %13 = add i32 %11, -48, !dbg !5604
  %14 = add i32 %13, %8, !dbg !5605
  call void @llvm.dbg.value(metadata i32 %14, metadata !5594, metadata !DIExpression()), !dbg !5595
  %15 = load i8, i8* %12, align 1, !dbg !5597
  %16 = zext i8 %15 to i32, !dbg !5598
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5599
  %18 = icmp eq i32 %17, 0, !dbg !5600
  br i1 %18, label %19, label %7, !dbg !5600, !llvm.loop !5606

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5595
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5595
  store i8* %20, i8** %0, align 4, !dbg !5608
  ret i32 %21, !dbg !5609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5612, metadata !DIExpression()), !dbg !5613
  %2 = add i32 %0, -48, !dbg !5614
  %3 = icmp ult i32 %2, 10, !dbg !5615
  %4 = zext i1 %3 to i32, !dbg !5615
  ret i32 %4, !dbg !5616
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5617 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #24, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #24, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #24, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #24, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #24, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #24, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #24, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #24, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #24, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #24, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #24, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6119, !srcloc !6120
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6121, !srcloc !6122
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6123, !srcloc !6124
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6125, !srcloc !6126
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6127, !srcloc !6128
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6129, !srcloc !6130
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6131, !srcloc !6132
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6133, !srcloc !6134
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6135, !srcloc !6136
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6137, !srcloc !6138
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6139, !srcloc !6140
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6141, !srcloc !6142
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6143, !srcloc !6144
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6145, !srcloc !6146
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6147, !srcloc !6148
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6149, !srcloc !6150
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6151, !srcloc !6152
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6153, !srcloc !6154
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6155, !srcloc !6156
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6157, !srcloc !6158
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6159, !srcloc !6160
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6161, !srcloc !6162
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6163, !srcloc !6164
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6165, !srcloc !6166
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6167, !srcloc !6168
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6169, !srcloc !6170
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6171, !srcloc !6172
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6173, !srcloc !6174
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6175, !srcloc !6176
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6177, !srcloc !6178
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6179, !srcloc !6180
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6181, !srcloc !6182
  ret void, !dbg !6183
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6186, metadata !DIExpression()), !dbg !6188
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6189
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6190
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6191, !srcloc !6200
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %3, metadata !6197, metadata !DIExpression()) #24, !dbg !6201
  call void @llvm.dbg.value(metadata i32 undef, metadata !6198, metadata !DIExpression()) #24, !dbg !6201
  call void @llvm.dbg.value(metadata i32 %3, metadata !6187, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.value(metadata i32 %3, metadata !6202, metadata !DIExpression()) #24, !dbg !6207
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !6209, !srcloc !6210
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6211
  ret i32 0, !dbg !6212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6215
  %2 = or i32 %1, 512, !dbg !6215
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6215
  ret void, !dbg !6216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6217 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6218
  %2 = or i32 %1, 1024, !dbg !6218
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6218
  ret void, !dbg !6219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6222, metadata !DIExpression()), !dbg !6223
  ret i32 0, !dbg !6224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6274, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6275, metadata !DIExpression()), !dbg !6276
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6277
  ret void, !dbg !6278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6279 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6296, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6297, metadata !DIExpression()), !dbg !6299
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6300
  %4 = load i32, i32* %3, align 4, !dbg !6300
  call void @llvm.dbg.value(metadata i32 %4, metadata !6298, metadata !DIExpression()), !dbg !6299
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6301
  ret void, !dbg !6302
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6303 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6307, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.value(metadata i8* %0, metadata !6308, metadata !DIExpression()), !dbg !6310
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6311
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6311
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6309, metadata !DIExpression()), !dbg !6312
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6312
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6313
  %5 = bitcast i8* %4 to i32*, !dbg !6313
  %6 = load i32, i32* %5, align 4, !dbg !6313
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6314
  store i32 %6, i32* %7, align 4, !dbg !6315
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6316
  unreachable, !dbg !6317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6321, metadata !DIExpression()), !dbg !6322
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6323
  ret void, !dbg !6324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6329, metadata !DIExpression()), !dbg !6330
  %2 = icmp sgt i32 %0, -1, !dbg !6331
  br i1 %2, label %3, label %8, !dbg !6333

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6334, !srcloc !6336
  %4 = and i32 %0, 31, !dbg !6337
  %5 = shl nuw i32 1, %4, !dbg !6338
  %6 = lshr i32 %0, 5, !dbg !6339
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6340
  store volatile i32 %5, i32* %7, align 4, !dbg !6341
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6342, !srcloc !6343
  br label %8, !dbg !6344

8:                                                ; preds = %3, %1
  ret void, !dbg !6345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6348, metadata !DIExpression()), !dbg !6349
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6350
  ret void, !dbg !6351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6354, metadata !DIExpression()), !dbg !6355
  %2 = icmp sgt i32 %0, -1, !dbg !6356
  br i1 %2, label %3, label %8, !dbg !6358

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6359
  %5 = shl nuw i32 1, %4, !dbg !6361
  %6 = lshr i32 %0, 5, !dbg !6362
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6363
  store volatile i32 %5, i32* %7, align 4, !dbg !6364
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6365, !srcloc !6369
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6370, !srcloc !6373
  br label %8, !dbg !6374

8:                                                ; preds = %3, %1
  ret void, !dbg !6375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6380, metadata !DIExpression()), !dbg !6381
  %2 = lshr i32 %0, 5, !dbg !6382
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6383
  %4 = load volatile i32, i32* %3, align 4, !dbg !6383
  %5 = and i32 %0, 31, !dbg !6384
  %6 = shl nuw i32 1, %5, !dbg !6384
  %7 = and i32 %4, %6, !dbg !6385
  ret i32 %7, !dbg !6386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6391, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.value(metadata i32 %1, metadata !6392, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.value(metadata i32 %2, metadata !6393, metadata !DIExpression()), !dbg !6394
  %4 = add i32 %1, 1, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %4, metadata !6392, metadata !DIExpression()), !dbg !6394
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6398
  ret void, !dbg !6399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6404, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i32 %1, metadata !6405, metadata !DIExpression()), !dbg !6406
  %3 = trunc i32 %1 to i8, !dbg !6407
  %4 = shl i8 %3, 4, !dbg !6407
  %5 = and i32 %0, 15, !dbg !6409
  %6 = add nsw i32 %5, -4, !dbg !6409
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6409
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6409
  %9 = icmp slt i32 %0, 0, !dbg !6409
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6409
  store volatile i8 %4, i8* %10, align 1, !dbg !6407
  ret void, !dbg !6410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6411 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6413, metadata !DIExpression()), !dbg !6414
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6415
  ret void, !dbg !6416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6417 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6419
  tail call void @z_arm_int_exit() #25, !dbg !6420
  ret void, !dbg !6421
}

; Function Attrs: optsize
declare !dbg !6422 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6423 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6425 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6427
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6428
  tail call void @z_bss_zero() #25, !dbg !6429
  tail call void @z_data_copy() #25, !dbg !6430
  tail call void @z_arm_interrupt_init() #25, !dbg !6431
  tail call void @z_cstart() #28, !dbg !6432
  unreachable, !dbg !6432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6433 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6434
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6435, !srcloc !6438
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6439, !srcloc !6442
  ret void, !dbg !6443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6444 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6445
  %2 = and i32 %1, -15728641, !dbg !6445
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6445
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6446, !srcloc !6451
  call void @llvm.dbg.value(metadata i32 %3, metadata !6449, metadata !DIExpression()) #24, !dbg !6452
  %4 = and i32 %3, -5, !dbg !6453
  call void @llvm.dbg.value(metadata i32 %4, metadata !6454, metadata !DIExpression()) #24, !dbg !6459
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6463, !srcloc !6442
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6469, metadata !DIExpression()), !dbg !6470
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6471
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6472
  store i32 %0, i32* %3, align 4, !dbg !6473
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6474
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6475
  store i32 %4, i32* %5, align 4, !dbg !6476
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6477
  %7 = or i32 %6, 268435456, !dbg !6477
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6477
  call void @llvm.dbg.value(metadata i32 0, metadata !6478, metadata !DIExpression()) #24, !dbg !6481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6483, !srcloc !6484
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6485
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6486
  %10 = load i32, i32* %9, align 4, !dbg !6486
  ret i32 %10, !dbg !6487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6598, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6599, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i8* %2, metadata !6600, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6601, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i8* %4, metadata !6602, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i8* %5, metadata !6603, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i8* %6, metadata !6604, metadata !DIExpression()), !dbg !6606
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6607
  call void @llvm.dbg.value(metadata i8* %8, metadata !6605, metadata !DIExpression()), !dbg !6606
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6608
  %10 = bitcast i8* %9 to i32*, !dbg !6608
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6609
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6610
  %12 = bitcast i8* %8 to i32*, !dbg !6611
  store i32 %11, i32* %12, align 4, !dbg !6612
  %13 = ptrtoint i8* %4 to i32, !dbg !6613
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6614
  %15 = bitcast i8* %14 to i32*, !dbg !6614
  store i32 %13, i32* %15, align 4, !dbg !6615
  %16 = ptrtoint i8* %5 to i32, !dbg !6616
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6617
  %18 = bitcast i8* %17 to i32*, !dbg !6617
  store i32 %16, i32* %18, align 4, !dbg !6618
  %19 = ptrtoint i8* %6 to i32, !dbg !6619
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6620
  %21 = bitcast i8* %20 to i32*, !dbg !6620
  store i32 %19, i32* %21, align 4, !dbg !6621
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6622
  %23 = bitcast i8* %22 to i32*, !dbg !6622
  store i32 16777216, i32* %23, align 4, !dbg !6623
  %24 = ptrtoint i8* %8 to i32, !dbg !6624
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6625
  store i32 %24, i32* %25, align 8, !dbg !6626
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6627
  store i32 0, i32* %26, align 4, !dbg !6628
  ret void, !dbg !6629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6635, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %1, metadata !6636, metadata !DIExpression()), !dbg !6641
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6642
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6637, metadata !DIExpression()), !dbg !6641
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6643
  br i1 %4, label %19, label %5, !dbg !6645

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6640, metadata !DIExpression()), !dbg !6641
  %6 = icmp eq i32 %0, -22, !dbg !6646
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6646
  %8 = load i32, i32* %7, align 4, !dbg !6646
  br i1 %6, label %16, label %9, !dbg !6648

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6646
  %11 = icmp ule i32 %10, %0, !dbg !6646
  %12 = icmp ugt i32 %8, %0, !dbg !6646
  %13 = and i1 %12, %11, !dbg !6646
  %14 = icmp ugt i32 %8, %1, !dbg !6646
  %15 = and i1 %14, %13, !dbg !6646
  br i1 %15, label %18, label %19, !dbg !6646

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6646
  br i1 %17, label %18, label %19, !dbg !6648

18:                                               ; preds = %9, %16
  br label %19, !dbg !6649

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6641
  ret i32 %20, !dbg !6651
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6656, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %1, metadata !6657, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6658, metadata !DIExpression()), !dbg !6659
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6660
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6661
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !6662, !srcloc !6663
  unreachable, !dbg !6664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6665 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6683, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.value(metadata i32 %1, metadata !6684, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.value(metadata i32 %2, metadata !6685, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6686, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.value(metadata i32 0, metadata !6687, metadata !DIExpression()), !dbg !6693
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6694
  %9 = and i32 %8, 511, !dbg !6695
  call void @llvm.dbg.value(metadata i32 %9, metadata !6688, metadata !DIExpression()), !dbg !6693
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6696
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6696
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6697
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6697
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6692, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()) #24, !dbg !6702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6704, !srcloc !6705
  call void @llvm.dbg.value(metadata i8* %6, metadata !6690, metadata !DIExpression(DW_OP_deref)), !dbg !6693
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6706
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6691, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.value(metadata i8* %5, metadata !6689, metadata !DIExpression(DW_OP_deref)), !dbg !6693
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6707
  call void @llvm.dbg.value(metadata i32 %12, metadata !6687, metadata !DIExpression()), !dbg !6693
  %13 = load i8, i8* %5, align 1, !dbg !6708, !range !6710
  call void @llvm.dbg.value(metadata i8 %13, metadata !6689, metadata !DIExpression()), !dbg !6693
  %14 = icmp eq i8 %13, 0, !dbg !6708
  br i1 %14, label %15, label %32, !dbg !6711

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6712
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !6713
  %18 = load i8, i8* %6, align 1, !dbg !6714, !range !6710
  call void @llvm.dbg.value(metadata i8 %18, metadata !6690, metadata !DIExpression()), !dbg !6693
  %19 = icmp eq i8 %18, 0, !dbg !6714
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6716
  %21 = load i32, i32* %20, align 4, !dbg !6716
  br i1 %19, label %27, label %22, !dbg !6717

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6718
  %24 = icmp eq i32 %23, 0, !dbg !6721
  br i1 %24, label %25, label %31, !dbg !6722

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6723
  br label %29, !dbg !6725

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6726
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6716
  br label %31, !dbg !6728

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !6728
  br label %32, !dbg !6729

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6729
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6729
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6729
  ret void, !dbg !6729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i32 %1, metadata !6736, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i32 %2, metadata !6737, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8* %3, metadata !6738, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8 0, metadata !6739, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6740, metadata !DIExpression()), !dbg !6741
  store i8 0, i8* %3, align 1, !dbg !6742
  %5 = icmp ult i32 %2, -16777216, !dbg !6743
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6745
  br i1 %8, label %16, label %9, !dbg !6745

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6746
  %11 = icmp eq i32 %10, 0, !dbg !6746
  br i1 %11, label %12, label %13, !dbg !6748

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6740, metadata !DIExpression()), !dbg !6741
  store i8 1, i8* %3, align 1, !dbg !6751
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6741
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6740, metadata !DIExpression()), !dbg !6741
  br label %16, !dbg !6754

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6741
  ret %struct.__esf* %17, !dbg !6755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6756 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6760, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i32 %1, metadata !6761, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i8* %2, metadata !6762, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6764
  store i8 0, i8* %2, align 1, !dbg !6765
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6766

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6767
  call void @llvm.dbg.value(metadata i32 %5, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %11, !dbg !6769

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6770
  call void @llvm.dbg.value(metadata i32 %7, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %11, !dbg !6771

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6772
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %11, !dbg !6773

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6774
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %11, !dbg !6775

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6776
  br label %11, !dbg !6777

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6779 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6783, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata i8* %1, metadata !6784, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.value(metadata i32 0, metadata !6785, metadata !DIExpression()), !dbg !6786
  store i8 0, i8* %1, align 1, !dbg !6787
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6788
  %4 = and i32 %3, 2, !dbg !6790
  %5 = icmp eq i32 %4, 0, !dbg !6791
  br i1 %5, label %6, label %33, !dbg !6792

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6793
  %8 = icmp sgt i32 %7, -1, !dbg !6795
  br i1 %8, label %9, label %33, !dbg !6796

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6797
  %11 = and i32 %10, 1073741824, !dbg !6799
  %12 = icmp eq i32 %11, 0, !dbg !6800
  br i1 %12, label %33, label %13, !dbg !6801

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6802
  br i1 %14, label %15, label %18, !dbg !6805

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6806
  %17 = load i32, i32* %16, align 4, !dbg !6806
  call void @llvm.dbg.value(metadata i32 %17, metadata !6785, metadata !DIExpression()), !dbg !6786
  br label %33, !dbg !6808

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6809
  %20 = and i32 %19, 255, !dbg !6811
  %21 = icmp eq i32 %20, 0, !dbg !6812
  br i1 %21, label %24, label %22, !dbg !6813

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6814
  call void @llvm.dbg.value(metadata i32 %23, metadata !6785, metadata !DIExpression()), !dbg !6786
  br label %33, !dbg !6816

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6817
  %26 = and i32 %25, 65280, !dbg !6819
  %27 = icmp eq i32 %26, 0, !dbg !6820
  br i1 %27, label %29, label %28, !dbg !6821

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6822
  call void @llvm.dbg.value(metadata i32 0, metadata !6785, metadata !DIExpression()), !dbg !6786
  br label %33, !dbg !6824

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6825
  %31 = icmp ult i32 %30, 65536, !dbg !6827
  br i1 %31, label %33, label %32, !dbg !6828

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6829
  call void @llvm.dbg.value(metadata i32 0, metadata !6785, metadata !DIExpression()), !dbg !6786
  br label %33, !dbg !6831

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6786
  call void @llvm.dbg.value(metadata i32 %34, metadata !6785, metadata !DIExpression()), !dbg !6786
  ret i32 %34, !dbg !6832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6833 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6835, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i32 %1, metadata !6836, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i8* %2, metadata !6837, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i32 0, metadata !6838, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i32 -22, metadata !6839, metadata !DIExpression()), !dbg !6848
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6849
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6851
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6853
  %7 = and i32 %6, 2, !dbg !6854
  %8 = icmp eq i32 %7, 0, !dbg !6855
  br i1 %8, label %19, label %9, !dbg !6856

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6857
  call void @llvm.dbg.value(metadata i32 %10, metadata !6840, metadata !DIExpression()), !dbg !6858
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6859
  %12 = and i32 %11, 128, !dbg !6861
  %13 = icmp eq i32 %12, 0, !dbg !6862
  br i1 %13, label %19, label %14, !dbg !6863

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6839, metadata !DIExpression()), !dbg !6848
  %15 = icmp eq i32 %1, 0, !dbg !6864
  br i1 %15, label %19, label %16, !dbg !6867

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6868
  %18 = and i32 %17, -129, !dbg !6868
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6868
  br label %19, !dbg !6870

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6848
  call void @llvm.dbg.value(metadata i32 %20, metadata !6839, metadata !DIExpression()), !dbg !6848
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6871
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6873
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6875
  %24 = and i32 %23, 16, !dbg !6876
  %25 = icmp eq i32 %24, 0, !dbg !6876
  br i1 %25, label %26, label %30, !dbg !6877

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6878
  %28 = and i32 %27, 2, !dbg !6879
  %29 = icmp eq i32 %28, 0, !dbg !6879
  br i1 %29, label %39, label %30, !dbg !6880

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6881
  %32 = and i32 %31, 2048, !dbg !6882
  %33 = icmp eq i32 %32, 0, !dbg !6882
  br i1 %33, label %39, label %34, !dbg !6883

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6884
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !6885
  call void @llvm.dbg.value(metadata i32 %36, metadata !6843, metadata !DIExpression()), !dbg !6886
  %37 = icmp eq i32 %36, 0, !dbg !6887
  br i1 %37, label %39, label %38, !dbg !6889

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6890, metadata !DIExpression()) #24, !dbg !6893
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !6896, !srcloc !6897
  call void @llvm.dbg.value(metadata i32 2, metadata !6838, metadata !DIExpression()), !dbg !6848
  br label %39, !dbg !6898

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6848
  call void @llvm.dbg.value(metadata i32 %40, metadata !6838, metadata !DIExpression()), !dbg !6848
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6899
  %42 = and i32 %41, 32, !dbg !6901
  %43 = icmp eq i32 %42, 0, !dbg !6902
  br i1 %43, label %47, label %44, !dbg !6903

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6904
  %46 = and i32 %45, -8193, !dbg !6904
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6904
  br label %47, !dbg !6906

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6907
  %49 = or i32 %48, 255, !dbg !6907
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6907
  store i8 0, i8* %2, align 1, !dbg !6908
  ret i32 %40, !dbg !6909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6910 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6914, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i32 %0, metadata !6915, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i8* %1, metadata !6916, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i32 0, metadata !6917, metadata !DIExpression()), !dbg !6921
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6922
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6924
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6926
  %6 = and i32 %5, 512, !dbg !6927
  %7 = icmp eq i32 %6, 0, !dbg !6927
  br i1 %7, label %18, label %8, !dbg !6928

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6929
  call void @llvm.dbg.value(metadata i32 %9, metadata !6918, metadata !DIExpression()), !dbg !6930
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6931
  %11 = and i32 %10, 32768, !dbg !6933
  %12 = icmp ne i32 %11, 0, !dbg !6934
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6935
  br i1 %14, label %15, label %18, !dbg !6935

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6936
  %17 = and i32 %16, -32769, !dbg !6936
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6936
  br label %18, !dbg !6940

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6943
  %21 = and i32 %20, 256, !dbg !6945
  %22 = icmp eq i32 %21, 0, !dbg !6946
  br i1 %22, label %23, label %25, !dbg !6947

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6948
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6950
  %27 = or i32 %26, 65280, !dbg !6950
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6950
  store i8 0, i8* %1, align 1, !dbg !6951
  ret void, !dbg !6952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6953 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6959, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata i32 0, metadata !6960, metadata !DIExpression()), !dbg !6961
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6962
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6964
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6966
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6968
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6970
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6972
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6974
  %8 = or i32 %7, -65536, !dbg !6974
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6974
  ret void, !dbg !6975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6976 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6980, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.value(metadata i8* %0, metadata !6981, metadata !DIExpression()), !dbg !6982
  store i8 0, i8* %0, align 1, !dbg !6983
  ret void, !dbg !6984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6985 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6989, metadata !DIExpression()), !dbg !6992
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6993
  %3 = load i32, i32* %2, align 4, !dbg !6993
  %4 = inttoptr i32 %3 to i16*, !dbg !6994
  call void @llvm.dbg.value(metadata i16* %4, metadata !6990, metadata !DIExpression()), !dbg !6992
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6995
  %6 = or i32 %5, 256, !dbg !6995
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6995
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6996, !srcloc !6999
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7000, !srcloc !7003
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7004
  %8 = load i16, i16* %7, align 2, !dbg !7005
  call void @llvm.dbg.value(metadata i16 %8, metadata !6991, metadata !DIExpression()), !dbg !6992
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7006
  %10 = and i32 %9, -257, !dbg !7006
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7006
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7007, !srcloc !6999
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7009, !srcloc !7003
  %11 = icmp eq i16 %8, -8446, !dbg !7011
  ret i1 %11, !dbg !7013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7014 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7015
  %2 = or i32 %1, 16, !dbg !7015
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7015
  ret void, !dbg !7016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7017 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7020, metadata !DIExpression()), !dbg !7021
  br label %1, !dbg !7022

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7020, metadata !DIExpression()), !dbg !7021
  tail call fastcc void @__NVIC_SetPriority.34(i32 noundef %2) #26, !dbg !7024
  %3 = add nuw nsw i32 %2, 1, !dbg !7027
  call void @llvm.dbg.value(metadata i32 %3, metadata !7020, metadata !DIExpression()), !dbg !7021
  %4 = icmp eq i32 %3, 97, !dbg !7028
  br i1 %4, label %5, label %1, !dbg !7022, !llvm.loop !7029

5:                                                ; preds = %1
  ret void, !dbg !7031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.34(i32 noundef %0) unnamed_addr #15 !dbg !7032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7034, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.value(metadata i32 1, metadata !7035, metadata !DIExpression()), !dbg !7036
  %2 = and i32 %0, 15, !dbg !7037
  %3 = add nsw i32 %2, -4, !dbg !7037
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7037
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7037
  %6 = icmp slt i32 %0, 0, !dbg !7037
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7037
  store volatile i8 16, i8* %7, align 1, !dbg !7038
  ret void, !dbg !7040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7147, metadata !DIExpression()), !dbg !7148
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7149
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7151
  br i1 %3, label %4, label %12, !dbg !7152

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7153, !srcloc !7165
  call void @llvm.dbg.value(metadata i32 %5, metadata !7156, metadata !DIExpression()) #24, !dbg !7166
  %6 = icmp eq i32 %5, 0, !dbg !7167
  br i1 %6, label %12, label %7, !dbg !7168

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7169
  %9 = or i32 %8, 268435456, !dbg !7169
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7169
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7171
  %11 = and i32 %10, -32769, !dbg !7171
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7171
  br label %12, !dbg !7172

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7173
  ret void, !dbg !7174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7175 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7176
  ret void, !dbg !7177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !375, metadata !DIExpression()), !dbg !7178
  call void @llvm.dbg.value(metadata i8 0, metadata !376, metadata !DIExpression()), !dbg !7178
  call void @llvm.dbg.value(metadata i32 64, metadata !378, metadata !DIExpression()), !dbg !7178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7179
  %3 = load i32, i32* %2, align 4, !dbg !7179
  %4 = add i32 %3, -64, !dbg !7181
  call void @llvm.dbg.value(metadata i32 %4, metadata !377, metadata !DIExpression()), !dbg !7178
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7182
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7183
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7184
  call void @llvm.dbg.value(metadata i8 1, metadata !376, metadata !DIExpression()), !dbg !7178
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7185
  ret void, !dbg !7186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7187 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7188
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7189, !srcloc !7192
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7193, !srcloc !7196
  ret void, !dbg !7197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7198 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7199, !srcloc !7202
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7203
  ret void, !dbg !7204
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7205 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7220, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8 %1, metadata !7221, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 %2, metadata !7222, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 %3, metadata !7223, metadata !DIExpression()), !dbg !7224
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7225
  ret void, !dbg !7227
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7228 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7233, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.value(metadata i8 %1, metadata !7234, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.value(metadata i32 undef, metadata !7235, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.value(metadata i32 undef, metadata !7236, metadata !DIExpression()), !dbg !7238
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7239
  call void @llvm.dbg.value(metadata i8 %3, metadata !7237, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7238
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7240
  call void @llvm.dbg.value(metadata i32 %4, metadata !7237, metadata !DIExpression()), !dbg !7238
  %5 = trunc i32 %4 to i8, !dbg !7241
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7242
  ret void, !dbg !7243
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7244 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7248, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8 %1, metadata !7249, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8 %2, metadata !7250, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i1 %3, metadata !7251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7254
  %5 = zext i8 %2 to i32, !dbg !7255
  call void @llvm.dbg.value(metadata i32 %5, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i32 0, metadata !7252, metadata !DIExpression()), !dbg !7254
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i32 0, metadata !7252, metadata !DIExpression()), !dbg !7254
  %7 = icmp eq i8 %1, 0, !dbg !7256
  br i1 %7, label %29, label %8, !dbg !7259

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i32 %10, metadata !7252, metadata !DIExpression()), !dbg !7254
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7260
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7263
  %13 = load i32, i32* %12, align 4, !dbg !7263
  %14 = icmp eq i32 %13, 0, !dbg !7264
  br i1 %14, label %25, label %15, !dbg !7265

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7266

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7268
  %18 = icmp eq i32 %17, 0, !dbg !7268
  br i1 %18, label %29, label %19, !dbg !7269

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7270
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7271
  call void @llvm.dbg.value(metadata i32 %21, metadata !7253, metadata !DIExpression()), !dbg !7254
  %22 = icmp eq i32 %21, -22, !dbg !7272
  br i1 %22, label %29, label %23, !dbg !7274

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7275
  call void @llvm.dbg.value(metadata i32 %24, metadata !7253, metadata !DIExpression()), !dbg !7254
  br label %25, !dbg !7276

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7254
  call void @llvm.dbg.value(metadata i32 %26, metadata !7253, metadata !DIExpression()), !dbg !7254
  %27 = add nuw nsw i32 %10, 1, !dbg !7277
  call void @llvm.dbg.value(metadata i32 %27, metadata !7252, metadata !DIExpression()), !dbg !7254
  %28 = icmp eq i32 %27, %6, !dbg !7256
  br i1 %28, label %29, label %8, !dbg !7259, !llvm.loop !7278

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7254
  ret i32 %30, !dbg !7280
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7281 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7285, metadata !DIExpression()), !dbg !7287
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7288
  %3 = load i32, i32* %2, align 4, !dbg !7288
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7289, !range !3545
  %5 = icmp ult i32 %4, 2, !dbg !7289
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7290
  br i1 %7, label %8, label %15, !dbg !7290

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7291
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7292
  %11 = load i32, i32* %10, align 4, !dbg !7292
  %12 = and i32 %11, %9, !dbg !7293
  %13 = icmp eq i32 %12, 0, !dbg !7294
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7286, metadata !DIExpression()), !dbg !7287
  ret i32 %16, !dbg !7295
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7296 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7300, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7301, metadata !DIExpression()), !dbg !7303
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7304
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7304
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7302, metadata !DIExpression()), !dbg !7305
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7306
  %6 = load i32, i32* %5, align 4, !dbg !7306
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7307
  store i32 %6, i32* %7, align 4, !dbg !7308
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7309
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7310
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7311
  %11 = load i32, i32* %10, align 4, !dbg !7311
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7312
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7314
  ret i32 %12, !dbg !7315
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7316 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7323, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7324, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 undef, metadata !7325, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.value(metadata i32 %2, metadata !7326, metadata !DIExpression()), !dbg !7327
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7328
  %5 = load i32, i32* %4, align 4, !dbg !7328
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7329
  %7 = or i32 %6, %5, !dbg !7330
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7331
  store i32 %7, i32* %8, align 4, !dbg !7332
  ret void, !dbg !7333
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7334 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7338, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7339, metadata !DIExpression()), !dbg !7340
  %3 = zext i8 %0 to i32, !dbg !7341
  %4 = icmp ugt i8 %0, 7, !dbg !7343
  br i1 %4, label %6, label %5, !dbg !7344

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7345
  br label %6, !dbg !7346

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7340
  ret i32 %7, !dbg !7347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7353, metadata !DIExpression()), !dbg !7354
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7355
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7356
  %4 = load i32, i32* %3, align 4, !dbg !7356
  %5 = and i32 %4, -32, !dbg !7357
  %6 = or i32 %5, %0, !dbg !7358
  %7 = or i32 %6, 16, !dbg !7358
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7359
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7360
  %9 = load i32, i32* %8, align 4, !dbg !7360
  %10 = or i32 %9, 1, !dbg !7361
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7362
  ret void, !dbg !7363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7367, metadata !DIExpression()), !dbg !7368
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7369
  ret void, !dbg !7370
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7375, metadata !DIExpression()), !dbg !7376
  %2 = icmp ult i32 %0, 33, !dbg !7377
  br i1 %2, label %11, label %3, !dbg !7379

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7380
  br i1 %4, label %11, label %5, !dbg !7382

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7383
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7384, !range !3545
  %8 = mul nsw i32 %7, -2, !dbg !7385
  %9 = add nsw i32 %8, 62, !dbg !7385
  %10 = and i32 %9, 62, !dbg !7386
  br label %11, !dbg !7387

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7376
  ret i32 %12, !dbg !7388
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7389 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7393, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i8 %1, metadata !7394, metadata !DIExpression()), !dbg !7395
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7396
  ret void, !dbg !7398
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7399 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7403, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i8 %1, metadata !7404, metadata !DIExpression()), !dbg !7410
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7411
  call void @llvm.dbg.value(metadata i8 %3, metadata !7405, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7410
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7412
  call void @llvm.dbg.value(metadata i32 %4, metadata !7405, metadata !DIExpression()), !dbg !7410
  %5 = icmp ne i32 %4, -22, !dbg !7413
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7414
  call void @llvm.dbg.value(metadata i32 %4, metadata !7406, metadata !DIExpression()), !dbg !7415
  br i1 %7, label %8, label %12, !dbg !7414

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7406, metadata !DIExpression()), !dbg !7415
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7416
  %10 = add i32 %9, 1, !dbg !7419
  call void @llvm.dbg.value(metadata i32 %10, metadata !7406, metadata !DIExpression()), !dbg !7415
  %11 = icmp eq i32 %10, 8, !dbg !7420
  br i1 %11, label %12, label %8, !dbg !7421, !llvm.loop !7422

12:                                               ; preds = %8, %2
  ret void, !dbg !7424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7428, metadata !DIExpression()), !dbg !7429
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7430
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7431
  ret void, !dbg !7432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7433 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7438
  %2 = icmp ugt i32 %1, 8, !dbg !7440
  br i1 %2, label %14, label %3, !dbg !7441

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7442
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7443
  %4 = icmp eq i32 %1, 0, !dbg !7444
  br i1 %4, label %12, label %5, !dbg !7447

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7447

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7437, metadata !DIExpression()), !dbg !7443
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7448
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7450
  %10 = add nuw i32 %8, 1, !dbg !7451
  call void @llvm.dbg.value(metadata i32 %10, metadata !7437, metadata !DIExpression()), !dbg !7443
  %11 = icmp eq i32 %10, %1, !dbg !7444
  br i1 %11, label %12, label %7, !dbg !7447, !llvm.loop !7452

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7454
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7455
  tail call void @arm_core_mpu_enable() #26, !dbg !7456
  br label %14, !dbg !7457

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7443
  ret i32 %15, !dbg !7458
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7459 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7466, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i8* %1, metadata !7467, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i8* %0, metadata !7468, metadata !DIExpression()), !dbg !7469
  %3 = load i8, i8* %1, align 1, !dbg !7470
  %4 = icmp eq i8 %3, 0, !dbg !7471
  br i1 %4, label %13, label %5, !dbg !7472

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7466, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.value(metadata i8* %8, metadata !7467, metadata !DIExpression()), !dbg !7469
  store i8 %6, i8* %7, align 1, !dbg !7473
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7475
  call void @llvm.dbg.value(metadata i8* %9, metadata !7466, metadata !DIExpression()), !dbg !7469
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7476
  call void @llvm.dbg.value(metadata i8* %10, metadata !7467, metadata !DIExpression()), !dbg !7469
  %11 = load i8, i8* %10, align 1, !dbg !7470
  %12 = icmp eq i8 %11, 0, !dbg !7471
  br i1 %12, label %13, label %5, !dbg !7472, !llvm.loop !7477

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7479
  ret i8* %0, !dbg !7480
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7481 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7485, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8* %1, metadata !7486, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %2, metadata !7487, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8* %0, metadata !7488, metadata !DIExpression()), !dbg !7489
  %4 = icmp eq i32 %2, 0, !dbg !7490
  br i1 %4, label %22, label %5, !dbg !7491

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7485, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %7, metadata !7487, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8* %8, metadata !7486, metadata !DIExpression()), !dbg !7489
  %9 = load i8, i8* %8, align 1, !dbg !7492
  %10 = icmp eq i8 %9, 0, !dbg !7493
  br i1 %10, label %16, label %11, !dbg !7494

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7495
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7497
  call void @llvm.dbg.value(metadata i8* %12, metadata !7486, metadata !DIExpression()), !dbg !7489
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7498
  call void @llvm.dbg.value(metadata i8* %13, metadata !7485, metadata !DIExpression()), !dbg !7489
  %14 = add i32 %7, -1, !dbg !7499
  call void @llvm.dbg.value(metadata i32 %14, metadata !7487, metadata !DIExpression()), !dbg !7489
  %15 = icmp eq i32 %14, 0, !dbg !7490
  br i1 %15, label %22, label %5, !dbg !7491, !llvm.loop !7500

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7485, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %18, metadata !7487, metadata !DIExpression()), !dbg !7489
  store i8 0, i8* %17, align 1, !dbg !7502
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7504
  call void @llvm.dbg.value(metadata i8* %19, metadata !7485, metadata !DIExpression()), !dbg !7489
  %20 = add i32 %18, -1, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %20, metadata !7487, metadata !DIExpression()), !dbg !7489
  %21 = icmp eq i32 %20, 0, !dbg !7506
  br i1 %21, label %22, label %16, !dbg !7507, !llvm.loop !7508

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7510
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7511 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7515, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %1, metadata !7516, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %1, metadata !7517, metadata !DIExpression()), !dbg !7518
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7519

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7515, metadata !DIExpression()), !dbg !7518
  %6 = load i8, i8* %5, align 1, !dbg !7520
  %7 = icmp eq i8 %6, %3, !dbg !7521
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7522
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7523
  call void @llvm.dbg.value(metadata i8* %10, metadata !7515, metadata !DIExpression()), !dbg !7518
  br i1 %9, label %11, label %4, !dbg !7522, !llvm.loop !7525

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7527
  ret i8* %12, !dbg !7528
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7529 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7531, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i32 %1, metadata !7532, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i8* null, metadata !7533, metadata !DIExpression()), !dbg !7534
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7535

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7534
  call void @llvm.dbg.value(metadata i8* %6, metadata !7533, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata i8* %5, metadata !7531, metadata !DIExpression()), !dbg !7534
  %7 = load i8, i8* %5, align 1, !dbg !7536
  %8 = icmp eq i8 %7, %3, !dbg !7539
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7540
  call void @llvm.dbg.value(metadata i8* %9, metadata !7533, metadata !DIExpression()), !dbg !7534
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7541
  call void @llvm.dbg.value(metadata i8* %10, metadata !7531, metadata !DIExpression()), !dbg !7534
  %11 = icmp eq i8 %7, 0, !dbg !7542
  br i1 %11, label %12, label %4, !dbg !7542, !llvm.loop !7543

12:                                               ; preds = %4
  ret i8* %9, !dbg !7545
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7546 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 0, metadata !7551, metadata !DIExpression()), !dbg !7552
  %2 = load i8, i8* %0, align 1, !dbg !7553
  %3 = icmp eq i8 %2, 0, !dbg !7554
  br i1 %3, label %11, label %4, !dbg !7555

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7551, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i8* %6, metadata !7550, metadata !DIExpression()), !dbg !7552
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7556
  call void @llvm.dbg.value(metadata i8* %7, metadata !7550, metadata !DIExpression()), !dbg !7552
  %8 = add i32 %5, 1, !dbg !7558
  call void @llvm.dbg.value(metadata i32 %8, metadata !7551, metadata !DIExpression()), !dbg !7552
  %9 = load i8, i8* %7, align 1, !dbg !7553
  %10 = icmp eq i8 %9, 0, !dbg !7554
  br i1 %10, label %11, label %4, !dbg !7555, !llvm.loop !7559

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7552
  ret i32 %12, !dbg !7561
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7566, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.value(metadata i32 %1, metadata !7567, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.value(metadata i32 0, metadata !7568, metadata !DIExpression()), !dbg !7569
  %3 = load i8, i8* %0, align 1, !dbg !7570
  %4 = icmp ne i8 %3, 0, !dbg !7571
  %5 = icmp ne i32 %1, 0, !dbg !7572
  %6 = and i1 %4, %5, !dbg !7572
  br i1 %6, label %7, label %16, !dbg !7573

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7568, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.value(metadata i8* %9, metadata !7566, metadata !DIExpression()), !dbg !7569
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7574
  call void @llvm.dbg.value(metadata i8* %10, metadata !7566, metadata !DIExpression()), !dbg !7569
  %11 = add nuw i32 %8, 1, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %11, metadata !7568, metadata !DIExpression()), !dbg !7569
  %12 = load i8, i8* %10, align 1, !dbg !7570
  %13 = icmp ne i8 %12, 0, !dbg !7571
  %14 = icmp ult i32 %11, %1, !dbg !7572
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7572
  br i1 %15, label %7, label %16, !dbg !7573, !llvm.loop !7577

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7569
  ret i32 %17, !dbg !7579
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7580 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7584, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %1, metadata !7585, metadata !DIExpression()), !dbg !7586
  %3 = load i8, i8* %0, align 1, !dbg !7587
  %4 = load i8, i8* %1, align 1, !dbg !7588
  %5 = icmp ne i8 %3, %4, !dbg !7589
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7590
  br i1 %7, label %18, label %8, !dbg !7590

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7585, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %10, metadata !7584, metadata !DIExpression()), !dbg !7586
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7591
  call void @llvm.dbg.value(metadata i8* %11, metadata !7584, metadata !DIExpression()), !dbg !7586
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7593
  call void @llvm.dbg.value(metadata i8* %12, metadata !7585, metadata !DIExpression()), !dbg !7586
  %13 = load i8, i8* %11, align 1, !dbg !7587
  %14 = load i8, i8* %12, align 1, !dbg !7588
  %15 = icmp ne i8 %13, %14, !dbg !7589
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7590
  br i1 %17, label %18, label %8, !dbg !7590, !llvm.loop !7594

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7587
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7588
  %21 = zext i8 %19 to i32, !dbg !7597
  %22 = zext i8 %20 to i32, !dbg !7598
  %23 = sub nsw i32 %21, %22, !dbg !7599
  ret i32 %23, !dbg !7600
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7601 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7605, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %1, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %2, metadata !7607, metadata !DIExpression()), !dbg !7608
  %4 = icmp eq i32 %2, 0, !dbg !7609
  br i1 %4, label %23, label %5, !dbg !7609

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %7, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %8, metadata !7605, metadata !DIExpression()), !dbg !7608
  %9 = load i8, i8* %8, align 1, !dbg !7610
  %10 = load i8, i8* %7, align 1, !dbg !7611
  %11 = icmp ne i8 %9, %10, !dbg !7612
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7613
  br i1 %13, label %19, label %14, !dbg !7613

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7614
  call void @llvm.dbg.value(metadata i8* %15, metadata !7605, metadata !DIExpression()), !dbg !7608
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7616
  call void @llvm.dbg.value(metadata i8* %16, metadata !7606, metadata !DIExpression()), !dbg !7608
  %17 = add i32 %6, -1, !dbg !7617
  call void @llvm.dbg.value(metadata i32 %17, metadata !7607, metadata !DIExpression()), !dbg !7608
  %18 = icmp eq i32 %17, 0, !dbg !7609
  br i1 %18, label %23, label %5, !dbg !7609, !llvm.loop !7618

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7621
  %21 = zext i8 %10 to i32, !dbg !7622
  %22 = sub nsw i32 %20, %21, !dbg !7623
  br label %23, !dbg !7624

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7624
  ret i32 %24, !dbg !7625
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7626 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7631, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i8* %1, metadata !7632, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i8** %2, metadata !7633, metadata !DIExpression()), !dbg !7636
  %4 = icmp eq i8* %0, null, !dbg !7637
  br i1 %4, label %5, label %7, !dbg !7637

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7638
  br label %7, !dbg !7637

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7637
  call void @llvm.dbg.value(metadata i8* %8, metadata !7634, metadata !DIExpression()), !dbg !7636
  %9 = load i8, i8* %8, align 1, !dbg !7639
  %10 = icmp eq i8 %9, 0, !dbg !7639
  br i1 %10, label %33, label %11, !dbg !7640

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7634, metadata !DIExpression()), !dbg !7636
  %14 = zext i8 %12 to i32, !dbg !7639
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7641
  %16 = icmp eq i8* %15, null, !dbg !7640
  br i1 %16, label %21, label %17, !dbg !7642

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7643
  call void @llvm.dbg.value(metadata i8* %18, metadata !7634, metadata !DIExpression()), !dbg !7636
  %19 = load i8, i8* %18, align 1, !dbg !7639
  %20 = icmp eq i8 %19, 0, !dbg !7639
  br i1 %20, label %33, label %11, !dbg !7640, !llvm.loop !7645

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7635, metadata !DIExpression()), !dbg !7636
  %24 = zext i8 %22 to i32, !dbg !7647
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7648
  %26 = icmp eq i8* %25, null, !dbg !7649
  br i1 %26, label %27, label %31, !dbg !7650

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7651
  call void @llvm.dbg.value(metadata i8* %28, metadata !7635, metadata !DIExpression()), !dbg !7636
  %29 = load i8, i8* %28, align 1, !dbg !7647
  %30 = icmp eq i8 %29, 0, !dbg !7647
  br i1 %30, label %33, label %21, !dbg !7653, !llvm.loop !7654

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7656
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7659
  br label %33, !dbg !7660

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7636
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7636
  store i8* %34, i8** %2, align 4, !dbg !7636
  ret i8* %35, !dbg !7661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7664, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.value(metadata i8* %1, metadata !7665, metadata !DIExpression()), !dbg !7666
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7667
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7668
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7669
  ret i8* %0, !dbg !7670
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7671 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7673, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %1, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %2, metadata !7675, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %0, metadata !7676, metadata !DIExpression()), !dbg !7678
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7679
  call void @llvm.dbg.value(metadata i32 %4, metadata !7677, metadata !DIExpression()), !dbg !7678
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7680
  call void @llvm.dbg.value(metadata i8* %5, metadata !7673, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %1, metadata !7674, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %2, metadata !7675, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %2, metadata !7675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7678
  %6 = icmp eq i32 %2, 0, !dbg !7681
  br i1 %6, label %18, label %7, !dbg !7682

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7683
  call void @llvm.dbg.value(metadata i8* %9, metadata !7673, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i8* %10, metadata !7674, metadata !DIExpression()), !dbg !7678
  %12 = load i8, i8* %10, align 1, !dbg !7684
  %13 = icmp eq i8 %12, 0, !dbg !7685
  br i1 %13, label %18, label %14, !dbg !7686

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7687
  call void @llvm.dbg.value(metadata i8* %15, metadata !7674, metadata !DIExpression()), !dbg !7678
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7689
  call void @llvm.dbg.value(metadata i8* %16, metadata !7673, metadata !DIExpression()), !dbg !7678
  store i8 %12, i8* %9, align 1, !dbg !7690
  call void @llvm.dbg.value(metadata i32 %11, metadata !7675, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.value(metadata i32 %11, metadata !7675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7678
  %17 = icmp eq i32 %11, 0, !dbg !7681
  br i1 %17, label %18, label %7, !dbg !7682, !llvm.loop !7691

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7678
  store i8 0, i8* %19, align 1, !dbg !7693
  ret i8* %0, !dbg !7694
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7699, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i8* %1, metadata !7700, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %2, metadata !7701, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i8* %0, metadata !7702, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i8* %1, metadata !7703, metadata !DIExpression()), !dbg !7704
  %4 = icmp eq i32 %2, 0, !dbg !7705
  br i1 %4, label %31, label %5, !dbg !7707

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i8* %0, metadata !7702, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %2, metadata !7701, metadata !DIExpression()), !dbg !7704
  %6 = add i32 %2, -1, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %6, metadata !7701, metadata !DIExpression()), !dbg !7704
  %7 = icmp eq i32 %6, 0, !dbg !7709
  br i1 %7, label %23, label %8, !dbg !7710

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7711
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7711
  br label %11, !dbg !7711

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i8* %14, metadata !7702, metadata !DIExpression()), !dbg !7704
  %15 = load i8, i8* %14, align 1, !dbg !7712
  %16 = load i8, i8* %13, align 1, !dbg !7713
  %17 = icmp eq i8 %15, %16, !dbg !7714
  br i1 %17, label %18, label %23, !dbg !7711

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7715
  call void @llvm.dbg.value(metadata i8* %19, metadata !7702, metadata !DIExpression()), !dbg !7704
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7717
  call void @llvm.dbg.value(metadata i8* %20, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %12, metadata !7701, metadata !DIExpression()), !dbg !7704
  %21 = add i32 %12, -1, !dbg !7708
  call void @llvm.dbg.value(metadata i32 %21, metadata !7701, metadata !DIExpression()), !dbg !7704
  %22 = icmp eq i32 %21, 0, !dbg !7709
  br i1 %22, label %23, label %11, !dbg !7710, !llvm.loop !7718

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7704
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7704
  %26 = load i8, i8* %24, align 1, !dbg !7720
  %27 = zext i8 %26 to i32, !dbg !7720
  %28 = load i8, i8* %25, align 1, !dbg !7721
  %29 = zext i8 %28 to i32, !dbg !7721
  %30 = sub nsw i32 %27, %29, !dbg !7722
  br label %31, !dbg !7723

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7704
  ret i32 %32, !dbg !7724
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7729, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %1, metadata !7730, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %2, metadata !7731, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %0, metadata !7732, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %1, metadata !7733, metadata !DIExpression()), !dbg !7734
  %4 = ptrtoint i8* %0 to i32, !dbg !7735
  %5 = ptrtoint i8* %1 to i32, !dbg !7735
  %6 = sub i32 %4, %5, !dbg !7735
  %7 = icmp ult i32 %6, %2, !dbg !7737
  br i1 %7, label %10, label %8, !dbg !7738

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7733, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %0, metadata !7732, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %2, metadata !7731, metadata !DIExpression()), !dbg !7734
  %9 = icmp eq i32 %2, 0, !dbg !7739
  br i1 %9, label %26, label %17, !dbg !7741

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7731, metadata !DIExpression()), !dbg !7734
  %12 = add i32 %11, -1, !dbg !7742
  call void @llvm.dbg.value(metadata i32 %12, metadata !7731, metadata !DIExpression()), !dbg !7734
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7745
  %14 = load i8, i8* %13, align 1, !dbg !7745
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7746
  store i8 %14, i8* %15, align 1, !dbg !7747
  %16 = icmp eq i32 %12, 0, !dbg !7748
  br i1 %16, label %26, label %10, !dbg !7749, !llvm.loop !7750

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7733, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i8* %19, metadata !7732, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %20, metadata !7731, metadata !DIExpression()), !dbg !7734
  %21 = load i8, i8* %18, align 1, !dbg !7752
  store i8 %21, i8* %19, align 1, !dbg !7754
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7755
  call void @llvm.dbg.value(metadata i8* %22, metadata !7732, metadata !DIExpression()), !dbg !7734
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7756
  call void @llvm.dbg.value(metadata i8* %23, metadata !7733, metadata !DIExpression()), !dbg !7734
  %24 = add i32 %20, -1, !dbg !7757
  call void @llvm.dbg.value(metadata i32 %24, metadata !7731, metadata !DIExpression()), !dbg !7734
  %25 = icmp eq i32 %24, 0, !dbg !7739
  br i1 %25, label %26, label %17, !dbg !7741, !llvm.loop !7758

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7760
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7761 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7767, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i8* %1, metadata !7768, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i32 %2, metadata !7769, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i8* %0, metadata !7770, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i8* %1, metadata !7771, metadata !DIExpression()), !dbg !7772
  %4 = icmp eq i32 %2, 0, !dbg !7773
  br i1 %4, label %14, label %5, !dbg !7774

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7771, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i8* %7, metadata !7770, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i32 %8, metadata !7769, metadata !DIExpression()), !dbg !7772
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7775
  call void @llvm.dbg.value(metadata i8* %9, metadata !7771, metadata !DIExpression()), !dbg !7772
  %10 = load i8, i8* %6, align 1, !dbg !7777
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7778
  call void @llvm.dbg.value(metadata i8* %11, metadata !7770, metadata !DIExpression()), !dbg !7772
  store i8 %10, i8* %7, align 1, !dbg !7779
  %12 = add i32 %8, -1, !dbg !7780
  call void @llvm.dbg.value(metadata i32 %12, metadata !7769, metadata !DIExpression()), !dbg !7772
  %13 = icmp eq i32 %12, 0, !dbg !7773
  br i1 %13, label %14, label %5, !dbg !7774, !llvm.loop !7781

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7783
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7788, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 %1, metadata !7789, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 %2, metadata !7790, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8* %0, metadata !7791, metadata !DIExpression()), !dbg !7793
  %4 = trunc i32 %1 to i8, !dbg !7794
  call void @llvm.dbg.value(metadata i8 %4, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 %2, metadata !7790, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8* %0, metadata !7791, metadata !DIExpression()), !dbg !7793
  %5 = icmp eq i32 %2, 0, !dbg !7795
  br i1 %5, label %12, label %6, !dbg !7796

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7790, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i8* %8, metadata !7791, metadata !DIExpression()), !dbg !7793
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7797
  call void @llvm.dbg.value(metadata i8* %9, metadata !7791, metadata !DIExpression()), !dbg !7793
  store i8 %4, i8* %8, align 1, !dbg !7799
  %10 = add i32 %7, -1, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %10, metadata !7790, metadata !DIExpression()), !dbg !7793
  %11 = icmp eq i32 %10, 0, !dbg !7795
  br i1 %11, label %12, label %6, !dbg !7796, !llvm.loop !7801

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7803
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7808, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 %1, metadata !7809, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 %2, metadata !7810, metadata !DIExpression()), !dbg !7814
  %4 = icmp eq i32 %2, 0, !dbg !7815
  br i1 %4, label %17, label %5, !dbg !7816

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7817

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7818
  call void @llvm.dbg.value(metadata i8* %9, metadata !7811, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i32 %8, metadata !7810, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8* %9, metadata !7811, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7818
  %10 = load i8, i8* %9, align 1, !dbg !7819
  %11 = icmp eq i8 %10, %6, !dbg !7822
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7823
  call void @llvm.dbg.value(metadata i8* %12, metadata !7811, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i32 %13, metadata !7810, metadata !DIExpression()), !dbg !7814
  br i1 %15, label %16, label %7, !dbg !7823, !llvm.loop !7824

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7826

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7814
  ret i8* %19, !dbg !7827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7828 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7830, metadata !DIExpression()), !dbg !7831
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7832
  ret void, !dbg !7833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7836, metadata !DIExpression()), !dbg !7837
  ret i32 -1, !dbg !7838
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7843, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i32* %1, metadata !7844, metadata !DIExpression()), !dbg !7845
  %3 = ptrtoint i32* %1 to i32, !dbg !7846
  %4 = and i32 %3, -2, !dbg !7846
  %5 = icmp eq i32 %4, 2, !dbg !7846
  br i1 %5, label %6, label %9, !dbg !7846

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7847
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7847
  br label %9, !dbg !7848

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7848
  ret i32 %10, !dbg !7849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7852, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i32* %1, metadata !7853, metadata !DIExpression()), !dbg !7854
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7855
  ret i32 %3, !dbg !7856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7860, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32* %1, metadata !7861, metadata !DIExpression()), !dbg !7862
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7863, !srcloc !7865
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7866
  ret i32 %3, !dbg !7867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7868 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7873, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.value(metadata i32* %1, metadata !7874, metadata !DIExpression()), !dbg !7877
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %3, metadata !7875, metadata !DIExpression()), !dbg !7877
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %4, metadata !7876, metadata !DIExpression()), !dbg !7877
  %5 = icmp ne i32 %3, %4, !dbg !7880
  %6 = sext i1 %5 to i32, !dbg !7881
  ret i32 %6, !dbg !7882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7883 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7887, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %1, metadata !7888, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %2, metadata !7889, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32* %3, metadata !7890, metadata !DIExpression()), !dbg !7891
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7892
  ret i32 %5, !dbg !7893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7894 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7896, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %1, metadata !7897, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %2, metadata !7898, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32* %3, metadata !7899, metadata !DIExpression()), !dbg !7900
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7901, !srcloc !7903
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7904
  ret i32 %5, !dbg !7905
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7906 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7908, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %1, metadata !7909, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %2, metadata !7910, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32* %3, metadata !7911, metadata !DIExpression()), !dbg !7916
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7917
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7919
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7919
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7919
  br i1 %11, label %33, label %12, !dbg !7919

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7916
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7916
  call void @llvm.dbg.value(metadata i8* %14, metadata !7914, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %13, metadata !7912, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %1, metadata !7913, metadata !DIExpression()), !dbg !7916
  br label %15, !dbg !7920

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7922
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7916
  call void @llvm.dbg.value(metadata i8* %17, metadata !7914, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %16, metadata !7913, metadata !DIExpression()), !dbg !7916
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7923
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7926
  call void @llvm.dbg.value(metadata i8* %19, metadata !7914, metadata !DIExpression()), !dbg !7916
  %20 = load i8, i8* %17, align 1, !dbg !7927
  %21 = zext i8 %20 to i32, !dbg !7928
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7923
  %23 = icmp eq i32 %22, -1, !dbg !7929
  br i1 %23, label %30, label %24, !dbg !7930

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7931
  call void @llvm.dbg.value(metadata i32 %25, metadata !7913, metadata !DIExpression()), !dbg !7916
  %26 = icmp eq i32 %25, 0, !dbg !7932
  br i1 %26, label %27, label %15, !dbg !7933, !llvm.loop !7934

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %28, metadata !7912, metadata !DIExpression()), !dbg !7916
  %29 = icmp eq i32 %28, 0, !dbg !7937
  br i1 %29, label %30, label %12, !dbg !7938, !llvm.loop !7939

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7916
  call void @llvm.dbg.value(metadata i32 %31, metadata !7912, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.label(metadata !7915), !dbg !7942
  %32 = sub i32 %2, %31, !dbg !7943
  br label %33, !dbg !7944

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7916
  ret i32 %34, !dbg !7945
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7946 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7950, metadata !DIExpression()), !dbg !7951
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7952
  %3 = icmp eq i32 %2, -1, !dbg !7954
  br i1 %3, label %8, label %4, !dbg !7955

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7956
  %6 = icmp eq i32 %5, -1, !dbg !7957
  %7 = sext i1 %6 to i32, !dbg !7956
  br label %8, !dbg !7958

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7951
  ret i32 %9, !dbg !7959
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7960 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7962, metadata !DIExpression()), !dbg !7963
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7964
  ret void, !dbg !7965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7970, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %1, metadata !7971, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7972, metadata !DIExpression()), !dbg !7976
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7977
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7977
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7977
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7973, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %0, metadata !7975, metadata !DIExpression()), !dbg !7976
  %7 = icmp slt i32 %0, %1, !dbg !7978
  br i1 %7, label %8, label %22, !dbg !7981

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7975, metadata !DIExpression()), !dbg !7976
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7982
  %11 = icmp eq i32 %10, 0, !dbg !7982
  br i1 %11, label %19, label %12, !dbg !7985

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7986
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7988
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7988
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7990
  br i1 %15, label %19, label %16, !dbg !7991

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7992
  %18 = load i8*, i8** %17, align 4, !dbg !7992
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7993
  br label %19, !dbg !7994

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7995
  call void @llvm.dbg.value(metadata i32 %20, metadata !7975, metadata !DIExpression()), !dbg !7976
  %21 = icmp eq i32 %20, %1, !dbg !7978
  br i1 %21, label %22, label %8, !dbg !7981, !llvm.loop !7996

22:                                               ; preds = %19, %3
  ret void, !dbg !7998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8001, metadata !DIExpression()), !dbg !8002
  %2 = shl nuw i32 1, %0, !dbg !8003
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8006
  ret i32 %3, !dbg !8007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8012, metadata !DIExpression()), !dbg !8013
  %2 = shl nuw i32 1, %0, !dbg !8014
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8017
  ret void, !dbg !8018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8022, metadata !DIExpression()), !dbg !8023
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8024
  ret void, !dbg !8025
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8028, metadata !DIExpression()), !dbg !8029
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8030
  %3 = and i32 %2, %0, !dbg !8030
  %4 = icmp eq i32 %3, %0, !dbg !8031
  %5 = zext i1 %4 to i32, !dbg !8031
  ret i32 %5, !dbg !8032
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8035, metadata !DIExpression()), !dbg !8036
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8037
  ret void, !dbg !8038
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8039 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8041, metadata !DIExpression()), !dbg !8042
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8043
  ret void, !dbg !8044
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8045 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8047, metadata !DIExpression()), !dbg !8048
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8049
  ret void, !dbg !8050
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8053, metadata !DIExpression()), !dbg !8054
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8055
  ret void, !dbg !8056
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8059, metadata !DIExpression()), !dbg !8060
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8061
  ret void, !dbg !8062
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8063 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8065, metadata !DIExpression()), !dbg !8066
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8067
  ret void, !dbg !8068
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8069 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8071, metadata !DIExpression()), !dbg !8072
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8073
  ret void, !dbg !8074
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8075 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8077, metadata !DIExpression()), !dbg !8078
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8079
  ret void, !dbg !8080
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8081 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8083, metadata !DIExpression()), !dbg !8084
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8085
  ret void, !dbg !8086
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8089, metadata !DIExpression()), !dbg !8090
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8091
  ret void, !dbg !8092
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8093 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8095, metadata !DIExpression()), !dbg !8096
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8097
  ret i32 0, !dbg !8098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !633 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !637, metadata !DIExpression()), !dbg !8099
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8100
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8102
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8104
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8106
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8108
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8110
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8112
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8114
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8116
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8118
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8120
  ret void, !dbg !8122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8125, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 0, metadata !8126, metadata !DIExpression()), !dbg !8127
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8128
  %3 = load i32, i32* %2, align 4, !dbg !8128
  call void @llvm.dbg.value(metadata i32 %3, metadata !8126, metadata !DIExpression()), !dbg !8127
  %4 = shl nuw i32 1, %0, !dbg !8129
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8130
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8131
  ret void, !dbg !8132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8135, metadata !DIExpression()), !dbg !8136
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8137
  %3 = or i32 %2, %0, !dbg !8137
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8137
  ret void, !dbg !8138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8141, metadata !DIExpression()), !dbg !8142
  %2 = icmp slt i32 %0, 32, !dbg !8143
  br i1 %2, label %3, label %5, !dbg !8145

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8146
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8148
  br label %5, !dbg !8149

5:                                                ; preds = %1, %3
  ret void, !dbg !8150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8153, metadata !DIExpression()), !dbg !8154
  %2 = xor i32 %0, -1, !dbg !8155
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8155
  %4 = and i32 %3, %2, !dbg !8155
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8155
  ret void, !dbg !8156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %1, metadata !8162, metadata !DIExpression()), !dbg !8163
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8164

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8165
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8167
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8168
  br label %11, !dbg !8169

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8170
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8171
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8172
  br label %11, !dbg !8173

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8174
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8175
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8176
  br label %11, !dbg !8177

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8178
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8179
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8180
  br label %11, !dbg !8181

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8185, metadata !DIExpression()), !dbg !8186
  %2 = xor i32 %0, -1, !dbg !8187
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8187
  %4 = and i32 %3, %2, !dbg !8187
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8187
  ret void, !dbg !8188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8191, metadata !DIExpression()), !dbg !8192
  %2 = xor i32 %0, -1, !dbg !8193
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8193
  %4 = and i32 %3, %2, !dbg !8193
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8193
  ret void, !dbg !8194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8197, metadata !DIExpression()), !dbg !8198
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8199
  %3 = or i32 %2, %0, !dbg !8199
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8199
  ret void, !dbg !8200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8203, metadata !DIExpression()), !dbg !8204
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8205
  %3 = or i32 %2, %0, !dbg !8205
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8205
  ret void, !dbg !8206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8211, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8212, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.value(metadata i8* %2, metadata !8213, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8214, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8216, metadata !DIExpression()), !dbg !8217
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8218
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8218
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8220
  br i1 %6, label %7, label %9, !dbg !8221

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8222
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8223
  store i8* %2, i8** %8, align 4, !dbg !8224
  br label %9, !dbg !8225

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8217
  ret i32 %10, !dbg !8226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8229, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8230, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8231, metadata !DIExpression()), !dbg !8232
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8233
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8234
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8235
  store i8* null, i8** %3, align 4, !dbg !8236
  ret void, !dbg !8237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8238 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8240, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.value(metadata i8* %1, metadata !8241, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.value(metadata i8* %1, metadata !8242, metadata !DIExpression()), !dbg !8245
  %3 = bitcast i8* %1 to i32*, !dbg !8246
  %4 = load i32, i32* %3, align 4, !dbg !8246
  %5 = add i32 %4, -169, !dbg !8246
  %6 = icmp ult i32 %5, -121, !dbg !8246
  br i1 %6, label %15, label %7, !dbg !8248

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8249
  %9 = inttoptr i32 %8 to i32*, !dbg !8250
  call void @llvm.dbg.value(metadata i32* %9, metadata !8243, metadata !DIExpression()), !dbg !8245
  %10 = load volatile i32, i32* %9, align 4, !dbg !8251
  call void @llvm.dbg.value(metadata i32 %10, metadata !8244, metadata !DIExpression()), !dbg !8245
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8252
  %12 = bitcast i8* %11 to i32*, !dbg !8252
  %13 = load i32, i32* %12, align 4, !dbg !8252
  %14 = or i32 %13, %10, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %14, metadata !8244, metadata !DIExpression()), !dbg !8245
  store volatile i32 %14, i32* %9, align 4, !dbg !8254
  br label %15, !dbg !8255

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8245
  ret i32 %16, !dbg !8256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8257 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8259, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i8* %1, metadata !8260, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i8* %1, metadata !8261, metadata !DIExpression()), !dbg !8264
  %3 = bitcast i8* %1 to i32*, !dbg !8265
  %4 = load i32, i32* %3, align 4, !dbg !8265
  %5 = add i32 %4, -169, !dbg !8265
  %6 = icmp ult i32 %5, -121, !dbg !8265
  br i1 %6, label %16, label %7, !dbg !8267

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8268
  %9 = inttoptr i32 %8 to i32*, !dbg !8269
  call void @llvm.dbg.value(metadata i32* %9, metadata !8262, metadata !DIExpression()), !dbg !8264
  %10 = load volatile i32, i32* %9, align 4, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %10, metadata !8263, metadata !DIExpression()), !dbg !8264
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8271
  %12 = bitcast i8* %11 to i32*, !dbg !8271
  %13 = load i32, i32* %12, align 4, !dbg !8271
  %14 = xor i32 %13, -1, !dbg !8272
  %15 = and i32 %10, %14, !dbg !8273
  call void @llvm.dbg.value(metadata i32 %15, metadata !8263, metadata !DIExpression()), !dbg !8264
  store volatile i32 %15, i32* %9, align 4, !dbg !8274
  br label %16, !dbg !8275

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8264
  ret i32 %17, !dbg !8276
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8279, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i8* %1, metadata !8280, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32* %2, metadata !8281, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i8* %1, metadata !8282, metadata !DIExpression()), !dbg !8287
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %4, metadata !8283, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 undef, metadata !8284, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 undef, metadata !8285, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %4, metadata !8286, metadata !DIExpression()), !dbg !8287
  %5 = bitcast i8* %1 to i32*, !dbg !8289
  %6 = load i32, i32* %5, align 4, !dbg !8289
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8290

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8291
  call void @llvm.dbg.value(metadata i32 %8, metadata !8284, metadata !DIExpression()), !dbg !8287
  br label %19, !dbg !8292

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8294
  call void @llvm.dbg.value(metadata i32 %10, metadata !8285, metadata !DIExpression()), !dbg !8287
  br label %19, !dbg !8295

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8296
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8297
  br label %19, !dbg !8298

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8299
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #26, !dbg !8300
  br label %19, !dbg !8301

17:                                               ; preds = %3
  br label %19, !dbg !8302

18:                                               ; preds = %3
  br label %19, !dbg !8303

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8304
  br label %21, !dbg !8305

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8287
  ret i32 %22, !dbg !8305
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8306 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8308, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.value(metadata i8* %1, metadata !8309, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.value(metadata i8* %2, metadata !8310, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.value(metadata i8* %1, metadata !8311, metadata !DIExpression()), !dbg !8316
  %4 = bitcast i8* %1 to i32*, !dbg !8317
  %5 = load i32, i32* %4, align 4, !dbg !8317
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %6, metadata !8315, metadata !DIExpression()), !dbg !8316
  %7 = icmp slt i32 %6, 0, !dbg !8319
  br i1 %7, label %22, label %8, !dbg !8321

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8311, metadata !DIExpression()), !dbg !8316
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8322
  %10 = bitcast i8* %9 to i32*, !dbg !8322
  %11 = load i32, i32* %10, align 4, !dbg !8322
  %12 = lshr i32 %11, 16, !dbg !8322
  %13 = and i32 %12, 7, !dbg !8322
  %14 = lshr i32 %11, 8, !dbg !8323
  %15 = and i32 %14, 31, !dbg !8323
  %16 = shl i32 %13, %15, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %16, metadata !8314, metadata !DIExpression()), !dbg !8316
  %17 = and i32 %11, 255, !dbg !8325
  %18 = or i32 %17, 1073887232, !dbg !8326
  %19 = inttoptr i32 %18 to i32*, !dbg !8327
  call void @llvm.dbg.value(metadata i32* %19, metadata !8312, metadata !DIExpression()), !dbg !8316
  %20 = load volatile i32, i32* %19, align 4, !dbg !8328
  call void @llvm.dbg.value(metadata i32 %20, metadata !8313, metadata !DIExpression()), !dbg !8316
  %21 = or i32 %16, %20, !dbg !8329
  call void @llvm.dbg.value(metadata i32 %21, metadata !8313, metadata !DIExpression()), !dbg !8316
  store volatile i32 %21, i32* %19, align 4, !dbg !8330
  br label %22, !dbg !8331

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8316
  ret i32 %23, !dbg !8332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8337, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32 0, metadata !8338, metadata !DIExpression()), !dbg !8339
  %2 = add i32 %0, -1, !dbg !8340
  %3 = icmp ult i32 %2, 6, !dbg !8340
  br i1 %3, label %4, label %7, !dbg !8340

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8340
  %6 = load i32, i32* %5, align 4, !dbg !8340
  call void @llvm.dbg.value(metadata i32 %6, metadata !8338, metadata !DIExpression()), !dbg !8339
  br label %7, !dbg !8341

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8339
  ret i32 %8, !dbg !8342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8347, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.value(metadata i32 %1, metadata !8348, metadata !DIExpression()), !dbg !8349
  %3 = udiv i32 %0, %1, !dbg !8350
  ret i32 %3, !dbg !8351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8356, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i32 8, metadata !8357, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i32 84, metadata !8358, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i32 %1, metadata !8359, metadata !DIExpression()), !dbg !8360
  %3 = mul i32 %0, 84, !dbg !8361
  %4 = shl nsw i32 %1, 3, !dbg !8362
  %5 = udiv i32 %3, %4, !dbg !8363
  ret i32 %5, !dbg !8364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8365 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8367, metadata !DIExpression()), !dbg !8370
  tail call void @config_enable_default_clocks() #25, !dbg !8371
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8372
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8372
  %4 = lshr i32 %3, 4, !dbg !8372
  %5 = and i32 %4, 15, !dbg !8372
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8372
  %7 = load i8, i8* %6, align 1, !dbg !8372
  %8 = zext i8 %7 to i32, !dbg !8372
  %9 = lshr i32 %2, %8, !dbg !8372
  call void @llvm.dbg.value(metadata i32 %9, metadata !8368, metadata !DIExpression()), !dbg !8370
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8369, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8370
  %10 = icmp ult i32 %9, 84000000, !dbg !8373
  br i1 %10, label %11, label %13, !dbg !8375

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8376
  br label %13, !dbg !8378

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8379
  tail call fastcc void @set_up_plls() #26, !dbg !8380
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8381
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8384
  br label %14, !dbg !8385

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8386
  %16 = icmp eq i32 %15, 8, !dbg !8387
  br i1 %16, label %17, label %14, !dbg !8385, !llvm.loop !8388

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8390
  br i1 %18, label %19, label %21, !dbg !8392

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8393
  br label %21, !dbg !8395

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8396
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8397
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8398
  ret i32 0, !dbg !8399
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8400 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8402
  %2 = and i32 %1, 240, !dbg !8402
  ret i32 %2, !dbg !8403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8404 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8405
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8410
  br label %1, !dbg !8411

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8412
  %3 = icmp eq i32 %2, 1, !dbg !8413
  br i1 %3, label %4, label %1, !dbg !8411, !llvm.loop !8414

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8416
  br label %5, !dbg !8419

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8420
  %7 = icmp eq i32 %6, 1, !dbg !8421
  br i1 %7, label %8, label %5, !dbg !8419, !llvm.loop !8422

8:                                                ; preds = %5
  ret void, !dbg !8424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8425 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8426
  %2 = icmp eq i32 %1, 8, !dbg !8428
  br i1 %2, label %3, label %4, !dbg !8429

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8430
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8432
  br label %4, !dbg !8433

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8434
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8435
  %6 = and i32 %5, -196609, !dbg !8435
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8435
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8436
  %8 = and i32 %7, -251658241, !dbg !8436
  %9 = or i32 %8, 134217728, !dbg !8436
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8436
  tail call void @config_pll_sysclock() #25, !dbg !8437
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8438
  br label %10, !dbg !8439

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8440
  %12 = icmp eq i32 %11, 1, !dbg !8441
  br i1 %12, label %13, label %10, !dbg !8439, !llvm.loop !8442

13:                                               ; preds = %10
  ret void, !dbg !8444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8445 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8447, metadata !DIExpression()), !dbg !8448
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8449
  %2 = and i32 %1, -241, !dbg !8449
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8449
  ret void, !dbg !8450
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8453, metadata !DIExpression()), !dbg !8454
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8455
  %3 = and i32 %2, -4, !dbg !8455
  %4 = or i32 %3, %0, !dbg !8455
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8455
  ret void, !dbg !8456
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8457 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8458
  %2 = and i32 %1, 12, !dbg !8458
  ret i32 %2, !dbg !8459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8460 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8462, metadata !DIExpression()), !dbg !8463
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8464
  %2 = and i32 %1, -7169, !dbg !8464
  %3 = or i32 %2, 4096, !dbg !8464
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8464
  ret void, !dbg !8465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8466 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8468, metadata !DIExpression()), !dbg !8469
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8470
  %2 = and i32 %1, -57345, !dbg !8470
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8470
  ret void, !dbg !8471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8472 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8473
  %2 = icmp eq i32 %1, 1, !dbg !8475
  br i1 %2, label %7, label %3, !dbg !8476

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8477
  br label %4, !dbg !8479

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8480
  %6 = icmp eq i32 %5, 1, !dbg !8481
  br i1 %6, label %7, label %4, !dbg !8479, !llvm.loop !8482

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8484
  br label %8, !dbg !8485

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8486
  %10 = icmp eq i32 %9, 0, !dbg !8487
  br i1 %10, label %11, label %8, !dbg !8485, !llvm.loop !8488

11:                                               ; preds = %8
  ret void, !dbg !8490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8491 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8492
  %2 = and i32 %1, -16777217, !dbg !8492
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8492
  ret void, !dbg !8493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8494 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8495
  %2 = or i32 %1, 16777216, !dbg !8495
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8495
  ret void, !dbg !8496
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8497 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8498
  %2 = lshr i32 %1, 25, !dbg !8499
  %3 = and i32 %2, 1, !dbg !8499
  ret i32 %3, !dbg !8500
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8501 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8502
  %2 = lshr i32 %1, 1, !dbg !8503
  %3 = and i32 %2, 1, !dbg !8503
  ret i32 %3, !dbg !8504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8505 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8506
  %2 = or i32 %1, 1, !dbg !8506
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8506
  ret void, !dbg !8507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8508 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8509
  %2 = and i32 %1, -262145, !dbg !8509
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8511 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8512
  %2 = or i32 %1, 65536, !dbg !8512
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8512
  ret void, !dbg !8513
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8514 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8515
  %2 = lshr i32 %1, 17, !dbg !8516
  %3 = and i32 %2, 1, !dbg !8516
  ret i32 %3, !dbg !8517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8518 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8519
  %2 = or i32 %1, 1, !dbg !8519
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8521 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8522
  %2 = lshr i32 %1, 1, !dbg !8523
  %3 = and i32 %2, 1, !dbg !8523
  ret i32 %3, !dbg !8524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8525 {
  ret i32 16000000, !dbg !8527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8531 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8532
  ret void, !dbg !8533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8534 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8538, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 8, metadata !8539, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 84, metadata !8540, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i32 0, metadata !8541, metadata !DIExpression()), !dbg !8542
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8543
  %2 = and i32 %1, -4227072, !dbg !8543
  %3 = or i32 %2, 4199688, !dbg !8543
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8543
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8544
  %5 = and i32 %4, -196609, !dbg !8544
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8544
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8545
  %7 = and i32 %6, -1879048193, !dbg !8545
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8545
  ret void, !dbg !8546
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8547 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8550 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8553, metadata !DIExpression()), !dbg !8555
  %2 = bitcast i32* %1 to i8*, !dbg !8556
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8556
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8554, metadata !DIExpression()), !dbg !8557
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8558
  %4 = or i32 %3, 268435456, !dbg !8558
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8558
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8559
  %6 = and i32 %5, 268435456, !dbg !8559
  store volatile i32 %6, i32* %1, align 4, !dbg !8560
  %7 = load volatile i32, i32* %1, align 4, !dbg !8561
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8562
  ret void, !dbg !8562
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8565, metadata !DIExpression()), !dbg !8566
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !8567
  br i1 %2, label %3, label %4, !dbg !8569

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8570
  br label %4, !dbg !8571

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8566
  ret i32 %5, !dbg !8572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8573 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8578, metadata !DIExpression()), !dbg !8579
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8580, !srcloc !8582
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !8583
  ret i1 %1, !dbg !8584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8585 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8586
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8587
  ret void, !dbg !8588
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8591, metadata !DIExpression()), !dbg !8592
  %2 = icmp eq i32 %0, 10, !dbg !8593
  br i1 %2, label %3, label %4, !dbg !8595

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8596
  br label %4, !dbg !8598

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8599
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8600
  ret i32 %0, !dbg !8601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8602 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8605, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.value(metadata i8 %0, metadata !8606, metadata !DIExpression()), !dbg !8607
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8608, !srcloc !8610
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8611
  ret void, !dbg !8612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8613 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8615, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.value(metadata i8 %0, metadata !8616, metadata !DIExpression()), !dbg !8618
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8619
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8617, metadata !DIExpression()), !dbg !8618
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8620
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8620
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !8621
  ret void, !dbg !8622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8625, metadata !DIExpression()), !dbg !8626
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !8627
  ret i1 %1, !dbg !8628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8629 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8677, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8678, metadata !DIExpression()), !dbg !8679
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8681 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8683, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i8 %1, metadata !8684, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i32 %2, metadata !8685, metadata !DIExpression()), !dbg !8688
  %5 = bitcast i32* %4 to i8*, !dbg !8689
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8689
  call void @llvm.dbg.value(metadata i32* %4, metadata !8687, metadata !DIExpression(DW_OP_deref)), !dbg !8688
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8690
  call void @llvm.dbg.value(metadata i32 %6, metadata !8686, metadata !DIExpression()), !dbg !8688
  %7 = icmp eq i32 %6, 0, !dbg !8691
  br i1 %7, label %8, label %31, !dbg !8693

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8686, metadata !DIExpression()), !dbg !8688
  %9 = and i32 %2, 131072, !dbg !8694
  %10 = icmp eq i32 %9, 0, !dbg !8696
  br i1 %10, label %28, label %11, !dbg !8697

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8698
  %13 = icmp eq i32 %12, 0, !dbg !8701
  br i1 %13, label %18, label %14, !dbg !8702

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8703
  %16 = shl nuw i32 1, %15, !dbg !8703
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8705
  br label %25, !dbg !8706

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8707
  %20 = icmp eq i32 %19, 0, !dbg !8709
  %21 = zext i8 %1 to i32, !dbg !8688
  br i1 %20, label %25, label %22, !dbg !8710

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8711
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8713
  br label %25, !dbg !8714

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8715
  %27 = load i32, i32* %4, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %30, metadata !8687, metadata !DIExpression()), !dbg !8688
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8717
  br label %31, !dbg !8718

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8715
  %30 = load i32, i32* %4, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %30, metadata !8687, metadata !DIExpression()), !dbg !8688
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8717
  call void @llvm.dbg.value(metadata i32 0, metadata !8686, metadata !DIExpression()), !dbg !8688
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8719
  ret i32 %6, !dbg !8719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8724, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32* %1, metadata !8725, metadata !DIExpression()), !dbg !8729
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8730
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8730
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8730
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8726, metadata !DIExpression()), !dbg !8729
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8731
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8731
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8731
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8728, metadata !DIExpression()), !dbg !8729
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8732
  store i32 %9, i32* %1, align 4, !dbg !8733
  ret i32 0, !dbg !8734
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8737, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 %1, metadata !8738, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 %2, metadata !8739, metadata !DIExpression()), !dbg !8743
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8744
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8744
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8744
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8740, metadata !DIExpression()), !dbg !8743
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8745
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8745
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8745
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8741, metadata !DIExpression()), !dbg !8743
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %10, metadata !8742, metadata !DIExpression()), !dbg !8743
  %11 = xor i32 %1, -1, !dbg !8747
  %12 = and i32 %10, %11, !dbg !8748
  %13 = and i32 %2, %1, !dbg !8749
  %14 = or i32 %12, %13, !dbg !8750
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8751
  ret i32 0, !dbg !8752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8753 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8755, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.value(metadata i32 %1, metadata !8756, metadata !DIExpression()), !dbg !8759
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8760
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8760
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8760
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8757, metadata !DIExpression()), !dbg !8759
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8761
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8761
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8761
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8758, metadata !DIExpression()), !dbg !8759
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8762
  store volatile i32 %1, i32* %9, align 4, !dbg !8762
  ret i32 0, !dbg !8763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8764 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8766, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32 %1, metadata !8767, metadata !DIExpression()), !dbg !8770
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8771
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8771
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8771
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8768, metadata !DIExpression()), !dbg !8770
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8772
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8772
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8772
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8769, metadata !DIExpression()), !dbg !8770
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8773
  ret i32 0, !dbg !8774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8775 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8777, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 %1, metadata !8778, metadata !DIExpression()), !dbg !8781
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8782
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8782
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8782
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8779, metadata !DIExpression()), !dbg !8781
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8783
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8783
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8783
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8780, metadata !DIExpression()), !dbg !8781
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8784
  %10 = load volatile i32, i32* %9, align 4, !dbg !8784
  %11 = xor i32 %10, %1, !dbg !8784
  store volatile i32 %11, i32* %9, align 4, !dbg !8784
  ret i32 0, !dbg !8785
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8788, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i8 %1, metadata !8789, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32 %2, metadata !8790, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32 %3, metadata !8791, metadata !DIExpression()), !dbg !8798
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8799
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8799
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8799
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8792, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i8* undef, metadata !8793, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32 0, metadata !8795, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32 0, metadata !8796, metadata !DIExpression()), !dbg !8798
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8800

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8801
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8805
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8806
  %12 = load i32, i32* %11, align 4, !dbg !8806
  %13 = icmp eq i32 %10, %12, !dbg !8807
  br i1 %13, label %14, label %29, !dbg !8808

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !8809
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !8811
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !8812
  br label %29, !dbg !8813

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8814
  %17 = load i8*, i8** %16, align 4, !dbg !8814
  call void @llvm.dbg.value(metadata i8* %17, metadata !8793, metadata !DIExpression()), !dbg !8798
  %18 = zext i8 %1 to i32, !dbg !8815
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !8817
  %20 = icmp eq i32 %19, 0, !dbg !8818
  br i1 %20, label %21, label %29, !dbg !8819

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8820
  %23 = load i32, i32* %22, align 4, !dbg !8820
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8821
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8822

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8795, metadata !DIExpression()), !dbg !8798
  br label %27, !dbg !8823

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8795, metadata !DIExpression()), !dbg !8798
  br label %27, !dbg !8825

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8795, metadata !DIExpression()), !dbg !8798
  br label %27, !dbg !8826

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8798
  call void @llvm.dbg.value(metadata i32 %28, metadata !8795, metadata !DIExpression()), !dbg !8798
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !8827
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !8828
  br label %29, !dbg !8828

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8798
  call void @llvm.dbg.value(metadata i32 %30, metadata !8796, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.label(metadata !8797), !dbg !8829
  ret i32 %30, !dbg !8830
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !8831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8833, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8834, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i1 %2, metadata !8835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8837
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8838
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8838
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8838
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8836, metadata !DIExpression()), !dbg !8837
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8839
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8840
  ret i32 %8, !dbg !8841
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !8842 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8848, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8849, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i1 %2, metadata !8850, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8851
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8852
  br i1 %4, label %10, label %5, !dbg !8854

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8855
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8858
  %8 = or i1 %7, %2, !dbg !8859
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8859
  br i1 %2, label %11, label %13, !dbg !8859

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8860

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8861
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8864
  br label %13, !dbg !8865

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8851
  ret i32 %14, !dbg !8866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8867 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8871, metadata !DIExpression()), !dbg !8872
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8873
  %3 = icmp eq %struct._snode* %2, null, !dbg !8873
  ret i1 %3, !dbg !8873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8874 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8878, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8879, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8880, metadata !DIExpression()), !dbg !8882
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8883
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8880, metadata !DIExpression()), !dbg !8882
  %4 = icmp eq %struct._snode* %3, null, !dbg !8885
  br i1 %4, label %15, label %5, !dbg !8883

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8880, metadata !DIExpression()), !dbg !8882
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8887
  br i1 %6, label %9, label %11, !dbg !8890

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8880, metadata !DIExpression()), !dbg !8882
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8887
  br i1 %8, label %9, label %11, !dbg !8890, !llvm.loop !8891

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8892
  br label %15, !dbg !8892

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8880, metadata !DIExpression()), !dbg !8882
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8885
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8881, metadata !DIExpression()), !dbg !8882
  %14 = icmp eq %struct._snode* %13, null, !dbg !8885
  br i1 %14, label %15, label %7, !dbg !8883, !llvm.loop !8891

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8895 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8899, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8900, metadata !DIExpression()), !dbg !8901
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8902
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8902
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8902
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8903
  %5 = icmp eq %struct._snode* %4, null, !dbg !8903
  br i1 %5, label %6, label %8, !dbg !8902

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8905
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8905
  br label %8, !dbg !8905

8:                                                ; preds = %6, %2
  ret void, !dbg !8902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8907 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8911, metadata !DIExpression()), !dbg !8912
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8913
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8913
  ret %struct._snode* %3, !dbg !8914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8915 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8919, metadata !DIExpression()), !dbg !8921
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8920, metadata !DIExpression()), !dbg !8921
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8922
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8925 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8928, metadata !DIExpression()), !dbg !8929
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8930
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8931
  ret void, !dbg !8932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8933 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8935, metadata !DIExpression()), !dbg !8936
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8937
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8937
  ret %struct._snode* %3, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8941, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8942, metadata !DIExpression()), !dbg !8943
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8944
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8945
  ret void, !dbg !8946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8947 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8951, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8952, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8953, metadata !DIExpression()), !dbg !8954
  %4 = icmp eq %struct._snode* %1, null, !dbg !8955
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8957
  br i1 %4, label %6, label %11, !dbg !8958

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8959
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8961
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8961
  br i1 %8, label %9, label %15, !dbg !8959

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8963
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8963
  br label %15, !dbg !8963

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8965
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8967
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8967
  br i1 %13, label %14, label %15, !dbg !8965

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8969
  br label %15, !dbg !8969

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8958
  ret void, !dbg !8958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8971 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8975, metadata !DIExpression()), !dbg !8976
  %2 = icmp eq %struct._snode* %0, null, !dbg !8977
  br i1 %2, label %5, label %3, !dbg !8977

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8977
  br label %5, !dbg !8977

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8977
  ret %struct._snode* %6, !dbg !8977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8978 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8980, metadata !DIExpression()), !dbg !8981
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8982
  ret %struct._snode* %2, !dbg !8982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8983 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8985, metadata !DIExpression()), !dbg !8986
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8987
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8987
  ret %struct._snode* %3, !dbg !8988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8991, metadata !DIExpression()), !dbg !8994
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8995, !range !8996
  call void @llvm.dbg.value(metadata i32 %2, metadata !8992, metadata !DIExpression()), !dbg !8994
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %3, metadata !8993, metadata !DIExpression()), !dbg !8994
  ret i32 %3, !dbg !8998
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9001, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.value(metadata i8* %1, metadata !9002, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.value(metadata i8* %1, metadata !9003, metadata !DIExpression()), !dbg !9004
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9005
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9005
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9006
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9006
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9006
  %8 = shl nuw i32 1, %0, !dbg !9007
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !9008
  ret void, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9010 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9014, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %1, metadata !9015, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9016, metadata !DIExpression()), !dbg !9020
  %4 = bitcast i64* %3 to i8*, !dbg !9021
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !9021
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9018, metadata !DIExpression()), !dbg !9020
  store i64 70368744177732, i64* %3, align 8, !dbg !9022
  call void @llvm.dbg.value(metadata i64* %3, metadata !9018, metadata !DIExpression(DW_OP_deref)), !dbg !9020
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %5, metadata !9019, metadata !DIExpression()), !dbg !9020
  %6 = icmp eq i32 %5, 0, !dbg !9024
  br i1 %6, label %7, label %8, !dbg !9026

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !9027
  br label %8, !dbg !9028

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !9029
  ret void, !dbg !9029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9030 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9032, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8* %0, metadata !9033, metadata !DIExpression()), !dbg !9035
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9036
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9034, metadata !DIExpression()), !dbg !9035
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9037
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9037
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9038
  ret i32 %5, !dbg !9039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9042, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %1, metadata !9043, metadata !DIExpression()), !dbg !9045
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %3, metadata !9044, metadata !DIExpression()), !dbg !9045
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !9047
  ret void, !dbg !9048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9053, metadata !DIExpression()), !dbg !9054
  %2 = sdiv i32 %0, 4, !dbg !9055
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9056
  %6 = add nsw i32 %5, 16, !dbg !9057
  %7 = shl i32 15, %6, !dbg !9058
  %8 = or i32 %7, %2, !dbg !9059
  ret i32 %8, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9065, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.value(metadata i32 %1, metadata !9066, metadata !DIExpression()), !dbg !9067
  %3 = and i32 %1, 255, !dbg !9068
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9068
  %5 = load volatile i32, i32* %4, align 4, !dbg !9068
  %6 = lshr i32 %1, 16, !dbg !9068
  %7 = xor i32 %6, -1, !dbg !9068
  %8 = and i32 %5, %7, !dbg !9068
  call void @llvm.dbg.value(metadata i32 %6, metadata !9069, metadata !DIExpression()) #24, !dbg !9073
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9075, !srcloc !9076
  call void @llvm.dbg.value(metadata i32 %9, metadata !9072, metadata !DIExpression()) #24, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %9, metadata !9077, metadata !DIExpression()) #24, !dbg !9082
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !9084, !range !3545
  %11 = shl i32 %0, %10, !dbg !9068
  %12 = or i32 %11, %8, !dbg !9068
  store volatile i32 %12, i32* %4, align 4, !dbg !9068
  ret void, !dbg !9085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9090, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9091, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 %2, metadata !9092, metadata !DIExpression()), !dbg !9095
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9096
  %5 = icmp eq %struct._snode* %4, null, !dbg !9096
  br i1 %5, label %21, label %6, !dbg !9096

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9098
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9094, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9093, metadata !DIExpression()), !dbg !9095
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9099
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9099
  %11 = load i32, i32* %10, align 4, !dbg !9099
  %12 = and i32 %11, %2, !dbg !9103
  %13 = icmp eq i32 %12, 0, !dbg !9103
  br i1 %13, label %19, label %14, !dbg !9104

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9093, metadata !DIExpression()), !dbg !9095
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9105
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9105
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9105
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !9107
  br label %19, !dbg !9108

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9093, metadata !DIExpression()), !dbg !9095
  %20 = icmp eq %struct._snode* %8, null, !dbg !9109
  br i1 %20, label %21, label %6, !dbg !9109

21:                                               ; preds = %19, %3
  ret void, !dbg !9110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9113, metadata !DIExpression()), !dbg !9114
  %2 = and i32 %0, 255, !dbg !9115
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9115
  %4 = load volatile i32, i32* %3, align 4, !dbg !9115
  %5 = lshr i32 %0, 16, !dbg !9115
  %6 = and i32 %4, %5, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %5, metadata !9069, metadata !DIExpression()) #24, !dbg !9116
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !9118, !srcloc !9076
  call void @llvm.dbg.value(metadata i32 %7, metadata !9072, metadata !DIExpression()) #24, !dbg !9116
  call void @llvm.dbg.value(metadata i32 %7, metadata !9077, metadata !DIExpression()) #24, !dbg !9119
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9121, !range !3545
  %9 = lshr i32 %6, %8, !dbg !9122
  ret i32 %9, !dbg !9123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9124 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9129, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata i32 %1, metadata !9130, metadata !DIExpression()), !dbg !9131
  %3 = shl i32 %1, 16, !dbg !9132
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9132
  store volatile i32 %3, i32* %4, align 4, !dbg !9132
  ret void, !dbg !9133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9134 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9138, metadata !DIExpression()), !dbg !9139
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9140
  %3 = load volatile i32, i32* %2, align 4, !dbg !9140
  ret i32 %3, !dbg !9141
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9144, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i32 %1, metadata !9145, metadata !DIExpression()), !dbg !9146
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9147
  store volatile i32 %1, i32* %3, align 4, !dbg !9147
  ret void, !dbg !9148
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9149 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9151, metadata !DIExpression()), !dbg !9152
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9153
  %3 = load volatile i32, i32* %2, align 4, !dbg !9153
  ret i32 %3, !dbg !9154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !9155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9159, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i32* %1, metadata !9160, metadata !DIExpression()), !dbg !9161
  %3 = and i32 %0, 131072, !dbg !9162
  %4 = icmp eq i32 %3, 0, !dbg !9164
  br i1 %4, label %22, label %5, !dbg !9165

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9166
  %6 = and i32 %0, 2, !dbg !9168
  %7 = icmp eq i32 %6, 0, !dbg !9170
  br i1 %7, label %11, label %8, !dbg !9171

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9172
  %10 = icmp eq i32 %9, 0, !dbg !9172
  br i1 %10, label %33, label %11, !dbg !9175

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9176
  store i32 %12, i32* %1, align 4, !dbg !9176
  %13 = and i32 %0, 16, !dbg !9177
  %14 = icmp eq i32 %13, 0, !dbg !9179
  br i1 %14, label %17, label %15, !dbg !9180

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9181
  br label %31, !dbg !9183

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9184
  %19 = icmp eq i32 %18, 0, !dbg !9186
  br i1 %19, label %33, label %20, !dbg !9187

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9188
  br label %31, !dbg !9190

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9191
  %24 = icmp eq i32 %23, 0, !dbg !9193
  br i1 %24, label %31, label %25, !dbg !9194

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9195
  %27 = icmp eq i32 %26, 0, !dbg !9198
  br i1 %27, label %28, label %31, !dbg !9199

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9200
  br label %33, !dbg !9201

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9161
  ret i32 %34, !dbg !9201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9206, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %1, metadata !9207, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %2, metadata !9208, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %3, metadata !9209, metadata !DIExpression()), !dbg !9217
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9218
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9218
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9218
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9210, metadata !DIExpression()), !dbg !9217
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9219
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9219
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9219
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9211, metadata !DIExpression()), !dbg !9217
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9220
  call void @llvm.dbg.value(metadata i32 %11, metadata !9212, metadata !DIExpression()), !dbg !9217
  %12 = and i32 %2, 48, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %12, metadata !9213, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %2, metadata !9214, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %2, metadata !9215, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %2, metadata !9216, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9217
  %13 = lshr i32 %2, 6, !dbg !9222
  %14 = and i32 %13, 1, !dbg !9222
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9223
  %15 = lshr i32 %2, 7, !dbg !9224
  %16 = and i32 %15, 3, !dbg !9224
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9225
  %17 = lshr i32 %2, 9, !dbg !9226
  %18 = and i32 %17, 3, !dbg !9226
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9227
  %19 = icmp eq i32 %12, 32, !dbg !9228
  br i1 %19, label %20, label %24, !dbg !9230

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9231
  br i1 %21, label %22, label %23, !dbg !9234

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9235
  br label %24, !dbg !9237

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9238
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9240
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9241
  ret void, !dbg !9242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9245, metadata !DIExpression()), !dbg !9247
  %2 = shl nuw i32 1, %0, !dbg !9248
  call void @llvm.dbg.value(metadata i32 %2, metadata !9246, metadata !DIExpression()), !dbg !9247
  ret i32 %2, !dbg !9249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9250 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9254, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.value(metadata i32 %1, metadata !9255, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.value(metadata i32 %2, metadata !9256, metadata !DIExpression()), !dbg !9257
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9258
  %5 = load volatile i32, i32* %4, align 4, !dbg !9258
  %6 = xor i32 %1, -1, !dbg !9258
  %7 = and i32 %5, %6, !dbg !9258
  %8 = mul i32 %2, %1, !dbg !9258
  %9 = or i32 %7, %8, !dbg !9258
  store volatile i32 %9, i32* %4, align 4, !dbg !9258
  ret void, !dbg !9259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9260 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9262, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %1, metadata !9263, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %2, metadata !9264, metadata !DIExpression()), !dbg !9265
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9266
  %5 = load volatile i32, i32* %4, align 4, !dbg !9266
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9267
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9269, !srcloc !9076
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9267
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9270
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9272, !range !3545
  %8 = shl nuw nsw i32 %7, 1, !dbg !9266
  %9 = shl i32 3, %8, !dbg !9266
  %10 = xor i32 %9, -1, !dbg !9266
  %11 = and i32 %5, %10, !dbg !9266
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9275
  %12 = shl i32 %2, %8, !dbg !9266
  %13 = or i32 %11, %12, !dbg !9266
  store volatile i32 %13, i32* %4, align 4, !dbg !9266
  ret void, !dbg !9277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9278 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9280, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 %1, metadata !9281, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 %2, metadata !9282, metadata !DIExpression()), !dbg !9283
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9284
  %5 = load volatile i32, i32* %4, align 4, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9285
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9287, !srcloc !9076
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9285
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9288
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9290, !range !3545
  %8 = shl nuw nsw i32 %7, 1, !dbg !9284
  %9 = shl i32 3, %8, !dbg !9284
  %10 = xor i32 %9, -1, !dbg !9284
  %11 = and i32 %5, %10, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9291
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9291
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9293
  %12 = shl i32 %2, %8, !dbg !9284
  %13 = or i32 %11, %12, !dbg !9284
  store volatile i32 %13, i32* %4, align 4, !dbg !9284
  ret void, !dbg !9295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9296 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9298, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.value(metadata i32 %1, metadata !9299, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.value(metadata i32 %2, metadata !9300, metadata !DIExpression()), !dbg !9301
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9302
  %5 = load volatile i32, i32* %4, align 4, !dbg !9302
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9303
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9305, !srcloc !9076
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9303
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9306
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9308, !range !3545
  %8 = shl nuw nsw i32 %7, 2, !dbg !9302
  %9 = shl i32 15, %8, !dbg !9302
  %10 = xor i32 %9, -1, !dbg !9302
  %11 = and i32 %5, %10, !dbg !9302
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9311
  %12 = shl i32 %2, %8, !dbg !9302
  %13 = or i32 %11, %12, !dbg !9302
  store volatile i32 %13, i32* %4, align 4, !dbg !9302
  ret void, !dbg !9313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9314 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9316, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %1, metadata !9317, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %2, metadata !9318, metadata !DIExpression()), !dbg !9319
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9320
  %5 = load volatile i32, i32* %4, align 4, !dbg !9320
  %6 = lshr i32 %1, 8, !dbg !9320
  call void @llvm.dbg.value(metadata i32 %6, metadata !9069, metadata !DIExpression()) #24, !dbg !9321
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9323, !srcloc !9076
  call void @llvm.dbg.value(metadata i32 %7, metadata !9072, metadata !DIExpression()) #24, !dbg !9321
  call void @llvm.dbg.value(metadata i32 %7, metadata !9077, metadata !DIExpression()) #24, !dbg !9324
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9326, !range !3545
  %9 = shl nuw nsw i32 %8, 2, !dbg !9320
  %10 = shl i32 15, %9, !dbg !9320
  %11 = xor i32 %10, -1, !dbg !9320
  %12 = and i32 %5, %11, !dbg !9320
  call void @llvm.dbg.value(metadata i32 %6, metadata !9069, metadata !DIExpression()) #24, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %7, metadata !9072, metadata !DIExpression()) #24, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %7, metadata !9077, metadata !DIExpression()) #24, !dbg !9329
  %13 = shl i32 %2, %9, !dbg !9320
  %14 = or i32 %12, %13, !dbg !9320
  store volatile i32 %14, i32* %4, align 4, !dbg !9320
  ret void, !dbg !9331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9332 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9334, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i32 %1, metadata !9335, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i32 %2, metadata !9336, metadata !DIExpression()), !dbg !9337
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9338
  %5 = load volatile i32, i32* %4, align 4, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9339
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9341, !srcloc !9076
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9342
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9344, !range !3545
  %8 = shl nuw nsw i32 %7, 1, !dbg !9338
  %9 = shl i32 3, %8, !dbg !9338
  %10 = xor i32 %9, -1, !dbg !9338
  %11 = and i32 %5, %10, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()) #24, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %6, metadata !9072, metadata !DIExpression()) #24, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %6, metadata !9077, metadata !DIExpression()) #24, !dbg !9347
  %12 = shl i32 %2, %8, !dbg !9338
  %13 = or i32 %11, %12, !dbg !9338
  store volatile i32 %13, i32* %4, align 4, !dbg !9338
  ret void, !dbg !9349
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9352, metadata !DIExpression()), !dbg !9355
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9356
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9356
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9356
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9353, metadata !DIExpression()), !dbg !9355
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9357
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9358
  %6 = tail call fastcc zeroext i1 @device_is_ready.71() #26, !dbg !9359
  br i1 %6, label %7, label %11, !dbg !9361

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %8, metadata !9354, metadata !DIExpression()), !dbg !9355
  %9 = icmp slt i32 %8, 0, !dbg !9363
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9365
  br label %11, !dbg !9365

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9355
  ret i32 %12, !dbg !9366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71() unnamed_addr #1 !dbg !9367 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9371, metadata !DIExpression()), !dbg !9372
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9373, !srcloc !9375
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72() #26, !dbg !9376
  ret i1 %1, !dbg !9377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9382, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata i8 1, metadata !9383, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9384, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata i32 0, metadata !9385, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9386, metadata !DIExpression()), !dbg !9387
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9388
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9388
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9388
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9384, metadata !DIExpression()), !dbg !9387
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9389
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9392
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %7, metadata !9385, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata i32 %7, metadata !9385, metadata !DIExpression()), !dbg !9387
  ret i32 %7, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72() unnamed_addr #1 !dbg !9395 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9397, metadata !DIExpression()), !dbg !9398
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9399
  ret i1 %1, !dbg !9400
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9405, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.value(metadata i32 %1, metadata !9406, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.value(metadata i32 %3, metadata !9408, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.value(metadata i32 0, metadata !9409, metadata !DIExpression()), !dbg !9413
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9414
  %5 = icmp eq i32 %3, 17, !dbg !9415
  br i1 %5, label %6, label %14, !dbg !9416

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %7, metadata !9410, metadata !DIExpression()), !dbg !9418
  %8 = icmp eq i32 %7, 0, !dbg !9419
  %9 = shl nuw i32 1, %1, !dbg !9421
  br i1 %8, label %12, label %10, !dbg !9422

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9423
  br label %14, !dbg !9425

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9426
  br label %14, !dbg !9429

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9430
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9433, metadata !DIExpression()), !dbg !9437
  call void @llvm.dbg.value(metadata i8* %1, metadata !9434, metadata !DIExpression()), !dbg !9437
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9438
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9438
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9438
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9435, metadata !DIExpression()), !dbg !9437
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9439
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9439
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9441
  %9 = icmp eq i32 %8, 0, !dbg !9441
  br i1 %9, label %12, label %10, !dbg !9442

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9443
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9445
  br label %12, !dbg !9446

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9447
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9449
  %15 = icmp eq i32 %14, 0, !dbg !9449
  br i1 %15, label %19, label %16, !dbg !9450

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9451
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9452
  store i8 %18, i8* %1, align 1, !dbg !9453
  br label %19, !dbg !9454

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9437
  ret i32 %20, !dbg !9455
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9458, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8 %1, metadata !9459, metadata !DIExpression()), !dbg !9462
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9463
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9463
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9463
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9460, metadata !DIExpression()), !dbg !9462
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9464

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9465
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9468
  %10 = icmp eq i32 %9, 0, !dbg !9468
  br i1 %10, label %18, label %11, !dbg !9469

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9470, !srcloc !9477
  call void @llvm.dbg.value(metadata i32 undef, metadata !9473, metadata !DIExpression()) #24, !dbg !9478
  call void @llvm.dbg.value(metadata i32 undef, metadata !9474, metadata !DIExpression()) #24, !dbg !9478
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()), !dbg !9462
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9479
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9481
  %15 = icmp eq i32 %14, 0, !dbg !9481
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9470
  br i1 %15, label %17, label %19, !dbg !9482

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9473, metadata !DIExpression()) #24, !dbg !9478
  call void @llvm.dbg.value(metadata i32 %16, metadata !9461, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 undef, metadata !9483, metadata !DIExpression()) #24, !dbg !9486
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !9488, !srcloc !9489
  br label %18, !dbg !9490

18:                                               ; preds = %17, %7
  br label %7, !dbg !9465, !llvm.loop !9491

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9470
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9493
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %20, metadata !9483, metadata !DIExpression()) #24, !dbg !9495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !9497, !srcloc !9489
  ret void, !dbg !9498
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9499 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9501, metadata !DIExpression()), !dbg !9504
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9505
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9505
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9505
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9502, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i32 0, metadata !9503, metadata !DIExpression()), !dbg !9504
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9506
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9506
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9508
  %8 = icmp ne i32 %7, 0, !dbg !9508
  %9 = zext i1 %8 to i32, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %9, metadata !9503, metadata !DIExpression()), !dbg !9504
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9510
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9512
  %12 = icmp eq i32 %11, 0, !dbg !9512
  %13 = or i32 %9, 2, !dbg !9513
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9513
  call void @llvm.dbg.value(metadata i32 %14, metadata !9503, metadata !DIExpression()), !dbg !9504
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9514
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9516
  %17 = icmp eq i32 %16, 0, !dbg !9516
  %18 = or i32 %14, 4, !dbg !9517
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %19, metadata !9503, metadata !DIExpression()), !dbg !9504
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9518
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9520
  %22 = icmp eq i32 %21, 0, !dbg !9520
  %23 = or i32 %19, 8, !dbg !9521
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9521
  call void @llvm.dbg.value(metadata i32 %24, metadata !9503, metadata !DIExpression()), !dbg !9504
  %25 = and i32 %24, 8, !dbg !9522
  %26 = icmp eq i32 %25, 0, !dbg !9522
  br i1 %26, label %29, label %27, !dbg !9524

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9525
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9527
  br label %29, !dbg !9528

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9529
  %31 = icmp eq i32 %30, 0, !dbg !9529
  br i1 %31, label %34, label %32, !dbg !9531

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9532
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9534
  br label %34, !dbg !9535

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9536
  %36 = icmp eq i32 %35, 0, !dbg !9536
  br i1 %36, label %39, label %37, !dbg !9538

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9539
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9541
  br label %39, !dbg !9542

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9543
  %41 = icmp eq i32 %40, 0, !dbg !9543
  br i1 %41, label %44, label %42, !dbg !9545

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9546
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9548
  br label %44, !dbg !9549

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9550
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9551
  ret i32 %24, !dbg !9552
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9555, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9556, metadata !DIExpression()), !dbg !9564
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9565
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9565
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9565
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9557, metadata !DIExpression()), !dbg !9564
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9566
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9566
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9566
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9558, metadata !DIExpression()), !dbg !9564
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9567
  %10 = load i8, i8* %9, align 4, !dbg !9567
  %11 = zext i8 %10 to i32, !dbg !9568
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9569
  call void @llvm.dbg.value(metadata i32 %12, metadata !9560, metadata !DIExpression()), !dbg !9564
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9570
  %14 = load i8, i8* %13, align 1, !dbg !9570
  %15 = zext i8 %14 to i32, !dbg !9571
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9572
  call void @llvm.dbg.value(metadata i32 %16, metadata !9561, metadata !DIExpression()), !dbg !9564
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9573
  %18 = load i8, i8* %17, align 2, !dbg !9573
  %19 = zext i8 %18 to i32, !dbg !9574
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %20, metadata !9562, metadata !DIExpression()), !dbg !9564
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9576
  %22 = load i8, i8* %21, align 1, !dbg !9576
  %23 = zext i8 %22 to i32, !dbg !9577
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %24, metadata !9563, metadata !DIExpression()), !dbg !9564
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9579

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9581
  br i1 %26, label %69, label %27, !dbg !9583

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9584

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9585
  br i1 %29, label %65, label %30, !dbg !9585

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9587
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9564
  br i1 %31, label %38, label %34, !dbg !9589

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9590
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !9590

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9593
  br i1 %37, label %38, label %69, !dbg !9594

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9595
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9596
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9597
  %41 = icmp eq i32 %12, %40, !dbg !9599
  br i1 %41, label %43, label %42, !dbg !9600

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9601
  br label %43, !dbg !9603

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9604
  %45 = icmp eq i32 %16, %44, !dbg !9606
  br i1 %45, label %47, label %46, !dbg !9607

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9608
  br label %47, !dbg !9610

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9611
  %49 = icmp eq i32 %20, %48, !dbg !9613
  br i1 %49, label %51, label %50, !dbg !9614

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9615
  br label %51, !dbg !9617

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9618
  %53 = icmp eq i32 %24, %52, !dbg !9620
  br i1 %53, label %55, label %54, !dbg !9621

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9622
  br label %55, !dbg !9624

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9625
  %57 = load i32, i32* %56, align 4, !dbg !9625
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9627
  %59 = load i32, i32* %58, align 4, !dbg !9627
  %60 = icmp eq i32 %57, %59, !dbg !9628
  br i1 %60, label %63, label %61, !dbg !9629

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9630
  %62 = load i32, i32* %56, align 4, !dbg !9632
  store i32 %62, i32* %58, align 4, !dbg !9633
  br label %63, !dbg !9634

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9635
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9636
  br label %69, !dbg !9637

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9585
  %67 = and i8 %66, 1, !dbg !9585
  %68 = icmp eq i8 %67, 0, !dbg !9585
  br i1 %68, label %30, label %69, !dbg !9585

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9564
  ret i32 %70, !dbg !9638
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9641, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9642, metadata !DIExpression()), !dbg !9644
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9645
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9645
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9645
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9643, metadata !DIExpression()), !dbg !9644
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9646
  %7 = load i32, i32* %6, align 4, !dbg !9646
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9647
  store i32 %7, i32* %8, align 4, !dbg !9648
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9649, !range !9650
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9651
  %11 = trunc i32 %10 to i8, !dbg !9651
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9652
  store i8 %11, i8* %12, align 4, !dbg !9653
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9654, !range !9655
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9656
  %15 = trunc i32 %14 to i8, !dbg !9656
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9657
  store i8 %15, i8* %16, align 1, !dbg !9658
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9659
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9660, !range !9650
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9661
  %20 = trunc i32 %19 to i8, !dbg !9661
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9662
  store i8 %20, i8* %21, align 2, !dbg !9663
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9664, !range !9665
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9666
  %24 = trunc i32 %23 to i8, !dbg !9666
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9667
  store i8 %24, i8* %25, align 1, !dbg !9668
  ret i32 0, !dbg !9669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9674, metadata !DIExpression()), !dbg !9676
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9677
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9677
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9677
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9675, metadata !DIExpression()), !dbg !9676
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9678
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9678
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9679
  ret i32 %7, !dbg !9680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9685, metadata !DIExpression()), !dbg !9686
  %2 = icmp eq i32 %0, 1024, !dbg !9687
  %3 = select i1 %2, i32 2, i32 0, !dbg !9687
  %4 = icmp eq i32 %0, 1536, !dbg !9687
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9687
  ret i32 %5, !dbg !9688
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9691, metadata !DIExpression()), !dbg !9693
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9694
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9694
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9694
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9692, metadata !DIExpression()), !dbg !9693
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9695
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9695
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9696
  ret i32 %7, !dbg !9697
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9702, metadata !DIExpression()), !dbg !9703
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9704
  %3 = icmp ult i32 %2, 4, !dbg !9704
  br i1 %3, label %4, label %7, !dbg !9704

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9704
  %6 = load i32, i32* %5, align 4, !dbg !9704
  br label %7, !dbg !9704

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9705
  ret i32 %8, !dbg !9707
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9708 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9710, metadata !DIExpression()), !dbg !9712
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9713
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9713
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9713
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9711, metadata !DIExpression()), !dbg !9712
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9714
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9714
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9715
  ret i32 %7, !dbg !9716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9721, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 %1, metadata !9722, metadata !DIExpression()), !dbg !9723
  %3 = icmp eq i32 %0, 4096, !dbg !9724
  %4 = icmp eq i32 %1, 0, !dbg !9724
  %5 = select i1 %4, i32 4, i32 3, !dbg !9724
  %6 = select i1 %4, i32 3, i32 2, !dbg !9724
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9724
  ret i32 %7, !dbg !9725
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9728, metadata !DIExpression()), !dbg !9730
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9731
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9731
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9731
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9729, metadata !DIExpression()), !dbg !9730
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9732
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9732
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9733
  ret i32 %7, !dbg !9734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9739, metadata !DIExpression()), !dbg !9740
  %2 = icmp eq i32 %0, 768, !dbg !9741
  %3 = zext i1 %2 to i32, !dbg !9740
  ret i32 %3, !dbg !9743
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9744 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9749, metadata !DIExpression()), !dbg !9750
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9751
  %3 = load volatile i32, i32* %2, align 4, !dbg !9751
  %4 = and i32 %3, 768, !dbg !9751
  ret i32 %4, !dbg !9752
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9753 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9755, metadata !DIExpression()), !dbg !9756
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9757
  %3 = load volatile i32, i32* %2, align 4, !dbg !9757
  %4 = and i32 %3, 4096, !dbg !9757
  ret i32 %4, !dbg !9758
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9759 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9763
  %3 = load volatile i32, i32* %2, align 4, !dbg !9763
  %4 = and i32 %3, 12288, !dbg !9763
  ret i32 %4, !dbg !9764
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9767, metadata !DIExpression()), !dbg !9768
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9769
  %3 = load volatile i32, i32* %2, align 4, !dbg !9769
  %4 = and i32 %3, 1536, !dbg !9769
  ret i32 %4, !dbg !9770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9775, metadata !DIExpression()), !dbg !9776
  %2 = icmp eq i32 %0, 2, !dbg !9777
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9777
  %4 = icmp eq i32 %0, 1, !dbg !9777
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9777
  ret i32 %5, !dbg !9778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9783, metadata !DIExpression()), !dbg !9784
  %2 = icmp ult i32 %0, 3, !dbg !9785
  br i1 %2, label %3, label %6, !dbg !9785

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9785
  %5 = load i32, i32* %4, align 4, !dbg !9785
  br label %6, !dbg !9785

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9786
  ret i32 %7, !dbg !9788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9793, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i32 %1, metadata !9794, metadata !DIExpression()), !dbg !9795
  %3 = icmp eq i32 %0, 4, !dbg !9796
  %4 = icmp eq i32 %1, 0, !dbg !9796
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9796
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9796
  ret i32 %6, !dbg !9797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9802, metadata !DIExpression()), !dbg !9803
  %2 = icmp eq i32 %0, 1, !dbg !9804
  %3 = select i1 %2, i32 768, i32 0, !dbg !9803
  ret i32 %3, !dbg !9806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9807 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9811, metadata !DIExpression()), !dbg !9812
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9813
  %3 = load volatile i32, i32* %2, align 4, !dbg !9813
  %4 = and i32 %3, -8193, !dbg !9813
  store volatile i32 %4, i32* %2, align 4, !dbg !9813
  ret void, !dbg !9814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9819, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i32 %1, metadata !9820, metadata !DIExpression()), !dbg !9822
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9823
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9823
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9823
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9821, metadata !DIExpression()), !dbg !9822
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9824
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9824
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9825
  ret void, !dbg !9826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9829, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %1, metadata !9830, metadata !DIExpression()), !dbg !9832
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9833
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9833
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9833
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9831, metadata !DIExpression()), !dbg !9832
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9834
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9834
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9835
  ret void, !dbg !9836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9837 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9839, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i32 %1, metadata !9840, metadata !DIExpression()), !dbg !9842
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9843
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9843
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9843
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9841, metadata !DIExpression()), !dbg !9842
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9844
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9844
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9845
  ret void, !dbg !9846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9849, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %1, metadata !9850, metadata !DIExpression()), !dbg !9852
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9853
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9853
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9853
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9851, metadata !DIExpression()), !dbg !9852
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9854
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9854
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9855
  ret void, !dbg !9856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9857 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9859, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.value(metadata i32 %1, metadata !9860, metadata !DIExpression()), !dbg !9864
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9865
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9865
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9865
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9861, metadata !DIExpression()), !dbg !9864
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9866
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9866
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9866
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9862, metadata !DIExpression()), !dbg !9864
  %10 = bitcast i32* %3 to i8*, !dbg !9867
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9867
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9868
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9868
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9872
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9872
  %15 = load i8*, i8** %14, align 4, !dbg !9872
  call void @llvm.dbg.value(metadata i32* %3, metadata !9863, metadata !DIExpression(DW_OP_deref)), !dbg !9864
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9873
  %17 = icmp slt i32 %16, 0, !dbg !9874
  br i1 %17, label %23, label %18, !dbg !9875

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9876
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9876
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9877
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9878
  %22 = load i32, i32* %3, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata i32 %22, metadata !9863, metadata !DIExpression()), !dbg !9864
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9880
  br label %23, !dbg !9881

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9881
  ret void, !dbg !9881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9882 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9884, metadata !DIExpression()), !dbg !9885
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9886
  %3 = load volatile i32, i32* %2, align 4, !dbg !9886
  %4 = or i32 %3, 8192, !dbg !9886
  store volatile i32 %4, i32* %2, align 4, !dbg !9886
  ret void, !dbg !9887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9890, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i8* %1, metadata !9891, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32* %2, metadata !9892, metadata !DIExpression()), !dbg !9894
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9895
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9895
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9895
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9893, metadata !DIExpression()), !dbg !9894
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9896
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9896
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9898
  br i1 %9, label %12, label %10, !dbg !9899

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !9900
  br label %12, !dbg !9901

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9894
  ret i32 %13, !dbg !9902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9903 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9907, metadata !DIExpression()), !dbg !9909
  call void @llvm.dbg.value(metadata i32 0, metadata !9908, metadata !DIExpression()), !dbg !9909
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9910
  %3 = load volatile i32, i32* %2, align 4, !dbg !9910
  %4 = and i32 %3, -32769, !dbg !9910
  store volatile i32 %4, i32* %2, align 4, !dbg !9910
  ret void, !dbg !9911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9912 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9916, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %1, metadata !9917, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 0, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %2, metadata !9919, metadata !DIExpression()), !dbg !9920
  %4 = zext i32 %1 to i64, !dbg !9921
  %5 = mul nuw nsw i64 %4, 25, !dbg !9921
  %6 = zext i32 %2 to i64, !dbg !9921
  %7 = shl nuw nsw i64 %6, 2, !dbg !9921
  %8 = udiv i64 %5, %7, !dbg !9921
  %9 = trunc i64 %8 to i32, !dbg !9921
  %10 = udiv i32 %9, 100, !dbg !9921
  %11 = shl nuw nsw i32 %10, 4, !dbg !9921
  %12 = mul i32 %10, -100, !dbg !9921
  %13 = add i32 %12, %9, !dbg !9921
  %14 = shl i32 %13, 4, !dbg !9921
  %15 = add i32 %14, 50, !dbg !9921
  %16 = udiv i32 %15, 100, !dbg !9921
  %17 = and i32 %16, 240, !dbg !9921
  %18 = add nuw nsw i32 %17, %11, !dbg !9921
  %19 = and i32 %16, 15, !dbg !9921
  %20 = and i32 %18, 65520, !dbg !9924
  %21 = or i32 %20, %19, !dbg !9924
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9925
  store volatile i32 %21, i32* %22, align 4, !dbg !9926
  ret void, !dbg !9927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9930, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.value(metadata i32 %1, metadata !9931, metadata !DIExpression()), !dbg !9932
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9933
  %4 = load volatile i32, i32* %3, align 4, !dbg !9933
  %5 = and i32 %4, -769, !dbg !9933
  %6 = or i32 %5, %1, !dbg !9933
  store volatile i32 %6, i32* %3, align 4, !dbg !9933
  ret void, !dbg !9934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9935 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9937, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %1, metadata !9938, metadata !DIExpression()), !dbg !9939
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9940
  %4 = load volatile i32, i32* %3, align 4, !dbg !9940
  %5 = and i32 %4, -4097, !dbg !9940
  %6 = or i32 %5, %1, !dbg !9940
  store volatile i32 %6, i32* %3, align 4, !dbg !9940
  ret void, !dbg !9941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9942 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9944, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.value(metadata i32 %1, metadata !9945, metadata !DIExpression()), !dbg !9946
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9947
  %4 = load volatile i32, i32* %3, align 4, !dbg !9947
  %5 = and i32 %4, -12289, !dbg !9947
  %6 = or i32 %5, %1, !dbg !9947
  store volatile i32 %6, i32* %3, align 4, !dbg !9947
  ret void, !dbg !9948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9949 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9951, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.value(metadata i32 %1, metadata !9952, metadata !DIExpression()), !dbg !9953
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9954
  %4 = load volatile i32, i32* %3, align 4, !dbg !9954
  %5 = and i32 %4, -1537, !dbg !9954
  %6 = or i32 %5, %1, !dbg !9954
  store volatile i32 %6, i32* %3, align 4, !dbg !9954
  ret void, !dbg !9955
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9958, metadata !DIExpression()), !dbg !9959
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9960
  %3 = load volatile i32, i32* %2, align 4, !dbg !9960
  %4 = lshr i32 %3, 3, !dbg !9961
  %5 = and i32 %4, 1, !dbg !9961
  ret i32 %5, !dbg !9962
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9963 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9965, metadata !DIExpression()), !dbg !9966
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9967
  %3 = load volatile i32, i32* %2, align 4, !dbg !9967
  %4 = and i32 %3, 1, !dbg !9967
  ret i32 %4, !dbg !9968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9969 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9971, metadata !DIExpression()), !dbg !9972
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9973
  %3 = load volatile i32, i32* %2, align 4, !dbg !9973
  %4 = lshr i32 %3, 1, !dbg !9974
  %5 = and i32 %4, 1, !dbg !9974
  ret i32 %5, !dbg !9975
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9978, metadata !DIExpression()), !dbg !9979
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9980
  %3 = load volatile i32, i32* %2, align 4, !dbg !9980
  %4 = lshr i32 %3, 8, !dbg !9981
  %5 = and i32 %4, 1, !dbg !9981
  ret i32 %5, !dbg !9982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9983 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9985, metadata !DIExpression()), !dbg !9986
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9987
  store volatile i32 -257, i32* %2, align 4, !dbg !9987
  ret void, !dbg !9988
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9989 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9991, metadata !DIExpression()), !dbg !9993
  %3 = bitcast i32* %2 to i8*, !dbg !9994
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9994
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9992, metadata !DIExpression()), !dbg !9995
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9996
  %5 = load volatile i32, i32* %4, align 4, !dbg !9996
  store volatile i32 %5, i32* %2, align 4, !dbg !9997
  %6 = load volatile i32, i32* %2, align 4, !dbg !9998
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9999
  %8 = load volatile i32, i32* %7, align 4, !dbg !9999
  store volatile i32 %8, i32* %2, align 4, !dbg !10000
  %9 = load volatile i32, i32* %2, align 4, !dbg !10001
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10002
  ret void, !dbg !10002
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10003 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10005, metadata !DIExpression()), !dbg !10007
  %3 = bitcast i32* %2 to i8*, !dbg !10008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10008
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10006, metadata !DIExpression()), !dbg !10009
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10010
  %5 = load volatile i32, i32* %4, align 4, !dbg !10010
  store volatile i32 %5, i32* %2, align 4, !dbg !10011
  %6 = load volatile i32, i32* %2, align 4, !dbg !10012
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10013
  %8 = load volatile i32, i32* %7, align 4, !dbg !10013
  store volatile i32 %8, i32* %2, align 4, !dbg !10014
  %9 = load volatile i32, i32* %2, align 4, !dbg !10015
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10016
  ret void, !dbg !10016
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10017 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10019, metadata !DIExpression()), !dbg !10021
  %3 = bitcast i32* %2 to i8*, !dbg !10022
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10022
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10020, metadata !DIExpression()), !dbg !10023
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10024
  %5 = load volatile i32, i32* %4, align 4, !dbg !10024
  store volatile i32 %5, i32* %2, align 4, !dbg !10025
  %6 = load volatile i32, i32* %2, align 4, !dbg !10026
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10027
  %8 = load volatile i32, i32* %7, align 4, !dbg !10027
  store volatile i32 %8, i32* %2, align 4, !dbg !10028
  %9 = load volatile i32, i32* %2, align 4, !dbg !10029
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10030
  ret void, !dbg !10030
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10031 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10033, metadata !DIExpression()), !dbg !10035
  %3 = bitcast i32* %2 to i8*, !dbg !10036
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10036
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10034, metadata !DIExpression()), !dbg !10037
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10038
  %5 = load volatile i32, i32* %4, align 4, !dbg !10038
  store volatile i32 %5, i32* %2, align 4, !dbg !10039
  %6 = load volatile i32, i32* %2, align 4, !dbg !10040
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10041
  %8 = load volatile i32, i32* %7, align 4, !dbg !10041
  store volatile i32 %8, i32* %2, align 4, !dbg !10042
  %9 = load volatile i32, i32* %2, align 4, !dbg !10043
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10044
  ret void, !dbg !10044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10045 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10047, metadata !DIExpression()), !dbg !10048
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10049
  %3 = load volatile i32, i32* %2, align 4, !dbg !10049
  %4 = lshr i32 %3, 7, !dbg !10050
  %5 = and i32 %4, 1, !dbg !10050
  ret i32 %5, !dbg !10051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10052 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10056, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i8 %1, metadata !10057, metadata !DIExpression()), !dbg !10058
  %3 = zext i8 %1 to i32, !dbg !10059
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10060
  store volatile i32 %3, i32* %4, align 4, !dbg !10061
  ret void, !dbg !10062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10063 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10065, metadata !DIExpression()), !dbg !10066
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10067
  %3 = load volatile i32, i32* %2, align 4, !dbg !10067
  %4 = lshr i32 %3, 5, !dbg !10068
  %5 = and i32 %4, 1, !dbg !10068
  ret i32 %5, !dbg !10069
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10074, metadata !DIExpression()), !dbg !10075
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10076
  %3 = load volatile i32, i32* %2, align 4, !dbg !10076
  %4 = trunc i32 %3 to i8, !dbg !10077
  ret i8 %4, !dbg !10078
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10081, metadata !DIExpression()), !dbg !10087
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10088
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10088
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10088
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10082, metadata !DIExpression()), !dbg !10087
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10089
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10089
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10089
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10083, metadata !DIExpression()), !dbg !10087
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10090
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10091
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10091
  %10 = tail call fastcc zeroext i1 @device_is_ready.80(%struct.device* noundef %9) #26, !dbg !10093
  br i1 %10, label %11, label %49, !dbg !10094

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10095
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10096
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10096
  %15 = load i8*, i8** %14, align 4, !dbg !10096
  %16 = tail call fastcc i32 @clock_control_on.81(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10097
  call void @llvm.dbg.value(metadata i32 %16, metadata !10086, metadata !DIExpression()), !dbg !10087
  %17 = icmp eq i32 %16, 0, !dbg !10098
  br i1 %17, label %18, label %49, !dbg !10100

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10101
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10101
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10102
  call void @llvm.dbg.value(metadata i32 %21, metadata !10086, metadata !DIExpression()), !dbg !10087
  %22 = icmp slt i32 %21, 0, !dbg !10103
  br i1 %22, label %49, label %23, !dbg !10105

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10106
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10106
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10107
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10108
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10109
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10110
  %28 = load i32, i32* %27, align 4, !dbg !10110
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10112

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10084, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 4096, metadata !10085, metadata !DIExpression()), !dbg !10087
  br label %31, !dbg !10113

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10084, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 0, metadata !10085, metadata !DIExpression()), !dbg !10087
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10116
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10116
  call void @llvm.dbg.value(metadata i32 %33, metadata !10085, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 %32, metadata !10084, metadata !DIExpression()), !dbg !10087
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10117
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10118
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10119
  %36 = load i8, i8* %35, align 4, !dbg !10119, !range !6710
  %37 = icmp eq i8 %36, 0, !dbg !10119
  br i1 %37, label %39, label %38, !dbg !10121

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10122
  br label %39, !dbg !10124

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10125
  %41 = load i32, i32* %40, align 4, !dbg !10125
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10126
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10127
  %43 = load i8, i8* %42, align 4, !dbg !10127, !range !6710
  %44 = icmp eq i8 %43, 0, !dbg !10127
  br i1 %44, label %47, label %45, !dbg !10129

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10130
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10132
  br label %47, !dbg !10133

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10134
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10135
  br label %49, !dbg !10136

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10087
  ret i32 %50, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10142, metadata !DIExpression()), !dbg !10146
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10147
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10147
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10147
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10143, metadata !DIExpression()), !dbg !10146
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10144, metadata !DIExpression()), !dbg !10146
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10148
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10149
  ret void, !dbg !10150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.80(%struct.device* noundef %0) unnamed_addr #1 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10155, metadata !DIExpression()), !dbg !10156
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10157, !srcloc !10159
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.82(%struct.device* noundef %0) #26, !dbg !10160
  ret i1 %2, !dbg !10161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.81(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10164, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.value(metadata i8* %1, metadata !10165, metadata !DIExpression()), !dbg !10167
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10168
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10168
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10168
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10166, metadata !DIExpression()), !dbg !10167
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10169
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10169
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10170
  ret i32 %8, !dbg !10171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10172 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10176, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata i8 0, metadata !10177, metadata !DIExpression()), !dbg !10180
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10181
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10179, metadata !DIExpression(DW_OP_deref)), !dbg !10180
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10182
  call void @llvm.dbg.value(metadata i32 %4, metadata !10178, metadata !DIExpression()), !dbg !10180
  %5 = icmp slt i32 %4, 0, !dbg !10183
  br i1 %5, label %9, label %6, !dbg !10185

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10186
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10179, metadata !DIExpression()), !dbg !10180
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10187
  br label %9, !dbg !10188

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10180
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10189
  ret i32 %10, !dbg !10189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10192, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 12, metadata !10193, metadata !DIExpression()), !dbg !10196
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10197

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10198, metadata !DIExpression()) #24, !dbg !10204
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10207, !srcloc !10208
  call void @llvm.dbg.value(metadata i32 %4, metadata !10203, metadata !DIExpression()) #24, !dbg !10204
  %5 = or i32 %4, 12, !dbg !10209
  call void @llvm.dbg.value(metadata i32 %5, metadata !10194, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %5, metadata !10211, metadata !DIExpression()) #24, !dbg !10218
  call void @llvm.dbg.value(metadata i32* %2, metadata !10216, metadata !DIExpression()) #24, !dbg !10218
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10220, !srcloc !10221
  call void @llvm.dbg.value(metadata i32 %6, metadata !10217, metadata !DIExpression()) #24, !dbg !10218
  %7 = icmp eq i32 %6, 0, !dbg !10197
  br i1 %7, label %8, label %3, !dbg !10209, !llvm.loop !10222

8:                                                ; preds = %3
  ret void, !dbg !10223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10224 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10226, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %1, metadata !10227, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %2, metadata !10228, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 0, metadata !10229, metadata !DIExpression()), !dbg !10230
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10231
  %5 = load volatile i32, i32* %4, align 4, !dbg !10231
  %6 = and i32 %5, -5633, !dbg !10231
  %7 = or i32 %2, %1, !dbg !10231
  %8 = or i32 %7, %6, !dbg !10231
  store volatile i32 %8, i32* %4, align 4, !dbg !10231
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10232
  %10 = load volatile i32, i32* %9, align 4, !dbg !10232
  %11 = and i32 %10, -12289, !dbg !10232
  store volatile i32 %11, i32* %9, align 4, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10234 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10236, metadata !DIExpression()), !dbg !10237
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10238
  %3 = load volatile i32, i32* %2, align 4, !dbg !10238
  %4 = or i32 %3, 8, !dbg !10238
  store volatile i32 %4, i32* %2, align 4, !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10240 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10245, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 0, metadata !10246, metadata !DIExpression()), !dbg !10247
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10248
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10248
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10249
  %5 = load i8, i8* %4, align 4, !dbg !10249
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10250
  ret i32 %6, !dbg !10251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.82(%struct.device* noundef %0) unnamed_addr #1 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10254, metadata !DIExpression()), !dbg !10255
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10256
  ret i1 %2, !dbg !10257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10258 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10260, metadata !DIExpression()), !dbg !10261
  tail call fastcc void @__NVIC_SetPriority.84() #26, !dbg !10262
  store i32 8399, i32* @last_load, align 4, !dbg !10263
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10264
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10265
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10266
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10267
  %3 = or i32 %2, 7, !dbg !10267
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10267
  ret i32 0, !dbg !10268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.84() unnamed_addr #15 !dbg !10269 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10271, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i32 1, metadata !10272, metadata !DIExpression()), !dbg !10273
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10274
  ret void, !dbg !10277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10280, metadata !DIExpression()), !dbg !10282
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10283
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10284
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10285
  %5 = add i32 %4, %3, !dbg !10285
  store i32 %5, i32* @cycle_count, align 4, !dbg !10285
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10286
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10287
  %7 = sub i32 %5, %6, !dbg !10290
  %8 = udiv i32 %7, 8400, !dbg !10291
  call void @llvm.dbg.value(metadata i32 %8, metadata !10281, metadata !DIExpression()), !dbg !10282
  %9 = mul nuw i32 %8, 8400, !dbg !10292
  %10 = add i32 %9, %6, !dbg !10293
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10293
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10294
  tail call void @z_arm_int_exit() #25, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10297 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %1, metadata !10299, metadata !DIExpression()), !dbg !10303
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10304
  call void @llvm.dbg.value(metadata i32 %2, metadata !10300, metadata !DIExpression()), !dbg !10303
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10305
  call void @llvm.dbg.value(metadata i32 %3, metadata !10301, metadata !DIExpression()), !dbg !10303
  %4 = and i32 %2, 65536, !dbg !10306
  %5 = icmp ne i32 %4, 0, !dbg !10306
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10308
  %8 = load i32, i32* @last_load, align 4, !dbg !10303
  br i1 %7, label %9, label %13, !dbg !10308

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10309
  %11 = add i32 %10, %8, !dbg !10309
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10309
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10311
  br label %13, !dbg !10312

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10313
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10314
  %16 = add i32 %14, %15, !dbg !10315
  ret i32 %16, !dbg !10316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10321, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata i1 %1, metadata !10322, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10334
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10335
  br i1 %4, label %5, label %8, !dbg !10335

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10337
  %7 = and i32 %6, -2, !dbg !10337
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10337
  store i32 -16777216, i32* @last_load, align 4, !dbg !10339
  br label %54, !dbg !10340

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10341
  call void @llvm.dbg.value(metadata i32 %9, metadata !10326, metadata !DIExpression()), !dbg !10334
  br i1 %3, label %18, label %10, !dbg !10342

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10342
  call void @llvm.dbg.value(metadata i32 undef, metadata !10321, metadata !DIExpression()), !dbg !10334
  %12 = icmp slt i32 %11, 1, !dbg !10343
  br i1 %12, label %18, label %13, !dbg !10343

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10343
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10343
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10343
  %17 = add nuw nsw i32 %16, 8399, !dbg !10343
  br label %18, !dbg !10343

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10321, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10344, metadata !DIExpression()) #24, !dbg !10351
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10353, !srcloc !10359
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10353
  call void @llvm.dbg.value(metadata i32 %21, metadata !10356, metadata !DIExpression()) #24, !dbg !10360
  call void @llvm.dbg.value(metadata i32 undef, metadata !10357, metadata !DIExpression()) #24, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %21, metadata !10350, metadata !DIExpression()) #24, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %21, metadata !10327, metadata !DIExpression()), !dbg !10334
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %22, metadata !10332, metadata !DIExpression()), !dbg !10334
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %23, metadata !10324, metadata !DIExpression()), !dbg !10334
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10363
  %25 = add i32 %24, %22, !dbg !10363
  store i32 %25, i32* @cycle_count, align 4, !dbg !10363
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10364
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10365
  %27 = sub i32 %25, %26, !dbg !10366
  call void @llvm.dbg.value(metadata i32 %27, metadata !10333, metadata !DIExpression()), !dbg !10334
  %28 = icmp slt i32 %27, 0, !dbg !10367
  br i1 %28, label %38, label %29, !dbg !10369

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10323, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata i32 undef, metadata !10323, metadata !DIExpression()), !dbg !10334
  %30 = add nuw i32 %19, %27, !dbg !10370
  %31 = urem i32 %30, 8400, !dbg !10372
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10334
  %32 = sub nuw nsw i32 %19, %31, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %32, metadata !10323, metadata !DIExpression()), !dbg !10334
  %33 = icmp ugt i32 %32, 1024, !dbg !10374
  br i1 %33, label %34, label %36, !dbg !10374

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10323, metadata !DIExpression()), !dbg !10334
  %35 = icmp ugt i32 %32, 16766400, !dbg !10375
  br i1 %35, label %38, label %36, !dbg !10377

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10378
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %40, metadata !10325, metadata !DIExpression()), !dbg !10334
  %41 = add nsw i32 %39, -1, !dbg !10380
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10381
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10382
  %42 = icmp ult i32 %23, %40, !dbg !10383
  br i1 %42, label %43, label %48, !dbg !10385

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10386
  %45 = add i32 %23, %9, !dbg !10388
  %46 = sub i32 %45, %40, !dbg !10389
  %47 = add i32 %46, %44, !dbg !10386
  br label %52, !dbg !10390

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10391
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10393
  %51 = add i32 %49, %50, !dbg !10393
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10394
  store i32 %53, i32* @cycle_count, align 4, !dbg !10394
  call void @llvm.dbg.value(metadata i32 %21, metadata !10395, metadata !DIExpression()) #24, !dbg !10401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10400, metadata !DIExpression()) #24, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %21, metadata !10403, metadata !DIExpression()) #24, !dbg !10406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !10408, !srcloc !10409
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10410
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10411 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10344, metadata !DIExpression()) #24, !dbg !10415
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10417, !srcloc !10359
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %2, metadata !10356, metadata !DIExpression()) #24, !dbg !10419
  call void @llvm.dbg.value(metadata i32 undef, metadata !10357, metadata !DIExpression()) #24, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %2, metadata !10350, metadata !DIExpression()) #24, !dbg !10415
  call void @llvm.dbg.value(metadata i32 %2, metadata !10413, metadata !DIExpression()), !dbg !10420
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10421
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10422
  %5 = add i32 %4, %3, !dbg !10423
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10424
  %7 = sub i32 %5, %6, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %7, metadata !10414, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 %2, metadata !10395, metadata !DIExpression()) #24, !dbg !10426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10400, metadata !DIExpression()) #24, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %2, metadata !10403, metadata !DIExpression()) #24, !dbg !10428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10430, !srcloc !10409
  %8 = udiv i32 %7, 8400, !dbg !10431
  ret i32 %8, !dbg !10432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10433 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10344, metadata !DIExpression()) #24, !dbg !10437
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10439, !srcloc !10359
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %2, metadata !10356, metadata !DIExpression()) #24, !dbg !10441
  call void @llvm.dbg.value(metadata i32 undef, metadata !10357, metadata !DIExpression()) #24, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %2, metadata !10350, metadata !DIExpression()) #24, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %2, metadata !10435, metadata !DIExpression()), !dbg !10442
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10443
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10444
  %5 = add i32 %4, %3, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %5, metadata !10436, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i32 %2, metadata !10395, metadata !DIExpression()) #24, !dbg !10446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10400, metadata !DIExpression()) #24, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %2, metadata !10403, metadata !DIExpression()) #24, !dbg !10448
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10450, !srcloc !10409
  ret i32 %5, !dbg !10451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10452 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10453
  %2 = icmp eq i32 %1, -16777216, !dbg !10455
  br i1 %2, label %3, label %6, !dbg !10456

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10457
  %5 = or i32 %4, 1, !dbg !10457
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10457
  br label %6, !dbg !10459

6:                                                ; preds = %3, %0
  ret void, !dbg !10460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10461 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10462
  %2 = and i32 %1, -2, !dbg !10462
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10462
  ret void, !dbg !10463
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10464 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10490, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata i8 %1, metadata !10491, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10492, metadata !DIExpression()), !dbg !10493
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10494
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10494
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10493
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10495
  %8 = load i8, i8* %6, align 4, !dbg !10496
  %9 = zext i8 %8 to i32, !dbg !10497
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10497
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10498
  br i1 %11, label %18, label %24, !dbg !10499

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10493
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10495
  %14 = load i8, i8* %6, align 4, !dbg !10496
  %15 = zext i8 %14 to i32, !dbg !10497
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10497
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10498
  br i1 %17, label %18, label %24, !dbg !10499, !llvm.loop !10500

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10502
  %21 = load i8, i8* %20, align 1, !dbg !10502
  %22 = icmp eq i8 %21, %1, !dbg !10505
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10506
  br i1 %22, label %24, label %12, !dbg !10507

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10493
  ret i32 %25, !dbg !10508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10520, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i8 %1, metadata !10521, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 %2, metadata !10522, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 0, metadata !10525, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 0, metadata !10526, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i8 0, metadata !10527, metadata !DIExpression()), !dbg !10537
  %4 = icmp eq i8 %1, 0, !dbg !10538
  br i1 %4, label %35, label %5, !dbg !10539

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10538
  br label %9, !dbg !10539

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10527, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata i32 %29, metadata !10525, metadata !DIExpression()), !dbg !10536
  %8 = icmp eq i32 %34, %6, !dbg !10538
  br i1 %8, label %35, label %9, !dbg !10539, !llvm.loop !10540

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10527, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata i32 %11, metadata !10525, metadata !DIExpression()), !dbg !10536
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10542
  %13 = load i32, i32* %12, align 4, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %13, metadata !10524, metadata !DIExpression()), !dbg !10536
  %14 = and i32 %13, 31, !dbg !10543
  %15 = icmp ult i32 %14, 16, !dbg !10544
  br i1 %15, label %16, label %20, !dbg !10545

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10546
  %18 = load i32, i32* %17, align 4, !dbg !10546
  %19 = or i32 %18, 32, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %19, metadata !10525, metadata !DIExpression()), !dbg !10536
  br label %28, !dbg !10549

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10550

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10551
  %23 = load i32, i32* %22, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %23, metadata !10529, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10552
  %24 = lshr i32 %23, 7, !dbg !10553
  %25 = and i32 %24, 16, !dbg !10553
  %26 = or i32 %25, %23, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %26, metadata !10525, metadata !DIExpression()), !dbg !10536
  br label %28, !dbg !10554

27:                                               ; preds = %20
  br label %28, !dbg !10555

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10536
  call void @llvm.dbg.value(metadata i32 %29, metadata !10525, metadata !DIExpression()), !dbg !10536
  %30 = lshr i32 %13, 5, !dbg !10555
  %31 = and i32 %30, 255, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %31, metadata !10523, metadata !DIExpression()), !dbg !10536
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10556
  call void @llvm.dbg.value(metadata i32 %32, metadata !10526, metadata !DIExpression()), !dbg !10536
  %33 = icmp slt i32 %32, 0, !dbg !10557
  %34 = add nuw nsw i32 %10, 1, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %34, metadata !10527, metadata !DIExpression()), !dbg !10537
  br i1 %33, label %35, label %7, !dbg !10560

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10566, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i32 %1, metadata !10567, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i32 %2, metadata !10568, metadata !DIExpression()), !dbg !10570
  %4 = icmp ugt i32 %0, 175, !dbg !10571
  br i1 %4, label %16, label %5, !dbg !10573

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10574
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10575
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10575
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10569, metadata !DIExpression()), !dbg !10570
  %9 = add nsw i32 %6, -8, !dbg !10576
  %10 = icmp ult i32 %9, 3, !dbg !10576
  br i1 %10, label %16, label %11, !dbg !10578

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.89(%struct.device* noundef %8) #26, !dbg !10579
  br i1 %12, label %13, label %16, !dbg !10580

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10581
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !10582
  br label %16, !dbg !10583

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10570
  ret i32 %17, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.89(%struct.device* noundef %0) unnamed_addr #1 !dbg !10585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10589, metadata !DIExpression()), !dbg !10590
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10591, !srcloc !10593
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.90(%struct.device* noundef %0) #26, !dbg !10594
  ret i1 %2, !dbg !10595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.90(%struct.device* noundef %0) unnamed_addr #1 !dbg !10596 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10598, metadata !DIExpression()), !dbg !10599
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10600
  ret i1 %2, !dbg !10601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10602 {
  ret void, !dbg !10603
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10604 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10606, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 0, metadata !10607, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 2, metadata !10608, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 0, metadata !10609, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 2, metadata !10610, metadata !DIExpression()), !dbg !10611
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10612
  %2 = and i32 %1, 12, !dbg !10613
  call void @llvm.dbg.value(metadata i32 %2, metadata !10606, metadata !DIExpression()), !dbg !10611
  %3 = icmp eq i32 %2, 8, !dbg !10614
  br i1 %3, label %4, label %18, !dbg !10614

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %5, metadata !10609, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10611
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10617
  %7 = and i32 %6, 63, !dbg !10618
  call void @llvm.dbg.value(metadata i32 %7, metadata !10610, metadata !DIExpression()), !dbg !10611
  %8 = udiv i32 16000000, %7, !dbg !10619
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10619
  %10 = lshr i32 %9, 6, !dbg !10619
  %11 = and i32 %10, 511, !dbg !10619
  %12 = mul i32 %11, %8, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %12, metadata !10607, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 %12, metadata !10607, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 %12, metadata !10607, metadata !DIExpression()), !dbg !10611
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10621
  %14 = lshr i32 %13, 15, !dbg !10622
  %15 = and i32 %14, 6, !dbg !10622
  %16 = add nuw nsw i32 %15, 2, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %16, metadata !10608, metadata !DIExpression()), !dbg !10611
  %17 = udiv i32 %12, %16, !dbg !10623
  br label %18, !dbg !10624

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10625
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10626
  %21 = lshr i32 %20, 4, !dbg !10627
  %22 = and i32 %21, 15, !dbg !10627
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10628
  %24 = load i8, i8* %23, align 1, !dbg !10628
  %25 = zext i8 %24 to i32, !dbg !10628
  call void @llvm.dbg.value(metadata i32 %25, metadata !10606, metadata !DIExpression()), !dbg !10611
  %26 = lshr i32 %19, %25, !dbg !10629
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10629
  ret void, !dbg !10630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10631 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !10673, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10674, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10675, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10676, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10677, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10678, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10679, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10680, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10681, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 0, metadata !10682, metadata !DIExpression()), !dbg !10687
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !10688
  %4 = load i32, i32* %3, align 4, !dbg !10688
  %5 = and i32 %4, 1, !dbg !10690
  %6 = icmp eq i32 %5, 0, !dbg !10691
  br i1 %6, label %17, label %7, !dbg !10692

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10693
  %9 = and i32 %8, -100663297, !dbg !10693
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !10693
  %11 = load i32, i32* %10, align 4, !dbg !10693
  %12 = or i32 %9, %11, !dbg !10693
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10693
  %13 = load i32, i32* %10, align 4, !dbg !10695
  %14 = icmp eq i32 %13, 0, !dbg !10697
  %15 = zext i1 %14 to i32, !dbg !10698
  %16 = load i32, i32* %3, align 4, !dbg !10699
  br label %17, !dbg !10698

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !10699
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !10687
  call void @llvm.dbg.value(metadata i32 %19, metadata !10681, metadata !DIExpression()), !dbg !10687
  %20 = and i32 %18, 2, !dbg !10701
  %21 = icmp eq i32 %20, 0, !dbg !10702
  br i1 %21, label %32, label %22, !dbg !10703

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10704
  %24 = and i32 %23, -402653185, !dbg !10704
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !10704
  %26 = load i32, i32* %25, align 4, !dbg !10704
  %27 = or i32 %24, %26, !dbg !10704
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10704
  %28 = load i32, i32* %25, align 4, !dbg !10706
  %29 = icmp eq i32 %28, 0, !dbg !10708
  %30 = select i1 %29, i32 1, i32 %19, !dbg !10709
  %31 = load i32, i32* %3, align 4, !dbg !10710
  br label %32, !dbg !10709

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !10710
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !10687
  call void @llvm.dbg.value(metadata i32 %34, metadata !10681, metadata !DIExpression()), !dbg !10687
  %35 = and i32 %33, 4, !dbg !10712
  %36 = icmp eq i32 %35, 0, !dbg !10713
  br i1 %36, label %49, label %37, !dbg !10714

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10715
  %39 = and i32 %38, -3145729, !dbg !10715
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10715
  %41 = load i32, i32* %40, align 4, !dbg !10715
  %42 = or i32 %39, %41, !dbg !10715
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10715
  %43 = load i32, i32* %40, align 4, !dbg !10717
  %44 = icmp eq i32 %43, 1048576, !dbg !10719
  %45 = select i1 %44, i32 1, i32 %34, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %45, metadata !10681, metadata !DIExpression()), !dbg !10687
  %46 = icmp eq i32 %43, 0, !dbg !10721
  %47 = zext i1 %46 to i32, !dbg !10723
  %48 = load i32, i32* %3, align 4, !dbg !10724
  br label %49, !dbg !10723

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !10724
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !10687
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !10687
  call void @llvm.dbg.value(metadata i32 %52, metadata !10682, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 %51, metadata !10681, metadata !DIExpression()), !dbg !10687
  %53 = and i32 %50, 8, !dbg !10726
  %54 = icmp eq i32 %53, 0, !dbg !10727
  br i1 %54, label %67, label %55, !dbg !10728

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10729
  %57 = and i32 %56, -12582913, !dbg !10729
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10729
  %59 = load i32, i32* %58, align 4, !dbg !10729
  %60 = or i32 %57, %59, !dbg !10729
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10729
  %61 = load i32, i32* %58, align 4, !dbg !10731
  %62 = icmp eq i32 %61, 4194304, !dbg !10733
  %63 = select i1 %62, i32 1, i32 %51, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %63, metadata !10681, metadata !DIExpression()), !dbg !10687
  %64 = icmp eq i32 %61, 0, !dbg !10735
  %65 = select i1 %64, i32 1, i32 %52, !dbg !10737
  %66 = load i32, i32* %3, align 4, !dbg !10738
  br label %67, !dbg !10737

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !10738
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !10687
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !10687
  call void @llvm.dbg.value(metadata i32 %70, metadata !10682, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i32 %69, metadata !10681, metadata !DIExpression()), !dbg !10687
  %71 = and i32 %68, 32, !dbg !10739
  %72 = icmp eq i32 %71, 0, !dbg !10740
  br i1 %72, label %131, label %73, !dbg !10741

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !10742
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !10742
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10683, metadata !DIExpression()), !dbg !10742
  store volatile i32 0, i32* %2, align 4, !dbg !10742
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10742
  %76 = or i32 %75, 268435456, !dbg !10742
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10742
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10742
  %78 = and i32 %77, 268435456, !dbg !10742
  store volatile i32 %78, i32* %2, align 4, !dbg !10742
  %79 = load volatile i32, i32* %2, align 4, !dbg !10742
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !10743
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10744
  %81 = or i32 %80, 256, !dbg !10744
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10744
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %82, metadata !10674, metadata !DIExpression()), !dbg !10687
  br label %83, !dbg !10746

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10747
  %85 = and i32 %84, 256, !dbg !10748
  %86 = icmp eq i32 %85, 0, !dbg !10749
  br i1 %86, label %87, label %91, !dbg !10746

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !10750
  %89 = sub i32 %88, %82, !dbg !10753
  %90 = icmp ugt i32 %89, 2, !dbg !10754
  br i1 %90, label %439, label %83, !dbg !10755, !llvm.loop !10756

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10758
  %93 = and i32 %92, 768, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %93, metadata !10675, metadata !DIExpression()), !dbg !10687
  %94 = icmp eq i32 %93, 0, !dbg !10760
  br i1 %94, label %116, label %95, !dbg !10762

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10763
  %97 = load i32, i32* %96, align 4, !dbg !10763
  %98 = and i32 %97, 768, !dbg !10764
  %99 = icmp eq i32 %93, %98, !dbg !10765
  br i1 %99, label %116, label %100, !dbg !10766

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10767
  %102 = and i32 %101, -769, !dbg !10769
  call void @llvm.dbg.value(metadata i32 %102, metadata !10675, metadata !DIExpression()), !dbg !10687
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10770
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10771
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10772
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10773
  %104 = and i32 %103, 1, !dbg !10773
  %105 = icmp eq i32 %104, 0, !dbg !10773
  br i1 %105, label %116, label %106, !dbg !10775

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %107, metadata !10674, metadata !DIExpression()), !dbg !10687
  br label %108, !dbg !10778

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10779
  %110 = and i32 %109, 2, !dbg !10780
  %111 = icmp eq i32 %110, 0, !dbg !10780
  br i1 %111, label %112, label %116, !dbg !10778

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !10781
  %114 = sub i32 %113, %107, !dbg !10784
  %115 = icmp ugt i32 %114, 5000, !dbg !10785
  br i1 %115, label %439, label %108, !dbg !10786, !llvm.loop !10787

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10789
  %118 = load i32, i32* %117, align 4, !dbg !10789
  %119 = and i32 %118, 768, !dbg !10789
  %120 = icmp eq i32 %119, 768, !dbg !10789
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10789
  %122 = and i32 %121, -2031617, !dbg !10789
  %123 = and i32 %118, 268434687, !dbg !10789
  %124 = select i1 %120, i32 %123, i32 0, !dbg !10789
  %125 = or i32 %122, %124, !dbg !10789
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10789
  %126 = load i32, i32* %117, align 4, !dbg !10789
  %127 = and i32 %126, 4095, !dbg !10789
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10789
  %129 = or i32 %128, %127, !dbg !10789
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10789
  %130 = load i32, i32* %3, align 4, !dbg !10791
  br label %131, !dbg !10793

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !10791
  %133 = and i32 %132, 16, !dbg !10794
  %134 = icmp eq i32 %133, 0, !dbg !10795
  br i1 %134, label %140, label %135, !dbg !10796

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !10797
  %137 = load i8, i8* %136, align 4, !dbg !10797
  %138 = zext i8 %137 to i32, !dbg !10797
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !10797
  %139 = load i32, i32* %3, align 4, !dbg !10799
  br label %140, !dbg !10801

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !10799
  %142 = and i32 %141, 128, !dbg !10802
  %143 = icmp eq i32 %142, 0, !dbg !10803
  br i1 %143, label %151, label %144, !dbg !10804

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10805
  %146 = and i32 %145, -12582913, !dbg !10805
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !10805
  %148 = load i32, i32* %147, align 4, !dbg !10805
  %149 = or i32 %146, %148, !dbg !10805
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10805
  %150 = load i32, i32* %3, align 4, !dbg !10807
  br label %151, !dbg !10809

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !10807
  %153 = and i32 %152, 64, !dbg !10810
  %154 = icmp eq i32 %153, 0, !dbg !10811
  br i1 %154, label %162, label %155, !dbg !10812

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10813
  %157 = and i32 %156, -67108865, !dbg !10813
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !10813
  %159 = load i32, i32* %158, align 4, !dbg !10813
  %160 = or i32 %157, %159, !dbg !10813
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10813
  %161 = load i32, i32* %3, align 4, !dbg !10815
  br label %162, !dbg !10817

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !10815
  %164 = and i32 %163, 256, !dbg !10818
  %165 = icmp eq i32 %164, 0, !dbg !10819
  br i1 %165, label %176, label %166, !dbg !10820

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10821
  %168 = and i32 %167, -134217729, !dbg !10821
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !10821
  %170 = load i32, i32* %169, align 4, !dbg !10821
  %171 = or i32 %168, %170, !dbg !10821
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10821
  %172 = load i32, i32* %169, align 4, !dbg !10823
  %173 = icmp eq i32 %172, 134217728, !dbg !10825
  %174 = select i1 %173, i32 1, i32 %70, !dbg !10826
  %175 = load i32, i32* %3, align 4, !dbg !10827
  br label %176, !dbg !10826

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !10827
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !10687
  call void @llvm.dbg.value(metadata i32 %178, metadata !10682, metadata !DIExpression()), !dbg !10687
  %179 = and i32 %177, 512, !dbg !10829
  %180 = icmp eq i32 %179, 0, !dbg !10830
  br i1 %180, label %188, label %181, !dbg !10831

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10832
  %183 = and i32 %182, -268435457, !dbg !10832
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !10832
  %185 = load i32, i32* %184, align 4, !dbg !10832
  %186 = or i32 %183, %185, !dbg !10832
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10832
  %187 = load i32, i32* %3, align 4, !dbg !10834
  br label %188, !dbg !10836

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !10834
  %190 = and i32 %189, 1024, !dbg !10837
  %191 = icmp eq i32 %190, 0, !dbg !10838
  br i1 %191, label %204, label %192, !dbg !10839

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10840
  %194 = and i32 %193, -536870913, !dbg !10840
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !10840
  %196 = load i32, i32* %195, align 4, !dbg !10840
  %197 = or i32 %194, %196, !dbg !10840
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10840
  %198 = load i32, i32* %195, align 4, !dbg !10842
  %199 = icmp eq i32 %198, 536870912, !dbg !10844
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %69, metadata !10681, metadata !DIExpression()), !dbg !10687
  br i1 %201, label %209, label %202, !dbg !10845

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !10846
  br label %206, !dbg !10845

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !10681, metadata !DIExpression()), !dbg !10687
  %205 = icmp eq i32 %69, 1, !dbg !10848
  br i1 %205, label %209, label %206, !dbg !10849

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !10846
  %208 = icmp eq i32 %207, 2048, !dbg !10850
  br i1 %208, label %209, label %356, !dbg !10851

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !10852
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %210, metadata !10674, metadata !DIExpression()), !dbg !10687
  br label %211, !dbg !10855

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10856
  %213 = and i32 %212, 134217728, !dbg !10856
  %214 = icmp eq i32 %213, 0, !dbg !10856
  br i1 %214, label %219, label %215, !dbg !10855

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !10857
  %217 = sub i32 %216, %210, !dbg !10860
  %218 = icmp ugt i32 %217, 2, !dbg !10861
  br i1 %218, label %439, label %211, !dbg !10862, !llvm.loop !10863

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !10865
  %221 = and i32 %220, 1, !dbg !10867
  %222 = icmp eq i32 %221, 0, !dbg !10868
  br i1 %222, label %227, label %223, !dbg !10869

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !10870
  %225 = load i32, i32* %224, align 4, !dbg !10870
  %226 = icmp eq i32 %225, 0, !dbg !10871
  br i1 %226, label %234, label %227, !dbg !10872

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !10873
  %229 = icmp eq i32 %228, 0, !dbg !10874
  br i1 %229, label %252, label %230, !dbg !10875

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !10876
  %232 = load i32, i32* %231, align 4, !dbg !10876
  %233 = icmp eq i32 %232, 0, !dbg !10877
  br i1 %233, label %234, label %252, !dbg !10878

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10879
  %236 = and i32 %235, 196608, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %236, metadata !10676, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10687
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10882
  %238 = and i32 %237, 251658240, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %238, metadata !10677, metadata !DIExpression()), !dbg !10687
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10884
  %240 = load i32, i32* %239, align 4, !dbg !10884
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10884
  %242 = load i32, i32* %241, align 4, !dbg !10884
  %243 = shl i32 %242, 6, !dbg !10884
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !10884
  %245 = load i32, i32* %244, align 4, !dbg !10884
  %246 = shl i32 %245, 28, !dbg !10884
  %247 = or i32 %240, %236, !dbg !10884
  %248 = or i32 %247, %238, !dbg !10884
  %249 = or i32 %248, %243, !dbg !10884
  %250 = or i32 %249, %246, !dbg !10884
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10884
  %251 = load i32, i32* %3, align 4, !dbg !10885
  br label %252, !dbg !10887

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !10885
  %254 = and i32 %253, 4, !dbg !10888
  %255 = icmp eq i32 %254, 0, !dbg !10889
  br i1 %255, label %260, label %256, !dbg !10890

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10891
  %258 = load i32, i32* %257, align 4, !dbg !10891
  %259 = icmp eq i32 %258, 1048576, !dbg !10892
  br i1 %259, label %267, label %260, !dbg !10893

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !10894
  %262 = icmp eq i32 %261, 0, !dbg !10895
  br i1 %262, label %291, label %263, !dbg !10896

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10897
  %265 = load i32, i32* %264, align 4, !dbg !10897
  %266 = icmp eq i32 %265, 4194304, !dbg !10898
  br i1 %266, label %267, label %291, !dbg !10899

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10900
  %269 = and i32 %268, 196608, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %269, metadata !10676, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10687
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10903
  %271 = and i32 %270, 1879048192, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %271, metadata !10678, metadata !DIExpression()), !dbg !10687
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10905
  %273 = load i32, i32* %272, align 4, !dbg !10905
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10905
  %275 = load i32, i32* %274, align 4, !dbg !10905
  %276 = shl i32 %275, 6, !dbg !10905
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10905
  %278 = load i32, i32* %277, align 4, !dbg !10905
  %279 = shl i32 %278, 24, !dbg !10905
  %280 = or i32 %273, %269, !dbg !10905
  %281 = or i32 %280, %271, !dbg !10905
  %282 = or i32 %281, %276, !dbg !10905
  %283 = or i32 %282, %279, !dbg !10905
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10905
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10906
  %285 = and i32 %284, -32, !dbg !10906
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !10906
  %287 = load i32, i32* %286, align 4, !dbg !10906
  %288 = add i32 %287, -1, !dbg !10906
  %289 = or i32 %288, %285, !dbg !10906
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10906
  %290 = load i32, i32* %3, align 4, !dbg !10907
  br label %291, !dbg !10909

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !10907
  %293 = and i32 %292, 1024, !dbg !10910
  %294 = icmp eq i32 %293, 0, !dbg !10911
  br i1 %294, label %321, label %295, !dbg !10912

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !10913
  %297 = load i32, i32* %296, align 4, !dbg !10913
  %298 = icmp eq i32 %297, 536870912, !dbg !10914
  br i1 %298, label %299, label %321, !dbg !10915

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %300, metadata !10677, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10687
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10918
  %302 = and i32 %301, 1879048192, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %302, metadata !10678, metadata !DIExpression()), !dbg !10687
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10920
  %304 = load i32, i32* %303, align 4, !dbg !10920
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10920
  %306 = load i32, i32* %305, align 4, !dbg !10920
  %307 = shl i32 %306, 6, !dbg !10920
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !10920
  %309 = load i32, i32* %308, align 4, !dbg !10920
  %310 = shl i32 %309, 15, !dbg !10920
  %311 = add i32 %310, -65536, !dbg !10920
  %312 = and i32 %311, -65536, !dbg !10920
  %313 = shl i32 %300, 9, !dbg !10920
  %314 = and i32 %313, 100663296, !dbg !10920
  %315 = add nuw nsw i32 %314, 33554432, !dbg !10920
  %316 = or i32 %302, %304, !dbg !10920
  %317 = or i32 %316, %315, !dbg !10920
  %318 = or i32 %317, %307, !dbg !10920
  %319 = or i32 %318, %312, !dbg !10920
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10920
  %320 = load i32, i32* %3, align 4, !dbg !10921
  br label %321, !dbg !10923

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !10921
  %323 = and i32 %322, 2048, !dbg !10924
  %324 = icmp eq i32 %323, 0, !dbg !10925
  br i1 %324, label %346, label %325, !dbg !10926

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10927
  %327 = load i32, i32* %326, align 4, !dbg !10927
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10927
  %329 = load i32, i32* %328, align 4, !dbg !10927
  %330 = shl i32 %329, 6, !dbg !10927
  %331 = or i32 %330, %327, !dbg !10927
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !10927
  %333 = load i32, i32* %332, align 4, !dbg !10927
  %334 = shl i32 %333, 15, !dbg !10927
  %335 = add i32 %334, -65536, !dbg !10927
  %336 = and i32 %335, -65536, !dbg !10927
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10927
  %338 = load i32, i32* %337, align 4, !dbg !10927
  %339 = shl i32 %338, 24, !dbg !10927
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !10927
  %341 = load i32, i32* %340, align 4, !dbg !10927
  %342 = shl i32 %341, 28, !dbg !10927
  %343 = or i32 %331, %339, !dbg !10927
  %344 = or i32 %343, %336, !dbg !10927
  %345 = or i32 %344, %342, !dbg !10927
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10927
  br label %346, !dbg !10929

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !10930
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %347, metadata !10674, metadata !DIExpression()), !dbg !10687
  br label %348, !dbg !10932

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10933
  %350 = and i32 %349, 134217728, !dbg !10934
  %351 = icmp eq i32 %350, 0, !dbg !10934
  br i1 %351, label %352, label %356, !dbg !10932

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !10935
  %354 = sub i32 %353, %347, !dbg !10938
  %355 = icmp ugt i32 %354, 2, !dbg !10939
  br i1 %355, label %439, label %348, !dbg !10940, !llvm.loop !10941

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !10943
  br i1 %357, label %358, label %439, !dbg !10945

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10946
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %359, metadata !10674, metadata !DIExpression()), !dbg !10687
  br label %360, !dbg !10949

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10950
  %362 = and i32 %361, 536870912, !dbg !10950
  %363 = icmp eq i32 %362, 0, !dbg !10950
  br i1 %363, label %368, label %364, !dbg !10949

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !10951
  %366 = sub i32 %365, %359, !dbg !10954
  %367 = icmp ugt i32 %366, 2, !dbg !10955
  br i1 %367, label %439, label %360, !dbg !10956, !llvm.loop !10957

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !10959
  %370 = and i32 %369, 4, !dbg !10961
  %371 = icmp eq i32 %370, 0, !dbg !10962
  br i1 %371, label %376, label %372, !dbg !10963

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10964
  %374 = load i32, i32* %373, align 4, !dbg !10964
  %375 = icmp eq i32 %374, 0, !dbg !10965
  br i1 %375, label %383, label %376, !dbg !10966

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !10967
  %378 = icmp eq i32 %377, 0, !dbg !10968
  br i1 %378, label %405, label %379, !dbg !10969

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10970
  %381 = load i32, i32* %380, align 4, !dbg !10970
  %382 = icmp eq i32 %381, 0, !dbg !10971
  br i1 %382, label %383, label %405, !dbg !10972

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10973
  %385 = and i32 %384, 196608, !dbg !10975
  call void @llvm.dbg.value(metadata i32 %385, metadata !10679, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10687
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !10976
  %387 = load i32, i32* %386, align 4, !dbg !10976
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !10976
  %389 = load i32, i32* %388, align 4, !dbg !10976
  %390 = shl i32 %389, 6, !dbg !10976
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !10976
  %392 = load i32, i32* %391, align 4, !dbg !10976
  %393 = shl i32 %392, 24, !dbg !10976
  %394 = or i32 %385, %387, !dbg !10976
  %395 = or i32 %394, %390, !dbg !10976
  %396 = or i32 %395, %393, !dbg !10976
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10976
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10977
  %398 = and i32 %397, -7937, !dbg !10977
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !10977
  %400 = load i32, i32* %399, align 4, !dbg !10977
  %401 = shl i32 %400, 8, !dbg !10977
  %402 = add i32 %401, -256, !dbg !10977
  %403 = or i32 %402, %398, !dbg !10977
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10977
  %404 = load i32, i32* %3, align 4, !dbg !10978
  br label %405, !dbg !10980

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !10978
  %407 = and i32 %406, 256, !dbg !10981
  %408 = icmp eq i32 %407, 0, !dbg !10982
  br i1 %408, label %429, label %409, !dbg !10983

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !10984
  %411 = load i32, i32* %410, align 4, !dbg !10984
  %412 = icmp eq i32 %411, 134217728, !dbg !10985
  br i1 %412, label %413, label %429, !dbg !10986

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10987
  %415 = and i32 %414, 251658240, !dbg !10989
  call void @llvm.dbg.value(metadata i32 %415, metadata !10680, metadata !DIExpression()), !dbg !10687
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !10990
  %417 = load i32, i32* %416, align 4, !dbg !10990
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !10990
  %419 = load i32, i32* %418, align 4, !dbg !10990
  %420 = shl i32 %419, 6, !dbg !10990
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !10990
  %422 = load i32, i32* %421, align 4, !dbg !10990
  %423 = shl i32 %422, 15, !dbg !10990
  %424 = add i32 %423, -65536, !dbg !10990
  %425 = and i32 %424, -65536, !dbg !10990
  %426 = or i32 %415, %417, !dbg !10990
  %427 = or i32 %426, %420, !dbg !10990
  %428 = or i32 %427, %425, !dbg !10990
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10990
  br label %429, !dbg !10991

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10992
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %430, metadata !10674, metadata !DIExpression()), !dbg !10687
  br label %431, !dbg !10994

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10995
  %433 = and i32 %432, 536870912, !dbg !10996
  %434 = icmp eq i32 %433, 0, !dbg !10996
  br i1 %434, label %435, label %439, !dbg !10994

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !10997
  %437 = sub i32 %436, %430, !dbg !11000
  %438 = icmp ugt i32 %437, 2, !dbg !11001
  br i1 %438, label %439, label %431, !dbg !11002, !llvm.loop !11003

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !10687
  ret i32 %440, !dbg !11005
}

; Function Attrs: optsize
declare !dbg !11006 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !11008 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11012, metadata !DIExpression()), !dbg !11014
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11015
  store i32 2047, i32* %2, align 4, !dbg !11016
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11017
  %4 = and i32 %3, 63, !dbg !11018
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11019
  store i32 %4, i32* %5, align 4, !dbg !11020
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11021
  %7 = lshr i32 %6, 6, !dbg !11022
  %8 = and i32 %7, 511, !dbg !11022
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11023
  store i32 %8, i32* %9, align 4, !dbg !11024
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11025
  %11 = lshr i32 %10, 15, !dbg !11026
  %12 = and i32 %11, 6, !dbg !11026
  %13 = add nuw nsw i32 %12, 2, !dbg !11026
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11027
  store i32 %13, i32* %14, align 4, !dbg !11028
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11029
  %16 = lshr i32 %15, 24, !dbg !11030
  %17 = and i32 %16, 15, !dbg !11030
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11031
  store i32 %17, i32* %18, align 4, !dbg !11032
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11033
  %20 = lshr i32 %19, 28, !dbg !11034
  %21 = and i32 %20, 7, !dbg !11034
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11035
  store i32 %21, i32* %22, align 4, !dbg !11036
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11037
  %24 = and i32 %23, 63, !dbg !11038
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11039
  store i32 %24, i32* %25, align 4, !dbg !11040
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11041
  %27 = lshr i32 %26, 6, !dbg !11042
  %28 = and i32 %27, 511, !dbg !11042
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11043
  store i32 %28, i32* %29, align 4, !dbg !11044
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11045
  %31 = lshr i32 %30, 15, !dbg !11046
  %32 = and i32 %31, 6, !dbg !11046
  %33 = add nuw nsw i32 %32, 2, !dbg !11046
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11047
  store i32 %33, i32* %34, align 4, !dbg !11048
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11049
  %36 = lshr i32 %35, 24, !dbg !11050
  %37 = and i32 %36, 15, !dbg !11050
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11051
  store i32 %37, i32* %38, align 4, !dbg !11052
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11053
  %40 = and i32 %39, 31, !dbg !11054
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11055
  store i32 %40, i32* %41, align 4, !dbg !11056
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11057
  %43 = lshr i32 %42, 8, !dbg !11058
  %44 = and i32 %43, 31, !dbg !11058
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11059
  store i32 %44, i32* %45, align 4, !dbg !11060
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11061
  %47 = and i32 %46, 3145728, !dbg !11061
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11062
  store i32 %47, i32* %48, align 4, !dbg !11063
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11064
  %50 = and i32 %49, 12582912, !dbg !11064
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11065
  store i32 %50, i32* %51, align 4, !dbg !11066
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11067
  %53 = and i32 %52, 100663296, !dbg !11067
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11068
  store i32 %53, i32* %54, align 4, !dbg !11069
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11070
  %56 = and i32 %55, 402653184, !dbg !11070
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11071
  store i32 %56, i32* %57, align 4, !dbg !11072
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11073
  %59 = and i32 %58, 2031616, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %59, metadata !11013, metadata !DIExpression()), !dbg !11014
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11075
  %61 = and i32 %60, 768, !dbg !11076
  %62 = or i32 %61, %59, !dbg !11077
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11078
  store i32 %62, i32* %63, align 4, !dbg !11079
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11080
  %65 = and i32 %64, 67108864, !dbg !11080
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11081
  store i32 %65, i32* %66, align 4, !dbg !11082
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11083
  %68 = and i32 %67, 12582912, !dbg !11083
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11084
  store i32 %68, i32* %69, align 4, !dbg !11085
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11086
  %71 = and i32 %70, 134217728, !dbg !11086
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11087
  store i32 %71, i32* %72, align 4, !dbg !11088
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11089
  %74 = and i32 %73, 268435456, !dbg !11089
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11090
  store i32 %74, i32* %75, align 4, !dbg !11091
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11092
  %77 = and i32 %76, 536870912, !dbg !11092
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11093
  store i32 %77, i32* %78, align 4, !dbg !11094
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11095
  %80 = lshr i32 %79, 24, !dbg !11097
  %81 = trunc i32 %80 to i8, !dbg !11097
  %82 = and i8 %81, 1, !dbg !11097
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11098
  store i8 %82, i8* %83, align 4, !dbg !11100
  ret void, !dbg !11101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #16 !dbg !11102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11104, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 0, metadata !11105, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 0, metadata !11106, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 0, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 0, metadata !11108, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 0, metadata !11109, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 0, metadata !11110, metadata !DIExpression()), !dbg !11111
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11112

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11113
  call void @llvm.dbg.value(metadata i32 %3, metadata !11108, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 %3, metadata !11108, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11111
  %4 = lshr i32 %3, 20, !dbg !11116
  %5 = and i32 %4, 15, !dbg !11116
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11116

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11117
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11121
  %9 = and i32 %8, 63, !dbg !11121
  %10 = udiv i32 16000000, %9, !dbg !11121
  call void @llvm.dbg.value(metadata i32 %10, metadata !11107, metadata !DIExpression()), !dbg !11111
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11122
  %12 = lshr i32 %11, 24, !dbg !11123
  %13 = and i32 %12, 15, !dbg !11123
  call void @llvm.dbg.value(metadata i32 %13, metadata !11105, metadata !DIExpression()), !dbg !11111
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11124
  %15 = lshr i32 %14, 6, !dbg !11125
  %16 = and i32 %15, 511, !dbg !11125
  %17 = mul i32 %16, %10, !dbg !11126
  %18 = udiv i32 %17, %13, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %18, metadata !11106, metadata !DIExpression()), !dbg !11111
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11128
  %20 = lshr i32 %19, 8, !dbg !11129
  %21 = and i32 %20, 31, !dbg !11129
  %22 = add nuw nsw i32 %21, 1, !dbg !11130
  call void @llvm.dbg.value(metadata i32 %22, metadata !11105, metadata !DIExpression()), !dbg !11111
  %23 = udiv i32 %18, %22, !dbg !11131
  call void @llvm.dbg.value(metadata i32 %23, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11132

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11133
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11136
  %27 = and i32 %26, 63, !dbg !11136
  %28 = udiv i32 16000000, %27, !dbg !11136
  call void @llvm.dbg.value(metadata i32 %28, metadata !11107, metadata !DIExpression()), !dbg !11111
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11137
  %30 = lshr i32 %29, 24, !dbg !11138
  %31 = and i32 %30, 15, !dbg !11138
  call void @llvm.dbg.value(metadata i32 %31, metadata !11105, metadata !DIExpression()), !dbg !11111
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11139
  %33 = lshr i32 %32, 6, !dbg !11140
  %34 = and i32 %33, 511, !dbg !11140
  %35 = mul i32 %34, %28, !dbg !11141
  %36 = udiv i32 %35, %31, !dbg !11142
  call void @llvm.dbg.value(metadata i32 %36, metadata !11106, metadata !DIExpression()), !dbg !11111
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11143
  %38 = and i32 %37, 31, !dbg !11144
  %39 = add nuw nsw i32 %38, 1, !dbg !11145
  call void @llvm.dbg.value(metadata i32 %39, metadata !11105, metadata !DIExpression()), !dbg !11111
  %40 = udiv i32 %36, %39, !dbg !11146
  call void @llvm.dbg.value(metadata i32 %40, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11147

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11148
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11151
  %44 = and i32 %43, 63, !dbg !11151
  %45 = udiv i32 16000000, %44, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %45, metadata !11107, metadata !DIExpression()), !dbg !11111
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11152
  %47 = lshr i32 %46, 28, !dbg !11153
  %48 = and i32 %47, 7, !dbg !11153
  call void @llvm.dbg.value(metadata i32 %48, metadata !11105, metadata !DIExpression()), !dbg !11111
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11154
  %50 = lshr i32 %49, 6, !dbg !11155
  %51 = and i32 %50, 511, !dbg !11155
  %52 = mul i32 %51, %45, !dbg !11156
  %53 = udiv i32 %52, %48, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %53, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11158

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11159

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11161
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11106, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11164
  call void @llvm.dbg.value(metadata i32 %58, metadata !11109, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11111
  %59 = lshr i32 %58, 25, !dbg !11166
  %60 = and i32 %59, 3, !dbg !11166
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11166

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11167
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11171
  %64 = and i32 %63, 63, !dbg !11171
  %65 = udiv i32 16000000, %64, !dbg !11171
  call void @llvm.dbg.value(metadata i32 %65, metadata !11107, metadata !DIExpression()), !dbg !11111
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11172
  %67 = lshr i32 %66, 6, !dbg !11173
  %68 = and i32 %67, 511, !dbg !11173
  %69 = mul i32 %68, %65, !dbg !11174
  call void @llvm.dbg.value(metadata i32 %69, metadata !11110, metadata !DIExpression()), !dbg !11111
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11175
  %71 = lshr i32 %70, 28, !dbg !11176
  %72 = and i32 %71, 7, !dbg !11176
  %73 = udiv i32 %69, %72, !dbg !11177
  call void @llvm.dbg.value(metadata i32 %73, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11178

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11179
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11182
  %77 = and i32 %76, 63, !dbg !11182
  %78 = udiv i32 16000000, %77, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %78, metadata !11107, metadata !DIExpression()), !dbg !11111
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11183
  %80 = lshr i32 %79, 6, !dbg !11184
  %81 = and i32 %80, 511, !dbg !11184
  %82 = mul i32 %81, %78, !dbg !11185
  call void @llvm.dbg.value(metadata i32 %82, metadata !11110, metadata !DIExpression()), !dbg !11111
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11186
  %84 = lshr i32 %83, 28, !dbg !11187
  %85 = and i32 %84, 7, !dbg !11187
  %86 = udiv i32 %82, %85, !dbg !11188
  call void @llvm.dbg.value(metadata i32 %86, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11189

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11190
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11106, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %91, metadata !11109, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11111
  %92 = lshr i32 %91, 27, !dbg !11195
  %93 = and i32 %92, 3, !dbg !11195
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11195

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11196
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11200
  %97 = and i32 %96, 63, !dbg !11200
  %98 = udiv i32 16000000, %97, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %98, metadata !11107, metadata !DIExpression()), !dbg !11111
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11201
  %100 = lshr i32 %99, 6, !dbg !11202
  %101 = and i32 %100, 511, !dbg !11202
  %102 = mul i32 %101, %98, !dbg !11203
  call void @llvm.dbg.value(metadata i32 %102, metadata !11110, metadata !DIExpression()), !dbg !11111
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11204
  %104 = lshr i32 %103, 28, !dbg !11205
  %105 = and i32 %104, 7, !dbg !11205
  %106 = udiv i32 %102, %105, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %106, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11207

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11208
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11111
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11211
  %110 = and i32 %109, 63, !dbg !11211
  %111 = udiv i32 16000000, %110, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %111, metadata !11107, metadata !DIExpression()), !dbg !11111
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11212
  %113 = lshr i32 %112, 6, !dbg !11213
  %114 = and i32 %113, 511, !dbg !11213
  %115 = mul i32 %114, %111, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %115, metadata !11110, metadata !DIExpression()), !dbg !11111
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11215
  %117 = lshr i32 %116, 28, !dbg !11216
  %118 = and i32 %117, 7, !dbg !11216
  %119 = udiv i32 %115, %118, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %119, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123, !dbg !11218

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11219
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11106, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11106, metadata !DIExpression()), !dbg !11111
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11111
  call void @llvm.dbg.value(metadata i32 %124, metadata !11106, metadata !DIExpression()), !dbg !11111
  ret i32 %124, !dbg !11222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !11223 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11227, metadata !DIExpression()), !dbg !11228
  %2 = icmp eq i8 %0, 1, !dbg !11229
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11231
  %4 = and i32 %3, -9, !dbg !11232
  %5 = select i1 %2, i32 8, i32 0, !dbg !11232
  %6 = or i32 %4, %5, !dbg !11232
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11231
  ret void, !dbg !11233
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11234 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11239, metadata !DIExpression()), !dbg !11241
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11242
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !11243
  call void @llvm.dbg.value(metadata i32 %2, metadata !11240, metadata !DIExpression()), !dbg !11241
  br label %3, !dbg !11244

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11245
  %5 = and i32 %4, 134217728, !dbg !11245
  %6 = icmp eq i32 %5, 0, !dbg !11245
  br i1 %6, label %11, label %7, !dbg !11244

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !11246
  %9 = sub i32 %8, %2, !dbg !11249
  %10 = icmp ugt i32 %9, 2, !dbg !11250
  br i1 %10, label %41, label %3, !dbg !11251, !llvm.loop !11252

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11254
  %13 = load i32, i32* %12, align 4, !dbg !11254
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11254
  %15 = load i32, i32* %14, align 4, !dbg !11254
  %16 = shl i32 %15, 6, !dbg !11254
  %17 = or i32 %16, %13, !dbg !11254
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11254
  %19 = load i32, i32* %18, align 4, !dbg !11254
  %20 = shl i32 %19, 15, !dbg !11254
  %21 = add i32 %20, -65536, !dbg !11254
  %22 = and i32 %21, -65536, !dbg !11254
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11254
  %24 = load i32, i32* %23, align 4, !dbg !11254
  %25 = shl i32 %24, 24, !dbg !11254
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11254
  %27 = load i32, i32* %26, align 4, !dbg !11254
  %28 = shl i32 %27, 28, !dbg !11254
  %29 = or i32 %17, %25, !dbg !11254
  %30 = or i32 %29, %22, !dbg !11254
  %31 = or i32 %30, %28, !dbg !11254
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11254
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11255
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %32, metadata !11240, metadata !DIExpression()), !dbg !11241
  br label %33, !dbg !11257

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11258
  %35 = and i32 %34, 134217728, !dbg !11259
  %36 = icmp eq i32 %35, 0, !dbg !11259
  br i1 %36, label %37, label %41, !dbg !11257

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !11260
  %39 = sub i32 %38, %32, !dbg !11263
  %40 = icmp ugt i32 %39, 2, !dbg !11264
  br i1 %40, label %41, label %33, !dbg !11265, !llvm.loop !11266

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11241
  ret i32 %42, !dbg !11268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11269 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11274
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11275
  call void @llvm.dbg.value(metadata i32 %1, metadata !11273, metadata !DIExpression()), !dbg !11276
  br label %2, !dbg !11277

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11278
  %4 = and i32 %3, 134217728, !dbg !11278
  %5 = icmp eq i32 %4, 0, !dbg !11279
  br i1 %5, label %10, label %6, !dbg !11277

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !11280
  %8 = sub i32 %7, %1, !dbg !11283
  %9 = icmp ugt i32 %8, 2, !dbg !11284
  br i1 %9, label %10, label %2, !dbg !11285, !llvm.loop !11286

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11276
  ret i32 %11, !dbg !11288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11289 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11294, metadata !DIExpression()), !dbg !11296
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11297
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !11298
  call void @llvm.dbg.value(metadata i32 %2, metadata !11295, metadata !DIExpression()), !dbg !11296
  br label %3, !dbg !11299

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11300
  %5 = and i32 %4, 536870912, !dbg !11300
  %6 = icmp eq i32 %5, 0, !dbg !11300
  br i1 %6, label %11, label %7, !dbg !11299

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !11301
  %9 = sub i32 %8, %2, !dbg !11304
  %10 = icmp ugt i32 %9, 2, !dbg !11305
  br i1 %10, label %37, label %3, !dbg !11306, !llvm.loop !11307

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11309
  %13 = load i32, i32* %12, align 4, !dbg !11309
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11309
  %15 = load i32, i32* %14, align 4, !dbg !11309
  %16 = shl i32 %15, 6, !dbg !11309
  %17 = or i32 %16, %13, !dbg !11309
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11309
  %19 = load i32, i32* %18, align 4, !dbg !11309
  %20 = shl i32 %19, 15, !dbg !11309
  %21 = add i32 %20, -65536, !dbg !11309
  %22 = and i32 %21, -65536, !dbg !11309
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11309
  %24 = load i32, i32* %23, align 4, !dbg !11309
  %25 = shl i32 %24, 24, !dbg !11309
  %26 = or i32 %17, %25, !dbg !11309
  %27 = or i32 %26, %22, !dbg !11309
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11309
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11310
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %28, metadata !11295, metadata !DIExpression()), !dbg !11296
  br label %29, !dbg !11312

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11313
  %31 = and i32 %30, 536870912, !dbg !11314
  %32 = icmp eq i32 %31, 0, !dbg !11314
  br i1 %32, label %33, label %37, !dbg !11312

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !11315
  %35 = sub i32 %34, %28, !dbg !11318
  %36 = icmp ugt i32 %35, 2, !dbg !11319
  br i1 %36, label %37, label %29, !dbg !11320, !llvm.loop !11321

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11296
  ret i32 %38, !dbg !11323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11324 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11327
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %1, metadata !11326, metadata !DIExpression()), !dbg !11329
  br label %2, !dbg !11330

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11331
  %4 = and i32 %3, 536870912, !dbg !11331
  %5 = icmp eq i32 %4, 0, !dbg !11331
  br i1 %5, label %10, label %6, !dbg !11330

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !11332
  %8 = sub i32 %7, %1, !dbg !11335
  %9 = icmp ugt i32 %8, 2, !dbg !11336
  br i1 %9, label %10, label %2, !dbg !11337, !llvm.loop !11338

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11329
  ret i32 %11, !dbg !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !11341 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11343, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 0, metadata !11344, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 0, metadata !11345, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 0, metadata !11346, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 0, metadata !11347, metadata !DIExpression()), !dbg !11348
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11349
  %2 = lshr i32 %1, 2, !dbg !11350
  %3 = and i32 %2, 3, !dbg !11350
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11350

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11351
  %6 = and i32 %5, 63, !dbg !11354
  call void @llvm.dbg.value(metadata i32 %6, metadata !11343, metadata !DIExpression()), !dbg !11348
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11355
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11357
  %9 = lshr i32 %8, 6, !dbg !11357
  %10 = and i32 %9, 511, !dbg !11357
  %11 = zext i32 %10 to i64, !dbg !11357
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11357
  %13 = zext i32 %6 to i64, !dbg !11357
  %14 = udiv i64 %12, %13, !dbg !11357
  %15 = trunc i64 %14 to i32, !dbg !11357
  call void @llvm.dbg.value(metadata i32 %15, metadata !11344, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 %15, metadata !11344, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 %15, metadata !11344, metadata !DIExpression()), !dbg !11348
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11358
  %17 = lshr i32 %16, 15, !dbg !11359
  %18 = and i32 %17, 6, !dbg !11359
  %19 = add nuw nsw i32 %18, 2, !dbg !11359
  call void @llvm.dbg.value(metadata i32 %19, metadata !11345, metadata !DIExpression()), !dbg !11348
  %20 = udiv i32 %15, %19, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %20, metadata !11347, metadata !DIExpression()), !dbg !11348
  br label %38, !dbg !11361

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11362
  %23 = and i32 %22, 63, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %23, metadata !11343, metadata !DIExpression()), !dbg !11348
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11365
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11367
  %26 = lshr i32 %25, 6, !dbg !11367
  %27 = and i32 %26, 511, !dbg !11367
  %28 = zext i32 %27 to i64, !dbg !11367
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11367
  %30 = zext i32 %23 to i64, !dbg !11367
  %31 = udiv i64 %29, %30, !dbg !11367
  %32 = trunc i64 %31 to i32, !dbg !11367
  call void @llvm.dbg.value(metadata i32 %32, metadata !11344, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 %32, metadata !11344, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 %32, metadata !11344, metadata !DIExpression()), !dbg !11348
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11368
  %34 = lshr i32 %33, 28, !dbg !11369
  %35 = and i32 %34, 7, !dbg !11369
  call void @llvm.dbg.value(metadata i32 %35, metadata !11346, metadata !DIExpression()), !dbg !11348
  %36 = udiv i32 %32, %35, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %36, metadata !11347, metadata !DIExpression()), !dbg !11348
  br label %38, !dbg !11371

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11372
  call void @llvm.dbg.value(metadata i32 %39, metadata !11347, metadata !DIExpression()), !dbg !11348
  ret i32 %39, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11374 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11377
  call void @llvm.dbg.value(metadata i32 %1, metadata !11376, metadata !DIExpression()), !dbg !11378
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11379
  %3 = or i32 %2, 1, !dbg !11379
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11379
  br label %4, !dbg !11380

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11381
  %6 = and i32 %5, 2, !dbg !11381
  %7 = icmp eq i32 %6, 0, !dbg !11382
  br i1 %7, label %8, label %12, !dbg !11380

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !11383
  %10 = sub i32 %9, %1, !dbg !11386
  %11 = icmp ugt i32 %10, 2, !dbg !11387
  br i1 %11, label %89, label %4, !dbg !11388, !llvm.loop !11389

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11391
  %14 = or i32 %13, 128, !dbg !11391
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11391
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %15, metadata !11376, metadata !DIExpression()), !dbg !11378
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11393
  br label %16, !dbg !11394

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11395
  %18 = and i32 %17, 12, !dbg !11395
  %19 = icmp eq i32 %18, 0, !dbg !11396
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !11378
  br i1 %19, label %24, label %21, !dbg !11394

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11397
  %23 = icmp ugt i32 %22, 5000, !dbg !11400
  br i1 %23, label %89, label %16, !dbg !11401, !llvm.loop !11402

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11376, metadata !DIExpression()), !dbg !11378
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11404
  %26 = and i32 %25, -851969, !dbg !11404
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11404
  br label %27, !dbg !11405

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11406
  %29 = and i32 %28, 131072, !dbg !11406
  %30 = icmp eq i32 %29, 0, !dbg !11407
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !11378
  br i1 %30, label %35, label %32, !dbg !11405

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11408
  %34 = icmp ugt i32 %33, 100, !dbg !11411
  br i1 %34, label %89, label %27, !dbg !11412, !llvm.loop !11413

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11376, metadata !DIExpression()), !dbg !11378
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11415
  %37 = and i32 %36, -16777217, !dbg !11415
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11415
  br label %38, !dbg !11416

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11417
  %40 = and i32 %39, 33554432, !dbg !11417
  %41 = icmp eq i32 %40, 0, !dbg !11418
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !11378
  br i1 %41, label %46, label %43, !dbg !11416

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11419
  %45 = icmp ugt i32 %44, 2, !dbg !11422
  br i1 %45, label %89, label %38, !dbg !11423, !llvm.loop !11424

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11376, metadata !DIExpression()), !dbg !11378
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11426
  %48 = and i32 %47, -67108865, !dbg !11426
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11426
  br label %49, !dbg !11427

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11428
  %51 = and i32 %50, 134217728, !dbg !11428
  %52 = icmp eq i32 %51, 0, !dbg !11429
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !11378
  br i1 %52, label %57, label %54, !dbg !11427

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11430
  %56 = icmp ugt i32 %55, 2, !dbg !11433
  br i1 %56, label %89, label %49, !dbg !11434, !llvm.loop !11435

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11376, metadata !DIExpression()), !dbg !11378
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11437
  %59 = and i32 %58, -268435457, !dbg !11437
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11437
  br label %60, !dbg !11438

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11439
  %62 = and i32 %61, 536870912, !dbg !11439
  %63 = icmp eq i32 %62, 0, !dbg !11440
  br i1 %63, label %68, label %64, !dbg !11438

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !11441
  %66 = sub i32 %65, %53, !dbg !11444
  %67 = icmp ugt i32 %66, 2, !dbg !11445
  br i1 %67, label %89, label %60, !dbg !11446, !llvm.loop !11447

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11449
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11450
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11451
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11452
  %70 = and i32 %69, -7937, !dbg !11452
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11452
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11453
  %72 = and i32 %71, -8193, !dbg !11453
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11453
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11454
  %74 = and i32 %73, -16385, !dbg !11454
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11454
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11455
  %76 = or i32 %75, 10420224, !dbg !11455
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11455
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11456
  %78 = or i32 %77, 2097152, !dbg !11456
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11456
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11457
  %80 = or i32 %79, 4194304, !dbg !11457
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11457
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11458
  %82 = and i32 %81, -2, !dbg !11458
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11458
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11459
  %84 = or i32 %83, 16777216, !dbg !11459
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11459
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !11460
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !11461
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !11463
  %87 = icmp ne i32 %86, 0, !dbg !11464
  %88 = zext i1 %87 to i32, !dbg !11465
  br label %89, !dbg !11465

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11378
  ret i32 %90, !dbg !11466
}

; Function Attrs: optsize
declare !dbg !11467 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11470 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11496, metadata !DIExpression()), !dbg !11507
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11508
  br i1 %3, label %337, label %4, !dbg !11510

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11511
  %6 = load i32, i32* %5, align 4, !dbg !11511
  %7 = and i32 %6, 1, !dbg !11513
  %8 = icmp eq i32 %7, 0, !dbg !11514
  br i1 %8, label %74, label %9, !dbg !11515

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11516
  %11 = and i32 %10, 12, !dbg !11516
  %12 = icmp eq i32 %11, 4, !dbg !11519
  br i1 %12, label %29, label %13, !dbg !11520

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11521
  %15 = and i32 %14, 12, !dbg !11521
  %16 = icmp eq i32 %15, 8, !dbg !11522
  br i1 %16, label %17, label %21, !dbg !11523

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11524
  %19 = and i32 %18, 4194304, !dbg !11525
  %20 = icmp eq i32 %19, 0, !dbg !11526
  br i1 %20, label %21, label %29, !dbg !11527

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11528
  %23 = and i32 %22, 12, !dbg !11528
  %24 = icmp eq i32 %23, 12, !dbg !11529
  br i1 %24, label %25, label %37, !dbg !11530

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11531
  %27 = and i32 %26, 4194304, !dbg !11532
  %28 = icmp eq i32 %27, 0, !dbg !11533
  br i1 %28, label %37, label %29, !dbg !11534

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11535
  %31 = and i32 %30, 131072, !dbg !11535
  %32 = icmp eq i32 %31, 0, !dbg !11535
  br i1 %32, label %74, label %33, !dbg !11538

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11539
  %35 = load i32, i32* %34, align 4, !dbg !11539
  %36 = icmp eq i32 %35, 0, !dbg !11540
  br i1 %36, label %337, label %74, !dbg !11541

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11542
  %39 = load i32, i32* %38, align 4, !dbg !11542
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !11546

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11547
  %42 = or i32 %41, 65536, !dbg !11547
  br label %53, !dbg !11547

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11549
  %45 = or i32 %44, 262144, !dbg !11549
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11549
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11549
  %47 = or i32 %46, 65536, !dbg !11549
  br label %53, !dbg !11549

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11552
  %50 = and i32 %49, -65537, !dbg !11552
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11552
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11552
  %52 = and i32 %51, -262145, !dbg !11552
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11554
  %55 = load i32, i32* %38, align 4, !dbg !11555
  %56 = icmp eq i32 %55, 0, !dbg !11557
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !11558
  call void @llvm.dbg.value(metadata i32 %57, metadata !11497, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %57, metadata !11497, metadata !DIExpression()), !dbg !11507
  br i1 %56, label %66, label %58, !dbg !11559

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11560
  %60 = and i32 %59, 131072, !dbg !11562
  %61 = icmp eq i32 %60, 0, !dbg !11562
  br i1 %61, label %62, label %74, !dbg !11563

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11564
  %64 = sub i32 %63, %57, !dbg !11567
  %65 = icmp ugt i32 %64, 100, !dbg !11568
  br i1 %65, label %337, label %58, !dbg !11569, !llvm.loop !11570

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11572
  %68 = and i32 %67, 131072, !dbg !11572
  %69 = icmp eq i32 %68, 0, !dbg !11572
  br i1 %69, label %74, label %70, !dbg !11574

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !11575
  %72 = sub i32 %71, %57, !dbg !11578
  %73 = icmp ugt i32 %72, 100, !dbg !11579
  br i1 %73, label %337, label %66, !dbg !11580, !llvm.loop !11581

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !11583
  %76 = and i32 %75, 2, !dbg !11585
  %77 = icmp eq i32 %76, 0, !dbg !11586
  br i1 %77, label %137, label %78, !dbg !11587

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11588
  %80 = and i32 %79, 12, !dbg !11588
  %81 = icmp eq i32 %80, 0, !dbg !11591
  br i1 %81, label %98, label %82, !dbg !11592

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11593
  %84 = and i32 %83, 12, !dbg !11593
  %85 = icmp eq i32 %84, 8, !dbg !11594
  br i1 %85, label %86, label %90, !dbg !11595

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11596
  %88 = and i32 %87, 4194304, !dbg !11597
  %89 = icmp eq i32 %88, 0, !dbg !11598
  br i1 %89, label %98, label %90, !dbg !11599

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11600
  %92 = and i32 %91, 12, !dbg !11600
  %93 = icmp eq i32 %92, 12, !dbg !11601
  br i1 %93, label %94, label %106, !dbg !11602

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11603
  %96 = and i32 %95, 4194304, !dbg !11604
  %97 = icmp eq i32 %96, 0, !dbg !11605
  br i1 %97, label %98, label %106, !dbg !11606

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11607
  %100 = and i32 %99, 2, !dbg !11607
  %101 = icmp eq i32 %100, 0, !dbg !11607
  br i1 %101, label %130, label %102, !dbg !11610

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11611
  %104 = load i32, i32* %103, align 4, !dbg !11611
  %105 = icmp eq i32 %104, 1, !dbg !11612
  br i1 %105, label %130, label %337, !dbg !11613

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11614
  %108 = load i32, i32* %107, align 4, !dbg !11614
  %109 = icmp eq i32 %108, 0, !dbg !11617
  br i1 %109, label %120, label %110, !dbg !11618

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11619
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11621
  call void @llvm.dbg.value(metadata i32 %111, metadata !11497, metadata !DIExpression()), !dbg !11507
  br label %112, !dbg !11622

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11623
  %114 = and i32 %113, 2, !dbg !11624
  %115 = icmp eq i32 %114, 0, !dbg !11624
  br i1 %115, label %116, label %130, !dbg !11622

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !11625
  %118 = sub i32 %117, %111, !dbg !11628
  %119 = icmp ugt i32 %118, 2, !dbg !11629
  br i1 %119, label %337, label %112, !dbg !11630, !llvm.loop !11631

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11633
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %121, metadata !11497, metadata !DIExpression()), !dbg !11507
  br label %122, !dbg !11636

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11637
  %124 = and i32 %123, 2, !dbg !11637
  %125 = icmp eq i32 %124, 0, !dbg !11637
  br i1 %125, label %137, label %126, !dbg !11636

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !11638
  %128 = sub i32 %127, %121, !dbg !11641
  %129 = icmp ugt i32 %128, 2, !dbg !11642
  br i1 %129, label %337, label %122, !dbg !11643, !llvm.loop !11644

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11646
  %132 = and i32 %131, -249, !dbg !11646
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11646
  %134 = load i32, i32* %133, align 4, !dbg !11646
  %135 = shl i32 %134, 3, !dbg !11646
  %136 = or i32 %135, %132, !dbg !11646
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11646
  br label %137, !dbg !11647

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !11647
  %139 = and i32 %138, 8, !dbg !11649
  %140 = icmp eq i32 %139, 0, !dbg !11650
  br i1 %140, label %165, label %141, !dbg !11651

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11652
  %143 = load i32, i32* %142, align 4, !dbg !11652
  %144 = icmp eq i32 %143, 0, !dbg !11655
  br i1 %144, label %155, label %145, !dbg !11656

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11657
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %146, metadata !11497, metadata !DIExpression()), !dbg !11507
  br label %147, !dbg !11660

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11661
  %149 = and i32 %148, 2, !dbg !11662
  %150 = icmp eq i32 %149, 0, !dbg !11662
  br i1 %150, label %151, label %165, !dbg !11660

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !11663
  %153 = sub i32 %152, %146, !dbg !11666
  %154 = icmp ugt i32 %153, 2, !dbg !11667
  br i1 %154, label %337, label %147, !dbg !11668, !llvm.loop !11669

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11671
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %156, metadata !11497, metadata !DIExpression()), !dbg !11507
  br label %157, !dbg !11674

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11675
  %159 = and i32 %158, 2, !dbg !11675
  %160 = icmp eq i32 %159, 0, !dbg !11675
  br i1 %160, label %165, label %161, !dbg !11674

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !11676
  %163 = sub i32 %162, %156, !dbg !11679
  %164 = icmp ugt i32 %163, 2, !dbg !11680
  br i1 %164, label %337, label %157, !dbg !11681, !llvm.loop !11682

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !11684
  %167 = and i32 %166, 4, !dbg !11685
  %168 = icmp eq i32 %167, 0, !dbg !11686
  br i1 %168, label %237, label %169, !dbg !11687

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !11499, metadata !DIExpression()), !dbg !11688
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11689
  %171 = and i32 %170, 268435456, !dbg !11689
  %172 = icmp eq i32 %171, 0, !dbg !11689
  br i1 %172, label %173, label %180, !dbg !11690

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !11691
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !11691
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11503, metadata !DIExpression()), !dbg !11691
  store volatile i32 0, i32* %2, align 4, !dbg !11691
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11691
  %176 = or i32 %175, 268435456, !dbg !11691
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11691
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11691
  %178 = and i32 %177, 268435456, !dbg !11691
  store volatile i32 %178, i32* %2, align 4, !dbg !11691
  %179 = load volatile i32, i32* %2, align 4, !dbg !11691
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !11692
  call void @llvm.dbg.value(metadata i32 1, metadata !11499, metadata !DIExpression()), !dbg !11688
  br label %180, !dbg !11693

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !11499, metadata !DIExpression()), !dbg !11688
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11694
  %182 = and i32 %181, 256, !dbg !11694
  %183 = icmp eq i32 %182, 0, !dbg !11694
  br i1 %183, label %184, label %196, !dbg !11696

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11697
  %186 = or i32 %185, 256, !dbg !11697
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11697
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %187, metadata !11497, metadata !DIExpression()), !dbg !11507
  br label %188, !dbg !11700

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11701
  %190 = and i32 %189, 256, !dbg !11701
  %191 = icmp eq i32 %190, 0, !dbg !11701
  br i1 %191, label %192, label %196, !dbg !11700

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !11702
  %194 = sub i32 %193, %187, !dbg !11705
  %195 = icmp ugt i32 %194, 2, !dbg !11706
  br i1 %195, label %337, label %188, !dbg !11707, !llvm.loop !11708

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11710
  %198 = load i32, i32* %197, align 4, !dbg !11710
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !11713

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11714
  %201 = or i32 %200, 1, !dbg !11714
  br label %212, !dbg !11714

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11716
  %204 = or i32 %203, 4, !dbg !11716
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11716
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11716
  %206 = or i32 %205, 1, !dbg !11716
  br label %212, !dbg !11716

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11719
  %209 = and i32 %208, -2, !dbg !11719
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11719
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11719
  %211 = and i32 %210, -5, !dbg !11719
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11721
  %214 = load i32, i32* %197, align 4, !dbg !11722
  %215 = icmp eq i32 %214, 0, !dbg !11724
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !11725
  call void @llvm.dbg.value(metadata i32 %216, metadata !11497, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %216, metadata !11497, metadata !DIExpression()), !dbg !11507
  br i1 %215, label %225, label %217, !dbg !11726

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11727
  %219 = and i32 %218, 2, !dbg !11729
  %220 = icmp eq i32 %219, 0, !dbg !11729
  br i1 %220, label %221, label %233, !dbg !11730

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !11731
  %223 = sub i32 %222, %216, !dbg !11734
  %224 = icmp ugt i32 %223, 5000, !dbg !11735
  br i1 %224, label %337, label %217, !dbg !11736, !llvm.loop !11737

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11739
  %227 = and i32 %226, 2, !dbg !11739
  %228 = icmp eq i32 %227, 0, !dbg !11739
  br i1 %228, label %233, label %229, !dbg !11741

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !11742
  %231 = sub i32 %230, %216, !dbg !11745
  %232 = icmp ugt i32 %231, 5000, !dbg !11746
  br i1 %232, label %337, label %225, !dbg !11747, !llvm.loop !11748

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !11750

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11751
  %236 = and i32 %235, -268435457, !dbg !11751
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11751
  br label %237, !dbg !11754

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11755
  %239 = load i32, i32* %238, align 4, !dbg !11755
  %240 = icmp eq i32 %239, 0, !dbg !11757
  br i1 %240, label %336, label %241, !dbg !11758

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11759
  %243 = and i32 %242, 12, !dbg !11759
  %244 = icmp eq i32 %243, 8, !dbg !11762
  br i1 %244, label %297, label %245, !dbg !11763

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !11764
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11767
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !11767
  call void @llvm.dbg.value(metadata i32 %247, metadata !11497, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %247, metadata !11497, metadata !DIExpression()), !dbg !11507
  br i1 %246, label %248, label %289, !dbg !11768

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11769
  %250 = and i32 %249, 33554432, !dbg !11769
  %251 = icmp eq i32 %250, 0, !dbg !11769
  br i1 %251, label %256, label %252, !dbg !11771

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !11772
  %254 = sub i32 %253, %247, !dbg !11775
  %255 = icmp ugt i32 %254, 2, !dbg !11776
  br i1 %255, label %337, label %248, !dbg !11777, !llvm.loop !11778

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11780
  %258 = load i32, i32* %257, align 4, !dbg !11780
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11780
  %260 = load i32, i32* %259, align 4, !dbg !11780
  %261 = or i32 %260, %258, !dbg !11780
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11780
  %263 = load i32, i32* %262, align 4, !dbg !11780
  %264 = shl i32 %263, 6, !dbg !11780
  %265 = or i32 %261, %264, !dbg !11780
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11780
  %267 = load i32, i32* %266, align 4, !dbg !11780
  %268 = shl i32 %267, 15, !dbg !11780
  %269 = add i32 %268, -65536, !dbg !11780
  %270 = and i32 %269, -65536, !dbg !11780
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11780
  %272 = load i32, i32* %271, align 4, !dbg !11780
  %273 = shl i32 %272, 24, !dbg !11780
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11780
  %275 = load i32, i32* %274, align 4, !dbg !11780
  %276 = shl i32 %275, 28, !dbg !11780
  %277 = or i32 %265, %273, !dbg !11780
  %278 = or i32 %277, %270, !dbg !11780
  %279 = or i32 %278, %276, !dbg !11780
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11780
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11781
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !11782
  call void @llvm.dbg.value(metadata i32 %280, metadata !11497, metadata !DIExpression()), !dbg !11507
  br label %281, !dbg !11783

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11784
  %283 = and i32 %282, 33554432, !dbg !11785
  %284 = icmp eq i32 %283, 0, !dbg !11785
  br i1 %284, label %285, label %336, !dbg !11783

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !11786
  %287 = sub i32 %286, %280, !dbg !11789
  %288 = icmp ugt i32 %287, 2, !dbg !11790
  br i1 %288, label %337, label %281, !dbg !11791, !llvm.loop !11792

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11794
  %291 = and i32 %290, 33554432, !dbg !11794
  %292 = icmp eq i32 %291, 0, !dbg !11794
  br i1 %292, label %336, label %293, !dbg !11796

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !11797
  %295 = sub i32 %294, %247, !dbg !11800
  %296 = icmp ugt i32 %295, 2, !dbg !11801
  br i1 %296, label %337, label %289, !dbg !11802, !llvm.loop !11803

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !11805
  br i1 %298, label %337, label %299, !dbg !11808

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %300, metadata !11498, metadata !DIExpression()), !dbg !11507
  %301 = and i32 %300, 4194304, !dbg !11811
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11813
  %303 = load i32, i32* %302, align 4, !dbg !11813
  %304 = icmp eq i32 %301, %303, !dbg !11814
  br i1 %304, label %305, label %337, !dbg !11815

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !11816
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11817
  %308 = load i32, i32* %307, align 4, !dbg !11817
  %309 = icmp eq i32 %306, %308, !dbg !11818
  br i1 %309, label %310, label %337, !dbg !11819

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !11820
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11821
  %313 = load i32, i32* %312, align 4, !dbg !11821
  %314 = shl i32 %313, 6, !dbg !11822
  %315 = icmp eq i32 %311, %314, !dbg !11823
  br i1 %315, label %316, label %337, !dbg !11824

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !11825
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11826
  %319 = load i32, i32* %318, align 4, !dbg !11826
  %320 = shl i32 %319, 15, !dbg !11827
  %321 = add i32 %320, -65536, !dbg !11827
  %322 = and i32 %321, -65536, !dbg !11827
  %323 = icmp eq i32 %317, %322, !dbg !11828
  br i1 %323, label %324, label %337, !dbg !11829

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !11830
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11831
  %327 = load i32, i32* %326, align 4, !dbg !11831
  %328 = shl i32 %327, 24, !dbg !11832
  %329 = icmp eq i32 %325, %328, !dbg !11833
  br i1 %329, label %330, label %337, !dbg !11834

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !11835
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11836
  %333 = load i32, i32* %332, align 4, !dbg !11836
  %334 = shl i32 %333, 28, !dbg !11837
  %335 = icmp eq i32 %331, %334, !dbg !11838
  br i1 %335, label %336, label %337, !dbg !11839

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !11840

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !11507
  ret i32 %338, !dbg !11841
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #16 !dbg !11842 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11846, metadata !DIExpression()), !dbg !11847
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11848
  store i32 15, i32* %2, align 4, !dbg !11849
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11850
  %4 = and i32 %3, 262144, !dbg !11852
  %5 = icmp eq i32 %4, 0, !dbg !11853
  br i1 %5, label %8, label %6, !dbg !11854

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11855
  store i32 327680, i32* %7, align 4, !dbg !11857
  br label %15, !dbg !11858

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11859
  %10 = and i32 %9, 65536, !dbg !11861
  %11 = icmp eq i32 %10, 0, !dbg !11862
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11863
  br i1 %11, label %14, label %13, !dbg !11864

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11865
  br label %15, !dbg !11867

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11868
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  %17 = and i32 %16, 1, !dbg !11872
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11873
  store i32 %17, i32* %18, align 4, !dbg !11875
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11876
  %20 = lshr i32 %19, 3, !dbg !11877
  %21 = and i32 %20, 31, !dbg !11877
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11878
  store i32 %21, i32* %22, align 4, !dbg !11879
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11880
  %24 = and i32 %23, 4, !dbg !11882
  %25 = icmp eq i32 %24, 0, !dbg !11883
  br i1 %25, label %28, label %26, !dbg !11884

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11885
  store i32 5, i32* %27, align 4, !dbg !11887
  br label %35, !dbg !11888

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11889
  %30 = and i32 %29, 1, !dbg !11891
  %31 = icmp eq i32 %30, 0, !dbg !11892
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11893
  br i1 %31, label %34, label %33, !dbg !11894

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11895
  br label %35, !dbg !11897

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11898
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11900
  %37 = and i32 %36, 1, !dbg !11902
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11903
  store i32 %37, i32* %38, align 4, !dbg !11905
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11906
  %40 = and i32 %39, 16777216, !dbg !11908
  %41 = icmp eq i32 %40, 0, !dbg !11909
  %42 = select i1 %41, i32 1, i32 2, !dbg !11910
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11911
  store i32 %42, i32* %43, align 4, !dbg !11913
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11914
  %45 = and i32 %44, 4194304, !dbg !11915
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11916
  store i32 %45, i32* %46, align 4, !dbg !11917
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11918
  %48 = and i32 %47, 63, !dbg !11919
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11920
  store i32 %48, i32* %49, align 4, !dbg !11921
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11922
  %51 = lshr i32 %50, 6, !dbg !11923
  %52 = and i32 %51, 511, !dbg !11923
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11924
  store i32 %52, i32* %53, align 4, !dbg !11925
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11926
  %55 = shl i32 %54, 1, !dbg !11927
  %56 = and i32 %55, 393216, !dbg !11927
  %57 = add nuw nsw i32 %56, 131072, !dbg !11927
  %58 = lshr exact i32 %57, 16, !dbg !11928
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11929
  store i32 %58, i32* %59, align 4, !dbg !11930
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11931
  %61 = lshr i32 %60, 24, !dbg !11932
  %62 = and i32 %61, 15, !dbg !11932
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11933
  store i32 %62, i32* %63, align 4, !dbg !11934
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11935
  %65 = lshr i32 %64, 28, !dbg !11936
  %66 = and i32 %65, 7, !dbg !11936
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11937
  store i32 %66, i32* %67, align 4, !dbg !11938
  ret void, !dbg !11939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11943, metadata !DIExpression()), !dbg !11944
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11945
  ret void, !dbg !11946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11950, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32 1000, metadata !11951, metadata !DIExpression()), !dbg !11952
  %2 = udiv i32 %0, 1000, !dbg !11953
  %3 = add nsw i32 %2, -1, !dbg !11954
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11955
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11956
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11957
  ret void, !dbg !11958
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11959 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11961, metadata !DIExpression()), !dbg !11963
  %3 = bitcast i32* %2 to i8*, !dbg !11964
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11964
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11962, metadata !DIExpression()), !dbg !11965
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11966
  store volatile i32 %4, i32* %2, align 4, !dbg !11965
  %5 = load volatile i32, i32* %2, align 4, !dbg !11967
  %6 = icmp eq i32 %0, -1, !dbg !11968
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11961, metadata !DIExpression()), !dbg !11963
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %8, metadata !11961, metadata !DIExpression()), !dbg !11963
  br label %9, !dbg !11970

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11961, metadata !DIExpression()), !dbg !11963
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11971
  call void @llvm.dbg.value(metadata i32 undef, metadata !11961, metadata !DIExpression()), !dbg !11963
  %12 = shl i32 %11, 15, !dbg !11963
  %13 = ashr i32 %12, 31, !dbg !11963
  %14 = add i32 %13, %10, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %14, metadata !11961, metadata !DIExpression()), !dbg !11963
  %15 = icmp eq i32 %14, 0, !dbg !11970
  br i1 %15, label %16, label %9, !dbg !11970

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11974
  ret void, !dbg !11974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11977, metadata !DIExpression()), !dbg !11978
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11979
  ret void, !dbg !11980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11986, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata i32 0, metadata !11989, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata i32 0, metadata !11990, metadata !DIExpression()), !dbg !11991
  %2 = icmp eq i32 %0, 0, !dbg !11992
  br i1 %2, label %72, label %3, !dbg !11994

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11995
  %5 = icmp eq i32 %4, 49152, !dbg !11998
  br i1 %5, label %6, label %21, !dbg !11999

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12000
  %8 = select i1 %7, i32 0, i32 5, !dbg !12003
  call void @llvm.dbg.value(metadata i32 %8, metadata !11989, metadata !DIExpression()), !dbg !11991
  %9 = add i32 %0, -120000001, !dbg !12004
  %10 = icmp ult i32 %9, 30000000, !dbg !12004
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %11, metadata !11989, metadata !DIExpression()), !dbg !11991
  %12 = icmp ult i32 %9, -30000000, !dbg !12006
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12006
  call void @llvm.dbg.value(metadata i32 %13, metadata !11989, metadata !DIExpression()), !dbg !11991
  %14 = icmp ugt i32 %0, 60000000, !dbg !12008
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12010
  br i1 %16, label %21, label %17, !dbg !12010

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12011
  %19 = and i1 %18, %15, !dbg !12014
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12014
  br label %21, !dbg !12014

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11991
  call void @llvm.dbg.value(metadata i32 %22, metadata !11989, metadata !DIExpression()), !dbg !11991
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12015
  %24 = icmp eq i32 %23, 32768, !dbg !12017
  br i1 %24, label %25, label %45, !dbg !12018

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12019
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12022
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %29, metadata !11989, metadata !DIExpression()), !dbg !11991
  %30 = icmp ugt i32 %0, 12000000, !dbg !12023
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12025
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12025
  call void @llvm.dbg.value(metadata i32 %33, metadata !11989, metadata !DIExpression()), !dbg !11991
  %34 = icmp ugt i32 %0, 90000000, !dbg !12026
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12028
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %37, metadata !11989, metadata !DIExpression()), !dbg !11991
  %38 = icmp ugt i32 %0, 60000000, !dbg !12029
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12031
  br i1 %40, label %45, label %41, !dbg !12031

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12032
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12035
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12035
  br label %45, !dbg !12035

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12036
  call void @llvm.dbg.value(metadata i32 %46, metadata !11989, metadata !DIExpression()), !dbg !11991
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12037
  %48 = icmp eq i32 %47, 16384, !dbg !12039
  br i1 %48, label %49, label %61, !dbg !12040

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12041
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12044
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12044
  call void @llvm.dbg.value(metadata i32 %53, metadata !11989, metadata !DIExpression()), !dbg !11991
  %54 = icmp ugt i32 %0, 60000000, !dbg !12045
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12047
  br i1 %56, label %61, label %57, !dbg !12047

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12048
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12051
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12051
  br label %61, !dbg !12051

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12036
  call void @llvm.dbg.value(metadata i32 %62, metadata !11989, metadata !DIExpression()), !dbg !11991
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !12052
  call void @llvm.dbg.value(metadata i32 2, metadata !11987, metadata !DIExpression()), !dbg !11991
  br label %63, !dbg !12053

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12036
  call void @llvm.dbg.value(metadata i32 %64, metadata !11987, metadata !DIExpression()), !dbg !11991
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12054
  call void @llvm.dbg.value(metadata i32 %65, metadata !11988, metadata !DIExpression()), !dbg !11991
  %66 = add nsw i32 %64, -1, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %66, metadata !11987, metadata !DIExpression()), !dbg !11991
  %67 = icmp ne i32 %65, %62, !dbg !12057
  %68 = icmp ne i32 %66, 0, !dbg !12058
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12058
  br i1 %69, label %63, label %70, !dbg !12059, !llvm.loop !12060

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12062
  call void @llvm.dbg.value(metadata i32 %73, metadata !11990, metadata !DIExpression()), !dbg !11991
  ret i32 %73, !dbg !12063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12064 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12066
  %2 = and i32 %1, 49152, !dbg !12066
  ret i32 %2, !dbg !12067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12070, metadata !DIExpression()), !dbg !12071
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12072
  %3 = and i32 %2, -16, !dbg !12072
  %4 = or i32 %3, %0, !dbg !12072
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12072
  ret void, !dbg !12073
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12074 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12075
  %2 = and i32 %1, 15, !dbg !12075
  ret i32 %2, !dbg !12076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.sys_memory_stats* nocapture noundef readonly %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12077 {
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %0, metadata !12095, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !12096, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i32 0, metadata !12097, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i32 0, metadata !12098, metadata !DIExpression()), !dbg !12099
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12100
  %4 = icmp eq i32 %3, 0, !dbg !12102
  br i1 %4, label %5, label %21, !dbg !12103

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.sys_memory_stats* noundef %0) #26, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %6, metadata !12098, metadata !DIExpression()), !dbg !12099
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.99() #26, !dbg !12106
  %8 = icmp eq i32 %7, 1, !dbg !12108
  br i1 %8, label %13, label %9, !dbg !12109

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.100() #26, !dbg !12110
  br label %10, !dbg !12112

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.99() #26, !dbg !12113
  %12 = icmp eq i32 %11, 1, !dbg !12114
  br i1 %12, label %13, label %10, !dbg !12112, !llvm.loop !12115

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 0, !dbg !12117
  %15 = load i32, i32* %14, align 4, !dbg !12117
  %16 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 1, !dbg !12118
  %17 = load i32, i32* %16, align 4, !dbg !12118
  %18 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 2, !dbg !12119
  %19 = load i32, i32* %18, align 4, !dbg !12119
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.101(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12120
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.sys_memory_stats* noundef %1) #26, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %20, metadata !12097, metadata !DIExpression()), !dbg !12099
  br label %21, !dbg !12122

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12123
  call void @llvm.dbg.value(metadata i32 %22, metadata !12097, metadata !DIExpression()), !dbg !12099
  ret i32 %22, !dbg !12124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12125 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12129, metadata !DIExpression()), !dbg !12130
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.103() #26, !dbg !12131
  %2 = icmp ne i32 %1, 0, !dbg !12133
  call void @llvm.dbg.value(metadata i1 %2, metadata !12129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12130
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !12134
  %4 = icmp ne i32 %3, 0, !dbg !12136
  call void @llvm.dbg.value(metadata i1 undef, metadata !12129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12130
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12137
  %6 = icmp ne i32 %5, 0, !dbg !12139
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12140
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12140
  %9 = zext i1 %8 to i32, !dbg !12140
  call void @llvm.dbg.value(metadata i32 %9, metadata !12129, metadata !DIExpression()), !dbg !12130
  ret i32 %9, !dbg !12141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12146, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !12147, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.value(metadata i32 0, metadata !12148, metadata !DIExpression()), !dbg !12149
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !12150
  %4 = load i32, i32* %3, align 4, !dbg !12150
  %5 = and i32 %4, 63, !dbg !12151
  %6 = udiv i32 %0, %5, !dbg !12152
  call void @llvm.dbg.value(metadata i32 %6, metadata !12148, metadata !DIExpression()), !dbg !12149
  %7 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !12153
  %8 = load i32, i32* %7, align 4, !dbg !12153
  %9 = and i32 %8, 511, !dbg !12154
  %10 = mul i32 %9, %6, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %10, metadata !12148, metadata !DIExpression()), !dbg !12149
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !12156
  %12 = load i32, i32* %11, align 4, !dbg !12156
  %13 = lshr i32 %12, 15, !dbg !12157
  %14 = and i32 %13, 131070, !dbg !12157
  %15 = add nuw nsw i32 %14, 2, !dbg !12157
  %16 = udiv i32 %10, %15, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %16, metadata !12148, metadata !DIExpression()), !dbg !12149
  ret i32 %16, !dbg !12159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.99() unnamed_addr #16 !dbg !12160 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12161
  %2 = lshr i32 %1, 1, !dbg !12162
  %3 = and i32 %2, 1, !dbg !12162
  ret i32 %3, !dbg !12163
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.100() unnamed_addr #15 !dbg !12164 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12165
  %2 = or i32 %1, 1, !dbg !12165
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12165
  ret void, !dbg !12166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.101(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12169, metadata !DIExpression()), !dbg !12173
  call void @llvm.dbg.value(metadata i32 %1, metadata !12170, metadata !DIExpression()), !dbg !12173
  call void @llvm.dbg.value(metadata i32 %2, metadata !12171, metadata !DIExpression()), !dbg !12173
  call void @llvm.dbg.value(metadata i32 %3, metadata !12172, metadata !DIExpression()), !dbg !12173
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12174
  %6 = and i32 %5, -4227072, !dbg !12174
  %7 = or i32 %1, %0, !dbg !12174
  %8 = shl i32 %2, 6, !dbg !12174
  %9 = or i32 %7, %8, !dbg !12174
  %10 = or i32 %9, %6, !dbg !12174
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12174
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12175
  %12 = and i32 %11, -196609, !dbg !12175
  %13 = or i32 %12, %3, !dbg !12175
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12175
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12176
  %15 = and i32 %14, -1879048193, !dbg !12176
  %16 = or i32 %15, %3, !dbg !12176
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12176
  ret void, !dbg !12177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12182, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !12183, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 0, metadata !12184, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 0, metadata !12185, metadata !DIExpression()), !dbg !12186
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !12187
  %4 = load i32, i32* %3, align 4, !dbg !12187
  %5 = lshr i32 %4, 4, !dbg !12187
  %6 = and i32 %5, 15, !dbg !12187
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12187
  %8 = load i8, i8* %7, align 1, !dbg !12187
  %9 = zext i8 %8 to i32, !dbg !12187
  %10 = lshr i32 %0, %9, !dbg !12187
  call void @llvm.dbg.value(metadata i32 %10, metadata !12185, metadata !DIExpression()), !dbg !12186
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12188
  %12 = icmp ult i32 %11, %10, !dbg !12190
  br i1 %12, label %13, label %16, !dbg !12191

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !12192
  call void @llvm.dbg.value(metadata i32 %14, metadata !12184, metadata !DIExpression()), !dbg !12186
  %15 = icmp eq i32 %14, 0, !dbg !12194
  br i1 %15, label %16, label %30, !dbg !12196

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.102() #26, !dbg !12197
  br label %17, !dbg !12199

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.103() #26, !dbg !12200
  %19 = icmp eq i32 %18, 1, !dbg !12201
  br i1 %19, label %20, label %17, !dbg !12199, !llvm.loop !12202

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12204
  tail call fastcc void @LL_RCC_SetAHBPrescaler.104(i32 noundef %21) #26, !dbg !12205
  tail call fastcc void @LL_RCC_SetSysClkSource.105() #26, !dbg !12206
  br label %22, !dbg !12207

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.106() #26, !dbg !12208
  %24 = icmp eq i32 %23, 8, !dbg !12209
  br i1 %24, label %25, label %22, !dbg !12207, !llvm.loop !12210

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !12212
  %27 = load i32, i32* %26, align 4, !dbg !12212
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.107(i32 noundef %27) #26, !dbg !12213
  %28 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !12214
  %29 = load i32, i32* %28, align 4, !dbg !12214
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.108(i32 noundef %29) #26, !dbg !12215
  br label %30, !dbg !12216

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12217
  %33 = icmp ugt i32 %32, %10, !dbg !12219
  br i1 %33, label %34, label %36, !dbg !12220

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %35, metadata !12184, metadata !DIExpression()), !dbg !12186
  br label %36, !dbg !12223

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12186
  call void @llvm.dbg.value(metadata i32 %37, metadata !12184, metadata !DIExpression()), !dbg !12186
  %38 = icmp eq i32 %37, 0, !dbg !12224
  br i1 %38, label %39, label %40, !dbg !12226

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !12227
  br label %40, !dbg !12229

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.102() unnamed_addr #15 !dbg !12231 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12232
  %2 = or i32 %1, 16777216, !dbg !12232
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12232
  ret void, !dbg !12233
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.103() unnamed_addr #16 !dbg !12234 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12235
  %2 = lshr i32 %1, 25, !dbg !12236
  %3 = and i32 %2, 1, !dbg !12236
  ret i32 %3, !dbg !12237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.104(i32 noundef %0) unnamed_addr #15 !dbg !12238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12240, metadata !DIExpression()), !dbg !12241
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12242
  %3 = and i32 %2, -241, !dbg !12242
  %4 = or i32 %3, %0, !dbg !12242
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12242
  ret void, !dbg !12243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.105() unnamed_addr #15 !dbg !12244 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12246, metadata !DIExpression()), !dbg !12247
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12248
  %2 = and i32 %1, -4, !dbg !12248
  %3 = or i32 %2, 2, !dbg !12248
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12248
  ret void, !dbg !12249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.106() unnamed_addr #16 !dbg !12250 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12251
  %2 = and i32 %1, 12, !dbg !12251
  ret i32 %2, !dbg !12252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.107(i32 noundef %0) unnamed_addr #15 !dbg !12253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12255, metadata !DIExpression()), !dbg !12256
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12257
  %3 = and i32 %2, -7169, !dbg !12257
  %4 = or i32 %3, %0, !dbg !12257
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12257
  ret void, !dbg !12258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.108(i32 noundef %0) unnamed_addr #15 !dbg !12259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12261, metadata !DIExpression()), !dbg !12262
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12263
  %3 = and i32 %2, -57345, !dbg !12263
  %4 = or i32 %3, %0, !dbg !12263
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12263
  ret void, !dbg !12264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !12265 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12266
  %2 = lshr i32 %1, 29, !dbg !12267
  %3 = and i32 %2, 1, !dbg !12267
  ret i32 %3, !dbg !12268
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12269 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12270
  %2 = lshr i32 %1, 27, !dbg !12271
  %3 = and i32 %2, 1, !dbg !12271
  ret i32 %3, !dbg !12272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.sys_memory_stats* nocapture noundef readonly %2, %struct.sys_memory_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12277, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.value(metadata i32 %1, metadata !12278, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %2, metadata !12279, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %3, metadata !12280, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.value(metadata i32 0, metadata !12281, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.value(metadata i32 0, metadata !12282, metadata !DIExpression()), !dbg !12283
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12284
  %6 = icmp eq i32 %5, 0, !dbg !12286
  br i1 %6, label %7, label %27, !dbg !12287

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* noundef %2) #26, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %8, metadata !12282, metadata !DIExpression()), !dbg !12283
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.109() #26, !dbg !12290
  %10 = icmp eq i32 %9, 1, !dbg !12292
  br i1 %10, label %19, label %11, !dbg !12293

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12294
  br i1 %12, label %13, label %14, !dbg !12297

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !12298
  br label %15, !dbg !12300

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.110() #26, !dbg !12301
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.111() #26, !dbg !12303
  br label %16, !dbg !12304

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.109() #26, !dbg !12305
  %18 = icmp eq i32 %17, 1, !dbg !12306
  br i1 %18, label %19, label %16, !dbg !12304, !llvm.loop !12307

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 0, !dbg !12309
  %21 = load i32, i32* %20, align 4, !dbg !12309
  %22 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 1, !dbg !12310
  %23 = load i32, i32* %22, align 4, !dbg !12310
  %24 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 2, !dbg !12311
  %25 = load i32, i32* %24, align 4, !dbg !12311
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.101(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !12312
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.sys_memory_stats* noundef %3) #26, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %26, metadata !12281, metadata !DIExpression()), !dbg !12283
  br label %27, !dbg !12314

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12315
  call void @llvm.dbg.value(metadata i32 %28, metadata !12281, metadata !DIExpression()), !dbg !12283
  ret i32 %28, !dbg !12316
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.109() unnamed_addr #16 !dbg !12317 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12318
  %2 = lshr i32 %1, 17, !dbg !12319
  %3 = and i32 %2, 1, !dbg !12319
  ret i32 %3, !dbg !12320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12321 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12322
  %2 = or i32 %1, 262144, !dbg !12322
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12322
  ret void, !dbg !12323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.110() unnamed_addr #15 !dbg !12324 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12325
  %2 = and i32 %1, -262145, !dbg !12325
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12325
  ret void, !dbg !12326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.111() unnamed_addr #15 !dbg !12327 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12328
  %2 = or i32 %1, 65536, !dbg !12328
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12328
  ret void, !dbg !12329
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12330 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12333, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i32 undef, metadata !12333, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i32 undef, metadata !12333, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12349
  ret void, !dbg !12350
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12351 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12355, metadata !DIExpression()), !dbg !12357
  %2 = icmp eq i8* %0, null, !dbg !12358
  br i1 %2, label %29, label %3, !dbg !12360

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12361
  %5 = icmp eq i8 %4, 0, !dbg !12362
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12363
  br i1 %6, label %29, label %8, !dbg !12363

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12356, metadata !DIExpression()), !dbg !12357
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12364

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12356, metadata !DIExpression()), !dbg !12357
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !12366
  br i1 %10, label %11, label %15, !dbg !12371

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12372
  %13 = load i8*, i8** %12, align 4, !dbg !12372
  %14 = icmp eq i8* %13, %0, !dbg !12373
  br i1 %14, label %29, label %15, !dbg !12374

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12375
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12356, metadata !DIExpression()), !dbg !12357
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12376
  br i1 %17, label %7, label %8, !dbg !12377, !llvm.loop !12378

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12356, metadata !DIExpression()), !dbg !12357
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !12380
  br i1 %20, label %21, label %26, !dbg !12384

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12385
  %23 = load i8*, i8** %22, align 4, !dbg !12385
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12386
  %25 = icmp eq i32 %24, 0, !dbg !12387
  br i1 %25, label %29, label %26, !dbg !12388

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12389
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12356, metadata !DIExpression()), !dbg !12357
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12390
  br i1 %28, label %29, label %18, !dbg !12364, !llvm.loop !12391

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12357
  ret %struct.device* %30, !dbg !12393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12398, metadata !DIExpression()), !dbg !12399
  %2 = icmp eq %struct.device* %0, null, !dbg !12400
  br i1 %2, label %14, label %3, !dbg !12402

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12403
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12403
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12404
  %7 = load i8, i8* %6, align 1, !dbg !12404
  %8 = and i8 %7, 1, !dbg !12404
  %9 = icmp eq i8 %8, 0, !dbg !12404
  br i1 %9, label %14, label %10, !dbg !12405

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12406
  %12 = load i8, i8* %11, align 1, !dbg !12406
  %13 = icmp eq i8 %12, 0, !dbg !12407
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12399
  ret i1 %15, !dbg !12408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12409 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12414, metadata !DIExpression()), !dbg !12415
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12416
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12417
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12418 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12426, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12427, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i8* %2, metadata !12428, metadata !DIExpression()), !dbg !12431
  %5 = bitcast i32* %4 to i8*, !dbg !12432
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12432
  call void @llvm.dbg.value(metadata i32 0, metadata !12429, metadata !DIExpression()), !dbg !12431
  store i32 0, i32* %4, align 4, !dbg !12433
  call void @llvm.dbg.value(metadata i32* %4, metadata !12429, metadata !DIExpression(DW_OP_deref)), !dbg !12431
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12434
  call void @llvm.dbg.value(metadata i16* %6, metadata !12430, metadata !DIExpression()), !dbg !12431
  %7 = load i32, i32* %4, align 4, !dbg !12435
  call void @llvm.dbg.value(metadata i32 %7, metadata !12429, metadata !DIExpression()), !dbg !12431
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12436
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12437
  ret i32 %8, !dbg !12438
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12443, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.value(metadata i32* %1, metadata !12444, metadata !DIExpression()), !dbg !12449
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12450
  %4 = load i16*, i16** %3, align 4, !dbg !12450
  call void @llvm.dbg.value(metadata i16* %4, metadata !12445, metadata !DIExpression()), !dbg !12449
  %5 = icmp eq i16* %4, null, !dbg !12451
  br i1 %5, label %14, label %6, !dbg !12452

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12453
  call void @llvm.dbg.value(metadata i32 %7, metadata !12446, metadata !DIExpression()), !dbg !12453
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12454
  %9 = load i16, i16* %8, align 2, !dbg !12454
  %10 = add i16 %9, -32767, !dbg !12455
  %11 = icmp ult i16 %10, 2, !dbg !12455
  %12 = add i32 %7, 1, !dbg !12456
  call void @llvm.dbg.value(metadata i32 %12, metadata !12446, metadata !DIExpression()), !dbg !12453
  br i1 %11, label %13, label %6, !dbg !12455, !llvm.loop !12458

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12461
  br label %14, !dbg !12462

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12464 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12468, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 %1, metadata !12469, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12470, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i8* %3, metadata !12471, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.value(metadata i32 0, metadata !12472, metadata !DIExpression()), !dbg !12480
  %5 = icmp eq i32 %1, 0, !dbg !12481
  br i1 %5, label %16, label %8, !dbg !12482

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12472, metadata !DIExpression()), !dbg !12480
  %7 = icmp eq i32 %15, %1, !dbg !12481
  br i1 %7, label %16, label %8, !dbg !12482, !llvm.loop !12483

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12472, metadata !DIExpression()), !dbg !12480
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12485
  %11 = load i16, i16* %10, align 2, !dbg !12485
  call void @llvm.dbg.value(metadata i16 %11, metadata !12474, metadata !DIExpression()), !dbg !12486
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !12487
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12477, metadata !DIExpression()), !dbg !12486
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12488
  call void @llvm.dbg.value(metadata i32 %13, metadata !12478, metadata !DIExpression()), !dbg !12486
  %14 = icmp slt i32 %13, 0, !dbg !12489
  %15 = add nuw i32 %9, 1, !dbg !12491
  call void @llvm.dbg.value(metadata i32 %15, metadata !12472, metadata !DIExpression()), !dbg !12480
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12493 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12497, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12498, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12499, metadata !DIExpression()), !dbg !12500
  %2 = sext i16 %0 to i32, !dbg !12501
  %3 = icmp slt i16 %0, 1, !dbg !12503
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12504
  %6 = add nsw i32 %2, -1, !dbg !12504
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12504
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12504
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12498, metadata !DIExpression()), !dbg !12500
  ret %struct.device* %8, !dbg !12505
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12506 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12508, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12509, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i8* %2, metadata !12510, metadata !DIExpression()), !dbg !12513
  %5 = bitcast i32* %4 to i8*, !dbg !12514
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12514
  call void @llvm.dbg.value(metadata i32 0, metadata !12511, metadata !DIExpression()), !dbg !12513
  store i32 0, i32* %4, align 4, !dbg !12515
  call void @llvm.dbg.value(metadata i32* %4, metadata !12511, metadata !DIExpression(DW_OP_deref)), !dbg !12513
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12516
  call void @llvm.dbg.value(metadata i16* %6, metadata !12512, metadata !DIExpression()), !dbg !12513
  %7 = load i32, i32* %4, align 4, !dbg !12517
  call void @llvm.dbg.value(metadata i32 %7, metadata !12511, metadata !DIExpression()), !dbg !12513
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12518
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12519
  ret i32 %8, !dbg !12520
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12523, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32* %1, metadata !12524, metadata !DIExpression()), !dbg !12528
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12529
  %4 = load i16*, i16** %3, align 4, !dbg !12529
  call void @llvm.dbg.value(metadata i16* %4, metadata !12525, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 0, metadata !12526, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i32 0, metadata !12527, metadata !DIExpression()), !dbg !12528
  %5 = icmp eq i16* %4, null, !dbg !12530
  br i1 %5, label %22, label %6, !dbg !12532

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12526, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.value(metadata i16* %8, metadata !12525, metadata !DIExpression()), !dbg !12528
  %9 = load i16, i16* %8, align 2, !dbg !12533
  %10 = icmp eq i16 %9, -32768, !dbg !12537
  call void @llvm.dbg.value(metadata i32 undef, metadata !12526, metadata !DIExpression()), !dbg !12528
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12538
  call void @llvm.dbg.value(metadata i16* %11, metadata !12525, metadata !DIExpression()), !dbg !12528
  %12 = zext i1 %10 to i32, !dbg !12539
  %13 = add i32 %7, %12, !dbg !12539
  call void @llvm.dbg.value(metadata i32 %13, metadata !12526, metadata !DIExpression()), !dbg !12528
  %14 = icmp eq i32 %13, 2, !dbg !12540
  br i1 %14, label %15, label %6, !dbg !12541

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12528
  call void @llvm.dbg.value(metadata i32 %16, metadata !12527, metadata !DIExpression()), !dbg !12528
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12542
  %18 = load i16, i16* %17, align 2, !dbg !12542
  %19 = icmp eq i16 %18, 32767, !dbg !12543
  %20 = add i32 %16, 1, !dbg !12544
  call void @llvm.dbg.value(metadata i32 %20, metadata !12527, metadata !DIExpression()), !dbg !12528
  br i1 %19, label %21, label %15, !dbg !12546, !llvm.loop !12547

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12549
  br label %22, !dbg !12550

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12551
  call void @llvm.dbg.value(metadata i16* %23, metadata !12525, metadata !DIExpression()), !dbg !12528
  ret i16* %23, !dbg !12552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12553 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12556
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12557
  ret i32* %2, !dbg !12558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12559 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12707, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12708, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12709, metadata !DIExpression()), !dbg !12710
  ret void, !dbg !12711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12716, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.value(metadata i32 %1, metadata !12717, metadata !DIExpression()), !dbg !12718
  ret void, !dbg !12719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12720 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12724, metadata !DIExpression()), !dbg !12726
  call void @llvm.dbg.value(metadata i32 %1, metadata !12725, metadata !DIExpression()), !dbg !12726
  ret void, !dbg !12727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12732, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata i8* %1, metadata !12733, metadata !DIExpression()), !dbg !12734
  ret i32 -134, !dbg !12735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12740, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.value(metadata i8* %1, metadata !12741, metadata !DIExpression()), !dbg !12742
  ret i32 -134, !dbg !12743
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12747, metadata !DIExpression()), !dbg !12748
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12749, !srcloc !12755
  call void @llvm.dbg.value(metadata i32 undef, metadata !12752, metadata !DIExpression()) #24, !dbg !12756
  call void @llvm.dbg.value(metadata i32 undef, metadata !12753, metadata !DIExpression()) #24, !dbg !12756
  br label %3, !dbg !12757

3:                                                ; preds = %3, %1
  br label %3, !dbg !12758, !llvm.loop !12761
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12768, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12769, metadata !DIExpression()), !dbg !12770
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12771
  unreachable, !dbg !12771
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12774, metadata !DIExpression()), !dbg !12775
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12776
  unreachable, !dbg !12776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12779, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12780, metadata !DIExpression()), !dbg !12783
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12784, !srcloc !12755
  call void @llvm.dbg.value(metadata i32 undef, metadata !12752, metadata !DIExpression()) #24, !dbg !12786
  call void @llvm.dbg.value(metadata i32 undef, metadata !12753, metadata !DIExpression()) #24, !dbg !12786
  call void @llvm.dbg.value(metadata i32 undef, metadata !12781, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12782, metadata !DIExpression()), !dbg !12783
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12787
  br i1 %4, label %6, label %5, !dbg !12789

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12790
  br label %7, !dbg !12791

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12790
  br label %7, !dbg !12794

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12784
  call void @llvm.dbg.value(metadata i32 %8, metadata !12752, metadata !DIExpression()) #24, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %8, metadata !12781, metadata !DIExpression()), !dbg !12783
  %9 = tail call fastcc %struct.k_thread* @k_current_get.118() #27, !dbg !12796
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 undef, metadata !12797, metadata !DIExpression()) #24, !dbg !12800
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12802, !srcloc !12803
  tail call fastcc void @k_thread_abort.119(%struct.k_thread* noundef %9) #26, !dbg !12804
  ret void, !dbg !12807
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.118() unnamed_addr #9 !dbg !12808 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.120() #27, !dbg !12812
  ret %struct.k_thread* %1, !dbg !12813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.119(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12818, metadata !DIExpression()), !dbg !12819
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12820, !srcloc !12822
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12823
  ret void, !dbg !12824
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.120() unnamed_addr #9 !dbg !12825 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12826, !srcloc !12828
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12829
  ret %struct.k_thread* %1, !dbg !12830
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12835, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 %1, metadata !12836, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 %2, metadata !12837, metadata !DIExpression()), !dbg !12838
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12839
  ret void, !dbg !12840
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12845, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i8* %1, metadata !12846, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i32 %2, metadata !12847, metadata !DIExpression()), !dbg !12848
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12849
  ret void, !dbg !12850
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12851 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12852
  ret void, !dbg !12853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12856, metadata !DIExpression()), !dbg !12857
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12858
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12859
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12860
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12861
  %4 = trunc i32 %0 to i8, !dbg !12862
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12863
  store i8 %4, i8* %5, align 4, !dbg !12864
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12865
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12866
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12867
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12868
  store i8* %8, i8** %9, align 4, !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12873, metadata !DIExpression()), !dbg !12879
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12880
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12874, metadata !DIExpression()), !dbg !12879
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12881
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12875, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata i8* null, metadata !12878, metadata !DIExpression()), !dbg !12879
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12882
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12883
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12884
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12885
  ret void, !dbg !12886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12887 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12891, metadata !DIExpression()), !dbg !12892
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12893
  ret i8* %2, !dbg !12894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12900, metadata !DIExpression()), !dbg !12901
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12902
  %3 = load i8, i8* %2, align 1, !dbg !12903
  %4 = and i8 %3, -5, !dbg !12903
  store i8 %4, i8* %2, align 1, !dbg !12903
  ret void, !dbg !12904
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12905 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12908
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12909
  %3 = ptrtoint i8* %2 to i32, !dbg !12918
  %4 = add i32 %3, 2048, !dbg !12919
  call void @llvm.dbg.value(metadata i32 %4, metadata !12913, metadata !DIExpression()) #24, !dbg !12920
  call void @llvm.dbg.value(metadata i32 %4, metadata !12921, metadata !DIExpression()) #24, !dbg !12924
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12926, !srcloc !12927
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12928
  %6 = or i32 %5, 512, !dbg !12928
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12928
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -2, i32 noundef 255) #25, !dbg !12929
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -5, i32 noundef 0) #25, !dbg !12932
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -12, i32 noundef 0) #25, !dbg !12933
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -11, i32 noundef 0) #25, !dbg !12934
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -10, i32 noundef 0) #25, !dbg !12935
  tail call fastcc void @__NVIC_SetPriority.127(i32 noundef -4, i32 noundef 0) #25, !dbg !12936
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12937
  %8 = or i32 %7, 458752, !dbg !12937
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12937
  tail call void @z_arm_fault_init() #25, !dbg !12938
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12939
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12940
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12943
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12944
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12945
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12946
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !12946
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12907, metadata !DIExpression()), !dbg !12947
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12948
  call void @z_device_state_init() #25, !dbg !12949
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12950
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12951
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12952
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !12953
  unreachable, !dbg !12953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1994, metadata !DIExpression()), !dbg !12954
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12955
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12955
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1995, metadata !DIExpression()), !dbg !12954
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1995, metadata !DIExpression()), !dbg !12954
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12956
  br i1 %7, label %8, label %35, !dbg !12957

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1995, metadata !DIExpression()), !dbg !12954
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12958
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12958
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2005, metadata !DIExpression()), !dbg !12959
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12960
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12960
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %14, metadata !2009, metadata !DIExpression()), !dbg !12959
  %15 = icmp eq %struct.device* %11, null, !dbg !12962
  br i1 %15, label %32, label %16, !dbg !12964

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12965
  br i1 %17, label %26, label %18, !dbg !12968

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12969
  call void @llvm.dbg.value(metadata i32 %19, metadata !2009, metadata !DIExpression()), !dbg !12959
  %20 = icmp ult i32 %19, 255, !dbg !12971
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12971
  call void @llvm.dbg.value(metadata i32 %21, metadata !2009, metadata !DIExpression()), !dbg !12959
  %22 = trunc i32 %21 to i8, !dbg !12972
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12973
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12973
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12974
  store i8 %22, i8* %25, align 1, !dbg !12975
  br label %26, !dbg !12976

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12977
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12977
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12978
  %30 = load i8, i8* %29, align 1, !dbg !12979
  %31 = or i8 %30, 1, !dbg !12979
  store i8 %31, i8* %29, align 1, !dbg !12979
  br label %32, !dbg !12980

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12981
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1995, metadata !DIExpression()), !dbg !12954
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12956
  br i1 %34, label %8, label %35, !dbg !12957, !llvm.loop !12982

35:                                               ; preds = %32, %1
  ret void, !dbg !12984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.127(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12987, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i32 %1, metadata !12988, metadata !DIExpression()), !dbg !12989
  %3 = trunc i32 %1 to i8, !dbg !12990
  %4 = shl i8 %3, 4, !dbg !12990
  %5 = and i32 %0, 15, !dbg !12993
  %6 = add nsw i32 %5, -4, !dbg !12994
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12995
  store volatile i8 %4, i8* %7, align 1, !dbg !12996
  ret void, !dbg !12997
}

; Function Attrs: optsize
declare !dbg !12998 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13002, metadata !DIExpression()), !dbg !13003
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13004
  store i8 1, i8* %2, align 1, !dbg !13005
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13006
  store i8 1, i8* %3, align 4, !dbg !13007
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13008
  store i32 0, i32* %4, align 4, !dbg !13009
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13010
  store i32 0, i32* %5, align 4, !dbg !13011
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13012
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13013
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13014
  ret void, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13016 {
  tail call void @z_sched_init() #25, !dbg !13021
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13022
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i32 0, i32 0)) #25, !dbg !13023
  call void @llvm.dbg.value(metadata i8* %1, metadata !13020, metadata !DIExpression()), !dbg !13024
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13025
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13026
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13027
  ret i8* %1, !dbg !13028
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !13029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13033, metadata !DIExpression()), !dbg !13034
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13035
  unreachable, !dbg !13036
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13037 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13039, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.value(metadata i8* %1, metadata !13040, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.value(metadata i8* %2, metadata !13041, metadata !DIExpression()), !dbg !13042
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13043
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13044
  tail call void @boot_banner() #25, !dbg !13045
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13046
  tail call void @z_init_static_threads() #25, !dbg !13047
  tail call void @main() #25, !dbg !13048
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13049
  %5 = and i8 %4, -2, !dbg !13049
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13051 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13061, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata i8* %1, metadata !13062, metadata !DIExpression()), !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13065 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13067, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i8* %1, metadata !13068, metadata !DIExpression()), !dbg !13069
  ret void, !dbg !13070
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13071 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13072, !srcloc !13079
  call void @llvm.dbg.value(metadata i32 %1, metadata !13075, metadata !DIExpression()) #24, !dbg !13080
  %2 = icmp ne i32 %1, 0, !dbg !13081
  ret i1 %2, !dbg !13082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !13083 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13084
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13085
  %3 = load i8, i8* %2, align 4, !dbg !13086
  %4 = or i8 %3, 1, !dbg !13086
  store i8 %4, i8* %2, align 4, !dbg !13086
  ret void, !dbg !13087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !13088 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13089
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13090
  %3 = load i8, i8* %2, align 4, !dbg !13091
  %4 = and i8 %3, -2, !dbg !13091
  store i8 %4, i8* %2, align 4, !dbg !13091
  ret void, !dbg !13092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13093 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13094
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13095
  %3 = load i8, i8* %2, align 4, !dbg !13095
  %4 = and i8 %3, 1, !dbg !13096
  %5 = icmp ne i8 %4, 0, !dbg !13097
  ret i1 %5, !dbg !13098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13103, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i8* %1, metadata !13104, metadata !DIExpression()), !dbg !13105
  ret i32 -88, !dbg !13106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13111, metadata !DIExpression()), !dbg !13112
  ret i8* null, !dbg !13113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13114 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13118, metadata !DIExpression()), !dbg !13121
  call void @llvm.dbg.value(metadata i8* %1, metadata !13119, metadata !DIExpression()), !dbg !13121
  call void @llvm.dbg.value(metadata i32 %2, metadata !13120, metadata !DIExpression()), !dbg !13121
  ret i32 -88, !dbg !13122
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2018 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2132, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i8* %1, metadata !2133, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 %2, metadata !2134, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 0, metadata !2135, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i8 undef, metadata !2137, metadata !DIExpression()), !dbg !13123
  %4 = icmp eq i8* %1, null, !dbg !13124
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13126
  br i1 %6, label %46, label %7, !dbg !13126

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13127
  %9 = load i8, i8* %8, align 1, !dbg !13127
  call void @llvm.dbg.value(metadata i8 %9, metadata !2137, metadata !DIExpression()), !dbg !13123
  %10 = add i32 %2, -1, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %10, metadata !2134, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i8 0, metadata !2138, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata i8 %9, metadata !2137, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 0, metadata !2135, metadata !DIExpression()), !dbg !13123
  %11 = icmp eq i8 %9, 0, !dbg !13130
  br i1 %11, label %12, label %15, !dbg !13132

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13133
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13134
  store i8 0, i8* %14, align 1, !dbg !13135
  br label %46, !dbg !13136

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2138, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata i8 %17, metadata !2137, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 %18, metadata !2135, metadata !DIExpression()), !dbg !13123
  %19 = zext i8 %17 to i32, !dbg !13137
  %20 = zext i8 %16 to i32, !dbg !13138
  %21 = shl nuw i32 1, %20, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %21, metadata !2136, metadata !DIExpression()), !dbg !13123
  %22 = and i32 %21, %19, !dbg !13140
  %23 = icmp eq i32 %22, 0, !dbg !13142
  br i1 %23, label %42, label %24, !dbg !13143

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13144
  %26 = sub i32 %10, %18, !dbg !13145
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13146
  %28 = load i8*, i8** %27, align 4, !dbg !13146
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13147
  %30 = load i32, i32* %29, align 4, !dbg !13147
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13148
  %32 = add i32 %31, %18, !dbg !13149
  call void @llvm.dbg.value(metadata i32 %32, metadata !2135, metadata !DIExpression()), !dbg !13123
  %33 = trunc i32 %21 to i8, !dbg !13150
  %34 = xor i8 %33, -1, !dbg !13150
  %35 = and i8 %17, %34, !dbg !13150
  call void @llvm.dbg.value(metadata i8 %35, metadata !2137, metadata !DIExpression()), !dbg !13123
  %36 = icmp eq i8 %35, 0, !dbg !13151
  br i1 %36, label %12, label %37, !dbg !13153

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13154
  %39 = sub i32 %10, %32, !dbg !13156
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !13157
  %41 = add i32 %40, %32, !dbg !13158
  call void @llvm.dbg.value(metadata i32 %41, metadata !2135, metadata !DIExpression()), !dbg !13123
  br label %42, !dbg !13159

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13123
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13123
  call void @llvm.dbg.value(metadata i8 %44, metadata !2137, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 %43, metadata !2135, metadata !DIExpression()), !dbg !13123
  %45 = add i8 %16, 1, !dbg !13160
  call void @llvm.dbg.value(metadata i8 %45, metadata !2138, metadata !DIExpression()), !dbg !13129
  br label %15, !dbg !13132

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.129, i32 0, i32 0), %3 ], !dbg !13123
  ret i8* %47, !dbg !13161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13162 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13166, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i32 %1, metadata !13167, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i8* %2, metadata !13168, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i32 %3, metadata !13169, metadata !DIExpression()), !dbg !13171
  %5 = icmp ult i32 %1, %3, !dbg !13172
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %6, metadata !13170, metadata !DIExpression()), !dbg !13171
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13173
  ret i32 %6, !dbg !13174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13179, metadata !DIExpression()), !dbg !13180
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13181
  ret void, !dbg !13182
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13192, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13193, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 %2, metadata !13194, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13195, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i8* %4, metadata !13196, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i8* %5, metadata !13197, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i8* %6, metadata !13198, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 %7, metadata !13199, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 %8, metadata !13200, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i8* undef, metadata !13201, metadata !DIExpression()), !dbg !13203
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13204
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !13205
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13206
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !13207
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !13208
  call void @llvm.dbg.value(metadata i8* %13, metadata !13202, metadata !DIExpression()), !dbg !13203
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13209
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13210
  store i8* null, i8** %14, align 4, !dbg !13211
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13212
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13212
  br i1 %16, label %20, label %17, !dbg !13214

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13215
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13215
  br label %20, !dbg !13216

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13203
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13217
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13219
  ret i8* %13, !dbg !13220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13221 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13226, metadata !DIExpression()), !dbg !13227
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13228
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !13229
  ret void, !dbg !13230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13231 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13236, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i32 %1, metadata !13237, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i32 %2, metadata !13238, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i32 %3, metadata !13239, metadata !DIExpression()), !dbg !13240
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13241
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13242
  %6 = trunc i32 %3 to i8, !dbg !13243
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13244
  store i8 %6, i8* %7, align 4, !dbg !13245
  %8 = trunc i32 %2 to i8, !dbg !13246
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13247
  store i8 %8, i8* %9, align 1, !dbg !13248
  %10 = trunc i32 %1 to i8, !dbg !13249
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13250
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13250
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13250
  store i8 %10, i8* %13, align 2, !dbg !13251
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13252
  store i8 0, i8* %14, align 1, !dbg !13253
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !13254
  ret void, !dbg !13255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13260, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13261, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 %2, metadata !13262, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 0, metadata !13267, metadata !DIExpression()), !dbg !13268
  %4 = add i32 %2, 7, !dbg !13269
  %5 = and i32 %4, -8, !dbg !13269
  %6 = add i32 %5, 64, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %6, metadata !13263, metadata !DIExpression()), !dbg !13268
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef %1) #26, !dbg !13271
  call void @llvm.dbg.value(metadata i8* %7, metadata !13266, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 %5, metadata !13264, metadata !DIExpression()), !dbg !13268
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13272
  call void @llvm.dbg.value(metadata i8* %8, metadata !13265, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 0, metadata !13267, metadata !DIExpression()), !dbg !13268
  %9 = ptrtoint i8* %7 to i32, !dbg !13273
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13274
  store i32 %9, i32* %10, align 4, !dbg !13275
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13276
  store i32 %5, i32* %11, align 4, !dbg !13277
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13278
  store i32 0, i32* %12, align 4, !dbg !13279
  call void @llvm.dbg.value(metadata i8* %8, metadata !13265, metadata !DIExpression()), !dbg !13268
  ret i8* %8, !dbg !13280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13281 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13285, metadata !DIExpression()), !dbg !13286
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13287
  ret i8* %2, !dbg !13288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13289 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13294, metadata !DIExpression()), !dbg !13295
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13296
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13297
  ret void, !dbg !13298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13299 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13301, metadata !DIExpression()), !dbg !13302
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13303
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !13304
  ret void, !dbg !13305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13306 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13310, metadata !DIExpression()), !dbg !13311
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13312
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13313
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13314
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13315
  ret void, !dbg !13316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13317 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13322, metadata !DIExpression()), !dbg !13323
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13324
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13325
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13326
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13327
  ret void, !dbg !13328
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13329 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13346, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13337, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13338, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i32 %2, metadata !13339, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13340, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i8* %4, metadata !13341, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i8* %5, metadata !13342, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i8* %6, metadata !13343, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i32 %7, metadata !13344, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata i32 %8, metadata !13345, metadata !DIExpression()), !dbg !13347
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !13348
  %13 = icmp eq i64 %11, -1, !dbg !13349
  br i1 %13, label %15, label %14, !dbg !13351

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !13352
  br label %15, !dbg !13354

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13356 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13361, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13360, metadata !DIExpression()), !dbg !13362
  %4 = icmp eq i64 %3, 0, !dbg !13363
  br i1 %4, label %5, label %6, !dbg !13365

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !13366
  br label %7, !dbg !13368

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13369
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13376, metadata !DIExpression()), !dbg !13377
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13378, !srcloc !13380
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !13381
  ret void, !dbg !13382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13383 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13385, metadata !DIExpression()), !dbg !13387
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13388
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13389
  ret void, !dbg !13390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13391 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13393, metadata !DIExpression()), !dbg !13413
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13414

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13415
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13411, metadata !DIExpression()), !dbg !13416
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13417

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13393, metadata !DIExpression()), !dbg !13413
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13418
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13418
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13421
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13421
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13422
  %9 = load i32, i32* %8, align 4, !dbg !13422
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13423
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13423
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13424
  %13 = load i8*, i8** %12, align 4, !dbg !13424
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13425
  %15 = load i8*, i8** %14, align 4, !dbg !13425
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13426
  %17 = load i8*, i8** %16, align 4, !dbg !13426
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13427
  %19 = load i32, i32* %18, align 4, !dbg !13427
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13428
  %21 = load i32, i32* %20, align 4, !dbg !13428
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !13429
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13430
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13431
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13432
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13432
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13433
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13393, metadata !DIExpression()), !dbg !13413
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13434
  br i1 %27, label %2, label %1, !dbg !13414, !llvm.loop !13436

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !13415
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13411, metadata !DIExpression()), !dbg !13416
  br label %29, !dbg !13417

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !13438
  ret void, !dbg !13439

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13411, metadata !DIExpression()), !dbg !13416
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13440
  %33 = load i32, i32* %32, align 4, !dbg !13440
  %34 = icmp eq i32 %33, -1, !dbg !13444
  br i1 %34, label %43, label %35, !dbg !13445

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13446
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13446
  %38 = icmp sgt i32 %33, 0, !dbg !13448
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13448
  %40 = zext i32 %39 to i64, !dbg !13448
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !13448
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13449
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !13449
  br label %43, !dbg !13450

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13451
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13411, metadata !DIExpression()), !dbg !13416
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13452
  br i1 %45, label %30, label %29, !dbg !13417, !llvm.loop !13454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13456 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13461, metadata !DIExpression()), !dbg !13462
  call void @llvm.dbg.value(metadata i64 %0, metadata !13463, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i32 1000, metadata !13468, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i32 10000, metadata !13469, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8 1, metadata !13470, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8 0, metadata !13471, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8 1, metadata !13472, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8 0, metadata !13473, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8 1, metadata !13474, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8 0, metadata !13475, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i64 0, metadata !13476, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i64 0, metadata !13476, metadata !DIExpression()), !dbg !13480
  %2 = mul i64 %0, 10, !dbg !13482
  ret i64 %2, !dbg !13488
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !13489 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13491, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata i8* %1, metadata !13492, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata i8* %2, metadata !13493, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata i8* %3, metadata !13494, metadata !DIExpression()), !dbg !13495
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13496
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13497
  %7 = load i8, i8* %6, align 4, !dbg !13498
  %8 = or i8 %7, 4, !dbg !13498
  store i8 %8, i8* %6, align 4, !dbg !13498
  tail call void @z_thread_essential_clear() #26, !dbg !13499
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !13500
  unreachable, !dbg !13500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13505, metadata !DIExpression()), !dbg !13506
  ret i32 -134, !dbg !13507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13512, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i32 %1, metadata !13513, metadata !DIExpression()), !dbg !13514
  ret i32 -134, !dbg !13515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13523, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13524, metadata !DIExpression()), !dbg !13525
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13526
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13528
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13525
  ret i32 %6, !dbg !13529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13530 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13534, metadata !DIExpression()), !dbg !13535
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13536
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13535
  ret i32 %3, !dbg !13538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13539 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13543 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13545, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.value(metadata i8* %1, metadata !13546, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.value(metadata i8* %2, metadata !13547, metadata !DIExpression()), !dbg !13548
  br label %4, !dbg !13549

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13550, !srcloc !13557
  call void @llvm.dbg.value(metadata i32 undef, metadata !13553, metadata !DIExpression()) #24, !dbg !13558
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #24, !dbg !13558
  tail call fastcc void @k_cpu_idle() #26, !dbg !13559
  br label %4, !dbg !13549, !llvm.loop !13560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13562 {
  tail call void @arch_cpu_idle() #25, !dbg !13563
  ret void, !dbg !13564
}

; Function Attrs: optsize
declare !dbg !13565 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13570, metadata !DIExpression()), !dbg !13574
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13571, metadata !DIExpression()), !dbg !13574
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13575
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13575
  %5 = load i8, i8* %4, align 2, !dbg !13575
  call void @llvm.dbg.value(metadata i8 %5, metadata !13572, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13574
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13576
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13576
  %8 = load i8, i8* %7, align 2, !dbg !13576
  call void @llvm.dbg.value(metadata i8 %8, metadata !13573, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13574
  %9 = icmp eq i8 %8, %5, !dbg !13577
  %10 = sext i8 %5 to i32, !dbg !13579
  %11 = sext i8 %8 to i32, !dbg !13579
  %12 = sub nsw i32 %11, %10, !dbg !13579
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13579
  ret i32 %13, !dbg !13580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13581 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13585, metadata !DIExpression()), !dbg !13586
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13587
  %3 = icmp eq i32 %2, 0, !dbg !13589
  br i1 %3, label %8, label %4, !dbg !13590

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13591
  %6 = add i32 %5, %2, !dbg !13593
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13594
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13595
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13596
  br label %8, !dbg !13597

8:                                                ; preds = %4, %1
  ret void, !dbg !13598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13599 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13603, metadata !DIExpression()), !dbg !13605
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13606
  call void @llvm.dbg.value(metadata i32 %1, metadata !13604, metadata !DIExpression()), !dbg !13605
  ret i32 %1, !dbg !13607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13612, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i32 %1, metadata !13613, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i32 0, metadata !13614, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !13630
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13632, !srcloc !13638
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %4, metadata !13635, metadata !DIExpression()) #24, !dbg !13639
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !13639
  call void @llvm.dbg.value(metadata i32 %4, metadata !13629, metadata !DIExpression()) #24, !dbg !13630
  call void @llvm.dbg.value(metadata i32 %4, metadata !13620, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13614, metadata !DIExpression()), !dbg !13622
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13640
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13643
  %6 = icmp sgt i32 %0, 0, !dbg !13644
  %7 = icmp sgt i32 %5, 2, !dbg !13646
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13646
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13646
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13647
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13648
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13649
  call void @llvm.dbg.value(metadata i32 %4, metadata !13650, metadata !DIExpression()) #24, !dbg !13656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !13656
  call void @llvm.dbg.value(metadata i32 %4, metadata !13658, metadata !DIExpression()) #24, !dbg !13661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13663, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !13614, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.value(metadata i32 undef, metadata !13614, metadata !DIExpression()), !dbg !13622
  ret void, !dbg !13665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13668, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 %0, metadata !13670, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i32 1000, metadata !13673, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i32 10000, metadata !13674, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i8 1, metadata !13675, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i1 true, metadata !13676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i1 true, metadata !13677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i8 0, metadata !13678, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i1 true, metadata !13679, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i1 false, metadata !13680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !13685
  %2 = mul i32 %0, 10, !dbg !13687
  ret i32 %2, !dbg !13693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13696, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !13699
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13701, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13701
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !13699
  call void @llvm.dbg.value(metadata i32 %3, metadata !13697, metadata !DIExpression()), !dbg !13698
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13704
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13706
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13707
  br i1 %6, label %7, label %8, !dbg !13708

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13709
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !13711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !13711
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !13713
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13715, !srcloc !13664
  br label %24, !dbg !13716

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13717
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13718
  %10 = icmp eq i32 %9, 0, !dbg !13718
  br i1 %10, label %21, label %11, !dbg !13720

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13721
  br i1 %12, label %13, label %21, !dbg !13722

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13723
  %15 = icmp sgt i32 %14, %0, !dbg !13726
  br i1 %15, label %19, label %16, !dbg !13727

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13728
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13728
  call void @llvm.dbg.value(metadata i32 %18, metadata !13697, metadata !DIExpression()), !dbg !13698
  br label %22, !dbg !13730

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13731
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13731
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13733
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13698
  call void @llvm.dbg.value(metadata i32 %23, metadata !13697, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i32 %23, metadata !13650, metadata !DIExpression()) #24, !dbg !13735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %23, metadata !13658, metadata !DIExpression()) #24, !dbg !13737
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !13739, !srcloc !13664
  br label %24, !dbg !13740

24:                                               ; preds = %22, %7
  ret void, !dbg !13740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()), !dbg !13747
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13748
  %3 = icmp eq i32 %2, 0, !dbg !13748
  br i1 %3, label %16, label %4, !dbg !13749

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13750
  br i1 %5, label %16, label %6, !dbg !13751

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13752
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13752
  %9 = load i8, i8* %8, align 2, !dbg !13752
  %10 = sext i8 %9 to i32, !dbg !13753
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13754
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13755
  br i1 %12, label %16, label %13, !dbg !13756

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13757
  %15 = xor i1 %14, true, !dbg !13758
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13747
  call void @llvm.dbg.value(metadata i1 %17, metadata !13746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13747
  ret i1 %17, !dbg !13759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13760 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13764, metadata !DIExpression()), !dbg !13766
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13767
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13765, metadata !DIExpression()), !dbg !13766
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13768
  br i1 %3, label %5, label %4, !dbg !13770

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13771
  br label %5, !dbg !13773

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13764, metadata !DIExpression()), !dbg !13766
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13774
  ret i32 %6, !dbg !13775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13778, metadata !DIExpression()), !dbg !13780
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13781
  %3 = load i8, i8* %2, align 1, !dbg !13781
  call void @llvm.dbg.value(metadata i8 %3, metadata !13779, metadata !DIExpression()), !dbg !13780
  %4 = and i8 %3, 31, !dbg !13782
  %5 = icmp ne i8 %4, 0, !dbg !13783
  ret i1 %5, !dbg !13784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13785 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13787, metadata !DIExpression()), !dbg !13788
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13789
  br i1 %2, label %3, label %7, !dbg !13791

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #24, !dbg !13795
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13798
  %5 = load i8, i8* %4, align 1, !dbg !13799
  %6 = and i8 %5, 127, !dbg !13799
  store i8 %6, i8* %4, align 1, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #24, !dbg !13803
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13807
  br label %7, !dbg !13808

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13809, metadata !DIExpression()) #24, !dbg !13812
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13814
  %9 = load i8, i8* %8, align 1, !dbg !13815
  %10 = or i8 %9, -128, !dbg !13815
  store i8 %10, i8* %8, align 1, !dbg !13815
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13816, metadata !DIExpression()) #24, !dbg !13819
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13823, metadata !DIExpression()) #24, !dbg !13831
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13829, metadata !DIExpression()) #24, !dbg !13831
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13833
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13830, metadata !DIExpression()) #24, !dbg !13831
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13835
  br i1 %12, label %23, label %13, !dbg !13833

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13830, metadata !DIExpression()) #24, !dbg !13831
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13837
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13830, metadata !DIExpression()) #24, !dbg !13831
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13838
  %17 = icmp sgt i32 %16, 0, !dbg !13841
  br i1 %17, label %18, label %20, !dbg !13842

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13843
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13845
  br label %25, !dbg !13846

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13835
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13830, metadata !DIExpression()) #24, !dbg !13831
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13835
  br i1 %22, label %23, label %13, !dbg !13833, !llvm.loop !13847

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13849
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13850
  br label %25, !dbg !13851

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13852
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13853
  %28 = zext i1 %27 to i32, !dbg !13853
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13854
  ret void, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13858, metadata !DIExpression()), !dbg !13859
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13860
  ret i1 %2, !dbg !13861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13862 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13864, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13865, metadata !DIExpression()), !dbg !13866
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13867
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13868
  ret void, !dbg !13869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13870 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13874, metadata !DIExpression()), !dbg !13875
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13876
  br i1 %2, label %6, label %3, !dbg !13876

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13877
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13877
  br label %6, !dbg !13876

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13876
  ret %struct._dnode* %7, !dbg !13878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13879 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13883, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13884, metadata !DIExpression()), !dbg !13887
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13888
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13888
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13885, metadata !DIExpression()), !dbg !13887
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13889
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13890
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13891
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13892
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13893
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13894
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13895
  ret void, !dbg !13896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13897 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13901, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13902, metadata !DIExpression()), !dbg !13903
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13904
  br i1 %3, label %6, label %4, !dbg !13905

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13906
  br label %6, !dbg !13905

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13905
  ret %struct._dnode* %7, !dbg !13907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13908 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13912, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13913, metadata !DIExpression()), !dbg !13915
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13916
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13916
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13914, metadata !DIExpression()), !dbg !13915
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13917
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13918
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13919
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13920
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13921
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13922
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13923
  ret void, !dbg !13924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13927, metadata !DIExpression()), !dbg !13929
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13930
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13937, metadata !DIExpression()) #24, !dbg !13939
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13940
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13941
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13941
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13928, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13942, metadata !DIExpression()) #24, !dbg !13948
  call void @llvm.dbg.value(metadata i32 %0, metadata !13947, metadata !DIExpression()) #24, !dbg !13948
  %6 = icmp eq i32 %0, 0, !dbg !13951
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13953
  br i1 %6, label %8, label %15, !dbg !13954

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13955
  br i1 %9, label %15, label %10, !dbg !13957

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13958
  br i1 %11, label %15, label %12, !dbg !13960

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13961
  %14 = icmp eq i32 %13, 0, !dbg !13961
  br i1 %14, label %18, label %15, !dbg !13963

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13964
  br i1 %16, label %18, label %17, !dbg !13967

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13968
  br label %18, !dbg !13970

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13953
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13953
  ret void, !dbg !13971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13972 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13976, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13977, metadata !DIExpression()), !dbg !13979
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !13980
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13978, metadata !DIExpression()), !dbg !13979
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13977, metadata !DIExpression()), !dbg !13979
  ret %struct.k_thread* %3, !dbg !13981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13982 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13984, metadata !DIExpression()), !dbg !13985
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13986
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13987
  %4 = xor i1 %3, true, !dbg !13988
  ret i1 %4, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13992, metadata !DIExpression()), !dbg !13993
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13994
  %3 = load i16, i16* %2, align 2, !dbg !13994
  %4 = icmp ult i16 %3, 128, !dbg !13995
  %5 = zext i1 %4 to i32, !dbg !13995
  ret i32 %5, !dbg !13996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13997 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14003, metadata !DIExpression()), !dbg !14004
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14005
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !14006
  %4 = xor i1 %3, true, !dbg !14007
  ret i1 %4, !dbg !14008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14009 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14015, metadata !DIExpression()), !dbg !14016
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14017
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14017
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14018
  ret i1 %4, !dbg !14019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14020 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14022, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14023, metadata !DIExpression()), !dbg !14024
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14025
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14025
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14026
  br i1 %5, label %9, label %6, !dbg !14027

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14028
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14028
  br label %9, !dbg !14027

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14027
  ret %struct._dnode* %10, !dbg !14029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14030 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14034, metadata !DIExpression()), !dbg !14035
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14036
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14036
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14037
  ret i1 %4, !dbg !14038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14039 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14043, metadata !DIExpression()), !dbg !14046
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14047
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14047
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14044, metadata !DIExpression()), !dbg !14046
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14048
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14048
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14045, metadata !DIExpression()), !dbg !14046
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14049
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14050
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14051
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14052
  tail call fastcc void @sys_dnode_init.144(%struct._dnode* noundef %0) #26, !dbg !14053
  ret void, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.144(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14055 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14057, metadata !DIExpression()), !dbg !14058
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14059
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14060
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14061
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14062
  ret void, !dbg !14063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14068, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata i32 128, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14071
  %3 = load i8, i8* %2, align 1, !dbg !14071
  %4 = icmp slt i8 %3, 0, !dbg !14072
  ret i1 %4, !dbg !14073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14078, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.value(metadata i32 %1, metadata !14079, metadata !DIExpression()), !dbg !14080
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14081
  ret i1 %3, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14085, metadata !DIExpression()), !dbg !14086
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14087
  ret i1 %2, !dbg !14088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14091, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i32 %1, metadata !14092, metadata !DIExpression()), !dbg !14093
  %3 = icmp slt i32 %0, %1, !dbg !14094
  ret i1 %3, !dbg !14095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14098, metadata !DIExpression()), !dbg !14102
  call void @llvm.dbg.value(metadata i32 0, metadata !14099, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14104
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14106, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14106
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !14108
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14108
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !14104
  call void @llvm.dbg.value(metadata i32 %3, metadata !14101, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i32 undef, metadata !14099, metadata !DIExpression()), !dbg !14103
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14109
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !14114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14114
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !14116
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14118, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14099, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i32 undef, metadata !14099, metadata !DIExpression()), !dbg !14103
  ret void, !dbg !14119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14122, metadata !DIExpression()), !dbg !14123
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14124
  br i1 %2, label %24, label %3, !dbg !14126

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14127
  br i1 %4, label %5, label %24, !dbg !14128

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13809, metadata !DIExpression()) #24, !dbg !14129
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14132
  %7 = load i8, i8* %6, align 1, !dbg !14133
  %8 = or i8 %7, -128, !dbg !14133
  store i8 %8, i8* %6, align 1, !dbg !14133
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13816, metadata !DIExpression()) #24, !dbg !14134
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13823, metadata !DIExpression()) #24, !dbg !14136
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13829, metadata !DIExpression()) #24, !dbg !14136
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14138
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13830, metadata !DIExpression()) #24, !dbg !14136
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14139
  br i1 %10, label %21, label %11, !dbg !14138

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13830, metadata !DIExpression()) #24, !dbg !14136
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14140
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13830, metadata !DIExpression()) #24, !dbg !14136
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !14141
  %15 = icmp sgt i32 %14, 0, !dbg !14142
  br i1 %15, label %16, label %18, !dbg !14143

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14144
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !14145
  br label %23, !dbg !14146

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !14139
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13830, metadata !DIExpression()) #24, !dbg !14136
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14139
  br i1 %20, label %21, label %11, !dbg !14138, !llvm.loop !14147

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14149
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !14150
  br label %23, !dbg !14151

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14152
  br label %24, !dbg !14153

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14157, metadata !DIExpression()), !dbg !14158
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14159
  br i1 %2, label %6, label %3, !dbg !14160

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14161
  %5 = xor i1 %4, true, !dbg !14160
  br label %6, !dbg !14160

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14165, metadata !DIExpression()), !dbg !14169
  call void @llvm.dbg.value(metadata i32 0, metadata !14166, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14171
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14173, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14173
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !14175
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14175
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !14171
  call void @llvm.dbg.value(metadata i32 %3, metadata !14168, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i32 undef, metadata !14166, metadata !DIExpression()), !dbg !14170
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14176
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !14179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14179
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !14181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14183, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14166, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i32 undef, metadata !14166, metadata !DIExpression()), !dbg !14170
  ret void, !dbg !14184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14185 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14187, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14190
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14192, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14192
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !14194
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14194
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %3, metadata !14188, metadata !DIExpression()), !dbg !14189
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14195
  br i1 %4, label %5, label %6, !dbg !14197

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !14198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14198
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !14201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14203, !srcloc !13664
  br label %8, !dbg !14204

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.149(%struct.k_thread* noundef %0) #26, !dbg !14205
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14206
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14207
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14207
  br label %8, !dbg !14208

8:                                                ; preds = %6, %5
  ret void, !dbg !14208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()), !dbg !14212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14213
  %3 = load i8, i8* %2, align 1, !dbg !14213
  %4 = and i8 %3, 4, !dbg !14214
  %5 = icmp eq i8 %4, 0, !dbg !14215
  ret i1 %5, !dbg !14216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.149(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14217 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()), !dbg !14220
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14221
  %3 = load i8, i8* %2, align 1, !dbg !14222
  %4 = and i8 %3, -5, !dbg !14222
  store i8 %4, i8* %2, align 1, !dbg !14222
  ret void, !dbg !14223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14224 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14227, metadata !DIExpression()), !dbg !14228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14226, metadata !DIExpression()), !dbg !14228
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14229
  br i1 %4, label %5, label %9, !dbg !14231

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14232
  br i1 %6, label %7, label %9, !dbg !14233

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14234, metadata !DIExpression()) #24, !dbg !14240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14239, metadata !DIExpression()) #24, !dbg !14240
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14243
  br label %10, !dbg !14244

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !14245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14245
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !14248
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14250, !srcloc !13664
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14256, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.value(metadata i32 %0, metadata !14258, metadata !DIExpression()), !dbg !14263
  %2 = icmp eq i32 %0, 0, !dbg !14265
  br i1 %2, label %3, label %6, !dbg !14266

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14267, !srcloc !14274
  call void @llvm.dbg.value(metadata i32 %4, metadata !14270, metadata !DIExpression()) #24, !dbg !14275
  %5 = icmp eq i32 %4, 0, !dbg !14276
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14257
  ret i1 %7, !dbg !14277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14278 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14281
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14280, metadata !DIExpression()), !dbg !14282
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14283
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14284
  ret i1 %3, !dbg !14285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14288, metadata !DIExpression()), !dbg !14290
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14291
  call void @llvm.dbg.value(metadata i32 %2, metadata !14289, metadata !DIExpression()), !dbg !14290
  ret i32 %2, !dbg !14292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14293 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14295, metadata !DIExpression()), !dbg !14299
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14300
  call void @llvm.dbg.value(metadata i32 0, metadata !14296, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14302
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14304, !srcloc !13638
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14304
  call void @llvm.dbg.value(metadata i32 %4, metadata !13635, metadata !DIExpression()) #24, !dbg !14306
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %4, metadata !13629, metadata !DIExpression()) #24, !dbg !14302
  call void @llvm.dbg.value(metadata i32 %4, metadata !14298, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()), !dbg !14301
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14307
  br i1 %5, label %6, label %10, !dbg !14311

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #24, !dbg !14312
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14315
  %8 = load i8, i8* %7, align 1, !dbg !14316
  %9 = and i8 %8, 127, !dbg !14316
  store i8 %9, i8* %7, align 1, !dbg !14316
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #24, !dbg !14317
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14319
  br label %10, !dbg !14320

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14321
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14322
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14323
  %13 = zext i1 %12 to i32, !dbg !14323
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !14324
  call void @llvm.dbg.value(metadata i32 %4, metadata !13650, metadata !DIExpression()) #24, !dbg !14325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14325
  call void @llvm.dbg.value(metadata i32 %4, metadata !13658, metadata !DIExpression()) #24, !dbg !14327
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14329, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14296, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i32 undef, metadata !14296, metadata !DIExpression()), !dbg !14301
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14330
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14332
  br i1 %15, label %16, label %17, !dbg !14333

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14334
  br label %17, !dbg !14336

17:                                               ; preds = %16, %10
  ret void, !dbg !14337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14340, metadata !DIExpression()), !dbg !14341
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14342
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14343
  ret i32 %3, !dbg !14344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14347, metadata !DIExpression()), !dbg !14348
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14349
  %3 = load i8, i8* %2, align 1, !dbg !14350
  %4 = or i8 %3, 16, !dbg !14350
  store i8 %4, i8* %2, align 1, !dbg !14350
  ret void, !dbg !14351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14352 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14353, !srcloc !13638
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14353
  call void @llvm.dbg.value(metadata i32 %2, metadata !13635, metadata !DIExpression()) #24, !dbg !14355
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14355
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14356
  ret void, !dbg !14357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14360, metadata !DIExpression()), !dbg !14361
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14362
  br i1 %2, label %3, label %5, !dbg !14364

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14365
  br label %6, !dbg !14367

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13658, metadata !DIExpression()) #24, !dbg !14368
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !14371, !srcloc !13664
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14375, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14378
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14380, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14380
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !14382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14382
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !14378
  call void @llvm.dbg.value(metadata i32 %3, metadata !14376, metadata !DIExpression()), !dbg !14377
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14383
  br i1 %4, label %6, label %5, !dbg !14385

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !14386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14386
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !14389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14391, !srcloc !13664
  br label %8, !dbg !14392

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14393
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14394
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14395
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14395
  br label %8, !dbg !14396

8:                                                ; preds = %6, %5
  ret void, !dbg !14396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14399, metadata !DIExpression()), !dbg !14400
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14401
  %3 = load i8, i8* %2, align 1, !dbg !14401
  %4 = and i8 %3, 16, !dbg !14402
  %5 = icmp ne i8 %4, 0, !dbg !14403
  ret i1 %5, !dbg !14404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14407, metadata !DIExpression()), !dbg !14408
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14409
  %3 = load i8, i8* %2, align 1, !dbg !14410
  %4 = and i8 %3, -17, !dbg !14410
  store i8 %4, i8* %2, align 1, !dbg !14410
  ret void, !dbg !14411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14412 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14422, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14420, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14421, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 0, metadata !14423, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14428
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14430, !srcloc !13638
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14430
  call void @llvm.dbg.value(metadata i32 %5, metadata !13635, metadata !DIExpression()) #24, !dbg !14432
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14432
  call void @llvm.dbg.value(metadata i32 %5, metadata !13629, metadata !DIExpression()) #24, !dbg !14428
  call void @llvm.dbg.value(metadata i32 %5, metadata !14425, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata i32 undef, metadata !14423, metadata !DIExpression()), !dbg !14427
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !14433
  call void @llvm.dbg.value(metadata i32 %5, metadata !13650, metadata !DIExpression()) #24, !dbg !14436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14436
  call void @llvm.dbg.value(metadata i32 %5, metadata !13658, metadata !DIExpression()) #24, !dbg !14438
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !14440, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14423, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata i32 undef, metadata !14423, metadata !DIExpression()), !dbg !14427
  ret void, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14444, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14445, metadata !DIExpression()), !dbg !14447
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !14448
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14449
  ret void, !dbg !14450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14451 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14455, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14456, metadata !DIExpression()), !dbg !14457
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14458
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14459
  %3 = icmp eq %union.anon* %1, null, !dbg !14460
  br i1 %3, label %21, label %4, !dbg !14462

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14463
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14465
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14466
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13823, metadata !DIExpression()) #24, !dbg !14467
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13829, metadata !DIExpression()) #24, !dbg !14467
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !14469
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13830, metadata !DIExpression()) #24, !dbg !14467
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14470
  br i1 %8, label %19, label %9, !dbg !14469

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13830, metadata !DIExpression()) #24, !dbg !14467
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14471
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13830, metadata !DIExpression()) #24, !dbg !14467
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !14472
  %13 = icmp sgt i32 %12, 0, !dbg !14473
  br i1 %13, label %14, label %16, !dbg !14474

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14475
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !14476
  br label %21, !dbg !14477

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !14470
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13830, metadata !DIExpression()) #24, !dbg !14467
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14470
  br i1 %18, label %19, label %9, !dbg !14469, !llvm.loop !14478

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14480
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !14481
  br label %21, !dbg !14482

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14484 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14489, metadata !DIExpression()), !dbg !14490
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14488, metadata !DIExpression()), !dbg !14490
  %4 = icmp eq i64 %3, -1, !dbg !14491
  br i1 %4, label %6, label %5, !dbg !14493

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14494
  br label %6, !dbg !14496

6:                                                ; preds = %5, %2
  ret void, !dbg !14497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14498 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14501, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14500, metadata !DIExpression()), !dbg !14502
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14503
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14504
  ret void, !dbg !14505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14506 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14508, metadata !DIExpression()), !dbg !14516
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14517
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14517
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14509, metadata !DIExpression()), !dbg !14516
  call void @llvm.dbg.value(metadata i32 0, metadata !14510, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14519
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14521, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14512, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14510, metadata !DIExpression()), !dbg !14518
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14524
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14525
  %7 = load i8, i8* %6, align 1, !dbg !14525
  %8 = and i8 %7, 40, !dbg !14526
  %9 = icmp eq i8 %8, 0, !dbg !14526
  call void @llvm.dbg.value(metadata i1 %9, metadata !14513, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14527
  br i1 %9, label %10, label %17, !dbg !14528

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14529
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !14529
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !14529
  %14 = icmp eq %union.anon* %13, null, !dbg !14533
  br i1 %14, label %16, label %15, !dbg !14534

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14535
  br label %16, !dbg !14537

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.149(%struct.k_thread* noundef nonnull %3) #26, !dbg !14538
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14539
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14540
  br label %17, !dbg !14541

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %18, metadata !13635, metadata !DIExpression()) #24, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %18, metadata !13629, metadata !DIExpression()) #24, !dbg !14519
  call void @llvm.dbg.value(metadata i32 %18, metadata !14512, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #24, !dbg !14542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14542
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()) #24, !dbg !14544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !14546, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14510, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14510, metadata !DIExpression()), !dbg !14518
  ret void, !dbg !14547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14550, metadata !DIExpression()), !dbg !14551
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14552
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14553
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14554
  store %union.anon* null, %union.anon** %2, align 8, !dbg !14555
  ret void, !dbg !14556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14559, metadata !DIExpression()), !dbg !14560
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14561
  %3 = load i8, i8* %2, align 1, !dbg !14562
  %4 = and i8 %3, -3, !dbg !14562
  store i8 %4, i8* %2, align 1, !dbg !14562
  ret void, !dbg !14563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14566, metadata !DIExpression()), !dbg !14567
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14568
  br i1 %2, label %3, label %7, !dbg !14570

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #24, !dbg !14571
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14574
  %5 = load i8, i8* %4, align 1, !dbg !14575
  %6 = and i8 %5, 127, !dbg !14575
  store i8 %6, i8* %4, align 1, !dbg !14575
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #24, !dbg !14576
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14578
  br label %7, !dbg !14579

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14580
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14581
  %10 = zext i1 %9 to i32, !dbg !14581
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14582
  ret void, !dbg !14583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14586, metadata !DIExpression()), !dbg !14587
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14588
  %3 = load i8, i8* %2, align 1, !dbg !14589
  %4 = or i8 %3, 2, !dbg !14589
  store i8 %4, i8* %2, align 1, !dbg !14589
  ret void, !dbg !14590
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !14591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14593, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 0, metadata !14594, metadata !DIExpression()), !dbg !14598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14599
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14601, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !14603
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14603
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %3, metadata !14596, metadata !DIExpression()), !dbg !14598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14594, metadata !DIExpression()), !dbg !14598
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14604
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !14607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14607
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !14609
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14611, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14594, metadata !DIExpression()), !dbg !14598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14594, metadata !DIExpression()), !dbg !14598
  ret void, !dbg !14612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14613 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14619, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 %0, metadata !14617, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14618, metadata !DIExpression()), !dbg !14624
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14625
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !14626
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14627
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14628
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14629
  call void @llvm.dbg.value(metadata i32 %6, metadata !14620, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 0, metadata !14621, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14631
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14633, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !14635
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14635
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !14631
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14621, metadata !DIExpression()), !dbg !14630
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14636
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14640
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14641
  br i1 %10, label %11, label %12, !dbg !14642

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14643
  br label %12, !dbg !14645

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14633
  call void @llvm.dbg.value(metadata i32 %13, metadata !13635, metadata !DIExpression()) #24, !dbg !14635
  call void @llvm.dbg.value(metadata i32 %13, metadata !13629, metadata !DIExpression()) #24, !dbg !14631
  call void @llvm.dbg.value(metadata i32 %13, metadata !14623, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #24, !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14646
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()) #24, !dbg !14648
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !14650, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14621, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14621, metadata !DIExpression()), !dbg !14630
  ret i32 %6, !dbg !14651
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14652 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata i64 undef, metadata !14659, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14656, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14658, metadata !DIExpression()), !dbg !14660
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14661
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14663
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14665, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !14667
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14667
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !14663
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14668
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14669
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14234, metadata !DIExpression()) #24, !dbg !14670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14239, metadata !DIExpression()) #24, !dbg !14670
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !14672
  ret i32 %9, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14674 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14678, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14679, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.value(metadata i32 0, metadata !14680, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14685
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14687, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !14689
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14689
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14682, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14679, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14680, metadata !DIExpression()), !dbg !14684
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14690
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14679, metadata !DIExpression()), !dbg !14683
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14693
  br i1 %5, label %7, label %6, !dbg !14695

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14696
  br label %7, !dbg !14698

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14687
  call void @llvm.dbg.value(metadata i32 %8, metadata !13635, metadata !DIExpression()) #24, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %8, metadata !13629, metadata !DIExpression()) #24, !dbg !14685
  call void @llvm.dbg.value(metadata i32 %8, metadata !14682, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #24, !dbg !14699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()) #24, !dbg !14701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14703, !srcloc !13664
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14679, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14680, metadata !DIExpression()), !dbg !14684
  ret %struct.k_thread* %4, !dbg !14704
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14705 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14707, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14708, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata i32 0, metadata !14709, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14714
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14716, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14708, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14713
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14708, metadata !DIExpression()), !dbg !14712
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14722
  br i1 %5, label %8, label %6, !dbg !14724

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14725
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14727
  br label %8, !dbg !14728

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %9, metadata !13635, metadata !DIExpression()) #24, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %9, metadata !13629, metadata !DIExpression()) #24, !dbg !14714
  call void @llvm.dbg.value(metadata i32 %9, metadata !14711, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #24, !dbg !14729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14729
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()) #24, !dbg !14731
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14733, !srcloc !13664
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14708, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14713
  ret %struct.k_thread* %4, !dbg !14734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14735 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14737, metadata !DIExpression()), !dbg !14738
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14593, metadata !DIExpression()) #24, !dbg !14739
  call void @llvm.dbg.value(metadata i32 0, metadata !14594, metadata !DIExpression()) #24, !dbg !14741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14742
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14744, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14744
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !14746
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14746
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !14742
  call void @llvm.dbg.value(metadata i32 %3, metadata !14596, metadata !DIExpression()) #24, !dbg !14741
  call void @llvm.dbg.value(metadata i32 undef, metadata !14594, metadata !DIExpression()) #24, !dbg !14741
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14747
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !14748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14748
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !14750
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14752, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14594, metadata !DIExpression()) #24, !dbg !14741
  call void @llvm.dbg.value(metadata i32 undef, metadata !14594, metadata !DIExpression()) #24, !dbg !14741
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14753
  ret void, !dbg !14754
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14757, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 %1, metadata !14758, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i8 0, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 0, metadata !14760, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14765
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14767, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !14765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14762, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i8 poison, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14764
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14770
  call void @llvm.dbg.value(metadata i1 %6, metadata !14759, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14763
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14773

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #24, !dbg !14774
  %11 = load i8, i8* %4, align 1, !dbg !14780
  %12 = and i8 %11, 127, !dbg !14780
  store i8 %12, i8* %4, align 1, !dbg !14780
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #24, !dbg !14781
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14783
  store i8 %9, i8* %8, align 2, !dbg !14784
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13809, metadata !DIExpression()) #24, !dbg !14785
  %13 = load i8, i8* %4, align 1, !dbg !14787
  %14 = or i8 %13, -128, !dbg !14787
  store i8 %14, i8* %4, align 1, !dbg !14787
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13816, metadata !DIExpression()) #24, !dbg !14788
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13823, metadata !DIExpression()) #24, !dbg !14790
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13829, metadata !DIExpression()) #24, !dbg !14790
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14792
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13830, metadata !DIExpression()) #24, !dbg !14790
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14793
  br i1 %16, label %26, label %17, !dbg !14792

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13830, metadata !DIExpression()) #24, !dbg !14790
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14794
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13830, metadata !DIExpression()) #24, !dbg !14790
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14795
  %21 = icmp sgt i32 %20, 0, !dbg !14796
  br i1 %21, label %22, label %23, !dbg !14797

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14798
  br label %27, !dbg !14799

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14793
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13830, metadata !DIExpression()) #24, !dbg !14790
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14793
  br i1 %25, label %26, label %17, !dbg !14792, !llvm.loop !14800

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14802
  br label %27, !dbg !14803

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14804
  br label %29, !dbg !14805

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14806
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %30, metadata !13635, metadata !DIExpression()) #24, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %30, metadata !13629, metadata !DIExpression()) #24, !dbg !14765
  call void @llvm.dbg.value(metadata i32 %30, metadata !14762, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #24, !dbg !14808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14808
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()) #24, !dbg !14810
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !14812, !srcloc !13664
  call void @llvm.dbg.value(metadata i8 poison, metadata !14759, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14760, metadata !DIExpression()), !dbg !14764
  ret i1 %6, !dbg !14813
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14818, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i32 %1, metadata !14819, metadata !DIExpression()), !dbg !14821
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14822
  call void @llvm.dbg.value(metadata i1 %3, metadata !14820, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14821
  br i1 %3, label %4, label %12, !dbg !14823

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14825
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14826
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14826
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14826
  %9 = load i8, i8* %8, align 1, !dbg !14826
  %10 = icmp eq i8 %9, 0, !dbg !14827
  br i1 %10, label %11, label %12, !dbg !14828

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14829
  br label %12, !dbg !14831

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14833 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14835, metadata !DIExpression()), !dbg !14838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14839
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14841, !srcloc !13638
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14841
  call void @llvm.dbg.value(metadata i32 %2, metadata !13635, metadata !DIExpression()) #24, !dbg !14843
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %2, metadata !13629, metadata !DIExpression()) #24, !dbg !14839
  call void @llvm.dbg.value(metadata i32 %2, metadata !14837, metadata !DIExpression()), !dbg !14838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14835, metadata !DIExpression()), !dbg !14838
  tail call fastcc void @z_sched_lock() #26, !dbg !14844
  call void @llvm.dbg.value(metadata i32 %2, metadata !13650, metadata !DIExpression()) #24, !dbg !14847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14847
  call void @llvm.dbg.value(metadata i32 %2, metadata !13658, metadata !DIExpression()) #24, !dbg !14849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14851, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14835, metadata !DIExpression()), !dbg !14838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14835, metadata !DIExpression()), !dbg !14838
  ret void, !dbg !14852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14853 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14854
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14855
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14855
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14855
  %5 = load i8, i8* %4, align 1, !dbg !14856
  %6 = add i8 %5, -1, !dbg !14856
  store i8 %6, i8* %4, align 1, !dbg !14856
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14857, !srcloc !14859
  ret void, !dbg !14860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14861 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14863, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !14867
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14869, !srcloc !13638
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14869
  call void @llvm.dbg.value(metadata i32 %2, metadata !13635, metadata !DIExpression()) #24, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !14871
  call void @llvm.dbg.value(metadata i32 %2, metadata !13629, metadata !DIExpression()) #24, !dbg !14867
  call void @llvm.dbg.value(metadata i32 %2, metadata !14865, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14863, metadata !DIExpression()), !dbg !14866
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14872
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14875
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14875
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14875
  %7 = load i8, i8* %6, align 1, !dbg !14876
  %8 = add i8 %7, 1, !dbg !14876
  store i8 %8, i8* %6, align 1, !dbg !14876
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14877
  call void @llvm.dbg.value(metadata i32 %2, metadata !13650, metadata !DIExpression()) #24, !dbg !14878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !14878
  call void @llvm.dbg.value(metadata i32 %2, metadata !13658, metadata !DIExpression()) #24, !dbg !14880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14882, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 1, metadata !14863, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14863, metadata !DIExpression()), !dbg !14866
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14883
  ret void, !dbg !14884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14885 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14886
  ret %struct.k_thread* %1, !dbg !14887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14888 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14892, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14893, metadata !DIExpression()), !dbg !14897
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14898
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14894, metadata !DIExpression()), !dbg !14897
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14899
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14895, metadata !DIExpression()), !dbg !14897
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14900
  call void @llvm.dbg.value(metadata i32 %5, metadata !14896, metadata !DIExpression()), !dbg !14897
  %6 = icmp sgt i32 %5, 0, !dbg !14901
  br i1 %6, label %17, label %7, !dbg !14903

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14904
  br i1 %8, label %17, label %9, !dbg !14906

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14907
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14907
  %12 = load i32, i32* %11, align 8, !dbg !14907
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14909
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14909
  %15 = load i32, i32* %14, align 8, !dbg !14909
  %16 = icmp ult i32 %12, %15, !dbg !14910
  br label %17, !dbg !14911

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14912
  ret i1 %18, !dbg !14913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14914 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14931, metadata !DIExpression()), !dbg !14946
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14932, metadata !DIExpression()), !dbg !14946
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14947
  %5 = load i32, i32* %4, align 4, !dbg !14948
  %6 = add nsw i32 %5, 1, !dbg !14948
  store i32 %6, i32* %4, align 4, !dbg !14948
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14949
  store i32 %5, i32* %7, align 8, !dbg !14950
  %8 = load i32, i32* %4, align 4, !dbg !14951
  %9 = icmp eq i32 %8, 0, !dbg !14952
  br i1 %9, label %10, label %32, !dbg !14953

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14954
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14954
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14934, metadata !DIExpression()), !dbg !14954
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14954
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14954
  %14 = load i32, i32* %13, align 4, !dbg !14954
  %15 = shl i32 %14, 2, !dbg !14954
  %16 = alloca i8, i32 %15, align 8, !dbg !14954
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14954
  store i8* %16, i8** %17, align 4, !dbg !14954
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14954
  %19 = alloca i8, i32 %14, align 8, !dbg !14954
  store i8* %19, i8** %18, align 4, !dbg !14954
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14954
  store i32 -1, i32* %20, align 4, !dbg !14954
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14955
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14943, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14933, metadata !DIExpression()), !dbg !14946
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14957
  br i1 %22, label %23, label %24, !dbg !14954

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14957
  br label %32, !dbg !14958

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14933, metadata !DIExpression()), !dbg !14946
  %26 = load i32, i32* %4, align 4, !dbg !14959
  %27 = add nsw i32 %26, 1, !dbg !14959
  store i32 %27, i32* %4, align 4, !dbg !14959
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14961
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14961
  store i32 %26, i32* %29, align 8, !dbg !14962
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14955
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14943, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14933, metadata !DIExpression()), !dbg !14946
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14957
  br i1 %31, label %23, label %24, !dbg !14954, !llvm.loop !14963

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14965
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14966
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14967
  ret void, !dbg !14968
}

; Function Attrs: optsize
declare !dbg !14969 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14974 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14977 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14979, metadata !DIExpression()), !dbg !14981
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14980, metadata !DIExpression()), !dbg !14981
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14982
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14983
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14984
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14985
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14985
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14987
  br i1 %7, label %8, label %10, !dbg !14988

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14989
  store i32 0, i32* %9, align 4, !dbg !14991
  br label %10, !dbg !14992

10:                                               ; preds = %8, %2
  ret void, !dbg !14993
}

; Function Attrs: optsize
declare !dbg !14994 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14995 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14999, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15000, metadata !DIExpression()), !dbg !15002
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15003
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !15004
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15001, metadata !DIExpression()), !dbg !15002
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15000, metadata !DIExpression()), !dbg !15002
  ret %struct.k_thread* %4, !dbg !15005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15006 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15010, metadata !DIExpression()), !dbg !15011
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15012
  ret %struct.rbnode* %2, !dbg !15013
}

; Function Attrs: optsize
declare !dbg !15014 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15017 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15029, metadata !DIExpression()), !dbg !15033
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15034
  %3 = load i32, i32* %2, align 4, !dbg !15034
  %4 = icmp eq i32 %3, 0, !dbg !15036
  br i1 %4, label %10, label %5, !dbg !15037

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15030, metadata !DIExpression()), !dbg !15033
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15038, !range !3545
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15039
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15031, metadata !DIExpression()), !dbg !15033
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !15040
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15032, metadata !DIExpression()), !dbg !15033
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15030, metadata !DIExpression()), !dbg !15033
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15033
  ret %struct.k_thread* %11, !dbg !15041
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15042 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15046, metadata !DIExpression()), !dbg !15049
  call void @llvm.dbg.value(metadata i32 0, metadata !15047, metadata !DIExpression()), !dbg !15049
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15048, metadata !DIExpression()), !dbg !15049
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15051
  br i1 %3, label %8, label %4, !dbg !15052

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15053
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15055
  call void @llvm.dbg.value(metadata i32 1, metadata !15047, metadata !DIExpression()), !dbg !15049
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15048, metadata !DIExpression()), !dbg !15049
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15051
  br i1 %7, label %8, label %4, !dbg !15052, !llvm.loop !15056

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15049
  ret i32 %9, !dbg !15058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !15059 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15061, metadata !DIExpression()), !dbg !15062
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15063
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !15064
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15065
  ret %struct.k_thread* %4, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15076, metadata !DIExpression()), !dbg !15077
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15078
  tail call fastcc void @sys_dlist_init.157(%struct._dnode* noundef nonnull %2) #26, !dbg !15079
  ret void, !dbg !15080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.157(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15081 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15085, metadata !DIExpression()), !dbg !15086
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15087
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15088
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15089
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15090
  ret void, !dbg !15091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15092 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15093
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15094
  ret void, !dbg !15095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15101, metadata !DIExpression()), !dbg !15102
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15103
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15103
  %4 = load i8, i8* %3, align 2, !dbg !15103
  %5 = sext i8 %4 to i32, !dbg !15104
  ret i32 %5, !dbg !15105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15106 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15110, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 %1, metadata !15111, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15112, metadata !DIExpression()), !dbg !15113
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15114
  ret void, !dbg !15115
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15116 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15117
  br i1 %1, label %8, label %2, !dbg !15118

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15119
  br i1 %3, label %8, label %4, !dbg !15120

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15121
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15122
  %7 = xor i1 %6, true, !dbg !15120
  br label %8, !dbg !15120

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15124 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15125, !range !6710
  %2 = icmp eq i8 %1, 0, !dbg !15125
  ret i1 %2, !dbg !15126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !15130
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15132, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()), !dbg !15135
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15136
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13792, metadata !DIExpression()) #24, !dbg !15139
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15141
  %4 = load i8, i8* %3, align 1, !dbg !15142
  %5 = and i8 %4, 127, !dbg !15142
  store i8 %5, i8* %3, align 1, !dbg !15142
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13800, metadata !DIExpression()) #24, !dbg !15143
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !15145
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13809, metadata !DIExpression()) #24, !dbg !15147
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15149
  %8 = load i8, i8* %7, align 1, !dbg !15150
  %9 = or i8 %8, -128, !dbg !15150
  store i8 %9, i8* %7, align 1, !dbg !15150
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13816, metadata !DIExpression()) #24, !dbg !15151
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13823, metadata !DIExpression()) #24, !dbg !15153
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13829, metadata !DIExpression()) #24, !dbg !15153
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15155
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13830, metadata !DIExpression()) #24, !dbg !15153
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15156
  br i1 %11, label %22, label %12, !dbg !15155

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13830, metadata !DIExpression()) #24, !dbg !15153
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15157
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13830, metadata !DIExpression()) #24, !dbg !15153
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !15158
  %16 = icmp sgt i32 %15, 0, !dbg !15159
  br i1 %16, label %17, label %19, !dbg !15160

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15161
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15162
  br label %24, !dbg !15163

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !15156
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13830, metadata !DIExpression()) #24, !dbg !15153
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15156
  br i1 %21, label %22, label %12, !dbg !15155, !llvm.loop !15164

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15166
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !15167
  br label %24, !dbg !15168

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15132
  call void @llvm.dbg.value(metadata i32 %25, metadata !13635, metadata !DIExpression()) #24, !dbg !15134
  call void @llvm.dbg.value(metadata i32 %25, metadata !13629, metadata !DIExpression()) #24, !dbg !15130
  call void @llvm.dbg.value(metadata i32 %25, metadata !15129, metadata !DIExpression()), !dbg !15135
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15169
  call void @llvm.dbg.value(metadata i32 undef, metadata !14234, metadata !DIExpression()) #24, !dbg !15170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14239, metadata !DIExpression()) #24, !dbg !15170
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !15172
  ret void, !dbg !15173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15174 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15178, metadata !DIExpression()), !dbg !15181
  %3 = icmp eq i64 %2, -1, !dbg !15182
  br i1 %3, label %4, label %6, !dbg !15184

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15185
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !15187
  br label %11, !dbg !15188

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15179, metadata !DIExpression()), !dbg !15181
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15189
  %8 = sext i32 %7 to i64, !dbg !15189
  call void @llvm.dbg.value(metadata i64 %8, metadata !15179, metadata !DIExpression()), !dbg !15181
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !15190
  %10 = trunc i64 %9 to i32, !dbg !15190
  call void @llvm.dbg.value(metadata i32 %10, metadata !15180, metadata !DIExpression()), !dbg !15181
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15181
  ret i32 %12, !dbg !15191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15192 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15196, metadata !DIExpression()), !dbg !15197
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15198, !srcloc !15200
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15201
  ret void, !dbg !15202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15203 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15207, metadata !DIExpression()), !dbg !15211
  %2 = icmp eq i64 %0, 0, !dbg !15212
  br i1 %2, label %3, label %4, !dbg !15214

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !15215
  br label %29, !dbg !15217

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15209, metadata !DIExpression()), !dbg !15211
  %5 = icmp sgt i64 %0, -3, !dbg !15218
  br i1 %5, label %6, label %10, !dbg !15220

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15221
  %8 = trunc i64 %0 to i32, !dbg !15223
  %9 = add i32 %7, %8, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %9, metadata !15208, metadata !DIExpression()), !dbg !15211
  br label %13, !dbg !15224

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15225
  %12 = sub i32 -2, %11, !dbg !15225
  call void @llvm.dbg.value(metadata i32 %12, metadata !15208, metadata !DIExpression()), !dbg !15211
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15227
  call void @llvm.dbg.value(metadata i32 %14, metadata !15208, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !15228
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15230, !srcloc !13638
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15230
  call void @llvm.dbg.value(metadata i32 %16, metadata !13635, metadata !DIExpression()) #24, !dbg !15232
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !15232
  call void @llvm.dbg.value(metadata i32 %16, metadata !13629, metadata !DIExpression()) #24, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %16, metadata !15210, metadata !DIExpression()), !dbg !15211
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15233
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15234
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !15235
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15236
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15237
  tail call fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !15237
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15238
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !15239
  call void @llvm.dbg.value(metadata i32 %16, metadata !14234, metadata !DIExpression()) #24, !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14239, metadata !DIExpression()) #24, !dbg !15240
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !15242
  %22 = zext i32 %14 to i64, !dbg !15243
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15244
  %24 = zext i32 %23 to i64, !dbg !15244
  %25 = sub nsw i64 %22, %24, !dbg !15245
  call void @llvm.dbg.value(metadata i64 %25, metadata !15207, metadata !DIExpression()), !dbg !15211
  %26 = icmp sgt i64 %25, 0, !dbg !15246
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15246
  %28 = trunc i64 %27 to i32, !dbg !15246
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15211
  ret i32 %30, !dbg !15247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15248 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15250, metadata !DIExpression()), !dbg !15251
  call void @llvm.dbg.value(metadata i64 %0, metadata !13670, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i32 10000, metadata !13673, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i32 1000, metadata !13674, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i8 1, metadata !13675, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i1 false, metadata !13676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15252
  call void @llvm.dbg.value(metadata i1 false, metadata !13677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15252
  call void @llvm.dbg.value(metadata i8 0, metadata !13678, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i1 false, metadata !13679, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15252
  call void @llvm.dbg.value(metadata i1 true, metadata !13680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15252
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i64 %0, metadata !13670, metadata !DIExpression()), !dbg !15252
  %2 = udiv i64 %0, 10, !dbg !15254
  ret i64 %2, !dbg !15258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15259 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15260, !srcloc !15262
  tail call void @z_impl_k_yield() #26, !dbg !15263
  ret void, !dbg !15264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15269, metadata !DIExpression()), !dbg !15271
  %2 = sext i32 %0 to i64, !dbg !15272
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15273
  call void @llvm.dbg.value(metadata i64 %3, metadata !15270, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15271
  %4 = shl i64 %3, 32, !dbg !15274
  %5 = ashr exact i64 %4, 32, !dbg !15274
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15275
  call void @llvm.dbg.value(metadata i32 %6, metadata !15270, metadata !DIExpression()), !dbg !15271
  %7 = sext i32 %6 to i64, !dbg !15276
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15277
  %9 = trunc i64 %8 to i32, !dbg !15277
  ret i32 %9, !dbg !15278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15279 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15281, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.value(metadata i64 %0, metadata !13670, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13673, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i32 10000, metadata !13674, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i8 1, metadata !13675, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i1 false, metadata !13676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15283
  call void @llvm.dbg.value(metadata i1 true, metadata !13677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15283
  call void @llvm.dbg.value(metadata i8 0, metadata !13678, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i1 false, metadata !13679, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15283
  call void @llvm.dbg.value(metadata i1 true, metadata !13680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15283
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !15283
  %2 = add i64 %0, 99, !dbg !15285
  call void @llvm.dbg.value(metadata i64 %2, metadata !13670, metadata !DIExpression()), !dbg !15283
  %3 = udiv i64 %2, 100, !dbg !15286
  ret i64 %3, !dbg !15287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15288 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15290, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata i64 %0, metadata !13670, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i32 10000, metadata !13673, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13674, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i8 1, metadata !13675, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i1 false, metadata !13676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15292
  call void @llvm.dbg.value(metadata i1 false, metadata !13677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15292
  call void @llvm.dbg.value(metadata i8 0, metadata !13678, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i1 true, metadata !13679, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15292
  call void @llvm.dbg.value(metadata i1 false, metadata !13680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15292
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i64 0, metadata !13681, metadata !DIExpression()), !dbg !15292
  %2 = mul i64 %0, 100, !dbg !15294
  ret i64 %2, !dbg !15296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15297 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15299, metadata !DIExpression()), !dbg !15300
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15301
  br i1 %2, label %14, label %3, !dbg !15303

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15304
  %5 = icmp slt i32 %4, 0, !dbg !15306
  br i1 %5, label %6, label %10, !dbg !15307

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15308
  %8 = load i8, i8* %7, align 1, !dbg !15308
  %9 = icmp eq i8 %8, 16, !dbg !15311
  br i1 %9, label %10, label %14, !dbg !15312

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15313
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15314
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15315, !srcloc !14274
  call void @llvm.dbg.value(metadata i32 %11, metadata !14270, metadata !DIExpression()) #24, !dbg !15319
  %12 = icmp eq i32 %11, 0, !dbg !15320
  br i1 %12, label %13, label %14, !dbg !15321

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15322
  br label %14, !dbg !15324

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15328, metadata !DIExpression()), !dbg !15329
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15330
  %3 = load i8, i8* %2, align 1, !dbg !15330
  %4 = and i8 %3, 2, !dbg !15331
  %5 = icmp ne i8 %4, 0, !dbg !15332
  ret i1 %5, !dbg !15333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15334 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15338, metadata !DIExpression()), !dbg !15340
  ret %struct.k_thread* %1, !dbg !15341
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15342 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15343, !srcloc !14274
  call void @llvm.dbg.value(metadata i32 %1, metadata !14270, metadata !DIExpression()) #24, !dbg !15346
  %2 = icmp eq i32 %1, 0, !dbg !15347
  br i1 %2, label %3, label %8, !dbg !15348

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15349
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15350
  %6 = icmp ne i32 %5, 0, !dbg !15348
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15354, metadata !DIExpression()), !dbg !15356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !15357
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15359, !srcloc !13638
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15359
  call void @llvm.dbg.value(metadata i32 %3, metadata !13635, metadata !DIExpression()) #24, !dbg !15361
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !15361
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #24, !dbg !15357
  call void @llvm.dbg.value(metadata i32 %3, metadata !15355, metadata !DIExpression()), !dbg !15356
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15362
  %5 = load i8, i8* %4, align 4, !dbg !15362
  %6 = and i8 %5, 1, !dbg !15364
  %7 = icmp eq i8 %6, 0, !dbg !15365
  br i1 %7, label %9, label %8, !dbg !15366

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !15367
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !15370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15372, !srcloc !13664
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !15373, !srcloc !15375
  br label %24, !dbg !15376

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15377
  %11 = load i8, i8* %10, align 1, !dbg !15377
  %12 = and i8 %11, 8, !dbg !15379
  %13 = icmp eq i8 %12, 0, !dbg !15380
  br i1 %13, label %15, label %14, !dbg !15381

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !15382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !15382
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !15385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15387, !srcloc !13664
  br label %24, !dbg !15388

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !15389
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15390
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15392
  br i1 %17, label %18, label %23, !dbg !15393

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15394, !srcloc !14274
  call void @llvm.dbg.value(metadata i32 %19, metadata !14270, metadata !DIExpression()) #24, !dbg !15397
  %20 = icmp eq i32 %19, 0, !dbg !15398
  br i1 %20, label %21, label %23, !dbg !15399

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14234, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14239, metadata !DIExpression()) #24, !dbg !15400
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15403
  br label %23, !dbg !15404

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13650, metadata !DIExpression()) #24, !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !15405
  call void @llvm.dbg.value(metadata i32 %3, metadata !13658, metadata !DIExpression()) #24, !dbg !15407
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15409, !srcloc !13664
  br label %24, !dbg !15410

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15411 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15413, metadata !DIExpression()), !dbg !15414
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15415
  %3 = load i8, i8* %2, align 1, !dbg !15415
  %4 = and i8 %3, 8, !dbg !15417
  %5 = icmp eq i8 %4, 0, !dbg !15418
  br i1 %5, label %6, label %20, !dbg !15419

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15420
  %8 = or i8 %7, 8, !dbg !15420
  store i8 %8, i8* %2, align 1, !dbg !15420
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !15422
  br i1 %9, label %10, label %12, !dbg !15424

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13792, metadata !DIExpression()) #24, !dbg !15425
  %11 = and i8 %8, 95, !dbg !15428
  store i8 %11, i8* %2, align 1, !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()) #24, !dbg !15429
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !15431
  br label %12, !dbg !15432

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15433
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !15433
  %15 = icmp eq %union.anon* %14, null, !dbg !15435
  br i1 %15, label %17, label %16, !dbg !15436

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15437
  br label %17, !dbg !15439

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15440
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15441
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !15442
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15443
  br label %20, !dbg !15444

20:                                               ; preds = %17, %1
  ret void, !dbg !15445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !15446 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15450, metadata !DIExpression()), !dbg !15452
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !15453
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15451, metadata !DIExpression()), !dbg !15452
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15454
  br i1 %3, label %10, label %4, !dbg !15455

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15456
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15458
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15459, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i32 0, metadata !15464, metadata !DIExpression()), !dbg !15465
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15467
  store i32 0, i32* %7, align 4, !dbg !15468
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15469
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !15453
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15451, metadata !DIExpression()), !dbg !15452
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15454
  br i1 %9, label %10, label %4, !dbg !15455, !llvm.loop !15470

10:                                               ; preds = %4, %1
  ret void, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15473 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15478, metadata !DIExpression()), !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15477, metadata !DIExpression()), !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !15482
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15484, !srcloc !13638
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15484
  call void @llvm.dbg.value(metadata i32 %4, metadata !13635, metadata !DIExpression()) #24, !dbg !15486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !15486
  call void @llvm.dbg.value(metadata i32 %4, metadata !13629, metadata !DIExpression()) #24, !dbg !15482
  call void @llvm.dbg.value(metadata i32 %4, metadata !15479, metadata !DIExpression()), !dbg !15481
  call void @llvm.dbg.value(metadata i32 0, metadata !15480, metadata !DIExpression()), !dbg !15481
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15487
  %6 = load i8, i8* %5, align 1, !dbg !15487
  %7 = and i8 %6, 8, !dbg !15489
  %8 = icmp eq i8 %7, 0, !dbg !15490
  br i1 %8, label %9, label %24, !dbg !15491

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15478, metadata !DIExpression()), !dbg !15481
  %11 = icmp eq i64 %10, 0, !dbg !15492
  br i1 %11, label %24, label %12, !dbg !15494

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15495
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15497
  br i1 %14, label %24, label %15, !dbg !15498

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15499
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !15499
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15500
  %19 = icmp eq %union.anon* %17, %18, !dbg !15501
  br i1 %19, label %24, label %20, !dbg !15502

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15503
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !15505
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15506
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !15507
  call void @llvm.dbg.value(metadata i32 %4, metadata !14234, metadata !DIExpression()) #24, !dbg !15508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14239, metadata !DIExpression()) #24, !dbg !15508
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !15510
  call void @llvm.dbg.value(metadata i32 %23, metadata !15480, metadata !DIExpression()), !dbg !15481
  br label %26, !dbg !15511

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15512
  call void @llvm.dbg.value(metadata i32 %25, metadata !15480, metadata !DIExpression()), !dbg !15481
  call void @llvm.dbg.value(metadata i32 %4, metadata !13650, metadata !DIExpression()) #24, !dbg !15513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !15513
  call void @llvm.dbg.value(metadata i32 %4, metadata !13658, metadata !DIExpression()) #24, !dbg !15515
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15517, !srcloc !13664
  br label %26, !dbg !15518

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15481
  ret i32 %27, !dbg !15519
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15520 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15524, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata i32 %1, metadata !15525, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata i8* %2, metadata !15526, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata i8 0, metadata !15528, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata i32 0, metadata !15529, metadata !DIExpression()), !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13623, metadata !DIExpression()) #24, !dbg !15534
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15536, !srcloc !13638
  call void @llvm.dbg.value(metadata i32 undef, metadata !13635, metadata !DIExpression()) #24, !dbg !15538
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()) #24, !dbg !15538
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #24, !dbg !15534
  call void @llvm.dbg.value(metadata i32 undef, metadata !15531, metadata !DIExpression()), !dbg !15533
  call void @llvm.dbg.value(metadata i8 poison, metadata !15528, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !15529, metadata !DIExpression()), !dbg !15533
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !15539
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15527, metadata !DIExpression()), !dbg !15532
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15542
  br i1 %7, label %12, label %8, !dbg !15544

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15545, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i32 %1, metadata !15551, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i8* %2, metadata !15552, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15459, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata i32 %1, metadata !15464, metadata !DIExpression()), !dbg !15556
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15558
  store i32 %1, i32* %9, align 4, !dbg !15559
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15560
  store i8* %2, i8** %10, align 4, !dbg !15561
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15562
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15563
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15564
  call void @llvm.dbg.value(metadata i8 1, metadata !15528, metadata !DIExpression()), !dbg !15532
  br label %12, !dbg !15565

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15536
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15536
  call void @llvm.dbg.value(metadata i32 %14, metadata !13635, metadata !DIExpression()) #24, !dbg !15538
  call void @llvm.dbg.value(metadata i32 %14, metadata !13629, metadata !DIExpression()) #24, !dbg !15534
  call void @llvm.dbg.value(metadata i32 %14, metadata !15531, metadata !DIExpression()), !dbg !15533
  call void @llvm.dbg.value(metadata i8 poison, metadata !15528, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #24, !dbg !15566
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13655, metadata !DIExpression()) #24, !dbg !15566
  call void @llvm.dbg.value(metadata i32 undef, metadata !13658, metadata !DIExpression()) #24, !dbg !15568
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15570, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !15529, metadata !DIExpression()), !dbg !15533
  ret i1 %13, !dbg !15571
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15572 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata i64 undef, metadata !15580, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15577, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15579, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata i8** %4, metadata !15581, metadata !DIExpression()), !dbg !15583
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %6, metadata !15582, metadata !DIExpression()), !dbg !15583
  %7 = icmp eq i8** %4, null, !dbg !15585
  br i1 %7, label %12, label %8, !dbg !15587

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15588
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15590
  %11 = load i8*, i8** %10, align 4, !dbg !15590
  store i8* %11, i8** %4, align 4, !dbg !15591
  br label %12, !dbg !15592

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15594 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !15596
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !15597
  ret void, !dbg !15598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15599 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15609, metadata !DIExpression()), !dbg !15626
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15607, metadata !DIExpression()), !dbg !15626
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15608, metadata !DIExpression()), !dbg !15626
  %5 = icmp eq i64 %4, -1, !dbg !15627
  br i1 %5, label %55, label %6, !dbg !15629

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15630
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15631
  call void @llvm.dbg.value(metadata i32 0, metadata !15610, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !15640
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15642, !srcloc !15648
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15642
  call void @llvm.dbg.value(metadata i32 %9, metadata !15645, metadata !DIExpression()) #24, !dbg !15649
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !15649
  call void @llvm.dbg.value(metadata i32 %9, metadata !15639, metadata !DIExpression()) #24, !dbg !15640
  call void @llvm.dbg.value(metadata i32 %9, metadata !15616, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15610, metadata !DIExpression()), !dbg !15632
  %10 = icmp slt i64 %4, -1, !dbg !15650
  br i1 %10, label %11, label %17, !dbg !15651

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15652
  %13 = add i64 %4, %12, !dbg !15653
  %14 = sub i64 -2, %13, !dbg !15653
  call void @llvm.dbg.value(metadata i64 %14, metadata !15620, metadata !DIExpression()), !dbg !15654
  %15 = icmp sgt i64 %14, 1, !dbg !15655
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15655
  br label %22, !dbg !15656

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15657
  %19 = tail call fastcc i32 @elapsed.168() #26, !dbg !15659
  %20 = sext i32 %19 to i64, !dbg !15659
  %21 = add nsw i64 %18, %20, !dbg !15660
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15661
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15662
  store i64 %23, i64* %24, align 8, !dbg !15663
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15664
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15617, metadata !DIExpression()), !dbg !15666
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15667
  br i1 %26, label %42, label %27, !dbg !15667

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15668
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15617, metadata !DIExpression()), !dbg !15666
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15672
  %31 = load i64, i64* %30, align 8, !dbg !15672
  %32 = icmp slt i64 %28, %31, !dbg !15673
  br i1 %32, label %33, label %38, !dbg !15674

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15672
  %35 = sub nsw i64 %31, %28, !dbg !15675
  store i64 %35, i64* %34, align 8, !dbg !15675
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15677
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15678
  tail call fastcc void @sys_dlist_insert.169(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15679
  br label %44, !dbg !15680

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15681
  store i64 %39, i64* %24, align 8, !dbg !15681
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15682
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15617, metadata !DIExpression()), !dbg !15666
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15667
  br i1 %41, label %42, label %27, !dbg !15667, !llvm.loop !15683

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15685
  tail call fastcc void @sys_dlist_append.170(%struct._dnode* noundef %43) #26, !dbg !15688
  br label %44, !dbg !15689

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15690
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15691
  br i1 %46, label %47, label %54, !dbg !15692

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15693
  call void @llvm.dbg.value(metadata i32 %48, metadata !15623, metadata !DIExpression()), !dbg !15694
  %49 = icmp ne i32 %48, 0, !dbg !15695
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15697
  br i1 %52, label %54, label %53, !dbg !15697

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15698
  br label %54, !dbg !15700

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15701, metadata !DIExpression()) #24, !dbg !15707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !15707
  call void @llvm.dbg.value(metadata i32 %9, metadata !15709, metadata !DIExpression()) #24, !dbg !15712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15714, !srcloc !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !15610, metadata !DIExpression()), !dbg !15632
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.168() unnamed_addr #1 !dbg !15717 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15720
  %2 = icmp eq i32 %1, 0, !dbg !15721
  br i1 %2, label %3, label %5, !dbg !15720

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15722
  br label %5, !dbg !15720

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15720
  ret i32 %6, !dbg !15723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15724 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.173() #26, !dbg !15730
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15728, metadata !DIExpression()), !dbg !15731
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15732
  ret %struct._timeout* %2, !dbg !15733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.169(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15734 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15738, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15739, metadata !DIExpression()), !dbg !15742
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15743
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15743
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15740, metadata !DIExpression()), !dbg !15742
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15744
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15745
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15746
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15747
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15748
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15749
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15750
  ret void, !dbg !15751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15752 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15756, metadata !DIExpression()), !dbg !15758
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15759
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.171(%struct._dnode* noundef %2) #26, !dbg !15760
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15757, metadata !DIExpression()), !dbg !15758
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15761
  ret %struct._timeout* %4, !dbg !15762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.170(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15763 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15768, metadata !DIExpression()), !dbg !15771
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15769, metadata !DIExpression()), !dbg !15771
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15772
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15770, metadata !DIExpression()), !dbg !15771
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15773
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15774
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15775
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15776
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15777
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15778
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15779
  ret void, !dbg !15780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15781 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15786
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15783, metadata !DIExpression()), !dbg !15787
  %2 = tail call fastcc i32 @elapsed.168() #26, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %2, metadata !15784, metadata !DIExpression()), !dbg !15787
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15789
  br i1 %3, label %14, label %4, !dbg !15791

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15792
  %6 = load i64, i64* %5, align 8, !dbg !15792
  %7 = sext i32 %2 to i64, !dbg !15793
  %8 = sub nsw i64 %6, %7, !dbg !15794
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15795
  br i1 %9, label %14, label %10, !dbg !15796

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15797
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15797
  %13 = trunc i64 %12 to i32, !dbg !15797
  call void @llvm.dbg.value(metadata i32 %13, metadata !15785, metadata !DIExpression()), !dbg !15787
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15799
  call void @llvm.dbg.value(metadata i32 %15, metadata !15785, metadata !DIExpression()), !dbg !15787
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15800
  %17 = icmp ne i32 %16, 0, !dbg !15802
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15803
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15803
  call void @llvm.dbg.value(metadata i32 %20, metadata !15785, metadata !DIExpression()), !dbg !15787
  ret i32 %20, !dbg !15804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.171(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15805 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15809, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15810, metadata !DIExpression()), !dbg !15811
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15812
  br i1 %2, label %5, label %3, !dbg !15813

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.172(%struct._dnode* noundef nonnull %0) #26, !dbg !15814
  br label %5, !dbg !15813

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15813
  ret %struct._dnode* %6, !dbg !15815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.172(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15816 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15818, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15819, metadata !DIExpression()), !dbg !15820
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15821
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15822
  br i1 %3, label %7, label %4, !dbg !15823

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15824
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15824
  br label %7, !dbg !15823

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15823
  ret %struct._dnode* %8, !dbg !15825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.173() unnamed_addr #5 !dbg !15826 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15830, metadata !DIExpression()), !dbg !15831
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.174() #26, !dbg !15832
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15832
  ret %struct._dnode* %3, !dbg !15833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.174() unnamed_addr #5 !dbg !15834 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15838, metadata !DIExpression()), !dbg !15839
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15840
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15841
  ret i1 %2, !dbg !15842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15843 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15847, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i32 -22, metadata !15848, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i32 0, metadata !15849, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !15854
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15856, !srcloc !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15645, metadata !DIExpression()) #24, !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15639, metadata !DIExpression()) #24, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !15851, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata i32 -22, metadata !15848, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i32 undef, metadata !15849, metadata !DIExpression()), !dbg !15853
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15848, metadata !DIExpression()), !dbg !15852
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* noundef %3) #26, !dbg !15859
  br i1 %4, label %5, label %6, !dbg !15863

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15864
  call void @llvm.dbg.value(metadata i32 0, metadata !15848, metadata !DIExpression()), !dbg !15852
  br label %6, !dbg !15866

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15852
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15856
  call void @llvm.dbg.value(metadata i32 %8, metadata !15645, metadata !DIExpression()) #24, !dbg !15858
  call void @llvm.dbg.value(metadata i32 %8, metadata !15639, metadata !DIExpression()) #24, !dbg !15854
  call void @llvm.dbg.value(metadata i32 %8, metadata !15851, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata i32 %7, metadata !15848, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i32 undef, metadata !15701, metadata !DIExpression()) #24, !dbg !15867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !15867
  call void @llvm.dbg.value(metadata i32 undef, metadata !15709, metadata !DIExpression()) #24, !dbg !15869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15871, !srcloc !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !15849, metadata !DIExpression()), !dbg !15853
  ret i32 %7, !dbg !15872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15873 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15879, metadata !DIExpression()), !dbg !15880
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15881
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15881
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15882
  ret i1 %4, !dbg !15883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15884 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15886, metadata !DIExpression()), !dbg !15887
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15888
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15890
  br i1 %3, label %10, label %4, !dbg !15891

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15892
  %6 = load i64, i64* %5, align 8, !dbg !15892
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15894
  %8 = load i64, i64* %7, align 8, !dbg !15895
  %9 = add nsw i64 %8, %6, !dbg !15895
  store i64 %9, i64* %7, align 8, !dbg !15895
  br label %10, !dbg !15896

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15897
  tail call fastcc void @sys_dlist_remove.178(%struct._dnode* noundef %11) #26, !dbg !15898
  ret void, !dbg !15899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.178(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15900 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15904, metadata !DIExpression()), !dbg !15907
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15908
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15908
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15905, metadata !DIExpression()), !dbg !15907
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15909
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15909
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15906, metadata !DIExpression()), !dbg !15907
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15910
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15911
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15912
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15913
  tail call fastcc void @sys_dnode_init.179(%struct._dnode* noundef %0) #26, !dbg !15914
  ret void, !dbg !15915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.179(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15916 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15918, metadata !DIExpression()), !dbg !15919
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15920
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15921
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15922
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15923
  ret void, !dbg !15924
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15925 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15931, metadata !DIExpression()), !dbg !15936
  call void @llvm.dbg.value(metadata i64 0, metadata !15932, metadata !DIExpression()), !dbg !15936
  call void @llvm.dbg.value(metadata i32 0, metadata !15933, metadata !DIExpression()), !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !15938
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15940, !srcloc !15648
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15940
  call void @llvm.dbg.value(metadata i32 %3, metadata !15645, metadata !DIExpression()) #24, !dbg !15942
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !15942
  call void @llvm.dbg.value(metadata i32 %3, metadata !15639, metadata !DIExpression()) #24, !dbg !15938
  call void @llvm.dbg.value(metadata i32 %3, metadata !15935, metadata !DIExpression()), !dbg !15937
  call void @llvm.dbg.value(metadata i64 0, metadata !15932, metadata !DIExpression()), !dbg !15936
  call void @llvm.dbg.value(metadata i32 undef, metadata !15933, metadata !DIExpression()), !dbg !15937
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15943
  call void @llvm.dbg.value(metadata i64 %4, metadata !15932, metadata !DIExpression()), !dbg !15936
  call void @llvm.dbg.value(metadata i32 %3, metadata !15701, metadata !DIExpression()) #24, !dbg !15946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !15946
  call void @llvm.dbg.value(metadata i32 %3, metadata !15709, metadata !DIExpression()) #24, !dbg !15948
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15950, !srcloc !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !15933, metadata !DIExpression()), !dbg !15937
  ret i64 %4, !dbg !15951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15952 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15954, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i64 0, metadata !15955, metadata !DIExpression()), !dbg !15958
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.180(%struct._timeout* noundef %0) #26, !dbg !15959
  br i1 %2, label %21, label %3, !dbg !15961

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15962
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15956, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i64 0, metadata !15955, metadata !DIExpression()), !dbg !15958
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15964
  br i1 %5, label %16, label %6, !dbg !15966

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15956, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i64 %8, metadata !15955, metadata !DIExpression()), !dbg !15958
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15967
  %10 = load i64, i64* %9, align 8, !dbg !15967
  %11 = add nsw i64 %10, %8, !dbg !15969
  call void @llvm.dbg.value(metadata i64 %11, metadata !15955, metadata !DIExpression()), !dbg !15958
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15970
  br i1 %12, label %16, label %13, !dbg !15972

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15973
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15956, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i64 %11, metadata !15955, metadata !DIExpression()), !dbg !15958
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15964
  br i1 %15, label %16, label %6, !dbg !15966, !llvm.loop !15974

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15958
  call void @llvm.dbg.value(metadata i64 %17, metadata !15955, metadata !DIExpression()), !dbg !15958
  %18 = tail call fastcc i32 @elapsed.168() #26, !dbg !15976
  %19 = sext i32 %18 to i64, !dbg !15976
  %20 = sub nsw i64 %17, %19, !dbg !15977
  br label %21, !dbg !15978

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15958
  ret i64 %22, !dbg !15979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.180(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15980 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15984, metadata !DIExpression()), !dbg !15985
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15986
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* noundef %2) #26, !dbg !15987
  %4 = xor i1 %3, true, !dbg !15988
  ret i1 %4, !dbg !15989
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15990 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15992, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i64 0, metadata !15993, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 0, metadata !15994, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !15999
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16001, !srcloc !15648
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16001
  call void @llvm.dbg.value(metadata i32 %3, metadata !15645, metadata !DIExpression()) #24, !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %3, metadata !15639, metadata !DIExpression()) #24, !dbg !15999
  call void @llvm.dbg.value(metadata i32 %3, metadata !15996, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i64 0, metadata !15993, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 undef, metadata !15994, metadata !DIExpression()), !dbg !15998
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16004
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16007
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15993, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i32 %3, metadata !15701, metadata !DIExpression()) #24, !dbg !16008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %3, metadata !15709, metadata !DIExpression()) #24, !dbg !16010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16012, !srcloc !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !15994, metadata !DIExpression()), !dbg !15998
  %6 = add i64 %5, %4, !dbg !16013
  ret i64 %6, !dbg !16014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16015 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16017, metadata !DIExpression()), !dbg !16021
  call void @llvm.dbg.value(metadata i32 0, metadata !16018, metadata !DIExpression()), !dbg !16022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !16023
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16025, !srcloc !15648
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16025
  call void @llvm.dbg.value(metadata i32 %2, metadata !15645, metadata !DIExpression()) #24, !dbg !16027
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !16027
  call void @llvm.dbg.value(metadata i32 %2, metadata !15639, metadata !DIExpression()) #24, !dbg !16023
  call void @llvm.dbg.value(metadata i32 %2, metadata !16020, metadata !DIExpression()), !dbg !16022
  call void @llvm.dbg.value(metadata i32 -1, metadata !16017, metadata !DIExpression()), !dbg !16021
  call void @llvm.dbg.value(metadata i32 undef, metadata !16018, metadata !DIExpression()), !dbg !16022
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !16028
  call void @llvm.dbg.value(metadata i32 %3, metadata !16017, metadata !DIExpression()), !dbg !16021
  call void @llvm.dbg.value(metadata i32 %2, metadata !15701, metadata !DIExpression()) #24, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !16031
  call void @llvm.dbg.value(metadata i32 %2, metadata !15709, metadata !DIExpression()) #24, !dbg !16033
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16035, !srcloc !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !16018, metadata !DIExpression()), !dbg !16022
  ret i32 %3, !dbg !16036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16039, metadata !DIExpression()), !dbg !16049
  call void @llvm.dbg.value(metadata i1 %1, metadata !16040, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16049
  call void @llvm.dbg.value(metadata i32 0, metadata !16041, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !16051
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16053, !srcloc !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15645, metadata !DIExpression()) #24, !dbg !16055
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !16055
  call void @llvm.dbg.value(metadata i32 undef, metadata !15639, metadata !DIExpression()) #24, !dbg !16051
  call void @llvm.dbg.value(metadata i32 undef, metadata !16043, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i32 undef, metadata !16041, metadata !DIExpression()), !dbg !16050
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !16056
  call void @llvm.dbg.value(metadata i32 %4, metadata !16044, metadata !DIExpression()), !dbg !16057
  call void @llvm.dbg.value(metadata i1 undef, metadata !16047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16057
  %5 = icmp slt i32 %4, 2, !dbg !16058
  call void @llvm.dbg.value(metadata i1 %5, metadata !16048, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16057
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16059
  call void @llvm.dbg.value(metadata i1 %6, metadata !16047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16057
  br i1 %7, label %11, label %8, !dbg !16059

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16061
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16061
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !16063
  br label %11, !dbg !16064

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16053
  call void @llvm.dbg.value(metadata i32 %12, metadata !15645, metadata !DIExpression()) #24, !dbg !16055
  call void @llvm.dbg.value(metadata i32 %12, metadata !15639, metadata !DIExpression()) #24, !dbg !16051
  call void @llvm.dbg.value(metadata i32 %12, metadata !16043, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i32 undef, metadata !15701, metadata !DIExpression()) #24, !dbg !16065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !16065
  call void @llvm.dbg.value(metadata i32 undef, metadata !15709, metadata !DIExpression()) #24, !dbg !16067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !16069, !srcloc !15715
  call void @llvm.dbg.value(metadata i32 1, metadata !16041, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i32 undef, metadata !16041, metadata !DIExpression()), !dbg !16050
  ret void, !dbg !16070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16075, metadata !DIExpression()), !dbg !16080
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !16082
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16084, !srcloc !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15645, metadata !DIExpression()) #24, !dbg !16086
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !16086
  call void @llvm.dbg.value(metadata i32 undef, metadata !15639, metadata !DIExpression()) #24, !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16080
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16080
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16080
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !16087
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16088
  br i1 %4, label %28, label %5, !dbg !16089

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16090
  %10 = load i64, i64* %9, align 8, !dbg !16090
  %11 = sext i32 %8 to i64, !dbg !16091
  %12 = icmp sgt i64 %10, %11, !dbg !16092
  br i1 %12, label %26, label %13, !dbg !16093

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16080
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16077, metadata !DIExpression()), !dbg !16094
  %15 = trunc i64 %10 to i32, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %15, metadata !16079, metadata !DIExpression()), !dbg !16094
  %16 = sext i32 %15 to i64, !dbg !16096
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16097
  %18 = add i64 %17, %16, !dbg !16097
  store i64 %18, i64* @curr_tick, align 8, !dbg !16097
  store i64 0, i64* %9, align 8, !dbg !16098
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !16099
  call void @llvm.dbg.value(metadata i32 %14, metadata !15701, metadata !DIExpression()) #24, !dbg !16100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !16100
  call void @llvm.dbg.value(metadata i32 %14, metadata !15709, metadata !DIExpression()) #24, !dbg !16102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16104, !srcloc !15715
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16105
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16105
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !16106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !16107
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16109, !srcloc !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15645, metadata !DIExpression()) #24, !dbg !16111
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !16111
  call void @llvm.dbg.value(metadata i32 undef, metadata !15639, metadata !DIExpression()) #24, !dbg !16107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16080
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16112
  %23 = sub nsw i32 %22, %15, !dbg !16112
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16080
  call void @llvm.dbg.value(metadata i32 undef, metadata !16076, metadata !DIExpression()), !dbg !16080
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !16087
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16088
  br i1 %25, label %28, label %5, !dbg !16089, !llvm.loop !16113

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16115
  store i64 %27, i64* %9, align 8, !dbg !16115
  br label %32, !dbg !16118

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16080
  %31 = sext i32 %30 to i64, !dbg !16119
  br label %32, !dbg !16119

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16119
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16080
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16120
  %37 = add i64 %36, %33, !dbg !16120
  store i64 %37, i64* @curr_tick, align 8, !dbg !16120
  store i32 0, i32* @announce_remaining, align 4, !dbg !16121
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !16122
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !16123
  call void @llvm.dbg.value(metadata i32 %35, metadata !15701, metadata !DIExpression()) #24, !dbg !16124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !16124
  call void @llvm.dbg.value(metadata i32 %35, metadata !15709, metadata !DIExpression()) #24, !dbg !16126
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !16128, !srcloc !15715
  ret void, !dbg !16129
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16130 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16134, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata i32 0, metadata !16135, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15633, metadata !DIExpression()) #24, !dbg !16140
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16142, !srcloc !15648
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16142
  call void @llvm.dbg.value(metadata i32 %2, metadata !15645, metadata !DIExpression()) #24, !dbg !16144
  call void @llvm.dbg.value(metadata i32 undef, metadata !15646, metadata !DIExpression()) #24, !dbg !16144
  call void @llvm.dbg.value(metadata i32 %2, metadata !15639, metadata !DIExpression()) #24, !dbg !16140
  call void @llvm.dbg.value(metadata i32 %2, metadata !16137, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata i64 0, metadata !16134, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16135, metadata !DIExpression()), !dbg !16139
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16145
  %4 = tail call fastcc i32 @elapsed.168() #26, !dbg !16148
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16134, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16138
  call void @llvm.dbg.value(metadata i32 %2, metadata !15701, metadata !DIExpression()) #24, !dbg !16149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15706, metadata !DIExpression()) #24, !dbg !16149
  call void @llvm.dbg.value(metadata i32 %2, metadata !15709, metadata !DIExpression()) #24, !dbg !16151
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16153, !srcloc !15715
  call void @llvm.dbg.value(metadata i32 undef, metadata !16135, metadata !DIExpression()), !dbg !16139
  %5 = sext i32 %4 to i64, !dbg !16148
  %6 = add i64 %3, %5, !dbg !16154
  ret i64 %6, !dbg !16155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16156 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16157
  %2 = trunc i64 %1 to i32, !dbg !16158
  ret i32 %2, !dbg !16159
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16160 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16161
  ret i64 %1, !dbg !16162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16165, metadata !DIExpression()), !dbg !16172
  %2 = icmp eq i32 %0, 0, !dbg !16173
  br i1 %2, label %10, label %3, !dbg !16175

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16176
  call void @llvm.dbg.value(metadata i32 %4, metadata !16166, metadata !DIExpression()), !dbg !16172
  %5 = mul i32 %0, 84, !dbg !16177
  call void @llvm.dbg.value(metadata i32 %5, metadata !16167, metadata !DIExpression()), !dbg !16172
  br label %6, !dbg !16178

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16179
  call void @llvm.dbg.value(metadata i32 %7, metadata !16168, metadata !DIExpression()), !dbg !16180
  %8 = sub i32 %7, %4, !dbg !16181
  %9 = icmp ult i32 %8, %5, !dbg !16183
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16185 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !16186
  ret i32 %1, !dbg !16187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16188 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !16190
  ret i32 %1, !dbg !16191
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16192 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16196, metadata !DIExpression()), !dbg !16198
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16199

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16200
  br label %14, !dbg !16204

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16197, metadata !DIExpression()), !dbg !16198
  %6 = icmp slt i64 %2, -1, !dbg !16205
  br i1 %6, label %7, label %9, !dbg !16208

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16209
  br label %14, !dbg !16210

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16212
  %11 = icmp ugt i64 %2, 1, !dbg !16213
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16213
  %13 = add nsw i64 %10, %12, !dbg !16214
  br label %14, !dbg !16215

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16216
  ret i64 %15, !dbg !16217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16218 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.189, i32 0, i32 0)) #25, !dbg !16220
  ret void, !dbg !16221
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!670, !2, !2295, !27, !124, !2297, !2299, !138, !2325, !2363, !167, !222, !2365, !2376, !2422, !2424, !2452, !2480, !2523, !2594, !2639, !251, !397, !2667, !433, !443, !468, !708, !2672, !846, !912, !1218, !1493, !2713, !1608, !1698, !2715, !2778, !2845, !1752, !2848, !1759, !2123, !2866, !2143, !2868, !2258, !2871}
!llvm.ident = !{!2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873, !2873}
!llvm.module.flags = !{!2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !167, file: !184, line: 56, type: !185, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !169, globals: !183, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 407, baseType: !173)
!172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 398, size: 224, elements: !174)
!174 = !{!175, !177, !178, !179, !180, !181, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !173, file: !172, line: 400, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !173, file: !172, line: 401, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !173, file: !172, line: 402, baseType: !176, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !173, file: !172, line: 403, baseType: !176, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !173, file: !172, line: 404, baseType: !176, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !173, file: !172, line: 405, baseType: !176, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !173, file: !172, line: 406, baseType: !176, size: 32, offset: 192)
!183 = !{!165}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = !{!189, !219}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !187, line: 60, baseType: !190, size: 32)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DISubroutineType(types: !192)
!192 = !{!103, !193}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !197)
!196 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!197 = !{!198, !201, !202, !203, !212, !213}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !196, line: 380, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !195, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !195, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !195, file: !196, line: 386, baseType: !204, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !206)
!206 = !{!207, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !205, file: !196, line: 359, baseType: !208, size: 8)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !209)
!209 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !205, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !195, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !195, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !196, line: 43, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !218)
!218 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !187, line: 65, baseType: !193, size: 32, offset: 32)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !222, file: !225, line: 71, type: !226, isLocal: true, isDefinition: true, align: 32)
!222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !224, splitDebugInlining: false, nameTableKind: None)
!223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!224 = !{!220}
!225 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !228)
!228 = !{!229, !248}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !227, file: !187, line: 60, baseType: !230, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !233}
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !236)
!236 = !{!237, !238, !239, !240, !246, !247}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !196, line: 380, baseType: !199, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !235, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !235, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !235, file: !196, line: 386, baseType: !241, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !243)
!243 = !{!244, !245}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !242, file: !196, line: 359, baseType: !208, size: 8)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !242, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !235, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !235, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !227, file: !187, line: 65, baseType: !233, size: 32, offset: 32)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "static_regions", scope: !251, file: !258, line: 62, type: !393, isLocal: true, isDefinition: true)
!251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !253, globals: !254, splitDebugInlining: false, nameTableKind: None)
!252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!253 = !{!120, !103, !137, !102}
!254 = !{!255, !249}
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !257, file: !258, line: 198, type: !379, isLocal: true, isDefinition: true)
!257 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !258, file: !258, line: 175, type: !259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !374)
!258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!259 = !DISubroutineType(types: !260)
!260 = !{null, !261}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !264)
!263 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!264 = !{!265, !332, !345, !346, !347, !348, !354, !369}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !262, file: !263, line: 247, baseType: !266, size: 384)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !267)
!267 = !{!268, !296, !304, !305, !306, !317, !318, !319}
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 60, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 60, size: 64, elements: !270)
!270 = !{!271, !287}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !269, file: !263, line: 61, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !275)
!275 = !{!276, !282}
!276 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 38, baseType: !277, size: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 38, size: 32, elements: !278)
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !277, file: !273, line: 39, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !277, file: !273, line: 40, baseType: !280, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 42, baseType: !283, size: 32, offset: 32)
!283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 42, size: 32, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !283, file: !273, line: 43, baseType: !280, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !283, file: !273, line: 44, baseType: !280, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !269, file: !263, line: 62, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !288, file: !289, line: 50, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 64, elements: !294)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!294 = !{!295}
!295 = !DISubrange(count: 2)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !266, file: !263, line: 68, baseType: !297, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !300)
!299 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !300, file: !299, line: 232, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !274)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !266, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !266, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!306 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 90, baseType: !307, size: 16, offset: 112)
!307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 90, size: 16, elements: !308)
!308 = !{!309, !316}
!309 = !DIDerivedType(tag: DW_TAG_member, scope: !307, file: !263, line: 91, baseType: !310, size: 16)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !307, file: !263, line: 91, size: 16, elements: !311)
!311 = !{!312, !315}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !310, file: !263, line: 96, baseType: !313, size: 8)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !314)
!314 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !310, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !307, file: !263, line: 100, baseType: !151, size: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !266, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !266, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !266, file: !263, line: 131, baseType: !320, size: 192, offset: 192)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !321)
!321 = !{!322, !323, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !320, file: !299, line: 245, baseType: !272, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !320, file: !299, line: 246, baseType: !324, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !328}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !320, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !331)
!331 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !262, file: !263, line: 250, baseType: !333, size: 288, offset: 384)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !340, !341, !342, !343, !344}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !333, file: !334, line: 26, baseType: !137, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !333, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !333, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !333, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !333, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !333, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !333, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !333, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !333, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !262, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !262, file: !263, line: 256, baseType: !298, size: 64, offset: 704)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !262, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !262, file: !263, line: 300, baseType: !349, size: 96, offset: 800)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !349, file: !263, line: 153, baseType: !22, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !349, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !349, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !262, file: !263, line: 325, baseType: !355, size: 32, offset: 896)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !358)
!357 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !365, !366}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !356, file: !357, line: 5074, baseType: !360, size: 96)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !360, file: !113, line: 57, baseType: !116, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !360, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !360, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !356, file: !357, line: 5075, baseType: !298, size: 64, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !356, file: !357, line: 5076, baseType: !367, offset: 160)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!368 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!369 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !262, file: !263, line: 343, baseType: !370, size: 64, offset: 928)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !370, file: !334, line: 63, baseType: !137, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !370, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!374 = !{!375, !376, !377, !378}
!375 = !DILocalVariable(name: "thread", arg: 1, scope: !257, file: !258, line: 175, type: !261)
!376 = !DILocalVariable(name: "region_num", scope: !257, file: !258, line: 200, type: !208)
!377 = !DILocalVariable(name: "guard_start", scope: !257, file: !258, line: 265, type: !22)
!378 = !DILocalVariable(name: "guard_size", scope: !257, file: !258, line: 266, type: !120)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 96, elements: !391)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !382)
!381 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !{!383, !384, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !380, file: !381, line: 53, baseType: !22, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !380, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !380, file: !381, line: 55, baseType: !386, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !389)
!389 = !{!390}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !388, file: !387, line: 150, baseType: !137, size: 32)
!391 = !{!392}
!392 = !DISubrange(count: 1)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 96, elements: !391)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !380)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !397, file: !430, line: 39, type: !208, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !399, globals: !429, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!399 = !{!400, !102, !103, !417, !208}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !402, line: 1226, baseType: !403)
!402 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 1213, size: 352, elements: !404)
!404 = !{!405, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !403, file: !402, line: 1215, baseType: !406, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !403, file: !402, line: 1216, baseType: !176, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !403, file: !402, line: 1217, baseType: !176, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !403, file: !402, line: 1218, baseType: !176, size: 32, offset: 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !403, file: !402, line: 1219, baseType: !176, size: 32, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !403, file: !402, line: 1220, baseType: !176, size: 32, offset: 160)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !403, file: !402, line: 1221, baseType: !176, size: 32, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !403, file: !402, line: 1222, baseType: !176, size: 32, offset: 224)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !403, file: !402, line: 1223, baseType: !176, size: 32, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !403, file: !402, line: 1224, baseType: !176, size: 32, offset: 288)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !403, file: !402, line: 1225, baseType: !176, size: 32, offset: 320)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !423, !424}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !419, file: !420, line: 29, baseType: !137, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !419, file: !420, line: 37, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !426, file: !387, line: 143, baseType: !137, size: 32)
!429 = !{!395}
!430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !433, file: !440, line: 21, type: !128, isLocal: true, isDefinition: true)
!433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !435, globals: !439, splitDebugInlining: false, nameTableKind: None)
!434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!435 = !{!436, !103, !102}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 22, baseType: !103)
!438 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!439 = !{!431}
!440 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !443, file: !448, line: 13, type: !465, isLocal: true, isDefinition: true)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !445, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!445 = !{!446, !441}
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "mpu_config", scope: !443, file: !448, line: 37, type: !449, isLocal: false, isDefinition: true)
!448 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !420, line: 41, size: 64, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !450, file: !420, line: 43, baseType: !137, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !450, file: !420, line: 45, baseType: !454, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !457)
!457 = !{!458, !459, !460}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !456, file: !420, line: 29, baseType: !137, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !456, file: !420, line: 37, baseType: !461, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !462, file: !387, line: 143, baseType: !137, size: 32)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !294)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !468, file: !581, line: 72, type: !665, isLocal: true, isDefinition: true)
!468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !470, retainedTypes: !567, globals: !578, splitDebugInlining: false, nameTableKind: None)
!469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!470 = !{!30, !471}
!471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 65, baseType: !103, size: 32, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566}
!473 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!474 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!475 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!476 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!477 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!478 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!479 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!480 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!481 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!482 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!483 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!484 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!485 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!486 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!487 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!488 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!489 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!490 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!491 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!492 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!493 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!494 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!495 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!496 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!497 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!498 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!499 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!500 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!501 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!502 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!503 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!504 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!505 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!506 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!507 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!508 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!509 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!510 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!511 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!512 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!513 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!514 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!515 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!516 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!517 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!518 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!519 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!520 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!521 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!522 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!523 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!524 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!525 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!526 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!527 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!528 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!529 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!530 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!531 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!532 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!533 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!534 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!535 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!536 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!537 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!538 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!539 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!540 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!541 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!542 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!543 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!544 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!545 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!546 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!547 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!548 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!549 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!550 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!551 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!552 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!553 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!554 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!555 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!556 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!557 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!558 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!559 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!560 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!561 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!562 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!563 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!564 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!565 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!566 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!567 = !{!120, !103, !102, !568}
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !172, line: 392, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 384, size: 192, elements: !571)
!571 = !{!572, !573, !574, !575, !576, !577}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !570, file: !172, line: 386, baseType: !176, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !570, file: !172, line: 387, baseType: !176, size: 32, offset: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !570, file: !172, line: 388, baseType: !176, size: 32, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !570, file: !172, line: 389, baseType: !176, size: 32, offset: 96)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !570, file: !172, line: 390, baseType: !176, size: 32, offset: 128)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !570, file: !172, line: 391, baseType: !176, size: 32, offset: 160)
!578 = !{!579, !585, !601, !612, !629, !466, !631, !645, !647, !649, !651, !653, !655, !657, !659, !661, !663}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !468, file: !581, line: 424, type: !582, isLocal: false, isDefinition: true, align: 16)
!581 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !583)
!583 = !{!584}
!584 = !DISubrange(count: 4)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !468, file: !581, line: 424, type: !587, isLocal: false, isDefinition: true, align: 32)
!587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !589)
!589 = !{!590, !591, !592, !593, !599, !600}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !588, file: !196, line: 380, baseType: !199, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !588, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !588, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !588, file: !196, line: 386, baseType: !594, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !596)
!596 = !{!597, !598}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !595, file: !196, line: 359, baseType: !208, size: 8)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !595, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !588, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !588, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !468, file: !581, line: 424, type: !603, isLocal: true, isDefinition: true, align: 32)
!603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !605)
!605 = !{!606, !611}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !604, file: !187, line: 60, baseType: !607, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 32)
!608 = !DISubroutineType(types: !609)
!609 = !{!103, !610}
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !604, file: !187, line: 65, baseType: !610, size: 32, offset: 32)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "exti_data", scope: !468, file: !581, line: 423, type: !614, isLocal: true, isDefinition: true)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !581, line: 107, size: 1472, elements: !615)
!615 = !{!616}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !614, file: !581, line: 109, baseType: !617, size: 1472)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !618, size: 1472, elements: !627)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !581, line: 101, size: 64, elements: !619)
!619 = !{!620, !626}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !618, file: !581, line: 102, baseType: !621, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !622, line: 63, baseType: !623)
!622 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 32)
!624 = !DISubroutineType(types: !625)
!625 = !{null, !103, !102}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !618, file: !581, line: 103, baseType: !102, size: 32, offset: 32)
!627 = !{!628}
!628 = !DISubrange(count: 23)
!629 = !DIGlobalVariableExpression(var: !630, expr: !DIExpression())
!630 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !468, file: !581, line: 424, type: !595, isLocal: true, isDefinition: true, align: 8)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !633, file: !581, line: 493, type: !638, isLocal: true, isDefinition: true, align: 32)
!633 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !581, file: !581, line: 460, type: !634, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !636)
!634 = !DISubroutineType(types: !635)
!635 = !{null, !610}
!636 = !{!637}
!637 = !DILocalVariable(name: "dev", arg: 1, scope: !633, file: !581, line: 460, type: !610)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !639)
!639 = !{!640, !642, !643, !644}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !638, file: !10, line: 55, baseType: !641, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !638, file: !10, line: 57, baseType: !641, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !638, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !638, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !633, file: !581, line: 497, type: !638, isLocal: true, isDefinition: true, align: 32)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !633, file: !581, line: 507, type: !638, isLocal: true, isDefinition: true, align: 32)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !633, file: !581, line: 512, type: !638, isLocal: true, isDefinition: true, align: 32)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !633, file: !581, line: 516, type: !638, isLocal: true, isDefinition: true, align: 32)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !633, file: !581, line: 523, type: !638, isLocal: true, isDefinition: true, align: 32)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !633, file: !581, line: 527, type: !638, isLocal: true, isDefinition: true, align: 32)
!657 = !DIGlobalVariableExpression(var: !658, expr: !DIExpression())
!658 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !633, file: !581, line: 581, type: !638, isLocal: true, isDefinition: true, align: 32)
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !633, file: !581, line: 586, type: !638, isLocal: true, isDefinition: true, align: 32)
!661 = !DIGlobalVariableExpression(var: !662, expr: !DIExpression())
!662 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !633, file: !581, line: 591, type: !638, isLocal: true, isDefinition: true, align: 32)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !633, file: !581, line: 595, type: !638, isLocal: true, isDefinition: true, align: 32)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 736, elements: !627)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !172, line: 163, baseType: !471)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !670, file: !675, line: 25, type: !703, isLocal: false, isDefinition: true, align: 16)
!670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !671, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !672, splitDebugInlining: false, nameTableKind: None)
!671 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!672 = !{!673, !668, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701}
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !670, file: !675, line: 20, type: !676, isLocal: false, isDefinition: true, align: 16)
!675 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 240, elements: !677)
!677 = !{!678}
!678 = !DISubrange(count: 15)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !670, file: !675, line: 32, type: !582, isLocal: false, isDefinition: true, align: 16)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !670, file: !675, line: 39, type: !582, isLocal: false, isDefinition: true, align: 16)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !670, file: !675, line: 46, type: !582, isLocal: false, isDefinition: true, align: 16)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !670, file: !675, line: 53, type: !582, isLocal: false, isDefinition: true, align: 16)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !670, file: !675, line: 60, type: !582, isLocal: false, isDefinition: true, align: 16)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !670, file: !675, line: 67, type: !582, isLocal: false, isDefinition: true, align: 16)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !670, file: !675, line: 74, type: !582, isLocal: false, isDefinition: true, align: 16)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !670, file: !675, line: 81, type: !582, isLocal: false, isDefinition: true, align: 16)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !670, file: !675, line: 88, type: !582, isLocal: false, isDefinition: true, align: 16)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !670, file: !675, line: 95, type: !582, isLocal: false, isDefinition: true, align: 16)
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !670, file: !675, line: 102, type: !582, isLocal: false, isDefinition: true, align: 16)
!701 = !DIGlobalVariableExpression(var: !702, expr: !DIExpression())
!702 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !670, file: !675, line: 109, type: !582, isLocal: false, isDefinition: true, align: 16)
!703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 48, elements: !704)
!704 = !{!705}
!705 = !DISubrange(count: 3)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !708, file: !772, line: 398, type: !805, isLocal: true, isDefinition: true)
!708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !709, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !710, retainedTypes: !723, globals: !769, splitDebugInlining: false, nameTableKind: None)
!709 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!710 = !{!711, !30, !716}
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !712, line: 197, baseType: !32, size: 32, elements: !713)
!712 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!713 = !{!714, !715}
!714 = !DIEnumerator(name: "SUCCESS", value: 0)
!715 = !DIEnumerator(name: "ERROR", value: 1)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !717, line: 44, baseType: !32, size: 32, elements: !718)
!717 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !{!719, !720, !721, !722}
!719 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!720 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!721 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!722 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!723 = !{!102, !103, !137, !724, !763, !149}
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 586, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 550, size: 1216, elements: !727)
!727 = !{!728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !726, file: !172, line: 552, baseType: !176, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !726, file: !172, line: 553, baseType: !176, size: 32, offset: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !726, file: !172, line: 554, baseType: !176, size: 32, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !726, file: !172, line: 555, baseType: !176, size: 32, offset: 96)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !726, file: !172, line: 556, baseType: !176, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !726, file: !172, line: 557, baseType: !176, size: 32, offset: 160)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !726, file: !172, line: 558, baseType: !176, size: 32, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !726, file: !172, line: 559, baseType: !137, size: 32, offset: 224)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !726, file: !172, line: 560, baseType: !176, size: 32, offset: 256)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !726, file: !172, line: 561, baseType: !176, size: 32, offset: 288)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !726, file: !172, line: 562, baseType: !739, size: 64, offset: 320)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !294)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !726, file: !172, line: 563, baseType: !176, size: 32, offset: 384)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !726, file: !172, line: 564, baseType: !176, size: 32, offset: 416)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !726, file: !172, line: 565, baseType: !176, size: 32, offset: 448)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !726, file: !172, line: 566, baseType: !137, size: 32, offset: 480)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !726, file: !172, line: 567, baseType: !176, size: 32, offset: 512)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !726, file: !172, line: 568, baseType: !176, size: 32, offset: 544)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !726, file: !172, line: 569, baseType: !739, size: 64, offset: 576)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !726, file: !172, line: 570, baseType: !176, size: 32, offset: 640)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !726, file: !172, line: 571, baseType: !176, size: 32, offset: 672)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !726, file: !172, line: 572, baseType: !176, size: 32, offset: 704)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !726, file: !172, line: 573, baseType: !137, size: 32, offset: 736)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !726, file: !172, line: 574, baseType: !176, size: 32, offset: 768)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !726, file: !172, line: 575, baseType: !176, size: 32, offset: 800)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !726, file: !172, line: 576, baseType: !739, size: 64, offset: 832)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !726, file: !172, line: 577, baseType: !176, size: 32, offset: 896)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !726, file: !172, line: 578, baseType: !176, size: 32, offset: 928)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !726, file: !172, line: 579, baseType: !739, size: 64, offset: 960)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !726, file: !172, line: 580, baseType: !176, size: 32, offset: 1024)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !726, file: !172, line: 581, baseType: !176, size: 32, offset: 1056)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !726, file: !172, line: 582, baseType: !176, size: 32, offset: 1088)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !726, file: !172, line: 583, baseType: !176, size: 32, offset: 1120)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !726, file: !172, line: 584, baseType: !176, size: 32, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !726, file: !172, line: 585, baseType: !176, size: 32, offset: 1184)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !765, line: 343, size: 64, elements: !766)
!765 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!766 = !{!767, !768}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !764, file: !765, line: 344, baseType: !137, size: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !764, file: !765, line: 345, baseType: !137, size: 32, offset: 32)
!769 = !{!770, !776, !792, !803, !706}
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !708, file: !772, line: 752, type: !773, isLocal: false, isDefinition: true, align: 16)
!772 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 800, elements: !774)
!774 = !{!775}
!775 = !DISubrange(count: 50)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !708, file: !772, line: 752, type: !778, isLocal: false, isDefinition: true, align: 32)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !780)
!780 = !{!781, !782, !783, !784, !790, !791}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !779, file: !196, line: 380, baseType: !199, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !779, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !779, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !779, file: !196, line: 386, baseType: !785, size: 32, offset: 96)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !786, file: !196, line: 359, baseType: !208, size: 8)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !786, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !779, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !779, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !708, file: !772, line: 752, type: !794, isLocal: true, isDefinition: true, align: 32)
!794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !796)
!796 = !{!797, !802}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !795, file: !187, line: 60, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!103, !801}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !795, file: !187, line: 65, baseType: !801, size: 32, offset: 32)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !708, file: !772, line: 752, type: !786, isLocal: true, isDefinition: true, align: 8)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !717, line: 100, size: 224, elements: !806)
!806 = !{!807, !813, !814, !823, !828, !833, !839}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !805, file: !717, line: 101, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !717, line: 76, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!810 = !DISubroutineType(types: !811)
!811 = !{!103, !801, !812}
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !717, line: 56, baseType: !102)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !805, file: !717, line: 102, baseType: !808, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !805, file: !717, line: 103, baseType: !815, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !717, line: 83, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DISubroutineType(types: !818)
!818 = !{!103, !801, !812, !819, !102}
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !717, line: 72, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DISubroutineType(types: !822)
!822 = !{null, !801, !812, !102}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !805, file: !717, line: 104, baseType: !824, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !717, line: 79, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = !DISubroutineType(types: !827)
!827 = !{!103, !801, !812, !149}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !805, file: !717, line: 105, baseType: !829, size: 32, offset: 128)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !717, line: 88, baseType: !830)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DISubroutineType(types: !832)
!832 = !{!716, !801, !812}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !805, file: !717, line: 106, baseType: !834, size: 32, offset: 160)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !717, line: 92, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32)
!836 = !DISubroutineType(types: !837)
!837 = !{!103, !801, !812, !838}
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !717, line: 64, baseType: !102)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !805, file: !717, line: 107, baseType: !840, size: 32, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !717, line: 96, baseType: !841)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!103, !801, !812, !102}
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !846, file: !903, line: 603, type: !905, isLocal: true, isDefinition: true, align: 32)
!846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !848, globals: !900, splitDebugInlining: false, nameTableKind: None)
!847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!848 = !{!102, !103, !849}
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !852, line: 336, size: 160, elements: !853)
!852 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!853 = !{!854, !874, !878, !882, !895}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !851, file: !852, line: 365, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DISubroutineType(types: !857)
!857 = !{!103, !858, !873}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !861)
!861 = !{!862, !863, !864, !865, !871, !872}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !860, file: !196, line: 380, baseType: !199, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !860, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !860, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !860, file: !196, line: 386, baseType: !866, size: 32, offset: 96)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !867, file: !196, line: 359, baseType: !208, size: 8)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !867, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !860, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !860, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !851, file: !852, line: 366, baseType: !875, size: 32, offset: 32)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 32)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !858, !209}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !851, file: !852, line: 374, baseType: !879, size: 32, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DISubroutineType(types: !881)
!881 = !{!103, !858}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !851, file: !852, line: 377, baseType: !883, size: 32, offset: 96)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = !DISubroutineType(types: !885)
!885 = !{!103, !858, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !852, line: 122, size: 64, elements: !889)
!889 = !{!890, !891, !892, !893, !894}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !888, file: !852, line: 123, baseType: !137, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !888, file: !852, line: 124, baseType: !208, size: 8, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !888, file: !852, line: 125, baseType: !208, size: 8, offset: 40)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !888, file: !852, line: 126, baseType: !208, size: 8, offset: 48)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !888, file: !852, line: 127, baseType: !208, size: 8, offset: 56)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !851, file: !852, line: 379, baseType: !896, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DISubroutineType(types: !898)
!898 = !{!103, !858, !899}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!900 = !{!844, !901}
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !846, file: !903, line: 38, type: !904, isLocal: true, isDefinition: true)
!903 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !907)
!907 = !{!908, !909}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !906, file: !187, line: 60, baseType: !879, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !906, file: !187, line: 65, baseType: !858, size: 32, offset: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !912, file: !1084, line: 762, type: !1193, isLocal: true, isDefinition: true)
!912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !914, retainedTypes: !932, globals: !1081, splitDebugInlining: false, nameTableKind: None)
!913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!914 = !{!30, !915, !921, !926, !716}
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !916, line: 506, baseType: !32, size: 32, elements: !917)
!916 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!917 = !{!918, !919, !920}
!918 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!919 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!920 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!921 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !916, line: 512, baseType: !32, size: 32, elements: !922)
!922 = !{!923, !924, !925}
!923 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!924 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!925 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !622, line: 43, baseType: !32, size: 32, elements: !927)
!927 = !{!928, !929, !930, !931}
!928 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!929 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!930 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!931 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!932 = !{!102, !103, !933, !1003, !1008, !968, !921, !915, !1013, !1014, !137, !1028, !983, !1040, !1041, !1042}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !916, line: 523, size: 288, elements: !936)
!936 = !{!937, !958, !964, !969, !973, !974, !975, !979, !999}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !935, file: !916, line: 524, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{!103, !941, !956, !957}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !944)
!944 = !{!945, !946, !947, !948, !954, !955}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !943, file: !196, line: 380, baseType: !199, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !943, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !943, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !943, file: !196, line: 386, baseType: !949, size: 32, offset: 96)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !950, file: !196, line: 359, baseType: !208, size: 8)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !950, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !943, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !943, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !916, line: 237, baseType: !208)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !916, line: 257, baseType: !137)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !935, file: !916, line: 530, baseType: !959, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!103, !941, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !916, line: 229, baseType: !137)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !935, file: !916, line: 532, baseType: !965, size: 32, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!103, !941, !968, !963}
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !916, line: 216, baseType: !137)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !935, file: !916, line: 535, baseType: !970, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DISubroutineType(types: !972)
!972 = !{!103, !941, !968}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !935, file: !916, line: 537, baseType: !970, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !935, file: !916, line: 539, baseType: !970, size: 32, offset: 160)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !935, file: !916, line: 541, baseType: !976, size: 32, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!977 = !DISubroutineType(types: !978)
!978 = !{!103, !941, !956, !915, !921}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !935, file: !916, line: 544, baseType: !980, size: 32, offset: 224)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!103, !941, !983, !211}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !916, line: 478, size: 96, elements: !985)
!985 = !{!986, !993, !998}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !984, file: !916, line: 482, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !988, line: 33, baseType: !989)
!988 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !988, line: 29, size: 32, elements: !990)
!990 = !{!991}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !989, file: !988, line: 30, baseType: !992, size: 32)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !984, file: !916, line: 485, baseType: !994, size: 32, offset: 32)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !916, line: 464, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{null, !941, !983, !968}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !984, file: !916, line: 493, baseType: !968, size: 32, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !935, file: !916, line: 547, baseType: !1000, size: 32, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!137, !941}
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !916, line: 428, size: 32, elements: !1006)
!1006 = !{!1007}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1005, file: !916, line: 434, baseType: !968, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !916, line: 441, size: 32, elements: !1011)
!1011 = !{!1012}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1010, file: !916, line: 447, baseType: !968, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 469, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 458, size: 320, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1016, file: !172, line: 460, baseType: !176, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1016, file: !172, line: 461, baseType: !176, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1016, file: !172, line: 462, baseType: !176, size: 32, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1016, file: !172, line: 463, baseType: !176, size: 32, offset: 96)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1016, file: !172, line: 464, baseType: !176, size: 32, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1016, file: !172, line: 465, baseType: !176, size: 32, offset: 160)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1016, file: !172, line: 466, baseType: !176, size: 32, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1016, file: !172, line: 467, baseType: !176, size: 32, offset: 224)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1016, file: !172, line: 468, baseType: !1027, size: 64, offset: 256)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !294)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !172, line: 484, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 475, size: 384, elements: !1031)
!1031 = !{!1032, !1033, !1034, !1036, !1037, !1038, !1039}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1030, file: !172, line: 477, baseType: !176, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1030, file: !172, line: 478, baseType: !176, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1030, file: !172, line: 479, baseType: !1035, size: 128, offset: 64)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !583)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1030, file: !172, line: 480, baseType: !739, size: 64, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1030, file: !172, line: 481, baseType: !176, size: 32, offset: 256)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1030, file: !172, line: 482, baseType: !739, size: 64, offset: 288)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1030, file: !172, line: 483, baseType: !176, size: 32, offset: 352)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !717, line: 100, size: 224, elements: !1045)
!1045 = !{!1046, !1051, !1052, !1061, !1066, !1071, !1076}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1044, file: !717, line: 101, baseType: !1047, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !717, line: 76, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!103, !941, !812}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1044, file: !717, line: 102, baseType: !1047, size: 32, offset: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1044, file: !717, line: 103, baseType: !1053, size: 32, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !717, line: 83, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!103, !941, !812, !1057, !102}
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !717, line: 72, baseType: !1058)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !941, !812, !102}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1044, file: !717, line: 104, baseType: !1062, size: 32, offset: 96)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !717, line: 79, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!103, !941, !812, !149}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1044, file: !717, line: 105, baseType: !1067, size: 32, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !717, line: 88, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!716, !941, !812}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1044, file: !717, line: 106, baseType: !1072, size: 32, offset: 160)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !717, line: 92, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!103, !941, !812, !838}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1044, file: !717, line: 107, baseType: !1077, size: 32, offset: 192)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !717, line: 96, baseType: !1078)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!103, !941, !812, !102}
!1081 = !{!1082, !1088, !1090, !1100, !1102, !1104, !1106, !1108, !1110, !1112, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1131, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1159, !1161, !1163, !1165, !1167, !1169, !1171, !1173, !1175, !1177, !1179, !1181, !1183, !1185, !1187, !910, !1189, !1191, !1204, !1206, !1208, !1210, !1212, !1214}
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !912, file: !1084, line: 762, type: !1085, isLocal: false, isDefinition: true, align: 16)
!1084 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 80, elements: !1086)
!1086 = !{!1087}
!1087 = !DISubrange(count: 5)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !912, file: !1084, line: 762, type: !942, isLocal: false, isDefinition: true, align: 32)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !912, file: !1084, line: 762, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1094)
!1094 = !{!1095, !1099}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1093, file: !187, line: 60, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!103, !941}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1093, file: !187, line: 65, baseType: !941, size: 32, offset: 32)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !912, file: !1084, line: 766, type: !1085, isLocal: false, isDefinition: true, align: 16)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !912, file: !1084, line: 766, type: !942, isLocal: false, isDefinition: true, align: 32)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !912, file: !1084, line: 766, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !912, file: !1084, line: 770, type: !1085, isLocal: false, isDefinition: true, align: 16)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !912, file: !1084, line: 770, type: !942, isLocal: false, isDefinition: true, align: 32)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !912, file: !1084, line: 770, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !912, file: !1084, line: 774, type: !1114, isLocal: false, isDefinition: true, align: 16)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 144, elements: !1115)
!1115 = !{!1116}
!1116 = !DISubrange(count: 9)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !912, file: !1084, line: 774, type: !942, isLocal: false, isDefinition: true, align: 32)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !912, file: !1084, line: 774, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !912, file: !1084, line: 778, type: !1085, isLocal: false, isDefinition: true, align: 16)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !912, file: !1084, line: 778, type: !942, isLocal: false, isDefinition: true, align: 32)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !912, file: !1084, line: 778, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !912, file: !1084, line: 782, type: !1085, isLocal: false, isDefinition: true, align: 16)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !912, file: !1084, line: 782, type: !942, isLocal: false, isDefinition: true, align: 32)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !912, file: !1084, line: 782, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !912, file: !1084, line: 786, type: !1085, isLocal: false, isDefinition: true, align: 16)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !912, file: !1084, line: 786, type: !942, isLocal: false, isDefinition: true, align: 32)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !912, file: !1084, line: 786, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !912, file: !1084, line: 790, type: !1085, isLocal: false, isDefinition: true, align: 16)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !912, file: !1084, line: 790, type: !942, isLocal: false, isDefinition: true, align: 32)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !912, file: !1084, line: 790, type: !1092, isLocal: true, isDefinition: true, align: 32)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !912, file: !1084, line: 762, type: !1147, isLocal: true, isDefinition: true)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1148, line: 237, size: 128, elements: !1149)
!1148 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1149 = !{!1150, !1151, !1152}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1147, file: !1148, line: 239, baseType: !1010, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1147, file: !1148, line: 241, baseType: !941, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1147, file: !1148, line: 243, baseType: !1153, size: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !988, line: 40, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !988, line: 35, size: 64, elements: !1155)
!1155 = !{!1156, !1158}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1154, file: !988, line: 36, baseType: !1157, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1154, file: !988, line: 37, baseType: !1157, size: 32, offset: 32)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !912, file: !1084, line: 762, type: !950, isLocal: true, isDefinition: true, align: 8)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !912, file: !1084, line: 766, type: !1147, isLocal: true, isDefinition: true)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !912, file: !1084, line: 766, type: !950, isLocal: true, isDefinition: true, align: 8)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !912, file: !1084, line: 770, type: !1147, isLocal: true, isDefinition: true)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !912, file: !1084, line: 770, type: !950, isLocal: true, isDefinition: true, align: 8)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !912, file: !1084, line: 774, type: !1147, isLocal: true, isDefinition: true)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !912, file: !1084, line: 774, type: !950, isLocal: true, isDefinition: true, align: 8)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !912, file: !1084, line: 778, type: !1147, isLocal: true, isDefinition: true)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !912, file: !1084, line: 778, type: !950, isLocal: true, isDefinition: true, align: 8)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !912, file: !1084, line: 782, type: !1147, isLocal: true, isDefinition: true)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !912, file: !1084, line: 782, type: !950, isLocal: true, isDefinition: true, align: 8)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !912, file: !1084, line: 786, type: !1147, isLocal: true, isDefinition: true)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !912, file: !1084, line: 786, type: !950, isLocal: true, isDefinition: true, align: 8)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !912, file: !1084, line: 790, type: !1147, isLocal: true, isDefinition: true)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !912, file: !1084, line: 790, type: !950, isLocal: true, isDefinition: true, align: 8)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !912, file: !1084, line: 656, type: !934, isLocal: true, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !912, file: !1084, line: 766, type: !1193, isLocal: true, isDefinition: true)
!1193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1148, line: 224, size: 160, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1194, file: !1148, line: 226, baseType: !1005, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1194, file: !1148, line: 228, baseType: !149, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1194, file: !1148, line: 230, baseType: !103, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1194, file: !1148, line: 231, baseType: !1200, size: 64, offset: 96)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !765, line: 343, size: 64, elements: !1201)
!1201 = !{!1202, !1203}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1200, file: !765, line: 344, baseType: !137, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1200, file: !765, line: 345, baseType: !137, size: 32, offset: 32)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !912, file: !1084, line: 770, type: !1193, isLocal: true, isDefinition: true)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !912, file: !1084, line: 774, type: !1193, isLocal: true, isDefinition: true)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !912, file: !1084, line: 778, type: !1193, isLocal: true, isDefinition: true)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !912, file: !1084, line: 782, type: !1193, isLocal: true, isDefinition: true)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !912, file: !1084, line: 786, type: !1193, isLocal: true, isDefinition: true)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !912, file: !1084, line: 790, type: !1193, isLocal: true, isDefinition: true)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1218, file: !1357, line: 1914, type: !1442, isLocal: true, isDefinition: true)
!1218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1220, retainedTypes: !1253, globals: !1354, splitDebugInlining: false, nameTableKind: None)
!1219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!1220 = !{!30, !1221, !1228, !1235, !1242, !1248, !716}
!1221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !852, line: 47, baseType: !32, size: 32, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1227}
!1223 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1224 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1225 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1226 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1227 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1228 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !852, line: 75, baseType: !32, size: 32, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233, !1234}
!1230 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1231 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1232 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1233 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1234 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !852, line: 92, baseType: !32, size: 32, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241}
!1237 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1238 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1239 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1240 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1241 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !852, line: 84, baseType: !32, size: 32, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247}
!1244 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1245 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1246 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1247 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1248 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !852, line: 107, baseType: !32, size: 32, elements: !1249)
!1249 = !{!1250, !1251, !1252}
!1250 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1251 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1252 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1253 = !{!102, !103, !1254, !209, !208, !1303, !137, !812, !1314, !151, !163, !1353}
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !852, line: 336, size: 160, elements: !1257)
!1257 = !{!1258, !1277, !1281, !1285, !1298}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1256, file: !852, line: 365, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!103, !1262, !873}
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1275, !1276}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1264, file: !196, line: 380, baseType: !199, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1264, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1264, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1264, file: !196, line: 386, baseType: !1270, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1272)
!1272 = !{!1273, !1274}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1271, file: !196, line: 359, baseType: !208, size: 8)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1271, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1264, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1264, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1256, file: !852, line: 366, baseType: !1278, size: 32, offset: 32)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{null, !1262, !209}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1256, file: !852, line: 374, baseType: !1282, size: 32, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!103, !1262}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1256, file: !852, line: 377, baseType: !1286, size: 32, offset: 96)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!103, !1262, !1289}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !852, line: 122, size: 64, elements: !1292)
!1292 = !{!1293, !1294, !1295, !1296, !1297}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1291, file: !852, line: 123, baseType: !137, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1291, file: !852, line: 124, baseType: !208, size: 8, offset: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1291, file: !852, line: 125, baseType: !208, size: 8, offset: 40)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1291, file: !852, line: 126, baseType: !208, size: 8, offset: 48)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1291, file: !852, line: 127, baseType: !208, size: 8, offset: 56)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1256, file: !852, line: 379, baseType: !1299, size: 32, offset: 128)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!103, !1262, !1302}
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !172, line: 783, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 774, size: 224, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1311, !1312, !1313}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1305, file: !172, line: 776, baseType: !176, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1305, file: !172, line: 777, baseType: !176, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1305, file: !172, line: 778, baseType: !176, size: 32, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1305, file: !172, line: 779, baseType: !176, size: 32, offset: 96)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1305, file: !172, line: 780, baseType: !176, size: 32, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1305, file: !172, line: 781, baseType: !176, size: 32, offset: 160)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1305, file: !172, line: 782, baseType: !176, size: 32, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !717, line: 100, size: 224, elements: !1317)
!1317 = !{!1318, !1323, !1324, !1333, !1338, !1343, !1348}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1316, file: !717, line: 101, baseType: !1319, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !717, line: 76, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!103, !1262, !812}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1316, file: !717, line: 102, baseType: !1319, size: 32, offset: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1316, file: !717, line: 103, baseType: !1325, size: 32, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !717, line: 83, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!103, !1262, !812, !1329, !102}
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !717, line: 72, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{null, !1262, !812, !102}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1316, file: !717, line: 104, baseType: !1334, size: 32, offset: 96)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !717, line: 79, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!103, !1262, !812, !149}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1316, file: !717, line: 105, baseType: !1339, size: 32, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !717, line: 88, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!716, !1262, !812}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1316, file: !717, line: 106, baseType: !1344, size: 32, offset: 160)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !717, line: 92, baseType: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!103, !1262, !812, !838}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1316, file: !717, line: 107, baseType: !1349, size: 32, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !717, line: 96, baseType: !1350)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!103, !1262, !812, !102}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!1354 = !{!1355, !1359, !1361, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1216, !1394, !1402, !1425, !1428, !1431, !1433, !1440, !1457, !1459, !1461, !1463, !1465, !1467, !1469, !1471, !1473, !1475, !1477, !1479, !1481, !1483, !1485, !1487, !1489}
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1218, file: !1357, line: 1914, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1357 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !159)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1218, file: !1357, line: 1914, type: !1263, isLocal: false, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1218, file: !1357, line: 1914, type: !1363, isLocal: true, isDefinition: true, align: 32)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1365)
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1364, file: !187, line: 60, baseType: !1282, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1364, file: !187, line: 65, baseType: !1262, size: 32, offset: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1218, file: !1357, line: 1914, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1218, file: !1357, line: 1914, type: !1263, isLocal: false, isDefinition: true, align: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1218, file: !1357, line: 1914, type: !1363, isLocal: true, isDefinition: true, align: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1218, file: !1357, line: 1914, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1218, file: !1357, line: 1914, type: !1263, isLocal: false, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1218, file: !1357, line: 1914, type: !1363, isLocal: true, isDefinition: true, align: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1218, file: !1357, line: 1914, type: !1358, isLocal: false, isDefinition: true, align: 16)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1218, file: !1357, line: 1914, type: !1263, isLocal: false, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1218, file: !1357, line: 1914, type: !1363, isLocal: true, isDefinition: true, align: 32)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1218, file: !1357, line: 1914, type: !1271, isLocal: true, isDefinition: true, align: 8)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1218, file: !1357, line: 1914, type: !1271, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1218, file: !1357, line: 1914, type: !1271, isLocal: true, isDefinition: true, align: 8)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1218, file: !1357, line: 1914, type: !1271, isLocal: true, isDefinition: true, align: 8)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1218, file: !1357, line: 1914, type: !1396, isLocal: true, isDefinition: true)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 64, elements: !391)
!1397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !765, line: 343, size: 64, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1398, file: !765, line: 344, baseType: !137, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1398, file: !765, line: 345, baseType: !137, size: 32, offset: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1218, file: !1357, line: 1914, type: !1404, isLocal: true, isDefinition: true)
!1404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1406, line: 60, size: 64, elements: !1407)
!1406 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1407 = !{!1408, !1424}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1405, file: !1406, line: 69, baseType: !1409, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1406, line: 50, size: 64, elements: !1412)
!1412 = !{!1413, !1422, !1423}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1411, file: !1406, line: 52, baseType: !1414, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1417, line: 37, baseType: !1418)
!1417 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1417, line: 32, size: 64, elements: !1419)
!1419 = !{!1420, !1421}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1418, file: !1417, line: 34, baseType: !137, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1418, file: !1417, line: 36, baseType: !137, size: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1411, file: !1406, line: 54, baseType: !208, size: 8, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1411, file: !1406, line: 56, baseType: !208, size: 8, offset: 40)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1405, file: !1406, line: 71, baseType: !208, size: 8, offset: 32)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1218, file: !1357, line: 1914, type: !1427, isLocal: true, isDefinition: true)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 64, elements: !391)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1218, file: !1357, line: 1914, type: !1430, isLocal: true, isDefinition: true)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1415, size: 128, elements: !294)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1218, file: !1357, line: 1539, type: !1255, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1218, file: !1357, line: 1914, type: !1435, isLocal: true, isDefinition: true)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1436, line: 74, size: 64, elements: !1437)
!1436 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1437 = !{!1438, !1439}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1435, file: !1436, line: 76, baseType: !137, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1435, file: !1436, line: 78, baseType: !1262, size: 32, offset: 32)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1218, file: !1357, line: 1914, type: !1442, isLocal: true, isDefinition: true)
!1442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1436, line: 22, size: 224, elements: !1444)
!1444 = !{!1445, !1446, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1443, file: !1436, line: 24, baseType: !1303, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1443, file: !1436, line: 26, baseType: !1447, size: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1443, file: !1436, line: 28, baseType: !120, size: 32, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1443, file: !1436, line: 30, baseType: !211, size: 8, offset: 96)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1443, file: !1436, line: 32, baseType: !103, size: 32, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1443, file: !1436, line: 34, baseType: !211, size: 8, offset: 160)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1443, file: !1436, line: 36, baseType: !211, size: 8, offset: 168)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1443, file: !1436, line: 38, baseType: !211, size: 8, offset: 176)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1443, file: !1436, line: 40, baseType: !211, size: 8, offset: 184)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1443, file: !1436, line: 41, baseType: !1456, size: 32, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1218, file: !1357, line: 1914, type: !1396, isLocal: true, isDefinition: true)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1218, file: !1357, line: 1914, type: !1404, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1218, file: !1357, line: 1914, type: !1427, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1218, file: !1357, line: 1914, type: !1430, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1218, file: !1357, line: 1914, type: !1435, isLocal: true, isDefinition: true)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1218, file: !1357, line: 1914, type: !1442, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1218, file: !1357, line: 1914, type: !1396, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1218, file: !1357, line: 1914, type: !1404, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1218, file: !1357, line: 1914, type: !1427, isLocal: true, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1218, file: !1357, line: 1914, type: !1430, isLocal: true, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1218, file: !1357, line: 1914, type: !1435, isLocal: true, isDefinition: true)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1218, file: !1357, line: 1914, type: !1442, isLocal: true, isDefinition: true)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1218, file: !1357, line: 1914, type: !1396, isLocal: true, isDefinition: true)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1218, file: !1357, line: 1914, type: !1404, isLocal: true, isDefinition: true)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1218, file: !1357, line: 1914, type: !1427, isLocal: true, isDefinition: true)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1218, file: !1357, line: 1914, type: !1430, isLocal: true, isDefinition: true)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1218, file: !1357, line: 1914, type: !1435, isLocal: true, isDefinition: true)
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1493, file: !1573, line: 65, type: !176, isLocal: true, isDefinition: true)
!1493 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1494, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1495, retainedTypes: !1496, globals: !1570, splitDebugInlining: false, nameTableKind: None)
!1494 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!1495 = !{!471}
!1496 = !{!1497, !1499, !641, !208, !137, !1507, !1538}
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1498, line: 46, baseType: !330)
!1498 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1501, file: !402, line: 766, baseType: !176, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1501, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1501, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1501, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1510)
!1510 = !{!1511, !1513, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1528, !1533, !1537}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1509, file: !402, line: 413, baseType: !1512, size: 256)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1509, file: !402, line: 414, baseType: !1514, size: 768, offset: 256)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1515)
!1515 = !{!1516}
!1516 = !DISubrange(count: 24)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1509, file: !402, line: 415, baseType: !1512, size: 256, offset: 1024)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1509, file: !402, line: 416, baseType: !1514, size: 768, offset: 1280)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1509, file: !402, line: 417, baseType: !1512, size: 256, offset: 2048)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1509, file: !402, line: 418, baseType: !1514, size: 768, offset: 2304)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1509, file: !402, line: 419, baseType: !1512, size: 256, offset: 3072)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1509, file: !402, line: 420, baseType: !1514, size: 768, offset: 3328)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1509, file: !402, line: 421, baseType: !1512, size: 256, offset: 4096)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1509, file: !402, line: 422, baseType: !1525, size: 1792, offset: 4352)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1526)
!1526 = !{!1527}
!1527 = !DISubrange(count: 56)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1509, file: !402, line: 423, baseType: !1529, size: 1920, offset: 6144)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1530, size: 1920, elements: !1531)
!1530 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!1531 = !{!1532}
!1532 = !DISubrange(count: 240)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1509, file: !402, line: 424, baseType: !1534, size: 20608, offset: 8064)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1535)
!1535 = !{!1536}
!1536 = !DISubrange(count: 644)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1509, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1545, !1546, !1547, !1548, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1561, !1562, !1563, !1565, !1567, !1569}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1540, file: !402, line: 447, baseType: !406, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1540, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1540, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1540, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1540, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1540, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1540, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1530, size: 96, elements: !1550)
!1550 = !{!1551}
!1551 = !DISubrange(count: 12)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1540, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1540, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1540, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1540, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1540, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1540, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1540, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1540, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 64, elements: !294)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1540, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1540, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1540, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 128, elements: !583)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1540, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!1566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 160, elements: !1086)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1540, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!1568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1086)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1540, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1570 = !{!1571, !1597, !1600, !1602, !1604, !1491}
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1493, file: !1573, line: 285, type: !1574, isLocal: true, isDefinition: true, align: 32)
!1573 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1576)
!1576 = !{!1577, !1596}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1575, file: !187, line: 60, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!103, !1581}
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1594, !1595}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1583, file: !196, line: 380, baseType: !199, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1583, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1583, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1583, file: !196, line: 386, baseType: !1589, size: 32, offset: 96)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1590, file: !196, line: 359, baseType: !208, size: 8)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1590, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1583, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1583, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1575, file: !187, line: 65, baseType: !1581, size: 32, offset: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "lock", scope: !1493, file: !1573, line: 34, type: !1599, isLocal: true, isDefinition: true)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "last_load", scope: !1493, file: !1573, line: 36, type: !137, isLocal: true, isDefinition: true)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1493, file: !1573, line: 48, type: !137, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1493, file: !1573, line: 54, type: !137, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1608, file: !1690, line: 22, type: !1692, isLocal: true, isDefinition: true)
!1608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1609, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1610, retainedTypes: !1611, globals: !1687, splitDebugInlining: false, nameTableKind: None)
!1609 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!1610 = !{!915, !921}
!1611 = !{!1612, !1676, !1681, !968, !921, !915, !1686, !102}
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !916, line: 523, size: 288, elements: !1615)
!1615 = !{!1616, !1635, !1639, !1643, !1647, !1648, !1649, !1653, !1672}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1614, file: !916, line: 524, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 32)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!103, !1620, !956, !957}
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1623)
!1623 = !{!1624, !1625, !1626, !1627, !1633, !1634}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1622, file: !196, line: 380, baseType: !199, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1622, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1622, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1622, file: !196, line: 386, baseType: !1628, size: 32, offset: 96)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1629, file: !196, line: 359, baseType: !208, size: 8)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1629, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1622, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1622, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1614, file: !916, line: 530, baseType: !1636, size: 32, offset: 32)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!103, !1620, !962}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1614, file: !916, line: 532, baseType: !1640, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!103, !1620, !968, !963}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1614, file: !916, line: 535, baseType: !1644, size: 32, offset: 96)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!103, !1620, !968}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1614, file: !916, line: 537, baseType: !1644, size: 32, offset: 128)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1614, file: !916, line: 539, baseType: !1644, size: 32, offset: 160)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1614, file: !916, line: 541, baseType: !1650, size: 32, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!103, !1620, !956, !915, !921}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1614, file: !916, line: 544, baseType: !1654, size: 32, offset: 224)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!103, !1620, !1657, !211}
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !916, line: 478, size: 96, elements: !1659)
!1659 = !{!1660, !1666, !1671}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1658, file: !916, line: 482, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !988, line: 33, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !988, line: 29, size: 32, elements: !1663)
!1663 = !{!1664}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1662, file: !988, line: 30, baseType: !1665, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1658, file: !916, line: 485, baseType: !1667, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !916, line: 464, baseType: !1668)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{null, !1620, !1657, !968}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1658, file: !916, line: 493, baseType: !968, size: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1614, file: !916, line: 547, baseType: !1673, size: 32, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!137, !1620}
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !916, line: 428, size: 32, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1678, file: !916, line: 434, baseType: !968, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !916, line: 441, size: 32, elements: !1684)
!1684 = !{!1685}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1683, file: !916, line: 447, baseType: !968, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1687 = !{!1688, !1606}
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1689 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1608, file: !1690, line: 37, type: !1691, isLocal: true, isDefinition: true)
!1690 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 352, elements: !1694)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1694 = !{!1695}
!1695 = !DISubrange(count: 11)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1698, file: !1742, line: 139, type: !1749, isLocal: false, isDefinition: true)
!1698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1700, globals: !1739, splitDebugInlining: false, nameTableKind: None)
!1699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 586, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 550, size: 1216, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1703, file: !172, line: 552, baseType: !176, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1703, file: !172, line: 553, baseType: !176, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1703, file: !172, line: 554, baseType: !176, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1703, file: !172, line: 555, baseType: !176, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1703, file: !172, line: 556, baseType: !176, size: 32, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1703, file: !172, line: 557, baseType: !176, size: 32, offset: 160)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1703, file: !172, line: 558, baseType: !176, size: 32, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1703, file: !172, line: 559, baseType: !137, size: 32, offset: 224)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1703, file: !172, line: 560, baseType: !176, size: 32, offset: 256)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1703, file: !172, line: 561, baseType: !176, size: 32, offset: 288)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1703, file: !172, line: 562, baseType: !739, size: 64, offset: 320)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1703, file: !172, line: 563, baseType: !176, size: 32, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1703, file: !172, line: 564, baseType: !176, size: 32, offset: 416)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1703, file: !172, line: 565, baseType: !176, size: 32, offset: 448)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1703, file: !172, line: 566, baseType: !137, size: 32, offset: 480)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1703, file: !172, line: 567, baseType: !176, size: 32, offset: 512)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1703, file: !172, line: 568, baseType: !176, size: 32, offset: 544)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1703, file: !172, line: 569, baseType: !739, size: 64, offset: 576)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1703, file: !172, line: 570, baseType: !176, size: 32, offset: 640)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1703, file: !172, line: 571, baseType: !176, size: 32, offset: 672)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1703, file: !172, line: 572, baseType: !176, size: 32, offset: 704)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1703, file: !172, line: 573, baseType: !137, size: 32, offset: 736)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1703, file: !172, line: 574, baseType: !176, size: 32, offset: 768)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1703, file: !172, line: 575, baseType: !176, size: 32, offset: 800)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1703, file: !172, line: 576, baseType: !739, size: 64, offset: 832)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1703, file: !172, line: 577, baseType: !176, size: 32, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1703, file: !172, line: 578, baseType: !176, size: 32, offset: 928)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1703, file: !172, line: 579, baseType: !739, size: 64, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1703, file: !172, line: 580, baseType: !176, size: 32, offset: 1024)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1703, file: !172, line: 581, baseType: !176, size: 32, offset: 1056)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1703, file: !172, line: 582, baseType: !176, size: 32, offset: 1088)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1703, file: !172, line: 583, baseType: !176, size: 32, offset: 1120)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1703, file: !172, line: 584, baseType: !176, size: 32, offset: 1152)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1703, file: !172, line: 585, baseType: !176, size: 32, offset: 1184)
!1739 = !{!1740, !1743, !1696}
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1698, file: !1742, line: 137, type: !137, isLocal: false, isDefinition: true)
!1742 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1743 = !DIGlobalVariableExpression(var: !1744, expr: !DIExpression())
!1744 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1698, file: !1742, line: 138, type: !1745, isLocal: false, isDefinition: true)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1746, size: 128, elements: !1747)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!1747 = !{!1748}
!1748 = !DISubrange(count: 16)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1746, size: 64, elements: !159)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1752, file: !1755, line: 23, type: !1756, isLocal: false, isDefinition: true)
!1752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1753, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1754, splitDebugInlining: false, nameTableKind: None)
!1753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!1754 = !{!1750}
!1755 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1759, file: !1763, line: 86, type: !2013, isLocal: false, isDefinition: true, align: 512)
!1759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1761, retainedTypes: !1770, globals: !1844, splitDebugInlining: false, nameTableKind: None)
!1760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!1761 = !{!1762, !30, !471}
!1762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1763, line: 63, baseType: !32, size: 32, elements: !1764)
!1763 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1764 = !{!1765, !1766, !1767, !1768, !1769}
!1765 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1766 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1767 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1768 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1769 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1770 = !{!120, !102, !103, !1771, !1040, !137, !1802, !641, !208, !1827}
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1774, line: 51, size: 64, elements: !1775)
!1774 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1775 = !{!1776, !1797}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1773, file: !1774, line: 52, baseType: !1777, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1774, line: 38, baseType: !1778)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!103, !1781, !1796, !151}
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788, !1794, !1795}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1783, file: !196, line: 380, baseType: !199, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1783, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1783, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1783, file: !196, line: 386, baseType: !1789, size: 32, offset: 96)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1791)
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1790, file: !196, line: 359, baseType: !208, size: 8)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1790, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1783, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1783, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1773, file: !1774, line: 53, baseType: !1798, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1774, line: 47, baseType: !1799)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!103, !1781, !1796, !151, !137}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1804, file: !402, line: 447, baseType: !406, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1804, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1804, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1804, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1804, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1804, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1804, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1804, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1804, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1804, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1804, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1804, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1804, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1804, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1804, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1804, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1804, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1804, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1804, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1804, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1804, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1829)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1829, file: !402, line: 413, baseType: !1512, size: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1829, file: !402, line: 414, baseType: !1514, size: 768, offset: 256)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1829, file: !402, line: 415, baseType: !1512, size: 256, offset: 1024)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1829, file: !402, line: 416, baseType: !1514, size: 768, offset: 1280)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1829, file: !402, line: 417, baseType: !1512, size: 256, offset: 2048)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1829, file: !402, line: 418, baseType: !1514, size: 768, offset: 2304)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1829, file: !402, line: 419, baseType: !1512, size: 256, offset: 3072)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1829, file: !402, line: 420, baseType: !1514, size: 768, offset: 3328)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1829, file: !402, line: 421, baseType: !1512, size: 256, offset: 4096)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1829, file: !402, line: 422, baseType: !1525, size: 1792, offset: 4352)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1829, file: !402, line: 423, baseType: !1529, size: 1920, offset: 6144)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1829, file: !402, line: 424, baseType: !1534, size: 20608, offset: 8064)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1829, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1844 = !{!1845, !1967, !1976, !1978, !1757, !1981, !1983, !1988}
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "_kernel", scope: !1759, file: !1763, line: 40, type: !1847, isLocal: false, isDefinition: true)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !299, line: 158, size: 288, elements: !1848)
!1848 = !{!1849, !1962}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1847, file: !299, line: 159, baseType: !1850, size: 192)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 192, elements: !391)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !299, line: 100, size: 192, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1956, !1957, !1958, !1959}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1851, file: !299, line: 102, baseType: !137, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1851, file: !299, line: 105, baseType: !1040, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1851, file: !299, line: 108, baseType: !1856, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1858)
!1858 = !{!1859, !1917, !1929, !1930, !1931, !1932, !1938, !1951}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1857, file: !263, line: 247, baseType: !1860, size: 384)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1861)
!1861 = !{!1862, !1886, !1893, !1894, !1895, !1904, !1905, !1906}
!1862 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !263, line: 60, baseType: !1863, size: 64)
!1863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1860, file: !263, line: 60, size: 64, elements: !1864)
!1864 = !{!1865, !1880}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1863, file: !263, line: 61, baseType: !1866, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1868)
!1868 = !{!1869, !1875}
!1869 = !DIDerivedType(tag: DW_TAG_member, scope: !1867, file: !273, line: 38, baseType: !1870, size: 32)
!1870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1867, file: !273, line: 38, size: 32, elements: !1871)
!1871 = !{!1872, !1874}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1870, file: !273, line: 39, baseType: !1873, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1870, file: !273, line: 40, baseType: !1873, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, scope: !1867, file: !273, line: 42, baseType: !1876, size: 32, offset: 32)
!1876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1867, file: !273, line: 42, size: 32, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1876, file: !273, line: 43, baseType: !1873, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1876, file: !273, line: 44, baseType: !1873, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1863, file: !263, line: 62, baseType: !1881, size: 64)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1882)
!1882 = !{!1883}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1881, file: !289, line: 50, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1885, size: 64, elements: !294)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1860, file: !263, line: 68, baseType: !1887, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1889, file: !299, line: 232, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1867)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1860, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1860, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1895 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !263, line: 90, baseType: !1896, size: 16, offset: 112)
!1896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1860, file: !263, line: 90, size: 16, elements: !1897)
!1897 = !{!1898, !1903}
!1898 = !DIDerivedType(tag: DW_TAG_member, scope: !1896, file: !263, line: 91, baseType: !1899, size: 16)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1896, file: !263, line: 91, size: 16, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1899, file: !263, line: 96, baseType: !313, size: 8)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1899, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1896, file: !263, line: 100, baseType: !151, size: 16)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1860, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1860, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1860, file: !263, line: 131, baseType: !1907, size: 192, offset: 192)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1908)
!1908 = !{!1909, !1910, !1916}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1907, file: !299, line: 245, baseType: !1866, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1907, file: !299, line: 246, baseType: !1911, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{null, !1915}
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1907, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1857, file: !263, line: 250, baseType: !1918, size: 288, offset: 384)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1918, file: !334, line: 26, baseType: !137, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1918, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1918, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1918, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1918, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1918, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1918, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1918, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1918, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1857, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1857, file: !263, line: 256, baseType: !1888, size: 64, offset: 704)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1857, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1857, file: !263, line: 300, baseType: !1933, size: 96, offset: 800)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !1934)
!1934 = !{!1935, !1936, !1937}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1933, file: !263, line: 153, baseType: !22, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1933, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1933, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1857, file: !263, line: 325, baseType: !1939, size: 32, offset: 896)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !1941)
!1941 = !{!1942, !1948, !1949}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1940, file: !357, line: 5074, baseType: !1943, size: 96)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1944)
!1944 = !{!1945, !1946, !1947}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1943, file: !113, line: 57, baseType: !116, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1943, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1943, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1940, file: !357, line: 5075, baseType: !1888, size: 64, offset: 96)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1940, file: !357, line: 5076, baseType: !1950, offset: 160)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1857, file: !263, line: 343, baseType: !1952, size: 64, offset: 928)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !1953)
!1953 = !{!1954, !1955}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1952, file: !334, line: 63, baseType: !137, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1952, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1851, file: !299, line: 111, baseType: !1856, size: 32, offset: 96)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1851, file: !299, line: 124, baseType: !103, size: 32, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1851, file: !299, line: 127, baseType: !208, size: 8, offset: 160)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1851, file: !299, line: 153, baseType: !1960, offset: 168)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1961, line: 33, elements: !162)
!1961 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1847, file: !299, line: 170, baseType: !1963, size: 96, offset: 192)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1963, file: !299, line: 86, baseType: !1856, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1963, file: !299, line: 90, baseType: !1892, size: 64, offset: 32)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1759, file: !1763, line: 43, type: !1969, isLocal: false, isDefinition: true, align: 512)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1970, size: 8704, elements: !1974)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1971, line: 47, size: 8, elements: !1972)
!1971 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1972 = !{!1973}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1970, file: !1971, line: 48, baseType: !109, size: 8)
!1974 = !{!1975}
!1975 = !DISubrange(count: 1088)
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1759, file: !1763, line: 44, type: !1857, isLocal: false, isDefinition: true)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1759, file: !1763, line: 48, type: !1980, isLocal: false, isDefinition: true)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1857, size: 1024, elements: !391)
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1759, file: !1763, line: 217, type: !211, isLocal: false, isDefinition: true)
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1759, file: !1763, line: 50, type: !1985, isLocal: true, isDefinition: true, align: 512)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1970, size: 3072, elements: !1986)
!1986 = !{!392, !1987}
!1987 = !DISubrange(count: 384)
!1988 = !DIGlobalVariableExpression(var: !1989, expr: !DIExpression())
!1989 = distinct !DIGlobalVariable(name: "levels", scope: !1990, file: !1763, line: 232, type: !2010, isLocal: true, isDefinition: true)
!1990 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1763, file: !1763, line: 230, type: !1991, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !1993)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{null, !1762}
!1993 = !{!1994, !1995, !2005, !2009}
!1994 = !DILocalVariable(name: "level", arg: 1, scope: !1990, file: !1763, line: 230, type: !1762)
!1995 = !DILocalVariable(name: "entry", scope: !1990, file: !1763, line: 244, type: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1999)
!1999 = !{!2000, !2004}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1998, file: !187, line: 60, baseType: !2001, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 32)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{!103, !1781}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1998, file: !187, line: 65, baseType: !1781, size: 32, offset: 32)
!2005 = !DILocalVariable(name: "dev", scope: !2006, file: !1763, line: 247, type: !1781)
!2006 = distinct !DILexicalBlock(scope: !2007, file: !1763, line: 246, column: 64)
!2007 = distinct !DILexicalBlock(scope: !2008, file: !1763, line: 246, column: 2)
!2008 = distinct !DILexicalBlock(scope: !1990, file: !1763, line: 246, column: 2)
!2009 = !DILocalVariable(name: "rc", scope: !2006, file: !1763, line: 248, type: !103)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1996, size: 192, elements: !2011)
!2011 = !{!2012}
!2012 = !DISubrange(count: 6)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1970, size: 16896, elements: !2014)
!2014 = !{!392, !2015}
!2015 = !DISubrange(count: 2112)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "states_str", scope: !2018, file: !2019, line: 276, type: !2140, isLocal: true, isDefinition: true)
!2018 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2019, file: !2019, line: 271, type: !2020, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !2131)
!2019 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!199, !2022, !1040, !120}
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2023)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2025)
!2025 = !{!2026, !2084, !2096, !2097, !2098, !2099, !2105, !2118}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2024, file: !263, line: 247, baseType: !2027, size: 384)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2028)
!2028 = !{!2029, !2053, !2060, !2061, !2062, !2071, !2072, !2073}
!2029 = !DIDerivedType(tag: DW_TAG_member, scope: !2027, file: !263, line: 60, baseType: !2030, size: 64)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2027, file: !263, line: 60, size: 64, elements: !2031)
!2031 = !{!2032, !2047}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2030, file: !263, line: 61, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2035)
!2035 = !{!2036, !2042}
!2036 = !DIDerivedType(tag: DW_TAG_member, scope: !2034, file: !273, line: 38, baseType: !2037, size: 32)
!2037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2034, file: !273, line: 38, size: 32, elements: !2038)
!2038 = !{!2039, !2041}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2037, file: !273, line: 39, baseType: !2040, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2037, file: !273, line: 40, baseType: !2040, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2034, file: !273, line: 42, baseType: !2043, size: 32, offset: 32)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2034, file: !273, line: 42, size: 32, elements: !2044)
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2043, file: !273, line: 43, baseType: !2040, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2043, file: !273, line: 44, baseType: !2040, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2030, file: !263, line: 62, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2048, file: !289, line: 50, baseType: !2051, size: 64)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 64, elements: !294)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2027, file: !263, line: 68, baseType: !2054, size: 32, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2057)
!2057 = !{!2058}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2056, file: !299, line: 232, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2034)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2027, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2027, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2062 = !DIDerivedType(tag: DW_TAG_member, scope: !2027, file: !263, line: 90, baseType: !2063, size: 16, offset: 112)
!2063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2027, file: !263, line: 90, size: 16, elements: !2064)
!2064 = !{!2065, !2070}
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !2063, file: !263, line: 91, baseType: !2066, size: 16)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2063, file: !263, line: 91, size: 16, elements: !2067)
!2067 = !{!2068, !2069}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2066, file: !263, line: 96, baseType: !313, size: 8)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2066, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2063, file: !263, line: 100, baseType: !151, size: 16)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2027, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2027, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2027, file: !263, line: 131, baseType: !2074, size: 192, offset: 192)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2075)
!2075 = !{!2076, !2077, !2083}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2074, file: !299, line: 245, baseType: !2033, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2074, file: !299, line: 246, baseType: !2078, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2079)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{null, !2082}
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2074, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2024, file: !263, line: 250, baseType: !2085, size: 288, offset: 384)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2085, file: !334, line: 26, baseType: !137, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2085, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2085, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2085, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2085, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2085, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2085, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2085, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2085, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2024, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2024, file: !263, line: 256, baseType: !2055, size: 64, offset: 704)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2024, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2024, file: !263, line: 300, baseType: !2100, size: 96, offset: 800)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2101)
!2101 = !{!2102, !2103, !2104}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2100, file: !263, line: 153, baseType: !22, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2100, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2100, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2024, file: !263, line: 325, baseType: !2106, size: 32, offset: 896)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 32)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2108)
!2108 = !{!2109, !2115, !2116}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2107, file: !357, line: 5074, baseType: !2110, size: 96)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2111)
!2111 = !{!2112, !2113, !2114}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2110, file: !113, line: 57, baseType: !116, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2110, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2110, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2107, file: !357, line: 5075, baseType: !2055, size: 64, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2107, file: !357, line: 5076, baseType: !2117, offset: 160)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2024, file: !263, line: 343, baseType: !2119, size: 64, offset: 928)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2119, file: !334, line: 63, baseType: !137, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2119, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2123 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2124, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2125, globals: !2127, splitDebugInlining: false, nameTableKind: None)
!2124 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2125 = !{!102, !199, !1497, !208, !103, !2126, !24, !120, !1040, !22, !137, !163}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2127 = !{!2016, !2128}
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "states_sz", scope: !2018, file: !2019, line: 279, type: !2130, isLocal: true, isDefinition: true)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1691, size: 256, elements: !159)
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138}
!2132 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2018, file: !2019, line: 271, type: !2022)
!2133 = !DILocalVariable(name: "buf", arg: 2, scope: !2018, file: !2019, line: 271, type: !1040)
!2134 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2018, file: !2019, line: 271, type: !120)
!2135 = !DILocalVariable(name: "off", scope: !2018, file: !2019, line: 273, type: !120)
!2136 = !DILocalVariable(name: "bit", scope: !2018, file: !2019, line: 274, type: !208)
!2137 = !DILocalVariable(name: "thread_state", scope: !2018, file: !2019, line: 275, type: !208)
!2138 = !DILocalVariable(name: "index", scope: !2139, file: !2019, line: 293, type: !208)
!2139 = distinct !DILexicalBlock(scope: !2018, file: !2019, line: 293, column: 2)
!2140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 256, elements: !159)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2143, file: !2251, line: 56, type: !2240, isLocal: false, isDefinition: true)
!2143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2144, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2145, globals: !2248, splitDebugInlining: false, nameTableKind: None)
!2144 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2145 = !{!2146, !1040, !102, !2246, !1796, !1497, !641, !103, !137, !163, !2247}
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2148)
!2148 = !{!2149, !2207, !2219, !2220, !2221, !2222, !2228, !2241}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2147, file: !263, line: 247, baseType: !2150, size: 384)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2151)
!2151 = !{!2152, !2176, !2183, !2184, !2185, !2194, !2195, !2196}
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2150, file: !263, line: 60, baseType: !2153, size: 64)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2150, file: !263, line: 60, size: 64, elements: !2154)
!2154 = !{!2155, !2170}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2153, file: !263, line: 61, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2158)
!2158 = !{!2159, !2165}
!2159 = !DIDerivedType(tag: DW_TAG_member, scope: !2157, file: !273, line: 38, baseType: !2160, size: 32)
!2160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2157, file: !273, line: 38, size: 32, elements: !2161)
!2161 = !{!2162, !2164}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2160, file: !273, line: 39, baseType: !2163, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2160, file: !273, line: 40, baseType: !2163, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, scope: !2157, file: !273, line: 42, baseType: !2166, size: 32, offset: 32)
!2166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2157, file: !273, line: 42, size: 32, elements: !2167)
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2166, file: !273, line: 43, baseType: !2163, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2166, file: !273, line: 44, baseType: !2163, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2153, file: !263, line: 62, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2172)
!2172 = !{!2173}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2171, file: !289, line: 50, baseType: !2174, size: 64)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 64, elements: !294)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2150, file: !263, line: 68, baseType: !2177, size: 32, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2179)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2180)
!2180 = !{!2181}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2179, file: !299, line: 232, baseType: !2182, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2157)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2150, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2150, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2185 = !DIDerivedType(tag: DW_TAG_member, scope: !2150, file: !263, line: 90, baseType: !2186, size: 16, offset: 112)
!2186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2150, file: !263, line: 90, size: 16, elements: !2187)
!2187 = !{!2188, !2193}
!2188 = !DIDerivedType(tag: DW_TAG_member, scope: !2186, file: !263, line: 91, baseType: !2189, size: 16)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2186, file: !263, line: 91, size: 16, elements: !2190)
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2189, file: !263, line: 96, baseType: !313, size: 8)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2189, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2186, file: !263, line: 100, baseType: !151, size: 16)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2150, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2150, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2150, file: !263, line: 131, baseType: !2197, size: 192, offset: 192)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2198)
!2198 = !{!2199, !2200, !2206}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2197, file: !299, line: 245, baseType: !2156, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2197, file: !299, line: 246, baseType: !2201, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2202)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{null, !2205}
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2197, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2147, file: !263, line: 250, baseType: !2208, size: 288, offset: 384)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2209)
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2208, file: !334, line: 26, baseType: !137, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2208, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2208, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2208, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2208, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2208, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2208, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2208, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2208, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2147, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2147, file: !263, line: 256, baseType: !2178, size: 64, offset: 704)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2147, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2147, file: !263, line: 300, baseType: !2223, size: 96, offset: 800)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2224)
!2224 = !{!2225, !2226, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2223, file: !263, line: 153, baseType: !22, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2223, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2223, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2147, file: !263, line: 325, baseType: !2229, size: 32, offset: 896)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2231)
!2231 = !{!2232, !2238, !2239}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2230, file: !357, line: 5074, baseType: !2233, size: 96)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2234)
!2234 = !{!2235, !2236, !2237}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2233, file: !113, line: 57, baseType: !116, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2233, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2233, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2230, file: !357, line: 5075, baseType: !2178, size: 64, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2230, file: !357, line: 5076, baseType: !2240, offset: 160)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2147, file: !263, line: 343, baseType: !2242, size: 64, offset: 928)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2243)
!2243 = !{!2244, !2245}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2242, file: !334, line: 63, baseType: !137, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2242, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2248 = !{!2141, !2249, !2252, !2254}
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2143, file: !2251, line: 404, type: !103, isLocal: true, isDefinition: true)
!2251 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2252 = !DIGlobalVariableExpression(var: !2253, expr: !DIExpression())
!2253 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2143, file: !2251, line: 405, type: !103, isLocal: true, isDefinition: true)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "pending_current", scope: !2143, file: !2251, line: 425, type: !2146, isLocal: true, isDefinition: true)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2258, file: !2288, line: 15, type: !163, isLocal: true, isDefinition: true)
!2258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2259, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2260, globals: !2285, splitDebugInlining: false, nameTableKind: None)
!2259 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2260 = !{!1497, !102, !641, !137, !163, !103, !2261, !1040, !330}
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2263)
!2263 = !{!2264, !2279, !2284}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2262, file: !299, line: 245, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2266)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2267)
!2267 = !{!2268, !2274}
!2268 = !DIDerivedType(tag: DW_TAG_member, scope: !2266, file: !273, line: 38, baseType: !2269, size: 32)
!2269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2266, file: !273, line: 38, size: 32, elements: !2270)
!2270 = !{!2271, !2273}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2269, file: !273, line: 39, baseType: !2272, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2269, file: !273, line: 40, baseType: !2272, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, scope: !2266, file: !273, line: 42, baseType: !2275, size: 32, offset: 32)
!2275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2266, file: !273, line: 42, size: 32, elements: !2276)
!2276 = !{!2277, !2278}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2275, file: !273, line: 43, baseType: !2272, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2275, file: !273, line: 44, baseType: !2272, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2262, file: !299, line: 246, baseType: !2280, size: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2281)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{null, !2261}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2262, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2285 = !{!2256, !2286, !2290, !2292}
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2258, file: !2288, line: 19, type: !2289, isLocal: true, isDefinition: true)
!2288 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2290 = !DIGlobalVariableExpression(var: !2291, expr: !DIExpression())
!2291 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2258, file: !2288, line: 25, type: !103, isLocal: true, isDefinition: true)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2258, file: !2288, line: 17, type: !2294, isLocal: true, isDefinition: true)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2266)
!2295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2300, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2301, splitDebugInlining: false, nameTableKind: None)
!2300 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2301 = !{!102, !120, !1796, !24, !2302, !22, !2307, !103, !149, !150}
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2304)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2305)
!2305 = !{!2306}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2304, file: !142, line: 58, baseType: !158, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 32)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2309)
!2309 = !{!2310, !2313, !2314, !2315, !2316, !2317, !2318}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2308, file: !142, line: 69, baseType: !2311, size: 64)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2312, size: 64, elements: !294)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2308, file: !142, line: 70, baseType: !2312, size: 32, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2308, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2308, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2308, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2308, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2308, file: !142, line: 77, baseType: !2319, offset: 224)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2320, elements: !2323)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2321)
!2321 = !{!2322}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2320, file: !142, line: 65, baseType: !2312, size: 32)
!2323 = !{!2324}
!2324 = !DISubrange(count: 0)
!2325 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2326, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2327, retainedTypes: !2347, splitDebugInlining: false, nameTableKind: None)
!2326 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2327 = !{!2328, !2336}
!2328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2329, line: 69, baseType: !32, size: 32, elements: !2330)
!2329 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2330 = !{!2331, !2332, !2333, !2334, !2335}
!2331 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2332 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2333 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2334 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2335 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2329, line: 56, baseType: !32, size: 32, elements: !2337)
!2337 = !{!2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346}
!2338 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2339 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2340 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2341 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2342 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2343 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2344 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2345 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2346 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2347 = !{!103, !2328, !2336, !2348, !314, !218, !2350, !2351, !209, !152, !199, !120, !102, !22, !32, !2353, !2354, !2355, !2356, !2357, !331, !2358, !2349, !2359, !2360, !2361, !2362}
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2329, line: 31, baseType: !2349)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !331)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2329, line: 32, baseType: !2352)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!2356 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2364, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2364 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2366, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2367, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2366 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2367 = !{!2368, !30}
!2368 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2369, line: 27, baseType: !32, size: 32, elements: !2370)
!2369 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2370 = !{!2371, !2372, !2373, !2374, !2375}
!2371 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2372 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2373 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2374 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2375 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2376 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2377, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2378, retainedTypes: !2379, splitDebugInlining: false, nameTableKind: None)
!2377 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2378 = !{!471, !2368, !30}
!2379 = !{!667, !2380, !102, !103, !641, !137, !208, !2397}
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2382)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2383)
!2383 = !{!2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2382, file: !402, line: 413, baseType: !1512, size: 256)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2382, file: !402, line: 414, baseType: !1514, size: 768, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2382, file: !402, line: 415, baseType: !1512, size: 256, offset: 1024)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2382, file: !402, line: 416, baseType: !1514, size: 768, offset: 1280)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2382, file: !402, line: 417, baseType: !1512, size: 256, offset: 2048)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2382, file: !402, line: 418, baseType: !1514, size: 768, offset: 2304)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2382, file: !402, line: 419, baseType: !1512, size: 256, offset: 3072)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2382, file: !402, line: 420, baseType: !1514, size: 768, offset: 3328)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2382, file: !402, line: 421, baseType: !1512, size: 256, offset: 4096)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2382, file: !402, line: 422, baseType: !1525, size: 1792, offset: 4352)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2382, file: !402, line: 423, baseType: !1529, size: 1920, offset: 6144)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2382, file: !402, line: 424, baseType: !1534, size: 20608, offset: 8064)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2382, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2399)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2399, file: !402, line: 447, baseType: !406, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2399, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2399, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2399, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2399, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2399, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2399, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2399, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2399, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2399, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2399, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2399, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2399, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2399, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2399, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2399, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2399, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2399, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2399, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2399, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2399, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2424 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2425, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2426, splitDebugInlining: false, nameTableKind: None)
!2425 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2426 = !{!102, !103, !22, !2427}
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2429)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2430)
!2430 = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2429, file: !402, line: 447, baseType: !406, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2429, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2429, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2429, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2429, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2429, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2429, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2429, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2429, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2429, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2429, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2429, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2429, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2429, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2429, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2429, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2429, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2429, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2429, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2429, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2429, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2454, splitDebugInlining: false, nameTableKind: None)
!2453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2454 = !{!2455, !102, !103}
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2457, file: !402, line: 447, baseType: !406, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2457, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2457, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2457, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2457, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2457, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2457, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2457, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2457, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2457, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2457, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2457, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2457, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2457, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2457, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2457, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2457, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2457, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2457, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2457, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2457, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2482, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2482 = !{!2483, !137, !102, !103}
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2485, line: 98, size: 256, elements: !2486)
!2485 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2486 = !{!2487, !2492, !2497, !2502, !2507, !2512, !2517, !2522}
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2485, line: 99, baseType: !2488, size: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2485, line: 99, size: 32, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2488, file: !2485, line: 99, baseType: !137, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2488, file: !2485, line: 99, baseType: !137, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2485, line: 100, baseType: !2493, size: 32, offset: 32)
!2493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2485, line: 100, size: 32, elements: !2494)
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2493, file: !2485, line: 100, baseType: !137, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2493, file: !2485, line: 100, baseType: !137, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2485, line: 101, baseType: !2498, size: 32, offset: 64)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2485, line: 101, size: 32, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2498, file: !2485, line: 101, baseType: !137, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2498, file: !2485, line: 101, baseType: !137, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2485, line: 102, baseType: !2503, size: 32, offset: 96)
!2503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2485, line: 102, size: 32, elements: !2504)
!2504 = !{!2505, !2506}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2503, file: !2485, line: 102, baseType: !137, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2503, file: !2485, line: 102, baseType: !137, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2485, line: 103, baseType: !2508, size: 32, offset: 128)
!2508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2485, line: 103, size: 32, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2508, file: !2485, line: 103, baseType: !137, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2508, file: !2485, line: 103, baseType: !137, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2485, line: 104, baseType: !2513, size: 32, offset: 160)
!2513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2485, line: 104, size: 32, elements: !2514)
!2514 = !{!2515, !2516}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2513, file: !2485, line: 104, baseType: !137, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2513, file: !2485, line: 104, baseType: !137, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !2485, line: 105, baseType: !2518, size: 32, offset: 192)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !2485, line: 105, size: 32, elements: !2519)
!2519 = !{!2520, !2521}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2518, file: !2485, line: 105, baseType: !137, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2518, file: !2485, line: 105, baseType: !137, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2484, file: !2485, line: 106, baseType: !137, size: 32, offset: 224)
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2367, retainedTypes: !2525, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2525 = !{!2526, !102, !103, !2551, !150, !137}
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2528)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2528, file: !402, line: 447, baseType: !406, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2528, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2528, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2528, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2528, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2528, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2528, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2528, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2528, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2528, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2528, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2528, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2528, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2528, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2528, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2528, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2528, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2528, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2528, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2528, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2528, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2485, line: 141, baseType: !2553)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2485, line: 97, size: 256, elements: !2554)
!2554 = !{!2555}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2553, file: !2485, line: 107, baseType: !2556, size: 256)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2485, line: 98, size: 256, elements: !2557)
!2557 = !{!2558, !2563, !2568, !2573, !2578, !2583, !2588, !2593}
!2558 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !2485, line: 99, baseType: !2559, size: 32)
!2559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !2485, line: 99, size: 32, elements: !2560)
!2560 = !{!2561, !2562}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2559, file: !2485, line: 99, baseType: !137, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2559, file: !2485, line: 99, baseType: !137, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !2485, line: 100, baseType: !2564, size: 32, offset: 32)
!2564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !2485, line: 100, size: 32, elements: !2565)
!2565 = !{!2566, !2567}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2564, file: !2485, line: 100, baseType: !137, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2564, file: !2485, line: 100, baseType: !137, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !2485, line: 101, baseType: !2569, size: 32, offset: 64)
!2569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !2485, line: 101, size: 32, elements: !2570)
!2570 = !{!2571, !2572}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2569, file: !2485, line: 101, baseType: !137, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2569, file: !2485, line: 101, baseType: !137, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !2485, line: 102, baseType: !2574, size: 32, offset: 96)
!2574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !2485, line: 102, size: 32, elements: !2575)
!2575 = !{!2576, !2577}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2574, file: !2485, line: 102, baseType: !137, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2574, file: !2485, line: 102, baseType: !137, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !2485, line: 103, baseType: !2579, size: 32, offset: 128)
!2579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !2485, line: 103, size: 32, elements: !2580)
!2580 = !{!2581, !2582}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2579, file: !2485, line: 103, baseType: !137, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2579, file: !2485, line: 103, baseType: !137, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !2485, line: 104, baseType: !2584, size: 32, offset: 160)
!2584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !2485, line: 104, size: 32, elements: !2585)
!2585 = !{!2586, !2587}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2584, file: !2485, line: 104, baseType: !137, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2584, file: !2485, line: 104, baseType: !137, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !2485, line: 105, baseType: !2589, size: 32, offset: 192)
!2589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !2485, line: 105, size: 32, elements: !2590)
!2590 = !{!2591, !2592}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2589, file: !2485, line: 105, baseType: !137, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2589, file: !2485, line: 105, baseType: !137, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2556, file: !2485, line: 106, baseType: !137, size: 32, offset: 224)
!2594 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2595, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1495, retainedTypes: !2596, splitDebugInlining: false, nameTableKind: None)
!2595 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2596 = !{!667, !641, !208, !137, !2597, !2614}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2600)
!2600 = !{!2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2599, file: !402, line: 413, baseType: !1512, size: 256)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2599, file: !402, line: 414, baseType: !1514, size: 768, offset: 256)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2599, file: !402, line: 415, baseType: !1512, size: 256, offset: 1024)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2599, file: !402, line: 416, baseType: !1514, size: 768, offset: 1280)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2599, file: !402, line: 417, baseType: !1512, size: 256, offset: 2048)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2599, file: !402, line: 418, baseType: !1514, size: 768, offset: 2304)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2599, file: !402, line: 419, baseType: !1512, size: 256, offset: 3072)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2599, file: !402, line: 420, baseType: !1514, size: 768, offset: 3328)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2599, file: !402, line: 421, baseType: !1512, size: 256, offset: 4096)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2599, file: !402, line: 422, baseType: !1525, size: 1792, offset: 4352)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2599, file: !402, line: 423, baseType: !1529, size: 1920, offset: 6144)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2599, file: !402, line: 424, baseType: !1534, size: 20608, offset: 8064)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2599, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2616, file: !402, line: 447, baseType: !406, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2616, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2616, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2616, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2616, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2616, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2616, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2616, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2616, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2616, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2616, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2616, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2616, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2616, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2616, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2616, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2616, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2616, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2616, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2616, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2616, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2641, splitDebugInlining: false, nameTableKind: None)
!2640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2641 = !{!2642, !102, !103}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2644, file: !402, line: 447, baseType: !406, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2644, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2644, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2644, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2644, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2644, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2644, file: !402, line: 453, baseType: !1549, size: 96, offset: 192)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2644, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2644, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2644, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2644, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2644, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2644, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2644, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2644, file: !402, line: 461, baseType: !1560, size: 64, offset: 512)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2644, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2644, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2644, file: !402, line: 464, baseType: !1564, size: 128, offset: 640)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2644, file: !402, line: 465, baseType: !1566, size: 160, offset: 768)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2644, file: !402, line: 466, baseType: !1568, size: 160, offset: 928)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2644, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2669, splitDebugInlining: false, nameTableKind: None)
!2668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2669 = !{!109, !1040, !120, !873, !2670, !209, !102}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!2672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2674, splitDebugInlining: false, nameTableKind: None)
!2673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2674 = !{!2675}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 586, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 550, size: 1216, elements: !2678)
!2678 = !{!2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2677, file: !172, line: 552, baseType: !176, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2677, file: !172, line: 553, baseType: !176, size: 32, offset: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2677, file: !172, line: 554, baseType: !176, size: 32, offset: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2677, file: !172, line: 555, baseType: !176, size: 32, offset: 96)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2677, file: !172, line: 556, baseType: !176, size: 32, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2677, file: !172, line: 557, baseType: !176, size: 32, offset: 160)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2677, file: !172, line: 558, baseType: !176, size: 32, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2677, file: !172, line: 559, baseType: !137, size: 32, offset: 224)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2677, file: !172, line: 560, baseType: !176, size: 32, offset: 256)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2677, file: !172, line: 561, baseType: !176, size: 32, offset: 288)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2677, file: !172, line: 562, baseType: !739, size: 64, offset: 320)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2677, file: !172, line: 563, baseType: !176, size: 32, offset: 384)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2677, file: !172, line: 564, baseType: !176, size: 32, offset: 416)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2677, file: !172, line: 565, baseType: !176, size: 32, offset: 448)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2677, file: !172, line: 566, baseType: !137, size: 32, offset: 480)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2677, file: !172, line: 567, baseType: !176, size: 32, offset: 512)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2677, file: !172, line: 568, baseType: !176, size: 32, offset: 544)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2677, file: !172, line: 569, baseType: !739, size: 64, offset: 576)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2677, file: !172, line: 570, baseType: !176, size: 32, offset: 640)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2677, file: !172, line: 571, baseType: !176, size: 32, offset: 672)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2677, file: !172, line: 572, baseType: !176, size: 32, offset: 704)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2677, file: !172, line: 573, baseType: !137, size: 32, offset: 736)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2677, file: !172, line: 574, baseType: !176, size: 32, offset: 768)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2677, file: !172, line: 575, baseType: !176, size: 32, offset: 800)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2677, file: !172, line: 576, baseType: !739, size: 64, offset: 832)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2677, file: !172, line: 577, baseType: !176, size: 32, offset: 896)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2677, file: !172, line: 578, baseType: !176, size: 32, offset: 928)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2677, file: !172, line: 579, baseType: !739, size: 64, offset: 960)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2677, file: !172, line: 580, baseType: !176, size: 32, offset: 1024)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2677, file: !172, line: 581, baseType: !176, size: 32, offset: 1056)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2677, file: !172, line: 582, baseType: !176, size: 32, offset: 1088)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2677, file: !172, line: 583, baseType: !176, size: 32, offset: 1120)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2677, file: !172, line: 584, baseType: !176, size: 32, offset: 1152)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2677, file: !172, line: 585, baseType: !176, size: 32, offset: 1184)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2716, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2717, retainedTypes: !2733, splitDebugInlining: false, nameTableKind: None)
!2716 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2717 = !{!2718, !2725, !2729}
!2718 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2719, line: 38, baseType: !32, size: 32, elements: !2720)
!2719 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2720 = !{!2721, !2722, !2723, !2724}
!2721 = !DIEnumerator(name: "HAL_OK", value: 0)
!2722 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2723 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2724 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !712, line: 184, baseType: !32, size: 32, elements: !2726)
!2726 = !{!2727, !2728}
!2727 = !DIEnumerator(name: "RESET", value: 0)
!2728 = !DIEnumerator(name: "SET", value: 1)
!2729 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !712, line: 190, baseType: !32, size: 32, elements: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIEnumerator(name: "DISABLE", value: 0)
!2732 = !DIEnumerator(name: "ENABLE", value: 1)
!2733 = !{!2734, !137, !2772, !1353, !208, !163, !102}
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 586, baseType: !2736)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 550, size: 1216, elements: !2737)
!2737 = !{!2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2736, file: !172, line: 552, baseType: !176, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2736, file: !172, line: 553, baseType: !176, size: 32, offset: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2736, file: !172, line: 554, baseType: !176, size: 32, offset: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2736, file: !172, line: 555, baseType: !176, size: 32, offset: 96)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2736, file: !172, line: 556, baseType: !176, size: 32, offset: 128)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2736, file: !172, line: 557, baseType: !176, size: 32, offset: 160)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2736, file: !172, line: 558, baseType: !176, size: 32, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2736, file: !172, line: 559, baseType: !137, size: 32, offset: 224)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2736, file: !172, line: 560, baseType: !176, size: 32, offset: 256)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2736, file: !172, line: 561, baseType: !176, size: 32, offset: 288)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2736, file: !172, line: 562, baseType: !739, size: 64, offset: 320)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2736, file: !172, line: 563, baseType: !176, size: 32, offset: 384)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2736, file: !172, line: 564, baseType: !176, size: 32, offset: 416)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2736, file: !172, line: 565, baseType: !176, size: 32, offset: 448)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2736, file: !172, line: 566, baseType: !137, size: 32, offset: 480)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2736, file: !172, line: 567, baseType: !176, size: 32, offset: 512)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2736, file: !172, line: 568, baseType: !176, size: 32, offset: 544)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2736, file: !172, line: 569, baseType: !739, size: 64, offset: 576)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2736, file: !172, line: 570, baseType: !176, size: 32, offset: 640)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2736, file: !172, line: 571, baseType: !176, size: 32, offset: 672)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2736, file: !172, line: 572, baseType: !176, size: 32, offset: 704)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2736, file: !172, line: 573, baseType: !137, size: 32, offset: 736)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2736, file: !172, line: 574, baseType: !176, size: 32, offset: 768)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2736, file: !172, line: 575, baseType: !176, size: 32, offset: 800)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2736, file: !172, line: 576, baseType: !739, size: 64, offset: 832)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2736, file: !172, line: 577, baseType: !176, size: 32, offset: 896)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2736, file: !172, line: 578, baseType: !176, size: 32, offset: 928)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2736, file: !172, line: 579, baseType: !739, size: 64, offset: 960)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2736, file: !172, line: 580, baseType: !176, size: 32, offset: 1024)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2736, file: !172, line: 581, baseType: !176, size: 32, offset: 1056)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2736, file: !172, line: 582, baseType: !176, size: 32, offset: 1088)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2736, file: !172, line: 583, baseType: !176, size: 32, offset: 1120)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2736, file: !172, line: 584, baseType: !176, size: 32, offset: 1152)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2736, file: !172, line: 585, baseType: !176, size: 32, offset: 1184)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 544, baseType: !2774)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 540, size: 64, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2774, file: !172, line: 542, baseType: !176, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2774, file: !172, line: 543, baseType: !176, size: 32, offset: 32)
!2778 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2779, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2780, retainedTypes: !2781, splitDebugInlining: false, nameTableKind: None)
!2779 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2780 = !{!711}
!2781 = !{!2782, !137, !2790, !2796, !2807}
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !2784)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2789}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2784, file: !402, line: 766, baseType: !176, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2784, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2784, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2784, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 544, baseType: !2792)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 540, size: 64, elements: !2793)
!2793 = !{!2794, !2795}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2792, file: !172, line: 542, baseType: !176, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2792, file: !172, line: 543, baseType: !176, size: 32, offset: 32)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 407, baseType: !2798)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 398, size: 224, elements: !2799)
!2799 = !{!2800, !2801, !2802, !2803, !2804, !2805, !2806}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2798, file: !172, line: 400, baseType: !176, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2798, file: !172, line: 401, baseType: !176, size: 32, offset: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2798, file: !172, line: 402, baseType: !176, size: 32, offset: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2798, file: !172, line: 403, baseType: !176, size: 32, offset: 96)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2798, file: !172, line: 404, baseType: !176, size: 32, offset: 128)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2798, file: !172, line: 405, baseType: !176, size: 32, offset: 160)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2798, file: !172, line: 406, baseType: !176, size: 32, offset: 192)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 586, baseType: !2809)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 550, size: 1216, elements: !2810)
!2810 = !{!2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2809, file: !172, line: 552, baseType: !176, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2809, file: !172, line: 553, baseType: !176, size: 32, offset: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2809, file: !172, line: 554, baseType: !176, size: 32, offset: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2809, file: !172, line: 555, baseType: !176, size: 32, offset: 96)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2809, file: !172, line: 556, baseType: !176, size: 32, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2809, file: !172, line: 557, baseType: !176, size: 32, offset: 160)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2809, file: !172, line: 558, baseType: !176, size: 32, offset: 192)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2809, file: !172, line: 559, baseType: !137, size: 32, offset: 224)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2809, file: !172, line: 560, baseType: !176, size: 32, offset: 256)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2809, file: !172, line: 561, baseType: !176, size: 32, offset: 288)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2809, file: !172, line: 562, baseType: !739, size: 64, offset: 320)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2809, file: !172, line: 563, baseType: !176, size: 32, offset: 384)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2809, file: !172, line: 564, baseType: !176, size: 32, offset: 416)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2809, file: !172, line: 565, baseType: !176, size: 32, offset: 448)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2809, file: !172, line: 566, baseType: !137, size: 32, offset: 480)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2809, file: !172, line: 567, baseType: !176, size: 32, offset: 512)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2809, file: !172, line: 568, baseType: !176, size: 32, offset: 544)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2809, file: !172, line: 569, baseType: !739, size: 64, offset: 576)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2809, file: !172, line: 570, baseType: !176, size: 32, offset: 640)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2809, file: !172, line: 571, baseType: !176, size: 32, offset: 672)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2809, file: !172, line: 572, baseType: !176, size: 32, offset: 704)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2809, file: !172, line: 573, baseType: !137, size: 32, offset: 736)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2809, file: !172, line: 574, baseType: !176, size: 32, offset: 768)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2809, file: !172, line: 575, baseType: !176, size: 32, offset: 800)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2809, file: !172, line: 576, baseType: !739, size: 64, offset: 832)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2809, file: !172, line: 577, baseType: !176, size: 32, offset: 896)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2809, file: !172, line: 578, baseType: !176, size: 32, offset: 928)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2809, file: !172, line: 579, baseType: !739, size: 64, offset: 960)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2809, file: !172, line: 580, baseType: !176, size: 32, offset: 1024)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2809, file: !172, line: 581, baseType: !176, size: 32, offset: 1056)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2809, file: !172, line: 582, baseType: !176, size: 32, offset: 1088)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2809, file: !172, line: 583, baseType: !176, size: 32, offset: 1120)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2809, file: !172, line: 584, baseType: !176, size: 32, offset: 1152)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2809, file: !172, line: 585, baseType: !176, size: 32, offset: 1184)
!2845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2847, splitDebugInlining: false, nameTableKind: None)
!2846 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2847 = !{!102, !120}
!2848 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2849, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2850, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2849 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2850 = !{!2851, !2858, !30}
!2851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2852, line: 14, baseType: !32, size: 32, elements: !2853)
!2852 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2853 = !{!2854, !2855, !2856, !2857}
!2854 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2855 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2856 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2857 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2852, line: 42, baseType: !32, size: 32, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865}
!2860 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2861 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2862 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2863 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2864 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2865 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2870, splitDebugInlining: false, nameTableKind: None)
!2869 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2870 = !{!22, !102, !103}
!2871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2872 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!2873 = !{!"Ubuntu clang version 14.0.6"}
!2874 = !{i32 7, !"Dwarf Version", i32 4}
!2875 = !{i32 2, !"Debug Info Version", i32 3}
!2876 = !{i32 1, !"wchar_size", i32 4}
!2877 = !{i32 1, !"min_enum_size", i32 4}
!2878 = !{i32 1, !"branch-target-enforcement", i32 0}
!2879 = !{i32 1, !"sign-return-address", i32 0}
!2880 = !{i32 1, !"sign-return-address-all", i32 0}
!2881 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2882 = !{i32 7, !"frame-pointer", i32 2}
!2883 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2884, file: !2884, line: 26, type: !2885, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !162)
!2884 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2885 = !DISubroutineType(types: !2886)
!2886 = !{null}
!2887 = !DILocation(line: 28, column: 1, scope: !2883)
!2888 = !{i64 2155360471, i64 2155360491, i64 2155360554}
!2889 = !DILocation(line: 29, column: 1, scope: !2883)
!2890 = !{i64 2155360886, i64 2155360906, i64 2155360969}
!2891 = !DILocation(line: 30, column: 1, scope: !2883)
!2892 = !{i64 2155361305, i64 2155361325, i64 2155361388}
!2893 = !DILocation(line: 31, column: 1, scope: !2883)
!2894 = !{i64 2155361724, i64 2155361744, i64 2155361807}
!2895 = !DILocation(line: 33, column: 1, scope: !2883)
!2896 = !{i64 2155362016, i64 2155362036, i64 2155362099}
!2897 = !DILocation(line: 35, column: 1, scope: !2883)
!2898 = !{i64 2155362341, i64 2155362361, i64 2155362424}
!2899 = !DILocation(line: 50, column: 1, scope: !2883)
!2900 = !{i64 2155362768, i64 2155362788, i64 2155362851}
!2901 = !DILocation(line: 54, column: 1, scope: !2883)
!2902 = !{i64 2155367268, i64 2155367288, i64 2155367351}
!2903 = !DILocation(line: 61, column: 1, scope: !2883)
!2904 = !{i64 2155367585, i64 2155367605, i64 2155367668}
!2905 = !DILocation(line: 63, column: 1, scope: !2883)
!2906 = !{i64 2155367965, i64 2155367985, i64 2155368048}
!2907 = !DILocation(line: 64, column: 1, scope: !2883)
!2908 = !{i64 2155368487, i64 2155368507, i64 2155368570}
!2909 = !DILocation(line: 65, column: 1, scope: !2883)
!2910 = !{i64 2155368985, i64 2155369005, i64 2155369068}
!2911 = !DILocation(line: 66, column: 1, scope: !2883)
!2912 = !{i64 2155369467, i64 2155369487, i64 2155369550}
!2913 = !DILocation(line: 67, column: 1, scope: !2883)
!2914 = !{i64 2155369974, i64 2155369994, i64 2155370057}
!2915 = !DILocation(line: 68, column: 1, scope: !2883)
!2916 = !{i64 2155370462, i64 2155370482, i64 2155370545}
!2917 = !DILocation(line: 70, column: 1, scope: !2883)
!2918 = !{i64 2155370930, i64 2155370950, i64 2155371013}
!2919 = !DILocation(line: 71, column: 1, scope: !2883)
!2920 = !{i64 2155371372, i64 2155371392, i64 2155371455}
!2921 = !DILocation(line: 72, column: 1, scope: !2883)
!2922 = !{i64 2155371830, i64 2155371850, i64 2155371913}
!2923 = !DILocation(line: 79, column: 1, scope: !2883)
!2924 = !{i64 2155372284, i64 2155372304, i64 2155372367}
!2925 = !DILocation(line: 80, column: 1, scope: !2883)
!2926 = !{i64 2155372795, i64 2155372815, i64 2155372878}
!2927 = !DILocation(line: 82, column: 1, scope: !2883)
!2928 = !{i64 2155373286, i64 2155373306, i64 2155373369}
!2929 = !DILocation(line: 97, column: 1, scope: !2883)
!2930 = !{i64 2155373623, i64 2155373643, i64 2155373706}
!2931 = !DILocation(line: 99, column: 1, scope: !2883)
!2932 = !{i64 2155373841, i64 2155373861, i64 2155373924}
!2933 = !DILocation(line: 102, column: 1, scope: !2883)
!2934 = !{i64 2155374098, i64 2155374118, i64 2155374181}
!2935 = !DILocation(line: 105, column: 1, scope: !2883)
!2936 = !{i64 2155374338, i64 2155374358, i64 2155374421}
!2937 = !DILocation(line: 115, column: 1, scope: !2883)
!2938 = !{i64 2155374677, i64 2155374697, i64 2155374760}
!2939 = !DILocation(line: 118, column: 1, scope: !2883)
!2940 = !{i64 2155375021, i64 2155375041, i64 2155375104}
!2941 = !DILocation(line: 32, column: 1, scope: !2942)
!2942 = !DILexicalBlockFile(scope: !2883, file: !2943, discriminator: 0)
!2943 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2944 = !{i64 2155375377, i64 2155375397, i64 2155375460}
!2945 = !DILocation(line: 33, column: 1, scope: !2942)
!2946 = !{i64 2155375889, i64 2155375909, i64 2155375972}
!2947 = !DILocation(line: 53, column: 1, scope: !2942)
!2948 = !{i64 2155376397, i64 2155376417, i64 2155376480}
!2949 = !DILocation(line: 54, column: 1, scope: !2942)
!2950 = !{i64 2155380876, i64 2155380896, i64 2155380959}
!2951 = !DILocation(line: 55, column: 1, scope: !2942)
!2952 = !{i64 2155381294, i64 2155381314, i64 2155381377}
!2953 = !DILocation(line: 56, column: 1, scope: !2942)
!2954 = !{i64 2155381712, i64 2155381732, i64 2155381795}
!2955 = !DILocation(line: 57, column: 1, scope: !2942)
!2956 = !{i64 2155382130, i64 2155382150, i64 2155382213}
!2957 = !DILocation(line: 58, column: 1, scope: !2942)
!2958 = !{i64 2155382548, i64 2155382568, i64 2155382631}
!2959 = !DILocation(line: 59, column: 1, scope: !2942)
!2960 = !{i64 2155382966, i64 2155382986, i64 2155383049}
!2961 = !DILocation(line: 60, column: 1, scope: !2942)
!2962 = !{i64 2155383390, i64 2155383410, i64 2155383473}
!2963 = !DILocation(line: 61, column: 1, scope: !2942)
!2964 = !{i64 2155383707, i64 2155383727, i64 2155383790}
!2965 = !DILocation(line: 70, column: 1, scope: !2942)
!2966 = !{i64 2155383936, i64 2155383956, i64 2155384019}
!2967 = !DILocation(line: 72, column: 1, scope: !2942)
!2968 = !{i64 2155384268, i64 2155384288, i64 2155384351}
!2969 = !DILocation(line: 73, column: 1, scope: !2942)
!2970 = !{i64 2155384718, i64 2155384738, i64 2155384801}
!2971 = !DILocation(line: 74, column: 1, scope: !2942)
!2972 = !{i64 2155385168, i64 2155385188, i64 2155385251}
!2973 = !DILocation(line: 75, column: 1, scope: !2942)
!2974 = !{i64 2155385618, i64 2155385638, i64 2155385701}
!2975 = !DILocation(line: 76, column: 1, scope: !2942)
!2976 = !{i64 2155386068, i64 2155386088, i64 2155386151}
!2977 = !DILocation(line: 77, column: 1, scope: !2942)
!2978 = !{i64 2155386518, i64 2155386538, i64 2155386601}
!2979 = !DILocation(line: 78, column: 1, scope: !2942)
!2980 = !{i64 2155386968, i64 2155386988, i64 2155387051}
!2981 = !DILocation(line: 79, column: 1, scope: !2942)
!2982 = !{i64 2155387418, i64 2155387438, i64 2155387501}
!2983 = !DILocation(line: 80, column: 1, scope: !2942)
!2984 = !{i64 2155387871, i64 2155387891, i64 2155387954}
!2985 = !DILocation(line: 84, column: 1, scope: !2942)
!2986 = !{i64 2155388203, i64 2155388223, i64 2155388286}
!2987 = !DILocation(line: 91, column: 1, scope: !2942)
!2988 = !{i64 2155388600, i64 2155388620, i64 2155388683}
!2989 = !DILocation(line: 93, column: 1, scope: !2942)
!2990 = !{i64 2155388967, i64 2155388987, i64 2155389050}
!2991 = !DILocation(line: 106, column: 1, scope: !2942)
!2992 = !{i64 2155389237, i64 2155389257, i64 2155389320}
!2993 = !DILocation(line: 11, column: 1, scope: !2994)
!2994 = !DILexicalBlockFile(scope: !2883, file: !2995, discriminator: 0)
!2995 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2996 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2885, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2997)
!2997 = !{!2998}
!2998 = !DILocalVariable(name: "p", scope: !2996, file: !107, line: 19, type: !102)
!2999 = !DILocation(line: 21, column: 2, scope: !2996)
!3000 = !DILocation(line: 23, column: 2, scope: !2996)
!3001 = !DILocation(line: 24, column: 2, scope: !2996)
!3002 = !DILocation(line: 26, column: 6, scope: !2996)
!3003 = !DILocation(line: 0, scope: !2996)
!3004 = !DILocation(line: 27, column: 2, scope: !2996)
!3005 = !DILocation(line: 29, column: 6, scope: !2996)
!3006 = !DILocation(line: 30, column: 2, scope: !2996)
!3007 = !DILocation(line: 32, column: 2, scope: !2996)
!3008 = !DILocation(line: 33, column: 2, scope: !2996)
!3009 = !DILocation(line: 34, column: 1, scope: !2996)
!3010 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2885, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3011)
!3011 = !{!3012}
!3012 = !DILocalVariable(name: "stats", scope: !3010, file: !107, line: 38, type: !3013)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !3014, line: 24, size: 96, elements: !3015)
!3014 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3015 = !{!3016, !3017, !3018}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3013, file: !3014, line: 25, baseType: !120, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3013, file: !3014, line: 26, baseType: !120, size: 32, offset: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3013, file: !3014, line: 27, baseType: !120, size: 32, offset: 64)
!3019 = !DILocation(line: 38, column: 2, scope: !3010)
!3020 = !DILocation(line: 38, column: 26, scope: !3010)
!3021 = !DILocation(line: 40, column: 2, scope: !3010)
!3022 = !DILocation(line: 43, column: 9, scope: !3010)
!3023 = !DILocation(line: 43, column: 32, scope: !3010)
!3024 = !DILocation(line: 44, column: 9, scope: !3010)
!3025 = !DILocation(line: 42, column: 2, scope: !3010)
!3026 = !DILocation(line: 45, column: 1, scope: !3010)
!3027 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3028)
!3028 = !{!3029}
!3029 = !DILocalVariable(name: "c", arg: 1, scope: !3027, file: !127, line: 45, type: !103)
!3030 = !DILocation(line: 0, scope: !3027)
!3031 = !DILocation(line: 50, column: 2, scope: !3027)
!3032 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !3033, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3035)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{null, !128}
!3035 = !{!3036}
!3036 = !DILocalVariable(name: "fn", arg: 1, scope: !3032, file: !127, line: 63, type: !128)
!3037 = !DILocation(line: 0, scope: !3032)
!3038 = !DILocation(line: 65, column: 12, scope: !3032)
!3039 = !DILocation(line: 66, column: 1, scope: !3032)
!3040 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !3041, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!102}
!3043 = !DILocation(line: 78, column: 9, scope: !3040)
!3044 = !DILocation(line: 78, column: 2, scope: !3040)
!3045 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !3046, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3055)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null, !199, !3048}
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3049, line: 99, baseType: !3050)
!3049 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3049, line: 40, baseType: !3051)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !3052)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3053)
!3053 = !{!3054}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3052, file: !127, line: 79, baseType: !102, size: 32)
!3055 = !{!3056, !3057, !3058}
!3056 = !DILocalVariable(name: "fmt", arg: 1, scope: !3045, file: !127, line: 113, type: !199)
!3057 = !DILocalVariable(name: "ap", arg: 2, scope: !3045, file: !127, line: 113, type: !3048)
!3058 = !DILocalVariable(name: "ctx", scope: !3059, file: !127, line: 121, type: !3061)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !127, line: 120, column: 27)
!3060 = distinct !DILexicalBlock(scope: !3045, file: !127, line: 120, column: 6)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !3062)
!3062 = !{!3063, !3064}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3061, file: !127, line: 85, baseType: !32, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3061, file: !127, line: 86, baseType: !3065, offset: 32)
!3065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2323)
!3066 = !DILocation(line: 0, scope: !3045)
!3067 = !DILocation(line: 148, column: 3, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3060, file: !127, line: 138, column: 9)
!3069 = !DILocation(line: 155, column: 1, scope: !3045)
!3070 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !3071, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3073)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!103, !103, !102}
!3073 = !{!3074, !3075}
!3074 = !DILocalVariable(name: "c", arg: 1, scope: !3070, file: !127, line: 107, type: !103)
!3075 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3070, file: !127, line: 107, type: !102)
!3076 = !DILocation(line: 0, scope: !3070)
!3077 = !DILocation(line: 110, column: 9, scope: !3070)
!3078 = !DILocation(line: 110, column: 2, scope: !3070)
!3079 = distinct !DISubprogram(name: "cbvprintf", scope: !3080, file: !3080, line: 739, type: !3081, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3087)
!3080 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!103, !3083, !102, !199, !3048}
!3083 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3080, line: 297, baseType: !3084)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 32)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!103, null}
!3087 = !{!3088, !3089, !3090, !3091}
!3088 = !DILocalVariable(name: "out", arg: 1, scope: !3079, file: !3080, line: 739, type: !3083)
!3089 = !DILocalVariable(name: "ctx", arg: 2, scope: !3079, file: !3080, line: 739, type: !102)
!3090 = !DILocalVariable(name: "format", arg: 3, scope: !3079, file: !3080, line: 739, type: !199)
!3091 = !DILocalVariable(name: "ap", arg: 4, scope: !3079, file: !3080, line: 739, type: !3048)
!3092 = !DILocation(line: 0, scope: !3079)
!3093 = !DILocation(line: 741, column: 9, scope: !3079)
!3094 = !DILocation(line: 741, column: 2, scope: !3079)
!3095 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3096, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3098)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{null, !1040, !120}
!3098 = !{!3099, !3100, !3101}
!3099 = !DILocalVariable(name: "c", arg: 1, scope: !3095, file: !127, line: 157, type: !1040)
!3100 = !DILocalVariable(name: "n", arg: 2, scope: !3095, file: !127, line: 157, type: !120)
!3101 = !DILocalVariable(name: "i", scope: !3095, file: !127, line: 159, type: !120)
!3102 = !DILocation(line: 0, scope: !3095)
!3103 = !DILocation(line: 164, column: 16, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3105, file: !127, line: 164, column: 2)
!3105 = distinct !DILexicalBlock(scope: !3095, file: !127, line: 164, column: 2)
!3106 = !DILocation(line: 164, column: 2, scope: !3105)
!3107 = !DILocation(line: 165, column: 3, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3104, file: !127, line: 164, column: 26)
!3109 = !DILocation(line: 165, column: 13, scope: !3108)
!3110 = !DILocation(line: 164, column: 22, scope: !3104)
!3111 = distinct !{!3111, !3106, !3112}
!3112 = !DILocation(line: 166, column: 2, scope: !3105)
!3113 = !DILocation(line: 171, column: 1, scope: !3095)
!3114 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3115, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3117)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{null, !199, null}
!3117 = !{!3118, !3119}
!3118 = !DILocalVariable(name: "fmt", arg: 1, scope: !3114, file: !127, line: 203, type: !199)
!3119 = !DILocalVariable(name: "ap", scope: !3114, file: !127, line: 205, type: !3048)
!3120 = !DILocation(line: 0, scope: !3114)
!3121 = !DILocation(line: 205, column: 2, scope: !3114)
!3122 = !DILocation(line: 205, column: 10, scope: !3114)
!3123 = !DILocation(line: 207, column: 2, scope: !3114)
!3124 = !DILocation(line: 209, column: 2, scope: !3114)
!3125 = !DILocation(line: 211, column: 2, scope: !3114)
!3126 = !DILocation(line: 212, column: 1, scope: !3114)
!3127 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3128, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3130)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!103, !1040, !120, !199, null}
!3130 = !{!3131, !3132, !3133, !3134, !3135}
!3131 = !DILocalVariable(name: "str", arg: 1, scope: !3127, file: !127, line: 239, type: !1040)
!3132 = !DILocalVariable(name: "size", arg: 2, scope: !3127, file: !127, line: 239, type: !120)
!3133 = !DILocalVariable(name: "fmt", arg: 3, scope: !3127, file: !127, line: 239, type: !199)
!3134 = !DILocalVariable(name: "ap", scope: !3127, file: !127, line: 241, type: !3048)
!3135 = !DILocalVariable(name: "ret", scope: !3127, file: !127, line: 242, type: !103)
!3136 = !DILocation(line: 0, scope: !3127)
!3137 = !DILocation(line: 241, column: 2, scope: !3127)
!3138 = !DILocation(line: 241, column: 10, scope: !3127)
!3139 = !DILocation(line: 244, column: 2, scope: !3127)
!3140 = !DILocation(line: 245, column: 8, scope: !3127)
!3141 = !DILocation(line: 246, column: 2, scope: !3127)
!3142 = !DILocation(line: 249, column: 1, scope: !3127)
!3143 = !DILocation(line: 248, column: 2, scope: !3127)
!3144 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3145, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3147)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!103, !1040, !120, !199, !3048}
!3147 = !{!3148, !3149, !3150, !3151, !3152}
!3148 = !DILocalVariable(name: "str", arg: 1, scope: !3144, file: !127, line: 251, type: !1040)
!3149 = !DILocalVariable(name: "size", arg: 2, scope: !3144, file: !127, line: 251, type: !120)
!3150 = !DILocalVariable(name: "fmt", arg: 3, scope: !3144, file: !127, line: 251, type: !199)
!3151 = !DILocalVariable(name: "ap", arg: 4, scope: !3144, file: !127, line: 251, type: !3048)
!3152 = !DILocalVariable(name: "ctx", scope: !3144, file: !127, line: 253, type: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3154)
!3154 = !{!3155, !3156, !3157}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3153, file: !127, line: 218, baseType: !1040, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3153, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3153, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3158 = !DILocation(line: 0, scope: !3144)
!3159 = !DILocation(line: 253, column: 2, scope: !3144)
!3160 = !DILocation(line: 253, column: 21, scope: !3144)
!3161 = !DILocation(line: 253, column: 27, scope: !3144)
!3162 = !DILocation(line: 255, column: 2, scope: !3144)
!3163 = !DILocation(line: 257, column: 10, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3144, file: !127, line: 257, column: 6)
!3165 = !DILocation(line: 257, column: 22, scope: !3164)
!3166 = !DILocation(line: 257, column: 16, scope: !3164)
!3167 = !DILocation(line: 257, column: 6, scope: !3144)
!3168 = !DILocation(line: 258, column: 3, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3164, file: !127, line: 257, column: 27)
!3170 = !DILocation(line: 258, column: 18, scope: !3169)
!3171 = !DILocation(line: 259, column: 2, scope: !3169)
!3172 = !DILocation(line: 262, column: 1, scope: !3144)
!3173 = !DILocation(line: 261, column: 2, scope: !3144)
!3174 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3175, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3178)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!103, !103, !3177}
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 32)
!3178 = !{!3179, !3180}
!3179 = !DILocalVariable(name: "c", arg: 1, scope: !3174, file: !127, line: 223, type: !103)
!3180 = !DILocalVariable(name: "ctx", arg: 2, scope: !3174, file: !127, line: 223, type: !3177)
!3181 = !DILocation(line: 0, scope: !3174)
!3182 = !DILocation(line: 225, column: 11, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3174, file: !127, line: 225, column: 6)
!3184 = !DILocation(line: 225, column: 15, scope: !3183)
!3185 = !DILocation(line: 0, scope: !3183)
!3186 = !DILocation(line: 225, column: 23, scope: !3183)
!3187 = !DILocation(line: 225, column: 45, scope: !3183)
!3188 = !DILocation(line: 225, column: 37, scope: !3183)
!3189 = !DILocation(line: 225, column: 6, scope: !3174)
!3190 = !DILocation(line: 226, column: 8, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3183, file: !127, line: 225, column: 50)
!3192 = !DILocation(line: 226, column: 13, scope: !3191)
!3193 = !DILocation(line: 227, column: 3, scope: !3191)
!3194 = !DILocation(line: 230, column: 29, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3174, file: !127, line: 230, column: 6)
!3196 = !DILocation(line: 230, column: 17, scope: !3195)
!3197 = !DILocation(line: 230, column: 6, scope: !3174)
!3198 = !DILocation(line: 231, column: 22, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3195, file: !127, line: 230, column: 34)
!3200 = !DILocation(line: 231, column: 3, scope: !3199)
!3201 = !DILocation(line: 231, column: 26, scope: !3199)
!3202 = !DILocation(line: 232, column: 2, scope: !3199)
!3203 = !DILocation(line: 233, column: 28, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3195, file: !127, line: 232, column: 9)
!3205 = !DILocation(line: 233, column: 22, scope: !3204)
!3206 = !DILocation(line: 233, column: 3, scope: !3204)
!3207 = !DILocation(line: 233, column: 26, scope: !3204)
!3208 = !DILocation(line: 237, column: 1, scope: !3174)
!3209 = distinct !DISubprogram(name: "z_thread_entry", scope: !3210, file: !3210, line: 30, type: !3211, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !3218)
!3210 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3211 = !DISubroutineType(types: !3212)
!3212 = !{null, !3213, !102, !102, !102}
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3214, line: 46, baseType: !3215)
!3214 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 32)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{null, !102, !102, !102}
!3218 = !{!3219, !3220, !3221, !3222}
!3219 = !DILocalVariable(name: "entry", arg: 1, scope: !3209, file: !3210, line: 30, type: !3213)
!3220 = !DILocalVariable(name: "p1", arg: 2, scope: !3209, file: !3210, line: 31, type: !102)
!3221 = !DILocalVariable(name: "p2", arg: 3, scope: !3209, file: !3210, line: 31, type: !102)
!3222 = !DILocalVariable(name: "p3", arg: 4, scope: !3209, file: !3210, line: 31, type: !102)
!3223 = !DILocation(line: 0, scope: !3209)
!3224 = !DILocation(line: 36, column: 2, scope: !3209)
!3225 = !DILocation(line: 38, column: 17, scope: !3209)
!3226 = !DILocation(line: 38, column: 2, scope: !3209)
!3227 = !DILocation(line: 45, column: 2, scope: !3209)
!3228 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !3229, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !162)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!3231}
!3231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !3232)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 32)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !3234)
!3234 = !{!3235, !3293, !3305, !3306, !3307, !3308, !3314, !3327}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3233, file: !263, line: 247, baseType: !3236, size: 384)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !3237)
!3237 = !{!3238, !3262, !3269, !3270, !3271, !3280, !3281, !3282}
!3238 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !263, line: 60, baseType: !3239, size: 64)
!3239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3236, file: !263, line: 60, size: 64, elements: !3240)
!3240 = !{!3241, !3256}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3239, file: !263, line: 61, baseType: !3242, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !3243)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !3244)
!3244 = !{!3245, !3251}
!3245 = !DIDerivedType(tag: DW_TAG_member, scope: !3243, file: !273, line: 38, baseType: !3246, size: 32)
!3246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3243, file: !273, line: 38, size: 32, elements: !3247)
!3247 = !{!3248, !3250}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3246, file: !273, line: 39, baseType: !3249, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3246, file: !273, line: 40, baseType: !3249, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, scope: !3243, file: !273, line: 42, baseType: !3252, size: 32, offset: 32)
!3252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3243, file: !273, line: 42, size: 32, elements: !3253)
!3253 = !{!3254, !3255}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3252, file: !273, line: 43, baseType: !3249, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3252, file: !273, line: 44, baseType: !3249, size: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3239, file: !263, line: 62, baseType: !3257, size: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !3258)
!3258 = !{!3259}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3257, file: !289, line: 50, baseType: !3260, size: 64)
!3260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3261, size: 64, elements: !294)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 32)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3236, file: !263, line: 68, baseType: !3263, size: 32, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !3265)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !3266)
!3266 = !{!3267}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3265, file: !299, line: 232, baseType: !3268, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !3243)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3236, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3236, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!3271 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !263, line: 90, baseType: !3272, size: 16, offset: 112)
!3272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3236, file: !263, line: 90, size: 16, elements: !3273)
!3273 = !{!3274, !3279}
!3274 = !DIDerivedType(tag: DW_TAG_member, scope: !3272, file: !263, line: 91, baseType: !3275, size: 16)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3272, file: !263, line: 91, size: 16, elements: !3276)
!3276 = !{!3277, !3278}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3275, file: !263, line: 96, baseType: !313, size: 8)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3275, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3272, file: !263, line: 100, baseType: !151, size: 16)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3236, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3236, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3236, file: !263, line: 131, baseType: !3283, size: 192, offset: 192)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !3284)
!3284 = !{!3285, !3286, !3292}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3283, file: !299, line: 245, baseType: !3242, size: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3283, file: !299, line: 246, baseType: !3287, size: 32, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !3288)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 32)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{null, !3291}
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3283, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3233, file: !263, line: 250, baseType: !3294, size: 288, offset: 384)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !3295)
!3295 = !{!3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3294, file: !334, line: 26, baseType: !137, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3294, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3294, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3294, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3294, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3294, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3294, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3294, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3294, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3233, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3233, file: !263, line: 256, baseType: !3264, size: 64, offset: 704)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3233, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3233, file: !263, line: 300, baseType: !3309, size: 96, offset: 800)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !3310)
!3310 = !{!3311, !3312, !3313}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3309, file: !263, line: 153, baseType: !22, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3309, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3309, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3233, file: !263, line: 325, baseType: !3315, size: 32, offset: 896)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 32)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !3317)
!3317 = !{!3318, !3324, !3325}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3316, file: !357, line: 5074, baseType: !3319, size: 96)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3320)
!3320 = !{!3321, !3322, !3323}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3319, file: !113, line: 57, baseType: !116, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3319, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3319, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3316, file: !357, line: 5075, baseType: !3264, size: 64, offset: 96)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3316, file: !357, line: 5076, baseType: !3326, offset: 160)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3233, file: !263, line: 343, baseType: !3328, size: 64, offset: 928)
!3328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !3329)
!3329 = !{!3330, !3331}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3328, file: !334, line: 63, baseType: !137, size: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3328, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!3332 = !DILocation(line: 535, column: 9, scope: !3228)
!3333 = !DILocation(line: 535, column: 2, scope: !3228)
!3334 = distinct !DISubprogram(name: "k_thread_abort", scope: !3335, file: !3335, line: 188, type: !3336, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !3338)
!3335 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!3336 = !DISubroutineType(types: !3337)
!3337 = !{null, !3231}
!3338 = !{!3339}
!3339 = !DILocalVariable(name: "thread", arg: 1, scope: !3334, file: !3335, line: 188, type: !3231)
!3340 = !DILocation(line: 0, scope: !3334)
!3341 = !DILocation(line: 197, column: 2, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3334, file: !3335, line: 197, column: 2)
!3343 = !{i64 2155057736}
!3344 = !DILocation(line: 198, column: 2, scope: !3334)
!3345 = !DILocation(line: 199, column: 1, scope: !3334)
!3346 = distinct !DISubprogram(name: "z_current_get", scope: !3335, file: !3335, line: 173, type: !3229, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !162)
!3347 = !DILocation(line: 180, column: 2, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3346, file: !3335, line: 180, column: 2)
!3349 = !{i64 2155057668}
!3350 = !DILocation(line: 181, column: 9, scope: !3346)
!3351 = !DILocation(line: 181, column: 2, scope: !3346)
!3352 = distinct !DISubprogram(name: "sys_heap_free", scope: !3353, file: !3353, line: 163, type: !3354, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3362)
!3353 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3354 = !DISubroutineType(types: !3355)
!3355 = !{null, !3356, !102}
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 32)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3358)
!3358 = !{!3359, !3360, !3361}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3357, file: !113, line: 57, baseType: !2307, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3357, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3357, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3362 = !{!3363, !3364, !3365, !3366}
!3363 = !DILocalVariable(name: "heap", arg: 1, scope: !3352, file: !3353, line: 163, type: !3356)
!3364 = !DILocalVariable(name: "mem", arg: 2, scope: !3352, file: !3353, line: 163, type: !102)
!3365 = !DILocalVariable(name: "h", scope: !3352, file: !3353, line: 168, type: !2307)
!3366 = !DILocalVariable(name: "c", scope: !3352, file: !3353, line: 169, type: !2312)
!3367 = !DILocation(line: 0, scope: !3352)
!3368 = !DILocation(line: 165, column: 10, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3352, file: !3353, line: 165, column: 6)
!3370 = !DILocation(line: 165, column: 6, scope: !3352)
!3371 = !DILocation(line: 168, column: 27, scope: !3352)
!3372 = !DILocation(line: 169, column: 16, scope: !3352)
!3373 = !{i32 0, i32 536870912}
!3374 = !DILocation(line: 187, column: 2, scope: !3352)
!3375 = !DILocation(line: 189, column: 44, scope: !3352)
!3376 = !{i32 0, i32 32768}
!3377 = !DILocation(line: 189, column: 24, scope: !3352)
!3378 = !DILocation(line: 189, column: 5, scope: !3352)
!3379 = !DILocation(line: 189, column: 21, scope: !3352)
!3380 = !DILocation(line: 197, column: 2, scope: !3352)
!3381 = !DILocation(line: 198, column: 1, scope: !3352)
!3382 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3353, file: !3353, line: 157, type: !3383, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3385)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!2312, !2307, !102}
!3385 = !{!3386, !3387, !3388, !3389}
!3386 = !DILocalVariable(name: "h", arg: 1, scope: !3382, file: !3353, line: 157, type: !2307)
!3387 = !DILocalVariable(name: "p", arg: 2, scope: !3382, file: !3353, line: 157, type: !102)
!3388 = !DILocalVariable(name: "mem", scope: !3382, file: !3353, line: 159, type: !1796)
!3389 = !DILocalVariable(name: "base", scope: !3382, file: !3353, line: 159, type: !1796)
!3390 = !DILocation(line: 0, scope: !3382)
!3391 = !DILocation(line: 159, column: 39, scope: !3382)
!3392 = !DILocation(line: 160, column: 14, scope: !3382)
!3393 = !DILocation(line: 160, column: 38, scope: !3382)
!3394 = !DILocation(line: 160, column: 46, scope: !3382)
!3395 = !DILocation(line: 160, column: 2, scope: !3382)
!3396 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3397, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3399)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{null, !2307, !2312, !211}
!3399 = !{!3400, !3401, !3402, !3403, !3404}
!3400 = !DILocalVariable(name: "h", arg: 1, scope: !3396, file: !142, line: 147, type: !2307)
!3401 = !DILocalVariable(name: "c", arg: 2, scope: !3396, file: !142, line: 147, type: !2312)
!3402 = !DILocalVariable(name: "used", arg: 3, scope: !3396, file: !142, line: 147, type: !211)
!3403 = !DILocalVariable(name: "buf", scope: !3396, file: !142, line: 149, type: !2302)
!3404 = !DILocalVariable(name: "cmem", scope: !3396, file: !142, line: 150, type: !102)
!3405 = !DILocation(line: 0, scope: !3396)
!3406 = !DILocation(line: 149, column: 22, scope: !3396)
!3407 = !DILocation(line: 0, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !142, line: 159, column: 7)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !142, line: 158, column: 9)
!3410 = distinct !DILexicalBlock(scope: !3396, file: !142, line: 152, column: 6)
!3411 = !DILocation(line: 159, column: 7, scope: !3409)
!3412 = !DILocation(line: 165, column: 1, scope: !3396)
!3413 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3414, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3417)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!3416, !2307, !2312}
!3416 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3417 = !{!3418, !3419}
!3418 = !DILocalVariable(name: "h", arg: 1, scope: !3413, file: !142, line: 142, type: !2307)
!3419 = !DILocalVariable(name: "c", arg: 2, scope: !3413, file: !142, line: 142, type: !2312)
!3420 = !DILocation(line: 0, scope: !3413)
!3421 = !DILocation(line: 144, column: 9, scope: !3413)
!3422 = !DILocation(line: 144, column: 42, scope: !3413)
!3423 = !DILocation(line: 144, column: 2, scope: !3413)
!3424 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3425, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3427)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!120, !2307, !3416}
!3427 = !{!3428, !3429}
!3428 = !DILocalVariable(name: "h", arg: 1, scope: !3424, file: !142, line: 245, type: !2307)
!3429 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3424, file: !142, line: 245, type: !3416)
!3430 = !DILocation(line: 0, scope: !3424)
!3431 = !DILocation(line: 247, column: 20, scope: !3424)
!3432 = !DILocation(line: 247, column: 33, scope: !3424)
!3433 = !DILocation(line: 247, column: 2, scope: !3424)
!3434 = distinct !DISubprogram(name: "free_chunk", scope: !3353, file: !3353, line: 133, type: !3435, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3437)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{null, !2307, !2312}
!3437 = !{!3438, !3439}
!3438 = !DILocalVariable(name: "h", arg: 1, scope: !3434, file: !3353, line: 133, type: !2307)
!3439 = !DILocalVariable(name: "c", arg: 2, scope: !3434, file: !3353, line: 133, type: !2312)
!3440 = !DILocation(line: 0, scope: !3434)
!3441 = !DILocation(line: 136, column: 21, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3434, file: !3353, line: 136, column: 6)
!3443 = !DILocation(line: 136, column: 7, scope: !3442)
!3444 = !DILocation(line: 136, column: 6, scope: !3434)
!3445 = !DILocation(line: 137, column: 3, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3442, file: !3353, line: 136, column: 41)
!3447 = !DILocation(line: 138, column: 22, scope: !3446)
!3448 = !DILocation(line: 138, column: 3, scope: !3446)
!3449 = !DILocation(line: 139, column: 2, scope: !3446)
!3450 = !DILocation(line: 142, column: 21, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3434, file: !3353, line: 142, column: 6)
!3452 = !{i32 -65535, i32 536903678}
!3453 = !DILocation(line: 142, column: 7, scope: !3451)
!3454 = !DILocation(line: 142, column: 6, scope: !3434)
!3455 = !DILocation(line: 143, column: 3, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3451, file: !3353, line: 142, column: 40)
!3457 = !DILocation(line: 144, column: 19, scope: !3456)
!3458 = !DILocation(line: 144, column: 3, scope: !3456)
!3459 = !DILocation(line: 145, column: 7, scope: !3456)
!3460 = !DILocation(line: 146, column: 2, scope: !3456)
!3461 = !DILocation(line: 148, column: 2, scope: !3434)
!3462 = !DILocation(line: 149, column: 1, scope: !3434)
!3463 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3464, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3466)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{!2312, !2307, !2312}
!3466 = !{!3467, !3468}
!3467 = !DILocalVariable(name: "h", arg: 1, scope: !3463, file: !142, line: 204, type: !2307)
!3468 = !DILocalVariable(name: "c", arg: 2, scope: !3463, file: !142, line: 204, type: !2312)
!3469 = !DILocation(line: 0, scope: !3463)
!3470 = !DILocation(line: 206, column: 13, scope: !3463)
!3471 = !DILocation(line: 206, column: 11, scope: !3463)
!3472 = !DILocation(line: 206, column: 2, scope: !3463)
!3473 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3474, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3476)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!211, !2307, !2312}
!3476 = !{!3477, !3478}
!3477 = !DILocalVariable(name: "h", arg: 1, scope: !3473, file: !142, line: 137, type: !2307)
!3478 = !DILocalVariable(name: "c", arg: 2, scope: !3473, file: !142, line: 137, type: !2312)
!3479 = !DILocation(line: 0, scope: !3473)
!3480 = !DILocation(line: 139, column: 9, scope: !3473)
!3481 = !DILocation(line: 139, column: 42, scope: !3473)
!3482 = !DILocation(line: 139, column: 2, scope: !3473)
!3483 = distinct !DISubprogram(name: "free_list_remove", scope: !3353, file: !3353, line: 60, type: !3435, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3484)
!3484 = !{!3485, !3486, !3487}
!3485 = !DILocalVariable(name: "h", arg: 1, scope: !3483, file: !3353, line: 60, type: !2307)
!3486 = !DILocalVariable(name: "c", arg: 2, scope: !3483, file: !3353, line: 60, type: !2312)
!3487 = !DILocalVariable(name: "bidx", scope: !3488, file: !3353, line: 63, type: !103)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !3353, line: 62, column: 31)
!3489 = distinct !DILexicalBlock(scope: !3483, file: !3353, line: 62, column: 6)
!3490 = !DILocation(line: 0, scope: !3483)
!3491 = !DILocation(line: 63, column: 28, scope: !3488)
!3492 = !DILocation(line: 63, column: 14, scope: !3488)
!3493 = !DILocation(line: 0, scope: !3488)
!3494 = !DILocation(line: 64, column: 3, scope: !3488)
!3495 = !DILocation(line: 66, column: 1, scope: !3483)
!3496 = distinct !DISubprogram(name: "merge_chunks", scope: !3353, file: !3353, line: 125, type: !3497, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3499)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{null, !2307, !2312, !2312}
!3499 = !{!3500, !3501, !3502, !3503}
!3500 = !DILocalVariable(name: "h", arg: 1, scope: !3496, file: !3353, line: 125, type: !2307)
!3501 = !DILocalVariable(name: "lc", arg: 2, scope: !3496, file: !3353, line: 125, type: !2312)
!3502 = !DILocalVariable(name: "rc", arg: 3, scope: !3496, file: !3353, line: 125, type: !2312)
!3503 = !DILocalVariable(name: "newsz", scope: !3496, file: !3353, line: 127, type: !3416)
!3504 = !DILocation(line: 0, scope: !3496)
!3505 = !DILocation(line: 127, column: 20, scope: !3496)
!3506 = !DILocation(line: 127, column: 40, scope: !3496)
!3507 = !DILocation(line: 127, column: 38, scope: !3496)
!3508 = !DILocation(line: 129, column: 2, scope: !3496)
!3509 = !DILocation(line: 130, column: 25, scope: !3496)
!3510 = !DILocation(line: 130, column: 2, scope: !3496)
!3511 = !DILocation(line: 131, column: 1, scope: !3496)
!3512 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3464, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3513)
!3513 = !{!3514, !3515}
!3514 = !DILocalVariable(name: "h", arg: 1, scope: !3512, file: !142, line: 199, type: !2307)
!3515 = !DILocalVariable(name: "c", arg: 2, scope: !3512, file: !142, line: 199, type: !2312)
!3516 = !DILocation(line: 0, scope: !3512)
!3517 = !DILocation(line: 201, column: 13, scope: !3512)
!3518 = !DILocation(line: 201, column: 11, scope: !3512)
!3519 = !DILocation(line: 201, column: 2, scope: !3512)
!3520 = distinct !DISubprogram(name: "free_list_add", scope: !3353, file: !3353, line: 98, type: !3435, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3521)
!3521 = !{!3522, !3523, !3524}
!3522 = !DILocalVariable(name: "h", arg: 1, scope: !3520, file: !3353, line: 98, type: !2307)
!3523 = !DILocalVariable(name: "c", arg: 2, scope: !3520, file: !3353, line: 98, type: !2312)
!3524 = !DILocalVariable(name: "bidx", scope: !3525, file: !3353, line: 101, type: !103)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !3353, line: 100, column: 31)
!3526 = distinct !DILexicalBlock(scope: !3520, file: !3353, line: 100, column: 6)
!3527 = !DILocation(line: 0, scope: !3520)
!3528 = !DILocation(line: 101, column: 28, scope: !3525)
!3529 = !DILocation(line: 101, column: 14, scope: !3525)
!3530 = !DILocation(line: 0, scope: !3525)
!3531 = !DILocation(line: 102, column: 3, scope: !3525)
!3532 = !DILocation(line: 104, column: 1, scope: !3520)
!3533 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3534, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3536)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!103, !2307, !3416}
!3536 = !{!3537, !3538, !3539}
!3537 = !DILocalVariable(name: "h", arg: 1, scope: !3533, file: !142, line: 250, type: !2307)
!3538 = !DILocalVariable(name: "sz", arg: 2, scope: !3533, file: !142, line: 250, type: !3416)
!3539 = !DILocalVariable(name: "usable_sz", scope: !3533, file: !142, line: 252, type: !32)
!3540 = !DILocation(line: 0, scope: !3533)
!3541 = !DILocation(line: 252, column: 32, scope: !3533)
!3542 = !DILocation(line: 252, column: 30, scope: !3533)
!3543 = !DILocation(line: 252, column: 50, scope: !3533)
!3544 = !DILocation(line: 253, column: 14, scope: !3533)
!3545 = !{i32 0, i32 33}
!3546 = !DILocation(line: 253, column: 12, scope: !3533)
!3547 = !DILocation(line: 253, column: 2, scope: !3533)
!3548 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3353, file: !3353, line: 68, type: !3549, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3551)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !2307, !2312, !103}
!3551 = !{!3552, !3553, !3554, !3555, !3557, !3560}
!3552 = !DILocalVariable(name: "h", arg: 1, scope: !3548, file: !3353, line: 68, type: !2307)
!3553 = !DILocalVariable(name: "c", arg: 2, scope: !3548, file: !3353, line: 68, type: !2312)
!3554 = !DILocalVariable(name: "bidx", arg: 3, scope: !3548, file: !3353, line: 68, type: !103)
!3555 = !DILocalVariable(name: "b", scope: !3548, file: !3353, line: 70, type: !3556)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!3557 = !DILocalVariable(name: "second", scope: !3558, file: !3353, line: 84, type: !2312)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !3353, line: 80, column: 9)
!3559 = distinct !DILexicalBlock(scope: !3548, file: !3353, line: 72, column: 6)
!3560 = !DILocalVariable(name: "first", scope: !3558, file: !3353, line: 85, type: !2312)
!3561 = !DILocation(line: 0, scope: !3548)
!3562 = !DILocation(line: 72, column: 9, scope: !3559)
!3563 = !DILocation(line: 72, column: 14, scope: !3559)
!3564 = !DILocation(line: 72, column: 6, scope: !3548)
!3565 = !DILocation(line: 76, column: 23, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3559, file: !3353, line: 72, column: 21)
!3567 = !DILocation(line: 76, column: 6, scope: !3566)
!3568 = !DILocation(line: 76, column: 20, scope: !3566)
!3569 = !DILocation(line: 77, column: 11, scope: !3566)
!3570 = !DILocation(line: 78, column: 3, scope: !3566)
!3571 = !DILocation(line: 79, column: 3, scope: !3566)
!3572 = !DILocation(line: 80, column: 2, scope: !3566)
!3573 = !DILocation(line: 0, scope: !3558)
!3574 = !DILocation(line: 85, column: 21, scope: !3558)
!3575 = !{i32 0, i32 65536}
!3576 = !DILocation(line: 87, column: 3, scope: !3558)
!3577 = !DILocation(line: 88, column: 3, scope: !3558)
!3578 = !DILocation(line: 89, column: 3, scope: !3558)
!3579 = !DILocation(line: 90, column: 3, scope: !3558)
!3580 = !DILocation(line: 94, column: 39, scope: !3548)
!3581 = !DILocation(line: 94, column: 19, scope: !3548)
!3582 = !DILocation(line: 94, column: 5, scope: !3548)
!3583 = !DILocation(line: 94, column: 16, scope: !3548)
!3584 = !DILocation(line: 96, column: 1, scope: !3548)
!3585 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3497, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3586)
!3586 = !{!3587, !3588, !3589}
!3587 = !DILocalVariable(name: "h", arg: 1, scope: !3585, file: !142, line: 187, type: !2307)
!3588 = !DILocalVariable(name: "c", arg: 2, scope: !3585, file: !142, line: 187, type: !2312)
!3589 = !DILocalVariable(name: "prev", arg: 3, scope: !3585, file: !142, line: 188, type: !2312)
!3590 = !DILocation(line: 0, scope: !3585)
!3591 = !DILocation(line: 190, column: 2, scope: !3585)
!3592 = !DILocation(line: 191, column: 1, scope: !3585)
!3593 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3497, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3594)
!3594 = !{!3595, !3596, !3597}
!3595 = !DILocalVariable(name: "h", arg: 1, scope: !3593, file: !142, line: 193, type: !2307)
!3596 = !DILocalVariable(name: "c", arg: 2, scope: !3593, file: !142, line: 193, type: !2312)
!3597 = !DILocalVariable(name: "next", arg: 3, scope: !3593, file: !142, line: 194, type: !2312)
!3598 = !DILocation(line: 0, scope: !3593)
!3599 = !DILocation(line: 196, column: 2, scope: !3593)
!3600 = !DILocation(line: 197, column: 1, scope: !3593)
!3601 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3464, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3602)
!3602 = !{!3603, !3604}
!3603 = !DILocalVariable(name: "h", arg: 1, scope: !3601, file: !142, line: 177, type: !2307)
!3604 = !DILocalVariable(name: "c", arg: 2, scope: !3601, file: !142, line: 177, type: !2312)
!3605 = !DILocation(line: 0, scope: !3601)
!3606 = !DILocation(line: 179, column: 9, scope: !3601)
!3607 = !DILocation(line: 179, column: 2, scope: !3601)
!3608 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3609, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!2312, !2307, !2312, !141}
!3611 = !{!3612, !3613, !3614, !3615, !3616}
!3612 = !DILocalVariable(name: "h", arg: 1, scope: !3608, file: !142, line: 107, type: !2307)
!3613 = !DILocalVariable(name: "c", arg: 2, scope: !3608, file: !142, line: 107, type: !2312)
!3614 = !DILocalVariable(name: "f", arg: 3, scope: !3608, file: !142, line: 108, type: !141)
!3615 = !DILocalVariable(name: "buf", scope: !3608, file: !142, line: 110, type: !2302)
!3616 = !DILocalVariable(name: "cmem", scope: !3608, file: !142, line: 111, type: !102)
!3617 = !DILocation(line: 0, scope: !3608)
!3618 = !DILocation(line: 110, column: 22, scope: !3608)
!3619 = !DILocation(line: 111, column: 15, scope: !3608)
!3620 = !DILocation(line: 116, column: 11, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !142, line: 115, column: 9)
!3622 = distinct !DILexicalBlock(scope: !3608, file: !142, line: 113, column: 6)
!3623 = !DILocation(line: 116, column: 10, scope: !3621)
!3624 = !DILocation(line: 118, column: 1, scope: !3608)
!3625 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3626, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3628)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!2302, !2307}
!3628 = !{!3629}
!3629 = !DILocalVariable(name: "h", arg: 1, scope: !3625, file: !142, line: 101, type: !2307)
!3630 = !DILocation(line: 0, scope: !3625)
!3631 = !DILocation(line: 104, column: 9, scope: !3625)
!3632 = !DILocation(line: 104, column: 2, scope: !3625)
!3633 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3634, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3636)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{null, !2307, !2312, !141, !2312}
!3636 = !{!3637, !3638, !3639, !3640, !3641, !3642}
!3637 = !DILocalVariable(name: "h", arg: 1, scope: !3633, file: !142, line: 120, type: !2307)
!3638 = !DILocalVariable(name: "c", arg: 2, scope: !3633, file: !142, line: 120, type: !2312)
!3639 = !DILocalVariable(name: "f", arg: 3, scope: !3633, file: !142, line: 121, type: !141)
!3640 = !DILocalVariable(name: "val", arg: 4, scope: !3633, file: !142, line: 121, type: !2312)
!3641 = !DILocalVariable(name: "buf", scope: !3633, file: !142, line: 125, type: !2302)
!3642 = !DILocalVariable(name: "cmem", scope: !3633, file: !142, line: 126, type: !102)
!3643 = !DILocation(line: 0, scope: !3633)
!3644 = !DILocation(line: 125, column: 22, scope: !3633)
!3645 = !DILocation(line: 126, column: 15, scope: !3633)
!3646 = !DILocation(line: 133, column: 27, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !142, line: 131, column: 9)
!3648 = distinct !DILexicalBlock(scope: !3633, file: !142, line: 128, column: 6)
!3649 = !DILocation(line: 133, column: 4, scope: !3647)
!3650 = !DILocation(line: 133, column: 3, scope: !3647)
!3651 = !DILocation(line: 133, column: 25, scope: !3647)
!3652 = !DILocation(line: 135, column: 1, scope: !3633)
!3653 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3654, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3656)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!3416, !2307}
!3656 = !{!3657}
!3657 = !DILocalVariable(name: "h", arg: 1, scope: !3653, file: !142, line: 240, type: !2307)
!3658 = !DILocation(line: 0, scope: !3653)
!3659 = !DILocation(line: 242, column: 9, scope: !3653)
!3660 = !DILocation(line: 242, column: 2, scope: !3653)
!3661 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3662, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3664)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!3416, !2307, !120}
!3664 = !{!3665, !3666}
!3665 = !DILocalVariable(name: "h", arg: 1, scope: !3661, file: !142, line: 235, type: !2307)
!3666 = !DILocalVariable(name: "bytes", arg: 2, scope: !3661, file: !142, line: 235, type: !120)
!3667 = !DILocation(line: 0, scope: !3661)
!3668 = !DILocation(line: 237, column: 39, scope: !3661)
!3669 = !DILocation(line: 237, column: 9, scope: !3661)
!3670 = !DILocation(line: 237, column: 2, scope: !3661)
!3671 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3672, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3674)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!3416, !120}
!3674 = !{!3675}
!3675 = !DILocalVariable(name: "bytes", arg: 1, scope: !3671, file: !142, line: 230, type: !120)
!3676 = !DILocation(line: 0, scope: !3671)
!3677 = !DILocation(line: 232, column: 29, scope: !3671)
!3678 = !DILocation(line: 232, column: 35, scope: !3671)
!3679 = !DILocation(line: 232, column: 2, scope: !3671)
!3680 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3681, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3683)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{null, !2307, !2312, !3416}
!3683 = !{!3684, !3685, !3686}
!3684 = !DILocalVariable(name: "h", arg: 1, scope: !3680, file: !142, line: 172, type: !2307)
!3685 = !DILocalVariable(name: "c", arg: 2, scope: !3680, file: !142, line: 172, type: !2312)
!3686 = !DILocalVariable(name: "size", arg: 3, scope: !3680, file: !142, line: 172, type: !3416)
!3687 = !DILocation(line: 0, scope: !3680)
!3688 = !DILocation(line: 174, column: 38, scope: !3680)
!3689 = !DILocation(line: 174, column: 2, scope: !3680)
!3690 = !DILocation(line: 175, column: 1, scope: !3680)
!3691 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3681, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3692)
!3692 = !{!3693, !3694, !3695}
!3693 = !DILocalVariable(name: "h", arg: 1, scope: !3691, file: !142, line: 209, type: !2307)
!3694 = !DILocalVariable(name: "c", arg: 2, scope: !3691, file: !142, line: 209, type: !2312)
!3695 = !DILocalVariable(name: "size", arg: 3, scope: !3691, file: !142, line: 210, type: !3416)
!3696 = !DILocation(line: 0, scope: !3691)
!3697 = !DILocation(line: 212, column: 2, scope: !3691)
!3698 = !DILocation(line: 213, column: 1, scope: !3691)
!3699 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3353, file: !3353, line: 34, type: !3549, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3700)
!3700 = !{!3701, !3702, !3703, !3704, !3705, !3708}
!3701 = !DILocalVariable(name: "h", arg: 1, scope: !3699, file: !3353, line: 34, type: !2307)
!3702 = !DILocalVariable(name: "c", arg: 2, scope: !3699, file: !3353, line: 34, type: !2312)
!3703 = !DILocalVariable(name: "bidx", arg: 3, scope: !3699, file: !3353, line: 34, type: !103)
!3704 = !DILocalVariable(name: "b", scope: !3699, file: !3353, line: 36, type: !3556)
!3705 = !DILocalVariable(name: "first", scope: !3706, file: !3353, line: 47, type: !2312)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !3353, line: 46, column: 9)
!3707 = distinct !DILexicalBlock(scope: !3699, file: !3353, line: 42, column: 6)
!3708 = !DILocalVariable(name: "second", scope: !3706, file: !3353, line: 48, type: !2312)
!3709 = !DILocation(line: 0, scope: !3699)
!3710 = !DILocation(line: 36, column: 29, scope: !3699)
!3711 = !DILocation(line: 42, column: 6, scope: !3707)
!3712 = !DILocation(line: 42, column: 28, scope: !3707)
!3713 = !DILocation(line: 42, column: 6, scope: !3699)
!3714 = !DILocation(line: 44, column: 24, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3707, file: !3353, line: 42, column: 34)
!3716 = !DILocation(line: 44, column: 23, scope: !3715)
!3717 = !DILocation(line: 44, column: 6, scope: !3715)
!3718 = !DILocation(line: 44, column: 20, scope: !3715)
!3719 = !DILocation(line: 45, column: 6, scope: !3715)
!3720 = !DILocation(line: 45, column: 11, scope: !3715)
!3721 = !DILocation(line: 46, column: 2, scope: !3715)
!3722 = !DILocation(line: 47, column: 21, scope: !3706)
!3723 = !DILocation(line: 0, scope: !3706)
!3724 = !DILocation(line: 50, column: 6, scope: !3706)
!3725 = !DILocation(line: 50, column: 11, scope: !3706)
!3726 = !DILocation(line: 51, column: 3, scope: !3706)
!3727 = !DILocation(line: 52, column: 3, scope: !3706)
!3728 = !DILocation(line: 56, column: 39, scope: !3699)
!3729 = !DILocation(line: 56, column: 19, scope: !3699)
!3730 = !DILocation(line: 56, column: 5, scope: !3699)
!3731 = !DILocation(line: 56, column: 16, scope: !3699)
!3732 = !DILocation(line: 58, column: 1, scope: !3699)
!3733 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3464, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3734)
!3734 = !{!3735, !3736}
!3735 = !DILocalVariable(name: "h", arg: 1, scope: !3733, file: !142, line: 182, type: !2307)
!3736 = !DILocalVariable(name: "c", arg: 2, scope: !3733, file: !142, line: 182, type: !2312)
!3737 = !DILocation(line: 0, scope: !3733)
!3738 = !DILocation(line: 184, column: 9, scope: !3733)
!3739 = !DILocation(line: 184, column: 2, scope: !3733)
!3740 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3353, file: !3353, line: 200, type: !3741, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3743)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!120, !3356, !102}
!3743 = !{!3744, !3745, !3746, !3747, !3748, !3749, !3750}
!3744 = !DILocalVariable(name: "heap", arg: 1, scope: !3740, file: !3353, line: 200, type: !3356)
!3745 = !DILocalVariable(name: "mem", arg: 2, scope: !3740, file: !3353, line: 200, type: !102)
!3746 = !DILocalVariable(name: "h", scope: !3740, file: !3353, line: 202, type: !2307)
!3747 = !DILocalVariable(name: "c", scope: !3740, file: !3353, line: 203, type: !2312)
!3748 = !DILocalVariable(name: "addr", scope: !3740, file: !3353, line: 204, type: !120)
!3749 = !DILocalVariable(name: "chunk_base", scope: !3740, file: !3353, line: 205, type: !120)
!3750 = !DILocalVariable(name: "chunk_sz", scope: !3740, file: !3353, line: 206, type: !120)
!3751 = !DILocation(line: 0, scope: !3740)
!3752 = !DILocation(line: 202, column: 27, scope: !3740)
!3753 = !DILocation(line: 203, column: 16, scope: !3740)
!3754 = !DILocation(line: 204, column: 16, scope: !3740)
!3755 = !DILocation(line: 205, column: 31, scope: !3740)
!3756 = !DILocation(line: 205, column: 22, scope: !3740)
!3757 = !DILocation(line: 206, column: 20, scope: !3740)
!3758 = !DILocation(line: 206, column: 37, scope: !3740)
!3759 = !DILocation(line: 208, column: 26, scope: !3740)
!3760 = !DILocation(line: 208, column: 18, scope: !3740)
!3761 = !DILocation(line: 208, column: 2, scope: !3740)
!3762 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3353, file: !3353, line: 263, type: !3763, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3765)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!102, !3356, !120}
!3765 = !{!3766, !3767, !3768, !3769, !3770, !3771}
!3766 = !DILocalVariable(name: "heap", arg: 1, scope: !3762, file: !3353, line: 263, type: !3356)
!3767 = !DILocalVariable(name: "bytes", arg: 2, scope: !3762, file: !3353, line: 263, type: !120)
!3768 = !DILocalVariable(name: "h", scope: !3762, file: !3353, line: 265, type: !2307)
!3769 = !DILocalVariable(name: "mem", scope: !3762, file: !3353, line: 266, type: !102)
!3770 = !DILocalVariable(name: "chunk_sz", scope: !3762, file: !3353, line: 272, type: !3416)
!3771 = !DILocalVariable(name: "c", scope: !3762, file: !3353, line: 273, type: !2312)
!3772 = !DILocation(line: 0, scope: !3762)
!3773 = !DILocation(line: 265, column: 27, scope: !3762)
!3774 = !DILocation(line: 268, column: 12, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3762, file: !3353, line: 268, column: 6)
!3776 = !DILocation(line: 268, column: 18, scope: !3775)
!3777 = !DILocation(line: 268, column: 21, scope: !3775)
!3778 = !DILocation(line: 268, column: 6, scope: !3762)
!3779 = !DILocation(line: 272, column: 23, scope: !3762)
!3780 = !DILocation(line: 273, column: 16, scope: !3762)
!3781 = !DILocation(line: 274, column: 8, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3762, file: !3353, line: 274, column: 6)
!3783 = !DILocation(line: 274, column: 6, scope: !3762)
!3784 = !DILocation(line: 279, column: 6, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3762, file: !3353, line: 279, column: 6)
!3786 = !DILocation(line: 279, column: 23, scope: !3785)
!3787 = !DILocation(line: 279, column: 6, scope: !3762)
!3788 = !DILocation(line: 280, column: 24, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3785, file: !3353, line: 279, column: 35)
!3790 = !DILocation(line: 280, column: 3, scope: !3789)
!3791 = !DILocation(line: 281, column: 3, scope: !3789)
!3792 = !DILocation(line: 282, column: 2, scope: !3789)
!3793 = !DILocation(line: 284, column: 2, scope: !3762)
!3794 = !DILocation(line: 286, column: 8, scope: !3762)
!3795 = !DILocation(line: 289, column: 50, scope: !3762)
!3796 = !DILocation(line: 289, column: 30, scope: !3762)
!3797 = !{i32 -4, i32 262133}
!3798 = !DILocation(line: 289, column: 2, scope: !3762)
!3799 = !DILocation(line: 298, column: 2, scope: !3762)
!3800 = !DILocation(line: 299, column: 1, scope: !3762)
!3801 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3802, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3804)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!211, !2307, !120}
!3804 = !{!3805, !3806}
!3805 = !DILocalVariable(name: "h", arg: 1, scope: !3801, file: !142, line: 256, type: !2307)
!3806 = !DILocalVariable(name: "bytes", arg: 2, scope: !3801, file: !142, line: 256, type: !120)
!3807 = !DILocation(line: 0, scope: !3801)
!3808 = !DILocation(line: 262, column: 16, scope: !3801)
!3809 = !DILocation(line: 262, column: 36, scope: !3801)
!3810 = !DILocation(line: 262, column: 30, scope: !3801)
!3811 = !DILocation(line: 262, column: 2, scope: !3801)
!3812 = distinct !DISubprogram(name: "alloc_chunk", scope: !3353, file: !3353, line: 211, type: !3813, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3815)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!2312, !2307, !3416}
!3815 = !{!3816, !3817, !3818, !3819, !3820, !3823, !3824, !3826, !3827, !3830}
!3816 = !DILocalVariable(name: "h", arg: 1, scope: !3812, file: !3353, line: 211, type: !2307)
!3817 = !DILocalVariable(name: "sz", arg: 2, scope: !3812, file: !3353, line: 211, type: !3416)
!3818 = !DILocalVariable(name: "bi", scope: !3812, file: !3353, line: 213, type: !103)
!3819 = !DILocalVariable(name: "b", scope: !3812, file: !3353, line: 214, type: !3556)
!3820 = !DILocalVariable(name: "first", scope: !3821, file: !3353, line: 233, type: !2312)
!3821 = distinct !DILexicalBlock(scope: !3822, file: !3353, line: 232, column: 15)
!3822 = distinct !DILexicalBlock(scope: !3812, file: !3353, line: 232, column: 6)
!3823 = !DILocalVariable(name: "i", scope: !3821, file: !3353, line: 234, type: !103)
!3824 = !DILocalVariable(name: "c", scope: !3825, file: !3353, line: 236, type: !2312)
!3825 = distinct !DILexicalBlock(scope: !3821, file: !3353, line: 235, column: 6)
!3826 = !DILocalVariable(name: "bmask", scope: !3812, file: !3353, line: 249, type: !137)
!3827 = !DILocalVariable(name: "minbucket", scope: !3828, file: !3353, line: 252, type: !103)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !3353, line: 251, column: 19)
!3829 = distinct !DILexicalBlock(scope: !3812, file: !3353, line: 251, column: 6)
!3830 = !DILocalVariable(name: "c", scope: !3828, file: !3353, line: 253, type: !2312)
!3831 = !DILocation(line: 0, scope: !3812)
!3832 = !DILocation(line: 213, column: 11, scope: !3812)
!3833 = !DILocation(line: 232, column: 9, scope: !3822)
!3834 = !DILocation(line: 232, column: 6, scope: !3822)
!3835 = !DILocation(line: 232, column: 6, scope: !3812)
!3836 = !DILocation(line: 236, column: 21, scope: !3825)
!3837 = !DILocation(line: 0, scope: !3821)
!3838 = !DILocation(line: 0, scope: !3825)
!3839 = !DILocation(line: 237, column: 8, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3825, file: !3353, line: 237, column: 8)
!3841 = !DILocation(line: 237, column: 25, scope: !3840)
!3842 = !DILocation(line: 237, column: 8, scope: !3825)
!3843 = !DILocation(line: 238, column: 5, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3840, file: !3353, line: 237, column: 32)
!3845 = !DILocation(line: 241, column: 14, scope: !3825)
!3846 = !DILocation(line: 241, column: 12, scope: !3825)
!3847 = !DILocation(line: 243, column: 12, scope: !3821)
!3848 = !DILocation(line: 243, column: 16, scope: !3821)
!3849 = distinct !{!3849, !3850, !3851}
!3850 = !DILocation(line: 235, column: 3, scope: !3821)
!3851 = !DILocation(line: 243, column: 35, scope: !3821)
!3852 = !DILocation(line: 249, column: 22, scope: !3812)
!3853 = !DILocation(line: 249, column: 39, scope: !3812)
!3854 = !DILocation(line: 249, column: 36, scope: !3812)
!3855 = !DILocation(line: 251, column: 12, scope: !3829)
!3856 = !DILocation(line: 251, column: 6, scope: !3812)
!3857 = !DILocation(line: 252, column: 19, scope: !3828)
!3858 = !DILocation(line: 0, scope: !3828)
!3859 = !DILocation(line: 253, column: 39, scope: !3828)
!3860 = !DILocation(line: 255, column: 3, scope: !3828)
!3861 = !DILocation(line: 261, column: 1, scope: !3812)
!3862 = distinct !DISubprogram(name: "split_chunks", scope: !3353, file: !3353, line: 109, type: !3497, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3863)
!3863 = !{!3864, !3865, !3866, !3867, !3868, !3869}
!3864 = !DILocalVariable(name: "h", arg: 1, scope: !3862, file: !3353, line: 109, type: !2307)
!3865 = !DILocalVariable(name: "lc", arg: 2, scope: !3862, file: !3353, line: 109, type: !2312)
!3866 = !DILocalVariable(name: "rc", arg: 3, scope: !3862, file: !3353, line: 109, type: !2312)
!3867 = !DILocalVariable(name: "sz0", scope: !3862, file: !3353, line: 114, type: !3416)
!3868 = !DILocalVariable(name: "lsz", scope: !3862, file: !3353, line: 115, type: !3416)
!3869 = !DILocalVariable(name: "rsz", scope: !3862, file: !3353, line: 116, type: !3416)
!3870 = !DILocation(line: 0, scope: !3862)
!3871 = !DILocation(line: 114, column: 18, scope: !3862)
!3872 = !DILocation(line: 115, column: 21, scope: !3862)
!3873 = !DILocation(line: 116, column: 22, scope: !3862)
!3874 = !DILocation(line: 118, column: 2, scope: !3862)
!3875 = !DILocation(line: 119, column: 2, scope: !3862)
!3876 = !DILocation(line: 120, column: 2, scope: !3862)
!3877 = !DILocation(line: 121, column: 25, scope: !3862)
!3878 = !DILocation(line: 121, column: 2, scope: !3862)
!3879 = !DILocation(line: 122, column: 1, scope: !3862)
!3880 = distinct !DISubprogram(name: "chunk_mem", scope: !3353, file: !3353, line: 24, type: !3881, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!102, !2307, !2312}
!3883 = !{!3884, !3885, !3886, !3887}
!3884 = !DILocalVariable(name: "h", arg: 1, scope: !3880, file: !3353, line: 24, type: !2307)
!3885 = !DILocalVariable(name: "c", arg: 2, scope: !3880, file: !3353, line: 24, type: !2312)
!3886 = !DILocalVariable(name: "buf", scope: !3880, file: !3353, line: 26, type: !2302)
!3887 = !DILocalVariable(name: "ret", scope: !3880, file: !3353, line: 27, type: !1796)
!3888 = !DILocation(line: 0, scope: !3880)
!3889 = !DILocation(line: 26, column: 22, scope: !3880)
!3890 = !DILocation(line: 27, column: 38, scope: !3880)
!3891 = !DILocation(line: 31, column: 2, scope: !3880)
!3892 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3353, file: !3353, line: 17, type: !3893, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3895)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{null, !2307, !120}
!3895 = !{!3896, !3897}
!3896 = !DILocalVariable(name: "h", arg: 1, scope: !3892, file: !3353, line: 17, type: !2307)
!3897 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3892, file: !3353, line: 17, type: !120)
!3898 = !DILocation(line: 0, scope: !3892)
!3899 = !DILocation(line: 19, column: 5, scope: !3892)
!3900 = !DILocation(line: 19, column: 21, scope: !3892)
!3901 = !DILocation(line: 20, column: 27, scope: !3892)
!3902 = !DILocation(line: 20, column: 25, scope: !3892)
!3903 = !DILocation(line: 21, column: 1, scope: !3892)
!3904 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3353, file: !3353, line: 301, type: !3905, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!102, !3356, !120, !120}
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919}
!3908 = !DILocalVariable(name: "heap", arg: 1, scope: !3904, file: !3353, line: 301, type: !3356)
!3909 = !DILocalVariable(name: "align", arg: 2, scope: !3904, file: !3353, line: 301, type: !120)
!3910 = !DILocalVariable(name: "bytes", arg: 3, scope: !3904, file: !3353, line: 301, type: !120)
!3911 = !DILocalVariable(name: "h", scope: !3904, file: !3353, line: 303, type: !2307)
!3912 = !DILocalVariable(name: "gap", scope: !3904, file: !3353, line: 304, type: !120)
!3913 = !DILocalVariable(name: "rew", scope: !3904, file: !3353, line: 304, type: !120)
!3914 = !DILocalVariable(name: "padded_sz", scope: !3904, file: !3353, line: 335, type: !3416)
!3915 = !DILocalVariable(name: "c0", scope: !3904, file: !3353, line: 336, type: !2312)
!3916 = !DILocalVariable(name: "mem", scope: !3904, file: !3353, line: 341, type: !1796)
!3917 = !DILocalVariable(name: "end", scope: !3904, file: !3353, line: 345, type: !2302)
!3918 = !DILocalVariable(name: "c", scope: !3904, file: !3353, line: 348, type: !2312)
!3919 = !DILocalVariable(name: "c_end", scope: !3904, file: !3353, line: 349, type: !2312)
!3920 = !DILocation(line: 0, scope: !3904)
!3921 = !DILocation(line: 303, column: 27, scope: !3904)
!3922 = !DILocation(line: 313, column: 16, scope: !3904)
!3923 = !DILocation(line: 313, column: 14, scope: !3904)
!3924 = !DILocation(line: 314, column: 12, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3904, file: !3353, line: 314, column: 6)
!3926 = !DILocation(line: 314, column: 6, scope: !3904)
!3927 = !DILocation(line: 315, column: 9, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3925, file: !3353, line: 314, column: 20)
!3929 = !DILocation(line: 316, column: 9, scope: !3928)
!3930 = !DILocation(line: 318, column: 13, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !3353, line: 318, column: 7)
!3932 = distinct !DILexicalBlock(scope: !3925, file: !3353, line: 317, column: 9)
!3933 = !DILocation(line: 318, column: 7, scope: !3932)
!3934 = !DILocation(line: 319, column: 11, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !3353, line: 318, column: 39)
!3936 = !DILocation(line: 319, column: 4, scope: !3935)
!3937 = !DILocation(line: 0, scope: !3925)
!3938 = !DILocation(line: 326, column: 12, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3904, file: !3353, line: 326, column: 6)
!3940 = !DILocation(line: 326, column: 17, scope: !3939)
!3941 = !DILocation(line: 326, column: 20, scope: !3939)
!3942 = !DILocation(line: 326, column: 6, scope: !3904)
!3943 = !DILocation(line: 335, column: 50, scope: !3904)
!3944 = !DILocation(line: 335, column: 58, scope: !3904)
!3945 = !DILocation(line: 335, column: 24, scope: !3904)
!3946 = !DILocation(line: 336, column: 17, scope: !3904)
!3947 = !DILocation(line: 338, column: 9, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3904, file: !3353, line: 338, column: 6)
!3949 = !DILocation(line: 338, column: 6, scope: !3904)
!3950 = !DILocation(line: 341, column: 17, scope: !3904)
!3951 = !DILocation(line: 344, column: 20, scope: !3904)
!3952 = !DILocation(line: 344, column: 8, scope: !3904)
!3953 = !DILocation(line: 344, column: 47, scope: !3904)
!3954 = !DILocation(line: 345, column: 39, scope: !3904)
!3955 = !DILocation(line: 348, column: 16, scope: !3904)
!3956 = !DILocation(line: 349, column: 26, scope: !3904)
!3957 = !DILocation(line: 349, column: 24, scope: !3904)
!3958 = !DILocation(line: 353, column: 8, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3904, file: !3353, line: 353, column: 6)
!3960 = !DILocation(line: 353, column: 6, scope: !3904)
!3961 = !DILocation(line: 354, column: 3, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3959, file: !3353, line: 353, column: 14)
!3963 = !DILocation(line: 355, column: 3, scope: !3962)
!3964 = !DILocation(line: 356, column: 2, scope: !3962)
!3965 = !DILocation(line: 359, column: 6, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3904, file: !3353, line: 359, column: 6)
!3967 = !DILocation(line: 359, column: 24, scope: !3966)
!3968 = !DILocation(line: 359, column: 6, scope: !3904)
!3969 = !DILocation(line: 360, column: 3, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3966, file: !3353, line: 359, column: 33)
!3971 = !DILocation(line: 361, column: 3, scope: !3970)
!3972 = !DILocation(line: 362, column: 2, scope: !3970)
!3973 = !DILocation(line: 364, column: 2, scope: !3904)
!3974 = !DILocation(line: 367, column: 50, scope: !3904)
!3975 = !DILocation(line: 367, column: 30, scope: !3904)
!3976 = !DILocation(line: 367, column: 2, scope: !3904)
!3977 = !DILocation(line: 377, column: 1, scope: !3904)
!3978 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3353, file: !3353, line: 379, type: !3979, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !3981)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!102, !3356, !102, !120, !120}
!3981 = !{!3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3997, !3998}
!3982 = !DILocalVariable(name: "heap", arg: 1, scope: !3978, file: !3353, line: 379, type: !3356)
!3983 = !DILocalVariable(name: "ptr", arg: 2, scope: !3978, file: !3353, line: 379, type: !102)
!3984 = !DILocalVariable(name: "align", arg: 3, scope: !3978, file: !3353, line: 380, type: !120)
!3985 = !DILocalVariable(name: "bytes", arg: 4, scope: !3978, file: !3353, line: 380, type: !120)
!3986 = !DILocalVariable(name: "h", scope: !3978, file: !3353, line: 382, type: !2307)
!3987 = !DILocalVariable(name: "c", scope: !3978, file: !3353, line: 399, type: !2312)
!3988 = !DILocalVariable(name: "rc", scope: !3978, file: !3353, line: 400, type: !2312)
!3989 = !DILocalVariable(name: "align_gap", scope: !3978, file: !3353, line: 401, type: !120)
!3990 = !DILocalVariable(name: "chunks_need", scope: !3978, file: !3353, line: 402, type: !3416)
!3991 = !DILocalVariable(name: "split_size", scope: !3992, file: !3353, line: 435, type: !3416)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !3353, line: 433, column: 61)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !3353, line: 432, column: 13)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3353, line: 409, column: 13)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3353, line: 406, column: 13)
!3996 = distinct !DILexicalBlock(scope: !3978, file: !3353, line: 404, column: 6)
!3997 = !DILocalVariable(name: "ptr2", scope: !3978, file: !3353, line: 474, type: !102)
!3998 = !DILocalVariable(name: "prev_size", scope: !3999, file: !3353, line: 477, type: !120)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3353, line: 476, column: 20)
!4000 = distinct !DILexicalBlock(scope: !3978, file: !3353, line: 476, column: 6)
!4001 = !DILocation(line: 0, scope: !3978)
!4002 = !DILocation(line: 382, column: 27, scope: !3978)
!4003 = !DILocation(line: 385, column: 10, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3978, file: !3353, line: 385, column: 6)
!4005 = !DILocation(line: 385, column: 6, scope: !3978)
!4006 = !DILocation(line: 386, column: 10, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4004, file: !3353, line: 385, column: 19)
!4008 = !DILocation(line: 386, column: 3, scope: !4007)
!4009 = !DILocation(line: 388, column: 12, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3978, file: !3353, line: 388, column: 6)
!4011 = !DILocation(line: 388, column: 6, scope: !3978)
!4012 = !DILocation(line: 389, column: 3, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4010, file: !3353, line: 388, column: 18)
!4014 = !DILocation(line: 390, column: 3, scope: !4013)
!4015 = !DILocation(line: 395, column: 6, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !3978, file: !3353, line: 395, column: 6)
!4017 = !DILocation(line: 395, column: 6, scope: !3978)
!4018 = !DILocation(line: 399, column: 16, scope: !3978)
!4019 = !DILocation(line: 400, column: 17, scope: !3978)
!4020 = !DILocation(line: 401, column: 49, scope: !3978)
!4021 = !DILocation(line: 401, column: 36, scope: !3978)
!4022 = !DILocation(line: 402, column: 52, scope: !3978)
!4023 = !DILocation(line: 402, column: 26, scope: !3978)
!4024 = !DILocation(line: 404, column: 6, scope: !3996)
!4025 = !DILocation(line: 404, column: 12, scope: !3996)
!4026 = !DILocation(line: 404, column: 40, scope: !3996)
!4027 = !DILocation(line: 404, column: 31, scope: !3996)
!4028 = !DILocation(line: 404, column: 6, scope: !3978)
!4029 = !DILocation(line: 406, column: 13, scope: !3995)
!4030 = !DILocation(line: 406, column: 30, scope: !3995)
!4031 = !DILocation(line: 406, column: 13, scope: !3996)
!4032 = !DILocation(line: 409, column: 30, scope: !3994)
!4033 = !DILocation(line: 409, column: 13, scope: !3995)
!4034 = !DILocation(line: 417, column: 22, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3994, file: !3353, line: 409, column: 45)
!4036 = !DILocation(line: 417, column: 37, scope: !4035)
!4037 = !DILocation(line: 416, column: 6, scope: !4035)
!4038 = !DILocation(line: 416, column: 22, scope: !4035)
!4039 = !DILocation(line: 420, column: 24, scope: !4035)
!4040 = !DILocation(line: 420, column: 3, scope: !4035)
!4041 = !DILocation(line: 421, column: 3, scope: !4035)
!4042 = !DILocation(line: 422, column: 3, scope: !4035)
!4043 = !DILocation(line: 431, column: 3, scope: !4035)
!4044 = !DILocation(line: 432, column: 14, scope: !3993)
!4045 = !DILocation(line: 432, column: 32, scope: !3993)
!4046 = !DILocation(line: 433, column: 26, scope: !3993)
!4047 = !DILocation(line: 433, column: 24, scope: !3993)
!4048 = !DILocation(line: 433, column: 44, scope: !3993)
!4049 = !DILocation(line: 432, column: 13, scope: !3994)
!4050 = !DILocation(line: 435, column: 38, scope: !3992)
!4051 = !DILocation(line: 0, scope: !3992)
!4052 = !DILocation(line: 442, column: 42, scope: !3992)
!4053 = !DILocation(line: 442, column: 3, scope: !3992)
!4054 = !DILocation(line: 445, column: 3, scope: !3992)
!4055 = !DILocation(line: 447, column: 20, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !3992, file: !3353, line: 447, column: 7)
!4057 = !DILocation(line: 447, column: 18, scope: !4056)
!4058 = !DILocation(line: 447, column: 7, scope: !3992)
!4059 = !DILocation(line: 448, column: 27, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4056, file: !3353, line: 447, column: 39)
!4061 = !DILocation(line: 448, column: 4, scope: !4060)
!4062 = !DILocation(line: 449, column: 4, scope: !4060)
!4063 = !DILocation(line: 450, column: 3, scope: !4060)
!4064 = !DILocation(line: 452, column: 3, scope: !3992)
!4065 = !DILocation(line: 453, column: 3, scope: !3992)
!4066 = !DILocation(line: 474, column: 15, scope: !3978)
!4067 = !DILocation(line: 476, column: 11, scope: !4000)
!4068 = !DILocation(line: 476, column: 6, scope: !3978)
!4069 = !DILocation(line: 477, column: 42, scope: !3999)
!4070 = !DILocation(line: 477, column: 22, scope: !3999)
!4071 = !DILocation(line: 477, column: 60, scope: !3999)
!4072 = !DILocation(line: 0, scope: !3999)
!4073 = !DILocation(line: 479, column: 21, scope: !3999)
!4074 = !DILocation(line: 479, column: 3, scope: !3999)
!4075 = !DILocation(line: 480, column: 3, scope: !3999)
!4076 = !DILocation(line: 481, column: 2, scope: !3999)
!4077 = !DILocation(line: 483, column: 1, scope: !3978)
!4078 = distinct !DISubprogram(name: "sys_heap_init", scope: !3353, file: !3353, line: 485, type: !4079, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !4081)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{null, !3356, !102, !120}
!4081 = !{!4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091}
!4082 = !DILocalVariable(name: "heap", arg: 1, scope: !4078, file: !3353, line: 485, type: !3356)
!4083 = !DILocalVariable(name: "mem", arg: 2, scope: !4078, file: !3353, line: 485, type: !102)
!4084 = !DILocalVariable(name: "bytes", arg: 3, scope: !4078, file: !3353, line: 485, type: !120)
!4085 = !DILocalVariable(name: "addr", scope: !4078, file: !3353, line: 502, type: !22)
!4086 = !DILocalVariable(name: "end", scope: !4078, file: !3353, line: 503, type: !22)
!4087 = !DILocalVariable(name: "heap_sz", scope: !4078, file: !3353, line: 504, type: !3416)
!4088 = !DILocalVariable(name: "h", scope: !4078, file: !3353, line: 509, type: !2307)
!4089 = !DILocalVariable(name: "nb_buckets", scope: !4078, file: !3353, line: 520, type: !103)
!4090 = !DILocalVariable(name: "chunk0_size", scope: !4078, file: !3353, line: 521, type: !3416)
!4091 = !DILocalVariable(name: "i", scope: !4092, file: !3353, line: 526, type: !103)
!4092 = distinct !DILexicalBlock(scope: !4078, file: !3353, line: 526, column: 2)
!4093 = !DILocation(line: 0, scope: !4078)
!4094 = !DILocation(line: 499, column: 8, scope: !4078)
!4095 = !DILocation(line: 502, column: 19, scope: !4078)
!4096 = !DILocation(line: 503, column: 18, scope: !4078)
!4097 = !DILocation(line: 504, column: 27, scope: !4078)
!4098 = !DILocation(line: 504, column: 35, scope: !4078)
!4099 = !DILocation(line: 509, column: 21, scope: !4078)
!4100 = !DILocation(line: 510, column: 8, scope: !4078)
!4101 = !DILocation(line: 510, column: 13, scope: !4078)
!4102 = !DILocation(line: 511, column: 5, scope: !4078)
!4103 = !DILocation(line: 511, column: 15, scope: !4078)
!4104 = !DILocation(line: 512, column: 5, scope: !4078)
!4105 = !DILocation(line: 512, column: 19, scope: !4078)
!4106 = !DILocation(line: 515, column: 5, scope: !4078)
!4107 = !DILocation(line: 515, column: 16, scope: !4078)
!4108 = !DILocation(line: 516, column: 5, scope: !4078)
!4109 = !DILocation(line: 516, column: 21, scope: !4078)
!4110 = !DILocation(line: 517, column: 5, scope: !4078)
!4111 = !DILocation(line: 517, column: 25, scope: !4078)
!4112 = !DILocation(line: 520, column: 19, scope: !4078)
!4113 = !DILocation(line: 522, column: 21, scope: !4078)
!4114 = !DILocation(line: 521, column: 56, scope: !4078)
!4115 = !DILocation(line: 521, column: 26, scope: !4078)
!4116 = !DILocation(line: 0, scope: !4092)
!4117 = !DILocation(line: 526, column: 20, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4092, file: !3353, line: 526, column: 2)
!4119 = !DILocation(line: 526, column: 2, scope: !4092)
!4120 = !DILocation(line: 531, column: 2, scope: !4078)
!4121 = !DILocation(line: 532, column: 2, scope: !4078)
!4122 = !DILocation(line: 533, column: 2, scope: !4078)
!4123 = !DILocation(line: 536, column: 41, scope: !4078)
!4124 = !DILocation(line: 536, column: 2, scope: !4078)
!4125 = !DILocation(line: 537, column: 2, scope: !4078)
!4126 = !DILocation(line: 540, column: 2, scope: !4078)
!4127 = !DILocation(line: 541, column: 2, scope: !4078)
!4128 = !DILocation(line: 542, column: 2, scope: !4078)
!4129 = !DILocation(line: 544, column: 2, scope: !4078)
!4130 = !DILocation(line: 545, column: 1, scope: !4078)
!4131 = !DILocation(line: 527, column: 17, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4118, file: !3353, line: 526, column: 39)
!4133 = !DILocation(line: 527, column: 22, scope: !4132)
!4134 = !DILocation(line: 526, column: 35, scope: !4118)
!4135 = distinct !{!4135, !4119, !4136}
!4136 = !DILocation(line: 528, column: 2, scope: !4092)
!4137 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4138, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4160)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!211, !4140}
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 32)
!4141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4142)
!4142 = !{!4143, !4158, !4159}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4141, file: !113, line: 57, baseType: !4144, size: 32)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 32)
!4145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4146)
!4146 = !{!4147, !4148, !4149, !4150, !4151, !4152, !4153}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4145, file: !142, line: 69, baseType: !2311, size: 64)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4145, file: !142, line: 70, baseType: !2312, size: 32, offset: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4145, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4145, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4145, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4145, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4145, file: !142, line: 77, baseType: !4154, offset: 224)
!4154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4155, elements: !2323)
!4155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4156)
!4156 = !{!4157}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4155, file: !142, line: 65, baseType: !2312, size: 32)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4141, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4141, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4160 = !{!4161, !4162, !4163, !4164, !4165, !4166, !4172, !4174, !4177, !4178, !4179, !4180, !4181, !4183, !4186}
!4161 = !DILocalVariable(name: "heap", arg: 1, scope: !4137, file: !134, line: 88, type: !4140)
!4162 = !DILocalVariable(name: "h", scope: !4137, file: !134, line: 90, type: !4144)
!4163 = !DILocalVariable(name: "c", scope: !4137, file: !134, line: 91, type: !2312)
!4164 = !DILocalVariable(name: "allocated_bytes", scope: !4137, file: !134, line: 112, type: !120)
!4165 = !DILocalVariable(name: "free_bytes", scope: !4137, file: !134, line: 112, type: !120)
!4166 = !DILocalVariable(name: "stat", scope: !4137, file: !134, line: 113, type: !4167)
!4167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !3014, line: 24, size: 96, elements: !4168)
!4168 = !{!4169, !4170, !4171}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4167, file: !3014, line: 25, baseType: !120, size: 32)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4167, file: !3014, line: 26, baseType: !120, size: 32, offset: 32)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4167, file: !3014, line: 27, baseType: !120, size: 32, offset: 64)
!4172 = !DILocalVariable(name: "b", scope: !4173, file: !134, line: 127, type: !103)
!4173 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 127, column: 2)
!4174 = !DILocalVariable(name: "c0", scope: !4175, file: !134, line: 128, type: !2312)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !134, line: 127, column: 57)
!4176 = distinct !DILexicalBlock(scope: !4173, file: !134, line: 127, column: 2)
!4177 = !DILocalVariable(name: "n", scope: !4175, file: !134, line: 129, type: !137)
!4178 = !DILocalVariable(name: "empty", scope: !4175, file: !134, line: 141, type: !211)
!4179 = !DILocalVariable(name: "zero", scope: !4175, file: !134, line: 142, type: !211)
!4180 = !DILocalVariable(name: "prev_chunk", scope: !4137, file: !134, line: 159, type: !2312)
!4181 = !DILocalVariable(name: "b", scope: !4182, file: !134, line: 179, type: !103)
!4182 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 179, column: 2)
!4183 = !DILocalVariable(name: "c0", scope: !4184, file: !134, line: 180, type: !2312)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !134, line: 179, column: 57)
!4185 = distinct !DILexicalBlock(scope: !4182, file: !134, line: 179, column: 2)
!4186 = !DILocalVariable(name: "n", scope: !4184, file: !134, line: 181, type: !103)
!4187 = !DILocation(line: 0, scope: !4137)
!4188 = !DILocation(line: 90, column: 27, scope: !4137)
!4189 = !DILocation(line: 96, column: 11, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 96, column: 2)
!4191 = !DILocation(line: 96, column: 32, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4190, file: !134, line: 96, column: 2)
!4193 = !DILocation(line: 96, column: 2, scope: !4190)
!4194 = !DILocation(line: 97, column: 8, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !134, line: 97, column: 7)
!4196 = distinct !DILexicalBlock(scope: !4192, file: !134, line: 96, column: 71)
!4197 = !DILocation(line: 97, column: 7, scope: !4196)
!4198 = !DILocation(line: 96, column: 52, scope: !4192)
!4199 = distinct !{!4199, !4193, !4200}
!4200 = !DILocation(line: 100, column: 2, scope: !4190)
!4201 = !DILocation(line: 0, scope: !4190)
!4202 = !DILocation(line: 101, column: 8, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 101, column: 6)
!4204 = !DILocation(line: 101, column: 6, scope: !4137)
!4205 = !DILocation(line: 112, column: 2, scope: !4137)
!4206 = !DILocation(line: 113, column: 2, scope: !4137)
!4207 = !DILocation(line: 113, column: 26, scope: !4137)
!4208 = !DILocation(line: 115, column: 2, scope: !4137)
!4209 = !DILocation(line: 116, column: 2, scope: !4137)
!4210 = !DILocation(line: 117, column: 12, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 117, column: 6)
!4212 = !DILocation(line: 117, column: 31, scope: !4211)
!4213 = !DILocation(line: 117, column: 28, scope: !4211)
!4214 = !DILocation(line: 117, column: 48, scope: !4211)
!4215 = !DILocation(line: 118, column: 12, scope: !4211)
!4216 = !DILocation(line: 118, column: 26, scope: !4211)
!4217 = !DILocation(line: 118, column: 23, scope: !4211)
!4218 = !DILocation(line: 117, column: 6, scope: !4137)
!4219 = !DILocation(line: 0, scope: !4173)
!4220 = !DILocation(line: 127, column: 40, scope: !4176)
!4221 = !DILocation(line: 127, column: 23, scope: !4176)
!4222 = !DILocation(line: 127, column: 20, scope: !4176)
!4223 = !DILocation(line: 127, column: 2, scope: !4173)
!4224 = !DILocation(line: 128, column: 32, scope: !4175)
!4225 = !DILocation(line: 0, scope: !4175)
!4226 = !DILocation(line: 133, column: 18, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !134, line: 133, column: 3)
!4228 = distinct !DILexicalBlock(scope: !4175, file: !134, line: 133, column: 3)
!4229 = !DILocation(line: 133, column: 23, scope: !4227)
!4230 = !DILocation(line: 141, column: 20, scope: !4175)
!4231 = !DILocation(line: 141, column: 36, scope: !4175)
!4232 = !DILocation(line: 141, column: 34, scope: !4175)
!4233 = !DILocation(line: 141, column: 44, scope: !4175)
!4234 = !DILocation(line: 144, column: 7, scope: !4175)
!4235 = !DILocation(line: 133, column: 29, scope: !4227)
!4236 = !DILocation(line: 133, column: 34, scope: !4227)
!4237 = !DILocation(line: 133, column: 3, scope: !4228)
!4238 = !DILocation(line: 135, column: 9, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !134, line: 135, column: 8)
!4240 = distinct !DILexicalBlock(scope: !4227, file: !134, line: 134, column: 40)
!4241 = !DILocation(line: 135, column: 8, scope: !4240)
!4242 = !DILocation(line: 138, column: 4, scope: !4240)
!4243 = !DILocation(line: 134, column: 9, scope: !4227)
!4244 = !DILocation(line: 134, column: 17, scope: !4227)
!4245 = distinct !{!4245, !4237, !4246}
!4246 = !DILocation(line: 139, column: 3, scope: !4228)
!4247 = !DILocation(line: 142, column: 17, scope: !4175)
!4248 = !DILocation(line: 144, column: 13, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4175, file: !134, line: 144, column: 7)
!4250 = !DILocation(line: 148, column: 13, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4175, file: !134, line: 148, column: 7)
!4252 = !DILocation(line: 148, column: 30, scope: !4251)
!4253 = !DILocation(line: 148, column: 35, scope: !4251)
!4254 = !DILocation(line: 148, column: 7, scope: !4175)
!4255 = !DILocation(line: 127, column: 53, scope: !4176)
!4256 = distinct !{!4256, !4223, !4257}
!4257 = !DILocation(line: 151, column: 2, scope: !4173)
!4258 = !DILocation(line: 160, column: 37, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !134, line: 160, column: 2)
!4260 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 160, column: 2)
!4261 = !DILocation(line: 160, column: 11, scope: !4260)
!4262 = !DILocation(line: 160, column: 32, scope: !4259)
!4263 = !DILocation(line: 160, column: 2, scope: !4260)
!4264 = !DILocation(line: 161, column: 8, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !134, line: 161, column: 7)
!4266 = distinct !DILexicalBlock(scope: !4259, file: !134, line: 160, column: 71)
!4267 = !DILocation(line: 161, column: 25, scope: !4265)
!4268 = !DILocation(line: 164, column: 7, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4266, file: !134, line: 164, column: 7)
!4270 = !DILocation(line: 164, column: 24, scope: !4269)
!4271 = !DILocation(line: 164, column: 7, scope: !4266)
!4272 = !DILocation(line: 169, column: 3, scope: !4266)
!4273 = !DILocation(line: 160, column: 52, scope: !4259)
!4274 = distinct !{!4274, !4263, !4275}
!4275 = !DILocation(line: 170, column: 2, scope: !4260)
!4276 = !DILocation(line: 0, scope: !4260)
!4277 = !DILocation(line: 171, column: 8, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 171, column: 6)
!4279 = !DILocation(line: 171, column: 6, scope: !4137)
!4280 = !DILocation(line: 0, scope: !4182)
!4281 = !DILocation(line: 179, column: 23, scope: !4185)
!4282 = !DILocation(line: 179, column: 20, scope: !4185)
!4283 = !DILocation(line: 179, column: 2, scope: !4182)
!4284 = !DILocation(line: 180, column: 32, scope: !4184)
!4285 = !DILocation(line: 0, scope: !4184)
!4286 = !DILocation(line: 183, column: 10, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4184, file: !134, line: 183, column: 7)
!4288 = !DILocation(line: 183, column: 7, scope: !4184)
!4289 = !DILocation(line: 188, column: 8, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !134, line: 188, column: 8)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !134, line: 187, column: 67)
!4292 = distinct !DILexicalBlock(scope: !4293, file: !134, line: 187, column: 3)
!4293 = distinct !DILexicalBlock(scope: !4184, file: !134, line: 187, column: 3)
!4294 = !DILocation(line: 188, column: 8, scope: !4291)
!4295 = !DILocation(line: 191, column: 4, scope: !4291)
!4296 = !DILocation(line: 187, column: 44, scope: !4292)
!4297 = !DILocation(line: 187, column: 23, scope: !4292)
!4298 = !DILocation(line: 187, column: 3, scope: !4293)
!4299 = distinct !{!4299, !4298, !4300}
!4300 = !DILocation(line: 192, column: 3, scope: !4293)
!4301 = !DILocation(line: 179, column: 40, scope: !4185)
!4302 = !DILocation(line: 179, column: 53, scope: !4185)
!4303 = distinct !{!4303, !4283, !4304}
!4304 = !DILocation(line: 193, column: 2, scope: !4182)
!4305 = !DILocation(line: 198, column: 37, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !134, line: 198, column: 2)
!4307 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 198, column: 2)
!4308 = !DILocation(line: 198, column: 11, scope: !4307)
!4309 = !DILocation(line: 198, column: 32, scope: !4306)
!4310 = !DILocation(line: 198, column: 2, scope: !4307)
!4311 = !DILocation(line: 199, column: 25, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4306, file: !134, line: 198, column: 71)
!4313 = !DILocation(line: 199, column: 24, scope: !4312)
!4314 = !DILocation(line: 199, column: 3, scope: !4312)
!4315 = !DILocation(line: 198, column: 52, scope: !4306)
!4316 = distinct !{!4316, !4310, !4317}
!4317 = !DILocation(line: 200, column: 2, scope: !4307)
!4318 = !DILocation(line: 202, column: 1, scope: !4137)
!4319 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4320, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4322)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!2312, !4144, !2312}
!4322 = !{!4323, !4324}
!4323 = !DILocalVariable(name: "h", arg: 1, scope: !4319, file: !142, line: 204, type: !4144)
!4324 = !DILocalVariable(name: "c", arg: 2, scope: !4319, file: !142, line: 204, type: !2312)
!4325 = !DILocation(line: 0, scope: !4319)
!4326 = !DILocation(line: 206, column: 13, scope: !4319)
!4327 = !DILocation(line: 206, column: 11, scope: !4319)
!4328 = !DILocation(line: 206, column: 2, scope: !4319)
!4329 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4330, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4332)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!211, !4144, !2312}
!4332 = !{!4333, !4334}
!4333 = !DILocalVariable(name: "h", arg: 1, scope: !4329, file: !134, line: 31, type: !4144)
!4334 = !DILocalVariable(name: "c", arg: 2, scope: !4329, file: !134, line: 31, type: !2312)
!4335 = !DILocation(line: 0, scope: !4329)
!4336 = !DILocation(line: 33, column: 2, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !134, line: 33, column: 2)
!4338 = distinct !DILexicalBlock(scope: !4329, file: !134, line: 33, column: 2)
!4339 = !DILocation(line: 33, column: 2, scope: !4338)
!4340 = !DILocation(line: 34, column: 2, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !134, line: 34, column: 2)
!4342 = distinct !DILexicalBlock(scope: !4329, file: !134, line: 34, column: 2)
!4343 = !DILocation(line: 34, column: 2, scope: !4342)
!4344 = !DILocation(line: 35, column: 2, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !134, line: 35, column: 2)
!4346 = distinct !DILexicalBlock(scope: !4329, file: !134, line: 35, column: 2)
!4347 = !DILocation(line: 35, column: 2, scope: !4346)
!4348 = !DILocation(line: 36, column: 2, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !134, line: 36, column: 2)
!4350 = distinct !DILexicalBlock(scope: !4329, file: !134, line: 36, column: 2)
!4351 = !DILocation(line: 36, column: 2, scope: !4350)
!4352 = !DILocation(line: 37, column: 2, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4354, file: !134, line: 37, column: 2)
!4354 = distinct !DILexicalBlock(scope: !4329, file: !134, line: 37, column: 2)
!4355 = !DILocation(line: 37, column: 2, scope: !4354)
!4356 = !DILocation(line: 38, column: 6, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4329, file: !134, line: 38, column: 6)
!4358 = !DILocation(line: 38, column: 6, scope: !4329)
!4359 = !DILocation(line: 41, column: 3, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !134, line: 41, column: 3)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !134, line: 41, column: 3)
!4362 = distinct !DILexicalBlock(scope: !4357, file: !134, line: 40, column: 9)
!4363 = !DILocation(line: 41, column: 3, scope: !4361)
!4364 = !DILocation(line: 42, column: 3, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !134, line: 42, column: 3)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !134, line: 42, column: 3)
!4367 = !DILocation(line: 42, column: 3, scope: !4366)
!4368 = !DILocation(line: 44, column: 4, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !134, line: 44, column: 4)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !134, line: 44, column: 4)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !134, line: 43, column: 32)
!4372 = distinct !DILexicalBlock(scope: !4362, file: !134, line: 43, column: 7)
!4373 = !DILocation(line: 44, column: 4, scope: !4370)
!4374 = !DILocation(line: 45, column: 4, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !134, line: 45, column: 4)
!4376 = distinct !DILexicalBlock(scope: !4371, file: !134, line: 45, column: 4)
!4377 = !DILocation(line: 45, column: 4, scope: !4376)
!4378 = !DILocation(line: 48, column: 2, scope: !4329)
!4379 = !DILocation(line: 49, column: 1, scope: !4329)
!4380 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4381, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4383)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{null, !4144, !2360, !2360}
!4383 = !{!4384, !4385, !4386, !4387}
!4384 = !DILocalVariable(name: "h", arg: 1, scope: !4380, file: !134, line: 71, type: !4144)
!4385 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4380, file: !134, line: 71, type: !2360)
!4386 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4380, file: !134, line: 72, type: !2360)
!4387 = !DILocalVariable(name: "c", scope: !4380, file: !134, line: 74, type: !2312)
!4388 = !DILocation(line: 0, scope: !4380)
!4389 = !DILocation(line: 76, column: 15, scope: !4380)
!4390 = !DILocation(line: 77, column: 14, scope: !4380)
!4391 = !DILocation(line: 79, column: 11, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4380, file: !134, line: 79, column: 2)
!4393 = !DILocation(line: 79, column: 37, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4392, file: !134, line: 79, column: 2)
!4395 = !DILocation(line: 79, column: 32, scope: !4394)
!4396 = !DILocation(line: 79, column: 2, scope: !4392)
!4397 = !DILocation(line: 80, column: 7, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !134, line: 80, column: 7)
!4399 = distinct !DILexicalBlock(scope: !4394, file: !134, line: 79, column: 71)
!4400 = !DILocation(line: 0, scope: !4398)
!4401 = !DILocation(line: 79, column: 52, scope: !4394)
!4402 = distinct !{!4402, !4396, !4403}
!4403 = !DILocation(line: 85, column: 2, scope: !4392)
!4404 = !DILocation(line: 86, column: 1, scope: !4380)
!4405 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4406, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4409)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!103, !4140, !4408}
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 32)
!4409 = !{!4410, !4411}
!4410 = !DILocalVariable(name: "heap", arg: 1, scope: !4405, file: !134, line: 416, type: !4140)
!4411 = !DILocalVariable(name: "stats", arg: 2, scope: !4405, file: !134, line: 417, type: !4408)
!4412 = !DILocation(line: 0, scope: !4405)
!4413 = !DILocation(line: 419, column: 12, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4405, file: !134, line: 419, column: 6)
!4415 = !DILocation(line: 419, column: 21, scope: !4414)
!4416 = !DILocation(line: 423, column: 28, scope: !4405)
!4417 = !DILocation(line: 423, column: 34, scope: !4405)
!4418 = !DILocation(line: 423, column: 9, scope: !4405)
!4419 = !DILocation(line: 423, column: 20, scope: !4405)
!4420 = !DILocation(line: 424, column: 33, scope: !4405)
!4421 = !DILocation(line: 424, column: 39, scope: !4405)
!4422 = !DILocation(line: 424, column: 9, scope: !4405)
!4423 = !DILocation(line: 424, column: 25, scope: !4405)
!4424 = !DILocation(line: 425, column: 37, scope: !4405)
!4425 = !DILocation(line: 425, column: 43, scope: !4405)
!4426 = !DILocation(line: 425, column: 9, scope: !4405)
!4427 = !DILocation(line: 425, column: 29, scope: !4405)
!4428 = !DILocation(line: 427, column: 2, scope: !4405)
!4429 = !DILocation(line: 428, column: 1, scope: !4405)
!4430 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4431, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4433)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!103, !4144, !3416}
!4433 = !{!4434, !4435, !4436}
!4434 = !DILocalVariable(name: "h", arg: 1, scope: !4430, file: !142, line: 250, type: !4144)
!4435 = !DILocalVariable(name: "sz", arg: 2, scope: !4430, file: !142, line: 250, type: !3416)
!4436 = !DILocalVariable(name: "usable_sz", scope: !4430, file: !142, line: 252, type: !32)
!4437 = !DILocation(line: 0, scope: !4430)
!4438 = !DILocation(line: 253, column: 14, scope: !4430)
!4439 = !DILocation(line: 253, column: 12, scope: !4430)
!4440 = !DILocation(line: 253, column: 2, scope: !4430)
!4441 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4442, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4444)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{null, !4144, !2312, !211}
!4444 = !{!4445, !4446, !4447, !4448, !4449}
!4445 = !DILocalVariable(name: "h", arg: 1, scope: !4441, file: !142, line: 147, type: !4144)
!4446 = !DILocalVariable(name: "c", arg: 2, scope: !4441, file: !142, line: 147, type: !2312)
!4447 = !DILocalVariable(name: "used", arg: 3, scope: !4441, file: !142, line: 147, type: !211)
!4448 = !DILocalVariable(name: "buf", scope: !4441, file: !142, line: 149, type: !153)
!4449 = !DILocalVariable(name: "cmem", scope: !4441, file: !142, line: 150, type: !102)
!4450 = !DILocation(line: 0, scope: !4441)
!4451 = !DILocation(line: 149, column: 22, scope: !4441)
!4452 = !DILocation(line: 0, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !142, line: 159, column: 7)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !142, line: 158, column: 9)
!4455 = distinct !DILexicalBlock(scope: !4441, file: !142, line: 152, column: 6)
!4456 = !DILocation(line: 159, column: 7, scope: !4454)
!4457 = !DILocation(line: 165, column: 1, scope: !4441)
!4458 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4320, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4459)
!4459 = !{!4460, !4461}
!4460 = !DILocalVariable(name: "h", arg: 1, scope: !4458, file: !142, line: 182, type: !4144)
!4461 = !DILocalVariable(name: "c", arg: 2, scope: !4458, file: !142, line: 182, type: !2312)
!4462 = !DILocation(line: 0, scope: !4458)
!4463 = !DILocation(line: 184, column: 9, scope: !4458)
!4464 = !DILocation(line: 184, column: 2, scope: !4458)
!4465 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4330, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4466)
!4466 = !{!4467, !4468}
!4467 = !DILocalVariable(name: "h", arg: 1, scope: !4465, file: !142, line: 137, type: !4144)
!4468 = !DILocalVariable(name: "c", arg: 2, scope: !4465, file: !142, line: 137, type: !2312)
!4469 = !DILocation(line: 0, scope: !4465)
!4470 = !DILocation(line: 139, column: 9, scope: !4465)
!4471 = !DILocation(line: 139, column: 42, scope: !4465)
!4472 = !DILocation(line: 139, column: 2, scope: !4465)
!4473 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4320, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4474)
!4474 = !{!4475, !4476}
!4475 = !DILocalVariable(name: "h", arg: 1, scope: !4473, file: !142, line: 199, type: !4144)
!4476 = !DILocalVariable(name: "c", arg: 2, scope: !4473, file: !142, line: 199, type: !2312)
!4477 = !DILocation(line: 0, scope: !4473)
!4478 = !DILocation(line: 201, column: 13, scope: !4473)
!4479 = !DILocation(line: 201, column: 11, scope: !4473)
!4480 = !DILocation(line: 201, column: 2, scope: !4473)
!4481 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4482, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4484)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!2312, !4144, !2312, !141}
!4484 = !{!4485, !4486, !4487, !4488, !4489}
!4485 = !DILocalVariable(name: "h", arg: 1, scope: !4481, file: !142, line: 107, type: !4144)
!4486 = !DILocalVariable(name: "c", arg: 2, scope: !4481, file: !142, line: 107, type: !2312)
!4487 = !DILocalVariable(name: "f", arg: 3, scope: !4481, file: !142, line: 108, type: !141)
!4488 = !DILocalVariable(name: "buf", scope: !4481, file: !142, line: 110, type: !153)
!4489 = !DILocalVariable(name: "cmem", scope: !4481, file: !142, line: 111, type: !102)
!4490 = !DILocation(line: 0, scope: !4481)
!4491 = !DILocation(line: 110, column: 22, scope: !4481)
!4492 = !DILocation(line: 111, column: 15, scope: !4481)
!4493 = !DILocation(line: 116, column: 11, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !142, line: 115, column: 9)
!4495 = distinct !DILexicalBlock(scope: !4481, file: !142, line: 113, column: 6)
!4496 = !DILocation(line: 116, column: 10, scope: !4494)
!4497 = !DILocation(line: 118, column: 1, scope: !4481)
!4498 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4499, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4501)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{!153, !4144}
!4501 = !{!4502}
!4502 = !DILocalVariable(name: "h", arg: 1, scope: !4498, file: !142, line: 101, type: !4144)
!4503 = !DILocation(line: 0, scope: !4498)
!4504 = !DILocation(line: 104, column: 9, scope: !4498)
!4505 = !DILocation(line: 104, column: 2, scope: !4498)
!4506 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4507, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4509)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{!3416, !4144, !2312}
!4509 = !{!4510, !4511}
!4510 = !DILocalVariable(name: "h", arg: 1, scope: !4506, file: !142, line: 142, type: !4144)
!4511 = !DILocalVariable(name: "c", arg: 2, scope: !4506, file: !142, line: 142, type: !2312)
!4512 = !DILocation(line: 0, scope: !4506)
!4513 = !DILocation(line: 144, column: 9, scope: !4506)
!4514 = !DILocation(line: 144, column: 42, scope: !4506)
!4515 = !DILocation(line: 144, column: 2, scope: !4506)
!4516 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4517, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4519)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!120, !4144, !3416}
!4519 = !{!4520, !4521}
!4520 = !DILocalVariable(name: "h", arg: 1, scope: !4516, file: !142, line: 245, type: !4144)
!4521 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4516, file: !142, line: 245, type: !3416)
!4522 = !DILocation(line: 0, scope: !4516)
!4523 = !DILocation(line: 247, column: 20, scope: !4516)
!4524 = !DILocation(line: 247, column: 33, scope: !4516)
!4525 = !DILocation(line: 247, column: 2, scope: !4516)
!4526 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4330, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4527)
!4527 = !{!4528, !4529}
!4528 = !DILocalVariable(name: "h", arg: 1, scope: !4526, file: !134, line: 23, type: !4144)
!4529 = !DILocalVariable(name: "c", arg: 2, scope: !4526, file: !134, line: 23, type: !2312)
!4530 = !DILocation(line: 0, scope: !4526)
!4531 = !DILocation(line: 25, column: 2, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !134, line: 25, column: 2)
!4533 = distinct !DILexicalBlock(scope: !4526, file: !134, line: 25, column: 2)
!4534 = !DILocation(line: 25, column: 2, scope: !4533)
!4535 = !DILocation(line: 26, column: 2, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !134, line: 26, column: 2)
!4537 = distinct !DILexicalBlock(scope: !4526, file: !134, line: 26, column: 2)
!4538 = !DILocation(line: 26, column: 2, scope: !4537)
!4539 = !DILocation(line: 27, column: 2, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !134, line: 27, column: 2)
!4541 = distinct !DILexicalBlock(scope: !4526, file: !134, line: 27, column: 2)
!4542 = !DILocation(line: 29, column: 1, scope: !4526)
!4543 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4320, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4544)
!4544 = !{!4545, !4546}
!4545 = !DILocalVariable(name: "h", arg: 1, scope: !4543, file: !142, line: 177, type: !4144)
!4546 = !DILocalVariable(name: "c", arg: 2, scope: !4543, file: !142, line: 177, type: !2312)
!4547 = !DILocation(line: 0, scope: !4543)
!4548 = !DILocation(line: 179, column: 9, scope: !4543)
!4549 = !DILocation(line: 179, column: 2, scope: !4543)
!4550 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4551, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4566)
!4551 = !DISubroutineType(types: !4552)
!4552 = !{null, !4553, !4556, !102, !120, !137, !102, !120, !103, !4559}
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 32)
!4554 = !DISubroutineType(types: !4555)
!4555 = !{!102, !102, !120}
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 32)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{null, !102, !102}
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 32)
!4560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4561)
!4561 = !{!4562, !4563, !4564, !4565}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4560, file: !113, line: 63, baseType: !137, size: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4560, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4560, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4560, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4566 = !{!4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4593, !4595, !4600, !4601, !4603, !4604}
!4567 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4550, file: !134, line: 300, type: !4553)
!4568 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4550, file: !134, line: 301, type: !4556)
!4569 = !DILocalVariable(name: "arg", arg: 3, scope: !4550, file: !134, line: 302, type: !102)
!4570 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4550, file: !134, line: 302, type: !120)
!4571 = !DILocalVariable(name: "op_count", arg: 5, scope: !4550, file: !134, line: 303, type: !137)
!4572 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4550, file: !134, line: 304, type: !102)
!4573 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4550, file: !134, line: 304, type: !120)
!4574 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4550, file: !134, line: 305, type: !103)
!4575 = !DILocalVariable(name: "result", arg: 9, scope: !4550, file: !134, line: 306, type: !4559)
!4576 = !DILocalVariable(name: "sr", scope: !4550, file: !134, line: 308, type: !4577)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4578)
!4578 = !{!4579, !4580, !4581, !4582, !4583, !4589, !4590, !4591, !4592}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4577, file: !134, line: 205, baseType: !4553, size: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4577, file: !134, line: 206, baseType: !4556, size: 32, offset: 32)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4577, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4577, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4577, file: !134, line: 209, baseType: !4584, size: 32, offset: 128)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 32)
!4585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4586)
!4586 = !{!4587, !4588}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4585, file: !134, line: 217, baseType: !102, size: 32)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4585, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4577, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4577, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4577, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4577, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4593 = !DILocalVariable(name: "i", scope: !4594, file: !134, line: 320, type: !137)
!4594 = distinct !DILexicalBlock(scope: !4550, file: !134, line: 320, column: 2)
!4595 = !DILocalVariable(name: "sz", scope: !4596, file: !134, line: 322, type: !120)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !134, line: 321, column: 31)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !134, line: 321, column: 7)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !134, line: 320, column: 42)
!4599 = distinct !DILexicalBlock(scope: !4594, file: !134, line: 320, column: 2)
!4600 = !DILocalVariable(name: "p", scope: !4596, file: !134, line: 323, type: !102)
!4601 = !DILocalVariable(name: "b", scope: !4602, file: !134, line: 334, type: !103)
!4602 = distinct !DILexicalBlock(scope: !4597, file: !134, line: 333, column: 10)
!4603 = !DILocalVariable(name: "p", scope: !4602, file: !134, line: 335, type: !102)
!4604 = !DILocalVariable(name: "sz", scope: !4602, file: !134, line: 336, type: !120)
!4605 = !DILocation(line: 0, scope: !4550)
!4606 = !DILocation(line: 308, column: 2, scope: !4550)
!4607 = !DILocation(line: 308, column: 27, scope: !4550)
!4608 = !DILocation(line: 308, column: 32, scope: !4550)
!4609 = !DILocation(line: 314, column: 34, scope: !4550)
!4610 = !DILocation(line: 318, column: 12, scope: !4550)
!4611 = !DILocation(line: 0, scope: !4594)
!4612 = !DILocation(line: 320, column: 25, scope: !4599)
!4613 = !DILocation(line: 320, column: 2, scope: !4594)
!4614 = !DILocation(line: 346, column: 1, scope: !4550)
!4615 = !DILocation(line: 321, column: 7, scope: !4597)
!4616 = !DILocation(line: 321, column: 7, scope: !4598)
!4617 = !DILocation(line: 322, column: 16, scope: !4596)
!4618 = !DILocation(line: 0, scope: !4596)
!4619 = !DILocation(line: 323, column: 14, scope: !4596)
!4620 = !DILocation(line: 325, column: 24, scope: !4596)
!4621 = !DILocation(line: 326, column: 10, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4596, file: !134, line: 326, column: 8)
!4623 = !DILocation(line: 326, column: 8, scope: !4596)
!4624 = !DILocation(line: 327, column: 30, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !134, line: 326, column: 19)
!4626 = !DILocation(line: 328, column: 34, scope: !4625)
!4627 = !DILocation(line: 328, column: 38, scope: !4625)
!4628 = !DILocation(line: 329, column: 34, scope: !4625)
!4629 = !DILocation(line: 329, column: 37, scope: !4625)
!4630 = !DILocation(line: 330, column: 22, scope: !4625)
!4631 = !DILocation(line: 331, column: 22, scope: !4625)
!4632 = !DILocation(line: 332, column: 4, scope: !4625)
!4633 = !DILocation(line: 334, column: 12, scope: !4602)
!4634 = !DILocation(line: 0, scope: !4602)
!4635 = !DILocation(line: 335, column: 27, scope: !4602)
!4636 = !DILocation(line: 336, column: 29, scope: !4602)
!4637 = !DILocation(line: 338, column: 23, scope: !4602)
!4638 = !DILocation(line: 339, column: 4, scope: !4602)
!4639 = !DILocation(line: 339, column: 47, scope: !4602)
!4640 = !DILocation(line: 339, column: 19, scope: !4602)
!4641 = !DILocation(line: 340, column: 21, scope: !4602)
!4642 = !DILocation(line: 341, column: 21, scope: !4602)
!4643 = !DILocation(line: 342, column: 4, scope: !4602)
!4644 = !DILocation(line: 344, column: 42, scope: !4598)
!4645 = !DILocation(line: 344, column: 39, scope: !4598)
!4646 = !DILocation(line: 344, column: 36, scope: !4598)
!4647 = !DILocation(line: 320, column: 38, scope: !4599)
!4648 = distinct !{!4648, !4613, !4649}
!4649 = !DILocation(line: 345, column: 2, scope: !4594)
!4650 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4651, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4654)
!4651 = !DISubroutineType(types: !4652)
!4652 = !{!211, !4653}
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 32)
!4654 = !{!4655, !4656, !4660, !4661}
!4655 = !DILocalVariable(name: "sr", arg: 1, scope: !4650, file: !134, line: 234, type: !4653)
!4656 = !DILocalVariable(name: "full_pct", scope: !4657, file: !134, line: 259, type: !137)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !134, line: 241, column: 9)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !134, line: 239, column: 13)
!4659 = distinct !DILexicalBlock(scope: !4650, file: !134, line: 237, column: 6)
!4660 = !DILocalVariable(name: "target", scope: !4657, file: !134, line: 260, type: !137)
!4661 = !DILocalVariable(name: "free_chance", scope: !4657, file: !134, line: 261, type: !137)
!4662 = !DILocation(line: 0, scope: !4650)
!4663 = !DILocation(line: 237, column: 10, scope: !4659)
!4664 = !DILocation(line: 237, column: 25, scope: !4659)
!4665 = !DILocation(line: 237, column: 6, scope: !4650)
!4666 = !DILocation(line: 239, column: 39, scope: !4658)
!4667 = !DILocation(line: 239, column: 32, scope: !4658)
!4668 = !DILocation(line: 239, column: 13, scope: !4659)
!4669 = !DILocation(line: 259, column: 34, scope: !4657)
!4670 = !DILocation(line: 259, column: 28, scope: !4657)
!4671 = !DILocation(line: 259, column: 55, scope: !4657)
!4672 = !DILocation(line: 259, column: 49, scope: !4657)
!4673 = !DILocation(line: 0, scope: !4657)
!4674 = !DILocation(line: 260, column: 25, scope: !4657)
!4675 = !DILocation(line: 263, column: 16, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4657, file: !134, line: 263, column: 7)
!4677 = !DILocation(line: 263, column: 7, scope: !4657)
!4678 = !DILocation(line: 264, column: 42, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4676, file: !134, line: 263, column: 38)
!4680 = !DILocation(line: 264, column: 27, scope: !4679)
!4681 = !DILocation(line: 265, column: 3, scope: !4679)
!4682 = !DILocation(line: 267, column: 10, scope: !4657)
!4683 = !DILocation(line: 267, column: 19, scope: !4657)
!4684 = !DILocation(line: 0, scope: !4659)
!4685 = !DILocation(line: 269, column: 1, scope: !4650)
!4686 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4687, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4689)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!120, !4653}
!4689 = !{!4690, !4691}
!4690 = !DILocalVariable(name: "sr", arg: 1, scope: !4686, file: !134, line: 274, type: !4653)
!4691 = !DILocalVariable(name: "scale", scope: !4686, file: !134, line: 281, type: !103)
!4692 = !DILocation(line: 0, scope: !4686)
!4693 = !DILocation(line: 281, column: 32, scope: !4686)
!4694 = !DILocation(line: 281, column: 18, scope: !4686)
!4695 = !DILocation(line: 283, column: 9, scope: !4686)
!4696 = !DILocation(line: 283, column: 20, scope: !4686)
!4697 = !DILocation(line: 283, column: 18, scope: !4686)
!4698 = !DILocation(line: 283, column: 2, scope: !4686)
!4699 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4687, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4700)
!4700 = !{!4701}
!4701 = !DILocalVariable(name: "sr", arg: 1, scope: !4699, file: !134, line: 287, type: !4653)
!4702 = !DILocation(line: 0, scope: !4699)
!4703 = !DILocation(line: 289, column: 9, scope: !4699)
!4704 = !DILocation(line: 289, column: 24, scope: !4699)
!4705 = !DILocation(line: 289, column: 18, scope: !4699)
!4706 = !DILocation(line: 289, column: 2, scope: !4699)
!4707 = !DILocation(line: 229, column: 10, scope: !133)
!4708 = !DILocation(line: 229, column: 16, scope: !133)
!4709 = !DILocation(line: 229, column: 40, scope: !133)
!4710 = !DILocation(line: 229, column: 8, scope: !133)
!4711 = !DILocation(line: 231, column: 26, scope: !133)
!4712 = !DILocation(line: 231, column: 9, scope: !133)
!4713 = !DILocation(line: 231, column: 2, scope: !133)
!4714 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4715, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4717)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{null, !4144, !211}
!4717 = !{!4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4730, !4731, !4732, !4735}
!4718 = !DILocalVariable(name: "h", arg: 1, scope: !4714, file: !134, line: 351, type: !4144)
!4719 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4714, file: !134, line: 351, type: !211)
!4720 = !DILocalVariable(name: "i", scope: !4714, file: !134, line: 353, type: !103)
!4721 = !DILocalVariable(name: "nb_buckets", scope: !4714, file: !134, line: 353, type: !103)
!4722 = !DILocalVariable(name: "free_bytes", scope: !4714, file: !134, line: 354, type: !120)
!4723 = !DILocalVariable(name: "allocated_bytes", scope: !4714, file: !134, line: 354, type: !120)
!4724 = !DILocalVariable(name: "total", scope: !4714, file: !134, line: 354, type: !120)
!4725 = !DILocalVariable(name: "overhead", scope: !4714, file: !134, line: 354, type: !120)
!4726 = !DILocalVariable(name: "first", scope: !4727, file: !134, line: 363, type: !2312)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !134, line: 362, column: 35)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !134, line: 362, column: 2)
!4729 = distinct !DILexicalBlock(scope: !4714, file: !134, line: 362, column: 2)
!4730 = !DILocalVariable(name: "largest", scope: !4727, file: !134, line: 364, type: !3416)
!4731 = !DILocalVariable(name: "count", scope: !4727, file: !134, line: 365, type: !103)
!4732 = !DILocalVariable(name: "curr", scope: !4733, file: !134, line: 368, type: !2312)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !134, line: 367, column: 14)
!4734 = distinct !DILexicalBlock(scope: !4727, file: !134, line: 367, column: 7)
!4735 = !DILocalVariable(name: "c", scope: !4736, file: !134, line: 384, type: !2312)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !134, line: 384, column: 3)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !134, line: 382, column: 19)
!4738 = distinct !DILexicalBlock(scope: !4714, file: !134, line: 382, column: 6)
!4739 = !DILocation(line: 0, scope: !4714)
!4740 = !DILocation(line: 353, column: 39, scope: !4714)
!4741 = !DILocation(line: 353, column: 22, scope: !4714)
!4742 = !DILocation(line: 353, column: 50, scope: !4714)
!4743 = !DILocation(line: 354, column: 2, scope: !4714)
!4744 = !DILocation(line: 357, column: 9, scope: !4714)
!4745 = !DILocation(line: 356, column: 2, scope: !4714)
!4746 = !DILocation(line: 359, column: 2, scope: !4714)
!4747 = !DILocation(line: 362, column: 16, scope: !4728)
!4748 = !DILocation(line: 362, column: 2, scope: !4729)
!4749 = !DILocation(line: 363, column: 35, scope: !4727)
!4750 = !DILocation(line: 0, scope: !4727)
!4751 = !DILocation(line: 367, column: 7, scope: !4734)
!4752 = !DILocation(line: 367, column: 7, scope: !4727)
!4753 = !DILocation(line: 0, scope: !4733)
!4754 = !DILocation(line: 370, column: 10, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4733, file: !134, line: 369, column: 7)
!4756 = !DILocation(line: 371, column: 15, scope: !4755)
!4757 = !DILocation(line: 372, column: 12, scope: !4755)
!4758 = !DILocation(line: 373, column: 18, scope: !4733)
!4759 = !DILocation(line: 373, column: 4, scope: !4755)
!4760 = distinct !{!4760, !4761, !4762}
!4761 = !DILocation(line: 369, column: 4, scope: !4733)
!4762 = !DILocation(line: 373, column: 26, scope: !4733)
!4763 = !DILocation(line: 377, column: 23, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !134, line: 375, column: 14)
!4765 = distinct !DILexicalBlock(scope: !4727, file: !134, line: 375, column: 7)
!4766 = !DILocation(line: 378, column: 20, scope: !4764)
!4767 = !DILocation(line: 376, column: 4, scope: !4764)
!4768 = !DILocation(line: 379, column: 3, scope: !4764)
!4769 = !DILocation(line: 362, column: 31, scope: !4728)
!4770 = distinct !{!4770, !4748, !4771}
!4771 = !DILocation(line: 380, column: 2, scope: !4729)
!4772 = !DILocation(line: 382, column: 6, scope: !4714)
!4773 = !DILocation(line: 383, column: 3, scope: !4737)
!4774 = !DILocation(line: 0, scope: !4736)
!4775 = !DILocation(line: 384, column: 8, scope: !4736)
!4776 = !DILocation(line: 387, column: 11, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !134, line: 384, column: 50)
!4778 = distinct !DILexicalBlock(scope: !4736, file: !134, line: 384, column: 3)
!4779 = !DILocation(line: 390, column: 11, scope: !4777)
!4780 = !DILocation(line: 391, column: 11, scope: !4777)
!4781 = !DILocation(line: 392, column: 11, scope: !4777)
!4782 = !DILocation(line: 385, column: 4, scope: !4777)
!4783 = !DILocation(line: 393, column: 16, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4777, file: !134, line: 393, column: 8)
!4785 = !DILocation(line: 393, column: 10, scope: !4784)
!4786 = !DILocation(line: 393, column: 8, scope: !4777)
!4787 = !DILocation(line: 384, column: 31, scope: !4778)
!4788 = !DILocation(line: 384, column: 3, scope: !4778)
!4789 = distinct !{!4789, !4790, !4791}
!4790 = !DILocation(line: 384, column: 3, scope: !4736)
!4791 = !DILocation(line: 396, column: 3, scope: !4736)
!4792 = !DILocation(line: 399, column: 2, scope: !4714)
!4793 = !DILocation(line: 401, column: 13, scope: !4714)
!4794 = !DILocation(line: 401, column: 23, scope: !4714)
!4795 = !DILocation(line: 401, column: 36, scope: !4714)
!4796 = !DILocation(line: 402, column: 21, scope: !4714)
!4797 = !DILocation(line: 402, column: 34, scope: !4714)
!4798 = !DILocation(line: 402, column: 32, scope: !4714)
!4799 = !DILocation(line: 405, column: 15, scope: !4714)
!4800 = !DILocation(line: 405, column: 33, scope: !4714)
!4801 = !DILocation(line: 405, column: 26, scope: !4714)
!4802 = !DILocation(line: 405, column: 37, scope: !4714)
!4803 = !DILocation(line: 405, column: 45, scope: !4714)
!4804 = !DILocation(line: 403, column: 2, scope: !4714)
!4805 = !DILocation(line: 407, column: 1, scope: !4714)
!4806 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4807, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4809)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{null, !4140, !211}
!4809 = !{!4810, !4811}
!4810 = !DILocalVariable(name: "heap", arg: 1, scope: !4806, file: !134, line: 409, type: !4140)
!4811 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4806, file: !134, line: 409, type: !211)
!4812 = !DILocation(line: 0, scope: !4806)
!4813 = !DILocation(line: 411, column: 24, scope: !4806)
!4814 = !DILocation(line: 411, column: 2, scope: !4806)
!4815 = !DILocation(line: 412, column: 1, scope: !4806)
!4816 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4817, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4819)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!103, !4140}
!4819 = !{!4820}
!4820 = !DILocalVariable(name: "heap", arg: 1, scope: !4816, file: !134, line: 430, type: !4140)
!4821 = !DILocation(line: 0, scope: !4816)
!4822 = !DILocation(line: 432, column: 11, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4816, file: !134, line: 432, column: 6)
!4824 = !DILocation(line: 432, column: 6, scope: !4816)
!4825 = !DILocation(line: 436, column: 42, scope: !4816)
!4826 = !DILocation(line: 436, column: 48, scope: !4816)
!4827 = !DILocation(line: 436, column: 14, scope: !4816)
!4828 = !DILocation(line: 436, column: 34, scope: !4816)
!4829 = !DILocation(line: 438, column: 2, scope: !4816)
!4830 = !DILocation(line: 439, column: 1, scope: !4816)
!4831 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2329, file: !2329, line: 1338, type: !4832, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !4840)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!103, !3083, !102, !199, !4834, !137}
!4834 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3049, line: 99, baseType: !4835)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3049, line: 40, baseType: !4836)
!4836 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2329, baseType: !4837)
!4837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4838)
!4838 = !{!4839}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4837, file: !2329, baseType: !102, size: 32)
!4840 = !{!4841, !4842, !4843, !4844, !4845, !4846, !4850, !4851, !4852, !4854, !4859, !4904, !4907, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4919, !4920, !4921, !4925, !4928, !4930, !4933, !4934, !4935, !4940, !4946, !4949, !4953, !4959, !4963, !4966, !4968, !4971}
!4841 = !DILocalVariable(name: "out", arg: 1, scope: !4831, file: !2329, line: 1338, type: !3083)
!4842 = !DILocalVariable(name: "ctx", arg: 2, scope: !4831, file: !2329, line: 1338, type: !102)
!4843 = !DILocalVariable(name: "fp", arg: 3, scope: !4831, file: !2329, line: 1338, type: !199)
!4844 = !DILocalVariable(name: "ap", arg: 4, scope: !4831, file: !2329, line: 1339, type: !4834)
!4845 = !DILocalVariable(name: "flags", arg: 5, scope: !4831, file: !2329, line: 1339, type: !137)
!4846 = !DILocalVariable(name: "buf", scope: !4831, file: !2329, line: 1341, type: !4847)
!4847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4848)
!4848 = !{!4849}
!4849 = !DISubrange(count: 22)
!4850 = !DILocalVariable(name: "count", scope: !4831, file: !2329, line: 1342, type: !120)
!4851 = !DILocalVariable(name: "sint", scope: !4831, file: !2329, line: 1343, type: !2348)
!4852 = !DILocalVariable(name: "tagged_ap", scope: !4831, file: !2329, line: 1345, type: !4853)
!4853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!4854 = !DILocalVariable(name: "rc", scope: !4855, file: !2329, line: 1377, type: !103)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !2329, line: 1377, column: 4)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !2329, line: 1376, column: 19)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1376, column: 7)
!4858 = distinct !DILexicalBlock(scope: !4831, file: !2329, line: 1375, column: 19)
!4859 = !DILocalVariable(name: "state", scope: !4858, file: !2329, line: 1395, type: !4860)
!4860 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4831, file: !2329, line: 1392, size: 192, elements: !4861)
!4861 = !{!4862, !4872}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4860, file: !2329, line: 1393, baseType: !4863, size: 64)
!4863 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2329, line: 166, size: 64, elements: !4864)
!4864 = !{!4865, !4866, !4867, !4869, !4871}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4863, file: !2329, line: 168, baseType: !2348, size: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4863, file: !2329, line: 171, baseType: !2351, size: 64)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4863, file: !2329, line: 174, baseType: !4868, size: 64)
!4868 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4863, file: !2329, line: 177, baseType: !4870, size: 64)
!4870 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4863, file: !2329, line: 180, baseType: !102, size: 32)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4860, file: !2329, line: 1394, baseType: !4873, size: 96, offset: 64)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2329, line: 189, size: 96, elements: !4874)
!4874 = !{!4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4899}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4873, file: !2329, line: 191, baseType: !211, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4873, file: !2329, line: 194, baseType: !211, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4873, file: !2329, line: 197, baseType: !211, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4873, file: !2329, line: 200, baseType: !211, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4873, file: !2329, line: 203, baseType: !211, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4873, file: !2329, line: 206, baseType: !211, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4873, file: !2329, line: 209, baseType: !211, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4873, file: !2329, line: 212, baseType: !211, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4873, file: !2329, line: 219, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4873, file: !2329, line: 222, baseType: !211, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4873, file: !2329, line: 229, baseType: !211, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4873, file: !2329, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4873, file: !2329, line: 238, baseType: !211, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4873, file: !2329, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4873, file: !2329, line: 244, baseType: !211, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4873, file: !2329, line: 247, baseType: !211, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4873, file: !2329, line: 252, baseType: !211, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4873, file: !2329, line: 257, baseType: !211, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4873, file: !2329, line: 260, baseType: !209, size: 8, offset: 24)
!4894 = !DIDerivedType(tag: DW_TAG_member, scope: !4873, file: !2329, line: 262, baseType: !4895, size: 32, offset: 32)
!4895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4873, file: !2329, line: 262, size: 32, elements: !4896)
!4896 = !{!4897, !4898}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4895, file: !2329, line: 267, baseType: !103, size: 32)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4895, file: !2329, line: 289, baseType: !103, size: 32)
!4899 = !DIDerivedType(tag: DW_TAG_member, scope: !4873, file: !2329, line: 292, baseType: !4900, size: 32, offset: 64)
!4900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4873, file: !2329, line: 292, size: 32, elements: !4901)
!4901 = !{!4902, !4903}
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4900, file: !2329, line: 297, baseType: !103, size: 32)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4900, file: !2329, line: 306, baseType: !103, size: 32)
!4904 = !DILocalVariable(name: "conv", scope: !4858, file: !2329, line: 1400, type: !4905)
!4905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4906)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 32)
!4907 = !DILocalVariable(name: "value", scope: !4858, file: !2329, line: 1401, type: !4908)
!4908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4909)
!4909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 32)
!4910 = !DILocalVariable(name: "sp", scope: !4858, file: !2329, line: 1402, type: !199)
!4911 = !DILocalVariable(name: "width", scope: !4858, file: !2329, line: 1403, type: !103)
!4912 = !DILocalVariable(name: "precision", scope: !4858, file: !2329, line: 1404, type: !103)
!4913 = !DILocalVariable(name: "bps", scope: !4858, file: !2329, line: 1405, type: !199)
!4914 = !DILocalVariable(name: "bpe", scope: !4858, file: !2329, line: 1406, type: !199)
!4915 = !DILocalVariable(name: "sign", scope: !4858, file: !2329, line: 1407, type: !109)
!4916 = !DILocalVariable(name: "arg", scope: !4917, file: !2329, line: 1432, type: !103)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !2329, line: 1431, column: 24)
!4918 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1431, column: 7)
!4919 = !DILocalVariable(name: "specifier_cat", scope: !4858, file: !2329, line: 1468, type: !2328)
!4920 = !DILocalVariable(name: "length_mod", scope: !4858, file: !2329, line: 1470, type: !2336)
!4921 = !DILocalVariable(name: "rc", scope: !4922, file: !2329, line: 1575, type: !103)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !2329, line: 1575, column: 4)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !2329, line: 1574, column: 43)
!4924 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1574, column: 7)
!4925 = !DILocalVariable(name: "rc", scope: !4926, file: !2329, line: 1584, type: !103)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !2329, line: 1584, column: 4)
!4927 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1582, column: 28)
!4928 = !DILocalVariable(name: "len", scope: !4929, file: !2329, line: 1589, type: !120)
!4929 = distinct !DILexicalBlock(scope: !4927, file: !2329, line: 1586, column: 13)
!4930 = !DILocalVariable(name: "len", scope: !4931, file: !2329, line: 1641, type: !120)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !2329, line: 1640, column: 24)
!4932 = distinct !DILexicalBlock(scope: !4927, file: !2329, line: 1640, column: 8)
!4933 = !DILocalVariable(name: "nj_len", scope: !4858, file: !2329, line: 1722, type: !120)
!4934 = !DILocalVariable(name: "pad_len", scope: !4858, file: !2329, line: 1723, type: !103)
!4935 = !DILocalVariable(name: "pad", scope: !4936, file: !2329, line: 1751, type: !109)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !2329, line: 1750, column: 26)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !2329, line: 1750, column: 8)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !2329, line: 1747, column: 18)
!4939 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1747, column: 7)
!4940 = !DILocalVariable(name: "rc", scope: !4941, file: !2329, line: 1758, type: !103)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !2329, line: 1758, column: 7)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !2329, line: 1757, column: 21)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !2329, line: 1757, column: 10)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !2329, line: 1756, column: 26)
!4945 = distinct !DILexicalBlock(scope: !4936, file: !2329, line: 1756, column: 9)
!4946 = !DILocalVariable(name: "rc", scope: !4947, file: !2329, line: 1765, type: !103)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !2329, line: 1765, column: 6)
!4948 = distinct !DILexicalBlock(scope: !4936, file: !2329, line: 1764, column: 25)
!4949 = !DILocalVariable(name: "rc", scope: !4950, file: !2329, line: 1774, type: !103)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !2329, line: 1774, column: 4)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !2329, line: 1773, column: 18)
!4952 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1773, column: 7)
!4953 = !DILocalVariable(name: "rc", scope: !4954, file: !2329, line: 1819, type: !103)
!4954 = distinct !DILexicalBlock(scope: !4955, file: !2329, line: 1819, column: 5)
!4955 = distinct !DILexicalBlock(scope: !4956, file: !2329, line: 1818, column: 44)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !2329, line: 1818, column: 8)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !2329, line: 1817, column: 10)
!4958 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1777, column: 7)
!4959 = !DILocalVariable(name: "rc", scope: !4960, file: !2329, line: 1823, type: !103)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !2329, line: 1823, column: 5)
!4961 = distinct !DILexicalBlock(scope: !4962, file: !2329, line: 1822, column: 26)
!4962 = distinct !DILexicalBlock(scope: !4957, file: !2329, line: 1822, column: 8)
!4963 = !DILocalVariable(name: "rc", scope: !4964, file: !2329, line: 1828, type: !103)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !2329, line: 1828, column: 5)
!4965 = distinct !DILexicalBlock(scope: !4957, file: !2329, line: 1827, column: 26)
!4966 = !DILocalVariable(name: "rc", scope: !4967, file: !2329, line: 1831, type: !103)
!4967 = distinct !DILexicalBlock(scope: !4957, file: !2329, line: 1831, column: 4)
!4968 = !DILocalVariable(name: "rc", scope: !4969, file: !2329, line: 1836, type: !103)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !2329, line: 1836, column: 4)
!4970 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1835, column: 21)
!4971 = !DILabel(scope: !4927, name: "prec_int_pad0", file: !2329, line: 1634)
!4972 = !DILocation(line: 0, scope: !4831)
!4973 = !DILocation(line: 1341, column: 2, scope: !4831)
!4974 = !DILocation(line: 1341, column: 7, scope: !4831)
!4975 = !DILocation(line: 1375, column: 2, scope: !4831)
!4976 = !DILocation(line: 1342, column: 9, scope: !4831)
!4977 = !DILocation(line: 1375, column: 9, scope: !4831)
!4978 = !DILocation(line: 1377, column: 4, scope: !4855)
!4979 = !DILocation(line: 0, scope: !4855)
!4980 = !DILocation(line: 1377, column: 4, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4855, file: !2329, line: 1377, column: 4)
!4982 = distinct !{!4982, !4975, !4983}
!4983 = !DILocation(line: 1839, column: 2, scope: !4831)
!4984 = !DILocation(line: 1392, column: 3, scope: !4858)
!4985 = !DILocation(line: 1395, column: 5, scope: !4858)
!4986 = !DILocation(line: 0, scope: !4858)
!4987 = !DILocation(line: 1409, column: 8, scope: !4858)
!4988 = !DILocation(line: 1414, column: 13, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1414, column: 7)
!4990 = !DILocation(line: 1414, column: 7, scope: !4858)
!4991 = !DILocation(line: 1415, column: 12, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4989, file: !2329, line: 1414, column: 25)
!4993 = !DILocation(line: 1417, column: 14, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4992, file: !2329, line: 1417, column: 8)
!4995 = !DILocation(line: 1417, column: 8, scope: !4992)
!4996 = !DILocation(line: 1418, column: 21, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4994, file: !2329, line: 1417, column: 19)
!4998 = !DILocation(line: 1419, column: 13, scope: !4997)
!4999 = !DILocation(line: 1420, column: 4, scope: !4997)
!5000 = !DILocation(line: 1421, column: 20, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4989, file: !2329, line: 1421, column: 14)
!5002 = !DILocation(line: 1421, column: 14, scope: !4989)
!5003 = !DILocation(line: 1431, column: 13, scope: !4918)
!5004 = !DILocation(line: 1431, column: 7, scope: !4858)
!5005 = !DILocation(line: 1432, column: 14, scope: !4917)
!5006 = !DILocation(line: 0, scope: !4917)
!5007 = !DILocation(line: 1434, column: 12, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4917, file: !2329, line: 1434, column: 8)
!5009 = !DILocation(line: 1434, column: 8, scope: !4917)
!5010 = !DILocation(line: 1435, column: 24, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5008, file: !2329, line: 1434, column: 17)
!5012 = !DILocation(line: 1436, column: 4, scope: !5011)
!5013 = !DILocation(line: 1439, column: 20, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4918, file: !2329, line: 1439, column: 14)
!5015 = !DILocation(line: 1439, column: 14, scope: !4918)
!5016 = !DILocation(line: 1469, column: 37, scope: !4858)
!5017 = !DILocation(line: 1448, column: 20, scope: !4858)
!5018 = !DILocation(line: 1449, column: 22, scope: !4858)
!5019 = !DILocation(line: 1471, column: 34, scope: !4858)
!5020 = !DILocation(line: 1478, column: 7, scope: !4858)
!5021 = !DILocation(line: 1479, column: 4, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !2329, line: 1478, column: 40)
!5023 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1478, column: 7)
!5024 = !DILocation(line: 1484, column: 19, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !2329, line: 1479, column: 24)
!5026 = !DILocation(line: 1484, column: 17, scope: !5025)
!5027 = !DILocation(line: 1485, column: 5, scope: !5025)
!5028 = !DILocation(line: 1492, column: 20, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !2329, line: 1491, column: 12)
!5030 = distinct !DILexicalBlock(scope: !5025, file: !2329, line: 1487, column: 9)
!5031 = !DILocation(line: 1492, column: 18, scope: !5029)
!5032 = !DILocation(line: 1494, column: 5, scope: !5025)
!5033 = !DILocation(line: 1497, column: 23, scope: !5025)
!5034 = !DILocation(line: 1496, column: 17, scope: !5025)
!5035 = !DILocation(line: 1498, column: 5, scope: !5025)
!5036 = !DILocation(line: 1501, column: 23, scope: !5025)
!5037 = !DILocation(line: 1500, column: 17, scope: !5025)
!5038 = !DILocation(line: 1502, column: 5, scope: !5025)
!5039 = !DILocation(line: 1513, column: 23, scope: !5025)
!5040 = !DILocation(line: 1513, column: 6, scope: !5025)
!5041 = !DILocation(line: 1512, column: 17, scope: !5025)
!5042 = !DILocation(line: 1514, column: 5, scope: !5025)
!5043 = !DILocation(line: 0, scope: !5025)
!5044 = !DILocation(line: 1516, column: 8, scope: !5022)
!5045 = !DILocation(line: 1517, column: 19, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !2329, line: 1516, column: 33)
!5047 = distinct !DILexicalBlock(scope: !5022, file: !2329, line: 1516, column: 8)
!5048 = !DILocation(line: 1517, column: 17, scope: !5046)
!5049 = !DILocation(line: 1518, column: 4, scope: !5046)
!5050 = !DILocation(line: 1519, column: 19, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !2329, line: 1518, column: 39)
!5052 = distinct !DILexicalBlock(scope: !5047, file: !2329, line: 1518, column: 15)
!5053 = !DILocation(line: 1519, column: 17, scope: !5051)
!5054 = !DILocation(line: 1520, column: 4, scope: !5051)
!5055 = !DILocation(line: 1522, column: 4, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !2329, line: 1521, column: 47)
!5057 = distinct !DILexicalBlock(scope: !5023, file: !2329, line: 1521, column: 14)
!5058 = !DILocation(line: 1527, column: 19, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5056, file: !2329, line: 1522, column: 24)
!5060 = !DILocation(line: 1527, column: 17, scope: !5059)
!5061 = !DILocation(line: 1528, column: 5, scope: !5059)
!5062 = !DILocation(line: 0, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5059, file: !2329, line: 1530, column: 9)
!5064 = !DILocation(line: 1540, column: 23, scope: !5059)
!5065 = !DILocation(line: 1539, column: 17, scope: !5059)
!5066 = !DILocation(line: 1542, column: 5, scope: !5059)
!5067 = !DILocation(line: 1545, column: 23, scope: !5059)
!5068 = !DILocation(line: 1544, column: 17, scope: !5059)
!5069 = !DILocation(line: 1547, column: 5, scope: !5059)
!5070 = !DILocation(line: 1551, column: 23, scope: !5059)
!5071 = !DILocation(line: 1551, column: 6, scope: !5059)
!5072 = !DILocation(line: 1550, column: 17, scope: !5059)
!5073 = !DILocation(line: 1552, column: 5, scope: !5059)
!5074 = !DILocation(line: 0, scope: !5059)
!5075 = !DILocation(line: 1554, column: 8, scope: !5056)
!5076 = !DILocation(line: 1555, column: 19, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !2329, line: 1554, column: 33)
!5078 = distinct !DILexicalBlock(scope: !5056, file: !2329, line: 1554, column: 8)
!5079 = !DILocation(line: 1555, column: 17, scope: !5077)
!5080 = !DILocation(line: 1556, column: 4, scope: !5077)
!5081 = !DILocation(line: 1557, column: 19, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5083, file: !2329, line: 1556, column: 39)
!5083 = distinct !DILexicalBlock(scope: !5078, file: !2329, line: 1556, column: 15)
!5084 = !DILocation(line: 1557, column: 17, scope: !5082)
!5085 = !DILocation(line: 1558, column: 4, scope: !5082)
!5086 = !DILocation(line: 0, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !2329, line: 1560, column: 8)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !2329, line: 1559, column: 45)
!5089 = distinct !DILexicalBlock(scope: !5057, file: !2329, line: 1559, column: 14)
!5090 = !DILocation(line: 1566, column: 17, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5092, file: !2329, line: 1565, column: 46)
!5092 = distinct !DILexicalBlock(scope: !5089, file: !2329, line: 1565, column: 14)
!5093 = !DILocation(line: 1566, column: 15, scope: !5091)
!5094 = !DILocation(line: 1567, column: 3, scope: !5091)
!5095 = !DILocation(line: 1574, column: 21, scope: !4924)
!5096 = !DILocation(line: 1575, column: 4, scope: !4922)
!5097 = !DILocation(line: 0, scope: !4922)
!5098 = !DILocation(line: 1575, column: 4, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !4922, file: !2329, line: 1575, column: 4)
!5100 = !DILocation(line: 1582, column: 17, scope: !4858)
!5101 = !DILocation(line: 1582, column: 3, scope: !4858)
!5102 = !DILocation(line: 1584, column: 4, scope: !4926)
!5103 = !DILocation(line: 0, scope: !4926)
!5104 = !DILocation(line: 1584, column: 4, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !4926, file: !2329, line: 1584, column: 4)
!5106 = !DILocation(line: 1587, column: 31, scope: !4929)
!5107 = !DILocation(line: 1591, column: 18, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !4929, file: !2329, line: 1591, column: 8)
!5109 = !DILocation(line: 1591, column: 8, scope: !4929)
!5110 = !DILocation(line: 1592, column: 11, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5108, file: !2329, line: 1591, column: 24)
!5112 = !DILocation(line: 0, scope: !4929)
!5113 = !DILocation(line: 1593, column: 4, scope: !5111)
!5114 = !DILocation(line: 1594, column: 11, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5108, file: !2329, line: 1593, column: 11)
!5116 = !DILocation(line: 1604, column: 51, scope: !4927)
!5117 = !DILocation(line: 1604, column: 13, scope: !4927)
!5118 = !DILocation(line: 1604, column: 11, scope: !4927)
!5119 = !DILocation(line: 1606, column: 4, scope: !4927)
!5120 = !DILocation(line: 1609, column: 14, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !4927, file: !2329, line: 1609, column: 8)
!5122 = !DILocation(line: 1609, column: 8, scope: !4927)
!5123 = !DILocation(line: 1619, column: 18, scope: !4927)
!5124 = !DILocation(line: 1620, column: 13, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !4927, file: !2329, line: 1620, column: 8)
!5126 = !DILocation(line: 1620, column: 8, scope: !4927)
!5127 = !DILocation(line: 1622, column: 36, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5125, file: !2329, line: 1620, column: 18)
!5129 = !DILocation(line: 1622, column: 17, scope: !5128)
!5130 = !DILocation(line: 1623, column: 4, scope: !5128)
!5131 = !DILocation(line: 1632, column: 29, scope: !4927)
!5132 = !DILocation(line: 1632, column: 10, scope: !4927)
!5133 = !DILocation(line: 1632, column: 4, scope: !4927)
!5134 = !DILocation(line: 1407, column: 8, scope: !4858)
!5135 = !DILocation(line: 0, scope: !4927)
!5136 = !DILocation(line: 1634, column: 3, scope: !4927)
!5137 = !DILocation(line: 1640, column: 18, scope: !4932)
!5138 = !DILocation(line: 1640, column: 8, scope: !4927)
!5139 = !DILocation(line: 1729, column: 13, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1729, column: 7)
!5141 = !DILocation(line: 1641, column: 22, scope: !4931)
!5142 = !DILocation(line: 0, scope: !4931)
!5143 = !DILocation(line: 1646, column: 21, scope: !4931)
!5144 = !DILocation(line: 1649, column: 13, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !4931, file: !2329, line: 1649, column: 9)
!5146 = !DILocation(line: 1649, column: 9, scope: !4931)
!5147 = !DILocation(line: 1650, column: 35, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !2329, line: 1649, column: 34)
!5149 = !DILocation(line: 1650, column: 23, scope: !5148)
!5150 = !DILocation(line: 1651, column: 5, scope: !5148)
!5151 = !DILocation(line: 1660, column: 15, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !4927, file: !2329, line: 1660, column: 8)
!5153 = !DILocation(line: 1660, column: 19, scope: !5152)
!5154 = !DILocation(line: 1660, column: 8, scope: !4927)
!5155 = !DILocation(line: 1661, column: 23, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !2329, line: 1660, column: 28)
!5157 = !DILocation(line: 1661, column: 11, scope: !5156)
!5158 = !DILocation(line: 1665, column: 22, scope: !5156)
!5159 = !DILocation(line: 1666, column: 21, scope: !5156)
!5160 = !DILocation(line: 1668, column: 5, scope: !5156)
!5161 = !DILocation(line: 1677, column: 30, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !2329, line: 1676, column: 49)
!5163 = distinct !DILexicalBlock(scope: !4927, file: !2329, line: 1676, column: 8)
!5164 = !DILocation(line: 1677, column: 5, scope: !5162)
!5165 = !DILocation(line: 1680, column: 4, scope: !4927)
!5166 = !DILocation(line: 0, scope: !5108)
!5167 = !DILocation(line: 1597, column: 14, scope: !4929)
!5168 = !DILocation(line: 1699, column: 11, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1699, column: 7)
!5170 = !DILocation(line: 1699, column: 7, scope: !4858)
!5171 = !DILocation(line: 1725, column: 7, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1725, column: 7)
!5173 = !DILocation(line: 1725, column: 12, scope: !5172)
!5174 = !DILocation(line: 1747, column: 13, scope: !4939)
!5175 = !DILocation(line: 1747, column: 7, scope: !4858)
!5176 = !DILocation(line: 1722, column: 24, scope: !4858)
!5177 = !DILocation(line: 1725, column: 7, scope: !4858)
!5178 = !DILocation(line: 1729, column: 7, scope: !4858)
!5179 = !DILocation(line: 1736, column: 13, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !4858, file: !2329, line: 1736, column: 7)
!5181 = !DILocation(line: 1735, column: 19, scope: !4858)
!5182 = !DILocation(line: 1736, column: 7, scope: !4858)
!5183 = !DILocation(line: 1748, column: 10, scope: !4938)
!5184 = !DILocation(line: 1750, column: 15, scope: !4937)
!5185 = !DILocation(line: 1750, column: 8, scope: !4938)
!5186 = !DILocation(line: 0, scope: !4936)
!5187 = !DILocation(line: 1756, column: 15, scope: !4945)
!5188 = !DILocation(line: 1756, column: 9, scope: !4936)
!5189 = !DILocation(line: 1758, column: 7, scope: !4941)
!5190 = !DILocation(line: 0, scope: !4941)
!5191 = !DILocation(line: 1758, column: 7, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !4941, file: !2329, line: 1758, column: 7)
!5193 = !DILocation(line: 1764, column: 5, scope: !4936)
!5194 = !DILocation(line: 0, scope: !4938)
!5195 = !DILocation(line: 1764, column: 20, scope: !4936)
!5196 = !DILocation(line: 1764, column: 17, scope: !4936)
!5197 = !DILocation(line: 1765, column: 6, scope: !4947)
!5198 = !DILocation(line: 0, scope: !4947)
!5199 = !DILocation(line: 1765, column: 6, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !4947, file: !2329, line: 1765, column: 6)
!5201 = distinct !{!5201, !5193, !5202}
!5202 = !DILocation(line: 1766, column: 5, scope: !4936)
!5203 = !DILocation(line: 1773, column: 12, scope: !4952)
!5204 = !DILocation(line: 1773, column: 7, scope: !4858)
!5205 = !DILocation(line: 1773, column: 7, scope: !4952)
!5206 = !DILocation(line: 1774, column: 4, scope: !4950)
!5207 = !DILocation(line: 0, scope: !4950)
!5208 = !DILocation(line: 1774, column: 4, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !4950, file: !2329, line: 1774, column: 4)
!5210 = !DILocation(line: 1818, column: 8, scope: !4956)
!5211 = !DILocation(line: 1818, column: 27, scope: !4956)
!5212 = !DILocation(line: 1818, column: 25, scope: !4956)
!5213 = !DILocation(line: 1818, column: 8, scope: !4957)
!5214 = !DILocation(line: 1819, column: 5, scope: !4954)
!5215 = !DILocation(line: 0, scope: !4954)
!5216 = !DILocation(line: 1819, column: 5, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !4954, file: !2329, line: 1819, column: 5)
!5218 = !DILocation(line: 1822, column: 14, scope: !4962)
!5219 = !DILocation(line: 1822, column: 8, scope: !4957)
!5220 = !DILocation(line: 1823, column: 5, scope: !4960)
!5221 = !DILocation(line: 0, scope: !4960)
!5222 = !DILocation(line: 1823, column: 5, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !4960, file: !2329, line: 1823, column: 5)
!5224 = !DILocation(line: 1826, column: 20, scope: !4957)
!5225 = !DILocation(line: 1827, column: 4, scope: !4957)
!5226 = !DILocation(line: 0, scope: !4957)
!5227 = !DILocation(line: 1827, column: 21, scope: !4957)
!5228 = !DILocation(line: 1827, column: 18, scope: !4957)
!5229 = !DILocation(line: 1828, column: 5, scope: !4964)
!5230 = !DILocation(line: 0, scope: !4964)
!5231 = !DILocation(line: 1828, column: 5, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !4964, file: !2329, line: 1828, column: 5)
!5233 = distinct !{!5233, !5225, !5234}
!5234 = !DILocation(line: 1829, column: 4, scope: !4957)
!5235 = !DILocation(line: 1831, column: 4, scope: !4967)
!5236 = !DILocation(line: 0, scope: !4967)
!5237 = !DILocation(line: 1831, column: 4, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !4967, file: !2329, line: 1831, column: 4)
!5239 = !DILocation(line: 1835, column: 16, scope: !4858)
!5240 = !DILocation(line: 1835, column: 3, scope: !4858)
!5241 = !DILocation(line: 1836, column: 4, scope: !4969)
!5242 = !DILocation(line: 0, scope: !4969)
!5243 = !DILocation(line: 1836, column: 4, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !4969, file: !2329, line: 1836, column: 4)
!5245 = !DILocation(line: 1837, column: 4, scope: !4970)
!5246 = distinct !{!5246, !5240, !5247}
!5247 = !DILocation(line: 1838, column: 3, scope: !4858)
!5248 = !DILocation(line: 1844, column: 1, scope: !4831)
!5249 = distinct !DISubprogram(name: "extract_conversion", scope: !2329, file: !2329, line: 642, type: !5250, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5252)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{!199, !4906, !199}
!5252 = !{!5253, !5254}
!5253 = !DILocalVariable(name: "conv", arg: 1, scope: !5249, file: !2329, line: 642, type: !4906)
!5254 = !DILocalVariable(name: "sp", arg: 2, scope: !5249, file: !2329, line: 643, type: !199)
!5255 = !DILocation(line: 0, scope: !5249)
!5256 = !DILocation(line: 645, column: 10, scope: !5249)
!5257 = !DILocation(line: 653, column: 2, scope: !5249)
!5258 = !DILocation(line: 654, column: 6, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5249, file: !2329, line: 654, column: 6)
!5260 = !DILocation(line: 654, column: 10, scope: !5259)
!5261 = !DILocation(line: 654, column: 6, scope: !5249)
!5262 = !DILocation(line: 655, column: 24, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5259, file: !2329, line: 654, column: 18)
!5264 = !DILocation(line: 655, column: 19, scope: !5263)
!5265 = !DILocation(line: 656, column: 3, scope: !5263)
!5266 = !DILocation(line: 659, column: 7, scope: !5249)
!5267 = !DILocation(line: 660, column: 7, scope: !5249)
!5268 = !DILocation(line: 661, column: 7, scope: !5249)
!5269 = !DILocation(line: 662, column: 7, scope: !5249)
!5270 = !DILocation(line: 663, column: 7, scope: !5249)
!5271 = !DILocation(line: 665, column: 2, scope: !5249)
!5272 = !DILocation(line: 666, column: 1, scope: !5249)
!5273 = distinct !DISubprogram(name: "outs", scope: !2329, file: !2329, line: 1319, type: !5274, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5276)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{!103, !3083, !102, !199, !199}
!5276 = !{!5277, !5278, !5279, !5280, !5281, !5282}
!5277 = !DILocalVariable(name: "out", arg: 1, scope: !5273, file: !2329, line: 1319, type: !3083)
!5278 = !DILocalVariable(name: "ctx", arg: 2, scope: !5273, file: !2329, line: 1320, type: !102)
!5279 = !DILocalVariable(name: "sp", arg: 3, scope: !5273, file: !2329, line: 1321, type: !199)
!5280 = !DILocalVariable(name: "ep", arg: 4, scope: !5273, file: !2329, line: 1322, type: !199)
!5281 = !DILocalVariable(name: "count", scope: !5273, file: !2329, line: 1324, type: !120)
!5282 = !DILocalVariable(name: "rc", scope: !5283, file: !2329, line: 1327, type: !103)
!5283 = distinct !DILexicalBlock(scope: !5273, file: !2329, line: 1326, column: 45)
!5284 = !DILocation(line: 0, scope: !5273)
!5285 = !DILocation(line: 1326, column: 2, scope: !5273)
!5286 = !DILocation(line: 1324, column: 9, scope: !5273)
!5287 = !DILocation(line: 1326, column: 13, scope: !5273)
!5288 = !DILocation(line: 1326, column: 19, scope: !5273)
!5289 = !DILocation(line: 1327, column: 21, scope: !5283)
!5290 = !DILocation(line: 1326, column: 36, scope: !5273)
!5291 = !DILocation(line: 1326, column: 39, scope: !5273)
!5292 = !DILocation(line: 1327, column: 24, scope: !5283)
!5293 = !DILocation(line: 1327, column: 16, scope: !5283)
!5294 = !DILocation(line: 1327, column: 12, scope: !5283)
!5295 = !DILocation(line: 0, scope: !5283)
!5296 = !DILocation(line: 1329, column: 10, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5283, file: !2329, line: 1329, column: 7)
!5298 = !DILocation(line: 1329, column: 7, scope: !5283)
!5299 = distinct !{!5299, !5285, !5300}
!5300 = !DILocation(line: 1333, column: 2, scope: !5273)
!5301 = !DILocation(line: 1336, column: 1, scope: !5273)
!5302 = distinct !DISubprogram(name: "encode_uint", scope: !2329, file: !2329, line: 788, type: !5303, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5305)
!5303 = !DISubroutineType(types: !5304)
!5304 = !{!1040, !2351, !4906, !1040, !199}
!5305 = !{!5306, !5307, !5308, !5309, !5310, !5311, !5313, !5314}
!5306 = !DILocalVariable(name: "value", arg: 1, scope: !5302, file: !2329, line: 788, type: !2351)
!5307 = !DILocalVariable(name: "conv", arg: 2, scope: !5302, file: !2329, line: 789, type: !4906)
!5308 = !DILocalVariable(name: "bps", arg: 3, scope: !5302, file: !2329, line: 790, type: !1040)
!5309 = !DILocalVariable(name: "bpe", arg: 4, scope: !5302, file: !2329, line: 791, type: !199)
!5310 = !DILocalVariable(name: "upcase", scope: !5302, file: !2329, line: 793, type: !211)
!5311 = !DILocalVariable(name: "radix", scope: !5302, file: !2329, line: 794, type: !5312)
!5312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5313 = !DILocalVariable(name: "bp", scope: !5302, file: !2329, line: 795, type: !1040)
!5314 = !DILocalVariable(name: "lsv", scope: !5315, file: !2329, line: 798, type: !32)
!5315 = distinct !DILexicalBlock(scope: !5302, file: !2329, line: 797, column: 5)
!5316 = !DILocation(line: 0, scope: !5302)
!5317 = !DILocation(line: 793, column: 35, scope: !5302)
!5318 = !DILocation(line: 793, column: 24, scope: !5302)
!5319 = !DILocation(line: 793, column: 16, scope: !5302)
!5320 = !DILocation(line: 794, column: 29, scope: !5302)
!5321 = !DILocation(line: 795, column: 24, scope: !5302)
!5322 = !DILocation(line: 795, column: 17, scope: !5302)
!5323 = !DILocation(line: 797, column: 2, scope: !5302)
!5324 = !DILocation(line: 802, column: 9, scope: !5315)
!5325 = !DILocation(line: 798, column: 22, scope: !5315)
!5326 = !DILocation(line: 0, scope: !5315)
!5327 = !DILocation(line: 800, column: 16, scope: !5315)
!5328 = !DILocation(line: 800, column: 11, scope: !5315)
!5329 = !DILocation(line: 800, column: 4, scope: !5315)
!5330 = !DILocation(line: 800, column: 9, scope: !5315)
!5331 = !DILocation(line: 803, column: 18, scope: !5302)
!5332 = !DILocation(line: 803, column: 24, scope: !5302)
!5333 = !DILocation(line: 803, column: 2, scope: !5315)
!5334 = distinct !{!5334, !5323, !5335}
!5335 = !DILocation(line: 803, column: 37, scope: !5302)
!5336 = !DILocation(line: 808, column: 12, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5302, file: !2329, line: 808, column: 6)
!5338 = !DILocation(line: 808, column: 6, scope: !5302)
!5339 = !DILocation(line: 809, column: 7, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5337, file: !2329, line: 808, column: 23)
!5341 = !DILocation(line: 813, column: 3, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !2329, line: 811, column: 27)
!5343 = distinct !DILexicalBlock(scope: !5344, file: !2329, line: 811, column: 14)
!5344 = distinct !DILexicalBlock(scope: !5340, file: !2329, line: 809, column: 7)
!5345 = !DILocation(line: 0, scope: !5344)
!5346 = !DILocation(line: 818, column: 2, scope: !5302)
!5347 = distinct !DISubprogram(name: "store_count", scope: !2329, file: !2329, line: 1280, type: !5348, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5352)
!5348 = !DISubroutineType(types: !5349)
!5349 = !{null, !5350, !102, !103}
!5350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 32)
!5351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4873)
!5352 = !{!5353, !5354, !5355}
!5353 = !DILocalVariable(name: "conv", arg: 1, scope: !5347, file: !2329, line: 1280, type: !5350)
!5354 = !DILocalVariable(name: "dp", arg: 2, scope: !5347, file: !2329, line: 1281, type: !102)
!5355 = !DILocalVariable(name: "count", arg: 3, scope: !5347, file: !2329, line: 1282, type: !103)
!5356 = !DILocation(line: 0, scope: !5347)
!5357 = !DILocation(line: 1284, column: 38, scope: !5347)
!5358 = !DILocation(line: 1284, column: 2, scope: !5347)
!5359 = !DILocation(line: 1286, column: 4, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5347, file: !2329, line: 1284, column: 50)
!5361 = !DILocation(line: 1286, column: 14, scope: !5360)
!5362 = !DILocation(line: 1287, column: 3, scope: !5360)
!5363 = !DILocation(line: 1289, column: 24, scope: !5360)
!5364 = !DILocation(line: 1289, column: 22, scope: !5360)
!5365 = !DILocation(line: 1290, column: 3, scope: !5360)
!5366 = !DILocation(line: 1292, column: 18, scope: !5360)
!5367 = !DILocation(line: 1292, column: 4, scope: !5360)
!5368 = !DILocation(line: 1292, column: 16, scope: !5360)
!5369 = !DILocation(line: 1293, column: 3, scope: !5360)
!5370 = !DILocation(line: 1295, column: 4, scope: !5360)
!5371 = !DILocation(line: 1295, column: 15, scope: !5360)
!5372 = !DILocation(line: 1296, column: 3, scope: !5360)
!5373 = !DILocation(line: 1298, column: 22, scope: !5360)
!5374 = !DILocation(line: 1298, column: 4, scope: !5360)
!5375 = !DILocation(line: 1298, column: 20, scope: !5360)
!5376 = !DILocation(line: 1299, column: 3, scope: !5360)
!5377 = !DILocation(line: 1301, column: 21, scope: !5360)
!5378 = !DILocation(line: 1301, column: 4, scope: !5360)
!5379 = !DILocation(line: 1301, column: 19, scope: !5360)
!5380 = !DILocation(line: 1302, column: 3, scope: !5360)
!5381 = !DILocation(line: 1304, column: 4, scope: !5360)
!5382 = !DILocation(line: 1304, column: 17, scope: !5360)
!5383 = !DILocation(line: 1305, column: 3, scope: !5360)
!5384 = !DILocation(line: 1307, column: 4, scope: !5360)
!5385 = !DILocation(line: 1307, column: 20, scope: !5360)
!5386 = !DILocation(line: 1308, column: 3, scope: !5360)
!5387 = !DILocation(line: 1316, column: 1, scope: !5347)
!5388 = distinct !DISubprogram(name: "isupper", scope: !5389, file: !5389, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5390)
!5389 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5390 = !{!5391}
!5391 = !DILocalVariable(name: "a", arg: 1, scope: !5388, file: !5389, line: 16, type: !103)
!5392 = !DILocation(line: 0, scope: !5388)
!5393 = !DILocation(line: 18, column: 29, scope: !5388)
!5394 = !DILocation(line: 18, column: 45, scope: !5388)
!5395 = !DILocation(line: 18, column: 2, scope: !5388)
!5396 = distinct !DISubprogram(name: "conversion_radix", scope: !2329, file: !2329, line: 761, type: !5397, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5399)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!120, !109}
!5399 = !{!5400}
!5400 = !DILocalVariable(name: "specifier", arg: 1, scope: !5396, file: !2329, line: 761, type: !109)
!5401 = !DILocation(line: 0, scope: !5396)
!5402 = !DILocation(line: 763, column: 2, scope: !5396)
!5403 = !DILocation(line: 770, column: 3, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5396, file: !2329, line: 763, column: 21)
!5405 = !DILocation(line: 774, column: 3, scope: !5404)
!5406 = !DILocation(line: 0, scope: !5404)
!5407 = !DILocation(line: 776, column: 1, scope: !5396)
!5408 = distinct !DISubprogram(name: "extract_flags", scope: !2329, file: !2329, line: 339, type: !5250, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5409)
!5409 = !{!5410, !5411, !5412}
!5410 = !DILocalVariable(name: "conv", arg: 1, scope: !5408, file: !2329, line: 339, type: !4906)
!5411 = !DILocalVariable(name: "sp", arg: 2, scope: !5408, file: !2329, line: 340, type: !199)
!5412 = !DILocalVariable(name: "loop", scope: !5408, file: !2329, line: 342, type: !211)
!5413 = !DILocation(line: 0, scope: !5408)
!5414 = !DILocation(line: 344, column: 2, scope: !5408)
!5415 = !DILocation(line: 345, column: 11, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5408, file: !2329, line: 344, column: 5)
!5417 = !DILocation(line: 345, column: 3, scope: !5416)
!5418 = !DILocation(line: 351, column: 4, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5416, file: !2329, line: 345, column: 16)
!5420 = !DILocation(line: 354, column: 4, scope: !5419)
!5421 = !DILocation(line: 357, column: 4, scope: !5419)
!5422 = !DILocation(line: 360, column: 4, scope: !5419)
!5423 = !DILocation(line: 0, scope: !5419)
!5424 = !DILocation(line: 370, column: 12, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5408, file: !2329, line: 370, column: 6)
!5426 = !DILocation(line: 370, column: 22, scope: !5425)
!5427 = !DILocation(line: 371, column: 19, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5425, file: !2329, line: 370, column: 42)
!5429 = !DILocation(line: 372, column: 2, scope: !5428)
!5430 = !DILocation(line: 376, column: 2, scope: !5408)
!5431 = distinct !DISubprogram(name: "extract_width", scope: !2329, file: !2329, line: 388, type: !5250, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5432)
!5432 = !{!5433, !5434, !5435, !5436}
!5433 = !DILocalVariable(name: "conv", arg: 1, scope: !5431, file: !2329, line: 388, type: !4906)
!5434 = !DILocalVariable(name: "sp", arg: 2, scope: !5431, file: !2329, line: 389, type: !199)
!5435 = !DILocalVariable(name: "wp", scope: !5431, file: !2329, line: 398, type: !199)
!5436 = !DILocalVariable(name: "width", scope: !5431, file: !2329, line: 399, type: !120)
!5437 = !DILocation(line: 0, scope: !5431)
!5438 = !DILocation(line: 391, column: 8, scope: !5431)
!5439 = !DILocation(line: 391, column: 22, scope: !5431)
!5440 = !DILocation(line: 393, column: 6, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5431, file: !2329, line: 393, column: 6)
!5442 = !DILocation(line: 393, column: 10, scope: !5441)
!5443 = !DILocation(line: 393, column: 6, scope: !5431)
!5444 = !DILocation(line: 394, column: 20, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5441, file: !2329, line: 393, column: 18)
!5446 = !DILocation(line: 395, column: 10, scope: !5445)
!5447 = !DILocation(line: 395, column: 3, scope: !5445)
!5448 = !DILocation(line: 399, column: 17, scope: !5431)
!5449 = !DILocation(line: 401, column: 6, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5431, file: !2329, line: 401, column: 6)
!5451 = !DILocation(line: 401, column: 9, scope: !5450)
!5452 = !DILocation(line: 401, column: 6, scope: !5431)
!5453 = !DILocation(line: 402, column: 23, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5450, file: !2329, line: 401, column: 16)
!5455 = !DILocation(line: 403, column: 9, scope: !5454)
!5456 = !DILocation(line: 403, column: 21, scope: !5454)
!5457 = !DILocation(line: 405, column: 11, scope: !5454)
!5458 = !DILocation(line: 404, column: 21, scope: !5454)
!5459 = !DILocation(line: 406, column: 2, scope: !5454)
!5460 = !DILocation(line: 409, column: 1, scope: !5431)
!5461 = distinct !DISubprogram(name: "extract_prec", scope: !2329, file: !2329, line: 420, type: !5250, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5462)
!5462 = !{!5463, !5464, !5465}
!5463 = !DILocalVariable(name: "conv", arg: 1, scope: !5461, file: !2329, line: 420, type: !4906)
!5464 = !DILocalVariable(name: "sp", arg: 2, scope: !5461, file: !2329, line: 421, type: !199)
!5465 = !DILocalVariable(name: "prec", scope: !5461, file: !2329, line: 435, type: !120)
!5466 = !DILocation(line: 0, scope: !5461)
!5467 = !DILocation(line: 423, column: 24, scope: !5461)
!5468 = !DILocation(line: 423, column: 28, scope: !5461)
!5469 = !DILocation(line: 423, column: 8, scope: !5461)
!5470 = !DILocation(line: 423, column: 21, scope: !5461)
!5471 = !DILocation(line: 425, column: 6, scope: !5461)
!5472 = !DILocation(line: 428, column: 2, scope: !5461)
!5473 = !DILocation(line: 430, column: 6, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5461, file: !2329, line: 430, column: 6)
!5475 = !DILocation(line: 430, column: 10, scope: !5474)
!5476 = !DILocation(line: 430, column: 6, scope: !5461)
!5477 = !DILocation(line: 431, column: 19, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !2329, line: 430, column: 18)
!5479 = !DILocation(line: 432, column: 10, scope: !5478)
!5480 = !DILocation(line: 432, column: 3, scope: !5478)
!5481 = !DILocation(line: 435, column: 16, scope: !5461)
!5482 = !DILocation(line: 437, column: 8, scope: !5461)
!5483 = !DILocation(line: 437, column: 19, scope: !5461)
!5484 = !DILocation(line: 439, column: 10, scope: !5461)
!5485 = !DILocation(line: 438, column: 20, scope: !5461)
!5486 = !DILocation(line: 441, column: 9, scope: !5461)
!5487 = !DILocation(line: 442, column: 1, scope: !5461)
!5488 = distinct !DISubprogram(name: "extract_length", scope: !2329, file: !2329, line: 453, type: !5250, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5489)
!5489 = !{!5490, !5491}
!5490 = !DILocalVariable(name: "conv", arg: 1, scope: !5488, file: !2329, line: 453, type: !4906)
!5491 = !DILocalVariable(name: "sp", arg: 2, scope: !5488, file: !2329, line: 454, type: !199)
!5492 = !DILocation(line: 0, scope: !5488)
!5493 = !DILocation(line: 456, column: 10, scope: !5488)
!5494 = !DILocation(line: 456, column: 2, scope: !5488)
!5495 = !DILocation(line: 458, column: 8, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !2329, line: 458, column: 7)
!5497 = distinct !DILexicalBlock(scope: !5488, file: !2329, line: 456, column: 15)
!5498 = !DILocation(line: 458, column: 7, scope: !5496)
!5499 = !DILocation(line: 458, column: 13, scope: !5496)
!5500 = !DILocation(line: 0, scope: !5496)
!5501 = !DILocation(line: 458, column: 7, scope: !5497)
!5502 = !DILocation(line: 459, column: 21, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5496, file: !2329, line: 458, column: 21)
!5504 = !DILocation(line: 460, column: 4, scope: !5503)
!5505 = !DILocation(line: 461, column: 3, scope: !5503)
!5506 = !DILocation(line: 462, column: 21, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5496, file: !2329, line: 461, column: 10)
!5508 = !DILocation(line: 466, column: 8, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5497, file: !2329, line: 466, column: 7)
!5510 = !DILocation(line: 466, column: 7, scope: !5509)
!5511 = !DILocation(line: 466, column: 13, scope: !5509)
!5512 = !DILocation(line: 0, scope: !5509)
!5513 = !DILocation(line: 466, column: 7, scope: !5497)
!5514 = !DILocation(line: 467, column: 21, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5509, file: !2329, line: 466, column: 21)
!5516 = !DILocation(line: 468, column: 4, scope: !5515)
!5517 = !DILocation(line: 469, column: 3, scope: !5515)
!5518 = !DILocation(line: 470, column: 21, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5509, file: !2329, line: 469, column: 10)
!5520 = !DILocation(line: 474, column: 9, scope: !5497)
!5521 = !DILocation(line: 474, column: 20, scope: !5497)
!5522 = !DILocation(line: 475, column: 3, scope: !5497)
!5523 = !DILocation(line: 476, column: 3, scope: !5497)
!5524 = !DILocation(line: 478, column: 9, scope: !5497)
!5525 = !DILocation(line: 478, column: 20, scope: !5497)
!5526 = !DILocation(line: 479, column: 3, scope: !5497)
!5527 = !DILocation(line: 480, column: 3, scope: !5497)
!5528 = !DILocation(line: 482, column: 9, scope: !5497)
!5529 = !DILocation(line: 482, column: 20, scope: !5497)
!5530 = !DILocation(line: 483, column: 3, scope: !5497)
!5531 = !DILocation(line: 484, column: 3, scope: !5497)
!5532 = !DILocation(line: 486, column: 9, scope: !5497)
!5533 = !DILocation(line: 486, column: 20, scope: !5497)
!5534 = !DILocation(line: 487, column: 3, scope: !5497)
!5535 = !DILocation(line: 492, column: 21, scope: !5497)
!5536 = !DILocation(line: 493, column: 3, scope: !5497)
!5537 = !DILocation(line: 495, column: 9, scope: !5497)
!5538 = !DILocation(line: 495, column: 20, scope: !5497)
!5539 = !DILocation(line: 496, column: 3, scope: !5497)
!5540 = !DILocation(line: 498, column: 2, scope: !5488)
!5541 = distinct !DISubprogram(name: "extract_specifier", scope: !2329, file: !2329, line: 513, type: !5250, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5542)
!5542 = !{!5543, !5544, !5545, !5546}
!5543 = !DILocalVariable(name: "conv", arg: 1, scope: !5541, file: !2329, line: 513, type: !4906)
!5544 = !DILocalVariable(name: "sp", arg: 2, scope: !5541, file: !2329, line: 514, type: !199)
!5545 = !DILocalVariable(name: "unsupported", scope: !5541, file: !2329, line: 516, type: !211)
!5546 = !DILabel(scope: !5547, name: "int_conv", file: !2329, line: 526)
!5547 = distinct !DILexicalBlock(scope: !5541, file: !2329, line: 520, column: 27)
!5548 = !DILocation(line: 0, scope: !5541)
!5549 = !DILocation(line: 518, column: 20, scope: !5541)
!5550 = !DILocation(line: 518, column: 8, scope: !5541)
!5551 = !DILocation(line: 518, column: 18, scope: !5541)
!5552 = !DILocation(line: 520, column: 2, scope: !5541)
!5553 = !DILocation(line: 525, column: 3, scope: !5547)
!5554 = !DILocation(line: 0, scope: !5547)
!5555 = !DILocation(line: 526, column: 1, scope: !5547)
!5556 = !DILocation(line: 528, column: 24, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5547, file: !2329, line: 528, column: 7)
!5558 = !DILocation(line: 528, column: 7, scope: !5547)
!5559 = !DILocation(line: 535, column: 23, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5547, file: !2329, line: 535, column: 7)
!5561 = !DILocation(line: 535, column: 7, scope: !5547)
!5562 = !DILocation(line: 536, column: 36, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5560, file: !2329, line: 535, column: 31)
!5564 = !DILocation(line: 537, column: 3, scope: !5563)
!5565 = !DILocation(line: 570, column: 9, scope: !5547)
!5566 = !DILocation(line: 570, column: 23, scope: !5547)
!5567 = !DILocation(line: 575, column: 4, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !2329, line: 573, column: 48)
!5569 = distinct !DILexicalBlock(scope: !5547, file: !2329, line: 573, column: 7)
!5570 = !DILocation(line: 603, column: 9, scope: !5547)
!5571 = !DILocation(line: 603, column: 23, scope: !5547)
!5572 = !DILocation(line: 605, column: 24, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5547, file: !2329, line: 605, column: 7)
!5574 = !DILocation(line: 605, column: 7, scope: !5547)
!5575 = !DILocation(line: 612, column: 9, scope: !5547)
!5576 = !DILocation(line: 612, column: 23, scope: !5547)
!5577 = !DILocation(line: 619, column: 24, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5547, file: !2329, line: 619, column: 7)
!5579 = !DILocation(line: 619, column: 7, scope: !5547)
!5580 = !DILocation(line: 625, column: 9, scope: !5547)
!5581 = !DILocation(line: 625, column: 17, scope: !5547)
!5582 = !DILocation(line: 626, column: 3, scope: !5547)
!5583 = !DILocation(line: 629, column: 20, scope: !5541)
!5584 = !DILocation(line: 629, column: 8, scope: !5541)
!5585 = !DILocation(line: 518, column: 23, scope: !5541)
!5586 = !DILocation(line: 631, column: 2, scope: !5541)
!5587 = distinct !DISubprogram(name: "extract_decimal", scope: !2329, file: !2329, line: 318, type: !5588, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5591)
!5588 = !DISubroutineType(types: !5589)
!5589 = !{!120, !5590}
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!5591 = !{!5592, !5593, !5594}
!5592 = !DILocalVariable(name: "str", arg: 1, scope: !5587, file: !2329, line: 318, type: !5590)
!5593 = !DILocalVariable(name: "sp", scope: !5587, file: !2329, line: 320, type: !199)
!5594 = !DILocalVariable(name: "val", scope: !5587, file: !2329, line: 321, type: !120)
!5595 = !DILocation(line: 0, scope: !5587)
!5596 = !DILocation(line: 320, column: 19, scope: !5587)
!5597 = !DILocation(line: 323, column: 37, scope: !5587)
!5598 = !DILocation(line: 323, column: 17, scope: !5587)
!5599 = !DILocation(line: 323, column: 9, scope: !5587)
!5600 = !DILocation(line: 323, column: 2, scope: !5587)
!5601 = !DILocation(line: 324, column: 13, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5587, file: !2329, line: 323, column: 43)
!5603 = !DILocation(line: 324, column: 24, scope: !5602)
!5604 = !DILocation(line: 324, column: 19, scope: !5602)
!5605 = !DILocation(line: 324, column: 27, scope: !5602)
!5606 = distinct !{!5606, !5600, !5607}
!5607 = !DILocation(line: 325, column: 2, scope: !5587)
!5608 = !DILocation(line: 326, column: 7, scope: !5587)
!5609 = !DILocation(line: 327, column: 2, scope: !5587)
!5610 = distinct !DISubprogram(name: "isdigit", scope: !5389, file: !5389, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !5611)
!5611 = !{!5612}
!5612 = !DILocalVariable(name: "a", arg: 1, scope: !5610, file: !5389, line: 43, type: !103)
!5613 = !DILocation(line: 0, scope: !5610)
!5614 = !DILocation(line: 45, column: 29, scope: !5610)
!5615 = !DILocation(line: 45, column: 45, scope: !5610)
!5616 = !DILocation(line: 45, column: 2, scope: !5610)
!5617 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5618, file: !5618, line: 9, type: !2885, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !162)
!5618 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!5619 = !DILocation(line: 11, column: 1, scope: !5617)
!5620 = !{i64 2147561671, i64 2147561714, i64 2147561754}
!5621 = !DILocation(line: 12, column: 1, scope: !5617)
!5622 = !{i64 2147565898, i64 2147565941, i64 2147565981}
!5623 = !DILocation(line: 13, column: 1, scope: !5617)
!5624 = !{i64 2147566107, i64 2147566150, i64 2147566190}
!5625 = !DILocation(line: 14, column: 1, scope: !5617)
!5626 = !{i64 2147566276, i64 2147566319, i64 2147566359}
!5627 = !DILocation(line: 15, column: 1, scope: !5617)
!5628 = !{i64 2147566439, i64 2147566482, i64 2147566522}
!5629 = !DILocation(line: 16, column: 1, scope: !5617)
!5630 = !{i64 2147566623, i64 2147566666, i64 2147566706}
!5631 = !DILocation(line: 17, column: 1, scope: !5617)
!5632 = !{i64 2147566802, i64 2147566845, i64 2147566885}
!5633 = !DILocation(line: 18, column: 1, scope: !5617)
!5634 = !{i64 2147567044, i64 2147567087, i64 2147567127}
!5635 = !DILocation(line: 19, column: 1, scope: !5617)
!5636 = !{i64 2147567279, i64 2147567322, i64 2147567362}
!5637 = !DILocation(line: 20, column: 1, scope: !5617)
!5638 = !{i64 2147567465, i64 2147567508, i64 2147567548}
!5639 = !DILocation(line: 21, column: 1, scope: !5617)
!5640 = !{i64 2147567681, i64 2147567724, i64 2147567764}
!5641 = !DILocation(line: 22, column: 1, scope: !5617)
!5642 = !{i64 2147567884, i64 2147567927, i64 2147567967}
!5643 = !DILocation(line: 23, column: 1, scope: !5617)
!5644 = !{i64 2147568087, i64 2147568130, i64 2147568170}
!5645 = !DILocation(line: 24, column: 1, scope: !5617)
!5646 = !{i64 2147568262, i64 2147568305, i64 2147568345}
!5647 = !DILocation(line: 25, column: 1, scope: !5617)
!5648 = !{i64 2147568470, i64 2147568513, i64 2147568553}
!5649 = !DILocation(line: 26, column: 1, scope: !5617)
!5650 = !{i64 2147568674, i64 2147568717, i64 2147568757}
!5651 = !DILocation(line: 27, column: 1, scope: !5617)
!5652 = !{i64 2147568867, i64 2147568910, i64 2147568950}
!5653 = !DILocation(line: 28, column: 1, scope: !5617)
!5654 = !{i64 2147569069, i64 2147569112, i64 2147569152}
!5655 = !DILocation(line: 29, column: 1, scope: !5617)
!5656 = !{i64 2147569296, i64 2147569339, i64 2147569379}
!5657 = !DILocation(line: 30, column: 1, scope: !5617)
!5658 = !{i64 2147569498, i64 2147569541, i64 2147569581}
!5659 = !DILocation(line: 31, column: 1, scope: !5617)
!5660 = !{i64 2147569713, i64 2147569756, i64 2147569796}
!5661 = !DILocation(line: 32, column: 1, scope: !5617)
!5662 = !{i64 2147569885, i64 2147569928, i64 2147569968}
!5663 = !DILocation(line: 33, column: 1, scope: !5617)
!5664 = !{i64 2147570087, i64 2147570130, i64 2147570170}
!5665 = !DILocation(line: 34, column: 1, scope: !5617)
!5666 = !{i64 2147570313, i64 2147570356, i64 2147570396}
!5667 = !DILocation(line: 35, column: 1, scope: !5617)
!5668 = !{i64 2147570512, i64 2147570555, i64 2147570595}
!5669 = !DILocation(line: 36, column: 1, scope: !5617)
!5670 = !{i64 2147570687, i64 2147570730, i64 2147570770}
!5671 = !DILocation(line: 37, column: 1, scope: !5617)
!5672 = !{i64 2147570940, i64 2147570983, i64 2147571023}
!5673 = !DILocation(line: 38, column: 1, scope: !5617)
!5674 = !{i64 2147571181, i64 2147571224, i64 2147571264}
!5675 = !DILocation(line: 39, column: 1, scope: !5617)
!5676 = !{i64 2147571416, i64 2147571459, i64 2147571499}
!5677 = !DILocation(line: 40, column: 1, scope: !5617)
!5678 = !{i64 2147571648, i64 2147571691, i64 2147571731}
!5679 = !DILocation(line: 41, column: 1, scope: !5617)
!5680 = !{i64 2147571874, i64 2147571917, i64 2147571957}
!5681 = !DILocation(line: 42, column: 1, scope: !5617)
!5682 = !{i64 2147572100, i64 2147572143, i64 2147572183}
!5683 = !DILocation(line: 43, column: 1, scope: !5617)
!5684 = !{i64 2147572326, i64 2147572369, i64 2147572409}
!5685 = !DILocation(line: 44, column: 1, scope: !5617)
!5686 = !{i64 2147572561, i64 2147572604, i64 2147572644}
!5687 = !DILocation(line: 45, column: 1, scope: !5617)
!5688 = !{i64 2147572805, i64 2147572848, i64 2147572888}
!5689 = !DILocation(line: 46, column: 1, scope: !5617)
!5690 = !{i64 2147573052, i64 2147573095, i64 2147573135}
!5691 = !DILocation(line: 47, column: 1, scope: !5617)
!5692 = !{i64 2147573284, i64 2147573327, i64 2147573367}
!5693 = !DILocation(line: 48, column: 1, scope: !5617)
!5694 = !{i64 2147573528, i64 2147573571, i64 2147573611}
!5695 = !DILocation(line: 49, column: 1, scope: !5617)
!5696 = !{i64 2147573766, i64 2147573809, i64 2147573849}
!5697 = !DILocation(line: 50, column: 1, scope: !5617)
!5698 = !{i64 2147574040, i64 2147574083, i64 2147574123}
!5699 = !DILocation(line: 51, column: 1, scope: !5617)
!5700 = !{i64 2147574278, i64 2147574321, i64 2147574361}
!5701 = !DILocation(line: 52, column: 1, scope: !5617)
!5702 = !{i64 2147574531, i64 2147574574, i64 2147574614}
!5703 = !DILocation(line: 53, column: 1, scope: !5617)
!5704 = !{i64 2147578836, i64 2147578879, i64 2147578919}
!5705 = !DILocation(line: 54, column: 1, scope: !5617)
!5706 = !{i64 2147579071, i64 2147579114, i64 2147579154}
!5707 = !DILocation(line: 55, column: 1, scope: !5617)
!5708 = !{i64 2147579321, i64 2147579364, i64 2147579404}
!5709 = !DILocation(line: 56, column: 1, scope: !5617)
!5710 = !{i64 2147579568, i64 2147579611, i64 2147579651}
!5711 = !DILocation(line: 57, column: 1, scope: !5617)
!5712 = !{i64 2147579803, i64 2147579846, i64 2147579886}
!5713 = !DILocation(line: 58, column: 1, scope: !5617)
!5714 = !{i64 2147580038, i64 2147580081, i64 2147580121}
!5715 = !DILocation(line: 59, column: 1, scope: !5617)
!5716 = !{i64 2147580273, i64 2147580316, i64 2147580356}
!5717 = !DILocation(line: 60, column: 1, scope: !5617)
!5718 = !{i64 2147580508, i64 2147580551, i64 2147580591}
!5719 = !DILocation(line: 61, column: 1, scope: !5617)
!5720 = !{i64 2147580752, i64 2147580795, i64 2147580835}
!5721 = !DILocation(line: 62, column: 1, scope: !5617)
!5722 = !{i64 2147580990, i64 2147581033, i64 2147581073}
!5723 = !DILocation(line: 63, column: 1, scope: !5617)
!5724 = !{i64 2147581231, i64 2147581274, i64 2147581314}
!5725 = !DILocation(line: 64, column: 1, scope: !5617)
!5726 = !{i64 2147581511, i64 2147581554, i64 2147581594}
!5727 = !DILocation(line: 65, column: 1, scope: !5617)
!5728 = !{i64 2147581770, i64 2147581813, i64 2147581853}
!5729 = !DILocation(line: 66, column: 1, scope: !5617)
!5730 = !{i64 2147582008, i64 2147582051, i64 2147582091}
!5731 = !DILocation(line: 67, column: 1, scope: !5617)
!5732 = !{i64 2147582237, i64 2147582280, i64 2147582320}
!5733 = !DILocation(line: 68, column: 1, scope: !5617)
!5734 = !{i64 2147582445, i64 2147582488, i64 2147582528}
!5735 = !DILocation(line: 69, column: 1, scope: !5617)
!5736 = !{i64 2147582656, i64 2147582699, i64 2147582739}
!5737 = !DILocation(line: 70, column: 1, scope: !5617)
!5738 = !{i64 2147582891, i64 2147582934, i64 2147582974}
!5739 = !DILocation(line: 71, column: 1, scope: !5617)
!5740 = !{i64 2147583120, i64 2147583163, i64 2147583203}
!5741 = !DILocation(line: 72, column: 1, scope: !5617)
!5742 = !{i64 2147583358, i64 2147583401, i64 2147583441}
!5743 = !DILocation(line: 73, column: 1, scope: !5617)
!5744 = !{i64 2147583590, i64 2147583633, i64 2147583673}
!5745 = !DILocation(line: 74, column: 1, scope: !5617)
!5746 = !{i64 2147583816, i64 2147583859, i64 2147583899}
!5747 = !DILocation(line: 75, column: 1, scope: !5617)
!5748 = !{i64 2147584033, i64 2147584076, i64 2147584116}
!5749 = !DILocation(line: 76, column: 1, scope: !5617)
!5750 = !{i64 2147584265, i64 2147584308, i64 2147584348}
!5751 = !DILocation(line: 77, column: 1, scope: !5617)
!5752 = !{i64 2147584491, i64 2147584534, i64 2147584574}
!5753 = !DILocation(line: 78, column: 1, scope: !5617)
!5754 = !{i64 2147584705, i64 2147584748, i64 2147584788}
!5755 = !DILocation(line: 79, column: 1, scope: !5617)
!5756 = !{i64 2147584925, i64 2147584968, i64 2147585008}
!5757 = !DILocation(line: 80, column: 1, scope: !5617)
!5758 = !{i64 2147585157, i64 2147585200, i64 2147585240}
!5759 = !DILocation(line: 81, column: 1, scope: !5617)
!5760 = !{i64 2147585365, i64 2147585408, i64 2147585448}
!5761 = !DILocation(line: 82, column: 1, scope: !5617)
!5762 = !{i64 2147585570, i64 2147585613, i64 2147585653}
!5763 = !DILocation(line: 83, column: 1, scope: !5617)
!5764 = !{i64 2147585787, i64 2147585830, i64 2147585870}
!5765 = !DILocation(line: 84, column: 1, scope: !5617)
!5766 = !{i64 2147586001, i64 2147586044, i64 2147586084}
!5767 = !DILocation(line: 85, column: 1, scope: !5617)
!5768 = !{i64 2147586227, i64 2147586270, i64 2147586310}
!5769 = !DILocation(line: 86, column: 1, scope: !5617)
!5770 = !{i64 2147586447, i64 2147586490, i64 2147586530}
!5771 = !DILocation(line: 87, column: 1, scope: !5617)
!5772 = !{i64 2147586652, i64 2147586695, i64 2147586735}
!5773 = !DILocation(line: 88, column: 1, scope: !5617)
!5774 = !{i64 2147590945, i64 2147590988, i64 2147591028}
!5775 = !DILocation(line: 89, column: 1, scope: !5617)
!5776 = !{i64 2147591180, i64 2147591223, i64 2147591263}
!5777 = !DILocation(line: 90, column: 1, scope: !5617)
!5778 = !{i64 2147591430, i64 2147591473, i64 2147591513}
!5779 = !DILocation(line: 91, column: 1, scope: !5617)
!5780 = !{i64 2147591680, i64 2147591723, i64 2147591763}
!5781 = !DILocation(line: 92, column: 1, scope: !5617)
!5782 = !{i64 2147591918, i64 2147591961, i64 2147592001}
!5783 = !DILocation(line: 93, column: 1, scope: !5617)
!5784 = !{i64 2147592129, i64 2147592172, i64 2147592212}
!5785 = !DILocation(line: 94, column: 1, scope: !5617)
!5786 = !{i64 2147592346, i64 2147592389, i64 2147592429}
!5787 = !DILocation(line: 95, column: 1, scope: !5617)
!5788 = !{i64 2147592542, i64 2147592585, i64 2147592625}
!5789 = !DILocation(line: 96, column: 1, scope: !5617)
!5790 = !{i64 2147592744, i64 2147592787, i64 2147592827}
!5791 = !DILocation(line: 97, column: 1, scope: !5617)
!5792 = !{i64 2147592937, i64 2147592980, i64 2147593020}
!5793 = !DILocation(line: 98, column: 1, scope: !5617)
!5794 = !{i64 2147593145, i64 2147593188, i64 2147593228}
!5795 = !DILocation(line: 99, column: 1, scope: !5617)
!5796 = !{i64 2147593341, i64 2147593384, i64 2147593424}
!5797 = !DILocation(line: 100, column: 1, scope: !5617)
!5798 = !{i64 2147593573, i64 2147593616, i64 2147593656}
!5799 = !DILocation(line: 101, column: 1, scope: !5617)
!5800 = !{i64 2147593784, i64 2147593827, i64 2147593867}
!5801 = !DILocation(line: 102, column: 1, scope: !5617)
!5802 = !{i64 2147593983, i64 2147594026, i64 2147594066}
!5803 = !DILocation(line: 103, column: 1, scope: !5617)
!5804 = !{i64 2147594158, i64 2147594201, i64 2147594241}
!5805 = !DILocation(line: 104, column: 1, scope: !5617)
!5806 = !{i64 2147594342, i64 2147594385, i64 2147594425}
!5807 = !DILocation(line: 105, column: 1, scope: !5617)
!5808 = !{i64 2147594544, i64 2147594587, i64 2147594627}
!5809 = !DILocation(line: 106, column: 1, scope: !5617)
!5810 = !{i64 2147594743, i64 2147594786, i64 2147594826}
!5811 = !DILocation(line: 107, column: 1, scope: !5617)
!5812 = !{i64 2147594909, i64 2147594952, i64 2147594992}
!5813 = !DILocation(line: 108, column: 1, scope: !5617)
!5814 = !{i64 2147595093, i64 2147595136, i64 2147595176}
!5815 = !DILocation(line: 109, column: 1, scope: !5617)
!5816 = !{i64 2147595283, i64 2147595326, i64 2147595366}
!5817 = !DILocation(line: 110, column: 1, scope: !5617)
!5818 = !{i64 2147595467, i64 2147595510, i64 2147595550}
!5819 = !DILocation(line: 111, column: 1, scope: !5617)
!5820 = !{i64 2147595681, i64 2147595724, i64 2147595764}
!5821 = !DILocation(line: 112, column: 1, scope: !5617)
!5822 = !{i64 2147595892, i64 2147595935, i64 2147595975}
!5823 = !DILocation(line: 113, column: 1, scope: !5617)
!5824 = !{i64 2147596115, i64 2147596158, i64 2147596198}
!5825 = !DILocation(line: 114, column: 1, scope: !5617)
!5826 = !{i64 2147596299, i64 2147596342, i64 2147596382}
!5827 = !DILocation(line: 115, column: 1, scope: !5617)
!5828 = !{i64 2147596513, i64 2147596556, i64 2147596596}
!5829 = !DILocation(line: 116, column: 1, scope: !5617)
!5830 = !{i64 2147596679, i64 2147596722, i64 2147596762}
!5831 = !DILocation(line: 117, column: 1, scope: !5617)
!5832 = !{i64 2147596860, i64 2147596903, i64 2147596943}
!5833 = !DILocation(line: 118, column: 1, scope: !5617)
!5834 = !{i64 2147597053, i64 2147597096, i64 2147597136}
!5835 = !DILocation(line: 119, column: 1, scope: !5617)
!5836 = !{i64 2147597279, i64 2147597322, i64 2147597362}
!5837 = !DILocation(line: 120, column: 1, scope: !5617)
!5838 = !{i64 2147597493, i64 2147597536, i64 2147597576}
!5839 = !DILocation(line: 121, column: 1, scope: !5617)
!5840 = !{i64 2147597719, i64 2147597762, i64 2147597802}
!5841 = !DILocation(line: 122, column: 1, scope: !5617)
!5842 = !{i64 2147597936, i64 2147597979, i64 2147598019}
!5843 = !DILocation(line: 123, column: 1, scope: !5617)
!5844 = !{i64 2147598213, i64 2147598256, i64 2147598296}
!5845 = !DILocation(line: 124, column: 1, scope: !5617)
!5846 = !{i64 2147598439, i64 2147598482, i64 2147598522}
!5847 = !DILocation(line: 125, column: 1, scope: !5617)
!5848 = !{i64 2147598647, i64 2147598690, i64 2147598730}
!5849 = !DILocation(line: 126, column: 1, scope: !5617)
!5850 = !{i64 2147598843, i64 2147598886, i64 2147598926}
!5851 = !DILocation(line: 127, column: 1, scope: !5617)
!5852 = !{i64 2147599108, i64 2147599151, i64 2147599191}
!5853 = !DILocation(line: 128, column: 1, scope: !5617)
!5854 = !{i64 2147599322, i64 2147599365, i64 2147599405}
!5855 = !DILocation(line: 129, column: 1, scope: !5617)
!5856 = !{i64 2147599497, i64 2147599540, i64 2147599580}
!5857 = !DILocation(line: 130, column: 1, scope: !5617)
!5858 = !{i64 2147599751, i64 2147599794, i64 2147599834}
!5859 = !DILocation(line: 131, column: 1, scope: !5617)
!5860 = !{i64 2147604011, i64 2147604054, i64 2147604094}
!5861 = !DILocation(line: 132, column: 1, scope: !5617)
!5862 = !{i64 2147604253, i64 2147604296, i64 2147604336}
!5863 = !DILocation(line: 133, column: 1, scope: !5617)
!5864 = !{i64 2147604416, i64 2147604459, i64 2147604499}
!5865 = !DILocation(line: 134, column: 1, scope: !5617)
!5866 = !{i64 2147604603, i64 2147604646, i64 2147604686}
!5867 = !DILocation(line: 135, column: 1, scope: !5617)
!5868 = !{i64 2147604796, i64 2147604839, i64 2147604879}
!5869 = !DILocation(line: 136, column: 1, scope: !5617)
!5870 = !{i64 2147604979, i64 2147605022, i64 2147605062}
!5871 = !DILocation(line: 137, column: 1, scope: !5617)
!5872 = !{i64 2147605193, i64 2147605236, i64 2147605276}
!5873 = !DILocation(line: 138, column: 1, scope: !5617)
!5874 = !{i64 2147605404, i64 2147605447, i64 2147605487}
!5875 = !DILocation(line: 139, column: 1, scope: !5617)
!5876 = !{i64 2147605624, i64 2147605667, i64 2147605707}
!5877 = !DILocation(line: 140, column: 1, scope: !5617)
!5878 = !{i64 2147605831, i64 2147605874, i64 2147605914}
!5879 = !DILocation(line: 141, column: 1, scope: !5617)
!5880 = !{i64 2147606104, i64 2147606147, i64 2147606187}
!5881 = !DILocation(line: 142, column: 1, scope: !5617)
!5882 = !{i64 2147606352, i64 2147606395, i64 2147606435}
!5883 = !DILocation(line: 143, column: 1, scope: !5617)
!5884 = !{i64 2147606551, i64 2147606594, i64 2147606634}
!5885 = !DILocation(line: 144, column: 1, scope: !5617)
!5886 = !{i64 2147606786, i64 2147606829, i64 2147606869}
!5887 = !DILocation(line: 145, column: 1, scope: !5617)
!5888 = !{i64 2147607036, i64 2147607079, i64 2147607119}
!5889 = !DILocation(line: 146, column: 1, scope: !5617)
!5890 = !{i64 2147607238, i64 2147607281, i64 2147607321}
!5891 = !DILocation(line: 147, column: 1, scope: !5617)
!5892 = !{i64 2147607461, i64 2147607504, i64 2147607544}
!5893 = !DILocation(line: 148, column: 1, scope: !5617)
!5894 = !{i64 2147607675, i64 2147607718, i64 2147607758}
!5895 = !DILocation(line: 149, column: 1, scope: !5617)
!5896 = !{i64 2147607919, i64 2147607962, i64 2147608002}
!5897 = !DILocation(line: 150, column: 1, scope: !5617)
!5898 = !{i64 2147608148, i64 2147608191, i64 2147608231}
!5899 = !DILocation(line: 151, column: 1, scope: !5617)
!5900 = !{i64 2147608377, i64 2147608420, i64 2147608460}
!5901 = !DILocation(line: 152, column: 1, scope: !5617)
!5902 = !{i64 2147608585, i64 2147608628, i64 2147608668}
!5903 = !DILocation(line: 153, column: 1, scope: !5617)
!5904 = !{i64 2147608823, i64 2147608866, i64 2147608906}
!5905 = !DILocation(line: 154, column: 1, scope: !5617)
!5906 = !{i64 2147609049, i64 2147609092, i64 2147609132}
!5907 = !DILocation(line: 155, column: 1, scope: !5617)
!5908 = !{i64 2147609308, i64 2147609351, i64 2147609391}
!5909 = !DILocation(line: 156, column: 1, scope: !5617)
!5910 = !{i64 2147609528, i64 2147609571, i64 2147609611}
!5911 = !DILocation(line: 157, column: 1, scope: !5617)
!5912 = !{i64 2147609760, i64 2147609803, i64 2147609843}
!5913 = !DILocation(line: 158, column: 1, scope: !5617)
!5914 = !{i64 2147610001, i64 2147610044, i64 2147610084}
!5915 = !DILocation(line: 159, column: 1, scope: !5617)
!5916 = !{i64 2147610242, i64 2147610285, i64 2147610325}
!5917 = !DILocation(line: 160, column: 1, scope: !5617)
!5918 = !{i64 2147610465, i64 2147610508, i64 2147610548}
!5919 = !DILocation(line: 161, column: 1, scope: !5617)
!5920 = !{i64 2147610682, i64 2147610725, i64 2147610765}
!5921 = !DILocation(line: 162, column: 1, scope: !5617)
!5922 = !{i64 2147610923, i64 2147610966, i64 2147611006}
!5923 = !DILocation(line: 163, column: 1, scope: !5617)
!5924 = !{i64 2147611110, i64 2147611153, i64 2147611193}
!5925 = !DILocation(line: 164, column: 1, scope: !5617)
!5926 = !{i64 2147611297, i64 2147611340, i64 2147611380}
!5927 = !DILocation(line: 165, column: 1, scope: !5617)
!5928 = !{i64 2147611460, i64 2147611503, i64 2147611543}
!5929 = !DILocation(line: 166, column: 1, scope: !5617)
!5930 = !{i64 2147611719, i64 2147611762, i64 2147611802}
!5931 = !DILocation(line: 167, column: 1, scope: !5617)
!5932 = !{i64 2147611942, i64 2147611985, i64 2147612025}
!5933 = !DILocation(line: 168, column: 1, scope: !5617)
!5934 = !{i64 2147612171, i64 2147612214, i64 2147612254}
!5935 = !DILocation(line: 169, column: 1, scope: !5617)
!5936 = !{i64 2147612367, i64 2147612410, i64 2147612450}
!5937 = !DILocation(line: 170, column: 1, scope: !5617)
!5938 = !{i64 2147616640, i64 2147616683, i64 2147616723}
!5939 = !DILocation(line: 171, column: 1, scope: !5617)
!5940 = !{i64 2147616861, i64 2147616904, i64 2147616944}
!5941 = !DILocation(line: 172, column: 1, scope: !5617)
!5942 = !{i64 2147617075, i64 2147617118, i64 2147617158}
!5943 = !DILocation(line: 173, column: 1, scope: !5617)
!5944 = !{i64 2147617265, i64 2147617308, i64 2147617348}
!5945 = !DILocation(line: 174, column: 1, scope: !5617)
!5946 = !{i64 2147617464, i64 2147617507, i64 2147617547}
!5947 = !DILocation(line: 175, column: 1, scope: !5617)
!5948 = !{i64 2147617669, i64 2147617712, i64 2147617752}
!5949 = !DILocation(line: 176, column: 1, scope: !5617)
!5950 = !{i64 2147617889, i64 2147617932, i64 2147617972}
!5951 = !DILocation(line: 177, column: 1, scope: !5617)
!5952 = !{i64 2147618090, i64 2147618133, i64 2147618173}
!5953 = !DILocation(line: 178, column: 1, scope: !5617)
!5954 = !{i64 2147618289, i64 2147618332, i64 2147618372}
!5955 = !DILocation(line: 179, column: 1, scope: !5617)
!5956 = !{i64 2147618494, i64 2147618537, i64 2147618577}
!5957 = !DILocation(line: 180, column: 1, scope: !5617)
!5958 = !{i64 2147618663, i64 2147618706, i64 2147618746}
!5959 = !DILocation(line: 181, column: 1, scope: !5617)
!5960 = !{i64 2147618847, i64 2147618890, i64 2147618930}
!5961 = !DILocation(line: 182, column: 1, scope: !5617)
!5962 = !{i64 2147619031, i64 2147619074, i64 2147619114}
!5963 = !DILocation(line: 183, column: 1, scope: !5617)
!5964 = !{i64 2147619218, i64 2147619261, i64 2147619301}
!5965 = !DILocation(line: 184, column: 1, scope: !5617)
!5966 = !{i64 2147619402, i64 2147619445, i64 2147619485}
!5967 = !DILocation(line: 185, column: 1, scope: !5617)
!5968 = !{i64 2147619640, i64 2147619683, i64 2147619723}
!5969 = !DILocation(line: 186, column: 1, scope: !5617)
!5970 = !{i64 2147619870, i64 2147619913, i64 2147619953}
!5971 = !DILocation(line: 187, column: 1, scope: !5617)
!5972 = !{i64 2147620099, i64 2147620142, i64 2147620182}
!5973 = !DILocation(line: 188, column: 1, scope: !5617)
!5974 = !{i64 2147620286, i64 2147620329, i64 2147620369}
!5975 = !DILocation(line: 189, column: 1, scope: !5617)
!5976 = !{i64 2147620482, i64 2147620525, i64 2147620565}
!5977 = !DILocation(line: 190, column: 1, scope: !5617)
!5978 = !{i64 2147620690, i64 2147620733, i64 2147620773}
!5979 = !DILocation(line: 191, column: 1, scope: !5617)
!5980 = !{i64 2147620902, i64 2147620945, i64 2147620985}
!5981 = !DILocation(line: 192, column: 1, scope: !5617)
!5982 = !{i64 2147621101, i64 2147621144, i64 2147621184}
!5983 = !DILocation(line: 193, column: 1, scope: !5617)
!5984 = !{i64 2147621339, i64 2147621382, i64 2147621422}
!5985 = !DILocation(line: 194, column: 1, scope: !5617)
!5986 = !{i64 2147621535, i64 2147621578, i64 2147621618}
!5987 = !DILocation(line: 195, column: 1, scope: !5617)
!5988 = !{i64 2147621737, i64 2147621780, i64 2147621820}
!5989 = !DILocation(line: 196, column: 1, scope: !5617)
!5990 = !{i64 2147621930, i64 2147621973, i64 2147622013}
!5991 = !DILocation(line: 197, column: 1, scope: !5617)
!5992 = !{i64 2147622164, i64 2147622207, i64 2147622247}
!5993 = !DILocation(line: 198, column: 1, scope: !5617)
!5994 = !{i64 2147622327, i64 2147622370, i64 2147622410}
!5995 = !DILocation(line: 199, column: 1, scope: !5617)
!5996 = !{i64 2147622566, i64 2147622609, i64 2147622649}
!5997 = !DILocation(line: 200, column: 1, scope: !5617)
!5998 = !{i64 2147622805, i64 2147622848, i64 2147622888}
!5999 = !DILocation(line: 201, column: 1, scope: !5617)
!6000 = !{i64 2147623041, i64 2147623084, i64 2147623124}
!6001 = !DILocation(line: 202, column: 1, scope: !5617)
!6002 = !{i64 2147623271, i64 2147623314, i64 2147623354}
!6003 = !DILocation(line: 203, column: 1, scope: !5617)
!6004 = !{i64 2147623458, i64 2147623501, i64 2147623541}
!6005 = !DILocation(line: 204, column: 1, scope: !5617)
!6006 = !{i64 2147623657, i64 2147623700, i64 2147623740}
!6007 = !DILocation(line: 205, column: 1, scope: !5617)
!6008 = !{i64 2147623928, i64 2147623971, i64 2147624011}
!6009 = !DILocation(line: 206, column: 1, scope: !5617)
!6010 = !{i64 2147624103, i64 2147624146, i64 2147624186}
!6011 = !DILocation(line: 207, column: 1, scope: !5617)
!6012 = !{i64 2147624337, i64 2147624380, i64 2147624420}
!6013 = !DILocation(line: 208, column: 1, scope: !5617)
!6014 = !{i64 2147624545, i64 2147624588, i64 2147624628}
!6015 = !DILocation(line: 209, column: 1, scope: !5617)
!6016 = !{i64 2147624763, i64 2147624806, i64 2147624846}
!6017 = !DILocation(line: 210, column: 1, scope: !5617)
!6018 = !{i64 2147624953, i64 2147624996, i64 2147625036}
!6019 = !DILocation(line: 211, column: 1, scope: !5617)
!6020 = !{i64 2147625149, i64 2147625192, i64 2147625232}
!6021 = !DILocation(line: 212, column: 1, scope: !5617)
!6022 = !{i64 2147625355, i64 2147625398, i64 2147625438}
!6023 = !DILocation(line: 213, column: 1, scope: !5617)
!6024 = !{i64 2147625560, i64 2147625603, i64 2147625643}
!6025 = !DILocation(line: 214, column: 1, scope: !5617)
!6026 = !{i64 2147629835, i64 2147629878, i64 2147629918}
!6027 = !DILocation(line: 215, column: 1, scope: !5617)
!6028 = !{i64 2147630061, i64 2147630104, i64 2147630144}
!6029 = !DILocation(line: 216, column: 1, scope: !5617)
!6030 = !{i64 2147630293, i64 2147630336, i64 2147630376}
!6031 = !DILocation(line: 217, column: 1, scope: !5617)
!6032 = !{i64 2147630477, i64 2147630520, i64 2147630560}
!6033 = !DILocation(line: 218, column: 1, scope: !5617)
!6034 = !{i64 2147630686, i64 2147630729, i64 2147630769}
!6035 = !DILocation(line: 219, column: 1, scope: !5617)
!6036 = !{i64 2147630870, i64 2147630913, i64 2147630953}
!6037 = !DILocation(line: 220, column: 1, scope: !5617)
!6038 = !{i64 2147631096, i64 2147631139, i64 2147631179}
!6039 = !DILocation(line: 221, column: 1, scope: !5617)
!6040 = !{i64 2147631322, i64 2147631365, i64 2147631405}
!6041 = !DILocation(line: 222, column: 1, scope: !5617)
!6042 = !{i64 2147631548, i64 2147631591, i64 2147631631}
!6043 = !DILocation(line: 223, column: 1, scope: !5617)
!6044 = !{i64 2147631774, i64 2147631817, i64 2147631857}
!6045 = !DILocation(line: 224, column: 1, scope: !5617)
!6046 = !{i64 2147632000, i64 2147632043, i64 2147632083}
!6047 = !DILocation(line: 225, column: 1, scope: !5617)
!6048 = !{i64 2147632232, i64 2147632275, i64 2147632315}
!6049 = !DILocation(line: 226, column: 1, scope: !5617)
!6050 = !{i64 2147632470, i64 2147632513, i64 2147632553}
!6051 = !DILocation(line: 227, column: 1, scope: !5617)
!6052 = !{i64 2147632690, i64 2147632733, i64 2147632773}
!6053 = !DILocation(line: 228, column: 1, scope: !5617)
!6054 = !{i64 2147632934, i64 2147632977, i64 2147633017}
!6055 = !DILocation(line: 229, column: 1, scope: !5617)
!6056 = !{i64 2147633175, i64 2147633218, i64 2147633258}
!6057 = !DILocation(line: 230, column: 1, scope: !5617)
!6058 = !{i64 2147633410, i64 2147633453, i64 2147633493}
!6059 = !DILocation(line: 231, column: 1, scope: !5617)
!6060 = !{i64 2147633642, i64 2147633685, i64 2147633725}
!6061 = !DILocation(line: 232, column: 1, scope: !5617)
!6062 = !{i64 2147633844, i64 2147633887, i64 2147633927}
!6063 = !DILocation(line: 233, column: 1, scope: !5617)
!6064 = !{i64 2147634094, i64 2147634137, i64 2147634177}
!6065 = !DILocation(line: 234, column: 1, scope: !5617)
!6066 = !{i64 2147634332, i64 2147634375, i64 2147634415}
!6067 = !DILocation(line: 235, column: 1, scope: !5617)
!6068 = !{i64 2147634516, i64 2147634559, i64 2147634599}
!6069 = !DILocation(line: 236, column: 1, scope: !5617)
!6070 = !{i64 2147634740, i64 2147634783, i64 2147634823}
!6071 = !DILocation(line: 237, column: 1, scope: !5617)
!6072 = !{i64 2147634978, i64 2147635021, i64 2147635061}
!6073 = !DILocation(line: 238, column: 1, scope: !5617)
!6074 = !{i64 2147635216, i64 2147635259, i64 2147635299}
!6075 = !DILocation(line: 239, column: 1, scope: !5617)
!6076 = !{i64 2147635409, i64 2147635452, i64 2147635492}
!6077 = !DILocation(line: 240, column: 1, scope: !5617)
!6078 = !{i64 2147635662, i64 2147635705, i64 2147635745}
!6079 = !DILocation(line: 241, column: 1, scope: !5617)
!6080 = !{i64 2147635876, i64 2147635919, i64 2147635959}
!6081 = !DILocation(line: 242, column: 1, scope: !5617)
!6082 = !{i64 2147636084, i64 2147636127, i64 2147636167}
!6083 = !DILocation(line: 243, column: 1, scope: !5617)
!6084 = !{i64 2147636274, i64 2147636317, i64 2147636357}
!6085 = !DILocation(line: 244, column: 1, scope: !5617)
!6086 = !{i64 2147636488, i64 2147636531, i64 2147636571}
!6087 = !DILocation(line: 245, column: 1, scope: !5617)
!6088 = !{i64 2147636750, i64 2147636793, i64 2147636833}
!6089 = !DILocation(line: 246, column: 1, scope: !5617)
!6090 = !{i64 2147636961, i64 2147637004, i64 2147637044}
!6091 = !DILocation(line: 247, column: 1, scope: !5617)
!6092 = !{i64 2147637205, i64 2147637248, i64 2147637288}
!6093 = !DILocation(line: 248, column: 1, scope: !5617)
!6094 = !{i64 2147637416, i64 2147637459, i64 2147637499}
!6095 = !DILocation(line: 249, column: 1, scope: !5617)
!6096 = !{i64 2147637645, i64 2147637688, i64 2147637728}
!6097 = !DILocation(line: 250, column: 1, scope: !5617)
!6098 = !{i64 2147637910, i64 2147637953, i64 2147637993}
!6099 = !DILocation(line: 251, column: 1, scope: !5617)
!6100 = !{i64 2147638115, i64 2147638158, i64 2147638198}
!6101 = !DILocation(line: 252, column: 1, scope: !5617)
!6102 = !{i64 2147642372, i64 2147642415, i64 2147642455}
!6103 = !DILocation(line: 253, column: 1, scope: !5617)
!6104 = !{i64 2147642595, i64 2147642638, i64 2147642678}
!6105 = !DILocation(line: 254, column: 1, scope: !5617)
!6106 = !{i64 2147642758, i64 2147642801, i64 2147642841}
!6107 = !DILocation(line: 255, column: 1, scope: !5617)
!6108 = !{i64 2147642963, i64 2147643006, i64 2147643046}
!6109 = !DILocation(line: 256, column: 1, scope: !5617)
!6110 = !{i64 2147643183, i64 2147643226, i64 2147643266}
!6111 = !DILocation(line: 257, column: 1, scope: !5617)
!6112 = !{i64 2147643397, i64 2147643440, i64 2147643480}
!6113 = !DILocation(line: 258, column: 1, scope: !5617)
!6114 = !{i64 2147643611, i64 2147643654, i64 2147643694}
!6115 = !DILocation(line: 259, column: 1, scope: !5617)
!6116 = !{i64 2147643831, i64 2147643874, i64 2147643914}
!6117 = !DILocation(line: 260, column: 1, scope: !5617)
!6118 = !{i64 2147644042, i64 2147644085, i64 2147644125}
!6119 = !DILocation(line: 261, column: 1, scope: !5617)
!6120 = !{i64 2147644235, i64 2147644278, i64 2147644318}
!6121 = !DILocation(line: 262, column: 1, scope: !5617)
!6122 = !{i64 2147644434, i64 2147644477, i64 2147644517}
!6123 = !DILocation(line: 263, column: 1, scope: !5617)
!6124 = !{i64 2147644606, i64 2147644649, i64 2147644689}
!6125 = !DILocation(line: 264, column: 1, scope: !5617)
!6126 = !{i64 2147644799, i64 2147644842, i64 2147644882}
!6127 = !DILocation(line: 265, column: 1, scope: !5617)
!6128 = !{i64 2147644995, i64 2147645038, i64 2147645078}
!6129 = !DILocation(line: 266, column: 1, scope: !5617)
!6130 = !{i64 2147645222, i64 2147645265, i64 2147645305}
!6131 = !DILocation(line: 267, column: 1, scope: !5617)
!6132 = !{i64 2147645439, i64 2147645482, i64 2147645522}
!6133 = !DILocation(line: 268, column: 1, scope: !5617)
!6134 = !{i64 2147645731, i64 2147645774, i64 2147645814}
!6135 = !DILocation(line: 269, column: 1, scope: !5617)
!6136 = !{i64 2147645963, i64 2147646006, i64 2147646046}
!6137 = !DILocation(line: 270, column: 1, scope: !5617)
!6138 = !{i64 2147646180, i64 2147646223, i64 2147646263}
!6139 = !DILocation(line: 271, column: 1, scope: !5617)
!6140 = !{i64 2147646387, i64 2147646430, i64 2147646470}
!6141 = !DILocation(line: 272, column: 1, scope: !5617)
!6142 = !{i64 2147646588, i64 2147646631, i64 2147646671}
!6143 = !DILocation(line: 273, column: 1, scope: !5617)
!6144 = !{i64 2147646820, i64 2147646863, i64 2147646903}
!6145 = !DILocation(line: 274, column: 1, scope: !5617)
!6146 = !{i64 2147647028, i64 2147647071, i64 2147647111}
!6147 = !DILocation(line: 275, column: 1, scope: !5617)
!6148 = !{i64 2147647218, i64 2147647261, i64 2147647301}
!6149 = !DILocation(line: 276, column: 1, scope: !5617)
!6150 = !{i64 2147647444, i64 2147647487, i64 2147647527}
!6151 = !DILocation(line: 277, column: 1, scope: !5617)
!6152 = !{i64 2147647633, i64 2147647676, i64 2147647716}
!6153 = !DILocation(line: 278, column: 1, scope: !5617)
!6154 = !{i64 2147647904, i64 2147647947, i64 2147647987}
!6155 = !DILocation(line: 279, column: 1, scope: !5617)
!6156 = !{i64 2147648124, i64 2147648167, i64 2147648207}
!6157 = !DILocation(line: 280, column: 1, scope: !5617)
!6158 = !{i64 2147648377, i64 2147648420, i64 2147648460}
!6159 = !DILocation(line: 281, column: 1, scope: !5617)
!6160 = !{i64 2147648585, i64 2147648628, i64 2147648668}
!6161 = !DILocation(line: 282, column: 1, scope: !5617)
!6162 = !{i64 2147648817, i64 2147648860, i64 2147648900}
!6163 = !DILocation(line: 283, column: 1, scope: !5617)
!6164 = !{i64 2147649028, i64 2147649071, i64 2147649111}
!6165 = !DILocation(line: 284, column: 1, scope: !5617)
!6166 = !{i64 2147649218, i64 2147649261, i64 2147649301}
!6167 = !DILocation(line: 285, column: 1, scope: !5617)
!6168 = !{i64 2147649432, i64 2147649475, i64 2147649515}
!6169 = !DILocation(line: 286, column: 1, scope: !5617)
!6170 = !{i64 2147649631, i64 2147649674, i64 2147649714}
!6171 = !DILocation(line: 287, column: 1, scope: !5617)
!6172 = !{i64 2147649818, i64 2147649861, i64 2147649901}
!6173 = !DILocation(line: 288, column: 1, scope: !5617)
!6174 = !{i64 2147650026, i64 2147650069, i64 2147650109}
!6175 = !DILocation(line: 289, column: 1, scope: !5617)
!6176 = !{i64 2147650255, i64 2147650298, i64 2147650338}
!6177 = !DILocation(line: 290, column: 1, scope: !5617)
!6178 = !{i64 2147650457, i64 2147650500, i64 2147650540}
!6179 = !DILocation(line: 291, column: 1, scope: !5617)
!6180 = !{i64 2147650656, i64 2147650699, i64 2147650739}
!6181 = !DILocation(line: 292, column: 1, scope: !5617)
!6182 = !{i64 2147650873, i64 2147650916, i64 2147650956}
!6183 = !DILocation(line: 294, column: 1, scope: !5617)
!6184 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !184, file: !184, line: 30, type: !191, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6185)
!6185 = !{!6186, !6187}
!6186 = !DILocalVariable(name: "arg", arg: 1, scope: !6184, file: !184, line: 30, type: !193)
!6187 = !DILocalVariable(name: "key", scope: !6184, file: !184, line: 32, type: !137)
!6188 = !DILocation(line: 0, scope: !6184)
!6189 = !DILocation(line: 37, column: 2, scope: !6184)
!6190 = !DILocation(line: 38, column: 2, scope: !6184)
!6191 = !DILocation(line: 55, column: 2, scope: !6192, inlinedAt: !6199)
!6192 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6196)
!6193 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!32}
!6196 = !{!6197, !6198}
!6197 = !DILocalVariable(name: "key", scope: !6192, file: !6193, line: 44, type: !32)
!6198 = !DILocalVariable(name: "tmp", scope: !6192, file: !6193, line: 53, type: !32)
!6199 = distinct !DILocation(line: 40, column: 8, scope: !6184)
!6200 = !{i64 2184632}
!6201 = !DILocation(line: 0, scope: !6192, inlinedAt: !6199)
!6202 = !DILocalVariable(name: "key", arg: 1, scope: !6203, file: !6193, line: 84, type: !32)
!6203 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6206)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{null, !32}
!6206 = !{!6202}
!6207 = !DILocation(line: 0, scope: !6203, inlinedAt: !6208)
!6208 = distinct !DILocation(line: 47, column: 2, scope: !6184)
!6209 = !DILocation(line: 95, column: 2, scope: !6203, inlinedAt: !6208)
!6210 = !{i64 2185449}
!6211 = !DILocation(line: 51, column: 18, scope: !6184)
!6212 = !DILocation(line: 53, column: 2, scope: !6184)
!6213 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6214, file: !6214, line: 1609, type: !2885, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6214 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6215 = !DILocation(line: 1611, column: 3, scope: !6213)
!6216 = !DILocation(line: 1612, column: 1, scope: !6213)
!6217 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6214, file: !6214, line: 1629, type: !2885, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6218 = !DILocation(line: 1631, column: 3, scope: !6217)
!6219 = !DILocation(line: 1632, column: 1, scope: !6217)
!6220 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !225, file: !225, line: 26, type: !231, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !222, retainedNodes: !6221)
!6221 = !{!6222}
!6222 = !DILocalVariable(name: "dev", arg: 1, scope: !6220, file: !225, line: 26, type: !233)
!6223 = !DILocation(line: 0, scope: !6220)
!6224 = !DILocation(line: 68, column: 2, scope: !6220)
!6225 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6226, file: !6226, line: 57, type: !6227, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !6273)
!6226 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6227 = !DISubroutineType(types: !6228)
!6228 = !{null, !32, !6229}
!6229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6230, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6231)
!6231 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2485, line: 141, baseType: !6232)
!6232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2485, line: 97, size: 256, elements: !6233)
!6233 = !{!6234}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6232, file: !2485, line: 107, baseType: !6235, size: 256)
!6235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2485, line: 98, size: 256, elements: !6236)
!6236 = !{!6237, !6242, !6247, !6252, !6257, !6262, !6267, !6272}
!6237 = !DIDerivedType(tag: DW_TAG_member, scope: !6235, file: !2485, line: 99, baseType: !6238, size: 32)
!6238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6235, file: !2485, line: 99, size: 32, elements: !6239)
!6239 = !{!6240, !6241}
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6238, file: !2485, line: 99, baseType: !137, size: 32)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6238, file: !2485, line: 99, baseType: !137, size: 32)
!6242 = !DIDerivedType(tag: DW_TAG_member, scope: !6235, file: !2485, line: 100, baseType: !6243, size: 32, offset: 32)
!6243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6235, file: !2485, line: 100, size: 32, elements: !6244)
!6244 = !{!6245, !6246}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6243, file: !2485, line: 100, baseType: !137, size: 32)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6243, file: !2485, line: 100, baseType: !137, size: 32)
!6247 = !DIDerivedType(tag: DW_TAG_member, scope: !6235, file: !2485, line: 101, baseType: !6248, size: 32, offset: 64)
!6248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6235, file: !2485, line: 101, size: 32, elements: !6249)
!6249 = !{!6250, !6251}
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6248, file: !2485, line: 101, baseType: !137, size: 32)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6248, file: !2485, line: 101, baseType: !137, size: 32)
!6252 = !DIDerivedType(tag: DW_TAG_member, scope: !6235, file: !2485, line: 102, baseType: !6253, size: 32, offset: 96)
!6253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6235, file: !2485, line: 102, size: 32, elements: !6254)
!6254 = !{!6255, !6256}
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6253, file: !2485, line: 102, baseType: !137, size: 32)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6253, file: !2485, line: 102, baseType: !137, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_member, scope: !6235, file: !2485, line: 103, baseType: !6258, size: 32, offset: 128)
!6258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6235, file: !2485, line: 103, size: 32, elements: !6259)
!6259 = !{!6260, !6261}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6258, file: !2485, line: 103, baseType: !137, size: 32)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6258, file: !2485, line: 103, baseType: !137, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, scope: !6235, file: !2485, line: 104, baseType: !6263, size: 32, offset: 160)
!6263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6235, file: !2485, line: 104, size: 32, elements: !6264)
!6264 = !{!6265, !6266}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6263, file: !2485, line: 104, baseType: !137, size: 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6263, file: !2485, line: 104, baseType: !137, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, scope: !6235, file: !2485, line: 105, baseType: !6268, size: 32, offset: 192)
!6268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6235, file: !2485, line: 105, size: 32, elements: !6269)
!6269 = !{!6270, !6271}
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6268, file: !2485, line: 105, baseType: !137, size: 32)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6268, file: !2485, line: 105, baseType: !137, size: 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6235, file: !2485, line: 106, baseType: !137, size: 32, offset: 224)
!6273 = !{!6274, !6275}
!6274 = !DILocalVariable(name: "reason", arg: 1, scope: !6225, file: !6226, line: 57, type: !32)
!6275 = !DILocalVariable(name: "esf", arg: 2, scope: !6225, file: !6226, line: 57, type: !6229)
!6276 = !DILocation(line: 0, scope: !6225)
!6277 = !DILocation(line: 63, column: 2, scope: !6225)
!6278 = !DILocation(line: 64, column: 1, scope: !6225)
!6279 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6226, file: !6226, line: 82, type: !6280, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !6295)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{null, !6229, !6282}
!6282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6283, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6284)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6285)
!6285 = !{!6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6284, file: !334, line: 26, baseType: !137, size: 32)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6284, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6284, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6284, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6284, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6284, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6284, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6284, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6284, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6295 = !{!6296, !6297, !6298}
!6296 = !DILocalVariable(name: "esf", arg: 1, scope: !6279, file: !6226, line: 82, type: !6229)
!6297 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6279, file: !6226, line: 82, type: !6282)
!6298 = !DILocalVariable(name: "reason", scope: !6279, file: !6226, line: 88, type: !32)
!6299 = !DILocation(line: 0, scope: !6279)
!6300 = !DILocation(line: 88, column: 35, scope: !6279)
!6301 = !DILocation(line: 108, column: 2, scope: !6279)
!6302 = !DILocation(line: 131, column: 1, scope: !6279)
!6303 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6226, file: !6226, line: 133, type: !6304, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !6306)
!6304 = !DISubroutineType(types: !6305)
!6305 = !{null, !102}
!6306 = !{!6307, !6308, !6309}
!6307 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6303, file: !6226, line: 133, type: !102)
!6308 = !DILocalVariable(name: "ssf_contents", scope: !6303, file: !6226, line: 135, type: !149)
!6309 = !DILocalVariable(name: "oops_esf", scope: !6303, file: !6226, line: 136, type: !6231)
!6310 = !DILocation(line: 0, scope: !6303)
!6311 = !DILocation(line: 136, column: 2, scope: !6303)
!6312 = !DILocation(line: 136, column: 15, scope: !6303)
!6313 = !DILocation(line: 139, column: 22, scope: !6303)
!6314 = !DILocation(line: 139, column: 17, scope: !6303)
!6315 = !DILocation(line: 139, column: 20, scope: !6303)
!6316 = !DILocation(line: 141, column: 2, scope: !6303)
!6317 = !DILocation(line: 142, column: 2, scope: !6303)
!6318 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6319, file: !6319, line: 40, type: !6204, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6320)
!6319 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6320 = !{!6321}
!6321 = !DILocalVariable(name: "irq", arg: 1, scope: !6318, file: !6319, line: 40, type: !32)
!6322 = !DILocation(line: 0, scope: !6318)
!6323 = !DILocation(line: 42, column: 2, scope: !6318)
!6324 = !DILocation(line: 43, column: 1, scope: !6318)
!6325 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !402, file: !402, line: 1684, type: !6326, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6328)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{null, !667}
!6328 = !{!6329}
!6329 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6325, file: !402, line: 1684, type: !667)
!6330 = !DILocation(line: 0, scope: !6325)
!6331 = !DILocation(line: 1686, column: 23, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6325, file: !402, line: 1686, column: 7)
!6333 = !DILocation(line: 1686, column: 7, scope: !6325)
!6334 = !DILocation(line: 1688, column: 5, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6332, file: !402, line: 1687, column: 3)
!6336 = !{i64 2151254154}
!6337 = !DILocation(line: 1689, column: 81, scope: !6335)
!6338 = !DILocation(line: 1689, column: 60, scope: !6335)
!6339 = !DILocation(line: 1689, column: 34, scope: !6335)
!6340 = !DILocation(line: 1689, column: 5, scope: !6335)
!6341 = !DILocation(line: 1689, column: 43, scope: !6335)
!6342 = !DILocation(line: 1690, column: 5, scope: !6335)
!6343 = !{i64 2151254268}
!6344 = !DILocation(line: 1691, column: 3, scope: !6335)
!6345 = !DILocation(line: 1692, column: 1, scope: !6325)
!6346 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6319, file: !6319, line: 45, type: !6204, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6347)
!6347 = !{!6348}
!6348 = !DILocalVariable(name: "irq", arg: 1, scope: !6346, file: !6319, line: 45, type: !32)
!6349 = !DILocation(line: 0, scope: !6346)
!6350 = !DILocation(line: 47, column: 2, scope: !6346)
!6351 = !DILocation(line: 48, column: 1, scope: !6346)
!6352 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !402, file: !402, line: 1722, type: !6326, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6353)
!6353 = !{!6354}
!6354 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6352, file: !402, line: 1722, type: !667)
!6355 = !DILocation(line: 0, scope: !6352)
!6356 = !DILocation(line: 1724, column: 23, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6352, file: !402, line: 1724, column: 7)
!6358 = !DILocation(line: 1724, column: 7, scope: !6352)
!6359 = !DILocation(line: 1726, column: 81, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6357, file: !402, line: 1725, column: 3)
!6361 = !DILocation(line: 1726, column: 60, scope: !6360)
!6362 = !DILocation(line: 1726, column: 34, scope: !6360)
!6363 = !DILocation(line: 1726, column: 5, scope: !6360)
!6364 = !DILocation(line: 1726, column: 43, scope: !6360)
!6365 = !DILocation(line: 271, column: 3, scope: !6366, inlinedAt: !6368)
!6366 = distinct !DISubprogram(name: "__DSB", scope: !6367, file: !6367, line: 269, type: !2885, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !162)
!6367 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6368 = distinct !DILocation(line: 1727, column: 5, scope: !6360)
!6369 = !{i64 3708537}
!6370 = !DILocation(line: 260, column: 3, scope: !6371, inlinedAt: !6372)
!6371 = distinct !DISubprogram(name: "__ISB", scope: !6367, file: !6367, line: 258, type: !2885, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !162)
!6372 = distinct !DILocation(line: 1728, column: 5, scope: !6360)
!6373 = !{i64 3708254}
!6374 = !DILocation(line: 1729, column: 3, scope: !6360)
!6375 = !DILocation(line: 1730, column: 1, scope: !6352)
!6376 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6319, file: !6319, line: 50, type: !6377, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6379)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!103, !32}
!6379 = !{!6380}
!6380 = !DILocalVariable(name: "irq", arg: 1, scope: !6376, file: !6319, line: 50, type: !32)
!6381 = !DILocation(line: 0, scope: !6376)
!6382 = !DILocation(line: 52, column: 20, scope: !6376)
!6383 = !DILocation(line: 52, column: 9, scope: !6376)
!6384 = !DILocation(line: 52, column: 41, scope: !6376)
!6385 = !DILocation(line: 52, column: 39, scope: !6376)
!6386 = !DILocation(line: 52, column: 2, scope: !6376)
!6387 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6319, file: !6319, line: 64, type: !6388, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6390)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{null, !32, !32, !137}
!6390 = !{!6391, !6392, !6393}
!6391 = !DILocalVariable(name: "irq", arg: 1, scope: !6387, file: !6319, line: 64, type: !32)
!6392 = !DILocalVariable(name: "prio", arg: 2, scope: !6387, file: !6319, line: 64, type: !32)
!6393 = !DILocalVariable(name: "flags", arg: 3, scope: !6387, file: !6319, line: 64, type: !137)
!6394 = !DILocation(line: 0, scope: !6387)
!6395 = !DILocation(line: 83, column: 8, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6397, file: !6319, line: 82, column: 9)
!6397 = distinct !DILexicalBlock(scope: !6387, file: !6319, line: 76, column: 6)
!6398 = !DILocation(line: 95, column: 2, scope: !6387)
!6399 = !DILocation(line: 96, column: 1, scope: !6387)
!6400 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6401, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6403)
!6401 = !DISubroutineType(types: !6402)
!6402 = !{null, !667, !137}
!6403 = !{!6404, !6405}
!6404 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6400, file: !402, line: 1814, type: !667)
!6405 = !DILocalVariable(name: "priority", arg: 2, scope: !6400, file: !402, line: 1814, type: !137)
!6406 = !DILocation(line: 0, scope: !6400)
!6407 = !DILocation(line: 0, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6400, file: !402, line: 1816, column: 7)
!6409 = !DILocation(line: 1816, column: 7, scope: !6400)
!6410 = !DILocation(line: 1824, column: 1, scope: !6400)
!6411 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6319, file: !6319, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !6412)
!6412 = !{!6413}
!6413 = !DILocalVariable(name: "unused", arg: 1, scope: !6411, file: !6319, line: 155, type: !13)
!6414 = !DILocation(line: 0, scope: !6411)
!6415 = !DILocation(line: 159, column: 2, scope: !6411)
!6416 = !DILocation(line: 160, column: 1, scope: !6411)
!6417 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6418, file: !6418, line: 87, type: !2885, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !162)
!6418 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6419 = !DILocation(line: 89, column: 2, scope: !6417)
!6420 = !DILocation(line: 90, column: 2, scope: !6417)
!6421 = !DILocation(line: 91, column: 1, scope: !6417)
!6422 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6418, file: !6418, line: 23, type: !2885, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6423 = !DISubprogram(name: "z_arm_int_exit", scope: !6424, file: !6424, line: 153, type: !2885, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6424 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6425 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6426, file: !6426, line: 256, type: !2885, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !162)
!6426 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6427 = !DILocation(line: 258, column: 2, scope: !6425)
!6428 = !DILocation(line: 260, column: 2, scope: !6425)
!6429 = !DILocation(line: 262, column: 2, scope: !6425)
!6430 = !DILocation(line: 263, column: 2, scope: !6425)
!6431 = !DILocation(line: 267, column: 2, scope: !6425)
!6432 = !DILocation(line: 268, column: 2, scope: !6425)
!6433 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6426, file: !6426, line: 53, type: !2885, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !162)
!6434 = !DILocation(line: 55, column: 12, scope: !6433)
!6435 = !DILocation(line: 271, column: 3, scope: !6436, inlinedAt: !6437)
!6436 = distinct !DISubprogram(name: "__DSB", scope: !6367, file: !6367, line: 269, type: !2885, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !162)
!6437 = distinct !DILocation(line: 56, column: 2, scope: !6433)
!6438 = !{i64 3707208}
!6439 = !DILocation(line: 260, column: 3, scope: !6440, inlinedAt: !6441)
!6440 = distinct !DISubprogram(name: "__ISB", scope: !6367, file: !6367, line: 258, type: !2885, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !162)
!6441 = distinct !DILocation(line: 57, column: 2, scope: !6433)
!6442 = !{i64 3706925}
!6443 = !DILocation(line: 58, column: 1, scope: !6433)
!6444 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6426, file: !6426, line: 96, type: !2885, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !162)
!6445 = !DILocation(line: 103, column: 13, scope: !6444)
!6446 = !DILocation(line: 975, column: 3, scope: !6447, inlinedAt: !6450)
!6447 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6367, file: !6367, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6448)
!6448 = !{!6449}
!6449 = !DILocalVariable(name: "result", scope: !6447, file: !6367, line: 973, type: !137)
!6450 = distinct !DILocation(line: 189, column: 16, scope: !6444)
!6451 = !{i64 3728038}
!6452 = !DILocation(line: 0, scope: !6447, inlinedAt: !6450)
!6453 = !DILocation(line: 189, column: 32, scope: !6444)
!6454 = !DILocalVariable(name: "control", arg: 1, scope: !6455, file: !6367, line: 1001, type: !137)
!6455 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6367, file: !6367, line: 1001, type: !6456, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2424, retainedNodes: !6458)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{null, !137}
!6458 = !{!6454}
!6459 = !DILocation(line: 0, scope: !6455, inlinedAt: !6460)
!6460 = distinct !DILocation(line: 189, column: 2, scope: !6444)
!6461 = !DILocation(line: 1003, column: 3, scope: !6455, inlinedAt: !6460)
!6462 = !{i64 3728758}
!6463 = !DILocation(line: 260, column: 3, scope: !6440, inlinedAt: !6464)
!6464 = distinct !DILocation(line: 1004, column: 3, scope: !6455, inlinedAt: !6460)
!6465 = !DILocation(line: 191, column: 1, scope: !6444)
!6466 = distinct !DISubprogram(name: "arch_swap", scope: !6467, file: !6467, line: 33, type: !6377, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !6468)
!6467 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6468 = !{!6469}
!6469 = !DILocalVariable(name: "key", arg: 1, scope: !6466, file: !6467, line: 33, type: !32)
!6470 = !DILocation(line: 0, scope: !6466)
!6471 = !DILocation(line: 36, column: 2, scope: !6466)
!6472 = !DILocation(line: 36, column: 17, scope: !6466)
!6473 = !DILocation(line: 36, column: 25, scope: !6466)
!6474 = !DILocation(line: 37, column: 37, scope: !6466)
!6475 = !DILocation(line: 37, column: 17, scope: !6466)
!6476 = !DILocation(line: 37, column: 35, scope: !6466)
!6477 = !DILocation(line: 41, column: 12, scope: !6466)
!6478 = !DILocalVariable(name: "key", arg: 1, scope: !6479, file: !6193, line: 84, type: !32)
!6479 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !6480)
!6480 = !{!6478}
!6481 = !DILocation(line: 0, scope: !6479, inlinedAt: !6482)
!6482 = distinct !DILocation(line: 44, column: 2, scope: !6466)
!6483 = !DILocation(line: 95, column: 2, scope: !6479, inlinedAt: !6482)
!6484 = !{i64 2277709}
!6485 = !DILocation(line: 53, column: 9, scope: !6466)
!6486 = !DILocation(line: 53, column: 24, scope: !6466)
!6487 = !DILocation(line: 53, column: 2, scope: !6466)
!6488 = distinct !DISubprogram(name: "arch_new_thread", scope: !6489, file: !6489, line: 56, type: !6490, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !6597)
!6489 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6490 = !DISubroutineType(types: !6491)
!6491 = !{null, !6492, !6592, !1040, !3213, !102, !102, !102}
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6493, size: 32)
!6493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6494)
!6494 = !{!6495, !6553, !6565, !6566, !6567, !6568, !6574, !6587}
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6493, file: !263, line: 247, baseType: !6496, size: 384)
!6496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6497)
!6497 = !{!6498, !6522, !6529, !6530, !6531, !6540, !6541, !6542}
!6498 = !DIDerivedType(tag: DW_TAG_member, scope: !6496, file: !263, line: 60, baseType: !6499, size: 64)
!6499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6496, file: !263, line: 60, size: 64, elements: !6500)
!6500 = !{!6501, !6516}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6499, file: !263, line: 61, baseType: !6502, size: 64)
!6502 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6503)
!6503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6504)
!6504 = !{!6505, !6511}
!6505 = !DIDerivedType(tag: DW_TAG_member, scope: !6503, file: !273, line: 38, baseType: !6506, size: 32)
!6506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6503, file: !273, line: 38, size: 32, elements: !6507)
!6507 = !{!6508, !6510}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6506, file: !273, line: 39, baseType: !6509, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6503, size: 32)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6506, file: !273, line: 40, baseType: !6509, size: 32)
!6511 = !DIDerivedType(tag: DW_TAG_member, scope: !6503, file: !273, line: 42, baseType: !6512, size: 32, offset: 32)
!6512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6503, file: !273, line: 42, size: 32, elements: !6513)
!6513 = !{!6514, !6515}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6512, file: !273, line: 43, baseType: !6509, size: 32)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6512, file: !273, line: 44, baseType: !6509, size: 32)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6499, file: !263, line: 62, baseType: !6517, size: 64)
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !6518)
!6518 = !{!6519}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6517, file: !289, line: 50, baseType: !6520, size: 64)
!6520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6521, size: 64, elements: !294)
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 32)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6496, file: !263, line: 68, baseType: !6523, size: 32, offset: 64)
!6523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6524, size: 32)
!6524 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !6525)
!6525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !6526)
!6526 = !{!6527}
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6525, file: !299, line: 232, baseType: !6528, size: 64)
!6528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6503)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6496, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6496, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!6531 = !DIDerivedType(tag: DW_TAG_member, scope: !6496, file: !263, line: 90, baseType: !6532, size: 16, offset: 112)
!6532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6496, file: !263, line: 90, size: 16, elements: !6533)
!6533 = !{!6534, !6539}
!6534 = !DIDerivedType(tag: DW_TAG_member, scope: !6532, file: !263, line: 91, baseType: !6535, size: 16)
!6535 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6532, file: !263, line: 91, size: 16, elements: !6536)
!6536 = !{!6537, !6538}
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6535, file: !263, line: 96, baseType: !313, size: 8)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6535, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6532, file: !263, line: 100, baseType: !151, size: 16)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6496, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6496, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6496, file: !263, line: 131, baseType: !6543, size: 192, offset: 192)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !6544)
!6544 = !{!6545, !6546, !6552}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6543, file: !299, line: 245, baseType: !6502, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6543, file: !299, line: 246, baseType: !6547, size: 32, offset: 64)
!6547 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !6548)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 32)
!6549 = !DISubroutineType(types: !6550)
!6550 = !{null, !6551}
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 32)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6543, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6493, file: !263, line: 250, baseType: !6554, size: 288, offset: 384)
!6554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6555)
!6555 = !{!6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6564}
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6554, file: !334, line: 26, baseType: !137, size: 32)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6554, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6554, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6554, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6554, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6554, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6554, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6554, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6554, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6493, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6493, file: !263, line: 256, baseType: !6524, size: 64, offset: 704)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6493, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6493, file: !263, line: 300, baseType: !6569, size: 96, offset: 800)
!6569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !6570)
!6570 = !{!6571, !6572, !6573}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6569, file: !263, line: 153, baseType: !22, size: 32)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6569, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6569, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6493, file: !263, line: 325, baseType: !6575, size: 32, offset: 896)
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 32)
!6576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !6577)
!6577 = !{!6578, !6584, !6585}
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6576, file: !357, line: 5074, baseType: !6579, size: 96)
!6579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6580)
!6580 = !{!6581, !6582, !6583}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6579, file: !113, line: 57, baseType: !116, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6579, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6579, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6576, file: !357, line: 5075, baseType: !6524, size: 64, offset: 96)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6576, file: !357, line: 5076, baseType: !6586, offset: 160)
!6586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6493, file: !263, line: 343, baseType: !6588, size: 64, offset: 928)
!6588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !6589)
!6589 = !{!6590, !6591}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6588, file: !334, line: 63, baseType: !137, size: 32)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6588, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!6592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6593, size: 32)
!6593 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3214, line: 44, baseType: !6594)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1971, line: 47, size: 8, elements: !6595)
!6595 = !{!6596}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6594, file: !1971, line: 48, baseType: !109, size: 8)
!6597 = !{!6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605}
!6598 = !DILocalVariable(name: "thread", arg: 1, scope: !6488, file: !6489, line: 56, type: !6492)
!6599 = !DILocalVariable(name: "stack", arg: 2, scope: !6488, file: !6489, line: 56, type: !6592)
!6600 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6488, file: !6489, line: 57, type: !1040)
!6601 = !DILocalVariable(name: "entry", arg: 4, scope: !6488, file: !6489, line: 57, type: !3213)
!6602 = !DILocalVariable(name: "p1", arg: 5, scope: !6488, file: !6489, line: 58, type: !102)
!6603 = !DILocalVariable(name: "p2", arg: 6, scope: !6488, file: !6489, line: 58, type: !102)
!6604 = !DILocalVariable(name: "p3", arg: 7, scope: !6488, file: !6489, line: 58, type: !102)
!6605 = !DILocalVariable(name: "iframe", scope: !6488, file: !6489, line: 60, type: !2483)
!6606 = !DILocation(line: 0, scope: !6488)
!6607 = !DILocation(line: 85, column: 11, scope: !6488)
!6608 = !DILocation(line: 93, column: 10, scope: !6488)
!6609 = !DILocation(line: 98, column: 13, scope: !6488)
!6610 = !DILocation(line: 100, column: 15, scope: !6488)
!6611 = !DILocation(line: 100, column: 10, scope: !6488)
!6612 = !DILocation(line: 100, column: 13, scope: !6488)
!6613 = !DILocation(line: 101, column: 15, scope: !6488)
!6614 = !DILocation(line: 101, column: 10, scope: !6488)
!6615 = !DILocation(line: 101, column: 13, scope: !6488)
!6616 = !DILocation(line: 102, column: 15, scope: !6488)
!6617 = !DILocation(line: 102, column: 10, scope: !6488)
!6618 = !DILocation(line: 102, column: 13, scope: !6488)
!6619 = !DILocation(line: 103, column: 15, scope: !6488)
!6620 = !DILocation(line: 103, column: 10, scope: !6488)
!6621 = !DILocation(line: 103, column: 13, scope: !6488)
!6622 = !DILocation(line: 106, column: 10, scope: !6488)
!6623 = !DILocation(line: 106, column: 15, scope: !6488)
!6624 = !DILocation(line: 122, column: 29, scope: !6488)
!6625 = !DILocation(line: 122, column: 23, scope: !6488)
!6626 = !DILocation(line: 122, column: 27, scope: !6488)
!6627 = !DILocation(line: 123, column: 15, scope: !6488)
!6628 = !DILocation(line: 123, column: 23, scope: !6488)
!6629 = !DILocation(line: 143, column: 1, scope: !6488)
!6630 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6489, file: !6489, line: 385, type: !6631, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !6634)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!137, !6633, !6633}
!6633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6634 = !{!6635, !6636, !6637, !6640}
!6635 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6630, file: !6489, line: 385, type: !6633)
!6636 = !DILocalVariable(name: "psp", arg: 2, scope: !6630, file: !6489, line: 385, type: !6633)
!6637 = !DILocalVariable(name: "thread", scope: !6630, file: !6489, line: 388, type: !6638)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 32)
!6639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6493)
!6640 = !DILocalVariable(name: "guard_len", scope: !6630, file: !6489, line: 405, type: !137)
!6641 = !DILocation(line: 0, scope: !6630)
!6642 = !DILocation(line: 388, column: 34, scope: !6630)
!6643 = !DILocation(line: 390, column: 13, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6630, file: !6489, line: 390, column: 6)
!6645 = !DILocation(line: 390, column: 6, scope: !6630)
!6646 = !DILocation(line: 438, column: 6, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6630, file: !6489, line: 438, column: 6)
!6648 = !DILocation(line: 438, column: 6, scope: !6630)
!6649 = !DILocation(line: 442, column: 3, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6647, file: !6489, line: 440, column: 22)
!6651 = !DILocation(line: 455, column: 1, scope: !6630)
!6652 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6489, file: !6489, line: 530, type: !6653, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !6655)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{null, !6492, !1040, !3213}
!6655 = !{!6656, !6657, !6658}
!6656 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6652, file: !6489, line: 530, type: !6492)
!6657 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6652, file: !6489, line: 530, type: !1040)
!6658 = !DILocalVariable(name: "_main", arg: 3, scope: !6652, file: !6489, line: 531, type: !3213)
!6659 = !DILocation(line: 0, scope: !6652)
!6660 = !DILocation(line: 535, column: 11, scope: !6652)
!6661 = !DILocation(line: 560, column: 2, scope: !6652)
!6662 = !DILocation(line: 576, column: 2, scope: !6652)
!6663 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6664 = !DILocation(line: 603, column: 2, scope: !6652)
!6665 = distinct !DISubprogram(name: "z_arm_fault", scope: !6666, file: !6666, line: 1036, type: !6667, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6682)
!6666 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6667 = !DISubroutineType(types: !6668)
!6668 = !{null, !137, !137, !137, !6669}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 32)
!6670 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6671)
!6671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6672)
!6672 = !{!6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6671, file: !334, line: 26, baseType: !137, size: 32)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6671, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6671, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6671, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6671, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6671, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6671, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6671, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6671, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6682 = !{!6683, !6684, !6685, !6686, !6687, !6688, !6689, !6690, !6691, !6692}
!6683 = !DILocalVariable(name: "msp", arg: 1, scope: !6665, file: !6666, line: 1036, type: !137)
!6684 = !DILocalVariable(name: "psp", arg: 2, scope: !6665, file: !6666, line: 1036, type: !137)
!6685 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6665, file: !6666, line: 1036, type: !137)
!6686 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6665, file: !6666, line: 1037, type: !6669)
!6687 = !DILocalVariable(name: "reason", scope: !6665, file: !6666, line: 1039, type: !137)
!6688 = !DILocalVariable(name: "fault", scope: !6665, file: !6666, line: 1040, type: !103)
!6689 = !DILocalVariable(name: "recoverable", scope: !6665, file: !6666, line: 1041, type: !211)
!6690 = !DILocalVariable(name: "nested_exc", scope: !6665, file: !6666, line: 1041, type: !211)
!6691 = !DILocalVariable(name: "esf", scope: !6665, file: !6666, line: 1042, type: !2551)
!6692 = !DILocalVariable(name: "esf_copy", scope: !6665, file: !6666, line: 1047, type: !2552)
!6693 = !DILocation(line: 0, scope: !6665)
!6694 = !DILocation(line: 1040, column: 19, scope: !6665)
!6695 = !DILocation(line: 1040, column: 24, scope: !6665)
!6696 = !DILocation(line: 1041, column: 2, scope: !6665)
!6697 = !DILocation(line: 1047, column: 2, scope: !6665)
!6698 = !DILocation(line: 1047, column: 15, scope: !6665)
!6699 = !DILocalVariable(name: "key", arg: 1, scope: !6700, file: !6193, line: 84, type: !32)
!6700 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6701)
!6701 = !{!6699}
!6702 = !DILocation(line: 0, scope: !6700, inlinedAt: !6703)
!6703 = distinct !DILocation(line: 1050, column: 2, scope: !6665)
!6704 = !DILocation(line: 95, column: 2, scope: !6700, inlinedAt: !6703)
!6705 = !{i64 2310953}
!6706 = !DILocation(line: 1055, column: 9, scope: !6665)
!6707 = !DILocation(line: 1063, column: 11, scope: !6665)
!6708 = !DILocation(line: 1064, column: 6, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6665, file: !6666, line: 1064, column: 6)
!6710 = !{i8 0, i8 2}
!6711 = !DILocation(line: 1064, column: 6, scope: !6665)
!6712 = !DILocation(line: 1070, column: 20, scope: !6665)
!6713 = !DILocation(line: 1070, column: 2, scope: !6665)
!6714 = !DILocation(line: 1089, column: 6, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6665, file: !6666, line: 1089, column: 6)
!6716 = !DILocation(line: 0, scope: !6715)
!6717 = !DILocation(line: 1089, column: 6, scope: !6665)
!6718 = !DILocation(line: 1090, column: 28, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !6666, line: 1090, column: 7)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !6666, line: 1089, column: 18)
!6721 = !DILocation(line: 1090, column: 44, scope: !6719)
!6722 = !DILocation(line: 1090, column: 7, scope: !6720)
!6723 = !DILocation(line: 1091, column: 24, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6719, file: !6666, line: 1090, column: 50)
!6725 = !DILocation(line: 1092, column: 3, scope: !6724)
!6726 = !DILocation(line: 1094, column: 23, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6715, file: !6666, line: 1093, column: 9)
!6728 = !DILocation(line: 1097, column: 2, scope: !6665)
!6729 = !DILocation(line: 1098, column: 1, scope: !6665)
!6730 = distinct !DISubprogram(name: "get_esf", scope: !6666, file: !6666, line: 894, type: !6731, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6734)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!2551, !137, !137, !137, !6733}
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 32)
!6734 = !{!6735, !6736, !6737, !6738, !6739, !6740}
!6735 = !DILocalVariable(name: "msp", arg: 1, scope: !6730, file: !6666, line: 894, type: !137)
!6736 = !DILocalVariable(name: "psp", arg: 2, scope: !6730, file: !6666, line: 894, type: !137)
!6737 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6730, file: !6666, line: 894, type: !137)
!6738 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6730, file: !6666, line: 895, type: !6733)
!6739 = !DILocalVariable(name: "alternative_state_exc", scope: !6730, file: !6666, line: 897, type: !211)
!6740 = !DILocalVariable(name: "ptr_esf", scope: !6730, file: !6666, line: 898, type: !2551)
!6741 = !DILocation(line: 0, scope: !6730)
!6742 = !DILocation(line: 900, column: 14, scope: !6730)
!6743 = !DILocation(line: 902, column: 49, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6730, file: !6666, line: 902, column: 6)
!6745 = !DILocation(line: 902, column: 6, scope: !6730)
!6746 = !DILocation(line: 983, column: 18, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6730, file: !6666, line: 983, column: 6)
!6748 = !DILocation(line: 991, column: 7, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !6666, line: 990, column: 30)
!6750 = distinct !DILexicalBlock(scope: !6730, file: !6666, line: 990, column: 6)
!6751 = !DILocation(line: 998, column: 16, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !6666, line: 995, column: 10)
!6753 = distinct !DILexicalBlock(scope: !6749, file: !6666, line: 991, column: 7)
!6754 = !DILocation(line: 1002, column: 2, scope: !6730)
!6755 = !DILocation(line: 1003, column: 1, scope: !6730)
!6756 = distinct !DISubprogram(name: "fault_handle", scope: !6666, file: !6666, line: 786, type: !6757, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6759)
!6757 = !DISubroutineType(types: !6758)
!6758 = !{!137, !2551, !103, !6733}
!6759 = !{!6760, !6761, !6762, !6763}
!6760 = !DILocalVariable(name: "esf", arg: 1, scope: !6756, file: !6666, line: 786, type: !2551)
!6761 = !DILocalVariable(name: "fault", arg: 2, scope: !6756, file: !6666, line: 786, type: !103)
!6762 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6756, file: !6666, line: 786, type: !6733)
!6763 = !DILocalVariable(name: "reason", scope: !6756, file: !6666, line: 788, type: !137)
!6764 = !DILocation(line: 0, scope: !6756)
!6765 = !DILocation(line: 790, column: 15, scope: !6756)
!6766 = !DILocation(line: 792, column: 2, scope: !6756)
!6767 = !DILocation(line: 794, column: 12, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6756, file: !6666, line: 792, column: 17)
!6769 = !DILocation(line: 795, column: 3, scope: !6768)
!6770 = !DILocation(line: 800, column: 12, scope: !6768)
!6771 = !DILocation(line: 801, column: 3, scope: !6768)
!6772 = !DILocation(line: 803, column: 12, scope: !6768)
!6773 = !DILocation(line: 804, column: 3, scope: !6768)
!6774 = !DILocation(line: 806, column: 12, scope: !6768)
!6775 = !DILocation(line: 807, column: 3, scope: !6768)
!6776 = !DILocation(line: 814, column: 3, scope: !6768)
!6777 = !DILocation(line: 815, column: 3, scope: !6768)
!6778 = !DILocation(line: 829, column: 2, scope: !6756)
!6779 = distinct !DISubprogram(name: "hard_fault", scope: !6666, file: !6666, line: 709, type: !6780, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6782)
!6780 = !DISubroutineType(types: !6781)
!6781 = !{!137, !2551, !6733}
!6782 = !{!6783, !6784, !6785}
!6783 = !DILocalVariable(name: "esf", arg: 1, scope: !6779, file: !6666, line: 709, type: !2551)
!6784 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6779, file: !6666, line: 709, type: !6733)
!6785 = !DILocalVariable(name: "reason", scope: !6779, file: !6666, line: 711, type: !137)
!6786 = !DILocation(line: 0, scope: !6779)
!6787 = !DILocation(line: 732, column: 15, scope: !6779)
!6788 = !DILocation(line: 734, column: 12, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6779, file: !6666, line: 734, column: 6)
!6790 = !DILocation(line: 734, column: 17, scope: !6789)
!6791 = !DILocation(line: 734, column: 41, scope: !6789)
!6792 = !DILocation(line: 734, column: 6, scope: !6779)
!6793 = !DILocation(line: 736, column: 19, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6789, file: !6666, line: 736, column: 13)
!6795 = !DILocation(line: 736, column: 49, scope: !6794)
!6796 = !DILocation(line: 736, column: 13, scope: !6789)
!6797 = !DILocation(line: 738, column: 19, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6794, file: !6666, line: 738, column: 13)
!6799 = !DILocation(line: 738, column: 24, scope: !6798)
!6800 = !DILocation(line: 738, column: 47, scope: !6798)
!6801 = !DILocation(line: 738, column: 13, scope: !6794)
!6802 = !DILocation(line: 740, column: 7, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6666, line: 740, column: 7)
!6804 = distinct !DILexicalBlock(scope: !6798, file: !6666, line: 738, column: 53)
!6805 = !DILocation(line: 740, column: 7, scope: !6804)
!6806 = !DILocation(line: 742, column: 24, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6803, file: !6666, line: 740, column: 38)
!6808 = !DILocation(line: 743, column: 3, scope: !6807)
!6809 = !DILocation(line: 743, column: 20, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6803, file: !6666, line: 743, column: 14)
!6811 = !DILocation(line: 743, column: 25, scope: !6810)
!6812 = !DILocation(line: 743, column: 52, scope: !6810)
!6813 = !DILocation(line: 743, column: 14, scope: !6803)
!6814 = !DILocation(line: 744, column: 13, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6810, file: !6666, line: 743, column: 58)
!6816 = !DILocation(line: 745, column: 3, scope: !6815)
!6817 = !DILocation(line: 745, column: 20, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6810, file: !6666, line: 745, column: 14)
!6819 = !DILocation(line: 745, column: 25, scope: !6818)
!6820 = !DILocation(line: 745, column: 52, scope: !6818)
!6821 = !DILocation(line: 745, column: 14, scope: !6810)
!6822 = !DILocation(line: 746, column: 13, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6818, file: !6666, line: 745, column: 58)
!6824 = !DILocation(line: 747, column: 3, scope: !6823)
!6825 = !DILocation(line: 747, column: 20, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6818, file: !6666, line: 747, column: 14)
!6827 = !DILocation(line: 747, column: 52, scope: !6826)
!6828 = !DILocation(line: 747, column: 14, scope: !6818)
!6829 = !DILocation(line: 748, column: 13, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6826, file: !6666, line: 747, column: 58)
!6831 = !DILocation(line: 753, column: 3, scope: !6830)
!6832 = !DILocation(line: 766, column: 2, scope: !6779)
!6833 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6666, file: !6666, line: 229, type: !6757, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6834)
!6834 = !{!6835, !6836, !6837, !6838, !6839, !6840, !6843}
!6835 = !DILocalVariable(name: "esf", arg: 1, scope: !6833, file: !6666, line: 229, type: !2551)
!6836 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6833, file: !6666, line: 229, type: !103)
!6837 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6833, file: !6666, line: 230, type: !6733)
!6838 = !DILocalVariable(name: "reason", scope: !6833, file: !6666, line: 232, type: !137)
!6839 = !DILocalVariable(name: "mmfar", scope: !6833, file: !6666, line: 233, type: !137)
!6840 = !DILocalVariable(name: "temp", scope: !6841, file: !6666, line: 254, type: !137)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !6666, line: 244, column: 48)
!6842 = distinct !DILexicalBlock(scope: !6833, file: !6666, line: 244, column: 6)
!6843 = !DILocalVariable(name: "min_stack_ptr", scope: !6844, file: !6666, line: 309, type: !137)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6666, line: 308, column: 43)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !6666, line: 308, column: 7)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6666, line: 289, column: 40)
!6847 = distinct !DILexicalBlock(scope: !6833, file: !6666, line: 288, column: 6)
!6848 = !DILocation(line: 0, scope: !6833)
!6849 = !DILocation(line: 237, column: 12, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6833, file: !6666, line: 237, column: 6)
!6851 = !DILocation(line: 241, column: 12, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6833, file: !6666, line: 241, column: 6)
!6853 = !DILocation(line: 244, column: 12, scope: !6842)
!6854 = !DILocation(line: 244, column: 17, scope: !6842)
!6855 = !DILocation(line: 244, column: 42, scope: !6842)
!6856 = !DILocation(line: 244, column: 6, scope: !6833)
!6857 = !DILocation(line: 254, column: 24, scope: !6841)
!6858 = !DILocation(line: 0, scope: !6841)
!6859 = !DILocation(line: 256, column: 13, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6841, file: !6666, line: 256, column: 7)
!6861 = !DILocation(line: 256, column: 18, scope: !6860)
!6862 = !DILocation(line: 256, column: 44, scope: !6860)
!6863 = !DILocation(line: 256, column: 7, scope: !6841)
!6864 = !DILocation(line: 259, column: 24, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6666, line: 259, column: 8)
!6866 = distinct !DILexicalBlock(scope: !6860, file: !6666, line: 256, column: 50)
!6867 = !DILocation(line: 259, column: 8, scope: !6866)
!6868 = !DILocation(line: 261, column: 15, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6865, file: !6666, line: 259, column: 30)
!6870 = !DILocation(line: 262, column: 4, scope: !6869)
!6871 = !DILocation(line: 265, column: 12, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6833, file: !6666, line: 265, column: 6)
!6873 = !DILocation(line: 269, column: 12, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6833, file: !6666, line: 269, column: 6)
!6875 = !DILocation(line: 288, column: 12, scope: !6847)
!6876 = !DILocation(line: 288, column: 17, scope: !6847)
!6877 = !DILocation(line: 288, column: 41, scope: !6847)
!6878 = !DILocation(line: 289, column: 9, scope: !6847)
!6879 = !DILocation(line: 289, column: 14, scope: !6847)
!6880 = !DILocation(line: 288, column: 6, scope: !6833)
!6881 = !DILocation(line: 308, column: 12, scope: !6845)
!6882 = !DILocation(line: 308, column: 17, scope: !6845)
!6883 = !DILocation(line: 308, column: 7, scope: !6846)
!6884 = !DILocation(line: 310, column: 6, scope: !6844)
!6885 = !DILocation(line: 309, column: 29, scope: !6844)
!6886 = !DILocation(line: 0, scope: !6844)
!6887 = !DILocation(line: 312, column: 8, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6844, file: !6666, line: 312, column: 8)
!6889 = !DILocation(line: 312, column: 8, scope: !6844)
!6890 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6891, file: !6367, line: 1099, type: !137)
!6891 = distinct !DISubprogram(name: "__set_PSP", scope: !6367, file: !6367, line: 1099, type: !6456, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6892)
!6892 = !{!6890}
!6893 = !DILocation(line: 0, scope: !6891, inlinedAt: !6894)
!6894 = distinct !DILocation(line: 338, column: 5, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6888, file: !6666, line: 312, column: 23)
!6896 = !DILocation(line: 1101, column: 3, scope: !6891, inlinedAt: !6894)
!6897 = !{i64 3758177}
!6898 = !DILocation(line: 341, column: 4, scope: !6895)
!6899 = !DILocation(line: 360, column: 12, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6833, file: !6666, line: 360, column: 6)
!6901 = !DILocation(line: 360, column: 17, scope: !6900)
!6902 = !DILocation(line: 360, column: 41, scope: !6900)
!6903 = !DILocation(line: 360, column: 6, scope: !6833)
!6904 = !DILocation(line: 361, column: 14, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6900, file: !6666, line: 360, column: 47)
!6906 = !DILocation(line: 362, column: 2, scope: !6905)
!6907 = !DILocation(line: 366, column: 12, scope: !6833)
!6908 = !DILocation(line: 369, column: 15, scope: !6833)
!6909 = !DILocation(line: 371, column: 2, scope: !6833)
!6910 = distinct !DISubprogram(name: "bus_fault", scope: !6666, file: !6666, line: 383, type: !6911, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6913)
!6911 = !DISubroutineType(types: !6912)
!6912 = !{!103, !2551, !103, !6733}
!6913 = !{!6914, !6915, !6916, !6917, !6918}
!6914 = !DILocalVariable(name: "esf", arg: 1, scope: !6910, file: !6666, line: 383, type: !2551)
!6915 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6910, file: !6666, line: 383, type: !103)
!6916 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6910, file: !6666, line: 383, type: !6733)
!6917 = !DILocalVariable(name: "reason", scope: !6910, file: !6666, line: 385, type: !137)
!6918 = !DILocalVariable(name: "bfar", scope: !6919, file: !6666, line: 405, type: !137)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6666, line: 395, column: 42)
!6920 = distinct !DILexicalBlock(scope: !6910, file: !6666, line: 395, column: 6)
!6921 = !DILocation(line: 0, scope: !6910)
!6922 = !DILocation(line: 389, column: 11, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6910, file: !6666, line: 389, column: 6)
!6924 = !DILocation(line: 392, column: 11, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6910, file: !6666, line: 392, column: 6)
!6926 = !DILocation(line: 395, column: 11, scope: !6920)
!6927 = !DILocation(line: 395, column: 16, scope: !6920)
!6928 = !DILocation(line: 395, column: 6, scope: !6910)
!6929 = !DILocation(line: 405, column: 3, scope: !6919)
!6930 = !DILocation(line: 0, scope: !6919)
!6931 = !DILocation(line: 407, column: 13, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6919, file: !6666, line: 407, column: 7)
!6933 = !DILocation(line: 407, column: 18, scope: !6932)
!6934 = !DILocation(line: 407, column: 44, scope: !6932)
!6935 = !DILocation(line: 407, column: 7, scope: !6919)
!6936 = !DILocation(line: 411, column: 15, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6666, line: 409, column: 30)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6666, line: 409, column: 8)
!6939 = distinct !DILexicalBlock(scope: !6932, file: !6666, line: 407, column: 50)
!6940 = !DILocation(line: 412, column: 4, scope: !6937)
!6941 = !DILocation(line: 415, column: 11, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6910, file: !6666, line: 415, column: 6)
!6943 = !DILocation(line: 418, column: 12, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6910, file: !6666, line: 418, column: 6)
!6945 = !DILocation(line: 418, column: 17, scope: !6944)
!6946 = !DILocation(line: 418, column: 41, scope: !6944)
!6947 = !DILocation(line: 418, column: 6, scope: !6910)
!6948 = !DILocation(line: 423, column: 18, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6944, file: !6666, line: 423, column: 13)
!6950 = !DILocation(line: 524, column: 12, scope: !6910)
!6951 = !DILocation(line: 526, column: 15, scope: !6910)
!6952 = !DILocation(line: 528, column: 2, scope: !6910)
!6953 = distinct !DISubprogram(name: "usage_fault", scope: !6666, file: !6666, line: 539, type: !6954, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6958)
!6954 = !DISubroutineType(types: !6955)
!6955 = !{!137, !6956}
!6956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6957, size: 32)
!6957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2552)
!6958 = !{!6959, !6960}
!6959 = !DILocalVariable(name: "esf", arg: 1, scope: !6953, file: !6666, line: 539, type: !6956)
!6960 = !DILocalVariable(name: "reason", scope: !6953, file: !6666, line: 541, type: !137)
!6961 = !DILocation(line: 0, scope: !6953)
!6962 = !DILocation(line: 546, column: 12, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6953, file: !6666, line: 546, column: 6)
!6964 = !DILocation(line: 549, column: 12, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6953, file: !6666, line: 549, column: 6)
!6966 = !DILocation(line: 567, column: 12, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6953, file: !6666, line: 567, column: 6)
!6968 = !DILocation(line: 570, column: 12, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6953, file: !6666, line: 570, column: 6)
!6970 = !DILocation(line: 573, column: 12, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6953, file: !6666, line: 573, column: 6)
!6972 = !DILocation(line: 576, column: 12, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6953, file: !6666, line: 576, column: 6)
!6974 = !DILocation(line: 581, column: 12, scope: !6953)
!6975 = !DILocation(line: 583, column: 2, scope: !6953)
!6976 = distinct !DISubprogram(name: "debug_monitor", scope: !6666, file: !6666, line: 632, type: !6977, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6979)
!6977 = !DISubroutineType(types: !6978)
!6978 = !{null, !2551, !6733}
!6979 = !{!6980, !6981}
!6980 = !DILocalVariable(name: "esf", arg: 1, scope: !6976, file: !6666, line: 632, type: !2551)
!6981 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6976, file: !6666, line: 632, type: !6733)
!6982 = !DILocation(line: 0, scope: !6976)
!6983 = !DILocation(line: 634, column: 15, scope: !6976)
!6984 = !DILocation(line: 652, column: 1, scope: !6976)
!6985 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6666, file: !6666, line: 658, type: !6986, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !6988)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!211, !2551}
!6988 = !{!6989, !6990, !6991}
!6989 = !DILocalVariable(name: "esf", arg: 1, scope: !6985, file: !6666, line: 658, type: !2551)
!6990 = !DILocalVariable(name: "ret_addr", scope: !6985, file: !6666, line: 660, type: !150)
!6991 = !DILocalVariable(name: "fault_insn", scope: !6985, file: !6666, line: 686, type: !151)
!6992 = !DILocation(line: 0, scope: !6985)
!6993 = !DILocation(line: 660, column: 46, scope: !6985)
!6994 = !DILocation(line: 660, column: 23, scope: !6985)
!6995 = !DILocation(line: 682, column: 11, scope: !6985)
!6996 = !DILocation(line: 271, column: 3, scope: !6997, inlinedAt: !6998)
!6997 = distinct !DISubprogram(name: "__DSB", scope: !6367, file: !6367, line: 269, type: !2885, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !162)
!6998 = distinct !DILocation(line: 683, column: 2, scope: !6985)
!6999 = !{i64 3734312}
!7000 = !DILocation(line: 260, column: 3, scope: !7001, inlinedAt: !7002)
!7001 = distinct !DISubprogram(name: "__ISB", scope: !6367, file: !6367, line: 258, type: !2885, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !162)
!7002 = distinct !DILocation(line: 684, column: 2, scope: !6985)
!7003 = !{i64 3734029}
!7004 = !DILocation(line: 686, column: 35, scope: !6985)
!7005 = !DILocation(line: 686, column: 24, scope: !6985)
!7006 = !DILocation(line: 688, column: 11, scope: !6985)
!7007 = !DILocation(line: 271, column: 3, scope: !6997, inlinedAt: !7008)
!7008 = distinct !DILocation(line: 689, column: 2, scope: !6985)
!7009 = !DILocation(line: 260, column: 3, scope: !7001, inlinedAt: !7010)
!7010 = distinct !DILocation(line: 690, column: 2, scope: !6985)
!7011 = !DILocation(line: 693, column: 45, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6985, file: !6666, line: 693, column: 6)
!7013 = !DILocation(line: 699, column: 1, scope: !6985)
!7014 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6666, file: !6666, line: 1107, type: !2885, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !162)
!7015 = !DILocation(line: 1111, column: 11, scope: !7014)
!7016 = !DILocation(line: 1136, column: 1, scope: !7014)
!7017 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7018, file: !7018, line: 26, type: !2885, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !7019)
!7018 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7019 = !{!7020}
!7020 = !DILocalVariable(name: "irq", scope: !7017, file: !7018, line: 28, type: !103)
!7021 = !DILocation(line: 0, scope: !7017)
!7022 = !DILocation(line: 30, column: 2, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7017, file: !7018, line: 30, column: 2)
!7024 = !DILocation(line: 31, column: 3, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !7018, line: 30, column: 39)
!7026 = distinct !DILexicalBlock(scope: !7023, file: !7018, line: 30, column: 2)
!7027 = !DILocation(line: 30, column: 35, scope: !7026)
!7028 = !DILocation(line: 30, column: 13, scope: !7026)
!7029 = distinct !{!7029, !7022, !7030}
!7030 = !DILocation(line: 32, column: 2, scope: !7023)
!7031 = !DILocation(line: 33, column: 1, scope: !7017)
!7032 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6401, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2594, retainedNodes: !7033)
!7033 = !{!7034, !7035}
!7034 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7032, file: !402, line: 1814, type: !667)
!7035 = !DILocalVariable(name: "priority", arg: 2, scope: !7032, file: !402, line: 1814, type: !137)
!7036 = !DILocation(line: 0, scope: !7032)
!7037 = !DILocation(line: 1816, column: 7, scope: !7032)
!7038 = !DILocation(line: 0, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7032, file: !402, line: 1816, column: 7)
!7040 = !DILocation(line: 1824, column: 1, scope: !7032)
!7041 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7042, file: !7042, line: 27, type: !7043, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !7146)
!7042 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7043 = !DISubroutineType(types: !7044)
!7044 = !{null, !7045}
!7045 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !7046)
!7046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7047, size: 32)
!7047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !7048)
!7048 = !{!7049, !7107, !7119, !7120, !7121, !7122, !7128, !7141}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7047, file: !263, line: 247, baseType: !7050, size: 384)
!7050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !7051)
!7051 = !{!7052, !7076, !7083, !7084, !7085, !7094, !7095, !7096}
!7052 = !DIDerivedType(tag: DW_TAG_member, scope: !7050, file: !263, line: 60, baseType: !7053, size: 64)
!7053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7050, file: !263, line: 60, size: 64, elements: !7054)
!7054 = !{!7055, !7070}
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7053, file: !263, line: 61, baseType: !7056, size: 64)
!7056 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !7057)
!7057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !7058)
!7058 = !{!7059, !7065}
!7059 = !DIDerivedType(tag: DW_TAG_member, scope: !7057, file: !273, line: 38, baseType: !7060, size: 32)
!7060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7057, file: !273, line: 38, size: 32, elements: !7061)
!7061 = !{!7062, !7064}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7060, file: !273, line: 39, baseType: !7063, size: 32)
!7063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7057, size: 32)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7060, file: !273, line: 40, baseType: !7063, size: 32)
!7065 = !DIDerivedType(tag: DW_TAG_member, scope: !7057, file: !273, line: 42, baseType: !7066, size: 32, offset: 32)
!7066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7057, file: !273, line: 42, size: 32, elements: !7067)
!7067 = !{!7068, !7069}
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7066, file: !273, line: 43, baseType: !7063, size: 32)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7066, file: !273, line: 44, baseType: !7063, size: 32)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7053, file: !263, line: 62, baseType: !7071, size: 64)
!7071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !7072)
!7072 = !{!7073}
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7071, file: !289, line: 50, baseType: !7074, size: 64)
!7074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7075, size: 64, elements: !294)
!7075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7071, size: 32)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7050, file: !263, line: 68, baseType: !7077, size: 32, offset: 64)
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 32)
!7078 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !7079)
!7079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !7080)
!7080 = !{!7081}
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7079, file: !299, line: 232, baseType: !7082, size: 64)
!7082 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !7057)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7050, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7050, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!7085 = !DIDerivedType(tag: DW_TAG_member, scope: !7050, file: !263, line: 90, baseType: !7086, size: 16, offset: 112)
!7086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7050, file: !263, line: 90, size: 16, elements: !7087)
!7087 = !{!7088, !7093}
!7088 = !DIDerivedType(tag: DW_TAG_member, scope: !7086, file: !263, line: 91, baseType: !7089, size: 16)
!7089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7086, file: !263, line: 91, size: 16, elements: !7090)
!7090 = !{!7091, !7092}
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7089, file: !263, line: 96, baseType: !313, size: 8)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7089, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7086, file: !263, line: 100, baseType: !151, size: 16)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7050, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7050, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7050, file: !263, line: 131, baseType: !7097, size: 192, offset: 192)
!7097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !7098)
!7098 = !{!7099, !7100, !7106}
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7097, file: !299, line: 245, baseType: !7056, size: 64)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7097, file: !299, line: 246, baseType: !7101, size: 32, offset: 64)
!7101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !7102)
!7102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7103, size: 32)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{null, !7105}
!7105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7097, size: 32)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7097, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7047, file: !263, line: 250, baseType: !7108, size: 288, offset: 384)
!7108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !7109)
!7109 = !{!7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117, !7118}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7108, file: !334, line: 26, baseType: !137, size: 32)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7108, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7108, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7108, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7108, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7108, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7108, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7108, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7108, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7047, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7047, file: !263, line: 256, baseType: !7078, size: 64, offset: 704)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7047, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7047, file: !263, line: 300, baseType: !7123, size: 96, offset: 800)
!7123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !7124)
!7124 = !{!7125, !7126, !7127}
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7123, file: !263, line: 153, baseType: !22, size: 32)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7123, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7123, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7047, file: !263, line: 325, baseType: !7129, size: 32, offset: 896)
!7129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7130, size: 32)
!7130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !7131)
!7131 = !{!7132, !7138, !7139}
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7130, file: !357, line: 5074, baseType: !7133, size: 96)
!7133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7134)
!7134 = !{!7135, !7136, !7137}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7133, file: !113, line: 57, baseType: !116, size: 32)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7133, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7133, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7130, file: !357, line: 5075, baseType: !7078, size: 64, offset: 96)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7130, file: !357, line: 5076, baseType: !7140, offset: 160)
!7140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7047, file: !263, line: 343, baseType: !7142, size: 64, offset: 928)
!7142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !7143)
!7143 = !{!7144, !7145}
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7142, file: !334, line: 63, baseType: !137, size: 32)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7142, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!7146 = !{!7147}
!7147 = !DILocalVariable(name: "thread", arg: 1, scope: !7041, file: !7042, line: 27, type: !7045)
!7148 = !DILocation(line: 0, scope: !7041)
!7149 = !DILocation(line: 29, column: 6, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7041, file: !7042, line: 29, column: 6)
!7151 = !DILocation(line: 29, column: 15, scope: !7150)
!7152 = !DILocation(line: 29, column: 6, scope: !7041)
!7153 = !DILocation(line: 1031, column: 3, scope: !7154, inlinedAt: !7157)
!7154 = distinct !DISubprogram(name: "__get_IPSR", scope: !6367, file: !6367, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !7155)
!7155 = !{!7156}
!7156 = !DILocalVariable(name: "result", scope: !7154, file: !6367, line: 1029, type: !137)
!7157 = distinct !DILocation(line: 48, column: 10, scope: !7158, inlinedAt: !7162)
!7158 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7159, file: !7159, line: 46, type: !7160, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !162)
!7159 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7160 = !DISubroutineType(types: !7161)
!7161 = !{!211}
!7162 = distinct !DILocation(line: 30, column: 7, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !7042, line: 30, column: 7)
!7164 = distinct !DILexicalBlock(scope: !7150, file: !7042, line: 29, column: 26)
!7165 = !{i64 3723160}
!7166 = !DILocation(line: 0, scope: !7154, inlinedAt: !7157)
!7167 = !DILocation(line: 48, column: 9, scope: !7158, inlinedAt: !7162)
!7168 = !DILocation(line: 30, column: 7, scope: !7164)
!7169 = !DILocation(line: 42, column: 14, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7163, file: !7042, line: 30, column: 25)
!7171 = !DILocation(line: 48, column: 15, scope: !7170)
!7172 = !DILocation(line: 49, column: 3, scope: !7170)
!7173 = !DILocation(line: 52, column: 2, scope: !7041)
!7174 = !DILocation(line: 53, column: 1, scope: !7041)
!7175 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !258, file: !258, line: 127, type: !2885, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !162)
!7176 = !DILocation(line: 134, column: 2, scope: !7175)
!7177 = !DILocation(line: 156, column: 1, scope: !7175)
!7178 = !DILocation(line: 0, scope: !257)
!7179 = !DILocation(line: 289, column: 36, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !257, file: !258, line: 285, column: 2)
!7181 = !DILocation(line: 289, column: 42, scope: !7180)
!7182 = !DILocation(line: 300, column: 36, scope: !257)
!7183 = !DILocation(line: 301, column: 35, scope: !257)
!7184 = !DILocation(line: 302, column: 37, scope: !257)
!7185 = !DILocation(line: 311, column: 2, scope: !257)
!7186 = !DILocation(line: 316, column: 1, scope: !257)
!7187 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !430, file: !430, line: 180, type: !2885, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7188 = !DILocation(line: 188, column: 12, scope: !7187)
!7189 = !DILocation(line: 271, column: 3, scope: !7190, inlinedAt: !7191)
!7190 = distinct !DISubprogram(name: "__DSB", scope: !6367, file: !6367, line: 269, type: !2885, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7191 = distinct !DILocation(line: 192, column: 2, scope: !7187)
!7192 = !{i64 3911062}
!7193 = !DILocation(line: 260, column: 3, scope: !7194, inlinedAt: !7195)
!7194 = distinct !DISubprogram(name: "__ISB", scope: !6367, file: !6367, line: 258, type: !2885, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7195 = distinct !DILocation(line: 193, column: 2, scope: !7187)
!7196 = !{i64 3910779}
!7197 = !DILocation(line: 194, column: 1, scope: !7187)
!7198 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !430, file: !430, line: 199, type: !2885, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7199 = !DILocation(line: 282, column: 3, scope: !7200, inlinedAt: !7201)
!7200 = distinct !DISubprogram(name: "__DMB", scope: !6367, file: !6367, line: 280, type: !2885, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7201 = distinct !DILocation(line: 202, column: 2, scope: !7198)
!7202 = !{i64 3911338}
!7203 = !DILocation(line: 205, column: 12, scope: !7198)
!7204 = !DILocation(line: 206, column: 1, scope: !7198)
!7205 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !430, file: !430, line: 275, type: !7206, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7219)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{null, !7208, !1746, !6633, !6633}
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 32)
!7209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7210)
!7210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !7211)
!7211 = !{!7212, !7213, !7214}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7210, file: !381, line: 53, baseType: !22, size: 32)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7210, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7210, file: !381, line: 55, baseType: !7215, size: 32, offset: 64)
!7215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !7216)
!7216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !7217)
!7217 = !{!7218}
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7216, file: !387, line: 150, baseType: !137, size: 32)
!7219 = !{!7220, !7221, !7222, !7223}
!7220 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7205, file: !430, line: 276, type: !7208)
!7221 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7205, file: !430, line: 276, type: !1746)
!7222 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7205, file: !430, line: 277, type: !6633)
!7223 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7205, file: !430, line: 277, type: !6633)
!7224 = !DILocation(line: 0, scope: !7205)
!7225 = !DILocation(line: 279, column: 6, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7205, file: !430, line: 279, column: 6)
!7227 = !DILocation(line: 285, column: 1, scope: !7205)
!7228 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7229, file: !7229, line: 220, type: !7230, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7232)
!7229 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!103, !7208, !1746, !6633, !6633}
!7232 = !{!7233, !7234, !7235, !7236, !7237}
!7233 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7228, file: !7229, line: 221, type: !7208)
!7234 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7228, file: !7229, line: 221, type: !1746)
!7235 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7228, file: !7229, line: 222, type: !6633)
!7236 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7228, file: !7229, line: 223, type: !6633)
!7237 = !DILocalVariable(name: "mpu_reg_index", scope: !7228, file: !7229, line: 225, type: !103)
!7238 = !DILocation(line: 0, scope: !7228)
!7239 = !DILocation(line: 225, column: 22, scope: !7228)
!7240 = !DILocation(line: 233, column: 18, scope: !7228)
!7241 = !DILocation(line: 236, column: 23, scope: !7228)
!7242 = !DILocation(line: 236, column: 21, scope: !7228)
!7243 = !DILocation(line: 238, column: 2, scope: !7228)
!7244 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !430, file: !430, line: 105, type: !7245, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7247)
!7245 = !DISubroutineType(types: !7246)
!7246 = !{!103, !7208, !208, !208, !211}
!7247 = !{!7248, !7249, !7250, !7251, !7252, !7253}
!7248 = !DILocalVariable(name: "regions", arg: 1, scope: !7244, file: !430, line: 106, type: !7208)
!7249 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7244, file: !430, line: 106, type: !208)
!7250 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7244, file: !430, line: 106, type: !208)
!7251 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7244, file: !430, line: 107, type: !211)
!7252 = !DILocalVariable(name: "i", scope: !7244, file: !430, line: 109, type: !103)
!7253 = !DILocalVariable(name: "reg_index", scope: !7244, file: !430, line: 110, type: !103)
!7254 = !DILocation(line: 0, scope: !7244)
!7255 = !DILocation(line: 110, column: 18, scope: !7244)
!7256 = !DILocation(line: 112, column: 16, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !430, line: 112, column: 2)
!7258 = distinct !DILexicalBlock(scope: !7244, file: !430, line: 112, column: 2)
!7259 = !DILocation(line: 112, column: 2, scope: !7258)
!7260 = !DILocation(line: 113, column: 7, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !430, line: 113, column: 7)
!7262 = distinct !DILexicalBlock(scope: !7257, file: !430, line: 112, column: 36)
!7263 = !DILocation(line: 113, column: 18, scope: !7261)
!7264 = !DILocation(line: 113, column: 23, scope: !7261)
!7265 = !DILocation(line: 113, column: 7, scope: !7262)
!7266 = !DILocation(line: 118, column: 23, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7262, file: !430, line: 118, column: 7)
!7268 = !DILocation(line: 119, column: 7, scope: !7267)
!7269 = !DILocation(line: 118, column: 7, scope: !7262)
!7270 = !DILocation(line: 124, column: 36, scope: !7262)
!7271 = !DILocation(line: 124, column: 15, scope: !7262)
!7272 = !DILocation(line: 126, column: 17, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7262, file: !430, line: 126, column: 7)
!7274 = !DILocation(line: 126, column: 7, scope: !7262)
!7275 = !DILocation(line: 131, column: 12, scope: !7262)
!7276 = !DILocation(line: 132, column: 2, scope: !7262)
!7277 = !DILocation(line: 112, column: 32, scope: !7257)
!7278 = distinct !{!7278, !7259, !7279}
!7279 = !DILocation(line: 132, column: 2, scope: !7258)
!7280 = !DILocation(line: 135, column: 1, scope: !7244)
!7281 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7229, file: !7229, line: 63, type: !7282, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7284)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!103, !7208}
!7284 = !{!7285, !7286}
!7285 = !DILocalVariable(name: "part", arg: 1, scope: !7281, file: !7229, line: 63, type: !7208)
!7286 = !DILocalVariable(name: "partition_is_valid", scope: !7281, file: !7229, line: 70, type: !103)
!7287 = !DILocation(line: 0, scope: !7281)
!7288 = !DILocation(line: 71, column: 11, scope: !7281)
!7289 = !DILocation(line: 71, column: 37, scope: !7281)
!7290 = !DILocation(line: 72, column: 3, scope: !7281)
!7291 = !DILocation(line: 71, column: 30, scope: !7281)
!7292 = !DILocation(line: 75, column: 11, scope: !7281)
!7293 = !DILocation(line: 75, column: 17, scope: !7281)
!7294 = !DILocation(line: 75, column: 38, scope: !7281)
!7295 = !DILocation(line: 77, column: 2, scope: !7281)
!7296 = distinct !DISubprogram(name: "mpu_configure_region", scope: !430, file: !430, line: 79, type: !7297, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7299)
!7297 = !DISubroutineType(types: !7298)
!7298 = !{!103, !1746, !7208}
!7299 = !{!7300, !7301, !7302}
!7300 = !DILocalVariable(name: "index", arg: 1, scope: !7296, file: !430, line: 79, type: !1746)
!7301 = !DILocalVariable(name: "new_region", arg: 2, scope: !7296, file: !430, line: 80, type: !7208)
!7302 = !DILocalVariable(name: "region_conf", scope: !7296, file: !430, line: 82, type: !419)
!7303 = !DILocation(line: 0, scope: !7296)
!7304 = !DILocation(line: 82, column: 2, scope: !7296)
!7305 = !DILocation(line: 82, column: 24, scope: !7296)
!7306 = !DILocation(line: 87, column: 33, scope: !7296)
!7307 = !DILocation(line: 87, column: 14, scope: !7296)
!7308 = !DILocation(line: 87, column: 19, scope: !7296)
!7309 = !DILocation(line: 91, column: 55, scope: !7296)
!7310 = !DILocation(line: 92, column: 16, scope: !7296)
!7311 = !DILocation(line: 92, column: 53, scope: !7296)
!7312 = !DILocation(line: 91, column: 2, scope: !7296)
!7313 = !DILocation(line: 95, column: 9, scope: !7296)
!7314 = !DILocation(line: 97, column: 1, scope: !7296)
!7315 = !DILocation(line: 95, column: 2, scope: !7296)
!7316 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7229, file: !7229, line: 113, type: !7317, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7322)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{null, !7319, !7320, !137, !137}
!7319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 32)
!7321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7215)
!7322 = !{!7323, !7324, !7325, !7326}
!7323 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7316, file: !7229, line: 114, type: !7319)
!7324 = !DILocalVariable(name: "attr", arg: 2, scope: !7316, file: !7229, line: 115, type: !7320)
!7325 = !DILocalVariable(name: "base", arg: 3, scope: !7316, file: !7229, line: 115, type: !137)
!7326 = !DILocalVariable(name: "size", arg: 4, scope: !7316, file: !7229, line: 115, type: !137)
!7327 = !DILocation(line: 0, scope: !7316)
!7328 = !DILocation(line: 127, column: 23, scope: !7316)
!7329 = !DILocation(line: 127, column: 35, scope: !7316)
!7330 = !DILocation(line: 127, column: 33, scope: !7316)
!7331 = !DILocation(line: 127, column: 10, scope: !7316)
!7332 = !DILocation(line: 127, column: 15, scope: !7316)
!7333 = !DILocation(line: 129, column: 1, scope: !7316)
!7334 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !430, file: !430, line: 57, type: !7335, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7337)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{!103, !1746, !417}
!7337 = !{!7338, !7339}
!7338 = !DILocalVariable(name: "index", arg: 1, scope: !7334, file: !430, line: 57, type: !1746)
!7339 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7334, file: !430, line: 58, type: !417)
!7340 = !DILocation(line: 0, scope: !7334)
!7341 = !DILocation(line: 61, column: 6, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7334, file: !430, line: 61, column: 6)
!7343 = !DILocation(line: 61, column: 12, scope: !7342)
!7344 = !DILocation(line: 61, column: 6, scope: !7334)
!7345 = !DILocation(line: 71, column: 2, scope: !7334)
!7346 = !DILocation(line: 73, column: 2, scope: !7334)
!7347 = !DILocation(line: 74, column: 1, scope: !7334)
!7348 = distinct !DISubprogram(name: "region_init", scope: !7229, file: !7229, line: 29, type: !7349, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7351)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{null, !6633, !417}
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "index", arg: 1, scope: !7348, file: !7229, line: 29, type: !6633)
!7353 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7348, file: !7229, line: 30, type: !417)
!7354 = !DILocation(line: 0, scope: !7348)
!7355 = !DILocation(line: 33, column: 2, scope: !7348)
!7356 = !DILocation(line: 47, column: 28, scope: !7348)
!7357 = !DILocation(line: 47, column: 33, scope: !7348)
!7358 = !DILocation(line: 48, column: 26, scope: !7348)
!7359 = !DILocation(line: 47, column: 12, scope: !7348)
!7360 = !DILocation(line: 49, column: 32, scope: !7348)
!7361 = !DILocation(line: 49, column: 37, scope: !7348)
!7362 = !DILocation(line: 49, column: 12, scope: !7348)
!7363 = !DILocation(line: 53, column: 1, scope: !7348)
!7364 = distinct !DISubprogram(name: "set_region_number", scope: !7365, file: !7365, line: 32, type: !6456, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7366)
!7365 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7366 = !{!7367}
!7367 = !DILocalVariable(name: "index", arg: 1, scope: !7364, file: !7365, line: 32, type: !137)
!7368 = !DILocation(line: 0, scope: !7364)
!7369 = !DILocation(line: 34, column: 11, scope: !7364)
!7370 = !DILocation(line: 35, column: 1, scope: !7364)
!7371 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7229, file: !7229, line: 88, type: !7372, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7374)
!7372 = !DISubroutineType(types: !7373)
!7373 = !{!137, !137}
!7374 = !{!7375}
!7375 = !DILocalVariable(name: "size", arg: 1, scope: !7371, file: !7229, line: 88, type: !137)
!7376 = !DILocation(line: 0, scope: !7371)
!7377 = !DILocation(line: 91, column: 11, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7371, file: !7229, line: 91, column: 6)
!7379 = !DILocation(line: 91, column: 6, scope: !7371)
!7380 = !DILocation(line: 100, column: 11, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7371, file: !7229, line: 100, column: 6)
!7382 = !DILocation(line: 100, column: 6, scope: !7371)
!7383 = !DILocation(line: 104, column: 35, scope: !7371)
!7384 = !DILocation(line: 104, column: 16, scope: !7371)
!7385 = !DILocation(line: 104, column: 50, scope: !7371)
!7386 = !DILocation(line: 104, column: 72, scope: !7371)
!7387 = !DILocation(line: 104, column: 2, scope: !7371)
!7388 = !DILocation(line: 106, column: 1, scope: !7371)
!7389 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !430, file: !430, line: 307, type: !7390, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7392)
!7390 = !DISubroutineType(types: !7391)
!7391 = !{null, !7208, !208}
!7392 = !{!7393, !7394}
!7393 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7389, file: !430, line: 308, type: !7208)
!7394 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7389, file: !430, line: 308, type: !208)
!7395 = !DILocation(line: 0, scope: !7389)
!7396 = !DILocation(line: 310, column: 6, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7389, file: !430, line: 310, column: 6)
!7398 = !DILocation(line: 316, column: 1, scope: !7389)
!7399 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7229, file: !7229, line: 249, type: !7400, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7402)
!7400 = !DISubroutineType(types: !7401)
!7401 = !{!103, !7208, !208}
!7402 = !{!7403, !7404, !7405, !7406}
!7403 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7399, file: !7229, line: 250, type: !7208)
!7404 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7399, file: !7229, line: 250, type: !208)
!7405 = !DILocalVariable(name: "mpu_reg_index", scope: !7399, file: !7229, line: 252, type: !103)
!7406 = !DILocalVariable(name: "i", scope: !7407, file: !7229, line: 264, type: !103)
!7407 = distinct !DILexicalBlock(scope: !7408, file: !7229, line: 264, column: 3)
!7408 = distinct !DILexicalBlock(scope: !7409, file: !7229, line: 261, column: 32)
!7409 = distinct !DILexicalBlock(scope: !7399, file: !7229, line: 261, column: 6)
!7410 = !DILocation(line: 0, scope: !7399)
!7411 = !DILocation(line: 252, column: 22, scope: !7399)
!7412 = !DILocation(line: 258, column: 18, scope: !7399)
!7413 = !DILocation(line: 261, column: 20, scope: !7409)
!7414 = !DILocation(line: 261, column: 6, scope: !7399)
!7415 = !DILocation(line: 0, scope: !7407)
!7416 = !DILocation(line: 265, column: 4, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !7229, line: 264, column: 59)
!7418 = distinct !DILexicalBlock(scope: !7407, file: !7229, line: 264, column: 3)
!7419 = !DILocation(line: 264, column: 55, scope: !7418)
!7420 = !DILocation(line: 264, column: 33, scope: !7418)
!7421 = !DILocation(line: 264, column: 3, scope: !7407)
!7422 = distinct !{!7422, !7421, !7423}
!7423 = !DILocation(line: 266, column: 3, scope: !7407)
!7424 = !DILocation(line: 269, column: 2, scope: !7399)
!7425 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7426, file: !7426, line: 218, type: !6456, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7427)
!7426 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7427 = !{!7428}
!7428 = !DILocalVariable(name: "rnr", arg: 1, scope: !7425, file: !7426, line: 218, type: !137)
!7429 = !DILocation(line: 0, scope: !7425)
!7430 = !DILocation(line: 220, column: 12, scope: !7425)
!7431 = !DILocation(line: 221, column: 13, scope: !7425)
!7432 = !DILocation(line: 222, column: 1, scope: !7425)
!7433 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !430, file: !430, line: 326, type: !7434, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7436)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!103}
!7436 = !{!7437}
!7437 = !DILocalVariable(name: "r_index", scope: !7433, file: !430, line: 328, type: !137)
!7438 = !DILocation(line: 330, column: 17, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7433, file: !430, line: 330, column: 6)
!7440 = !DILocation(line: 330, column: 29, scope: !7439)
!7441 = !DILocation(line: 330, column: 6, scope: !7433)
!7442 = !DILocation(line: 347, column: 2, scope: !7433)
!7443 = !DILocation(line: 0, scope: !7433)
!7444 = !DILocation(line: 364, column: 29, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !430, line: 364, column: 2)
!7446 = distinct !DILexicalBlock(scope: !7433, file: !430, line: 364, column: 2)
!7447 = !DILocation(line: 364, column: 2, scope: !7446)
!7448 = !DILocation(line: 365, column: 25, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7445, file: !430, line: 364, column: 66)
!7450 = !DILocation(line: 365, column: 3, scope: !7449)
!7451 = !DILocation(line: 364, column: 62, scope: !7445)
!7452 = distinct !{!7452, !7447, !7453}
!7453 = !DILocation(line: 366, column: 2, scope: !7446)
!7454 = !DILocation(line: 369, column: 23, scope: !7433)
!7455 = !DILocation(line: 369, column: 21, scope: !7433)
!7456 = !DILocation(line: 372, column: 2, scope: !7433)
!7457 = !DILocation(line: 443, column: 2, scope: !7433)
!7458 = !DILocation(line: 444, column: 1, scope: !7433)
!7459 = distinct !DISubprogram(name: "strcpy", scope: !7460, file: !7460, line: 20, type: !7461, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7465)
!7460 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7461 = !DISubroutineType(types: !7462)
!7462 = !{!1040, !7463, !7464}
!7463 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1040)
!7464 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !199)
!7465 = !{!7466, !7467, !7468}
!7466 = !DILocalVariable(name: "d", arg: 1, scope: !7459, file: !7460, line: 20, type: !7463)
!7467 = !DILocalVariable(name: "s", arg: 2, scope: !7459, file: !7460, line: 20, type: !7464)
!7468 = !DILocalVariable(name: "dest", scope: !7459, file: !7460, line: 22, type: !1040)
!7469 = !DILocation(line: 0, scope: !7459)
!7470 = !DILocation(line: 24, column: 9, scope: !7459)
!7471 = !DILocation(line: 24, column: 12, scope: !7459)
!7472 = !DILocation(line: 24, column: 2, scope: !7459)
!7473 = !DILocation(line: 25, column: 6, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7459, file: !7460, line: 24, column: 21)
!7475 = !DILocation(line: 26, column: 4, scope: !7474)
!7476 = !DILocation(line: 27, column: 4, scope: !7474)
!7477 = distinct !{!7477, !7472, !7478}
!7478 = !DILocation(line: 28, column: 2, scope: !7459)
!7479 = !DILocation(line: 30, column: 5, scope: !7459)
!7480 = !DILocation(line: 32, column: 2, scope: !7459)
!7481 = distinct !DISubprogram(name: "strncpy", scope: !7460, file: !7460, line: 42, type: !7482, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7484)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{!1040, !7463, !7464, !120}
!7484 = !{!7485, !7486, !7487, !7488}
!7485 = !DILocalVariable(name: "d", arg: 1, scope: !7481, file: !7460, line: 42, type: !7463)
!7486 = !DILocalVariable(name: "s", arg: 2, scope: !7481, file: !7460, line: 42, type: !7464)
!7487 = !DILocalVariable(name: "n", arg: 3, scope: !7481, file: !7460, line: 42, type: !120)
!7488 = !DILocalVariable(name: "dest", scope: !7481, file: !7460, line: 44, type: !1040)
!7489 = !DILocation(line: 0, scope: !7481)
!7490 = !DILocation(line: 46, column: 12, scope: !7481)
!7491 = !DILocation(line: 46, column: 17, scope: !7481)
!7492 = !DILocation(line: 46, column: 20, scope: !7481)
!7493 = !DILocation(line: 46, column: 23, scope: !7481)
!7494 = !DILocation(line: 46, column: 2, scope: !7481)
!7495 = !DILocation(line: 47, column: 6, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7481, file: !7460, line: 46, column: 32)
!7497 = !DILocation(line: 48, column: 4, scope: !7496)
!7498 = !DILocation(line: 49, column: 4, scope: !7496)
!7499 = !DILocation(line: 50, column: 4, scope: !7496)
!7500 = distinct !{!7500, !7494, !7501}
!7501 = !DILocation(line: 51, column: 2, scope: !7481)
!7502 = !DILocation(line: 54, column: 6, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7481, file: !7460, line: 53, column: 16)
!7504 = !DILocation(line: 55, column: 4, scope: !7503)
!7505 = !DILocation(line: 56, column: 4, scope: !7503)
!7506 = !DILocation(line: 53, column: 11, scope: !7481)
!7507 = !DILocation(line: 53, column: 2, scope: !7481)
!7508 = distinct !{!7508, !7507, !7509}
!7509 = !DILocation(line: 57, column: 2, scope: !7481)
!7510 = !DILocation(line: 59, column: 2, scope: !7481)
!7511 = distinct !DISubprogram(name: "strchr", scope: !7460, file: !7460, line: 69, type: !7512, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7514)
!7512 = !DISubroutineType(types: !7513)
!7513 = !{!1040, !199, !103}
!7514 = !{!7515, !7516, !7517}
!7515 = !DILocalVariable(name: "s", arg: 1, scope: !7511, file: !7460, line: 69, type: !199)
!7516 = !DILocalVariable(name: "c", arg: 2, scope: !7511, file: !7460, line: 69, type: !103)
!7517 = !DILocalVariable(name: "tmp", scope: !7511, file: !7460, line: 71, type: !109)
!7518 = !DILocation(line: 0, scope: !7511)
!7519 = !DILocation(line: 73, column: 2, scope: !7511)
!7520 = !DILocation(line: 73, column: 10, scope: !7511)
!7521 = !DILocation(line: 73, column: 13, scope: !7511)
!7522 = !DILocation(line: 73, column: 21, scope: !7511)
!7523 = !DILocation(line: 74, column: 4, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7511, file: !7460, line: 73, column: 38)
!7525 = distinct !{!7525, !7519, !7526}
!7526 = !DILocation(line: 75, column: 2, scope: !7511)
!7527 = !DILocation(line: 77, column: 9, scope: !7511)
!7528 = !DILocation(line: 77, column: 2, scope: !7511)
!7529 = distinct !DISubprogram(name: "strrchr", scope: !7460, file: !7460, line: 87, type: !7512, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7530)
!7530 = !{!7531, !7532, !7533}
!7531 = !DILocalVariable(name: "s", arg: 1, scope: !7529, file: !7460, line: 87, type: !199)
!7532 = !DILocalVariable(name: "c", arg: 2, scope: !7529, file: !7460, line: 87, type: !103)
!7533 = !DILocalVariable(name: "match", scope: !7529, file: !7460, line: 89, type: !1040)
!7534 = !DILocation(line: 0, scope: !7529)
!7535 = !DILocation(line: 91, column: 2, scope: !7529)
!7536 = !DILocation(line: 92, column: 7, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !7460, line: 92, column: 7)
!7538 = distinct !DILexicalBlock(scope: !7529, file: !7460, line: 91, column: 5)
!7539 = !DILocation(line: 92, column: 10, scope: !7537)
!7540 = !DILocation(line: 92, column: 7, scope: !7538)
!7541 = !DILocation(line: 95, column: 13, scope: !7529)
!7542 = !DILocation(line: 95, column: 2, scope: !7538)
!7543 = distinct !{!7543, !7535, !7544}
!7544 = !DILocation(line: 95, column: 15, scope: !7529)
!7545 = !DILocation(line: 97, column: 2, scope: !7529)
!7546 = distinct !DISubprogram(name: "strlen", scope: !7460, file: !7460, line: 107, type: !7547, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7549)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{!120, !199}
!7549 = !{!7550, !7551}
!7550 = !DILocalVariable(name: "s", arg: 1, scope: !7546, file: !7460, line: 107, type: !199)
!7551 = !DILocalVariable(name: "n", scope: !7546, file: !7460, line: 109, type: !120)
!7552 = !DILocation(line: 0, scope: !7546)
!7553 = !DILocation(line: 111, column: 9, scope: !7546)
!7554 = !DILocation(line: 111, column: 12, scope: !7546)
!7555 = !DILocation(line: 111, column: 2, scope: !7546)
!7556 = !DILocation(line: 112, column: 4, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7546, file: !7460, line: 111, column: 21)
!7558 = !DILocation(line: 113, column: 4, scope: !7557)
!7559 = distinct !{!7559, !7555, !7560}
!7560 = !DILocation(line: 114, column: 2, scope: !7546)
!7561 = !DILocation(line: 116, column: 2, scope: !7546)
!7562 = distinct !DISubprogram(name: "strnlen", scope: !7460, file: !7460, line: 126, type: !7563, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!120, !199, !120}
!7565 = !{!7566, !7567, !7568}
!7566 = !DILocalVariable(name: "s", arg: 1, scope: !7562, file: !7460, line: 126, type: !199)
!7567 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7562, file: !7460, line: 126, type: !120)
!7568 = !DILocalVariable(name: "n", scope: !7562, file: !7460, line: 128, type: !120)
!7569 = !DILocation(line: 0, scope: !7562)
!7570 = !DILocation(line: 130, column: 9, scope: !7562)
!7571 = !DILocation(line: 130, column: 12, scope: !7562)
!7572 = !DILocation(line: 130, column: 20, scope: !7562)
!7573 = !DILocation(line: 130, column: 2, scope: !7562)
!7574 = !DILocation(line: 131, column: 4, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7562, file: !7460, line: 130, column: 35)
!7576 = !DILocation(line: 132, column: 4, scope: !7575)
!7577 = distinct !{!7577, !7573, !7578}
!7578 = !DILocation(line: 133, column: 2, scope: !7562)
!7579 = !DILocation(line: 135, column: 2, scope: !7562)
!7580 = distinct !DISubprogram(name: "strcmp", scope: !7460, file: !7460, line: 145, type: !7581, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7583)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{!103, !199, !199}
!7583 = !{!7584, !7585}
!7584 = !DILocalVariable(name: "s1", arg: 1, scope: !7580, file: !7460, line: 145, type: !199)
!7585 = !DILocalVariable(name: "s2", arg: 2, scope: !7580, file: !7460, line: 145, type: !199)
!7586 = !DILocation(line: 0, scope: !7580)
!7587 = !DILocation(line: 147, column: 10, scope: !7580)
!7588 = !DILocation(line: 147, column: 17, scope: !7580)
!7589 = !DILocation(line: 147, column: 14, scope: !7580)
!7590 = !DILocation(line: 147, column: 22, scope: !7580)
!7591 = !DILocation(line: 148, column: 5, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7580, file: !7460, line: 147, column: 40)
!7593 = !DILocation(line: 149, column: 5, scope: !7592)
!7594 = distinct !{!7594, !7595, !7596}
!7595 = !DILocation(line: 147, column: 2, scope: !7580)
!7596 = !DILocation(line: 150, column: 2, scope: !7580)
!7597 = !DILocation(line: 152, column: 9, scope: !7580)
!7598 = !DILocation(line: 152, column: 15, scope: !7580)
!7599 = !DILocation(line: 152, column: 13, scope: !7580)
!7600 = !DILocation(line: 152, column: 2, scope: !7580)
!7601 = distinct !DISubprogram(name: "strncmp", scope: !7460, file: !7460, line: 162, type: !7602, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7604)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{!103, !199, !199, !120}
!7604 = !{!7605, !7606, !7607}
!7605 = !DILocalVariable(name: "s1", arg: 1, scope: !7601, file: !7460, line: 162, type: !199)
!7606 = !DILocalVariable(name: "s2", arg: 2, scope: !7601, file: !7460, line: 162, type: !199)
!7607 = !DILocalVariable(name: "n", arg: 3, scope: !7601, file: !7460, line: 162, type: !120)
!7608 = !DILocation(line: 0, scope: !7601)
!7609 = !DILocation(line: 164, column: 17, scope: !7601)
!7610 = !DILocation(line: 164, column: 21, scope: !7601)
!7611 = !DILocation(line: 164, column: 28, scope: !7601)
!7612 = !DILocation(line: 164, column: 25, scope: !7601)
!7613 = !DILocation(line: 164, column: 33, scope: !7601)
!7614 = !DILocation(line: 165, column: 5, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7601, file: !7460, line: 164, column: 51)
!7616 = !DILocation(line: 166, column: 5, scope: !7615)
!7617 = !DILocation(line: 167, column: 4, scope: !7615)
!7618 = distinct !{!7618, !7619, !7620}
!7619 = !DILocation(line: 164, column: 2, scope: !7601)
!7620 = !DILocation(line: 168, column: 2, scope: !7601)
!7621 = !DILocation(line: 170, column: 25, scope: !7601)
!7622 = !DILocation(line: 170, column: 31, scope: !7601)
!7623 = !DILocation(line: 170, column: 29, scope: !7601)
!7624 = !DILocation(line: 170, column: 9, scope: !7601)
!7625 = !DILocation(line: 170, column: 2, scope: !7601)
!7626 = distinct !DISubprogram(name: "strtok_r", scope: !7460, file: !7460, line: 180, type: !7627, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7630)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{!1040, !1040, !199, !7629}
!7629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!7630 = !{!7631, !7632, !7633, !7634, !7635}
!7631 = !DILocalVariable(name: "str", arg: 1, scope: !7626, file: !7460, line: 180, type: !1040)
!7632 = !DILocalVariable(name: "sep", arg: 2, scope: !7626, file: !7460, line: 180, type: !199)
!7633 = !DILocalVariable(name: "state", arg: 3, scope: !7626, file: !7460, line: 180, type: !7629)
!7634 = !DILocalVariable(name: "start", scope: !7626, file: !7460, line: 182, type: !1040)
!7635 = !DILocalVariable(name: "end", scope: !7626, file: !7460, line: 182, type: !1040)
!7636 = !DILocation(line: 0, scope: !7626)
!7637 = !DILocation(line: 184, column: 10, scope: !7626)
!7638 = !DILocation(line: 184, column: 22, scope: !7626)
!7639 = !DILocation(line: 187, column: 9, scope: !7626)
!7640 = !DILocation(line: 187, column: 16, scope: !7626)
!7641 = !DILocation(line: 187, column: 19, scope: !7626)
!7642 = !DILocation(line: 187, column: 2, scope: !7626)
!7643 = !DILocation(line: 188, column: 8, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7626, file: !7460, line: 187, column: 40)
!7645 = distinct !{!7645, !7642, !7646}
!7646 = !DILocation(line: 189, column: 2, scope: !7626)
!7647 = !DILocation(line: 198, column: 9, scope: !7626)
!7648 = !DILocation(line: 198, column: 18, scope: !7626)
!7649 = !DILocation(line: 198, column: 17, scope: !7626)
!7650 = !DILocation(line: 198, column: 2, scope: !7626)
!7651 = !DILocation(line: 199, column: 6, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7626, file: !7460, line: 198, column: 37)
!7653 = !DILocation(line: 198, column: 14, scope: !7626)
!7654 = distinct !{!7654, !7650, !7655}
!7655 = !DILocation(line: 200, column: 2, scope: !7626)
!7656 = !DILocation(line: 203, column: 8, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !7460, line: 202, column: 20)
!7658 = distinct !DILexicalBlock(scope: !7626, file: !7460, line: 202, column: 6)
!7659 = !DILocation(line: 204, column: 16, scope: !7657)
!7660 = !DILocation(line: 205, column: 2, scope: !7657)
!7661 = !DILocation(line: 210, column: 1, scope: !7626)
!7662 = distinct !DISubprogram(name: "strcat", scope: !7460, file: !7460, line: 212, type: !7461, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7663)
!7663 = !{!7664, !7665}
!7664 = !DILocalVariable(name: "dest", arg: 1, scope: !7662, file: !7460, line: 212, type: !7463)
!7665 = !DILocalVariable(name: "src", arg: 2, scope: !7662, file: !7460, line: 212, type: !7464)
!7666 = !DILocation(line: 0, scope: !7662)
!7667 = !DILocation(line: 214, column: 16, scope: !7662)
!7668 = !DILocation(line: 214, column: 14, scope: !7662)
!7669 = !DILocation(line: 214, column: 2, scope: !7662)
!7670 = !DILocation(line: 215, column: 2, scope: !7662)
!7671 = distinct !DISubprogram(name: "strncat", scope: !7460, file: !7460, line: 218, type: !7482, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7672)
!7672 = !{!7673, !7674, !7675, !7676, !7677}
!7673 = !DILocalVariable(name: "dest", arg: 1, scope: !7671, file: !7460, line: 218, type: !7463)
!7674 = !DILocalVariable(name: "src", arg: 2, scope: !7671, file: !7460, line: 218, type: !7464)
!7675 = !DILocalVariable(name: "n", arg: 3, scope: !7671, file: !7460, line: 219, type: !120)
!7676 = !DILocalVariable(name: "orig_dest", scope: !7671, file: !7460, line: 221, type: !1040)
!7677 = !DILocalVariable(name: "len", scope: !7671, file: !7460, line: 222, type: !120)
!7678 = !DILocation(line: 0, scope: !7671)
!7679 = !DILocation(line: 222, column: 15, scope: !7671)
!7680 = !DILocation(line: 224, column: 7, scope: !7671)
!7681 = !DILocation(line: 225, column: 14, scope: !7671)
!7682 = !DILocation(line: 225, column: 19, scope: !7671)
!7683 = !DILocation(line: 225, column: 11, scope: !7671)
!7684 = !DILocation(line: 225, column: 23, scope: !7671)
!7685 = !DILocation(line: 225, column: 28, scope: !7671)
!7686 = !DILocation(line: 225, column: 2, scope: !7671)
!7687 = !DILocation(line: 226, column: 17, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7671, file: !7460, line: 225, column: 38)
!7689 = !DILocation(line: 226, column: 8, scope: !7688)
!7690 = !DILocation(line: 226, column: 11, scope: !7688)
!7691 = distinct !{!7691, !7686, !7692}
!7692 = !DILocation(line: 227, column: 2, scope: !7671)
!7693 = !DILocation(line: 228, column: 8, scope: !7671)
!7694 = !DILocation(line: 230, column: 2, scope: !7671)
!7695 = distinct !DISubprogram(name: "memcmp", scope: !7460, file: !7460, line: 239, type: !7696, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7698)
!7696 = !DISubroutineType(types: !7697)
!7697 = !{!103, !13, !13, !120}
!7698 = !{!7699, !7700, !7701, !7702, !7703}
!7699 = !DILocalVariable(name: "m1", arg: 1, scope: !7695, file: !7460, line: 239, type: !13)
!7700 = !DILocalVariable(name: "m2", arg: 2, scope: !7695, file: !7460, line: 239, type: !13)
!7701 = !DILocalVariable(name: "n", arg: 3, scope: !7695, file: !7460, line: 239, type: !120)
!7702 = !DILocalVariable(name: "c1", scope: !7695, file: !7460, line: 241, type: !199)
!7703 = !DILocalVariable(name: "c2", scope: !7695, file: !7460, line: 242, type: !199)
!7704 = !DILocation(line: 0, scope: !7695)
!7705 = !DILocation(line: 244, column: 7, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7695, file: !7460, line: 244, column: 6)
!7707 = !DILocation(line: 244, column: 6, scope: !7695)
!7708 = !DILocation(line: 248, column: 10, scope: !7695)
!7709 = !DILocation(line: 248, column: 14, scope: !7695)
!7710 = !DILocation(line: 248, column: 19, scope: !7695)
!7711 = !DILocation(line: 248, column: 2, scope: !7695)
!7712 = !DILocation(line: 248, column: 23, scope: !7695)
!7713 = !DILocation(line: 248, column: 30, scope: !7695)
!7714 = !DILocation(line: 248, column: 27, scope: !7695)
!7715 = !DILocation(line: 249, column: 5, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7695, file: !7460, line: 248, column: 36)
!7717 = !DILocation(line: 250, column: 5, scope: !7716)
!7718 = distinct !{!7718, !7711, !7719}
!7719 = !DILocation(line: 251, column: 2, scope: !7695)
!7720 = !DILocation(line: 253, column: 9, scope: !7695)
!7721 = !DILocation(line: 253, column: 15, scope: !7695)
!7722 = !DILocation(line: 253, column: 13, scope: !7695)
!7723 = !DILocation(line: 253, column: 2, scope: !7695)
!7724 = !DILocation(line: 254, column: 1, scope: !7695)
!7725 = distinct !DISubprogram(name: "memmove", scope: !7460, file: !7460, line: 263, type: !7726, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7728)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{!102, !102, !13, !120}
!7728 = !{!7729, !7730, !7731, !7732, !7733}
!7729 = !DILocalVariable(name: "d", arg: 1, scope: !7725, file: !7460, line: 263, type: !102)
!7730 = !DILocalVariable(name: "s", arg: 2, scope: !7725, file: !7460, line: 263, type: !13)
!7731 = !DILocalVariable(name: "n", arg: 3, scope: !7725, file: !7460, line: 263, type: !120)
!7732 = !DILocalVariable(name: "dest", scope: !7725, file: !7460, line: 265, type: !1040)
!7733 = !DILocalVariable(name: "src", scope: !7725, file: !7460, line: 266, type: !199)
!7734 = !DILocation(line: 0, scope: !7725)
!7735 = !DILocation(line: 268, column: 21, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7725, file: !7460, line: 268, column: 6)
!7737 = !DILocation(line: 268, column: 28, scope: !7736)
!7738 = !DILocation(line: 268, column: 6, scope: !7725)
!7739 = !DILocation(line: 280, column: 12, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7736, file: !7460, line: 278, column: 9)
!7741 = !DILocation(line: 280, column: 3, scope: !7740)
!7742 = !DILocation(line: 275, column: 5, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !7460, line: 274, column: 17)
!7744 = distinct !DILexicalBlock(scope: !7736, file: !7460, line: 268, column: 33)
!7745 = !DILocation(line: 276, column: 14, scope: !7743)
!7746 = !DILocation(line: 276, column: 4, scope: !7743)
!7747 = !DILocation(line: 276, column: 12, scope: !7743)
!7748 = !DILocation(line: 274, column: 12, scope: !7744)
!7749 = !DILocation(line: 274, column: 3, scope: !7744)
!7750 = distinct !{!7750, !7749, !7751}
!7751 = !DILocation(line: 277, column: 3, scope: !7744)
!7752 = !DILocation(line: 281, column: 12, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7740, file: !7460, line: 280, column: 17)
!7754 = !DILocation(line: 281, column: 10, scope: !7753)
!7755 = !DILocation(line: 282, column: 8, scope: !7753)
!7756 = !DILocation(line: 283, column: 7, scope: !7753)
!7757 = !DILocation(line: 284, column: 5, scope: !7753)
!7758 = distinct !{!7758, !7741, !7759}
!7759 = !DILocation(line: 285, column: 3, scope: !7740)
!7760 = !DILocation(line: 288, column: 2, scope: !7725)
!7761 = distinct !DISubprogram(name: "memcpy", scope: !7460, file: !7460, line: 298, type: !7762, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7766)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!102, !7764, !7765, !120}
!7764 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7765 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7766 = !{!7767, !7768, !7769, !7770, !7771}
!7767 = !DILocalVariable(name: "d", arg: 1, scope: !7761, file: !7460, line: 298, type: !7764)
!7768 = !DILocalVariable(name: "s", arg: 2, scope: !7761, file: !7460, line: 298, type: !7765)
!7769 = !DILocalVariable(name: "n", arg: 3, scope: !7761, file: !7460, line: 298, type: !120)
!7770 = !DILocalVariable(name: "d_byte", scope: !7761, file: !7460, line: 302, type: !873)
!7771 = !DILocalVariable(name: "s_byte", scope: !7761, file: !7460, line: 303, type: !2670)
!7772 = !DILocation(line: 0, scope: !7761)
!7773 = !DILocation(line: 337, column: 11, scope: !7761)
!7774 = !DILocation(line: 337, column: 2, scope: !7761)
!7775 = !DILocation(line: 338, column: 25, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7761, file: !7460, line: 337, column: 16)
!7777 = !DILocation(line: 338, column: 17, scope: !7776)
!7778 = !DILocation(line: 338, column: 11, scope: !7776)
!7779 = !DILocation(line: 338, column: 15, scope: !7776)
!7780 = !DILocation(line: 339, column: 4, scope: !7776)
!7781 = distinct !{!7781, !7774, !7782}
!7782 = !DILocation(line: 340, column: 2, scope: !7761)
!7783 = !DILocation(line: 342, column: 2, scope: !7761)
!7784 = distinct !DISubprogram(name: "memset", scope: !7460, file: !7460, line: 352, type: !7785, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7787)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{!102, !102, !103, !120}
!7787 = !{!7788, !7789, !7790, !7791, !7792}
!7788 = !DILocalVariable(name: "buf", arg: 1, scope: !7784, file: !7460, line: 352, type: !102)
!7789 = !DILocalVariable(name: "c", arg: 2, scope: !7784, file: !7460, line: 352, type: !103)
!7790 = !DILocalVariable(name: "n", arg: 3, scope: !7784, file: !7460, line: 352, type: !120)
!7791 = !DILocalVariable(name: "d_byte", scope: !7784, file: !7460, line: 356, type: !873)
!7792 = !DILocalVariable(name: "c_byte", scope: !7784, file: !7460, line: 357, type: !209)
!7793 = !DILocation(line: 0, scope: !7784)
!7794 = !DILocation(line: 357, column: 25, scope: !7784)
!7795 = !DILocation(line: 389, column: 11, scope: !7784)
!7796 = !DILocation(line: 389, column: 2, scope: !7784)
!7797 = !DILocation(line: 390, column: 11, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7784, file: !7460, line: 389, column: 16)
!7799 = !DILocation(line: 390, column: 15, scope: !7798)
!7800 = !DILocation(line: 391, column: 4, scope: !7798)
!7801 = distinct !{!7801, !7796, !7802}
!7802 = !DILocation(line: 392, column: 2, scope: !7784)
!7803 = !DILocation(line: 394, column: 2, scope: !7784)
!7804 = distinct !DISubprogram(name: "memchr", scope: !7460, file: !7460, line: 404, type: !7805, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !7807)
!7805 = !DISubroutineType(types: !7806)
!7806 = !{!102, !13, !103, !120}
!7807 = !{!7808, !7809, !7810, !7811}
!7808 = !DILocalVariable(name: "s", arg: 1, scope: !7804, file: !7460, line: 404, type: !13)
!7809 = !DILocalVariable(name: "c", arg: 2, scope: !7804, file: !7460, line: 404, type: !103)
!7810 = !DILocalVariable(name: "n", arg: 3, scope: !7804, file: !7460, line: 404, type: !120)
!7811 = !DILocalVariable(name: "p", scope: !7812, file: !7460, line: 407, type: !2670)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7460, line: 406, column: 14)
!7813 = distinct !DILexicalBlock(scope: !7804, file: !7460, line: 406, column: 6)
!7814 = !DILocation(line: 0, scope: !7804)
!7815 = !DILocation(line: 406, column: 8, scope: !7813)
!7816 = !DILocation(line: 406, column: 6, scope: !7804)
!7817 = !DILocation(line: 409, column: 3, scope: !7812)
!7818 = !DILocation(line: 0, scope: !7812)
!7819 = !DILocation(line: 410, column: 8, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !7460, line: 410, column: 8)
!7821 = distinct !DILexicalBlock(scope: !7812, file: !7460, line: 409, column: 6)
!7822 = !DILocation(line: 410, column: 13, scope: !7820)
!7823 = !DILocation(line: 410, column: 8, scope: !7821)
!7824 = distinct !{!7824, !7817, !7825}
!7825 = !DILocation(line: 414, column: 20, scope: !7812)
!7826 = !DILocation(line: 417, column: 2, scope: !7804)
!7827 = !DILocation(line: 418, column: 1, scope: !7804)
!7828 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !440, file: !440, line: 23, type: !3033, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7829)
!7829 = !{!7830}
!7830 = !DILocalVariable(name: "hook", arg: 1, scope: !7828, file: !440, line: 23, type: !128)
!7831 = !DILocation(line: 0, scope: !7828)
!7832 = !DILocation(line: 25, column: 15, scope: !7828)
!7833 = !DILocation(line: 26, column: 1, scope: !7828)
!7834 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !440, file: !440, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7835)
!7835 = !{!7836}
!7836 = !DILocalVariable(name: "c", arg: 1, scope: !7834, file: !440, line: 14, type: !103)
!7837 = !DILocation(line: 0, scope: !7834)
!7838 = !DILocation(line: 18, column: 2, scope: !7834)
!7839 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !440, file: !440, line: 28, type: !7840, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7842)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!103, !103, !436}
!7842 = !{!7843, !7844}
!7843 = !DILocalVariable(name: "c", arg: 1, scope: !7839, file: !440, line: 28, type: !103)
!7844 = !DILocalVariable(name: "stream", arg: 2, scope: !7839, file: !440, line: 28, type: !436)
!7845 = !DILocation(line: 0, scope: !7839)
!7846 = !DILocation(line: 30, column: 27, scope: !7839)
!7847 = !DILocation(line: 30, column: 50, scope: !7839)
!7848 = !DILocation(line: 30, column: 9, scope: !7839)
!7849 = !DILocation(line: 30, column: 2, scope: !7839)
!7850 = distinct !DISubprogram(name: "fputc", scope: !440, file: !440, line: 41, type: !7840, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7851)
!7851 = !{!7852, !7853}
!7852 = !DILocalVariable(name: "c", arg: 1, scope: !7850, file: !440, line: 41, type: !103)
!7853 = !DILocalVariable(name: "stream", arg: 2, scope: !7850, file: !440, line: 41, type: !436)
!7854 = !DILocation(line: 0, scope: !7850)
!7855 = !DILocation(line: 43, column: 9, scope: !7850)
!7856 = !DILocation(line: 43, column: 2, scope: !7850)
!7857 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7858, file: !7858, line: 72, type: !7840, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7859)
!7858 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!7859 = !{!7860, !7861}
!7860 = !DILocalVariable(name: "c", arg: 1, scope: !7857, file: !7858, line: 72, type: !103)
!7861 = !DILocalVariable(name: "stream", arg: 2, scope: !7857, file: !7858, line: 72, type: !436)
!7862 = !DILocation(line: 0, scope: !7857)
!7863 = !DILocation(line: 81, column: 2, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7857, file: !7858, line: 81, column: 2)
!7865 = !{i64 2155123285}
!7866 = !DILocation(line: 82, column: 9, scope: !7857)
!7867 = !DILocation(line: 82, column: 2, scope: !7857)
!7868 = distinct !DISubprogram(name: "fputs", scope: !440, file: !440, line: 46, type: !7869, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7872)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{!103, !7464, !7871}
!7871 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!7872 = !{!7873, !7874, !7875, !7876}
!7873 = !DILocalVariable(name: "s", arg: 1, scope: !7868, file: !440, line: 46, type: !7464)
!7874 = !DILocalVariable(name: "stream", arg: 2, scope: !7868, file: !440, line: 46, type: !7871)
!7875 = !DILocalVariable(name: "len", scope: !7868, file: !440, line: 48, type: !103)
!7876 = !DILocalVariable(name: "ret", scope: !7868, file: !440, line: 49, type: !103)
!7877 = !DILocation(line: 0, scope: !7868)
!7878 = !DILocation(line: 48, column: 12, scope: !7868)
!7879 = !DILocation(line: 51, column: 8, scope: !7868)
!7880 = !DILocation(line: 53, column: 13, scope: !7868)
!7881 = !DILocation(line: 53, column: 9, scope: !7868)
!7882 = !DILocation(line: 53, column: 2, scope: !7868)
!7883 = distinct !DISubprogram(name: "fwrite", scope: !440, file: !440, line: 99, type: !7884, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7886)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!120, !7765, !120, !120, !7871}
!7886 = !{!7887, !7888, !7889, !7890}
!7887 = !DILocalVariable(name: "ptr", arg: 1, scope: !7883, file: !440, line: 99, type: !7765)
!7888 = !DILocalVariable(name: "size", arg: 2, scope: !7883, file: !440, line: 99, type: !120)
!7889 = !DILocalVariable(name: "nitems", arg: 3, scope: !7883, file: !440, line: 99, type: !120)
!7890 = !DILocalVariable(name: "stream", arg: 4, scope: !7883, file: !440, line: 100, type: !7871)
!7891 = !DILocation(line: 0, scope: !7883)
!7892 = !DILocation(line: 102, column: 9, scope: !7883)
!7893 = !DILocation(line: 102, column: 2, scope: !7883)
!7894 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7858, file: !7858, line: 96, type: !7884, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7895)
!7895 = !{!7896, !7897, !7898, !7899}
!7896 = !DILocalVariable(name: "ptr", arg: 1, scope: !7894, file: !7858, line: 96, type: !7765)
!7897 = !DILocalVariable(name: "size", arg: 2, scope: !7894, file: !7858, line: 96, type: !120)
!7898 = !DILocalVariable(name: "nitems", arg: 3, scope: !7894, file: !7858, line: 96, type: !120)
!7899 = !DILocalVariable(name: "stream", arg: 4, scope: !7894, file: !7858, line: 96, type: !7871)
!7900 = !DILocation(line: 0, scope: !7894)
!7901 = !DILocation(line: 107, column: 2, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7894, file: !7858, line: 107, column: 2)
!7903 = !{i64 2155123389}
!7904 = !DILocation(line: 108, column: 9, scope: !7894)
!7905 = !DILocation(line: 108, column: 2, scope: !7894)
!7906 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !440, file: !440, line: 56, type: !7884, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7907)
!7907 = !{!7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915}
!7908 = !DILocalVariable(name: "ptr", arg: 1, scope: !7906, file: !440, line: 56, type: !7765)
!7909 = !DILocalVariable(name: "size", arg: 2, scope: !7906, file: !440, line: 56, type: !120)
!7910 = !DILocalVariable(name: "nitems", arg: 3, scope: !7906, file: !440, line: 57, type: !120)
!7911 = !DILocalVariable(name: "stream", arg: 4, scope: !7906, file: !440, line: 57, type: !7871)
!7912 = !DILocalVariable(name: "i", scope: !7906, file: !440, line: 59, type: !120)
!7913 = !DILocalVariable(name: "j", scope: !7906, file: !440, line: 60, type: !120)
!7914 = !DILocalVariable(name: "p", scope: !7906, file: !440, line: 61, type: !2670)
!7915 = !DILabel(scope: !7906, name: "done", file: !440, line: 82)
!7916 = !DILocation(line: 0, scope: !7906)
!7917 = !DILocation(line: 63, column: 14, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7906, file: !440, line: 63, column: 6)
!7919 = !DILocation(line: 63, column: 24, scope: !7918)
!7920 = !DILocation(line: 72, column: 3, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7906, file: !440, line: 70, column: 5)
!7922 = !DILocation(line: 0, scope: !7921)
!7923 = !DILocation(line: 73, column: 8, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !440, line: 73, column: 8)
!7925 = distinct !DILexicalBlock(scope: !7921, file: !440, line: 72, column: 6)
!7926 = !DILocation(line: 73, column: 29, scope: !7924)
!7927 = !DILocation(line: 73, column: 27, scope: !7924)
!7928 = !DILocation(line: 73, column: 21, scope: !7924)
!7929 = !DILocation(line: 73, column: 33, scope: !7924)
!7930 = !DILocation(line: 73, column: 8, scope: !7925)
!7931 = !DILocation(line: 76, column: 5, scope: !7925)
!7932 = !DILocation(line: 77, column: 14, scope: !7921)
!7933 = !DILocation(line: 77, column: 3, scope: !7925)
!7934 = distinct !{!7934, !7920, !7935}
!7935 = !DILocation(line: 77, column: 17, scope: !7921)
!7936 = !DILocation(line: 79, column: 4, scope: !7921)
!7937 = !DILocation(line: 80, column: 13, scope: !7906)
!7938 = !DILocation(line: 80, column: 2, scope: !7921)
!7939 = distinct !{!7939, !7940, !7941}
!7940 = !DILocation(line: 70, column: 2, scope: !7906)
!7941 = !DILocation(line: 80, column: 16, scope: !7906)
!7942 = !DILocation(line: 82, column: 1, scope: !7906)
!7943 = !DILocation(line: 83, column: 17, scope: !7906)
!7944 = !DILocation(line: 83, column: 2, scope: !7906)
!7945 = !DILocation(line: 84, column: 1, scope: !7906)
!7946 = distinct !DISubprogram(name: "puts", scope: !440, file: !440, line: 106, type: !7947, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7949)
!7947 = !DISubroutineType(types: !7948)
!7948 = !{!103, !199}
!7949 = !{!7950}
!7950 = !DILocalVariable(name: "s", arg: 1, scope: !7946, file: !440, line: 106, type: !199)
!7951 = !DILocation(line: 0, scope: !7946)
!7952 = !DILocation(line: 108, column: 6, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7946, file: !440, line: 108, column: 6)
!7954 = !DILocation(line: 108, column: 23, scope: !7953)
!7955 = !DILocation(line: 108, column: 6, scope: !7946)
!7956 = !DILocation(line: 112, column: 9, scope: !7946)
!7957 = !DILocation(line: 112, column: 29, scope: !7946)
!7958 = !DILocation(line: 112, column: 2, scope: !7946)
!7959 = !DILocation(line: 113, column: 1, scope: !7946)
!7960 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !581, file: !581, line: 368, type: !634, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7961)
!7961 = !{!7962}
!7962 = !DILocalVariable(name: "dev", arg: 1, scope: !7960, file: !581, line: 368, type: !610)
!7963 = !DILocation(line: 0, scope: !7960)
!7964 = !DILocation(line: 370, column: 2, scope: !7960)
!7965 = !DILocation(line: 371, column: 1, scope: !7960)
!7966 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !581, file: !581, line: 243, type: !7967, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7969)
!7967 = !DISubroutineType(types: !7968)
!7968 = !{null, !103, !103, !610}
!7969 = !{!7970, !7971, !7972, !7973, !7975}
!7970 = !DILocalVariable(name: "min", arg: 1, scope: !7966, file: !581, line: 243, type: !103)
!7971 = !DILocalVariable(name: "max", arg: 2, scope: !7966, file: !581, line: 243, type: !103)
!7972 = !DILocalVariable(name: "dev", arg: 3, scope: !7966, file: !581, line: 243, type: !610)
!7973 = !DILocalVariable(name: "data", scope: !7966, file: !581, line: 245, type: !7974)
!7974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 32)
!7975 = !DILocalVariable(name: "line", scope: !7966, file: !581, line: 246, type: !103)
!7976 = !DILocation(line: 0, scope: !7966)
!7977 = !DILocation(line: 245, column: 38, scope: !7966)
!7978 = !DILocation(line: 249, column: 24, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !581, line: 249, column: 2)
!7980 = distinct !DILexicalBlock(scope: !7966, file: !581, line: 249, column: 2)
!7981 = !DILocation(line: 249, column: 2, scope: !7980)
!7982 = !DILocation(line: 251, column: 7, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7984, file: !581, line: 251, column: 7)
!7984 = distinct !DILexicalBlock(scope: !7979, file: !581, line: 249, column: 39)
!7985 = !DILocation(line: 251, column: 7, scope: !7984)
!7986 = !DILocation(line: 253, column: 4, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7983, file: !581, line: 251, column: 36)
!7988 = !DILocation(line: 256, column: 24, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7987, file: !581, line: 256, column: 8)
!7990 = !DILocation(line: 256, column: 9, scope: !7989)
!7991 = !DILocation(line: 256, column: 8, scope: !7987)
!7992 = !DILocation(line: 260, column: 43, scope: !7987)
!7993 = !DILocation(line: 260, column: 4, scope: !7987)
!7994 = !DILocation(line: 261, column: 3, scope: !7987)
!7995 = !DILocation(line: 249, column: 35, scope: !7979)
!7996 = distinct !{!7996, !7981, !7997}
!7997 = !DILocation(line: 262, column: 2, scope: !7980)
!7998 = !DILocation(line: 263, column: 1, scope: !7966)
!7999 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !581, file: !581, line: 158, type: !129, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8000)
!8000 = !{!8001}
!8001 = !DILocalVariable(name: "line", arg: 1, scope: !7999, file: !581, line: 158, type: !103)
!8002 = !DILocation(line: 0, scope: !7999)
!8003 = !DILocation(line: 170, column: 38, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !8005, file: !581, line: 160, column: 17)
!8005 = distinct !DILexicalBlock(scope: !7999, file: !581, line: 160, column: 6)
!8006 = !DILocation(line: 170, column: 10, scope: !8004)
!8007 = !DILocation(line: 176, column: 1, scope: !7999)
!8008 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !581, file: !581, line: 183, type: !8009, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8011)
!8009 = !DISubroutineType(types: !8010)
!8010 = !{null, !103}
!8011 = !{!8012}
!8012 = !DILocalVariable(name: "line", arg: 1, scope: !8008, file: !581, line: 183, type: !103)
!8013 = !DILocation(line: 0, scope: !8008)
!8014 = !DILocation(line: 195, column: 28, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !581, line: 185, column: 17)
!8016 = distinct !DILexicalBlock(scope: !8008, file: !581, line: 185, column: 6)
!8017 = !DILocation(line: 195, column: 3, scope: !8015)
!8018 = !DILocation(line: 200, column: 1, scope: !8008)
!8019 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8020, file: !8020, line: 910, type: !6456, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8021)
!8020 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8021 = !{!8022}
!8022 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8019, file: !8020, line: 910, type: !137)
!8023 = !DILocation(line: 0, scope: !8019)
!8024 = !DILocation(line: 912, column: 3, scope: !8019)
!8025 = !DILocation(line: 913, column: 1, scope: !8019)
!8026 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8020, file: !8020, line: 834, type: !7372, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8027)
!8027 = !{!8028}
!8028 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8026, file: !8020, line: 834, type: !137)
!8029 = !DILocation(line: 0, scope: !8026)
!8030 = !DILocation(line: 836, column: 11, scope: !8026)
!8031 = !DILocation(line: 836, column: 40, scope: !8026)
!8032 = !DILocation(line: 836, column: 3, scope: !8026)
!8033 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !581, file: !581, line: 304, type: !634, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8034)
!8034 = !{!8035}
!8035 = !DILocalVariable(name: "dev", arg: 1, scope: !8033, file: !581, line: 304, type: !610)
!8036 = !DILocation(line: 0, scope: !8033)
!8037 = !DILocation(line: 306, column: 2, scope: !8033)
!8038 = !DILocation(line: 307, column: 1, scope: !8033)
!8039 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !581, file: !581, line: 299, type: !634, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8040)
!8040 = !{!8041}
!8041 = !DILocalVariable(name: "dev", arg: 1, scope: !8039, file: !581, line: 299, type: !610)
!8042 = !DILocation(line: 0, scope: !8039)
!8043 = !DILocation(line: 301, column: 2, scope: !8039)
!8044 = !DILocation(line: 302, column: 1, scope: !8039)
!8045 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !581, file: !581, line: 294, type: !634, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8046)
!8046 = !{!8047}
!8047 = !DILocalVariable(name: "dev", arg: 1, scope: !8045, file: !581, line: 294, type: !610)
!8048 = !DILocation(line: 0, scope: !8045)
!8049 = !DILocation(line: 296, column: 2, scope: !8045)
!8050 = !DILocation(line: 297, column: 1, scope: !8045)
!8051 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !581, file: !581, line: 397, type: !634, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8052)
!8052 = !{!8053}
!8053 = !DILocalVariable(name: "dev", arg: 1, scope: !8051, file: !581, line: 397, type: !610)
!8054 = !DILocation(line: 0, scope: !8051)
!8055 = !DILocation(line: 399, column: 2, scope: !8051)
!8056 = !DILocation(line: 400, column: 1, scope: !8051)
!8057 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !581, file: !581, line: 392, type: !634, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8058)
!8058 = !{!8059}
!8059 = !DILocalVariable(name: "dev", arg: 1, scope: !8057, file: !581, line: 392, type: !610)
!8060 = !DILocation(line: 0, scope: !8057)
!8061 = !DILocation(line: 394, column: 2, scope: !8057)
!8062 = !DILocation(line: 395, column: 1, scope: !8057)
!8063 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !581, file: !581, line: 289, type: !634, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8064)
!8064 = !{!8065}
!8065 = !DILocalVariable(name: "dev", arg: 1, scope: !8063, file: !581, line: 289, type: !610)
!8066 = !DILocation(line: 0, scope: !8063)
!8067 = !DILocation(line: 291, column: 2, scope: !8063)
!8068 = !DILocation(line: 292, column: 1, scope: !8063)
!8069 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !581, file: !581, line: 387, type: !634, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8070)
!8070 = !{!8071}
!8071 = !DILocalVariable(name: "dev", arg: 1, scope: !8069, file: !581, line: 387, type: !610)
!8072 = !DILocation(line: 0, scope: !8069)
!8073 = !DILocation(line: 389, column: 2, scope: !8069)
!8074 = !DILocation(line: 390, column: 1, scope: !8069)
!8075 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !581, file: !581, line: 382, type: !634, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8076)
!8076 = !{!8077}
!8077 = !DILocalVariable(name: "dev", arg: 1, scope: !8075, file: !581, line: 382, type: !610)
!8078 = !DILocation(line: 0, scope: !8075)
!8079 = !DILocation(line: 384, column: 2, scope: !8075)
!8080 = !DILocation(line: 385, column: 1, scope: !8075)
!8081 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !581, file: !581, line: 373, type: !634, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8082)
!8082 = !{!8083}
!8083 = !DILocalVariable(name: "dev", arg: 1, scope: !8081, file: !581, line: 373, type: !610)
!8084 = !DILocation(line: 0, scope: !8081)
!8085 = !DILocation(line: 375, column: 2, scope: !8081)
!8086 = !DILocation(line: 376, column: 1, scope: !8081)
!8087 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !581, file: !581, line: 284, type: !634, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8088)
!8088 = !{!8089}
!8089 = !DILocalVariable(name: "dev", arg: 1, scope: !8087, file: !581, line: 284, type: !610)
!8090 = !DILocation(line: 0, scope: !8087)
!8091 = !DILocation(line: 286, column: 2, scope: !8087)
!8092 = !DILocation(line: 287, column: 1, scope: !8087)
!8093 = distinct !DISubprogram(name: "stm32_exti_init", scope: !581, file: !581, line: 416, type: !608, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8094)
!8094 = !{!8095}
!8095 = !DILocalVariable(name: "dev", arg: 1, scope: !8093, file: !581, line: 416, type: !610)
!8096 = !DILocation(line: 0, scope: !8093)
!8097 = !DILocation(line: 418, column: 2, scope: !8093)
!8098 = !DILocation(line: 420, column: 2, scope: !8093)
!8099 = !DILocation(line: 0, scope: !633)
!8100 = !DILocation(line: 493, column: 2, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !633, file: !581, line: 493, column: 2)
!8102 = !DILocation(line: 497, column: 2, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !633, file: !581, line: 497, column: 2)
!8104 = !DILocation(line: 507, column: 2, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !633, file: !581, line: 507, column: 2)
!8106 = !DILocation(line: 512, column: 2, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !633, file: !581, line: 512, column: 2)
!8108 = !DILocation(line: 516, column: 2, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !633, file: !581, line: 516, column: 2)
!8110 = !DILocation(line: 523, column: 2, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !633, file: !581, line: 523, column: 2)
!8112 = !DILocation(line: 527, column: 2, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !633, file: !581, line: 527, column: 2)
!8114 = !DILocation(line: 581, column: 2, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !633, file: !581, line: 581, column: 2)
!8116 = !DILocation(line: 586, column: 2, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !633, file: !581, line: 586, column: 2)
!8118 = !DILocation(line: 591, column: 2, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !633, file: !581, line: 591, column: 2)
!8120 = !DILocation(line: 595, column: 2, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !633, file: !581, line: 595, column: 2)
!8122 = !DILocation(line: 607, column: 1, scope: !633)
!8123 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !581, file: !581, line: 112, type: !8009, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8124)
!8124 = !{!8125, !8126}
!8125 = !DILocalVariable(name: "line", arg: 1, scope: !8123, file: !581, line: 112, type: !103)
!8126 = !DILocalVariable(name: "irqnum", scope: !8123, file: !581, line: 114, type: !103)
!8127 = !DILocation(line: 0, scope: !8123)
!8128 = !DILocation(line: 121, column: 11, scope: !8123)
!8129 = !DILocation(line: 130, column: 26, scope: !8123)
!8130 = !DILocation(line: 130, column: 2, scope: !8123)
!8131 = !DILocation(line: 134, column: 2, scope: !8123)
!8132 = !DILocation(line: 135, column: 1, scope: !8123)
!8133 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8020, file: !8020, line: 268, type: !6456, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8134)
!8134 = !{!8135}
!8135 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8133, file: !8020, line: 268, type: !137)
!8136 = !DILocation(line: 0, scope: !8133)
!8137 = !DILocation(line: 270, column: 3, scope: !8133)
!8138 = !DILocation(line: 271, column: 1, scope: !8133)
!8139 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !581, file: !581, line: 137, type: !8009, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8140)
!8140 = !{!8141}
!8141 = !DILocalVariable(name: "line", arg: 1, scope: !8139, file: !581, line: 137, type: !103)
!8142 = !DILocation(line: 0, scope: !8139)
!8143 = !DILocation(line: 141, column: 11, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8139, file: !581, line: 141, column: 6)
!8145 = !DILocation(line: 141, column: 6, scope: !8139)
!8146 = !DILocation(line: 145, column: 28, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8144, file: !581, line: 141, column: 17)
!8148 = !DILocation(line: 145, column: 3, scope: !8147)
!8149 = !DILocation(line: 147, column: 2, scope: !8147)
!8150 = !DILocation(line: 151, column: 1, scope: !8139)
!8151 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8020, file: !8020, line: 309, type: !6456, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8152)
!8152 = !{!8153}
!8153 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8151, file: !8020, line: 309, type: !137)
!8154 = !DILocation(line: 0, scope: !8151)
!8155 = !DILocation(line: 311, column: 3, scope: !8151)
!8156 = !DILocation(line: 312, column: 1, scope: !8151)
!8157 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !581, file: !581, line: 202, type: !8158, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{null, !103, !103}
!8160 = !{!8161, !8162}
!8161 = !DILocalVariable(name: "line", arg: 1, scope: !8157, file: !581, line: 202, type: !103)
!8162 = !DILocalVariable(name: "trigger", arg: 2, scope: !8157, file: !581, line: 202, type: !103)
!8163 = !DILocation(line: 0, scope: !8157)
!8164 = !DILocation(line: 211, column: 2, scope: !8157)
!8165 = !DILocation(line: 213, column: 36, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8157, file: !581, line: 211, column: 19)
!8167 = !DILocation(line: 213, column: 3, scope: !8166)
!8168 = !DILocation(line: 214, column: 3, scope: !8166)
!8169 = !DILocation(line: 215, column: 3, scope: !8166)
!8170 = !DILocation(line: 217, column: 35, scope: !8166)
!8171 = !DILocation(line: 217, column: 3, scope: !8166)
!8172 = !DILocation(line: 218, column: 3, scope: !8166)
!8173 = !DILocation(line: 219, column: 3, scope: !8166)
!8174 = !DILocation(line: 221, column: 36, scope: !8166)
!8175 = !DILocation(line: 221, column: 3, scope: !8166)
!8176 = !DILocation(line: 222, column: 3, scope: !8166)
!8177 = !DILocation(line: 223, column: 3, scope: !8166)
!8178 = !DILocation(line: 225, column: 35, scope: !8166)
!8179 = !DILocation(line: 225, column: 3, scope: !8166)
!8180 = !DILocation(line: 226, column: 3, scope: !8166)
!8181 = !DILocation(line: 227, column: 3, scope: !8166)
!8182 = !DILocation(line: 232, column: 1, scope: !8157)
!8183 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8020, file: !8020, line: 573, type: !6456, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8184)
!8184 = !{!8185}
!8185 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8183, file: !8020, line: 573, type: !137)
!8186 = !DILocation(line: 0, scope: !8183)
!8187 = !DILocation(line: 575, column: 3, scope: !8183)
!8188 = !DILocation(line: 577, column: 1, scope: !8183)
!8189 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8020, file: !8020, line: 703, type: !6456, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8190)
!8190 = !{!8191}
!8191 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8189, file: !8020, line: 703, type: !137)
!8192 = !DILocation(line: 0, scope: !8189)
!8193 = !DILocation(line: 705, column: 3, scope: !8189)
!8194 = !DILocation(line: 706, column: 1, scope: !8189)
!8195 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8020, file: !8020, line: 529, type: !6456, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8196)
!8196 = !{!8197}
!8197 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8195, file: !8020, line: 529, type: !137)
!8198 = !DILocation(line: 0, scope: !8195)
!8199 = !DILocation(line: 531, column: 3, scope: !8195)
!8200 = !DILocation(line: 533, column: 1, scope: !8195)
!8201 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8020, file: !8020, line: 661, type: !6456, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8202)
!8202 = !{!8203}
!8203 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8201, file: !8020, line: 661, type: !137)
!8204 = !DILocation(line: 0, scope: !8201)
!8205 = !DILocation(line: 663, column: 3, scope: !8201)
!8206 = !DILocation(line: 664, column: 1, scope: !8201)
!8207 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !581, file: !581, line: 433, type: !8208, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8210)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{!103, !103, !621, !102}
!8210 = !{!8211, !8212, !8213, !8214, !8216}
!8211 = !DILocalVariable(name: "line", arg: 1, scope: !8207, file: !581, line: 433, type: !103)
!8212 = !DILocalVariable(name: "cb", arg: 2, scope: !8207, file: !581, line: 433, type: !621)
!8213 = !DILocalVariable(name: "arg", arg: 3, scope: !8207, file: !581, line: 433, type: !102)
!8214 = !DILocalVariable(name: "dev", scope: !8207, file: !581, line: 435, type: !8215)
!8215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !610)
!8216 = !DILocalVariable(name: "data", scope: !8207, file: !581, line: 436, type: !7974)
!8217 = !DILocation(line: 0, scope: !8207)
!8218 = !DILocation(line: 438, column: 21, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8207, file: !581, line: 438, column: 6)
!8220 = !DILocation(line: 438, column: 6, scope: !8219)
!8221 = !DILocation(line: 438, column: 6, scope: !8207)
!8222 = !DILocation(line: 442, column: 20, scope: !8207)
!8223 = !DILocation(line: 443, column: 17, scope: !8207)
!8224 = !DILocation(line: 443, column: 22, scope: !8207)
!8225 = !DILocation(line: 445, column: 2, scope: !8207)
!8226 = !DILocation(line: 446, column: 1, scope: !8207)
!8227 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !581, file: !581, line: 448, type: !8009, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8228)
!8228 = !{!8229, !8230, !8231}
!8229 = !DILocalVariable(name: "line", arg: 1, scope: !8227, file: !581, line: 448, type: !103)
!8230 = !DILocalVariable(name: "dev", scope: !8227, file: !581, line: 450, type: !8215)
!8231 = !DILocalVariable(name: "data", scope: !8227, file: !581, line: 451, type: !7974)
!8232 = !DILocation(line: 0, scope: !8227)
!8233 = !DILocation(line: 453, column: 17, scope: !8227)
!8234 = !DILocation(line: 453, column: 20, scope: !8227)
!8235 = !DILocation(line: 454, column: 17, scope: !8227)
!8236 = !DILocation(line: 454, column: 22, scope: !8227)
!8237 = !DILocation(line: 455, column: 1, scope: !8227)
!8238 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !772, file: !772, line: 183, type: !810, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8239)
!8239 = !{!8240, !8241, !8242, !8243, !8244}
!8240 = !DILocalVariable(name: "dev", arg: 1, scope: !8238, file: !772, line: 183, type: !801)
!8241 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8238, file: !772, line: 184, type: !812)
!8242 = !DILocalVariable(name: "pclken", scope: !8238, file: !772, line: 186, type: !763)
!8243 = !DILocalVariable(name: "reg", scope: !8238, file: !772, line: 187, type: !1353)
!8244 = !DILocalVariable(name: "reg_val", scope: !8238, file: !772, line: 188, type: !137)
!8245 = !DILocation(line: 0, scope: !8238)
!8246 = !DILocation(line: 192, column: 6, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8238, file: !772, line: 192, column: 6)
!8248 = !DILocation(line: 192, column: 6, scope: !8238)
!8249 = !DILocation(line: 197, column: 52, scope: !8238)
!8250 = !DILocation(line: 197, column: 8, scope: !8238)
!8251 = !DILocation(line: 198, column: 12, scope: !8238)
!8252 = !DILocation(line: 199, column: 21, scope: !8238)
!8253 = !DILocation(line: 199, column: 10, scope: !8238)
!8254 = !DILocation(line: 200, column: 7, scope: !8238)
!8255 = !DILocation(line: 202, column: 2, scope: !8238)
!8256 = !DILocation(line: 203, column: 1, scope: !8238)
!8257 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !772, file: !772, line: 205, type: !810, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8258)
!8258 = !{!8259, !8260, !8261, !8262, !8263}
!8259 = !DILocalVariable(name: "dev", arg: 1, scope: !8257, file: !772, line: 205, type: !801)
!8260 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8257, file: !772, line: 206, type: !812)
!8261 = !DILocalVariable(name: "pclken", scope: !8257, file: !772, line: 208, type: !763)
!8262 = !DILocalVariable(name: "reg", scope: !8257, file: !772, line: 209, type: !1353)
!8263 = !DILocalVariable(name: "reg_val", scope: !8257, file: !772, line: 210, type: !137)
!8264 = !DILocation(line: 0, scope: !8257)
!8265 = !DILocation(line: 214, column: 6, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8257, file: !772, line: 214, column: 6)
!8267 = !DILocation(line: 214, column: 6, scope: !8257)
!8268 = !DILocation(line: 219, column: 52, scope: !8257)
!8269 = !DILocation(line: 219, column: 8, scope: !8257)
!8270 = !DILocation(line: 220, column: 12, scope: !8257)
!8271 = !DILocation(line: 221, column: 22, scope: !8257)
!8272 = !DILocation(line: 221, column: 13, scope: !8257)
!8273 = !DILocation(line: 221, column: 10, scope: !8257)
!8274 = !DILocation(line: 222, column: 7, scope: !8257)
!8275 = !DILocation(line: 224, column: 2, scope: !8257)
!8276 = !DILocation(line: 225, column: 1, scope: !8257)
!8277 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !772, file: !772, line: 262, type: !826, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8278)
!8278 = !{!8279, !8280, !8281, !8282, !8283, !8284, !8285, !8286}
!8279 = !DILocalVariable(name: "clock", arg: 1, scope: !8277, file: !772, line: 262, type: !801)
!8280 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8277, file: !772, line: 263, type: !812)
!8281 = !DILocalVariable(name: "rate", arg: 3, scope: !8277, file: !772, line: 264, type: !149)
!8282 = !DILocalVariable(name: "pclken", scope: !8277, file: !772, line: 266, type: !763)
!8283 = !DILocalVariable(name: "ahb_clock", scope: !8277, file: !772, line: 273, type: !137)
!8284 = !DILocalVariable(name: "apb1_clock", scope: !8277, file: !772, line: 274, type: !137)
!8285 = !DILocalVariable(name: "apb2_clock", scope: !8277, file: !772, line: 276, type: !137)
!8286 = !DILocalVariable(name: "ahb3_clock", scope: !8277, file: !772, line: 286, type: !137)
!8287 = !DILocation(line: 0, scope: !8277)
!8288 = !DILocation(line: 273, column: 23, scope: !8277)
!8289 = !DILocation(line: 299, column: 18, scope: !8277)
!8290 = !DILocation(line: 299, column: 2, scope: !8277)
!8291 = !DILocation(line: 274, column: 24, scope: !8277)
!8292 = !DILocation(line: 319, column: 3, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8277, file: !772, line: 299, column: 23)
!8294 = !DILocation(line: 276, column: 24, scope: !8277)
!8295 = !DILocation(line: 323, column: 3, scope: !8293)
!8296 = !DILocation(line: 346, column: 33, scope: !8293)
!8297 = !DILocation(line: 346, column: 11, scope: !8293)
!8298 = !DILocation(line: 350, column: 3, scope: !8293)
!8299 = !DILocation(line: 354, column: 33, scope: !8293)
!8300 = !DILocation(line: 354, column: 11, scope: !8293)
!8301 = !DILocation(line: 358, column: 3, scope: !8293)
!8302 = !DILocation(line: 374, column: 3, scope: !8293)
!8303 = !DILocation(line: 379, column: 3, scope: !8293)
!8304 = !DILocation(line: 0, scope: !8293)
!8305 = !DILocation(line: 396, column: 1, scope: !8277)
!8306 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !772, file: !772, line: 227, type: !842, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8307)
!8307 = !{!8308, !8309, !8310, !8311, !8312, !8313, !8314, !8315}
!8308 = !DILocalVariable(name: "dev", arg: 1, scope: !8306, file: !772, line: 227, type: !801)
!8309 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8306, file: !772, line: 228, type: !812)
!8310 = !DILocalVariable(name: "data", arg: 3, scope: !8306, file: !772, line: 229, type: !102)
!8311 = !DILocalVariable(name: "pclken", scope: !8306, file: !772, line: 233, type: !763)
!8312 = !DILocalVariable(name: "reg", scope: !8306, file: !772, line: 234, type: !1353)
!8313 = !DILocalVariable(name: "reg_val", scope: !8306, file: !772, line: 235, type: !137)
!8314 = !DILocalVariable(name: "dt_val", scope: !8306, file: !772, line: 235, type: !137)
!8315 = !DILocalVariable(name: "err", scope: !8306, file: !772, line: 236, type: !103)
!8316 = !DILocation(line: 0, scope: !8306)
!8317 = !DILocation(line: 241, column: 30, scope: !8306)
!8318 = !DILocation(line: 241, column: 8, scope: !8306)
!8319 = !DILocation(line: 242, column: 10, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8306, file: !772, line: 242, column: 6)
!8321 = !DILocation(line: 242, column: 6, scope: !8306)
!8322 = !DILocation(line: 247, column: 11, scope: !8306)
!8323 = !DILocation(line: 248, column: 6, scope: !8306)
!8324 = !DILocation(line: 247, column: 44, scope: !8306)
!8325 = !DILocation(line: 250, column: 6, scope: !8306)
!8326 = !DILocation(line: 249, column: 52, scope: !8306)
!8327 = !DILocation(line: 249, column: 8, scope: !8306)
!8328 = !DILocation(line: 251, column: 12, scope: !8306)
!8329 = !DILocation(line: 252, column: 10, scope: !8306)
!8330 = !DILocation(line: 253, column: 7, scope: !8306)
!8331 = !DILocation(line: 255, column: 2, scope: !8306)
!8332 = !DILocation(line: 260, column: 1, scope: !8306)
!8333 = distinct !DISubprogram(name: "enabled_clock", scope: !772, file: !772, line: 100, type: !8334, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8336)
!8334 = !DISubroutineType(types: !8335)
!8335 = !{!103, !137}
!8336 = !{!8337, !8338}
!8337 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8333, file: !772, line: 100, type: !137)
!8338 = !DILocalVariable(name: "r", scope: !8333, file: !772, line: 102, type: !103)
!8339 = !DILocation(line: 0, scope: !8333)
!8340 = !DILocation(line: 104, column: 2, scope: !8333)
!8341 = !DILocation(line: 180, column: 2, scope: !8333)
!8342 = !DILocation(line: 181, column: 1, scope: !8333)
!8343 = distinct !DISubprogram(name: "get_bus_clock", scope: !772, file: !772, line: 79, type: !8344, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8346)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!137, !137, !137}
!8346 = !{!8347, !8348}
!8347 = !DILocalVariable(name: "clock", arg: 1, scope: !8343, file: !772, line: 79, type: !137)
!8348 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8343, file: !772, line: 79, type: !137)
!8349 = !DILocation(line: 0, scope: !8343)
!8350 = !DILocation(line: 81, column: 15, scope: !8343)
!8351 = !DILocation(line: 81, column: 2, scope: !8343)
!8352 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !772, file: !772, line: 68, type: !8353, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8355)
!8353 = !DISubroutineType(types: !8354)
!8354 = !{!137, !137, !103, !103, !103}
!8355 = !{!8356, !8357, !8358, !8359}
!8356 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8352, file: !772, line: 68, type: !137)
!8357 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8352, file: !772, line: 69, type: !103)
!8358 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8352, file: !772, line: 70, type: !103)
!8359 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8352, file: !772, line: 71, type: !103)
!8360 = !DILocation(line: 0, scope: !8352)
!8361 = !DILocation(line: 75, column: 22, scope: !8352)
!8362 = !DILocation(line: 76, column: 13, scope: !8352)
!8363 = !DILocation(line: 75, column: 34, scope: !8352)
!8364 = !DILocation(line: 75, column: 2, scope: !8352)
!8365 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !772, file: !772, line: 641, type: !799, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8366)
!8366 = !{!8367, !8368, !8369}
!8367 = !DILocalVariable(name: "dev", arg: 1, scope: !8365, file: !772, line: 641, type: !801)
!8368 = !DILocalVariable(name: "old_flash_freq", scope: !8365, file: !772, line: 664, type: !137)
!8369 = !DILocalVariable(name: "new_flash_freq", scope: !8365, file: !772, line: 665, type: !137)
!8370 = !DILocation(line: 0, scope: !8365)
!8371 = !DILocation(line: 646, column: 2, scope: !8365)
!8372 = !DILocation(line: 667, column: 19, scope: !8365)
!8373 = !DILocation(line: 674, column: 21, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8365, file: !772, line: 674, column: 6)
!8375 = !DILocation(line: 674, column: 6, scope: !8365)
!8376 = !DILocation(line: 675, column: 3, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8374, file: !772, line: 674, column: 59)
!8378 = !DILocation(line: 676, column: 2, scope: !8377)
!8379 = !DILocation(line: 680, column: 2, scope: !8365)
!8380 = !DILocation(line: 683, column: 2, scope: !8365)
!8381 = !DILocation(line: 690, column: 3, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !772, line: 689, column: 9)
!8383 = distinct !DILexicalBlock(scope: !8365, file: !772, line: 685, column: 6)
!8384 = !DILocation(line: 695, column: 2, scope: !8365)
!8385 = !DILocation(line: 696, column: 2, scope: !8365)
!8386 = !DILocation(line: 696, column: 9, scope: !8365)
!8387 = !DILocation(line: 696, column: 34, scope: !8365)
!8388 = distinct !{!8388, !8385, !8389}
!8389 = !DILocation(line: 697, column: 2, scope: !8365)
!8390 = !DILocation(line: 720, column: 21, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8365, file: !772, line: 720, column: 6)
!8392 = !DILocation(line: 720, column: 6, scope: !8365)
!8393 = !DILocation(line: 721, column: 3, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8391, file: !772, line: 720, column: 60)
!8395 = !DILocation(line: 722, column: 2, scope: !8394)
!8396 = !DILocation(line: 725, column: 18, scope: !8365)
!8397 = !DILocation(line: 728, column: 2, scope: !8365)
!8398 = !DILocation(line: 730, column: 2, scope: !8365)
!8399 = !DILocation(line: 745, column: 2, scope: !8365)
!8400 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8401, file: !8401, line: 3275, type: !135, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8401 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8402 = !DILocation(line: 3277, column: 21, scope: !8400)
!8403 = !DILocation(line: 3277, column: 3, scope: !8400)
!8404 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !772, file: !772, line: 507, type: !2885, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8405 = !DILocation(line: 516, column: 4, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !772, line: 515, column: 10)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !772, line: 513, column: 7)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !772, line: 510, column: 37)
!8409 = distinct !DILexicalBlock(scope: !8404, file: !772, line: 510, column: 6)
!8410 = !DILocation(line: 526, column: 3, scope: !8408)
!8411 = !DILocation(line: 527, column: 3, scope: !8408)
!8412 = !DILocation(line: 527, column: 10, scope: !8408)
!8413 = !DILocation(line: 527, column: 31, scope: !8408)
!8414 = distinct !{!8414, !8411, !8415}
!8415 = !DILocation(line: 529, column: 3, scope: !8408)
!8416 = !DILocation(line: 583, column: 3, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !772, line: 577, column: 37)
!8418 = distinct !DILexicalBlock(scope: !8404, file: !772, line: 577, column: 6)
!8419 = !DILocation(line: 584, column: 3, scope: !8417)
!8420 = !DILocation(line: 584, column: 10, scope: !8417)
!8421 = !DILocation(line: 584, column: 31, scope: !8417)
!8422 = distinct !{!8422, !8419, !8423}
!8423 = !DILocation(line: 585, column: 3, scope: !8417)
!8424 = !DILocation(line: 627, column: 1, scope: !8404)
!8425 = distinct !DISubprogram(name: "set_up_plls", scope: !772, file: !772, line: 448, type: !2885, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8426 = !DILocation(line: 460, column: 6, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8425, file: !772, line: 460, column: 6)
!8428 = !DILocation(line: 460, column: 31, scope: !8427)
!8429 = !DILocation(line: 460, column: 6, scope: !8425)
!8430 = !DILocation(line: 461, column: 3, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8427, file: !772, line: 460, column: 67)
!8432 = !DILocation(line: 462, column: 3, scope: !8431)
!8433 = !DILocation(line: 463, column: 2, scope: !8431)
!8434 = !DILocation(line: 464, column: 2, scope: !8425)
!8435 = !DILocation(line: 488, column: 2, scope: !8425)
!8436 = !DILocation(line: 492, column: 2, scope: !8425)
!8437 = !DILocation(line: 496, column: 2, scope: !8425)
!8438 = !DILocation(line: 499, column: 2, scope: !8425)
!8439 = !DILocation(line: 500, column: 2, scope: !8425)
!8440 = !DILocation(line: 500, column: 9, scope: !8425)
!8441 = !DILocation(line: 500, column: 30, scope: !8425)
!8442 = distinct !{!8442, !8439, !8443}
!8443 = !DILocation(line: 502, column: 2, scope: !8425)
!8444 = !DILocation(line: 505, column: 1, scope: !8425)
!8445 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8401, file: !8401, line: 3224, type: !6456, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8446)
!8446 = !{!8447}
!8447 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8445, file: !8401, line: 3224, type: !137)
!8448 = !DILocation(line: 0, scope: !8445)
!8449 = !DILocation(line: 3226, column: 3, scope: !8445)
!8450 = !DILocation(line: 3227, column: 1, scope: !8445)
!8451 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8401, file: !8401, line: 3188, type: !6456, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8452)
!8452 = !{!8453}
!8453 = !DILocalVariable(name: "Source", arg: 1, scope: !8451, file: !8401, line: 3188, type: !137)
!8454 = !DILocation(line: 0, scope: !8451)
!8455 = !DILocation(line: 3190, column: 3, scope: !8451)
!8456 = !DILocation(line: 3191, column: 1, scope: !8451)
!8457 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8401, file: !8401, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8458 = !DILocation(line: 3206, column: 21, scope: !8457)
!8459 = !DILocation(line: 3206, column: 3, scope: !8457)
!8460 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8401, file: !8401, line: 3240, type: !6456, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8461)
!8461 = !{!8462}
!8462 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8460, file: !8401, line: 3240, type: !137)
!8463 = !DILocation(line: 0, scope: !8460)
!8464 = !DILocation(line: 3242, column: 3, scope: !8460)
!8465 = !DILocation(line: 3243, column: 1, scope: !8460)
!8466 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8401, file: !8401, line: 3256, type: !6456, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !8467)
!8467 = !{!8468}
!8468 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8466, file: !8401, line: 3256, type: !137)
!8469 = !DILocation(line: 0, scope: !8466)
!8470 = !DILocation(line: 3258, column: 3, scope: !8466)
!8471 = !DILocation(line: 3259, column: 1, scope: !8466)
!8472 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !772, file: !772, line: 409, type: !2885, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8473 = !DILocation(line: 412, column: 6, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8472, file: !772, line: 412, column: 6)
!8475 = !DILocation(line: 412, column: 27, scope: !8474)
!8476 = !DILocation(line: 412, column: 6, scope: !8472)
!8477 = !DILocation(line: 414, column: 3, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8474, file: !772, line: 412, column: 33)
!8479 = !DILocation(line: 415, column: 3, scope: !8478)
!8480 = !DILocation(line: 415, column: 10, scope: !8478)
!8481 = !DILocation(line: 415, column: 31, scope: !8478)
!8482 = distinct !{!8482, !8479, !8483}
!8483 = !DILocation(line: 417, column: 3, scope: !8478)
!8484 = !DILocation(line: 421, column: 2, scope: !8472)
!8485 = !DILocation(line: 422, column: 2, scope: !8472)
!8486 = !DILocation(line: 422, column: 9, scope: !8472)
!8487 = !DILocation(line: 422, column: 34, scope: !8472)
!8488 = distinct !{!8488, !8485, !8489}
!8489 = !DILocation(line: 423, column: 2, scope: !8472)
!8490 = !DILocation(line: 424, column: 1, scope: !8472)
!8491 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8401, file: !8401, line: 4195, type: !2885, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8492 = !DILocation(line: 4197, column: 3, scope: !8491)
!8493 = !DILocation(line: 4198, column: 1, scope: !8491)
!8494 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8401, file: !8401, line: 4184, type: !2885, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8495 = !DILocation(line: 4186, column: 3, scope: !8494)
!8496 = !DILocation(line: 4187, column: 1, scope: !8494)
!8497 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8401, file: !8401, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8498 = !DILocation(line: 4207, column: 11, scope: !8497)
!8499 = !DILocation(line: 4207, column: 44, scope: !8497)
!8500 = !DILocation(line: 4207, column: 3, scope: !8497)
!8501 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8401, file: !8401, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8502 = !DILocation(line: 3009, column: 11, scope: !8501)
!8503 = !DILocation(line: 3009, column: 44, scope: !8501)
!8504 = !DILocation(line: 3009, column: 3, scope: !8501)
!8505 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8401, file: !8401, line: 2987, type: !2885, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8506 = !DILocation(line: 2989, column: 3, scope: !8505)
!8507 = !DILocation(line: 2990, column: 1, scope: !8505)
!8508 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8401, file: !8401, line: 2939, type: !2885, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8509 = !DILocation(line: 2941, column: 3, scope: !8508)
!8510 = !DILocation(line: 2942, column: 1, scope: !8508)
!8511 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8401, file: !8401, line: 2949, type: !2885, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8512 = !DILocation(line: 2951, column: 3, scope: !8511)
!8513 = !DILocation(line: 2952, column: 1, scope: !8511)
!8514 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8401, file: !8401, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8515 = !DILocation(line: 2971, column: 11, scope: !8514)
!8516 = !DILocation(line: 2971, column: 44, scope: !8514)
!8517 = !DILocation(line: 2971, column: 3, scope: !8514)
!8518 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8401, file: !8401, line: 3143, type: !2885, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8519 = !DILocation(line: 3145, column: 3, scope: !8518)
!8520 = !DILocation(line: 3146, column: 1, scope: !8518)
!8521 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8401, file: !8401, line: 3163, type: !135, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !708, retainedNodes: !162)
!8522 = !DILocation(line: 3165, column: 11, scope: !8521)
!8523 = !DILocation(line: 3165, column: 46, scope: !8521)
!8524 = !DILocation(line: 3165, column: 3, scope: !8521)
!8525 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8526, file: !8526, line: 40, type: !135, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !162)
!8526 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8527 = !DILocation(line: 45, column: 3, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !8526, line: 44, column: 44)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !8526, line: 44, column: 13)
!8530 = distinct !DILexicalBlock(scope: !8525, file: !8526, line: 42, column: 6)
!8531 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8526, file: !8526, line: 56, type: !2885, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !162)
!8532 = !DILocation(line: 58, column: 2, scope: !8531)
!8533 = !DILocation(line: 62, column: 1, scope: !8531)
!8534 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8401, file: !8401, line: 4304, type: !8535, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !8537)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{null, !137, !137, !137, !137}
!8537 = !{!8538, !8539, !8540, !8541}
!8538 = !DILocalVariable(name: "Source", arg: 1, scope: !8534, file: !8401, line: 4304, type: !137)
!8539 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8534, file: !8401, line: 4304, type: !137)
!8540 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8534, file: !8401, line: 4304, type: !137)
!8541 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8534, file: !8401, line: 4304, type: !137)
!8542 = !DILocation(line: 0, scope: !8534)
!8543 = !DILocation(line: 4306, column: 3, scope: !8534)
!8544 = !DILocation(line: 4308, column: 3, scope: !8534)
!8545 = !DILocation(line: 4310, column: 3, scope: !8534)
!8546 = !DILocation(line: 4312, column: 1, scope: !8534)
!8547 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8526, file: !8526, line: 69, type: !2885, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !162)
!8548 = !DILocation(line: 72, column: 2, scope: !8547)
!8549 = !DILocation(line: 73, column: 1, scope: !8547)
!8550 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8551, file: !8551, line: 1185, type: !6456, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !8552)
!8551 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8552 = !{!8553, !8554}
!8553 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8550, file: !8551, line: 1185, type: !137)
!8554 = !DILocalVariable(name: "tmpreg", scope: !8550, file: !8551, line: 1187, type: !176)
!8555 = !DILocation(line: 0, scope: !8550)
!8556 = !DILocation(line: 1187, column: 3, scope: !8550)
!8557 = !DILocation(line: 1187, column: 17, scope: !8550)
!8558 = !DILocation(line: 1188, column: 3, scope: !8550)
!8559 = !DILocation(line: 1190, column: 12, scope: !8550)
!8560 = !DILocation(line: 1190, column: 10, scope: !8550)
!8561 = !DILocation(line: 1191, column: 9, scope: !8550)
!8562 = !DILocation(line: 1192, column: 1, scope: !8550)
!8563 = distinct !DISubprogram(name: "uart_console_init", scope: !903, file: !903, line: 588, type: !880, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !8564)
!8564 = !{!8565}
!8565 = !DILocalVariable(name: "arg", arg: 1, scope: !8563, file: !903, line: 588, type: !858)
!8566 = !DILocation(line: 0, scope: !8563)
!8567 = !DILocation(line: 593, column: 7, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8563, file: !903, line: 593, column: 6)
!8569 = !DILocation(line: 593, column: 6, scope: !8563)
!8570 = !DILocation(line: 597, column: 2, scope: !8563)
!8571 = !DILocation(line: 599, column: 2, scope: !8563)
!8572 = !DILocation(line: 600, column: 1, scope: !8563)
!8573 = distinct !DISubprogram(name: "device_is_ready", scope: !8574, file: !8574, line: 47, type: !8575, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !8577)
!8574 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!8575 = !DISubroutineType(types: !8576)
!8576 = !{!211, !858}
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "dev", arg: 1, scope: !8573, file: !8574, line: 47, type: !858)
!8579 = !DILocation(line: 0, scope: !8573)
!8580 = !DILocation(line: 55, column: 2, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8573, file: !8574, line: 55, column: 2)
!8582 = !{i64 2155286378}
!8583 = !DILocation(line: 56, column: 9, scope: !8573)
!8584 = !DILocation(line: 56, column: 2, scope: !8573)
!8585 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !903, file: !903, line: 573, type: !2885, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !162)
!8586 = !DILocation(line: 576, column: 2, scope: !8585)
!8587 = !DILocation(line: 579, column: 2, scope: !8585)
!8588 = !DILocation(line: 581, column: 1, scope: !8585)
!8589 = distinct !DISubprogram(name: "console_out", scope: !903, file: !903, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !8590)
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "c", arg: 1, scope: !8589, file: !903, line: 77, type: !103)
!8592 = !DILocation(line: 0, scope: !8589)
!8593 = !DILocation(line: 89, column: 11, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8589, file: !903, line: 89, column: 6)
!8595 = !DILocation(line: 89, column: 6, scope: !8589)
!8596 = !DILocation(line: 90, column: 3, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8594, file: !903, line: 89, column: 17)
!8598 = !DILocation(line: 91, column: 2, scope: !8597)
!8599 = !DILocation(line: 92, column: 34, scope: !8589)
!8600 = !DILocation(line: 92, column: 2, scope: !8589)
!8601 = !DILocation(line: 94, column: 2, scope: !8589)
!8602 = distinct !DISubprogram(name: "uart_poll_out", scope: !8603, file: !8603, line: 95, type: !876, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !8604)
!8603 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sys_heap")
!8604 = !{!8605, !8606}
!8605 = !DILocalVariable(name: "dev", arg: 1, scope: !8602, file: !8603, line: 95, type: !858)
!8606 = !DILocalVariable(name: "out_char", arg: 2, scope: !8602, file: !8603, line: 95, type: !209)
!8607 = !DILocation(line: 0, scope: !8602)
!8608 = !DILocation(line: 105, column: 2, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8602, file: !8603, line: 105, column: 2)
!8610 = !{i64 2155369769}
!8611 = !DILocation(line: 106, column: 2, scope: !8602)
!8612 = !DILocation(line: 107, column: 1, scope: !8602)
!8613 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !852, file: !852, line: 574, type: !876, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !8614)
!8614 = !{!8615, !8616, !8617}
!8615 = !DILocalVariable(name: "dev", arg: 1, scope: !8613, file: !852, line: 574, type: !858)
!8616 = !DILocalVariable(name: "out_char", arg: 2, scope: !8613, file: !852, line: 575, type: !209)
!8617 = !DILocalVariable(name: "api", scope: !8613, file: !852, line: 577, type: !849)
!8618 = !DILocation(line: 0, scope: !8613)
!8619 = !DILocation(line: 578, column: 40, scope: !8613)
!8620 = !DILocation(line: 580, column: 7, scope: !8613)
!8621 = !DILocation(line: 580, column: 2, scope: !8613)
!8622 = !DILocation(line: 581, column: 1, scope: !8613)
!8623 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !8575, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !8624)
!8624 = !{!8625}
!8625 = !DILocalVariable(name: "dev", arg: 1, scope: !8623, file: !196, line: 730, type: !858)
!8626 = !DILocation(line: 0, scope: !8623)
!8627 = !DILocation(line: 732, column: 9, scope: !8623)
!8628 = !DILocation(line: 732, column: 2, scope: !8623)
!8629 = distinct !DISubprogram(name: "uart_register_input", scope: !903, file: !903, line: 560, type: !8630, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !8675)
!8630 = !DISubroutineType(types: !8631)
!8631 = !{null, !8632, !8632, !8672}
!8632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8633, size: 32)
!8633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !357, line: 2208, size: 128, elements: !8634)
!8634 = !{!8635}
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8633, file: !357, line: 2209, baseType: !8636, size: 128)
!8636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !357, line: 1709, size: 128, elements: !8637)
!8637 = !{!8638, !8651, !8653}
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8636, file: !357, line: 1710, baseType: !8639, size: 64)
!8639 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8640, line: 46, baseType: !8641)
!8640 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8640, line: 41, size: 64, elements: !8642)
!8642 = !{!8643, !8650}
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8641, file: !8640, line: 42, baseType: !8644, size: 32)
!8644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8645, size: 32)
!8645 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8640, line: 39, baseType: !8646)
!8646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8640, line: 35, size: 32, elements: !8647)
!8647 = !{!8648}
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8646, file: !8640, line: 36, baseType: !8649, size: 32)
!8649 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8640, line: 32, baseType: !137)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8641, file: !8640, line: 43, baseType: !8644, size: 32, offset: 32)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8636, file: !357, line: 1711, baseType: !8652, offset: 64)
!8652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8636, file: !357, line: 1712, baseType: !8654, size: 64, offset: 64)
!8654 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !8655)
!8655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !8656)
!8656 = !{!8657}
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8655, file: !299, line: 232, baseType: !8658, size: 64)
!8658 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !8659)
!8659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !8660)
!8660 = !{!8661, !8667}
!8661 = !DIDerivedType(tag: DW_TAG_member, scope: !8659, file: !273, line: 38, baseType: !8662, size: 32)
!8662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8659, file: !273, line: 38, size: 32, elements: !8663)
!8663 = !{!8664, !8666}
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8662, file: !273, line: 39, baseType: !8665, size: 32)
!8665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8659, size: 32)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8662, file: !273, line: 40, baseType: !8665, size: 32)
!8667 = !DIDerivedType(tag: DW_TAG_member, scope: !8659, file: !273, line: 42, baseType: !8668, size: 32, offset: 32)
!8668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8659, file: !273, line: 42, size: 32, elements: !8669)
!8669 = !{!8670, !8671}
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8668, file: !273, line: 43, baseType: !8665, size: 32)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8668, file: !273, line: 44, baseType: !8665, size: 32)
!8672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8673, size: 32)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{!208, !1040, !208}
!8675 = !{!8676, !8677, !8678}
!8676 = !DILocalVariable(name: "avail", arg: 1, scope: !8629, file: !903, line: 560, type: !8632)
!8677 = !DILocalVariable(name: "lines", arg: 2, scope: !8629, file: !903, line: 560, type: !8632)
!8678 = !DILocalVariable(name: "completion", arg: 3, scope: !8629, file: !903, line: 561, type: !8672)
!8679 = !DILocation(line: 0, scope: !8629)
!8680 = !DILocation(line: 566, column: 1, scope: !8629)
!8681 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1084, file: !1084, line: 523, type: !939, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8682)
!8682 = !{!8683, !8684, !8685, !8686, !8687}
!8683 = !DILocalVariable(name: "dev", arg: 1, scope: !8681, file: !1084, line: 523, type: !941)
!8684 = !DILocalVariable(name: "pin", arg: 2, scope: !8681, file: !1084, line: 524, type: !956)
!8685 = !DILocalVariable(name: "flags", arg: 3, scope: !8681, file: !1084, line: 524, type: !957)
!8686 = !DILocalVariable(name: "err", scope: !8681, file: !1084, line: 526, type: !103)
!8687 = !DILocalVariable(name: "pincfg", scope: !8681, file: !1084, line: 527, type: !103)
!8688 = !DILocation(line: 0, scope: !8681)
!8689 = !DILocation(line: 527, column: 2, scope: !8681)
!8690 = !DILocation(line: 532, column: 8, scope: !8681)
!8691 = !DILocation(line: 533, column: 10, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8681, file: !1084, line: 533, column: 6)
!8693 = !DILocation(line: 533, column: 6, scope: !8681)
!8694 = !DILocation(line: 543, column: 13, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8681, file: !1084, line: 543, column: 6)
!8696 = !DILocation(line: 543, column: 28, scope: !8695)
!8697 = !DILocation(line: 543, column: 6, scope: !8681)
!8698 = !DILocation(line: 544, column: 14, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !1084, line: 544, column: 7)
!8700 = distinct !DILexicalBlock(scope: !8695, file: !1084, line: 543, column: 34)
!8701 = !DILocation(line: 544, column: 39, scope: !8699)
!8702 = !DILocation(line: 544, column: 7, scope: !8700)
!8703 = !DILocation(line: 545, column: 38, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8699, file: !1084, line: 544, column: 45)
!8705 = !DILocation(line: 545, column: 4, scope: !8704)
!8706 = !DILocation(line: 546, column: 3, scope: !8704)
!8707 = !DILocation(line: 546, column: 21, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !1084, line: 546, column: 14)
!8709 = !DILocation(line: 546, column: 45, scope: !8708)
!8710 = !DILocation(line: 546, column: 14, scope: !8699)
!8711 = !DILocation(line: 547, column: 40, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8708, file: !1084, line: 546, column: 51)
!8713 = !DILocation(line: 547, column: 4, scope: !8712)
!8714 = !DILocation(line: 548, column: 3, scope: !8712)
!8715 = !DILocation(line: 551, column: 32, scope: !8681)
!8716 = !DILocation(line: 551, column: 37, scope: !8681)
!8717 = !DILocation(line: 551, column: 2, scope: !8681)
!8718 = !DILocation(line: 554, column: 6, scope: !8681)
!8719 = !DILocation(line: 562, column: 1, scope: !8681)
!8720 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1084, file: !1084, line: 410, type: !8721, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8723)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!103, !941, !149}
!8723 = !{!8724, !8725, !8726, !8728}
!8724 = !DILocalVariable(name: "dev", arg: 1, scope: !8720, file: !1084, line: 410, type: !941)
!8725 = !DILocalVariable(name: "value", arg: 2, scope: !8720, file: !1084, line: 410, type: !149)
!8726 = !DILocalVariable(name: "cfg", scope: !8720, file: !1084, line: 412, type: !8727)
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!8728 = !DILocalVariable(name: "gpio", scope: !8720, file: !1084, line: 413, type: !1014)
!8729 = !DILocation(line: 0, scope: !8720)
!8730 = !DILocation(line: 412, column: 45, scope: !8720)
!8731 = !DILocation(line: 413, column: 44, scope: !8720)
!8732 = !DILocation(line: 415, column: 11, scope: !8720)
!8733 = !DILocation(line: 415, column: 9, scope: !8720)
!8734 = !DILocation(line: 417, column: 2, scope: !8720)
!8735 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1084, file: !1084, line: 420, type: !966, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8736)
!8736 = !{!8737, !8738, !8739, !8740, !8741, !8742}
!8737 = !DILocalVariable(name: "dev", arg: 1, scope: !8735, file: !1084, line: 420, type: !941)
!8738 = !DILocalVariable(name: "mask", arg: 2, scope: !8735, file: !1084, line: 421, type: !968)
!8739 = !DILocalVariable(name: "value", arg: 3, scope: !8735, file: !1084, line: 422, type: !963)
!8740 = !DILocalVariable(name: "cfg", scope: !8735, file: !1084, line: 424, type: !8727)
!8741 = !DILocalVariable(name: "gpio", scope: !8735, file: !1084, line: 425, type: !1014)
!8742 = !DILocalVariable(name: "port_value", scope: !8735, file: !1084, line: 426, type: !137)
!8743 = !DILocation(line: 0, scope: !8735)
!8744 = !DILocation(line: 424, column: 45, scope: !8735)
!8745 = !DILocation(line: 425, column: 44, scope: !8735)
!8746 = !DILocation(line: 430, column: 15, scope: !8735)
!8747 = !DILocation(line: 431, column: 46, scope: !8735)
!8748 = !DILocation(line: 431, column: 44, scope: !8735)
!8749 = !DILocation(line: 431, column: 61, scope: !8735)
!8750 = !DILocation(line: 431, column: 53, scope: !8735)
!8751 = !DILocation(line: 431, column: 2, scope: !8735)
!8752 = !DILocation(line: 435, column: 2, scope: !8735)
!8753 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1084, file: !1084, line: 438, type: !971, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8754)
!8754 = !{!8755, !8756, !8757, !8758}
!8755 = !DILocalVariable(name: "dev", arg: 1, scope: !8753, file: !1084, line: 438, type: !941)
!8756 = !DILocalVariable(name: "pins", arg: 2, scope: !8753, file: !1084, line: 439, type: !968)
!8757 = !DILocalVariable(name: "cfg", scope: !8753, file: !1084, line: 441, type: !8727)
!8758 = !DILocalVariable(name: "gpio", scope: !8753, file: !1084, line: 442, type: !1014)
!8759 = !DILocation(line: 0, scope: !8753)
!8760 = !DILocation(line: 441, column: 45, scope: !8753)
!8761 = !DILocation(line: 442, column: 44, scope: !8753)
!8762 = !DILocation(line: 448, column: 2, scope: !8753)
!8763 = !DILocation(line: 450, column: 2, scope: !8753)
!8764 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1084, file: !1084, line: 453, type: !971, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8765)
!8765 = !{!8766, !8767, !8768, !8769}
!8766 = !DILocalVariable(name: "dev", arg: 1, scope: !8764, file: !1084, line: 453, type: !941)
!8767 = !DILocalVariable(name: "pins", arg: 2, scope: !8764, file: !1084, line: 454, type: !968)
!8768 = !DILocalVariable(name: "cfg", scope: !8764, file: !1084, line: 456, type: !8727)
!8769 = !DILocalVariable(name: "gpio", scope: !8764, file: !1084, line: 457, type: !1014)
!8770 = !DILocation(line: 0, scope: !8764)
!8771 = !DILocation(line: 456, column: 45, scope: !8764)
!8772 = !DILocation(line: 457, column: 44, scope: !8764)
!8773 = !DILocation(line: 467, column: 2, scope: !8764)
!8774 = !DILocation(line: 470, column: 2, scope: !8764)
!8775 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1084, file: !1084, line: 473, type: !971, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8776)
!8776 = !{!8777, !8778, !8779, !8780}
!8777 = !DILocalVariable(name: "dev", arg: 1, scope: !8775, file: !1084, line: 473, type: !941)
!8778 = !DILocalVariable(name: "pins", arg: 2, scope: !8775, file: !1084, line: 474, type: !968)
!8779 = !DILocalVariable(name: "cfg", scope: !8775, file: !1084, line: 476, type: !8727)
!8780 = !DILocalVariable(name: "gpio", scope: !8775, file: !1084, line: 477, type: !1014)
!8781 = !DILocation(line: 0, scope: !8775)
!8782 = !DILocation(line: 476, column: 45, scope: !8775)
!8783 = !DILocation(line: 477, column: 44, scope: !8775)
!8784 = !DILocation(line: 484, column: 2, scope: !8775)
!8785 = !DILocation(line: 487, column: 2, scope: !8775)
!8786 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1084, file: !1084, line: 594, type: !977, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8787)
!8787 = !{!8788, !8789, !8790, !8791, !8792, !8793, !8795, !8796, !8797}
!8788 = !DILocalVariable(name: "dev", arg: 1, scope: !8786, file: !1084, line: 594, type: !941)
!8789 = !DILocalVariable(name: "pin", arg: 2, scope: !8786, file: !1084, line: 595, type: !956)
!8790 = !DILocalVariable(name: "mode", arg: 3, scope: !8786, file: !1084, line: 596, type: !915)
!8791 = !DILocalVariable(name: "trig", arg: 4, scope: !8786, file: !1084, line: 597, type: !921)
!8792 = !DILocalVariable(name: "cfg", scope: !8786, file: !1084, line: 599, type: !8727)
!8793 = !DILocalVariable(name: "data", scope: !8786, file: !1084, line: 600, type: !8794)
!8794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!8795 = !DILocalVariable(name: "edge", scope: !8786, file: !1084, line: 601, type: !103)
!8796 = !DILocalVariable(name: "err", scope: !8786, file: !1084, line: 602, type: !103)
!8797 = !DILabel(scope: !8786, name: "exit", file: !1084, line: 643)
!8798 = !DILocation(line: 0, scope: !8786)
!8799 = !DILocation(line: 599, column: 45, scope: !8786)
!8800 = !DILocation(line: 604, column: 6, scope: !8786)
!8801 = !DILocation(line: 605, column: 34, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !1084, line: 605, column: 7)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !1084, line: 604, column: 38)
!8804 = distinct !DILexicalBlock(scope: !8786, file: !1084, line: 604, column: 6)
!8805 = !DILocation(line: 605, column: 7, scope: !8802)
!8806 = !DILocation(line: 605, column: 47, scope: !8802)
!8807 = !DILocation(line: 605, column: 39, scope: !8802)
!8808 = !DILocation(line: 605, column: 7, scope: !8803)
!8809 = !DILocation(line: 606, column: 4, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8802, file: !1084, line: 605, column: 53)
!8811 = !DILocation(line: 607, column: 4, scope: !8810)
!8812 = !DILocation(line: 608, column: 4, scope: !8810)
!8813 = !DILocation(line: 609, column: 3, scope: !8810)
!8814 = !DILocation(line: 600, column: 38, scope: !8786)
!8815 = !DILocation(line: 620, column: 30, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8786, file: !1084, line: 620, column: 6)
!8817 = !DILocation(line: 620, column: 6, scope: !8816)
!8818 = !DILocation(line: 620, column: 57, scope: !8816)
!8819 = !DILocation(line: 620, column: 6, scope: !8786)
!8820 = !DILocation(line: 625, column: 29, scope: !8786)
!8821 = !DILocation(line: 625, column: 2, scope: !8786)
!8822 = !DILocation(line: 627, column: 2, scope: !8786)
!8823 = !DILocation(line: 630, column: 3, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8786, file: !1084, line: 627, column: 16)
!8825 = !DILocation(line: 633, column: 3, scope: !8824)
!8826 = !DILocation(line: 636, column: 3, scope: !8824)
!8827 = !DILocation(line: 639, column: 2, scope: !8786)
!8828 = !DILocation(line: 641, column: 2, scope: !8786)
!8829 = !DILocation(line: 643, column: 1, scope: !8786)
!8830 = !DILocation(line: 644, column: 2, scope: !8786)
!8831 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1084, file: !1084, line: 647, type: !981, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8832)
!8832 = !{!8833, !8834, !8835, !8836}
!8833 = !DILocalVariable(name: "dev", arg: 1, scope: !8831, file: !1084, line: 647, type: !941)
!8834 = !DILocalVariable(name: "callback", arg: 2, scope: !8831, file: !1084, line: 648, type: !983)
!8835 = !DILocalVariable(name: "set", arg: 3, scope: !8831, file: !1084, line: 649, type: !211)
!8836 = !DILocalVariable(name: "data", scope: !8831, file: !1084, line: 651, type: !8794)
!8837 = !DILocation(line: 0, scope: !8831)
!8838 = !DILocation(line: 651, column: 38, scope: !8831)
!8839 = !DILocation(line: 653, column: 37, scope: !8831)
!8840 = !DILocation(line: 653, column: 9, scope: !8831)
!8841 = !DILocation(line: 653, column: 2, scope: !8831)
!8842 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8843, file: !8843, line: 38, type: !8844, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8847)
!8843 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!103, !8846, !983, !211}
!8846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!8847 = !{!8848, !8849, !8850}
!8848 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8842, file: !8843, line: 38, type: !8846)
!8849 = !DILocalVariable(name: "callback", arg: 2, scope: !8842, file: !8843, line: 39, type: !983)
!8850 = !DILocalVariable(name: "set", arg: 3, scope: !8842, file: !8843, line: 40, type: !211)
!8851 = !DILocation(line: 0, scope: !8842)
!8852 = !DILocation(line: 45, column: 7, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8842, file: !8843, line: 45, column: 6)
!8854 = !DILocation(line: 45, column: 6, scope: !8842)
!8855 = !DILocation(line: 46, column: 56, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !8843, line: 46, column: 7)
!8857 = distinct !DILexicalBlock(scope: !8853, file: !8843, line: 45, column: 38)
!8858 = !DILocation(line: 46, column: 8, scope: !8856)
!8859 = !DILocation(line: 46, column: 7, scope: !8857)
!8860 = !DILocation(line: 51, column: 13, scope: !8853)
!8861 = !DILocation(line: 56, column: 43, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8863, file: !8843, line: 55, column: 11)
!8863 = distinct !DILexicalBlock(scope: !8842, file: !8843, line: 55, column: 6)
!8864 = !DILocation(line: 56, column: 3, scope: !8862)
!8865 = !DILocation(line: 57, column: 2, scope: !8862)
!8866 = !DILocation(line: 60, column: 1, scope: !8842)
!8867 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !988, file: !988, line: 261, type: !8868, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8870)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{!211, !8846}
!8870 = !{!8871}
!8871 = !DILocalVariable(name: "list", arg: 1, scope: !8867, file: !988, line: 261, type: !8846)
!8872 = !DILocation(line: 0, scope: !8867)
!8873 = !DILocation(line: 261, column: 1, scope: !8867)
!8874 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !988, file: !988, line: 417, type: !8875, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!211, !8846, !1157}
!8877 = !{!8878, !8879, !8880, !8881}
!8878 = !DILocalVariable(name: "list", arg: 1, scope: !8874, file: !988, line: 417, type: !8846)
!8879 = !DILocalVariable(name: "node", arg: 2, scope: !8874, file: !988, line: 417, type: !1157)
!8880 = !DILocalVariable(name: "prev", scope: !8874, file: !988, line: 417, type: !1157)
!8881 = !DILocalVariable(name: "test", scope: !8874, file: !988, line: 417, type: !1157)
!8882 = !DILocation(line: 0, scope: !8874)
!8883 = !DILocation(line: 417, column: 1, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8874, file: !988, line: 417, column: 1)
!8885 = !DILocation(line: 417, column: 1, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8884, file: !988, line: 417, column: 1)
!8887 = !DILocation(line: 417, column: 1, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !988, line: 417, column: 1)
!8889 = distinct !DILexicalBlock(scope: !8886, file: !988, line: 417, column: 1)
!8890 = !DILocation(line: 417, column: 1, scope: !8889)
!8891 = distinct !{!8891, !8883, !8883}
!8892 = !DILocation(line: 417, column: 1, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8888, file: !988, line: 417, column: 1)
!8894 = !DILocation(line: 417, column: 1, scope: !8874)
!8895 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !988, file: !988, line: 298, type: !8896, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8898)
!8896 = !DISubroutineType(types: !8897)
!8897 = !{null, !8846, !1157}
!8898 = !{!8899, !8900}
!8899 = !DILocalVariable(name: "list", arg: 1, scope: !8895, file: !988, line: 298, type: !8846)
!8900 = !DILocalVariable(name: "node", arg: 2, scope: !8895, file: !988, line: 298, type: !1157)
!8901 = !DILocation(line: 0, scope: !8895)
!8902 = !DILocation(line: 298, column: 1, scope: !8895)
!8903 = !DILocation(line: 298, column: 1, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8895, file: !988, line: 298, column: 1)
!8905 = !DILocation(line: 298, column: 1, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8904, file: !988, line: 298, column: 1)
!8907 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !988, file: !988, line: 231, type: !8908, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8910)
!8908 = !DISubroutineType(types: !8909)
!8909 = !{!1157, !8846}
!8910 = !{!8911}
!8911 = !DILocalVariable(name: "list", arg: 1, scope: !8907, file: !988, line: 231, type: !8846)
!8912 = !DILocation(line: 0, scope: !8907)
!8913 = !DILocation(line: 233, column: 15, scope: !8907)
!8914 = !DILocation(line: 233, column: 2, scope: !8907)
!8915 = distinct !DISubprogram(name: "z_snode_next_set", scope: !988, file: !988, line: 209, type: !8916, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8918)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{null, !1157, !1157}
!8918 = !{!8919, !8920}
!8919 = !DILocalVariable(name: "parent", arg: 1, scope: !8915, file: !988, line: 209, type: !1157)
!8920 = !DILocalVariable(name: "child", arg: 2, scope: !8915, file: !988, line: 209, type: !1157)
!8921 = !DILocation(line: 0, scope: !8915)
!8922 = !DILocation(line: 211, column: 10, scope: !8915)
!8923 = !DILocation(line: 211, column: 15, scope: !8915)
!8924 = !DILocation(line: 212, column: 1, scope: !8915)
!8925 = distinct !DISubprogram(name: "z_slist_head_set", scope: !988, file: !988, line: 214, type: !8896, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8926)
!8926 = !{!8927, !8928}
!8927 = !DILocalVariable(name: "list", arg: 1, scope: !8925, file: !988, line: 214, type: !8846)
!8928 = !DILocalVariable(name: "node", arg: 2, scope: !8925, file: !988, line: 214, type: !1157)
!8929 = !DILocation(line: 0, scope: !8925)
!8930 = !DILocation(line: 216, column: 8, scope: !8925)
!8931 = !DILocation(line: 216, column: 13, scope: !8925)
!8932 = !DILocation(line: 217, column: 1, scope: !8925)
!8933 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !988, file: !988, line: 243, type: !8908, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8934)
!8934 = !{!8935}
!8935 = !DILocalVariable(name: "list", arg: 1, scope: !8933, file: !988, line: 243, type: !8846)
!8936 = !DILocation(line: 0, scope: !8933)
!8937 = !DILocation(line: 245, column: 15, scope: !8933)
!8938 = !DILocation(line: 245, column: 2, scope: !8933)
!8939 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !988, file: !988, line: 219, type: !8896, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8940)
!8940 = !{!8941, !8942}
!8941 = !DILocalVariable(name: "list", arg: 1, scope: !8939, file: !988, line: 219, type: !8846)
!8942 = !DILocalVariable(name: "node", arg: 2, scope: !8939, file: !988, line: 219, type: !1157)
!8943 = !DILocation(line: 0, scope: !8939)
!8944 = !DILocation(line: 221, column: 8, scope: !8939)
!8945 = !DILocation(line: 221, column: 13, scope: !8939)
!8946 = !DILocation(line: 222, column: 1, scope: !8939)
!8947 = distinct !DISubprogram(name: "sys_slist_remove", scope: !988, file: !988, line: 401, type: !8948, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8950)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{null, !8846, !1157, !1157}
!8950 = !{!8951, !8952, !8953}
!8951 = !DILocalVariable(name: "list", arg: 1, scope: !8947, file: !988, line: 401, type: !8846)
!8952 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8947, file: !988, line: 401, type: !1157)
!8953 = !DILocalVariable(name: "node", arg: 3, scope: !8947, file: !988, line: 401, type: !1157)
!8954 = !DILocation(line: 0, scope: !8947)
!8955 = !DILocation(line: 401, column: 1, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8947, file: !988, line: 401, column: 1)
!8957 = !DILocation(line: 0, scope: !8956)
!8958 = !DILocation(line: 401, column: 1, scope: !8947)
!8959 = !DILocation(line: 401, column: 1, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8956, file: !988, line: 401, column: 1)
!8961 = !DILocation(line: 401, column: 1, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8960, file: !988, line: 401, column: 1)
!8963 = !DILocation(line: 401, column: 1, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8962, file: !988, line: 401, column: 1)
!8965 = !DILocation(line: 401, column: 1, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8956, file: !988, line: 401, column: 1)
!8967 = !DILocation(line: 401, column: 1, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8966, file: !988, line: 401, column: 1)
!8969 = !DILocation(line: 401, column: 1, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8968, file: !988, line: 401, column: 1)
!8971 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !988, file: !988, line: 285, type: !8972, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8974)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{!1157, !1157}
!8974 = !{!8975}
!8975 = !DILocalVariable(name: "node", arg: 1, scope: !8971, file: !988, line: 285, type: !1157)
!8976 = !DILocation(line: 0, scope: !8971)
!8977 = !DILocation(line: 285, column: 1, scope: !8971)
!8978 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !988, file: !988, line: 274, type: !8972, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8979)
!8979 = !{!8980}
!8980 = !DILocalVariable(name: "node", arg: 1, scope: !8978, file: !988, line: 274, type: !1157)
!8981 = !DILocation(line: 0, scope: !8978)
!8982 = !DILocation(line: 274, column: 1, scope: !8978)
!8983 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !988, file: !988, line: 204, type: !8972, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8984)
!8984 = !{!8985}
!8985 = !DILocalVariable(name: "node", arg: 1, scope: !8983, file: !988, line: 204, type: !1157)
!8986 = !DILocation(line: 0, scope: !8983)
!8987 = !DILocation(line: 206, column: 15, scope: !8983)
!8988 = !DILocation(line: 206, column: 2, scope: !8983)
!8989 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1084, file: !1084, line: 342, type: !129, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8990)
!8990 = !{!8991, !8992, !8993}
!8991 = !DILocalVariable(name: "pin", arg: 1, scope: !8989, file: !1084, line: 342, type: !103)
!8992 = !DILocalVariable(name: "line", scope: !8989, file: !1084, line: 344, type: !137)
!8993 = !DILocalVariable(name: "port", scope: !8989, file: !1084, line: 345, type: !103)
!8994 = !DILocation(line: 0, scope: !8989)
!8995 = !DILocation(line: 344, column: 18, scope: !8989)
!8996 = !{i32 983040, i32 0}
!8997 = !DILocation(line: 356, column: 9, scope: !8989)
!8998 = !DILocation(line: 370, column: 2, scope: !8989)
!8999 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1084, file: !1084, line: 37, type: !624, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9000)
!9000 = !{!9001, !9002, !9003}
!9001 = !DILocalVariable(name: "line", arg: 1, scope: !8999, file: !1084, line: 37, type: !103)
!9002 = !DILocalVariable(name: "arg", arg: 2, scope: !8999, file: !1084, line: 37, type: !102)
!9003 = !DILocalVariable(name: "data", scope: !8999, file: !1084, line: 39, type: !8794)
!9004 = !DILocation(line: 0, scope: !8999)
!9005 = !DILocation(line: 41, column: 29, scope: !8999)
!9006 = !DILocation(line: 41, column: 39, scope: !8999)
!9007 = !DILocation(line: 41, column: 44, scope: !8999)
!9008 = !DILocation(line: 41, column: 2, scope: !8999)
!9009 = !DILocation(line: 42, column: 1, scope: !8999)
!9010 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1084, file: !1084, line: 376, type: !9011, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9013)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{!103, !103, !103}
!9013 = !{!9014, !9015, !9016, !9018, !9019}
!9014 = !DILocalVariable(name: "port", arg: 1, scope: !9010, file: !1084, line: 376, type: !103)
!9015 = !DILocalVariable(name: "pin", arg: 2, scope: !9010, file: !1084, line: 376, type: !103)
!9016 = !DILocalVariable(name: "clk", scope: !9010, file: !1084, line: 386, type: !9017)
!9017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!9018 = !DILocalVariable(name: "pclken", scope: !9010, file: !1084, line: 387, type: !1200)
!9019 = !DILocalVariable(name: "ret", scope: !9010, file: !1084, line: 396, type: !103)
!9020 = !DILocation(line: 0, scope: !9010)
!9021 = !DILocation(line: 387, column: 2, scope: !9010)
!9022 = !DILocation(line: 387, column: 22, scope: !9010)
!9023 = !DILocation(line: 399, column: 8, scope: !9010)
!9024 = !DILocation(line: 400, column: 10, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9010, file: !1084, line: 400, column: 6)
!9026 = !DILocation(line: 400, column: 6, scope: !9010)
!9027 = !DILocation(line: 405, column: 2, scope: !9010)
!9028 = !DILocation(line: 407, column: 2, scope: !9010)
!9029 = !DILocation(line: 408, column: 1, scope: !9010)
!9030 = distinct !DISubprogram(name: "clock_control_on", scope: !717, file: !717, line: 123, type: !1049, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9031)
!9031 = !{!9032, !9033, !9034}
!9032 = !DILocalVariable(name: "dev", arg: 1, scope: !9030, file: !717, line: 123, type: !941)
!9033 = !DILocalVariable(name: "sys", arg: 2, scope: !9030, file: !717, line: 124, type: !812)
!9034 = !DILocalVariable(name: "api", scope: !9030, file: !717, line: 126, type: !1042)
!9035 = !DILocation(line: 0, scope: !9030)
!9036 = !DILocation(line: 127, column: 49, scope: !9030)
!9037 = !DILocation(line: 129, column: 14, scope: !9030)
!9038 = !DILocation(line: 129, column: 9, scope: !9030)
!9039 = !DILocation(line: 129, column: 2, scope: !9030)
!9040 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1084, file: !1084, line: 311, type: !8158, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9041)
!9041 = !{!9042, !9043, !9044}
!9042 = !DILocalVariable(name: "port", arg: 1, scope: !9040, file: !1084, line: 311, type: !103)
!9043 = !DILocalVariable(name: "pin", arg: 2, scope: !9040, file: !1084, line: 311, type: !103)
!9044 = !DILocalVariable(name: "line", scope: !9040, file: !1084, line: 313, type: !137)
!9045 = !DILocation(line: 0, scope: !9040)
!9046 = !DILocation(line: 313, column: 18, scope: !9040)
!9047 = !DILocation(line: 337, column: 2, scope: !9040)
!9048 = !DILocation(line: 340, column: 1, scope: !9040)
!9049 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1084, file: !1084, line: 295, type: !9050, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9052)
!9050 = !DISubroutineType(types: !9051)
!9051 = !{!137, !103}
!9052 = !{!9053}
!9053 = !DILocalVariable(name: "pin", arg: 1, scope: !9049, file: !1084, line: 295, type: !103)
!9054 = !DILocation(line: 0, scope: !9049)
!9055 = !DILocation(line: 307, column: 46, scope: !9049)
!9056 = !DILocation(line: 307, column: 27, scope: !9049)
!9057 = !DILocation(line: 307, column: 32, scope: !9049)
!9058 = !DILocation(line: 307, column: 14, scope: !9049)
!9059 = !DILocation(line: 307, column: 39, scope: !9049)
!9060 = !DILocation(line: 307, column: 2, scope: !9049)
!9061 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6214, file: !6214, line: 671, type: !9062, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9064)
!9062 = !DISubroutineType(types: !9063)
!9063 = !{null, !137, !137}
!9064 = !{!9065, !9066}
!9065 = !DILocalVariable(name: "Port", arg: 1, scope: !9061, file: !6214, line: 671, type: !137)
!9066 = !DILocalVariable(name: "Line", arg: 2, scope: !9061, file: !6214, line: 671, type: !137)
!9067 = !DILocation(line: 0, scope: !9061)
!9068 = !DILocation(line: 673, column: 3, scope: !9061)
!9069 = !DILocalVariable(name: "value", arg: 1, scope: !9070, file: !6367, line: 373, type: !137)
!9070 = distinct !DISubprogram(name: "__RBIT", scope: !6367, file: !6367, line: 373, type: !7372, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9071)
!9071 = !{!9069, !9072}
!9072 = !DILocalVariable(name: "result", scope: !9070, file: !6367, line: 375, type: !137)
!9073 = !DILocation(line: 0, scope: !9070, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 673, column: 3, scope: !9061)
!9075 = !DILocation(line: 380, column: 4, scope: !9070, inlinedAt: !9074)
!9076 = !{i64 3730460}
!9077 = !DILocalVariable(name: "value", arg: 1, scope: !9078, file: !6367, line: 403, type: !137)
!9078 = distinct !DISubprogram(name: "__CLZ", scope: !6367, file: !6367, line: 403, type: !9079, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9081)
!9079 = !DISubroutineType(types: !9080)
!9080 = !{!208, !137}
!9081 = !{!9077}
!9082 = !DILocation(line: 0, scope: !9078, inlinedAt: !9083)
!9083 = distinct !DILocation(line: 673, column: 3, scope: !9061)
!9084 = !DILocation(line: 414, column: 7, scope: !9078, inlinedAt: !9083)
!9085 = !DILocation(line: 674, column: 1, scope: !9061)
!9086 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8843, file: !8843, line: 69, type: !9087, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{null, !8846, !941, !137}
!9089 = !{!9090, !9091, !9092, !9093, !9094}
!9090 = !DILocalVariable(name: "list", arg: 1, scope: !9086, file: !8843, line: 69, type: !8846)
!9091 = !DILocalVariable(name: "port", arg: 2, scope: !9086, file: !8843, line: 70, type: !941)
!9092 = !DILocalVariable(name: "pins", arg: 3, scope: !9086, file: !8843, line: 71, type: !137)
!9093 = !DILocalVariable(name: "cb", scope: !9086, file: !8843, line: 73, type: !983)
!9094 = !DILocalVariable(name: "tmp", scope: !9086, file: !8843, line: 73, type: !983)
!9095 = !DILocation(line: 0, scope: !9086)
!9096 = !DILocation(line: 75, column: 2, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9086, file: !8843, line: 75, column: 2)
!9098 = !DILocation(line: 0, scope: !9097)
!9099 = !DILocation(line: 76, column: 11, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !8843, line: 76, column: 7)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !8843, line: 75, column: 57)
!9102 = distinct !DILexicalBlock(scope: !9097, file: !8843, line: 75, column: 2)
!9103 = !DILocation(line: 76, column: 20, scope: !9100)
!9104 = !DILocation(line: 76, column: 7, scope: !9101)
!9105 = !DILocation(line: 78, column: 8, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9100, file: !8843, line: 76, column: 28)
!9107 = !DILocation(line: 78, column: 4, scope: !9106)
!9108 = !DILocation(line: 79, column: 3, scope: !9106)
!9109 = !DILocation(line: 75, column: 2, scope: !9102)
!9110 = !DILocation(line: 81, column: 1, scope: !9086)
!9111 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6214, file: !6214, line: 710, type: !7372, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9112)
!9112 = !{!9113}
!9113 = !DILocalVariable(name: "Line", arg: 1, scope: !9111, file: !6214, line: 710, type: !137)
!9114 = !DILocation(line: 0, scope: !9111)
!9115 = !DILocation(line: 712, column: 21, scope: !9111)
!9116 = !DILocation(line: 0, scope: !9070, inlinedAt: !9117)
!9117 = distinct !DILocation(line: 712, column: 76, scope: !9111)
!9118 = !DILocation(line: 380, column: 4, scope: !9070, inlinedAt: !9117)
!9119 = !DILocation(line: 0, scope: !9078, inlinedAt: !9120)
!9120 = distinct !DILocation(line: 712, column: 76, scope: !9111)
!9121 = !DILocation(line: 414, column: 7, scope: !9078, inlinedAt: !9120)
!9122 = !DILocation(line: 712, column: 73, scope: !9111)
!9123 = !DILocation(line: 712, column: 3, scope: !9111)
!9124 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9125, file: !9125, line: 910, type: !9126, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9128)
!9125 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9126 = !DISubroutineType(types: !9127)
!9127 = !{null, !1014, !137}
!9128 = !{!9129, !9130}
!9129 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9124, file: !9125, line: 910, type: !1014)
!9130 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9124, file: !9125, line: 910, type: !137)
!9131 = !DILocation(line: 0, scope: !9124)
!9132 = !DILocation(line: 912, column: 3, scope: !9124)
!9133 = !DILocation(line: 913, column: 1, scope: !9124)
!9134 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9125, file: !9125, line: 823, type: !9135, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9137)
!9135 = !DISubroutineType(types: !9136)
!9136 = !{!137, !1014}
!9137 = !{!9138}
!9138 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9134, file: !9125, line: 823, type: !1014)
!9139 = !DILocation(line: 0, scope: !9134)
!9140 = !DILocation(line: 825, column: 21, scope: !9134)
!9141 = !DILocation(line: 825, column: 3, scope: !9134)
!9142 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9125, file: !9125, line: 812, type: !9126, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9143)
!9143 = !{!9144, !9145}
!9144 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9142, file: !9125, line: 812, type: !1014)
!9145 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9142, file: !9125, line: 812, type: !137)
!9146 = !DILocation(line: 0, scope: !9142)
!9147 = !DILocation(line: 814, column: 3, scope: !9142)
!9148 = !DILocation(line: 815, column: 1, scope: !9142)
!9149 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9125, file: !9125, line: 771, type: !9135, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9150)
!9150 = !{!9151}
!9151 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9149, file: !9125, line: 771, type: !1014)
!9152 = !DILocation(line: 0, scope: !9149)
!9153 = !DILocation(line: 773, column: 21, scope: !9149)
!9154 = !DILocation(line: 773, column: 3, scope: !9149)
!9155 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1084, file: !1084, line: 47, type: !9156, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9158)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{!103, !957, !2353}
!9158 = !{!9159, !9160}
!9159 = !DILocalVariable(name: "flags", arg: 1, scope: !9155, file: !1084, line: 47, type: !957)
!9160 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9155, file: !1084, line: 47, type: !2353)
!9161 = !DILocation(line: 0, scope: !9155)
!9162 = !DILocation(line: 50, column: 13, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9155, file: !1084, line: 50, column: 6)
!9164 = !DILocation(line: 50, column: 28, scope: !9163)
!9165 = !DILocation(line: 50, column: 6, scope: !9155)
!9166 = !DILocation(line: 53, column: 11, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !1084, line: 50, column: 34)
!9168 = !DILocation(line: 55, column: 14, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9167, file: !1084, line: 55, column: 7)
!9170 = !DILocation(line: 55, column: 35, scope: !9169)
!9171 = !DILocation(line: 55, column: 7, scope: !9167)
!9172 = !DILocation(line: 56, column: 14, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !1084, line: 56, column: 8)
!9174 = distinct !DILexicalBlock(scope: !9169, file: !1084, line: 55, column: 41)
!9175 = !DILocation(line: 56, column: 8, scope: !9174)
!9176 = !DILocation(line: 0, scope: !9169)
!9177 = !DILocation(line: 66, column: 14, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9167, file: !1084, line: 66, column: 7)
!9179 = !DILocation(line: 66, column: 30, scope: !9178)
!9180 = !DILocation(line: 66, column: 7, scope: !9167)
!9181 = !DILocation(line: 67, column: 12, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9178, file: !1084, line: 66, column: 36)
!9183 = !DILocation(line: 68, column: 3, scope: !9182)
!9184 = !DILocation(line: 68, column: 21, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9178, file: !1084, line: 68, column: 14)
!9186 = !DILocation(line: 68, column: 39, scope: !9185)
!9187 = !DILocation(line: 68, column: 14, scope: !9178)
!9188 = !DILocation(line: 69, column: 12, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9185, file: !1084, line: 68, column: 45)
!9190 = !DILocation(line: 70, column: 3, scope: !9189)
!9191 = !DILocation(line: 72, column: 21, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9163, file: !1084, line: 72, column: 14)
!9193 = !DILocation(line: 72, column: 35, scope: !9192)
!9194 = !DILocation(line: 72, column: 14, scope: !9163)
!9195 = !DILocation(line: 77, column: 14, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !1084, line: 77, column: 7)
!9197 = distinct !DILexicalBlock(scope: !9192, file: !1084, line: 72, column: 41)
!9198 = !DILocation(line: 77, column: 30, scope: !9196)
!9199 = !DILocation(line: 77, column: 7, scope: !9197)
!9200 = !DILocation(line: 0, scope: !9163)
!9201 = !DILocation(line: 90, column: 1, scope: !9155)
!9202 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1084, file: !1084, line: 157, type: !9203, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9205)
!9203 = !DISubroutineType(types: !9204)
!9204 = !{null, !941, !103, !103, !103}
!9205 = !{!9206, !9207, !9208, !9209, !9210, !9211, !9212, !9213, !9214, !9215, !9216}
!9206 = !DILocalVariable(name: "dev", arg: 1, scope: !9202, file: !1084, line: 157, type: !941)
!9207 = !DILocalVariable(name: "pin", arg: 2, scope: !9202, file: !1084, line: 157, type: !103)
!9208 = !DILocalVariable(name: "conf", arg: 3, scope: !9202, file: !1084, line: 158, type: !103)
!9209 = !DILocalVariable(name: "func", arg: 4, scope: !9202, file: !1084, line: 158, type: !103)
!9210 = !DILocalVariable(name: "cfg", scope: !9202, file: !1084, line: 160, type: !8727)
!9211 = !DILocalVariable(name: "gpio", scope: !9202, file: !1084, line: 161, type: !1014)
!9212 = !DILocalVariable(name: "pin_ll", scope: !9202, file: !1084, line: 163, type: !103)
!9213 = !DILocalVariable(name: "mode", scope: !9202, file: !1084, line: 227, type: !32)
!9214 = !DILocalVariable(name: "otype", scope: !9202, file: !1084, line: 227, type: !32)
!9215 = !DILocalVariable(name: "ospeed", scope: !9202, file: !1084, line: 227, type: !32)
!9216 = !DILocalVariable(name: "pupd", scope: !9202, file: !1084, line: 227, type: !32)
!9217 = !DILocation(line: 0, scope: !9202)
!9218 = !DILocation(line: 160, column: 45, scope: !9202)
!9219 = !DILocation(line: 161, column: 44, scope: !9202)
!9220 = !DILocation(line: 163, column: 15, scope: !9202)
!9221 = !DILocation(line: 229, column: 14, scope: !9202)
!9222 = !DILocation(line: 246, column: 47, scope: !9202)
!9223 = !DILocation(line: 246, column: 2, scope: !9202)
!9224 = !DILocation(line: 248, column: 43, scope: !9202)
!9225 = !DILocation(line: 248, column: 2, scope: !9202)
!9226 = !DILocation(line: 250, column: 40, scope: !9202)
!9227 = !DILocation(line: 250, column: 2, scope: !9202)
!9228 = !DILocation(line: 252, column: 11, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9202, file: !1084, line: 252, column: 6)
!9230 = !DILocation(line: 252, column: 6, scope: !9202)
!9231 = !DILocation(line: 253, column: 11, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !1084, line: 253, column: 7)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !1084, line: 252, column: 36)
!9234 = !DILocation(line: 253, column: 7, scope: !9233)
!9235 = !DILocation(line: 254, column: 4, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9232, file: !1084, line: 253, column: 16)
!9237 = !DILocation(line: 255, column: 3, scope: !9236)
!9238 = !DILocation(line: 256, column: 4, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9232, file: !1084, line: 255, column: 10)
!9240 = !DILocation(line: 260, column: 40, scope: !9202)
!9241 = !DILocation(line: 260, column: 2, scope: !9202)
!9242 = !DILocation(line: 265, column: 1, scope: !9202)
!9243 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1084, file: !1084, line: 137, type: !9050, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9244)
!9244 = !{!9245, !9246}
!9245 = !DILocalVariable(name: "pin", arg: 1, scope: !9243, file: !1084, line: 137, type: !103)
!9246 = !DILocalVariable(name: "pinval", scope: !9243, file: !1084, line: 139, type: !137)
!9247 = !DILocation(line: 0, scope: !9243)
!9248 = !DILocation(line: 149, column: 13, scope: !9243)
!9249 = !DILocation(line: 151, column: 2, scope: !9243)
!9250 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9125, file: !9125, line: 342, type: !9251, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9253)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{null, !1014, !137, !137}
!9253 = !{!9254, !9255, !9256}
!9254 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9250, file: !9125, line: 342, type: !1014)
!9255 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9250, file: !9125, line: 342, type: !137)
!9256 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9250, file: !9125, line: 342, type: !137)
!9257 = !DILocation(line: 0, scope: !9250)
!9258 = !DILocation(line: 344, column: 3, scope: !9250)
!9259 = !DILocation(line: 345, column: 1, scope: !9250)
!9260 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9125, file: !9125, line: 413, type: !9251, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9261)
!9261 = !{!9262, !9263, !9264}
!9262 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9260, file: !9125, line: 413, type: !1014)
!9263 = !DILocalVariable(name: "Pin", arg: 2, scope: !9260, file: !9125, line: 413, type: !137)
!9264 = !DILocalVariable(name: "Speed", arg: 3, scope: !9260, file: !9125, line: 413, type: !137)
!9265 = !DILocation(line: 0, scope: !9260)
!9266 = !DILocation(line: 415, column: 3, scope: !9260)
!9267 = !DILocation(line: 0, scope: !9070, inlinedAt: !9268)
!9268 = distinct !DILocation(line: 415, column: 3, scope: !9260)
!9269 = !DILocation(line: 380, column: 4, scope: !9070, inlinedAt: !9268)
!9270 = !DILocation(line: 0, scope: !9078, inlinedAt: !9271)
!9271 = distinct !DILocation(line: 415, column: 3, scope: !9260)
!9272 = !DILocation(line: 414, column: 7, scope: !9078, inlinedAt: !9271)
!9273 = !DILocation(line: 0, scope: !9070, inlinedAt: !9274)
!9274 = distinct !DILocation(line: 415, column: 3, scope: !9260)
!9275 = !DILocation(line: 0, scope: !9078, inlinedAt: !9276)
!9276 = distinct !DILocation(line: 415, column: 3, scope: !9260)
!9277 = !DILocation(line: 417, column: 1, scope: !9260)
!9278 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9125, file: !9125, line: 484, type: !9251, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9279)
!9279 = !{!9280, !9281, !9282}
!9280 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9278, file: !9125, line: 484, type: !1014)
!9281 = !DILocalVariable(name: "Pin", arg: 2, scope: !9278, file: !9125, line: 484, type: !137)
!9282 = !DILocalVariable(name: "Pull", arg: 3, scope: !9278, file: !9125, line: 484, type: !137)
!9283 = !DILocation(line: 0, scope: !9278)
!9284 = !DILocation(line: 486, column: 3, scope: !9278)
!9285 = !DILocation(line: 0, scope: !9070, inlinedAt: !9286)
!9286 = distinct !DILocation(line: 486, column: 3, scope: !9278)
!9287 = !DILocation(line: 380, column: 4, scope: !9070, inlinedAt: !9286)
!9288 = !DILocation(line: 0, scope: !9078, inlinedAt: !9289)
!9289 = distinct !DILocation(line: 486, column: 3, scope: !9278)
!9290 = !DILocation(line: 414, column: 7, scope: !9078, inlinedAt: !9289)
!9291 = !DILocation(line: 0, scope: !9070, inlinedAt: !9292)
!9292 = distinct !DILocation(line: 486, column: 3, scope: !9278)
!9293 = !DILocation(line: 0, scope: !9078, inlinedAt: !9294)
!9294 = distinct !DILocation(line: 486, column: 3, scope: !9278)
!9295 = !DILocation(line: 487, column: 1, scope: !9278)
!9296 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9125, file: !9125, line: 556, type: !9251, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9297)
!9297 = !{!9298, !9299, !9300}
!9298 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9296, file: !9125, line: 556, type: !1014)
!9299 = !DILocalVariable(name: "Pin", arg: 2, scope: !9296, file: !9125, line: 556, type: !137)
!9300 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9296, file: !9125, line: 556, type: !137)
!9301 = !DILocation(line: 0, scope: !9296)
!9302 = !DILocation(line: 558, column: 3, scope: !9296)
!9303 = !DILocation(line: 0, scope: !9070, inlinedAt: !9304)
!9304 = distinct !DILocation(line: 558, column: 3, scope: !9296)
!9305 = !DILocation(line: 380, column: 4, scope: !9070, inlinedAt: !9304)
!9306 = !DILocation(line: 0, scope: !9078, inlinedAt: !9307)
!9307 = distinct !DILocation(line: 558, column: 3, scope: !9296)
!9308 = !DILocation(line: 414, column: 7, scope: !9078, inlinedAt: !9307)
!9309 = !DILocation(line: 0, scope: !9070, inlinedAt: !9310)
!9310 = distinct !DILocation(line: 558, column: 3, scope: !9296)
!9311 = !DILocation(line: 0, scope: !9078, inlinedAt: !9312)
!9312 = distinct !DILocation(line: 558, column: 3, scope: !9296)
!9313 = !DILocation(line: 560, column: 1, scope: !9296)
!9314 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9125, file: !9125, line: 633, type: !9251, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9315)
!9315 = !{!9316, !9317, !9318}
!9316 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9314, file: !9125, line: 633, type: !1014)
!9317 = !DILocalVariable(name: "Pin", arg: 2, scope: !9314, file: !9125, line: 633, type: !137)
!9318 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9314, file: !9125, line: 633, type: !137)
!9319 = !DILocation(line: 0, scope: !9314)
!9320 = !DILocation(line: 635, column: 3, scope: !9314)
!9321 = !DILocation(line: 0, scope: !9070, inlinedAt: !9322)
!9322 = distinct !DILocation(line: 635, column: 3, scope: !9314)
!9323 = !DILocation(line: 380, column: 4, scope: !9070, inlinedAt: !9322)
!9324 = !DILocation(line: 0, scope: !9078, inlinedAt: !9325)
!9325 = distinct !DILocation(line: 635, column: 3, scope: !9314)
!9326 = !DILocation(line: 414, column: 7, scope: !9078, inlinedAt: !9325)
!9327 = !DILocation(line: 0, scope: !9070, inlinedAt: !9328)
!9328 = distinct !DILocation(line: 635, column: 3, scope: !9314)
!9329 = !DILocation(line: 0, scope: !9078, inlinedAt: !9330)
!9330 = distinct !DILocation(line: 635, column: 3, scope: !9314)
!9331 = !DILocation(line: 637, column: 1, scope: !9314)
!9332 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9125, file: !9125, line: 273, type: !9251, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9333)
!9333 = !{!9334, !9335, !9336}
!9334 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9332, file: !9125, line: 273, type: !1014)
!9335 = !DILocalVariable(name: "Pin", arg: 2, scope: !9332, file: !9125, line: 273, type: !137)
!9336 = !DILocalVariable(name: "Mode", arg: 3, scope: !9332, file: !9125, line: 273, type: !137)
!9337 = !DILocation(line: 0, scope: !9332)
!9338 = !DILocation(line: 275, column: 3, scope: !9332)
!9339 = !DILocation(line: 0, scope: !9070, inlinedAt: !9340)
!9340 = distinct !DILocation(line: 275, column: 3, scope: !9332)
!9341 = !DILocation(line: 380, column: 4, scope: !9070, inlinedAt: !9340)
!9342 = !DILocation(line: 0, scope: !9078, inlinedAt: !9343)
!9343 = distinct !DILocation(line: 275, column: 3, scope: !9332)
!9344 = !DILocation(line: 414, column: 7, scope: !9078, inlinedAt: !9343)
!9345 = !DILocation(line: 0, scope: !9070, inlinedAt: !9346)
!9346 = distinct !DILocation(line: 275, column: 3, scope: !9332)
!9347 = !DILocation(line: 0, scope: !9078, inlinedAt: !9348)
!9348 = distinct !DILocation(line: 275, column: 3, scope: !9332)
!9349 = !DILocation(line: 276, column: 1, scope: !9332)
!9350 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1084, file: !1084, line: 698, type: !1097, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9351)
!9351 = !{!9352, !9353, !9354}
!9352 = !DILocalVariable(name: "dev", arg: 1, scope: !9350, file: !1084, line: 698, type: !941)
!9353 = !DILocalVariable(name: "data", scope: !9350, file: !1084, line: 700, type: !8794)
!9354 = !DILocalVariable(name: "ret", scope: !9350, file: !1084, line: 701, type: !103)
!9355 = !DILocation(line: 0, scope: !9350)
!9356 = !DILocation(line: 700, column: 38, scope: !9350)
!9357 = !DILocation(line: 703, column: 8, scope: !9350)
!9358 = !DILocation(line: 703, column: 12, scope: !9350)
!9359 = !DILocation(line: 705, column: 7, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9350, file: !1084, line: 705, column: 6)
!9361 = !DILocation(line: 705, column: 6, scope: !9350)
!9362 = !DILocation(line: 722, column: 8, scope: !9350)
!9363 = !DILocation(line: 723, column: 10, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9350, file: !1084, line: 723, column: 6)
!9365 = !DILocation(line: 723, column: 6, scope: !9350)
!9366 = !DILocation(line: 731, column: 1, scope: !9350)
!9367 = distinct !DISubprogram(name: "device_is_ready", scope: !8574, file: !8574, line: 47, type: !9368, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9370)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!211, !941}
!9370 = !{!9371}
!9371 = !DILocalVariable(name: "dev", arg: 1, scope: !9367, file: !8574, line: 47, type: !941)
!9372 = !DILocation(line: 0, scope: !9367)
!9373 = !DILocation(line: 55, column: 2, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9367, file: !8574, line: 55, column: 2)
!9375 = !{i64 2155277585}
!9376 = !DILocation(line: 56, column: 9, scope: !9367)
!9377 = !DILocation(line: 56, column: 2, scope: !9367)
!9378 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1084, file: !1084, line: 270, type: !9379, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9381)
!9379 = !DISubroutineType(types: !9380)
!9380 = !{!103, !941, !211}
!9381 = !{!9382, !9383, !9384, !9385, !9386}
!9382 = !DILocalVariable(name: "dev", arg: 1, scope: !9378, file: !1084, line: 270, type: !941)
!9383 = !DILocalVariable(name: "on", arg: 2, scope: !9378, file: !1084, line: 270, type: !211)
!9384 = !DILocalVariable(name: "cfg", scope: !9378, file: !1084, line: 272, type: !8727)
!9385 = !DILocalVariable(name: "ret", scope: !9378, file: !1084, line: 273, type: !103)
!9386 = !DILocalVariable(name: "clk", scope: !9378, file: !1084, line: 278, type: !9017)
!9387 = !DILocation(line: 0, scope: !9378)
!9388 = !DILocation(line: 272, column: 45, scope: !9378)
!9389 = !DILocation(line: 282, column: 38, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9391, file: !1084, line: 280, column: 10)
!9391 = distinct !DILexicalBlock(scope: !9378, file: !1084, line: 280, column: 6)
!9392 = !DILocation(line: 282, column: 6, scope: !9390)
!9393 = !DILocation(line: 281, column: 9, scope: !9390)
!9394 = !DILocation(line: 293, column: 1, scope: !9378)
!9395 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !9368, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9396)
!9396 = !{!9397}
!9397 = !DILocalVariable(name: "dev", arg: 1, scope: !9395, file: !196, line: 730, type: !941)
!9398 = !DILocation(line: 0, scope: !9395)
!9399 = !DILocation(line: 732, column: 9, scope: !9395)
!9400 = !DILocation(line: 732, column: 2, scope: !9395)
!9401 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1084, file: !1084, line: 496, type: !9402, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !9404)
!9402 = !DISubroutineType(types: !9403)
!9403 = !{!103, !941, !103, !103, !103}
!9404 = !{!9405, !9406, !9407, !9408, !9409, !9410}
!9405 = !DILocalVariable(name: "dev", arg: 1, scope: !9401, file: !1084, line: 496, type: !941)
!9406 = !DILocalVariable(name: "pin", arg: 2, scope: !9401, file: !1084, line: 496, type: !103)
!9407 = !DILocalVariable(name: "conf", arg: 3, scope: !9401, file: !1084, line: 496, type: !103)
!9408 = !DILocalVariable(name: "func", arg: 4, scope: !9401, file: !1084, line: 496, type: !103)
!9409 = !DILocalVariable(name: "ret", scope: !9401, file: !1084, line: 498, type: !103)
!9410 = !DILocalVariable(name: "gpio_out", scope: !9411, file: !1084, line: 508, type: !137)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !1084, line: 507, column: 27)
!9412 = distinct !DILexicalBlock(scope: !9401, file: !1084, line: 507, column: 6)
!9413 = !DILocation(line: 0, scope: !9401)
!9414 = !DILocation(line: 505, column: 2, scope: !9401)
!9415 = !DILocation(line: 507, column: 11, scope: !9412)
!9416 = !DILocation(line: 507, column: 6, scope: !9401)
!9417 = !DILocation(line: 508, column: 28, scope: !9411)
!9418 = !DILocation(line: 0, scope: !9411)
!9419 = !DILocation(line: 510, column: 16, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9411, file: !1084, line: 510, column: 7)
!9421 = !DILocation(line: 0, scope: !9420)
!9422 = !DILocation(line: 510, column: 7, scope: !9411)
!9423 = !DILocation(line: 511, column: 4, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9420, file: !1084, line: 510, column: 32)
!9425 = !DILocation(line: 512, column: 3, scope: !9424)
!9426 = !DILocation(line: 513, column: 4, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !1084, line: 512, column: 39)
!9428 = distinct !DILexicalBlock(scope: !9420, file: !1084, line: 512, column: 14)
!9429 = !DILocation(line: 514, column: 3, scope: !9427)
!9430 = !DILocation(line: 518, column: 1, scope: !9401)
!9431 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1357, file: !1357, line: 526, type: !1260, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9432)
!9432 = !{!9433, !9434, !9435}
!9433 = !DILocalVariable(name: "dev", arg: 1, scope: !9431, file: !1357, line: 526, type: !1262)
!9434 = !DILocalVariable(name: "c", arg: 2, scope: !9431, file: !1357, line: 526, type: !873)
!9435 = !DILocalVariable(name: "config", scope: !9431, file: !1357, line: 528, type: !9436)
!9436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!9437 = !DILocation(line: 0, scope: !9431)
!9438 = !DILocation(line: 528, column: 48, scope: !9431)
!9439 = !DILocation(line: 531, column: 40, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9431, file: !1357, line: 531, column: 6)
!9441 = !DILocation(line: 531, column: 6, scope: !9440)
!9442 = !DILocation(line: 531, column: 6, scope: !9431)
!9443 = !DILocation(line: 532, column: 34, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9440, file: !1357, line: 531, column: 48)
!9445 = !DILocation(line: 532, column: 3, scope: !9444)
!9446 = !DILocation(line: 533, column: 2, scope: !9444)
!9447 = !DILocation(line: 539, column: 42, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9431, file: !1357, line: 539, column: 6)
!9449 = !DILocation(line: 539, column: 7, scope: !9448)
!9450 = !DILocation(line: 539, column: 6, scope: !9431)
!9451 = !DILocation(line: 543, column: 52, scope: !9431)
!9452 = !DILocation(line: 543, column: 22, scope: !9431)
!9453 = !DILocation(line: 543, column: 5, scope: !9431)
!9454 = !DILocation(line: 545, column: 2, scope: !9431)
!9455 = !DILocation(line: 546, column: 1, scope: !9431)
!9456 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1357, file: !1357, line: 548, type: !1279, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9457)
!9457 = !{!9458, !9459, !9460, !9461}
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9456, file: !1357, line: 548, type: !1262)
!9459 = !DILocalVariable(name: "c", arg: 2, scope: !9456, file: !1357, line: 549, type: !209)
!9460 = !DILocalVariable(name: "config", scope: !9456, file: !1357, line: 551, type: !9436)
!9461 = !DILocalVariable(name: "key", scope: !9456, file: !1357, line: 555, type: !32)
!9462 = !DILocation(line: 0, scope: !9456)
!9463 = !DILocation(line: 551, column: 48, scope: !9456)
!9464 = !DILocation(line: 562, column: 2, scope: !9456)
!9465 = !DILocation(line: 563, column: 41, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !1357, line: 563, column: 7)
!9467 = distinct !DILexicalBlock(scope: !9456, file: !1357, line: 562, column: 12)
!9468 = !DILocation(line: 563, column: 7, scope: !9466)
!9469 = !DILocation(line: 563, column: 7, scope: !9467)
!9470 = !DILocation(line: 55, column: 2, scope: !9471, inlinedAt: !9475)
!9471 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9472)
!9472 = !{!9473, !9474}
!9473 = !DILocalVariable(name: "key", scope: !9471, file: !6193, line: 44, type: !32)
!9474 = !DILocalVariable(name: "tmp", scope: !9471, file: !6193, line: 53, type: !32)
!9475 = distinct !DILocation(line: 564, column: 10, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9466, file: !1357, line: 563, column: 49)
!9477 = !{i64 2327310}
!9478 = !DILocation(line: 0, scope: !9471, inlinedAt: !9475)
!9479 = !DILocation(line: 565, column: 42, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9476, file: !1357, line: 565, column: 8)
!9481 = !DILocation(line: 565, column: 8, scope: !9480)
!9482 = !DILocation(line: 565, column: 8, scope: !9476)
!9483 = !DILocalVariable(name: "key", arg: 1, scope: !9484, file: !6193, line: 84, type: !32)
!9484 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9485)
!9485 = !{!9483}
!9486 = !DILocation(line: 0, scope: !9484, inlinedAt: !9487)
!9487 = distinct !DILocation(line: 568, column: 4, scope: !9476)
!9488 = !DILocation(line: 95, column: 2, scope: !9484, inlinedAt: !9487)
!9489 = !{i64 2328127}
!9490 = !DILocation(line: 569, column: 3, scope: !9476)
!9491 = distinct !{!9491, !9464, !9492}
!9492 = !DILocation(line: 570, column: 2, scope: !9456)
!9493 = !DILocation(line: 592, column: 33, scope: !9456)
!9494 = !DILocation(line: 592, column: 2, scope: !9456)
!9495 = !DILocation(line: 0, scope: !9484, inlinedAt: !9496)
!9496 = distinct !DILocation(line: 593, column: 2, scope: !9456)
!9497 = !DILocation(line: 95, column: 2, scope: !9484, inlinedAt: !9496)
!9498 = !DILocation(line: 594, column: 1, scope: !9456)
!9499 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1357, file: !1357, line: 596, type: !1283, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9500)
!9500 = !{!9501, !9502, !9503}
!9501 = !DILocalVariable(name: "dev", arg: 1, scope: !9499, file: !1357, line: 596, type: !1262)
!9502 = !DILocalVariable(name: "config", scope: !9499, file: !1357, line: 598, type: !9436)
!9503 = !DILocalVariable(name: "err", scope: !9499, file: !1357, line: 599, type: !137)
!9504 = !DILocation(line: 0, scope: !9499)
!9505 = !DILocation(line: 598, column: 48, scope: !9499)
!9506 = !DILocation(line: 606, column: 40, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 606, column: 6)
!9508 = !DILocation(line: 606, column: 6, scope: !9507)
!9509 = !DILocation(line: 606, column: 6, scope: !9499)
!9510 = !DILocation(line: 610, column: 39, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 610, column: 6)
!9512 = !DILocation(line: 610, column: 6, scope: !9511)
!9513 = !DILocation(line: 610, column: 6, scope: !9499)
!9514 = !DILocation(line: 614, column: 39, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 614, column: 6)
!9516 = !DILocation(line: 614, column: 6, scope: !9515)
!9517 = !DILocation(line: 614, column: 6, scope: !9499)
!9518 = !DILocation(line: 619, column: 40, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 619, column: 6)
!9520 = !DILocation(line: 619, column: 6, scope: !9519)
!9521 = !DILocation(line: 619, column: 6, scope: !9499)
!9522 = !DILocation(line: 623, column: 10, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 623, column: 6)
!9524 = !DILocation(line: 623, column: 6, scope: !9499)
!9525 = !DILocation(line: 624, column: 34, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9523, file: !1357, line: 623, column: 24)
!9527 = !DILocation(line: 624, column: 3, scope: !9526)
!9528 = !DILocation(line: 625, column: 2, scope: !9526)
!9529 = !DILocation(line: 632, column: 10, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 632, column: 6)
!9531 = !DILocation(line: 632, column: 6, scope: !9499)
!9532 = !DILocation(line: 633, column: 34, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9530, file: !1357, line: 632, column: 32)
!9534 = !DILocation(line: 633, column: 3, scope: !9533)
!9535 = !DILocation(line: 634, column: 2, scope: !9533)
!9536 = !DILocation(line: 636, column: 10, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 636, column: 6)
!9538 = !DILocation(line: 636, column: 6, scope: !9499)
!9539 = !DILocation(line: 637, column: 33, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9537, file: !1357, line: 636, column: 31)
!9541 = !DILocation(line: 637, column: 3, scope: !9540)
!9542 = !DILocation(line: 638, column: 2, scope: !9540)
!9543 = !DILocation(line: 640, column: 10, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9499, file: !1357, line: 640, column: 6)
!9545 = !DILocation(line: 640, column: 6, scope: !9499)
!9546 = !DILocation(line: 641, column: 33, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9544, file: !1357, line: 640, column: 32)
!9548 = !DILocation(line: 641, column: 3, scope: !9547)
!9549 = !DILocation(line: 642, column: 2, scope: !9547)
!9550 = !DILocation(line: 646, column: 32, scope: !9499)
!9551 = !DILocation(line: 646, column: 2, scope: !9499)
!9552 = !DILocation(line: 648, column: 2, scope: !9499)
!9553 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1357, file: !1357, line: 419, type: !1287, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9554)
!9554 = !{!9555, !9556, !9557, !9558, !9560, !9561, !9562, !9563}
!9555 = !DILocalVariable(name: "dev", arg: 1, scope: !9553, file: !1357, line: 419, type: !1262)
!9556 = !DILocalVariable(name: "cfg", arg: 2, scope: !9553, file: !1357, line: 420, type: !1289)
!9557 = !DILocalVariable(name: "config", scope: !9553, file: !1357, line: 422, type: !9436)
!9558 = !DILocalVariable(name: "data", scope: !9553, file: !1357, line: 423, type: !9559)
!9559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!9560 = !DILocalVariable(name: "parity", scope: !9553, file: !1357, line: 424, type: !6633)
!9561 = !DILocalVariable(name: "stopbits", scope: !9553, file: !1357, line: 425, type: !6633)
!9562 = !DILocalVariable(name: "databits", scope: !9553, file: !1357, line: 426, type: !6633)
!9563 = !DILocalVariable(name: "flowctrl", scope: !9553, file: !1357, line: 428, type: !6633)
!9564 = !DILocation(line: 0, scope: !9553)
!9565 = !DILocation(line: 422, column: 48, scope: !9553)
!9566 = !DILocation(line: 423, column: 38, scope: !9553)
!9567 = !DILocation(line: 424, column: 56, scope: !9553)
!9568 = !DILocation(line: 424, column: 51, scope: !9553)
!9569 = !DILocation(line: 424, column: 26, scope: !9553)
!9570 = !DILocation(line: 425, column: 60, scope: !9553)
!9571 = !DILocation(line: 425, column: 55, scope: !9553)
!9572 = !DILocation(line: 425, column: 28, scope: !9553)
!9573 = !DILocation(line: 426, column: 60, scope: !9553)
!9574 = !DILocation(line: 426, column: 55, scope: !9553)
!9575 = !DILocation(line: 426, column: 28, scope: !9553)
!9576 = !DILocation(line: 428, column: 58, scope: !9553)
!9577 = !DILocation(line: 428, column: 53, scope: !9553)
!9578 = !DILocation(line: 428, column: 28, scope: !9553)
!9579 = !DILocation(line: 431, column: 44, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 431, column: 6)
!9581 = !DILocation(line: 438, column: 22, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 437, column: 6)
!9583 = !DILocation(line: 437, column: 6, scope: !9553)
!9584 = !DILocation(line: 448, column: 6, scope: !9553)
!9585 = !DILocation(line: 465, column: 47, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 465, column: 6)
!9587 = !DILocation(line: 475, column: 21, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 475, column: 6)
!9589 = !DILocation(line: 475, column: 6, scope: !9553)
!9590 = !DILocation(line: 476, column: 8, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !1357, line: 476, column: 7)
!9592 = distinct !DILexicalBlock(scope: !9588, file: !1357, line: 475, column: 49)
!9593 = !DILocation(line: 477, column: 34, scope: !9591)
!9594 = !DILocation(line: 476, column: 7, scope: !9592)
!9595 = !DILocation(line: 482, column: 27, scope: !9553)
!9596 = !DILocation(line: 482, column: 2, scope: !9553)
!9597 = !DILocation(line: 484, column: 16, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 484, column: 6)
!9599 = !DILocation(line: 484, column: 13, scope: !9598)
!9600 = !DILocation(line: 484, column: 6, scope: !9553)
!9601 = !DILocation(line: 485, column: 3, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9598, file: !1357, line: 484, column: 44)
!9603 = !DILocation(line: 486, column: 2, scope: !9602)
!9604 = !DILocation(line: 488, column: 18, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 488, column: 6)
!9606 = !DILocation(line: 488, column: 15, scope: !9605)
!9607 = !DILocation(line: 488, column: 6, scope: !9553)
!9608 = !DILocation(line: 489, column: 3, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9605, file: !1357, line: 488, column: 48)
!9610 = !DILocation(line: 490, column: 2, scope: !9609)
!9611 = !DILocation(line: 492, column: 18, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 492, column: 6)
!9613 = !DILocation(line: 492, column: 15, scope: !9612)
!9614 = !DILocation(line: 492, column: 6, scope: !9553)
!9615 = !DILocation(line: 493, column: 3, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9612, file: !1357, line: 492, column: 48)
!9617 = !DILocation(line: 494, column: 2, scope: !9616)
!9618 = !DILocation(line: 496, column: 18, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 496, column: 6)
!9620 = !DILocation(line: 496, column: 15, scope: !9619)
!9621 = !DILocation(line: 496, column: 6, scope: !9553)
!9622 = !DILocation(line: 497, column: 3, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9619, file: !1357, line: 496, column: 46)
!9624 = !DILocation(line: 498, column: 2, scope: !9623)
!9625 = !DILocation(line: 500, column: 11, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9553, file: !1357, line: 500, column: 6)
!9627 = !DILocation(line: 500, column: 29, scope: !9626)
!9628 = !DILocation(line: 500, column: 20, scope: !9626)
!9629 = !DILocation(line: 500, column: 6, scope: !9553)
!9630 = !DILocation(line: 501, column: 3, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9626, file: !1357, line: 500, column: 40)
!9632 = !DILocation(line: 502, column: 26, scope: !9631)
!9633 = !DILocation(line: 502, column: 19, scope: !9631)
!9634 = !DILocation(line: 503, column: 2, scope: !9631)
!9635 = !DILocation(line: 505, column: 26, scope: !9553)
!9636 = !DILocation(line: 505, column: 2, scope: !9553)
!9637 = !DILocation(line: 506, column: 2, scope: !9553)
!9638 = !DILocation(line: 507, column: 1, scope: !9553)
!9639 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1357, file: !1357, line: 509, type: !1300, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9640)
!9640 = !{!9641, !9642, !9643}
!9641 = !DILocalVariable(name: "dev", arg: 1, scope: !9639, file: !1357, line: 509, type: !1262)
!9642 = !DILocalVariable(name: "cfg", arg: 2, scope: !9639, file: !1357, line: 510, type: !1302)
!9643 = !DILocalVariable(name: "data", scope: !9639, file: !1357, line: 512, type: !9559)
!9644 = !DILocation(line: 0, scope: !9639)
!9645 = !DILocation(line: 512, column: 38, scope: !9639)
!9646 = !DILocation(line: 514, column: 24, scope: !9639)
!9647 = !DILocation(line: 514, column: 7, scope: !9639)
!9648 = !DILocation(line: 514, column: 16, scope: !9639)
!9649 = !DILocation(line: 515, column: 41, scope: !9639)
!9650 = !{i32 0, i32 1537}
!9651 = !DILocation(line: 515, column: 16, scope: !9639)
!9652 = !DILocation(line: 515, column: 7, scope: !9639)
!9653 = !DILocation(line: 515, column: 14, scope: !9639)
!9654 = !DILocation(line: 517, column: 3, scope: !9639)
!9655 = !{i32 0, i32 12289}
!9656 = !DILocation(line: 516, column: 19, scope: !9639)
!9657 = !DILocation(line: 516, column: 7, scope: !9639)
!9658 = !DILocation(line: 516, column: 17, scope: !9639)
!9659 = !DILocation(line: 519, column: 3, scope: !9639)
!9660 = !DILocation(line: 519, column: 33, scope: !9639)
!9661 = !DILocation(line: 518, column: 19, scope: !9639)
!9662 = !DILocation(line: 518, column: 7, scope: !9639)
!9663 = !DILocation(line: 518, column: 17, scope: !9639)
!9664 = !DILocation(line: 521, column: 3, scope: !9639)
!9665 = !{i32 0, i32 769}
!9666 = !DILocation(line: 520, column: 19, scope: !9639)
!9667 = !DILocation(line: 520, column: 7, scope: !9639)
!9668 = !DILocation(line: 520, column: 17, scope: !9639)
!9669 = !DILocation(line: 522, column: 2, scope: !9639)
!9670 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1357, file: !1357, line: 205, type: !9671, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9673)
!9671 = !DISubroutineType(types: !9672)
!9672 = !{!137, !1262}
!9673 = !{!9674, !9675}
!9674 = !DILocalVariable(name: "dev", arg: 1, scope: !9670, file: !1357, line: 205, type: !1262)
!9675 = !DILocalVariable(name: "config", scope: !9670, file: !1357, line: 207, type: !9436)
!9676 = !DILocation(line: 0, scope: !9670)
!9677 = !DILocation(line: 207, column: 48, scope: !9670)
!9678 = !DILocation(line: 209, column: 36, scope: !9670)
!9679 = !DILocation(line: 209, column: 9, scope: !9670)
!9680 = !DILocation(line: 209, column: 2, scope: !9670)
!9681 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1357, file: !1357, line: 270, type: !9682, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9684)
!9682 = !DISubroutineType(types: !9683)
!9683 = !{!1228, !137}
!9684 = !{!9685}
!9685 = !DILocalVariable(name: "parity", arg: 1, scope: !9681, file: !1357, line: 270, type: !137)
!9686 = !DILocation(line: 0, scope: !9681)
!9687 = !DILocation(line: 272, column: 2, scope: !9681)
!9688 = !DILocation(line: 281, column: 1, scope: !9681)
!9689 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1357, file: !1357, line: 220, type: !9671, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9690)
!9690 = !{!9691, !9692}
!9691 = !DILocalVariable(name: "dev", arg: 1, scope: !9689, file: !1357, line: 220, type: !1262)
!9692 = !DILocalVariable(name: "config", scope: !9689, file: !1357, line: 222, type: !9436)
!9693 = !DILocation(line: 0, scope: !9689)
!9694 = !DILocation(line: 222, column: 48, scope: !9689)
!9695 = !DILocation(line: 224, column: 44, scope: !9689)
!9696 = !DILocation(line: 224, column: 9, scope: !9689)
!9697 = !DILocation(line: 224, column: 2, scope: !9689)
!9698 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1357, file: !1357, line: 304, type: !9699, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9701)
!9699 = !DISubroutineType(types: !9700)
!9700 = !{!1242, !137}
!9701 = !{!9702}
!9702 = !DILocalVariable(name: "sb", arg: 1, scope: !9698, file: !1357, line: 304, type: !137)
!9703 = !DILocation(line: 0, scope: !9698)
!9704 = !DILocation(line: 306, column: 2, scope: !9698)
!9705 = !DILocation(line: 0, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9698, file: !1357, line: 306, column: 14)
!9707 = !DILocation(line: 323, column: 1, scope: !9698)
!9708 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1357, file: !1357, line: 235, type: !9671, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9709)
!9709 = !{!9710, !9711}
!9710 = !DILocalVariable(name: "dev", arg: 1, scope: !9708, file: !1357, line: 235, type: !1262)
!9711 = !DILocalVariable(name: "config", scope: !9708, file: !1357, line: 237, type: !9436)
!9712 = !DILocation(line: 0, scope: !9708)
!9713 = !DILocation(line: 237, column: 48, scope: !9708)
!9714 = !DILocation(line: 239, column: 39, scope: !9708)
!9715 = !DILocation(line: 239, column: 9, scope: !9708)
!9716 = !DILocation(line: 239, column: 2, scope: !9708)
!9717 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1357, file: !1357, line: 355, type: !9718, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9720)
!9718 = !DISubroutineType(types: !9719)
!9719 = !{!1235, !137, !137}
!9720 = !{!9721, !9722}
!9721 = !DILocalVariable(name: "db", arg: 1, scope: !9717, file: !1357, line: 355, type: !137)
!9722 = !DILocalVariable(name: "p", arg: 2, scope: !9717, file: !1357, line: 356, type: !137)
!9723 = !DILocation(line: 0, scope: !9717)
!9724 = !DILocation(line: 358, column: 2, scope: !9717)
!9725 = !DILocation(line: 384, column: 1, scope: !9717)
!9726 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1357, file: !1357, line: 250, type: !9671, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9727)
!9727 = !{!9728, !9729}
!9728 = !DILocalVariable(name: "dev", arg: 1, scope: !9726, file: !1357, line: 250, type: !1262)
!9729 = !DILocalVariable(name: "config", scope: !9726, file: !1357, line: 252, type: !9436)
!9730 = !DILocation(line: 0, scope: !9726)
!9731 = !DILocation(line: 252, column: 48, scope: !9726)
!9732 = !DILocation(line: 254, column: 40, scope: !9726)
!9733 = !DILocation(line: 254, column: 9, scope: !9726)
!9734 = !DILocation(line: 254, column: 2, scope: !9726)
!9735 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1357, file: !1357, line: 409, type: !9736, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9738)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{!1248, !137}
!9738 = !{!9739}
!9739 = !DILocalVariable(name: "fc", arg: 1, scope: !9735, file: !1357, line: 409, type: !137)
!9740 = !DILocation(line: 0, scope: !9735)
!9741 = !DILocation(line: 411, column: 9, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9735, file: !1357, line: 411, column: 6)
!9743 = !DILocation(line: 416, column: 1, scope: !9735)
!9744 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9745, file: !9745, line: 967, type: !9746, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9748)
!9745 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9746 = !DISubroutineType(types: !9747)
!9747 = !{!137, !1303}
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9744, file: !9745, line: 967, type: !1303)
!9750 = !DILocation(line: 0, scope: !9744)
!9751 = !DILocation(line: 969, column: 21, scope: !9744)
!9752 = !DILocation(line: 969, column: 3, scope: !9744)
!9753 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9745, file: !9745, line: 601, type: !9746, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9754)
!9754 = !{!9755}
!9755 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9753, file: !9745, line: 601, type: !1303)
!9756 = !DILocation(line: 0, scope: !9753)
!9757 = !DILocation(line: 603, column: 21, scope: !9753)
!9758 = !DILocation(line: 603, column: 3, scope: !9753)
!9759 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9745, file: !9745, line: 820, type: !9746, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9760)
!9760 = !{!9761}
!9761 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9759, file: !9745, line: 820, type: !1303)
!9762 = !DILocation(line: 0, scope: !9759)
!9763 = !DILocation(line: 822, column: 21, scope: !9759)
!9764 = !DILocation(line: 822, column: 3, scope: !9759)
!9765 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9745, file: !9745, line: 547, type: !9746, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9766)
!9766 = !{!9767}
!9767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9765, file: !9745, line: 547, type: !1303)
!9768 = !DILocation(line: 0, scope: !9765)
!9769 = !DILocation(line: 549, column: 21, scope: !9765)
!9770 = !DILocation(line: 549, column: 3, scope: !9765)
!9771 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1357, file: !1357, line: 257, type: !9772, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9774)
!9772 = !DISubroutineType(types: !9773)
!9773 = !{!137, !1228}
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "parity", arg: 1, scope: !9771, file: !1357, line: 257, type: !1228)
!9776 = !DILocation(line: 0, scope: !9771)
!9777 = !DILocation(line: 259, column: 2, scope: !9771)
!9778 = !DILocation(line: 268, column: 1, scope: !9771)
!9779 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1357, file: !1357, line: 283, type: !9780, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9782)
!9780 = !DISubroutineType(types: !9781)
!9781 = !{!137, !1242}
!9782 = !{!9783}
!9783 = !DILocalVariable(name: "sb", arg: 1, scope: !9779, file: !1357, line: 283, type: !1242)
!9784 = !DILocation(line: 0, scope: !9779)
!9785 = !DILocation(line: 285, column: 2, scope: !9779)
!9786 = !DILocation(line: 0, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9779, file: !1357, line: 285, column: 14)
!9788 = !DILocation(line: 302, column: 1, scope: !9779)
!9789 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1357, file: !1357, line: 325, type: !9790, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9792)
!9790 = !DISubroutineType(types: !9791)
!9791 = !{!137, !1235, !1228}
!9792 = !{!9793, !9794}
!9793 = !DILocalVariable(name: "db", arg: 1, scope: !9789, file: !1357, line: 325, type: !1235)
!9794 = !DILocalVariable(name: "p", arg: 2, scope: !9789, file: !1357, line: 326, type: !1228)
!9795 = !DILocation(line: 0, scope: !9789)
!9796 = !DILocation(line: 328, column: 2, scope: !9789)
!9797 = !DILocation(line: 353, column: 1, scope: !9789)
!9798 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1357, file: !1357, line: 393, type: !9799, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9801)
!9799 = !DISubroutineType(types: !9800)
!9800 = !{!137, !1248}
!9801 = !{!9802}
!9802 = !DILocalVariable(name: "fc", arg: 1, scope: !9798, file: !1357, line: 393, type: !1248)
!9803 = !DILocation(line: 0, scope: !9798)
!9804 = !DILocation(line: 395, column: 9, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9798, file: !1357, line: 395, column: 6)
!9806 = !DILocation(line: 400, column: 1, scope: !9798)
!9807 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9745, file: !9745, line: 424, type: !9808, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9810)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{null, !1303}
!9810 = !{!9811}
!9811 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9807, file: !9745, line: 424, type: !1303)
!9812 = !DILocation(line: 0, scope: !9807)
!9813 = !DILocation(line: 426, column: 3, scope: !9807)
!9814 = !DILocation(line: 427, column: 1, scope: !9807)
!9815 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1357, file: !1357, line: 197, type: !9816, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9818)
!9816 = !DISubroutineType(types: !9817)
!9817 = !{null, !1262, !137}
!9818 = !{!9819, !9820, !9821}
!9819 = !DILocalVariable(name: "dev", arg: 1, scope: !9815, file: !1357, line: 197, type: !1262)
!9820 = !DILocalVariable(name: "parity", arg: 2, scope: !9815, file: !1357, line: 198, type: !137)
!9821 = !DILocalVariable(name: "config", scope: !9815, file: !1357, line: 200, type: !9436)
!9822 = !DILocation(line: 0, scope: !9815)
!9823 = !DILocation(line: 200, column: 48, scope: !9815)
!9824 = !DILocation(line: 202, column: 29, scope: !9815)
!9825 = !DILocation(line: 202, column: 2, scope: !9815)
!9826 = !DILocation(line: 203, column: 1, scope: !9815)
!9827 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1357, file: !1357, line: 212, type: !9816, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9828)
!9828 = !{!9829, !9830, !9831}
!9829 = !DILocalVariable(name: "dev", arg: 1, scope: !9827, file: !1357, line: 212, type: !1262)
!9830 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9827, file: !1357, line: 213, type: !137)
!9831 = !DILocalVariable(name: "config", scope: !9827, file: !1357, line: 215, type: !9436)
!9832 = !DILocation(line: 0, scope: !9827)
!9833 = !DILocation(line: 215, column: 48, scope: !9827)
!9834 = !DILocation(line: 217, column: 37, scope: !9827)
!9835 = !DILocation(line: 217, column: 2, scope: !9827)
!9836 = !DILocation(line: 218, column: 1, scope: !9827)
!9837 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1357, file: !1357, line: 227, type: !9816, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9838)
!9838 = !{!9839, !9840, !9841}
!9839 = !DILocalVariable(name: "dev", arg: 1, scope: !9837, file: !1357, line: 227, type: !1262)
!9840 = !DILocalVariable(name: "databits", arg: 2, scope: !9837, file: !1357, line: 228, type: !137)
!9841 = !DILocalVariable(name: "config", scope: !9837, file: !1357, line: 230, type: !9436)
!9842 = !DILocation(line: 0, scope: !9837)
!9843 = !DILocation(line: 230, column: 48, scope: !9837)
!9844 = !DILocation(line: 232, column: 32, scope: !9837)
!9845 = !DILocation(line: 232, column: 2, scope: !9837)
!9846 = !DILocation(line: 233, column: 1, scope: !9837)
!9847 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1357, file: !1357, line: 242, type: !9816, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9848)
!9848 = !{!9849, !9850, !9851}
!9849 = !DILocalVariable(name: "dev", arg: 1, scope: !9847, file: !1357, line: 242, type: !1262)
!9850 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9847, file: !1357, line: 243, type: !137)
!9851 = !DILocalVariable(name: "config", scope: !9847, file: !1357, line: 245, type: !9436)
!9852 = !DILocation(line: 0, scope: !9847)
!9853 = !DILocation(line: 245, column: 48, scope: !9847)
!9854 = !DILocation(line: 247, column: 33, scope: !9847)
!9855 = !DILocation(line: 247, column: 2, scope: !9847)
!9856 = !DILocation(line: 248, column: 1, scope: !9847)
!9857 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1357, file: !1357, line: 107, type: !9816, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9858)
!9858 = !{!9859, !9860, !9861, !9862, !9863}
!9859 = !DILocalVariable(name: "dev", arg: 1, scope: !9857, file: !1357, line: 107, type: !1262)
!9860 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9857, file: !1357, line: 107, type: !137)
!9861 = !DILocalVariable(name: "config", scope: !9857, file: !1357, line: 109, type: !9436)
!9862 = !DILocalVariable(name: "data", scope: !9857, file: !1357, line: 110, type: !9559)
!9863 = !DILocalVariable(name: "clock_rate", scope: !9857, file: !1357, line: 112, type: !137)
!9864 = !DILocation(line: 0, scope: !9857)
!9865 = !DILocation(line: 109, column: 48, scope: !9857)
!9866 = !DILocation(line: 110, column: 38, scope: !9857)
!9867 = !DILocation(line: 112, column: 2, scope: !9857)
!9868 = !DILocation(line: 123, column: 36, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !1357, line: 123, column: 7)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !1357, line: 122, column: 9)
!9871 = distinct !DILexicalBlock(scope: !9857, file: !1357, line: 115, column: 6)
!9872 = !DILocation(line: 124, column: 42, scope: !9869)
!9873 = !DILocation(line: 123, column: 7, scope: !9869)
!9874 = !DILocation(line: 125, column: 22, scope: !9869)
!9875 = !DILocation(line: 123, column: 7, scope: !9870)
!9876 = !DILocation(line: 176, column: 36, scope: !9857)
!9877 = !DILocation(line: 176, column: 3, scope: !9857)
!9878 = !DILocation(line: 179, column: 32, scope: !9857)
!9879 = !DILocation(line: 180, column: 10, scope: !9857)
!9880 = !DILocation(line: 179, column: 3, scope: !9857)
!9881 = !DILocation(line: 195, column: 1, scope: !9857)
!9882 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9745, file: !9745, line: 410, type: !9808, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9883)
!9883 = !{!9884}
!9884 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9882, file: !9745, line: 410, type: !1303)
!9885 = !DILocation(line: 0, scope: !9882)
!9886 = !DILocation(line: 412, column: 3, scope: !9882)
!9887 = !DILocation(line: 413, column: 1, scope: !9882)
!9888 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !717, file: !717, line: 216, type: !1336, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9889)
!9889 = !{!9890, !9891, !9892, !9893}
!9890 = !DILocalVariable(name: "dev", arg: 1, scope: !9888, file: !717, line: 216, type: !1262)
!9891 = !DILocalVariable(name: "sys", arg: 2, scope: !9888, file: !717, line: 217, type: !812)
!9892 = !DILocalVariable(name: "rate", arg: 3, scope: !9888, file: !717, line: 218, type: !149)
!9893 = !DILocalVariable(name: "api", scope: !9888, file: !717, line: 220, type: !1314)
!9894 = !DILocation(line: 0, scope: !9888)
!9895 = !DILocation(line: 221, column: 49, scope: !9888)
!9896 = !DILocation(line: 223, column: 11, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9888, file: !717, line: 223, column: 6)
!9898 = !DILocation(line: 223, column: 20, scope: !9897)
!9899 = !DILocation(line: 223, column: 6, scope: !9888)
!9900 = !DILocation(line: 227, column: 9, scope: !9888)
!9901 = !DILocation(line: 227, column: 2, scope: !9888)
!9902 = !DILocation(line: 228, column: 1, scope: !9888)
!9903 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9745, file: !9745, line: 615, type: !9904, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9906)
!9904 = !DISubroutineType(types: !9905)
!9905 = !{null, !1303, !137}
!9906 = !{!9907, !9908}
!9907 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9903, file: !9745, line: 615, type: !1303)
!9908 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9903, file: !9745, line: 615, type: !137)
!9909 = !DILocation(line: 0, scope: !9903)
!9910 = !DILocation(line: 617, column: 3, scope: !9903)
!9911 = !DILocation(line: 618, column: 1, scope: !9903)
!9912 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9745, file: !9745, line: 1020, type: !9913, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9915)
!9913 = !DISubroutineType(types: !9914)
!9914 = !{null, !1303, !137, !137, !137}
!9915 = !{!9916, !9917, !9918, !9919}
!9916 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9912, file: !9745, line: 1020, type: !1303)
!9917 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9912, file: !9745, line: 1020, type: !137)
!9918 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9912, file: !9745, line: 1020, type: !137)
!9919 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9912, file: !9745, line: 1021, type: !137)
!9920 = !DILocation(line: 0, scope: !9912)
!9921 = !DILocation(line: 1029, column: 30, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !9745, line: 1028, column: 3)
!9923 = distinct !DILexicalBlock(scope: !9912, file: !9745, line: 1023, column: 7)
!9924 = !DILocation(line: 1029, column: 19, scope: !9922)
!9925 = !DILocation(line: 1029, column: 13, scope: !9922)
!9926 = !DILocation(line: 1029, column: 17, scope: !9922)
!9927 = !DILocation(line: 1031, column: 1, scope: !9912)
!9928 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9745, file: !9745, line: 949, type: !9904, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9929)
!9929 = !{!9930, !9931}
!9930 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9928, file: !9745, line: 949, type: !1303)
!9931 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9928, file: !9745, line: 949, type: !137)
!9932 = !DILocation(line: 0, scope: !9928)
!9933 = !DILocation(line: 951, column: 3, scope: !9928)
!9934 = !DILocation(line: 952, column: 1, scope: !9928)
!9935 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9745, file: !9745, line: 588, type: !9904, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9936)
!9936 = !{!9937, !9938}
!9937 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9935, file: !9745, line: 588, type: !1303)
!9938 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9935, file: !9745, line: 588, type: !137)
!9939 = !DILocation(line: 0, scope: !9935)
!9940 = !DILocation(line: 590, column: 3, scope: !9935)
!9941 = !DILocation(line: 591, column: 1, scope: !9935)
!9942 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9745, file: !9745, line: 805, type: !9904, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9943)
!9943 = !{!9944, !9945}
!9944 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9942, file: !9745, line: 805, type: !1303)
!9945 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9942, file: !9745, line: 805, type: !137)
!9946 = !DILocation(line: 0, scope: !9942)
!9947 = !DILocation(line: 807, column: 3, scope: !9942)
!9948 = !DILocation(line: 808, column: 1, scope: !9942)
!9949 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9745, file: !9745, line: 532, type: !9904, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9950)
!9950 = !{!9951, !9952}
!9951 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9949, file: !9745, line: 532, type: !1303)
!9952 = !DILocalVariable(name: "Parity", arg: 2, scope: !9949, file: !9745, line: 532, type: !137)
!9953 = !DILocation(line: 0, scope: !9949)
!9954 = !DILocation(line: 534, column: 3, scope: !9949)
!9955 = !DILocation(line: 535, column: 1, scope: !9949)
!9956 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9745, file: !9745, line: 1770, type: !9746, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9957)
!9957 = !{!9958}
!9958 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9956, file: !9745, line: 1770, type: !1303)
!9959 = !DILocation(line: 0, scope: !9956)
!9960 = !DILocation(line: 1772, column: 11, scope: !9956)
!9961 = !DILocation(line: 1772, column: 46, scope: !9956)
!9962 = !DILocation(line: 1772, column: 3, scope: !9956)
!9963 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9745, file: !9745, line: 1737, type: !9746, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9964)
!9964 = !{!9965}
!9965 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9963, file: !9745, line: 1737, type: !1303)
!9966 = !DILocation(line: 0, scope: !9963)
!9967 = !DILocation(line: 1739, column: 11, scope: !9963)
!9968 = !DILocation(line: 1739, column: 3, scope: !9963)
!9969 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9745, file: !9745, line: 1748, type: !9746, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9970)
!9970 = !{!9971}
!9971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9969, file: !9745, line: 1748, type: !1303)
!9972 = !DILocation(line: 0, scope: !9969)
!9973 = !DILocation(line: 1750, column: 11, scope: !9969)
!9974 = !DILocation(line: 1750, column: 45, scope: !9969)
!9975 = !DILocation(line: 1750, column: 3, scope: !9969)
!9976 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9745, file: !9745, line: 1827, type: !9746, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9977)
!9977 = !{!9978}
!9978 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9976, file: !9745, line: 1827, type: !1303)
!9979 = !DILocation(line: 0, scope: !9976)
!9980 = !DILocation(line: 1829, column: 11, scope: !9976)
!9981 = !DILocation(line: 1829, column: 46, scope: !9976)
!9982 = !DILocation(line: 1829, column: 3, scope: !9976)
!9983 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9745, file: !9745, line: 1992, type: !9808, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9984)
!9984 = !{!9985}
!9985 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9983, file: !9745, line: 1992, type: !1303)
!9986 = !DILocation(line: 0, scope: !9983)
!9987 = !DILocation(line: 1994, column: 3, scope: !9983)
!9988 = !DILocation(line: 1995, column: 1, scope: !9983)
!9989 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9745, file: !9745, line: 1934, type: !9808, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !9990)
!9990 = !{!9991, !9992}
!9991 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9989, file: !9745, line: 1934, type: !1303)
!9992 = !DILocalVariable(name: "tmpreg", scope: !9989, file: !9745, line: 1936, type: !176)
!9993 = !DILocation(line: 0, scope: !9989)
!9994 = !DILocation(line: 1936, column: 3, scope: !9989)
!9995 = !DILocation(line: 1936, column: 17, scope: !9989)
!9996 = !DILocation(line: 1937, column: 20, scope: !9989)
!9997 = !DILocation(line: 1937, column: 10, scope: !9989)
!9998 = !DILocation(line: 1938, column: 10, scope: !9989)
!9999 = !DILocation(line: 1939, column: 20, scope: !9989)
!10000 = !DILocation(line: 1939, column: 10, scope: !9989)
!10001 = !DILocation(line: 1940, column: 10, scope: !9989)
!10002 = !DILocation(line: 1941, column: 1, scope: !9989)
!10003 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9745, file: !9745, line: 1877, type: !9808, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10004)
!10004 = !{!10005, !10006}
!10005 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10003, file: !9745, line: 1877, type: !1303)
!10006 = !DILocalVariable(name: "tmpreg", scope: !10003, file: !9745, line: 1879, type: !176)
!10007 = !DILocation(line: 0, scope: !10003)
!10008 = !DILocation(line: 1879, column: 3, scope: !10003)
!10009 = !DILocation(line: 1879, column: 17, scope: !10003)
!10010 = !DILocation(line: 1880, column: 20, scope: !10003)
!10011 = !DILocation(line: 1880, column: 10, scope: !10003)
!10012 = !DILocation(line: 1881, column: 10, scope: !10003)
!10013 = !DILocation(line: 1882, column: 20, scope: !10003)
!10014 = !DILocation(line: 1882, column: 10, scope: !10003)
!10015 = !DILocation(line: 1883, column: 10, scope: !10003)
!10016 = !DILocation(line: 1884, column: 1, scope: !10003)
!10017 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9745, file: !9745, line: 1896, type: !9808, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10018)
!10018 = !{!10019, !10020}
!10019 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10017, file: !9745, line: 1896, type: !1303)
!10020 = !DILocalVariable(name: "tmpreg", scope: !10017, file: !9745, line: 1898, type: !176)
!10021 = !DILocation(line: 0, scope: !10017)
!10022 = !DILocation(line: 1898, column: 3, scope: !10017)
!10023 = !DILocation(line: 1898, column: 17, scope: !10017)
!10024 = !DILocation(line: 1899, column: 20, scope: !10017)
!10025 = !DILocation(line: 1899, column: 10, scope: !10017)
!10026 = !DILocation(line: 1900, column: 10, scope: !10017)
!10027 = !DILocation(line: 1901, column: 20, scope: !10017)
!10028 = !DILocation(line: 1901, column: 10, scope: !10017)
!10029 = !DILocation(line: 1902, column: 10, scope: !10017)
!10030 = !DILocation(line: 1903, column: 1, scope: !10017)
!10031 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9745, file: !9745, line: 1915, type: !9808, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10032)
!10032 = !{!10033, !10034}
!10033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10031, file: !9745, line: 1915, type: !1303)
!10034 = !DILocalVariable(name: "tmpreg", scope: !10031, file: !9745, line: 1917, type: !176)
!10035 = !DILocation(line: 0, scope: !10031)
!10036 = !DILocation(line: 1917, column: 3, scope: !10031)
!10037 = !DILocation(line: 1917, column: 17, scope: !10031)
!10038 = !DILocation(line: 1918, column: 20, scope: !10031)
!10039 = !DILocation(line: 1918, column: 10, scope: !10031)
!10040 = !DILocation(line: 1919, column: 10, scope: !10031)
!10041 = !DILocation(line: 1920, column: 20, scope: !10031)
!10042 = !DILocation(line: 1920, column: 10, scope: !10031)
!10043 = !DILocation(line: 1921, column: 10, scope: !10031)
!10044 = !DILocation(line: 1922, column: 1, scope: !10031)
!10045 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9745, file: !9745, line: 1814, type: !9746, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10046)
!10046 = !{!10047}
!10047 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10045, file: !9745, line: 1814, type: !1303)
!10048 = !DILocation(line: 0, scope: !10045)
!10049 = !DILocation(line: 1816, column: 11, scope: !10045)
!10050 = !DILocation(line: 1816, column: 46, scope: !10045)
!10051 = !DILocation(line: 1816, column: 3, scope: !10045)
!10052 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9745, file: !9745, line: 2426, type: !10053, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10055)
!10053 = !DISubroutineType(types: !10054)
!10054 = !{null, !1303, !208}
!10055 = !{!10056, !10057}
!10056 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10052, file: !9745, line: 2426, type: !1303)
!10057 = !DILocalVariable(name: "Value", arg: 2, scope: !10052, file: !9745, line: 2426, type: !208)
!10058 = !DILocation(line: 0, scope: !10052)
!10059 = !DILocation(line: 2428, column: 16, scope: !10052)
!10060 = !DILocation(line: 2428, column: 11, scope: !10052)
!10061 = !DILocation(line: 2428, column: 14, scope: !10052)
!10062 = !DILocation(line: 2429, column: 1, scope: !10052)
!10063 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9745, file: !9745, line: 1792, type: !9746, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10064)
!10064 = !{!10065}
!10065 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10063, file: !9745, line: 1792, type: !1303)
!10066 = !DILocation(line: 0, scope: !10063)
!10067 = !DILocation(line: 1794, column: 11, scope: !10063)
!10068 = !DILocation(line: 1794, column: 47, scope: !10063)
!10069 = !DILocation(line: 1794, column: 3, scope: !10063)
!10070 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9745, file: !9745, line: 2403, type: !10071, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10073)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!208, !1303}
!10073 = !{!10074}
!10074 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10070, file: !9745, line: 2403, type: !1303)
!10075 = !DILocation(line: 0, scope: !10070)
!10076 = !DILocation(line: 2405, column: 20, scope: !10070)
!10077 = !DILocation(line: 2405, column: 10, scope: !10070)
!10078 = !DILocation(line: 2405, column: 3, scope: !10070)
!10079 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1357, file: !1357, line: 1583, type: !1283, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10080)
!10080 = !{!10081, !10082, !10083, !10084, !10085, !10086}
!10081 = !DILocalVariable(name: "dev", arg: 1, scope: !10079, file: !1357, line: 1583, type: !1262)
!10082 = !DILocalVariable(name: "config", scope: !10079, file: !1357, line: 1585, type: !9436)
!10083 = !DILocalVariable(name: "data", scope: !10079, file: !1357, line: 1586, type: !9559)
!10084 = !DILocalVariable(name: "ll_parity", scope: !10079, file: !1357, line: 1587, type: !137)
!10085 = !DILocalVariable(name: "ll_datawidth", scope: !10079, file: !1357, line: 1588, type: !137)
!10086 = !DILocalVariable(name: "err", scope: !10079, file: !1357, line: 1589, type: !103)
!10087 = !DILocation(line: 0, scope: !10079)
!10088 = !DILocation(line: 1585, column: 48, scope: !10079)
!10089 = !DILocation(line: 1586, column: 38, scope: !10079)
!10090 = !DILocation(line: 1591, column: 2, scope: !10079)
!10091 = !DILocation(line: 1593, column: 29, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10079, file: !1357, line: 1593, column: 6)
!10093 = !DILocation(line: 1593, column: 7, scope: !10092)
!10094 = !DILocation(line: 1593, column: 6, scope: !10079)
!10095 = !DILocation(line: 1599, column: 31, scope: !10079)
!10096 = !DILocation(line: 1599, column: 71, scope: !10079)
!10097 = !DILocation(line: 1599, column: 8, scope: !10079)
!10098 = !DILocation(line: 1600, column: 10, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10079, file: !1357, line: 1600, column: 6)
!10100 = !DILocation(line: 1600, column: 6, scope: !10079)
!10101 = !DILocation(line: 1616, column: 36, scope: !10079)
!10102 = !DILocation(line: 1616, column: 8, scope: !10079)
!10103 = !DILocation(line: 1617, column: 10, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10079, file: !1357, line: 1617, column: 6)
!10105 = !DILocation(line: 1617, column: 6, scope: !10079)
!10106 = !DILocation(line: 1621, column: 27, scope: !10079)
!10107 = !DILocation(line: 1621, column: 2, scope: !10079)
!10108 = !DILocation(line: 1624, column: 40, scope: !10079)
!10109 = !DILocation(line: 1624, column: 2, scope: !10079)
!10110 = !DILocation(line: 1630, column: 14, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10079, file: !1357, line: 1630, column: 6)
!10112 = !DILocation(line: 1630, column: 6, scope: !10079)
!10113 = !DILocation(line: 1638, column: 2, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !1357, line: 1634, column: 34)
!10115 = distinct !DILexicalBlock(scope: !10111, file: !1357, line: 1634, column: 13)
!10116 = !DILocation(line: 0, scope: !10111)
!10117 = !DILocation(line: 1649, column: 35, scope: !10079)
!10118 = !DILocation(line: 1649, column: 2, scope: !10079)
!10119 = !DILocation(line: 1654, column: 14, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10079, file: !1357, line: 1654, column: 6)
!10121 = !DILocation(line: 1654, column: 6, scope: !10079)
!10122 = !DILocation(line: 1655, column: 3, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10120, file: !1357, line: 1654, column: 31)
!10124 = !DILocation(line: 1656, column: 2, scope: !10123)
!10125 = !DILocation(line: 1659, column: 37, scope: !10079)
!10126 = !DILocation(line: 1659, column: 2, scope: !10079)
!10127 = !DILocation(line: 1662, column: 14, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10079, file: !1357, line: 1662, column: 6)
!10129 = !DILocation(line: 1662, column: 6, scope: !10079)
!10130 = !DILocation(line: 1663, column: 37, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10128, file: !1357, line: 1662, column: 27)
!10132 = !DILocation(line: 1663, column: 3, scope: !10131)
!10133 = !DILocation(line: 1664, column: 2, scope: !10131)
!10134 = !DILocation(line: 1684, column: 26, scope: !10079)
!10135 = !DILocation(line: 1684, column: 2, scope: !10079)
!10136 = !DILocation(line: 1722, column: 2, scope: !10079)
!10137 = !DILocation(line: 1724, column: 1, scope: !10079)
!10138 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1357, file: !1357, line: 651, type: !10139, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10141)
!10139 = !DISubroutineType(types: !10140)
!10140 = !{null, !1262}
!10141 = !{!10142, !10143, !10144}
!10142 = !DILocalVariable(name: "dev", arg: 1, scope: !10138, file: !1357, line: 651, type: !1262)
!10143 = !DILocalVariable(name: "data", scope: !10138, file: !1357, line: 653, type: !9559)
!10144 = !DILocalVariable(name: "clk", scope: !10138, file: !1357, line: 654, type: !10145)
!10145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!10146 = !DILocation(line: 0, scope: !10138)
!10147 = !DILocation(line: 653, column: 38, scope: !10138)
!10148 = !DILocation(line: 656, column: 8, scope: !10138)
!10149 = !DILocation(line: 656, column: 14, scope: !10138)
!10150 = !DILocation(line: 657, column: 1, scope: !10138)
!10151 = distinct !DISubprogram(name: "device_is_ready", scope: !8574, file: !8574, line: 47, type: !10152, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{!211, !1262}
!10154 = !{!10155}
!10155 = !DILocalVariable(name: "dev", arg: 1, scope: !10151, file: !8574, line: 47, type: !1262)
!10156 = !DILocation(line: 0, scope: !10151)
!10157 = !DILocation(line: 55, column: 2, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10151, file: !8574, line: 55, column: 2)
!10159 = !{i64 2155368748}
!10160 = !DILocation(line: 56, column: 9, scope: !10151)
!10161 = !DILocation(line: 56, column: 2, scope: !10151)
!10162 = distinct !DISubprogram(name: "clock_control_on", scope: !717, file: !717, line: 123, type: !1321, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10163)
!10163 = !{!10164, !10165, !10166}
!10164 = !DILocalVariable(name: "dev", arg: 1, scope: !10162, file: !717, line: 123, type: !1262)
!10165 = !DILocalVariable(name: "sys", arg: 2, scope: !10162, file: !717, line: 124, type: !812)
!10166 = !DILocalVariable(name: "api", scope: !10162, file: !717, line: 126, type: !1314)
!10167 = !DILocation(line: 0, scope: !10162)
!10168 = !DILocation(line: 127, column: 49, scope: !10162)
!10169 = !DILocation(line: 129, column: 14, scope: !10162)
!10170 = !DILocation(line: 129, column: 9, scope: !10162)
!10171 = !DILocation(line: 129, column: 2, scope: !10162)
!10172 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1406, file: !1406, line: 342, type: !10173, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!103, !1456, !208}
!10175 = !{!10176, !10177, !10178, !10179}
!10176 = !DILocalVariable(name: "config", arg: 1, scope: !10172, file: !1406, line: 342, type: !1456)
!10177 = !DILocalVariable(name: "id", arg: 2, scope: !10172, file: !1406, line: 343, type: !208)
!10178 = !DILocalVariable(name: "ret", scope: !10172, file: !1406, line: 345, type: !103)
!10179 = !DILocalVariable(name: "state", scope: !10172, file: !1406, line: 346, type: !1409)
!10180 = !DILocation(line: 0, scope: !10172)
!10181 = !DILocation(line: 346, column: 2, scope: !10172)
!10182 = !DILocation(line: 348, column: 8, scope: !10172)
!10183 = !DILocation(line: 349, column: 10, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10172, file: !1406, line: 349, column: 6)
!10185 = !DILocation(line: 349, column: 6, scope: !10172)
!10186 = !DILocation(line: 353, column: 44, scope: !10172)
!10187 = !DILocation(line: 353, column: 9, scope: !10172)
!10188 = !DILocation(line: 353, column: 2, scope: !10172)
!10189 = !DILocation(line: 354, column: 1, scope: !10172)
!10190 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9745, file: !9745, line: 497, type: !9904, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10191)
!10191 = !{!10192, !10193, !10194}
!10192 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10190, file: !9745, line: 497, type: !1303)
!10193 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10190, file: !9745, line: 497, type: !137)
!10194 = !DILocalVariable(name: "val", scope: !10195, file: !9745, line: 499, type: !137)
!10195 = distinct !DILexicalBlock(scope: !10190, file: !9745, line: 499, column: 3)
!10196 = !DILocation(line: 0, scope: !10190)
!10197 = !DILocation(line: 499, column: 3, scope: !10195)
!10198 = !DILocalVariable(name: "addr", arg: 1, scope: !10199, file: !6367, line: 476, type: !1353)
!10199 = distinct !DISubprogram(name: "__LDREXW", scope: !6367, file: !6367, line: 476, type: !10200, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10202)
!10200 = !DISubroutineType(types: !10201)
!10201 = !{!137, !1353}
!10202 = !{!10198, !10203}
!10203 = !DILocalVariable(name: "result", scope: !10199, file: !6367, line: 478, type: !137)
!10204 = !DILocation(line: 0, scope: !10199, inlinedAt: !10205)
!10205 = distinct !DILocation(line: 499, column: 3, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10195, file: !9745, line: 499, column: 3)
!10207 = !DILocation(line: 480, column: 4, scope: !10199, inlinedAt: !10205)
!10208 = !{i64 3758067}
!10209 = !DILocation(line: 499, column: 3, scope: !10206)
!10210 = !DILocation(line: 0, scope: !10195)
!10211 = !DILocalVariable(name: "value", arg: 1, scope: !10212, file: !6367, line: 527, type: !137)
!10212 = distinct !DISubprogram(name: "__STREXW", scope: !6367, file: !6367, line: 527, type: !10213, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10215)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{!137, !137, !1353}
!10215 = !{!10211, !10216, !10217}
!10216 = !DILocalVariable(name: "addr", arg: 2, scope: !10212, file: !6367, line: 527, type: !1353)
!10217 = !DILocalVariable(name: "result", scope: !10212, file: !6367, line: 529, type: !137)
!10218 = !DILocation(line: 0, scope: !10212, inlinedAt: !10219)
!10219 = distinct !DILocation(line: 499, column: 3, scope: !10195)
!10220 = !DILocation(line: 531, column: 4, scope: !10212, inlinedAt: !10219)
!10221 = !{i64 3759503}
!10222 = distinct !{!10222, !10197, !10197}
!10223 = !DILocation(line: 500, column: 1, scope: !10190)
!10224 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9745, file: !9745, line: 850, type: !9913, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10225)
!10225 = !{!10226, !10227, !10228, !10229}
!10226 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10224, file: !9745, line: 850, type: !1303)
!10227 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10224, file: !9745, line: 850, type: !137)
!10228 = !DILocalVariable(name: "Parity", arg: 3, scope: !10224, file: !9745, line: 850, type: !137)
!10229 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10224, file: !9745, line: 851, type: !137)
!10230 = !DILocation(line: 0, scope: !10224)
!10231 = !DILocation(line: 853, column: 3, scope: !10224)
!10232 = !DILocation(line: 854, column: 3, scope: !10224)
!10233 = !DILocation(line: 855, column: 1, scope: !10224)
!10234 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9745, file: !9745, line: 1337, type: !9808, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10235)
!10235 = !{!10236}
!10236 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10234, file: !9745, line: 1337, type: !1303)
!10237 = !DILocation(line: 0, scope: !10234)
!10238 = !DILocation(line: 1339, column: 3, scope: !10234)
!10239 = !DILocation(line: 1340, column: 1, scope: !10234)
!10240 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1406, file: !1406, line: 316, type: !10241, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10243)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{!103, !1456, !1409}
!10243 = !{!10244, !10245, !10246}
!10244 = !DILocalVariable(name: "config", arg: 1, scope: !10240, file: !1406, line: 317, type: !1456)
!10245 = !DILocalVariable(name: "state", arg: 2, scope: !10240, file: !1406, line: 318, type: !1409)
!10246 = !DILocalVariable(name: "reg", scope: !10240, file: !1406, line: 320, type: !22)
!10247 = !DILocation(line: 0, scope: !10240)
!10248 = !DILocation(line: 329, column: 39, scope: !10240)
!10249 = !DILocation(line: 329, column: 52, scope: !10240)
!10250 = !DILocation(line: 329, column: 9, scope: !10240)
!10251 = !DILocation(line: 329, column: 2, scope: !10240)
!10252 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10152, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1218, retainedNodes: !10253)
!10253 = !{!10254}
!10254 = !DILocalVariable(name: "dev", arg: 1, scope: !10252, file: !196, line: 730, type: !1262)
!10255 = !DILocation(line: 0, scope: !10252)
!10256 = !DILocation(line: 732, column: 9, scope: !10252)
!10257 = !DILocation(line: 732, column: 2, scope: !10252)
!10258 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1573, file: !1573, line: 270, type: !1579, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10259)
!10259 = !{!10260}
!10260 = !DILocalVariable(name: "dev", arg: 1, scope: !10258, file: !1573, line: 270, type: !1581)
!10261 = !DILocation(line: 0, scope: !10258)
!10262 = !DILocation(line: 274, column: 2, scope: !10258)
!10263 = !DILocation(line: 275, column: 12, scope: !10258)
!10264 = !DILocation(line: 276, column: 15, scope: !10258)
!10265 = !DILocation(line: 277, column: 16, scope: !10258)
!10266 = !DILocation(line: 278, column: 15, scope: !10258)
!10267 = !DILocation(line: 279, column: 16, scope: !10258)
!10268 = !DILocation(line: 282, column: 2, scope: !10258)
!10269 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6401, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10270)
!10270 = !{!10271, !10272}
!10271 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10269, file: !402, line: 1814, type: !667)
!10272 = !DILocalVariable(name: "priority", arg: 2, scope: !10269, file: !402, line: 1814, type: !137)
!10273 = !DILocation(line: 0, scope: !10269)
!10274 = !DILocation(line: 1822, column: 46, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10276, file: !402, line: 1821, column: 3)
!10276 = distinct !DILexicalBlock(scope: !10269, file: !402, line: 1816, column: 7)
!10277 = !DILocation(line: 1824, column: 1, scope: !10269)
!10278 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1573, file: !1573, line: 118, type: !6304, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10279)
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "arg", arg: 1, scope: !10278, file: !1573, line: 118, type: !102)
!10281 = !DILocalVariable(name: "dticks", scope: !10278, file: !1573, line: 121, type: !137)
!10282 = !DILocation(line: 0, scope: !10278)
!10283 = !DILocation(line: 124, column: 2, scope: !10278)
!10284 = !DILocation(line: 129, column: 17, scope: !10278)
!10285 = !DILocation(line: 129, column: 14, scope: !10278)
!10286 = !DILocation(line: 130, column: 15, scope: !10278)
!10287 = !DILocation(line: 145, column: 27, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10289, file: !1573, line: 132, column: 16)
!10289 = distinct !DILexicalBlock(scope: !10278, file: !1573, line: 132, column: 6)
!10290 = !DILocation(line: 145, column: 25, scope: !10288)
!10291 = !DILocation(line: 145, column: 45, scope: !10288)
!10292 = !DILocation(line: 146, column: 30, scope: !10288)
!10293 = !DILocation(line: 146, column: 20, scope: !10288)
!10294 = !DILocation(line: 147, column: 3, scope: !10288)
!10295 = !DILocation(line: 151, column: 2, scope: !10278)
!10296 = !DILocation(line: 152, column: 1, scope: !10278)
!10297 = distinct !DISubprogram(name: "elapsed", scope: !1573, file: !1573, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10298)
!10298 = !{!10299, !10300, !10301}
!10299 = !DILocalVariable(name: "val1", scope: !10297, file: !1573, line: 87, type: !137)
!10300 = !DILocalVariable(name: "ctrl", scope: !10297, file: !1573, line: 88, type: !137)
!10301 = !DILocalVariable(name: "val2", scope: !10297, file: !1573, line: 89, type: !137)
!10302 = !DILocation(line: 87, column: 27, scope: !10297)
!10303 = !DILocation(line: 0, scope: !10297)
!10304 = !DILocation(line: 88, column: 27, scope: !10297)
!10305 = !DILocation(line: 89, column: 27, scope: !10297)
!10306 = !DILocation(line: 105, column: 12, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10297, file: !1573, line: 105, column: 6)
!10308 = !DILocation(line: 106, column: 6, scope: !10307)
!10309 = !DILocation(line: 107, column: 16, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10307, file: !1573, line: 106, column: 24)
!10311 = !DILocation(line: 111, column: 18, scope: !10310)
!10312 = !DILocation(line: 112, column: 2, scope: !10310)
!10313 = !DILocation(line: 114, column: 20, scope: !10297)
!10314 = !DILocation(line: 114, column: 30, scope: !10297)
!10315 = !DILocation(line: 114, column: 28, scope: !10297)
!10316 = !DILocation(line: 114, column: 2, scope: !10297)
!10317 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1573, file: !1573, line: 154, type: !10318, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10320)
!10318 = !DISubroutineType(types: !10319)
!10319 = !{null, !641, !211}
!10320 = !{!10321, !10322, !10323, !10324, !10325, !10326, !10327, !10332, !10333}
!10321 = !DILocalVariable(name: "ticks", arg: 1, scope: !10317, file: !1573, line: 154, type: !641)
!10322 = !DILocalVariable(name: "idle", arg: 2, scope: !10317, file: !1573, line: 154, type: !211)
!10323 = !DILocalVariable(name: "delay", scope: !10317, file: !1573, line: 169, type: !137)
!10324 = !DILocalVariable(name: "val1", scope: !10317, file: !1573, line: 170, type: !137)
!10325 = !DILocalVariable(name: "val2", scope: !10317, file: !1573, line: 170, type: !137)
!10326 = !DILocalVariable(name: "last_load_", scope: !10317, file: !1573, line: 171, type: !137)
!10327 = !DILocalVariable(name: "key", scope: !10317, file: !1573, line: 176, type: !10328)
!10328 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !10329)
!10329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !10330)
!10330 = !{!10331}
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10329, file: !368, line: 33, baseType: !103, size: 32)
!10332 = !DILocalVariable(name: "pending", scope: !10317, file: !1573, line: 178, type: !137)
!10333 = !DILocalVariable(name: "unannounced", scope: !10317, file: !1573, line: 185, type: !137)
!10334 = !DILocation(line: 0, scope: !10317)
!10335 = !DILocation(line: 162, column: 49, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10317, file: !1573, line: 162, column: 6)
!10337 = !DILocation(line: 163, column: 17, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10336, file: !1573, line: 162, column: 78)
!10339 = !DILocation(line: 164, column: 13, scope: !10338)
!10340 = !DILocation(line: 165, column: 3, scope: !10338)
!10341 = !DILocation(line: 171, column: 24, scope: !10317)
!10342 = !DILocation(line: 173, column: 10, scope: !10317)
!10343 = !DILocation(line: 174, column: 10, scope: !10317)
!10344 = !DILocalVariable(name: "l", arg: 1, scope: !10345, file: !368, line: 136, type: !10348)
!10345 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !10346, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10349)
!10346 = !DISubroutineType(types: !10347)
!10347 = !{!10328, !10348}
!10348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!10349 = !{!10344, !10350}
!10350 = !DILocalVariable(name: "k", scope: !10345, file: !368, line: 139, type: !10328)
!10351 = !DILocation(line: 0, scope: !10345, inlinedAt: !10352)
!10352 = distinct !DILocation(line: 176, column: 25, scope: !10317)
!10353 = !DILocation(line: 55, column: 2, scope: !10354, inlinedAt: !10358)
!10354 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10355)
!10355 = !{!10356, !10357}
!10356 = !DILocalVariable(name: "key", scope: !10354, file: !6193, line: 44, type: !32)
!10357 = !DILocalVariable(name: "tmp", scope: !10354, file: !6193, line: 53, type: !32)
!10358 = distinct !DILocation(line: 145, column: 10, scope: !10345, inlinedAt: !10352)
!10359 = !{i64 2278919}
!10360 = !DILocation(line: 0, scope: !10354, inlinedAt: !10358)
!10361 = !DILocation(line: 178, column: 21, scope: !10317)
!10362 = !DILocation(line: 180, column: 18, scope: !10317)
!10363 = !DILocation(line: 182, column: 14, scope: !10317)
!10364 = !DILocation(line: 183, column: 15, scope: !10317)
!10365 = !DILocation(line: 185, column: 39, scope: !10317)
!10366 = !DILocation(line: 185, column: 37, scope: !10317)
!10367 = !DILocation(line: 187, column: 27, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10317, file: !1573, line: 187, column: 6)
!10369 = !DILocation(line: 187, column: 6, scope: !10317)
!10370 = !DILocation(line: 202, column: 27, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10368, file: !1573, line: 195, column: 9)
!10372 = !DILocation(line: 202, column: 48, scope: !10371)
!10373 = !DILocation(line: 203, column: 9, scope: !10371)
!10374 = !DILocation(line: 204, column: 11, scope: !10371)
!10375 = !DILocation(line: 205, column: 13, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10371, file: !1573, line: 205, column: 7)
!10377 = !DILocation(line: 205, column: 7, scope: !10371)
!10378 = !DILocation(line: 0, scope: !10368)
!10379 = !DILocation(line: 212, column: 18, scope: !10317)
!10380 = !DILocation(line: 214, column: 28, scope: !10317)
!10381 = !DILocation(line: 214, column: 16, scope: !10317)
!10382 = !DILocation(line: 215, column: 15, scope: !10317)
!10383 = !DILocation(line: 227, column: 11, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10317, file: !1573, line: 227, column: 6)
!10385 = !DILocation(line: 227, column: 6, scope: !10317)
!10386 = !DILocation(line: 228, column: 15, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10384, file: !1573, line: 227, column: 19)
!10388 = !DILocation(line: 228, column: 38, scope: !10387)
!10389 = !DILocation(line: 228, column: 24, scope: !10387)
!10390 = !DILocation(line: 229, column: 2, scope: !10387)
!10391 = !DILocation(line: 230, column: 24, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10384, file: !1573, line: 229, column: 9)
!10393 = !DILocation(line: 230, column: 15, scope: !10392)
!10394 = !DILocation(line: 0, scope: !10384)
!10395 = !DILocalVariable(name: "key", arg: 2, scope: !10396, file: !368, line: 190, type: !10328)
!10396 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !10397, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10399)
!10397 = !DISubroutineType(types: !10398)
!10398 = !{null, !10348, !10328}
!10399 = !{!10400, !10395}
!10400 = !DILocalVariable(name: "l", arg: 1, scope: !10396, file: !368, line: 189, type: !10348)
!10401 = !DILocation(line: 0, scope: !10396, inlinedAt: !10402)
!10402 = distinct !DILocation(line: 232, column: 2, scope: !10317)
!10403 = !DILocalVariable(name: "key", arg: 1, scope: !10404, file: !6193, line: 84, type: !32)
!10404 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10405)
!10405 = !{!10403}
!10406 = !DILocation(line: 0, scope: !10404, inlinedAt: !10407)
!10407 = distinct !DILocation(line: 215, column: 2, scope: !10396, inlinedAt: !10402)
!10408 = !DILocation(line: 95, column: 2, scope: !10404, inlinedAt: !10407)
!10409 = !{i64 2279736}
!10410 = !DILocation(line: 234, column: 1, scope: !10317)
!10411 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1573, file: !1573, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10412)
!10412 = !{!10413, !10414}
!10413 = !DILocalVariable(name: "key", scope: !10411, file: !1573, line: 242, type: !10328)
!10414 = !DILocalVariable(name: "cyc", scope: !10411, file: !1573, line: 243, type: !137)
!10415 = !DILocation(line: 0, scope: !10345, inlinedAt: !10416)
!10416 = distinct !DILocation(line: 242, column: 25, scope: !10411)
!10417 = !DILocation(line: 55, column: 2, scope: !10354, inlinedAt: !10418)
!10418 = distinct !DILocation(line: 145, column: 10, scope: !10345, inlinedAt: !10416)
!10419 = !DILocation(line: 0, scope: !10354, inlinedAt: !10418)
!10420 = !DILocation(line: 0, scope: !10411)
!10421 = !DILocation(line: 243, column: 17, scope: !10411)
!10422 = !DILocation(line: 243, column: 29, scope: !10411)
!10423 = !DILocation(line: 243, column: 27, scope: !10411)
!10424 = !DILocation(line: 243, column: 43, scope: !10411)
!10425 = !DILocation(line: 243, column: 41, scope: !10411)
!10426 = !DILocation(line: 0, scope: !10396, inlinedAt: !10427)
!10427 = distinct !DILocation(line: 245, column: 2, scope: !10411)
!10428 = !DILocation(line: 0, scope: !10404, inlinedAt: !10429)
!10429 = distinct !DILocation(line: 215, column: 2, scope: !10396, inlinedAt: !10427)
!10430 = !DILocation(line: 95, column: 2, scope: !10404, inlinedAt: !10429)
!10431 = !DILocation(line: 246, column: 13, scope: !10411)
!10432 = !DILocation(line: 246, column: 2, scope: !10411)
!10433 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1573, file: !1573, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !10434)
!10434 = !{!10435, !10436}
!10435 = !DILocalVariable(name: "key", scope: !10433, file: !1573, line: 251, type: !10328)
!10436 = !DILocalVariable(name: "ret", scope: !10433, file: !1573, line: 252, type: !137)
!10437 = !DILocation(line: 0, scope: !10345, inlinedAt: !10438)
!10438 = distinct !DILocation(line: 251, column: 25, scope: !10433)
!10439 = !DILocation(line: 55, column: 2, scope: !10354, inlinedAt: !10440)
!10440 = distinct !DILocation(line: 145, column: 10, scope: !10345, inlinedAt: !10438)
!10441 = !DILocation(line: 0, scope: !10354, inlinedAt: !10440)
!10442 = !DILocation(line: 0, scope: !10433)
!10443 = !DILocation(line: 252, column: 17, scope: !10433)
!10444 = !DILocation(line: 252, column: 29, scope: !10433)
!10445 = !DILocation(line: 252, column: 27, scope: !10433)
!10446 = !DILocation(line: 0, scope: !10396, inlinedAt: !10447)
!10447 = distinct !DILocation(line: 254, column: 2, scope: !10433)
!10448 = !DILocation(line: 0, scope: !10404, inlinedAt: !10449)
!10449 = distinct !DILocation(line: 215, column: 2, scope: !10396, inlinedAt: !10447)
!10450 = !DILocation(line: 95, column: 2, scope: !10404, inlinedAt: !10449)
!10451 = !DILocation(line: 255, column: 2, scope: !10433)
!10452 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1573, file: !1573, line: 258, type: !2885, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !162)
!10453 = !DILocation(line: 260, column: 6, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10452, file: !1573, line: 260, column: 6)
!10455 = !DILocation(line: 260, column: 16, scope: !10454)
!10456 = !DILocation(line: 260, column: 6, scope: !10452)
!10457 = !DILocation(line: 261, column: 17, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10454, file: !1573, line: 260, column: 34)
!10459 = !DILocation(line: 262, column: 2, scope: !10458)
!10460 = !DILocation(line: 263, column: 1, scope: !10452)
!10461 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1573, file: !1573, line: 265, type: !2885, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1493, retainedNodes: !162)
!10462 = !DILocation(line: 267, column: 16, scope: !10461)
!10463 = !DILocation(line: 268, column: 1, scope: !10461)
!10464 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10465, file: !10465, line: 9, type: !10466, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !10489)
!10465 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10466 = !DISubroutineType(types: !10467)
!10467 = !{!103, !10468, !208, !10488}
!10468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10469, size: 32)
!10469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10470)
!10470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1406, line: 60, size: 64, elements: !10471)
!10471 = !{!10472, !10487}
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10470, file: !1406, line: 69, baseType: !10473, size: 32)
!10473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10474, size: 32)
!10474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10475)
!10475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1406, line: 50, size: 64, elements: !10476)
!10476 = !{!10477, !10485, !10486}
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10475, file: !1406, line: 52, baseType: !10478, size: 32)
!10478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10479, size: 32)
!10479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10480)
!10480 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1417, line: 37, baseType: !10481)
!10481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1417, line: 32, size: 64, elements: !10482)
!10482 = !{!10483, !10484}
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10481, file: !1417, line: 34, baseType: !137, size: 32)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10481, file: !1417, line: 36, baseType: !137, size: 32, offset: 32)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10475, file: !1406, line: 54, baseType: !208, size: 8, offset: 32)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10475, file: !1406, line: 56, baseType: !208, size: 8, offset: 40)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10470, file: !1406, line: 71, baseType: !208, size: 8, offset: 32)
!10488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10473, size: 32)
!10489 = !{!10490, !10491, !10492}
!10490 = !DILocalVariable(name: "config", arg: 1, scope: !10464, file: !10465, line: 9, type: !10468)
!10491 = !DILocalVariable(name: "id", arg: 2, scope: !10464, file: !10465, line: 9, type: !208)
!10492 = !DILocalVariable(name: "state", arg: 3, scope: !10464, file: !10465, line: 10, type: !10488)
!10493 = !DILocation(line: 0, scope: !10464)
!10494 = !DILocation(line: 12, column: 20, scope: !10464)
!10495 = !DILocation(line: 13, column: 27, scope: !10464)
!10496 = !DILocation(line: 13, column: 42, scope: !10464)
!10497 = !DILocation(line: 13, column: 19, scope: !10464)
!10498 = !DILocation(line: 13, column: 16, scope: !10464)
!10499 = !DILocation(line: 13, column: 2, scope: !10464)
!10500 = distinct !{!10500, !10499, !10501}
!10501 = !DILocation(line: 19, column: 2, scope: !10464)
!10502 = !DILocation(line: 14, column: 23, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !10465, line: 14, column: 7)
!10504 = distinct !DILexicalBlock(scope: !10464, file: !10465, line: 13, column: 54)
!10505 = !DILocation(line: 14, column: 10, scope: !10503)
!10506 = !DILocation(line: 18, column: 11, scope: !10504)
!10507 = !DILocation(line: 14, column: 7, scope: !10504)
!10508 = !DILocation(line: 22, column: 1, scope: !10464)
!10509 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1690, file: !1690, line: 193, type: !10510, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1608, retainedNodes: !10519)
!10510 = !DISubroutineType(types: !10511)
!10511 = !{!103, !10512, !208, !22}
!10512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10513, size: 32)
!10513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10514)
!10514 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1417, line: 37, baseType: !10515)
!10515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1417, line: 32, size: 64, elements: !10516)
!10516 = !{!10517, !10518}
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10515, file: !1417, line: 34, baseType: !137, size: 32)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10515, file: !1417, line: 36, baseType: !137, size: 32, offset: 32)
!10519 = !{!10520, !10521, !10522, !10523, !10524, !10525, !10526, !10527, !10529}
!10520 = !DILocalVariable(name: "pins", arg: 1, scope: !10509, file: !1690, line: 193, type: !10512)
!10521 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10509, file: !1690, line: 193, type: !208)
!10522 = !DILocalVariable(name: "reg", arg: 3, scope: !10509, file: !1690, line: 194, type: !22)
!10523 = !DILocalVariable(name: "pin", scope: !10509, file: !1690, line: 196, type: !137)
!10524 = !DILocalVariable(name: "mux", scope: !10509, file: !1690, line: 196, type: !137)
!10525 = !DILocalVariable(name: "pin_cgf", scope: !10509, file: !1690, line: 197, type: !137)
!10526 = !DILocalVariable(name: "ret", scope: !10509, file: !1690, line: 198, type: !103)
!10527 = !DILocalVariable(name: "i", scope: !10528, file: !1690, line: 209, type: !208)
!10528 = distinct !DILexicalBlock(scope: !10509, file: !1690, line: 209, column: 2)
!10529 = !DILocalVariable(name: "gpio_out", scope: !10530, file: !1690, line: 239, type: !137)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !1690, line: 238, column: 55)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1690, line: 238, column: 14)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !1690, line: 236, column: 14)
!10533 = distinct !DILexicalBlock(scope: !10534, file: !1690, line: 234, column: 7)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !1690, line: 209, column: 41)
!10535 = distinct !DILexicalBlock(scope: !10528, file: !1690, line: 209, column: 2)
!10536 = !DILocation(line: 0, scope: !10509)
!10537 = !DILocation(line: 0, scope: !10528)
!10538 = !DILocation(line: 209, column: 25, scope: !10535)
!10539 = !DILocation(line: 209, column: 2, scope: !10528)
!10540 = distinct !{!10540, !10539, !10541}
!10541 = !DILocation(line: 259, column: 2, scope: !10528)
!10542 = !DILocation(line: 210, column: 17, scope: !10534)
!10543 = !DILocation(line: 234, column: 7, scope: !10533)
!10544 = !DILocation(line: 234, column: 33, scope: !10533)
!10545 = !DILocation(line: 234, column: 7, scope: !10534)
!10546 = !DILocation(line: 235, column: 22, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10533, file: !1690, line: 234, column: 49)
!10548 = !DILocation(line: 235, column: 29, scope: !10547)
!10549 = !DILocation(line: 236, column: 3, scope: !10547)
!10550 = !DILocation(line: 236, column: 14, scope: !10533)
!10551 = !DILocation(line: 239, column: 32, scope: !10530)
!10552 = !DILocation(line: 0, scope: !10530)
!10553 = !DILocation(line: 241, column: 8, scope: !10530)
!10554 = !DILocation(line: 246, column: 3, scope: !10530)
!10555 = !DILocation(line: 252, column: 9, scope: !10534)
!10556 = !DILocation(line: 255, column: 9, scope: !10534)
!10557 = !DILocation(line: 256, column: 11, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10534, file: !1690, line: 256, column: 7)
!10559 = !DILocation(line: 209, column: 37, scope: !10535)
!10560 = !DILocation(line: 256, column: 7, scope: !10534)
!10561 = !DILocation(line: 262, column: 1, scope: !10509)
!10562 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1690, file: !1690, line: 176, type: !10563, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1608, retainedNodes: !10565)
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!103, !137, !137, !137}
!10565 = !{!10566, !10567, !10568, !10569}
!10566 = !DILocalVariable(name: "pin", arg: 1, scope: !10562, file: !1690, line: 176, type: !137)
!10567 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10562, file: !1690, line: 176, type: !137)
!10568 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10562, file: !1690, line: 176, type: !137)
!10569 = !DILocalVariable(name: "port_device", scope: !10562, file: !1690, line: 178, type: !1620)
!10570 = !DILocation(line: 0, scope: !10562)
!10571 = !DILocation(line: 180, column: 22, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10562, file: !1690, line: 180, column: 6)
!10573 = !DILocation(line: 180, column: 6, scope: !10562)
!10574 = !DILocation(line: 180, column: 6, scope: !10572)
!10575 = !DILocation(line: 184, column: 16, scope: !10562)
!10576 = !DILocation(line: 186, column: 19, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10562, file: !1690, line: 186, column: 6)
!10578 = !DILocation(line: 186, column: 28, scope: !10577)
!10579 = !DILocation(line: 186, column: 33, scope: !10577)
!10580 = !DILocation(line: 186, column: 6, scope: !10562)
!10581 = !DILocation(line: 190, column: 43, scope: !10562)
!10582 = !DILocation(line: 190, column: 9, scope: !10562)
!10583 = !DILocation(line: 190, column: 2, scope: !10562)
!10584 = !DILocation(line: 191, column: 1, scope: !10562)
!10585 = distinct !DISubprogram(name: "device_is_ready", scope: !8574, file: !8574, line: 47, type: !10586, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1608, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{!211, !1620}
!10588 = !{!10589}
!10589 = !DILocalVariable(name: "dev", arg: 1, scope: !10585, file: !8574, line: 47, type: !1620)
!10590 = !DILocation(line: 0, scope: !10585)
!10591 = !DILocation(line: 55, column: 2, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10585, file: !8574, line: 55, column: 2)
!10593 = !{i64 2149512928}
!10594 = !DILocation(line: 56, column: 9, scope: !10585)
!10595 = !DILocation(line: 56, column: 2, scope: !10585)
!10596 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10586, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1608, retainedNodes: !10597)
!10597 = !{!10598}
!10598 = !DILocalVariable(name: "dev", arg: 1, scope: !10596, file: !196, line: 730, type: !1620)
!10599 = !DILocation(line: 0, scope: !10596)
!10600 = !DILocation(line: 732, column: 9, scope: !10596)
!10601 = !DILocation(line: 732, column: 2, scope: !10596)
!10602 = distinct !DISubprogram(name: "SystemInit", scope: !1742, file: !1742, line: 167, type: !2885, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !162)
!10603 = !DILocation(line: 182, column: 1, scope: !10602)
!10604 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1742, file: !1742, line: 220, type: !2885, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1698, retainedNodes: !10605)
!10605 = !{!10606, !10607, !10608, !10609, !10610}
!10606 = !DILocalVariable(name: "tmp", scope: !10604, file: !1742, line: 222, type: !137)
!10607 = !DILocalVariable(name: "pllvco", scope: !10604, file: !1742, line: 222, type: !137)
!10608 = !DILocalVariable(name: "pllp", scope: !10604, file: !1742, line: 222, type: !137)
!10609 = !DILocalVariable(name: "pllsource", scope: !10604, file: !1742, line: 222, type: !137)
!10610 = !DILocalVariable(name: "pllm", scope: !10604, file: !1742, line: 222, type: !137)
!10611 = !DILocation(line: 0, scope: !10604)
!10612 = !DILocation(line: 225, column: 14, scope: !10604)
!10613 = !DILocation(line: 225, column: 19, scope: !10604)
!10614 = !DILocation(line: 227, column: 3, scope: !10604)
!10615 = !DILocation(line: 240, column: 25, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10604, file: !1742, line: 228, column: 3)
!10617 = !DILocation(line: 241, column: 19, scope: !10616)
!10618 = !DILocation(line: 241, column: 27, scope: !10616)
!10619 = !DILocation(line: 0, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10616, file: !1742, line: 243, column: 11)
!10621 = !DILocation(line: 254, column: 22, scope: !10616)
!10622 = !DILocation(line: 254, column: 62, scope: !10616)
!10623 = !DILocation(line: 255, column: 31, scope: !10616)
!10624 = !DILocation(line: 256, column: 7, scope: !10616)
!10625 = !DILocation(line: 0, scope: !10616)
!10626 = !DILocation(line: 263, column: 30, scope: !10604)
!10627 = !DILocation(line: 263, column: 52, scope: !10604)
!10628 = !DILocation(line: 263, column: 9, scope: !10604)
!10629 = !DILocation(line: 265, column: 19, scope: !10604)
!10630 = !DILocation(line: 266, column: 1, scope: !10604)
!10631 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !10632, file: !10632, line: 87, type: !10633, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !10672)
!10632 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10633 = !DISubroutineType(types: !10634)
!10634 = !{!10635, !10636}
!10635 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2719, line: 44, baseType: !2718)
!10636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10637, size: 32)
!10637 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !10638, line: 172, baseType: !10639)
!10638 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10638, line: 121, size: 736, elements: !10640)
!10640 = !{!10641, !10642, !10651, !10659, !10660, !10661, !10662, !10663, !10664, !10665, !10666, !10667, !10668, !10669, !10670, !10671}
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !10639, file: !10638, line: 123, baseType: !137, size: 32)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !10639, file: !10638, line: 126, baseType: !10643, size: 160, offset: 32)
!10643 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !10638, line: 97, baseType: !10644)
!10644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10638, line: 79, size: 160, elements: !10645)
!10645 = !{!10646, !10647, !10648, !10649, !10650}
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !10644, file: !10638, line: 81, baseType: !137, size: 32)
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !10644, file: !10638, line: 84, baseType: !137, size: 32, offset: 32)
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !10644, file: !10638, line: 87, baseType: !137, size: 32, offset: 64)
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !10644, file: !10638, line: 90, baseType: !137, size: 32, offset: 96)
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !10644, file: !10638, line: 94, baseType: !137, size: 32, offset: 128)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !10639, file: !10638, line: 129, baseType: !10652, size: 128, offset: 192)
!10652 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !10638, line: 116, baseType: !10653)
!10653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10638, line: 102, size: 128, elements: !10654)
!10654 = !{!10655, !10656, !10657, !10658}
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !10653, file: !10638, line: 104, baseType: !137, size: 32)
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !10653, file: !10638, line: 107, baseType: !137, size: 32, offset: 32)
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !10653, file: !10638, line: 110, baseType: !137, size: 32, offset: 64)
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !10653, file: !10638, line: 113, baseType: !137, size: 32, offset: 96)
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !10639, file: !10638, line: 132, baseType: !137, size: 32, offset: 320)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !10639, file: !10638, line: 136, baseType: !137, size: 32, offset: 352)
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !10639, file: !10638, line: 140, baseType: !137, size: 32, offset: 384)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !10639, file: !10638, line: 143, baseType: !137, size: 32, offset: 416)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !10639, file: !10638, line: 146, baseType: !137, size: 32, offset: 448)
!10664 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !10639, file: !10638, line: 149, baseType: !137, size: 32, offset: 480)
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !10639, file: !10638, line: 152, baseType: !137, size: 32, offset: 512)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !10639, file: !10638, line: 155, baseType: !137, size: 32, offset: 544)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !10639, file: !10638, line: 158, baseType: !137, size: 32, offset: 576)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !10639, file: !10638, line: 161, baseType: !137, size: 32, offset: 608)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !10639, file: !10638, line: 164, baseType: !137, size: 32, offset: 640)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !10639, file: !10638, line: 167, baseType: !137, size: 32, offset: 672)
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !10639, file: !10638, line: 170, baseType: !208, size: 8, offset: 704)
!10672 = !{!10673, !10674, !10675, !10676, !10677, !10678, !10679, !10680, !10681, !10682, !10683}
!10673 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !10631, file: !10632, line: 87, type: !10636)
!10674 = !DILocalVariable(name: "tickstart", scope: !10631, file: !10632, line: 89, type: !137)
!10675 = !DILocalVariable(name: "tmpreg1", scope: !10631, file: !10632, line: 90, type: !137)
!10676 = !DILocalVariable(name: "plli2sp", scope: !10631, file: !10632, line: 91, type: !137)
!10677 = !DILocalVariable(name: "plli2sq", scope: !10631, file: !10632, line: 92, type: !137)
!10678 = !DILocalVariable(name: "plli2sr", scope: !10631, file: !10632, line: 93, type: !137)
!10679 = !DILocalVariable(name: "pllsaip", scope: !10631, file: !10632, line: 94, type: !137)
!10680 = !DILocalVariable(name: "pllsaiq", scope: !10631, file: !10632, line: 95, type: !137)
!10681 = !DILocalVariable(name: "plli2sused", scope: !10631, file: !10632, line: 96, type: !137)
!10682 = !DILocalVariable(name: "pllsaiused", scope: !10631, file: !10632, line: 97, type: !137)
!10683 = !DILocalVariable(name: "tmpreg", scope: !10684, file: !10632, line: 184, type: !176)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !10632, line: 184, column: 5)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !10632, line: 179, column: 3)
!10686 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 178, column: 6)
!10687 = !DILocation(line: 0, scope: !10631)
!10688 = !DILocation(line: 103, column: 23, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 103, column: 6)
!10690 = !DILocation(line: 103, column: 45, scope: !10689)
!10691 = !DILocation(line: 103, column: 71, scope: !10689)
!10692 = !DILocation(line: 103, column: 6, scope: !10631)
!10693 = !DILocation(line: 109, column: 5, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10689, file: !10632, line: 104, column: 3)
!10695 = !DILocation(line: 111, column: 23, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10694, file: !10632, line: 111, column: 8)
!10697 = !DILocation(line: 111, column: 45, scope: !10696)
!10698 = !DILocation(line: 111, column: 8, scope: !10694)
!10699 = !DILocation(line: 119, column: 23, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 119, column: 6)
!10701 = !DILocation(line: 119, column: 45, scope: !10700)
!10702 = !DILocation(line: 119, column: 71, scope: !10700)
!10703 = !DILocation(line: 119, column: 6, scope: !10631)
!10704 = !DILocation(line: 125, column: 5, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10700, file: !10632, line: 120, column: 3)
!10706 = !DILocation(line: 127, column: 23, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10705, file: !10632, line: 127, column: 8)
!10708 = !DILocation(line: 127, column: 45, scope: !10707)
!10709 = !DILocation(line: 127, column: 8, scope: !10705)
!10710 = !DILocation(line: 135, column: 23, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 135, column: 6)
!10712 = !DILocation(line: 135, column: 45, scope: !10711)
!10713 = !DILocation(line: 135, column: 67, scope: !10711)
!10714 = !DILocation(line: 135, column: 6, scope: !10631)
!10715 = !DILocation(line: 141, column: 5, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10711, file: !10632, line: 136, column: 3)
!10717 = !DILocation(line: 143, column: 23, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10716, file: !10632, line: 143, column: 8)
!10719 = !DILocation(line: 143, column: 42, scope: !10718)
!10720 = !DILocation(line: 143, column: 8, scope: !10716)
!10721 = !DILocation(line: 148, column: 42, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10716, file: !10632, line: 148, column: 8)
!10723 = !DILocation(line: 148, column: 8, scope: !10716)
!10724 = !DILocation(line: 156, column: 23, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 156, column: 6)
!10726 = !DILocation(line: 156, column: 45, scope: !10725)
!10727 = !DILocation(line: 156, column: 67, scope: !10725)
!10728 = !DILocation(line: 156, column: 6, scope: !10631)
!10729 = !DILocation(line: 162, column: 5, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10725, file: !10632, line: 157, column: 3)
!10731 = !DILocation(line: 165, column: 23, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10730, file: !10632, line: 165, column: 8)
!10733 = !DILocation(line: 165, column: 42, scope: !10732)
!10734 = !DILocation(line: 165, column: 8, scope: !10730)
!10735 = !DILocation(line: 170, column: 42, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10730, file: !10632, line: 170, column: 8)
!10737 = !DILocation(line: 170, column: 8, scope: !10730)
!10738 = !DILocation(line: 178, column: 23, scope: !10686)
!10739 = !DILocation(line: 178, column: 45, scope: !10686)
!10740 = !DILocation(line: 178, column: 66, scope: !10686)
!10741 = !DILocation(line: 178, column: 6, scope: !10631)
!10742 = !DILocation(line: 184, column: 5, scope: !10684)
!10743 = !DILocation(line: 184, column: 5, scope: !10685)
!10744 = !DILocation(line: 187, column: 13, scope: !10685)
!10745 = !DILocation(line: 190, column: 17, scope: !10685)
!10746 = !DILocation(line: 192, column: 5, scope: !10685)
!10747 = !DILocation(line: 192, column: 17, scope: !10685)
!10748 = !DILocation(line: 192, column: 20, scope: !10685)
!10749 = !DILocation(line: 192, column: 34, scope: !10685)
!10750 = !DILocation(line: 194, column: 11, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10752, file: !10632, line: 194, column: 10)
!10752 = distinct !DILexicalBlock(scope: !10685, file: !10632, line: 193, column: 5)
!10753 = !DILocation(line: 194, column: 25, scope: !10751)
!10754 = !DILocation(line: 194, column: 39, scope: !10751)
!10755 = !DILocation(line: 194, column: 10, scope: !10752)
!10756 = distinct !{!10756, !10746, !10757}
!10757 = !DILocation(line: 198, column: 5, scope: !10685)
!10758 = !DILocation(line: 200, column: 21, scope: !10685)
!10759 = !DILocation(line: 200, column: 26, scope: !10685)
!10760 = !DILocation(line: 201, column: 17, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10685, file: !10632, line: 201, column: 8)
!10762 = !DILocation(line: 201, column: 33, scope: !10761)
!10763 = !DILocation(line: 201, column: 66, scope: !10761)
!10764 = !DILocation(line: 201, column: 84, scope: !10761)
!10765 = !DILocation(line: 201, column: 47, scope: !10761)
!10766 = !DILocation(line: 201, column: 8, scope: !10685)
!10767 = !DILocation(line: 204, column: 23, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10761, file: !10632, line: 202, column: 5)
!10769 = !DILocation(line: 204, column: 28, scope: !10768)
!10770 = !DILocation(line: 206, column: 7, scope: !10768)
!10771 = !DILocation(line: 207, column: 7, scope: !10768)
!10772 = !DILocation(line: 209, column: 17, scope: !10768)
!10773 = !DILocation(line: 212, column: 10, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10768, file: !10632, line: 212, column: 10)
!10775 = !DILocation(line: 212, column: 10, scope: !10768)
!10776 = !DILocation(line: 215, column: 21, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10774, file: !10632, line: 213, column: 7)
!10778 = !DILocation(line: 218, column: 9, scope: !10777)
!10779 = !DILocation(line: 218, column: 15, scope: !10777)
!10780 = !DILocation(line: 218, column: 51, scope: !10777)
!10781 = !DILocation(line: 220, column: 15, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10783, file: !10632, line: 220, column: 14)
!10783 = distinct !DILexicalBlock(scope: !10777, file: !10632, line: 219, column: 9)
!10784 = !DILocation(line: 220, column: 29, scope: !10782)
!10785 = !DILocation(line: 220, column: 43, scope: !10782)
!10786 = !DILocation(line: 220, column: 14, scope: !10783)
!10787 = distinct !{!10787, !10778, !10788}
!10788 = !DILocation(line: 224, column: 9, scope: !10777)
!10789 = !DILocation(line: 227, column: 5, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10685, file: !10632, line: 227, column: 5)
!10791 = !DILocation(line: 232, column: 23, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 232, column: 6)
!10793 = !DILocation(line: 228, column: 3, scope: !10685)
!10794 = !DILocation(line: 232, column: 45, scope: !10792)
!10795 = !DILocation(line: 232, column: 66, scope: !10792)
!10796 = !DILocation(line: 232, column: 6, scope: !10631)
!10797 = !DILocation(line: 235, column: 5, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10792, file: !10632, line: 233, column: 3)
!10799 = !DILocation(line: 240, column: 23, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 240, column: 6)
!10801 = !DILocation(line: 236, column: 3, scope: !10798)
!10802 = !DILocation(line: 240, column: 45, scope: !10800)
!10803 = !DILocation(line: 240, column: 70, scope: !10800)
!10804 = !DILocation(line: 240, column: 6, scope: !10631)
!10805 = !DILocation(line: 246, column: 5, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10800, file: !10632, line: 241, column: 3)
!10807 = !DILocation(line: 251, column: 23, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 251, column: 6)
!10809 = !DILocation(line: 247, column: 3, scope: !10806)
!10810 = !DILocation(line: 251, column: 45, scope: !10808)
!10811 = !DILocation(line: 251, column: 66, scope: !10808)
!10812 = !DILocation(line: 251, column: 6, scope: !10631)
!10813 = !DILocation(line: 257, column: 5, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10808, file: !10632, line: 252, column: 3)
!10815 = !DILocation(line: 262, column: 23, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 262, column: 6)
!10817 = !DILocation(line: 258, column: 3, scope: !10814)
!10818 = !DILocation(line: 262, column: 45, scope: !10816)
!10819 = !DILocation(line: 262, column: 68, scope: !10816)
!10820 = !DILocation(line: 262, column: 6, scope: !10631)
!10821 = !DILocation(line: 268, column: 5, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10816, file: !10632, line: 263, column: 3)
!10823 = !DILocation(line: 271, column: 23, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10822, file: !10632, line: 271, column: 8)
!10825 = !DILocation(line: 271, column: 43, scope: !10824)
!10826 = !DILocation(line: 271, column: 8, scope: !10822)
!10827 = !DILocation(line: 279, column: 23, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 279, column: 6)
!10829 = !DILocation(line: 279, column: 45, scope: !10828)
!10830 = !DILocation(line: 279, column: 67, scope: !10828)
!10831 = !DILocation(line: 279, column: 6, scope: !10631)
!10832 = !DILocation(line: 285, column: 5, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !10632, line: 280, column: 3)
!10834 = !DILocation(line: 290, column: 23, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 290, column: 6)
!10836 = !DILocation(line: 286, column: 3, scope: !10833)
!10837 = !DILocation(line: 290, column: 45, scope: !10835)
!10838 = !DILocation(line: 290, column: 70, scope: !10835)
!10839 = !DILocation(line: 290, column: 6, scope: !10631)
!10840 = !DILocation(line: 296, column: 5, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10835, file: !10632, line: 291, column: 3)
!10842 = !DILocation(line: 298, column: 23, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10841, file: !10632, line: 298, column: 8)
!10844 = !DILocation(line: 298, column: 43, scope: !10843)
!10845 = !DILocation(line: 298, column: 8, scope: !10841)
!10846 = !DILocation(line: 308, column: 44, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 308, column: 6)
!10848 = !DILocation(line: 308, column: 18, scope: !10847)
!10849 = !DILocation(line: 308, column: 25, scope: !10847)
!10850 = !DILocation(line: 308, column: 65, scope: !10847)
!10851 = !DILocation(line: 308, column: 6, scope: !10631)
!10852 = !DILocation(line: 311, column: 5, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10847, file: !10632, line: 309, column: 3)
!10854 = !DILocation(line: 313, column: 17, scope: !10853)
!10855 = !DILocation(line: 315, column: 5, scope: !10853)
!10856 = !DILocation(line: 315, column: 11, scope: !10853)
!10857 = !DILocation(line: 317, column: 11, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !10632, line: 317, column: 10)
!10859 = distinct !DILexicalBlock(scope: !10853, file: !10632, line: 316, column: 5)
!10860 = !DILocation(line: 317, column: 25, scope: !10858)
!10861 = !DILocation(line: 317, column: 39, scope: !10858)
!10862 = !DILocation(line: 317, column: 10, scope: !10859)
!10863 = distinct !{!10863, !10855, !10864}
!10864 = !DILocation(line: 322, column: 5, scope: !10853)
!10865 = !DILocation(line: 329, column: 27, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10853, file: !10632, line: 329, column: 8)
!10867 = !DILocation(line: 329, column: 49, scope: !10866)
!10868 = !DILocation(line: 329, column: 75, scope: !10866)
!10869 = !DILocation(line: 329, column: 102, scope: !10866)
!10870 = !DILocation(line: 329, column: 121, scope: !10866)
!10871 = !DILocation(line: 329, column: 143, scope: !10866)
!10872 = !DILocation(line: 329, column: 176, scope: !10866)
!10873 = !DILocation(line: 330, column: 49, scope: !10866)
!10874 = !DILocation(line: 330, column: 75, scope: !10866)
!10875 = !DILocation(line: 330, column: 102, scope: !10866)
!10876 = !DILocation(line: 330, column: 121, scope: !10866)
!10877 = !DILocation(line: 330, column: 143, scope: !10866)
!10878 = !DILocation(line: 329, column: 8, scope: !10853)
!10879 = !DILocation(line: 336, column: 26, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10866, file: !10632, line: 331, column: 5)
!10881 = !DILocation(line: 336, column: 100, scope: !10880)
!10882 = !DILocation(line: 337, column: 24, scope: !10880)
!10883 = !DILocation(line: 337, column: 61, scope: !10880)
!10884 = !DILocation(line: 341, column: 7, scope: !10880)
!10885 = !DILocation(line: 345, column: 27, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10853, file: !10632, line: 345, column: 8)
!10887 = !DILocation(line: 342, column: 5, scope: !10880)
!10888 = !DILocation(line: 345, column: 49, scope: !10886)
!10889 = !DILocation(line: 345, column: 71, scope: !10886)
!10890 = !DILocation(line: 345, column: 94, scope: !10886)
!10891 = !DILocation(line: 345, column: 113, scope: !10886)
!10892 = !DILocation(line: 345, column: 132, scope: !10886)
!10893 = !DILocation(line: 345, column: 162, scope: !10886)
!10894 = !DILocation(line: 346, column: 49, scope: !10886)
!10895 = !DILocation(line: 346, column: 71, scope: !10886)
!10896 = !DILocation(line: 346, column: 94, scope: !10886)
!10897 = !DILocation(line: 346, column: 113, scope: !10886)
!10898 = !DILocation(line: 346, column: 132, scope: !10886)
!10899 = !DILocation(line: 345, column: 8, scope: !10853)
!10900 = !DILocation(line: 354, column: 26, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10886, file: !10632, line: 347, column: 5)
!10902 = !DILocation(line: 354, column: 100, scope: !10901)
!10903 = !DILocation(line: 355, column: 24, scope: !10901)
!10904 = !DILocation(line: 355, column: 61, scope: !10901)
!10905 = !DILocation(line: 360, column: 7, scope: !10901)
!10906 = !DILocation(line: 363, column: 7, scope: !10901)
!10907 = !DILocation(line: 367, column: 26, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10853, file: !10632, line: 367, column: 8)
!10909 = !DILocation(line: 364, column: 5, scope: !10901)
!10910 = !DILocation(line: 367, column: 48, scope: !10908)
!10911 = !DILocation(line: 367, column: 73, scope: !10908)
!10912 = !DILocation(line: 367, column: 99, scope: !10908)
!10913 = !DILocation(line: 367, column: 118, scope: !10908)
!10914 = !DILocation(line: 367, column: 138, scope: !10908)
!10915 = !DILocation(line: 367, column: 8, scope: !10853)
!10916 = !DILocation(line: 372, column: 26, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10908, file: !10632, line: 368, column: 5)
!10918 = !DILocation(line: 373, column: 24, scope: !10917)
!10919 = !DILocation(line: 373, column: 61, scope: !10917)
!10920 = !DILocation(line: 377, column: 7, scope: !10917)
!10921 = !DILocation(line: 381, column: 24, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10853, file: !10632, line: 381, column: 8)
!10923 = !DILocation(line: 378, column: 5, scope: !10917)
!10924 = !DILocation(line: 381, column: 45, scope: !10922)
!10925 = !DILocation(line: 381, column: 69, scope: !10922)
!10926 = !DILocation(line: 381, column: 8, scope: !10853)
!10927 = !DILocation(line: 390, column: 7, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10922, file: !10632, line: 382, column: 5)
!10929 = !DILocation(line: 391, column: 5, scope: !10928)
!10930 = !DILocation(line: 394, column: 5, scope: !10853)
!10931 = !DILocation(line: 396, column: 17, scope: !10853)
!10932 = !DILocation(line: 398, column: 5, scope: !10853)
!10933 = !DILocation(line: 398, column: 11, scope: !10853)
!10934 = !DILocation(line: 398, column: 51, scope: !10853)
!10935 = !DILocation(line: 400, column: 11, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !10632, line: 400, column: 10)
!10937 = distinct !DILexicalBlock(scope: !10853, file: !10632, line: 399, column: 5)
!10938 = !DILocation(line: 400, column: 25, scope: !10936)
!10939 = !DILocation(line: 400, column: 39, scope: !10936)
!10940 = !DILocation(line: 400, column: 10, scope: !10937)
!10941 = distinct !{!10941, !10932, !10942}
!10942 = !DILocation(line: 405, column: 5, scope: !10853)
!10943 = !DILocation(line: 411, column: 17, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10631, file: !10632, line: 411, column: 6)
!10945 = !DILocation(line: 411, column: 6, scope: !10631)
!10946 = !DILocation(line: 414, column: 5, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10944, file: !10632, line: 412, column: 3)
!10948 = !DILocation(line: 416, column: 17, scope: !10947)
!10949 = !DILocation(line: 418, column: 5, scope: !10947)
!10950 = !DILocation(line: 418, column: 11, scope: !10947)
!10951 = !DILocation(line: 420, column: 11, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !10632, line: 420, column: 10)
!10953 = distinct !DILexicalBlock(scope: !10947, file: !10632, line: 419, column: 5)
!10954 = !DILocation(line: 420, column: 25, scope: !10952)
!10955 = !DILocation(line: 420, column: 39, scope: !10952)
!10956 = !DILocation(line: 420, column: 10, scope: !10953)
!10957 = distinct !{!10957, !10949, !10958}
!10958 = !DILocation(line: 425, column: 5, scope: !10947)
!10959 = !DILocation(line: 432, column: 27, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10947, file: !10632, line: 432, column: 8)
!10961 = !DILocation(line: 432, column: 49, scope: !10960)
!10962 = !DILocation(line: 432, column: 71, scope: !10960)
!10963 = !DILocation(line: 432, column: 94, scope: !10960)
!10964 = !DILocation(line: 432, column: 113, scope: !10960)
!10965 = !DILocation(line: 432, column: 132, scope: !10960)
!10966 = !DILocation(line: 432, column: 162, scope: !10960)
!10967 = !DILocation(line: 433, column: 49, scope: !10960)
!10968 = !DILocation(line: 433, column: 71, scope: !10960)
!10969 = !DILocation(line: 433, column: 94, scope: !10960)
!10970 = !DILocation(line: 433, column: 113, scope: !10960)
!10971 = !DILocation(line: 433, column: 132, scope: !10960)
!10972 = !DILocation(line: 432, column: 8, scope: !10947)
!10973 = !DILocation(line: 441, column: 26, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10960, file: !10632, line: 434, column: 5)
!10975 = !DILocation(line: 441, column: 100, scope: !10974)
!10976 = !DILocation(line: 445, column: 7, scope: !10974)
!10977 = !DILocation(line: 448, column: 7, scope: !10974)
!10978 = !DILocation(line: 453, column: 26, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10947, file: !10632, line: 453, column: 8)
!10980 = !DILocation(line: 449, column: 5, scope: !10974)
!10981 = !DILocation(line: 453, column: 48, scope: !10979)
!10982 = !DILocation(line: 453, column: 71, scope: !10979)
!10983 = !DILocation(line: 453, column: 95, scope: !10979)
!10984 = !DILocation(line: 453, column: 114, scope: !10979)
!10985 = !DILocation(line: 453, column: 134, scope: !10979)
!10986 = !DILocation(line: 453, column: 8, scope: !10947)
!10987 = !DILocation(line: 458, column: 24, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10979, file: !10632, line: 454, column: 5)
!10989 = !DILocation(line: 458, column: 61, scope: !10988)
!10990 = !DILocation(line: 462, column: 7, scope: !10988)
!10991 = !DILocation(line: 463, column: 5, scope: !10988)
!10992 = !DILocation(line: 466, column: 5, scope: !10947)
!10993 = !DILocation(line: 468, column: 17, scope: !10947)
!10994 = !DILocation(line: 470, column: 5, scope: !10947)
!10995 = !DILocation(line: 470, column: 11, scope: !10947)
!10996 = !DILocation(line: 470, column: 39, scope: !10947)
!10997 = !DILocation(line: 472, column: 11, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !10632, line: 472, column: 10)
!10999 = distinct !DILexicalBlock(scope: !10947, file: !10632, line: 471, column: 5)
!11000 = !DILocation(line: 472, column: 25, scope: !10998)
!11001 = !DILocation(line: 472, column: 39, scope: !10998)
!11002 = !DILocation(line: 472, column: 10, scope: !10999)
!11003 = distinct !{!11003, !10994, !11004}
!11004 = !DILocation(line: 477, column: 5, scope: !10947)
!11005 = !DILocation(line: 480, column: 1, scope: !10631)
!11006 = !DISubprogram(name: "HAL_GetTick", scope: !11007, file: !11007, line: 234, type: !135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11007 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11008 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !10632, file: !10632, line: 489, type: !11009, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11011)
!11009 = !DISubroutineType(types: !11010)
!11010 = !{null, !10636}
!11011 = !{!11012, !11013}
!11012 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11008, file: !10632, line: 489, type: !10636)
!11013 = !DILocalVariable(name: "tempreg", scope: !11008, file: !10632, line: 491, type: !137)
!11014 = !DILocation(line: 0, scope: !11008)
!11015 = !DILocation(line: 494, column: 18, scope: !11008)
!11016 = !DILocation(line: 494, column: 39, scope: !11008)
!11017 = !DILocation(line: 502, column: 52, scope: !11008)
!11018 = !DILocation(line: 502, column: 63, scope: !11008)
!11019 = !DILocation(line: 502, column: 25, scope: !11008)
!11020 = !DILocation(line: 502, column: 33, scope: !11008)
!11021 = !DILocation(line: 503, column: 52, scope: !11008)
!11022 = !DILocation(line: 503, column: 89, scope: !11008)
!11023 = !DILocation(line: 503, column: 25, scope: !11008)
!11024 = !DILocation(line: 503, column: 33, scope: !11008)
!11025 = !DILocation(line: 504, column: 54, scope: !11008)
!11026 = !DILocation(line: 504, column: 128, scope: !11008)
!11027 = !DILocation(line: 504, column: 25, scope: !11008)
!11028 = !DILocation(line: 504, column: 33, scope: !11008)
!11029 = !DILocation(line: 505, column: 52, scope: !11008)
!11030 = !DILocation(line: 505, column: 89, scope: !11008)
!11031 = !DILocation(line: 505, column: 25, scope: !11008)
!11032 = !DILocation(line: 505, column: 33, scope: !11008)
!11033 = !DILocation(line: 506, column: 52, scope: !11008)
!11034 = !DILocation(line: 506, column: 89, scope: !11008)
!11035 = !DILocation(line: 506, column: 25, scope: !11008)
!11036 = !DILocation(line: 506, column: 33, scope: !11008)
!11037 = !DILocation(line: 508, column: 52, scope: !11008)
!11038 = !DILocation(line: 508, column: 63, scope: !11008)
!11039 = !DILocation(line: 508, column: 25, scope: !11008)
!11040 = !DILocation(line: 508, column: 33, scope: !11008)
!11041 = !DILocation(line: 509, column: 52, scope: !11008)
!11042 = !DILocation(line: 509, column: 89, scope: !11008)
!11043 = !DILocation(line: 509, column: 25, scope: !11008)
!11044 = !DILocation(line: 509, column: 33, scope: !11008)
!11045 = !DILocation(line: 510, column: 54, scope: !11008)
!11046 = !DILocation(line: 510, column: 128, scope: !11008)
!11047 = !DILocation(line: 510, column: 25, scope: !11008)
!11048 = !DILocation(line: 510, column: 33, scope: !11008)
!11049 = !DILocation(line: 511, column: 52, scope: !11008)
!11050 = !DILocation(line: 511, column: 89, scope: !11008)
!11051 = !DILocation(line: 511, column: 25, scope: !11008)
!11052 = !DILocation(line: 511, column: 33, scope: !11008)
!11053 = !DILocation(line: 513, column: 48, scope: !11008)
!11054 = !DILocation(line: 513, column: 56, scope: !11008)
!11055 = !DILocation(line: 513, column: 18, scope: !11008)
!11056 = !DILocation(line: 513, column: 29, scope: !11008)
!11057 = !DILocation(line: 514, column: 48, scope: !11008)
!11058 = !DILocation(line: 514, column: 82, scope: !11008)
!11059 = !DILocation(line: 514, column: 18, scope: !11008)
!11060 = !DILocation(line: 514, column: 29, scope: !11008)
!11061 = !DILocation(line: 517, column: 39, scope: !11008)
!11062 = !DILocation(line: 517, column: 18, scope: !11008)
!11063 = !DILocation(line: 517, column: 37, scope: !11008)
!11064 = !DILocation(line: 520, column: 39, scope: !11008)
!11065 = !DILocation(line: 520, column: 18, scope: !11008)
!11066 = !DILocation(line: 520, column: 37, scope: !11008)
!11067 = !DILocation(line: 523, column: 42, scope: !11008)
!11068 = !DILocation(line: 523, column: 18, scope: !11008)
!11069 = !DILocation(line: 523, column: 40, scope: !11008)
!11070 = !DILocation(line: 526, column: 42, scope: !11008)
!11071 = !DILocation(line: 526, column: 18, scope: !11008)
!11072 = !DILocation(line: 526, column: 40, scope: !11008)
!11073 = !DILocation(line: 529, column: 19, scope: !11008)
!11074 = !DILocation(line: 529, column: 24, scope: !11008)
!11075 = !DILocation(line: 530, column: 67, scope: !11008)
!11076 = !DILocation(line: 530, column: 72, scope: !11008)
!11077 = !DILocation(line: 530, column: 59, scope: !11008)
!11078 = !DILocation(line: 530, column: 18, scope: !11008)
!11079 = !DILocation(line: 530, column: 36, scope: !11008)
!11080 = !DILocation(line: 533, column: 38, scope: !11008)
!11081 = !DILocation(line: 533, column: 18, scope: !11008)
!11082 = !DILocation(line: 533, column: 36, scope: !11008)
!11083 = !DILocation(line: 536, column: 42, scope: !11008)
!11084 = !DILocation(line: 536, column: 18, scope: !11008)
!11085 = !DILocation(line: 536, column: 40, scope: !11008)
!11086 = !DILocation(line: 539, column: 40, scope: !11008)
!11087 = !DILocation(line: 539, column: 18, scope: !11008)
!11088 = !DILocation(line: 539, column: 38, scope: !11008)
!11089 = !DILocation(line: 542, column: 39, scope: !11008)
!11090 = !DILocation(line: 542, column: 18, scope: !11008)
!11091 = !DILocation(line: 542, column: 37, scope: !11008)
!11092 = !DILocation(line: 545, column: 40, scope: !11008)
!11093 = !DILocation(line: 545, column: 18, scope: !11008)
!11094 = !DILocation(line: 545, column: 38, scope: !11008)
!11095 = !DILocation(line: 548, column: 13, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11008, file: !10632, line: 548, column: 7)
!11097 = !DILocation(line: 548, column: 7, scope: !11008)
!11098 = !DILocation(line: 550, column: 20, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11096, file: !10632, line: 549, column: 3)
!11100 = !DILocation(line: 550, column: 37, scope: !11099)
!11101 = !DILocation(line: 556, column: 1, scope: !11008)
!11102 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !10632, file: !10632, line: 569, type: !7372, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11103)
!11103 = !{!11104, !11105, !11106, !11107, !11108, !11109, !11110}
!11104 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11102, file: !10632, line: 569, type: !137)
!11105 = !DILocalVariable(name: "tmpreg1", scope: !11102, file: !10632, line: 571, type: !137)
!11106 = !DILocalVariable(name: "frequency", scope: !11102, file: !10632, line: 573, type: !137)
!11107 = !DILocalVariable(name: "vcoinput", scope: !11102, file: !10632, line: 575, type: !137)
!11108 = !DILocalVariable(name: "saiclocksource", scope: !11102, file: !10632, line: 577, type: !137)
!11109 = !DILocalVariable(name: "srcclk", scope: !11102, file: !10632, line: 578, type: !137)
!11110 = !DILocalVariable(name: "vcooutput", scope: !11102, file: !10632, line: 580, type: !137)
!11111 = !DILocation(line: 0, scope: !11102)
!11112 = !DILocation(line: 581, column: 3, scope: !11102)
!11113 = !DILocation(line: 586, column: 29, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11115, file: !10632, line: 585, column: 5)
!11115 = distinct !DILexicalBlock(scope: !11102, file: !10632, line: 582, column: 3)
!11116 = !DILocation(line: 588, column: 7, scope: !11114)
!11117 = !DILocation(line: 594, column: 20, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !10632, line: 594, column: 14)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !10632, line: 591, column: 9)
!11120 = distinct !DILexicalBlock(scope: !11114, file: !10632, line: 589, column: 7)
!11121 = !DILocation(line: 0, scope: !11118)
!11122 = !DILocation(line: 606, column: 27, scope: !11119)
!11123 = !DILocation(line: 606, column: 64, scope: !11119)
!11124 = !DILocation(line: 607, column: 42, scope: !11119)
!11125 = !DILocation(line: 607, column: 79, scope: !11119)
!11126 = !DILocation(line: 607, column: 33, scope: !11119)
!11127 = !DILocation(line: 607, column: 86, scope: !11119)
!11128 = !DILocation(line: 610, column: 29, scope: !11119)
!11129 = !DILocation(line: 610, column: 63, scope: !11119)
!11130 = !DILocation(line: 610, column: 70, scope: !11119)
!11131 = !DILocation(line: 611, column: 32, scope: !11119)
!11132 = !DILocation(line: 612, column: 11, scope: !11119)
!11133 = !DILocation(line: 619, column: 20, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11135, file: !10632, line: 619, column: 14)
!11135 = distinct !DILexicalBlock(scope: !11120, file: !10632, line: 616, column: 9)
!11136 = !DILocation(line: 0, scope: !11134)
!11137 = !DILocation(line: 632, column: 27, scope: !11135)
!11138 = !DILocation(line: 632, column: 64, scope: !11135)
!11139 = !DILocation(line: 633, column: 42, scope: !11135)
!11140 = !DILocation(line: 633, column: 79, scope: !11135)
!11141 = !DILocation(line: 633, column: 33, scope: !11135)
!11142 = !DILocation(line: 633, column: 86, scope: !11135)
!11143 = !DILocation(line: 636, column: 28, scope: !11135)
!11144 = !DILocation(line: 636, column: 36, scope: !11135)
!11145 = !DILocation(line: 636, column: 62, scope: !11135)
!11146 = !DILocation(line: 637, column: 32, scope: !11135)
!11147 = !DILocation(line: 638, column: 11, scope: !11135)
!11148 = !DILocation(line: 645, column: 20, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !10632, line: 645, column: 14)
!11150 = distinct !DILexicalBlock(scope: !11120, file: !10632, line: 642, column: 9)
!11151 = !DILocation(line: 0, scope: !11149)
!11152 = !DILocation(line: 658, column: 27, scope: !11150)
!11153 = !DILocation(line: 658, column: 55, scope: !11150)
!11154 = !DILocation(line: 659, column: 42, scope: !11150)
!11155 = !DILocation(line: 659, column: 70, scope: !11150)
!11156 = !DILocation(line: 659, column: 33, scope: !11150)
!11157 = !DILocation(line: 659, column: 77, scope: !11150)
!11158 = !DILocation(line: 660, column: 11, scope: !11150)
!11159 = !DILocation(line: 665, column: 11, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11120, file: !10632, line: 663, column: 9)
!11161 = !DILocation(line: 669, column: 20, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11163, file: !10632, line: 669, column: 14)
!11163 = distinct !DILexicalBlock(scope: !11120, file: !10632, line: 668, column: 9)
!11164 = !DILocation(line: 691, column: 16, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11115, file: !10632, line: 689, column: 5)
!11166 = !DILocation(line: 692, column: 7, scope: !11165)
!11167 = !DILocation(line: 706, column: 20, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11169, file: !10632, line: 706, column: 14)
!11169 = distinct !DILexicalBlock(scope: !11170, file: !10632, line: 703, column: 9)
!11170 = distinct !DILexicalBlock(scope: !11165, file: !10632, line: 693, column: 7)
!11171 = !DILocation(line: 0, scope: !11168)
!11172 = !DILocation(line: 718, column: 53, scope: !11169)
!11173 = !DILocation(line: 718, column: 90, scope: !11169)
!11174 = !DILocation(line: 718, column: 43, scope: !11169)
!11175 = !DILocation(line: 720, column: 53, scope: !11169)
!11176 = !DILocation(line: 720, column: 90, scope: !11169)
!11177 = !DILocation(line: 720, column: 44, scope: !11169)
!11178 = !DILocation(line: 721, column: 11, scope: !11169)
!11179 = !DILocation(line: 728, column: 20, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !10632, line: 728, column: 14)
!11181 = distinct !DILexicalBlock(scope: !11170, file: !10632, line: 725, column: 9)
!11182 = !DILocation(line: 0, scope: !11180)
!11183 = !DILocation(line: 740, column: 53, scope: !11181)
!11184 = !DILocation(line: 740, column: 81, scope: !11181)
!11185 = !DILocation(line: 740, column: 43, scope: !11181)
!11186 = !DILocation(line: 742, column: 53, scope: !11181)
!11187 = !DILocation(line: 742, column: 81, scope: !11181)
!11188 = !DILocation(line: 742, column: 44, scope: !11181)
!11189 = !DILocation(line: 743, column: 11, scope: !11181)
!11190 = !DILocation(line: 748, column: 20, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !10632, line: 748, column: 14)
!11192 = distinct !DILexicalBlock(scope: !11170, file: !10632, line: 747, column: 9)
!11193 = !DILocation(line: 770, column: 16, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11115, file: !10632, line: 768, column: 5)
!11195 = !DILocation(line: 771, column: 7, scope: !11194)
!11196 = !DILocation(line: 785, column: 20, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !10632, line: 785, column: 14)
!11198 = distinct !DILexicalBlock(scope: !11199, file: !10632, line: 782, column: 9)
!11199 = distinct !DILexicalBlock(scope: !11194, file: !10632, line: 772, column: 7)
!11200 = !DILocation(line: 0, scope: !11197)
!11201 = !DILocation(line: 797, column: 53, scope: !11198)
!11202 = !DILocation(line: 797, column: 90, scope: !11198)
!11203 = !DILocation(line: 797, column: 43, scope: !11198)
!11204 = !DILocation(line: 799, column: 53, scope: !11198)
!11205 = !DILocation(line: 799, column: 90, scope: !11198)
!11206 = !DILocation(line: 799, column: 44, scope: !11198)
!11207 = !DILocation(line: 800, column: 11, scope: !11198)
!11208 = !DILocation(line: 807, column: 20, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !10632, line: 807, column: 14)
!11210 = distinct !DILexicalBlock(scope: !11199, file: !10632, line: 804, column: 9)
!11211 = !DILocation(line: 0, scope: !11209)
!11212 = !DILocation(line: 819, column: 53, scope: !11210)
!11213 = !DILocation(line: 819, column: 81, scope: !11210)
!11214 = !DILocation(line: 819, column: 43, scope: !11210)
!11215 = !DILocation(line: 821, column: 53, scope: !11210)
!11216 = !DILocation(line: 821, column: 81, scope: !11210)
!11217 = !DILocation(line: 821, column: 44, scope: !11210)
!11218 = !DILocation(line: 822, column: 11, scope: !11210)
!11219 = !DILocation(line: 827, column: 20, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !10632, line: 827, column: 14)
!11221 = distinct !DILexicalBlock(scope: !11199, file: !10632, line: 826, column: 9)
!11222 = !DILocation(line: 847, column: 3, scope: !11102)
!11223 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !10632, file: !10632, line: 2766, type: !11224, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11226)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{null, !208}
!11226 = !{!11227}
!11227 = !DILocalVariable(name: "Mode", arg: 1, scope: !11223, file: !10632, line: 2766, type: !208)
!11228 = !DILocation(line: 0, scope: !11223)
!11229 = !DILocation(line: 2770, column: 11, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11223, file: !10632, line: 2770, column: 6)
!11231 = !DILocation(line: 0, scope: !11230)
!11232 = !DILocation(line: 2770, column: 6, scope: !11223)
!11233 = !DILocation(line: 2778, column: 1, scope: !11223)
!11234 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !10632, file: !10632, line: 2803, type: !11235, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11238)
!11235 = !DISubroutineType(types: !11236)
!11236 = !{!10635, !11237}
!11237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10643, size: 32)
!11238 = !{!11239, !11240}
!11239 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11234, file: !10632, line: 2803, type: !11237)
!11240 = !DILocalVariable(name: "tickstart", scope: !11234, file: !10632, line: 2805, type: !137)
!11241 = !DILocation(line: 0, scope: !11234)
!11242 = !DILocation(line: 2821, column: 3, scope: !11234)
!11243 = !DILocation(line: 2824, column: 15, scope: !11234)
!11244 = !DILocation(line: 2825, column: 3, scope: !11234)
!11245 = !DILocation(line: 2825, column: 9, scope: !11234)
!11246 = !DILocation(line: 2827, column: 9, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11248, file: !10632, line: 2827, column: 8)
!11248 = distinct !DILexicalBlock(scope: !11234, file: !10632, line: 2826, column: 3)
!11249 = !DILocation(line: 2827, column: 23, scope: !11247)
!11250 = !DILocation(line: 2827, column: 37, scope: !11247)
!11251 = !DILocation(line: 2827, column: 8, scope: !11248)
!11252 = distinct !{!11252, !11244, !11253}
!11253 = !DILocation(line: 2832, column: 3, scope: !11234)
!11254 = !DILocation(line: 2840, column: 3, scope: !11234)
!11255 = !DILocation(line: 2866, column: 3, scope: !11234)
!11256 = !DILocation(line: 2869, column: 15, scope: !11234)
!11257 = !DILocation(line: 2870, column: 3, scope: !11234)
!11258 = !DILocation(line: 2870, column: 9, scope: !11234)
!11259 = !DILocation(line: 2870, column: 48, scope: !11234)
!11260 = !DILocation(line: 2872, column: 9, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11262, file: !10632, line: 2872, column: 8)
!11262 = distinct !DILexicalBlock(scope: !11234, file: !10632, line: 2871, column: 3)
!11263 = !DILocation(line: 2872, column: 23, scope: !11261)
!11264 = !DILocation(line: 2872, column: 37, scope: !11261)
!11265 = !DILocation(line: 2872, column: 8, scope: !11262)
!11266 = distinct !{!11266, !11257, !11267}
!11267 = !DILocation(line: 2877, column: 3, scope: !11234)
!11268 = !DILocation(line: 2880, column: 1, scope: !11234)
!11269 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !10632, file: !10632, line: 2886, type: !11270, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11272)
!11270 = !DISubroutineType(types: !11271)
!11271 = !{!10635}
!11272 = !{!11273}
!11273 = !DILocalVariable(name: "tickstart", scope: !11269, file: !10632, line: 2888, type: !137)
!11274 = !DILocation(line: 2891, column: 3, scope: !11269)
!11275 = !DILocation(line: 2894, column: 15, scope: !11269)
!11276 = !DILocation(line: 0, scope: !11269)
!11277 = !DILocation(line: 2895, column: 3, scope: !11269)
!11278 = !DILocation(line: 2895, column: 9, scope: !11269)
!11279 = !DILocation(line: 2895, column: 45, scope: !11269)
!11280 = !DILocation(line: 2897, column: 9, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11282, file: !10632, line: 2897, column: 8)
!11282 = distinct !DILexicalBlock(scope: !11269, file: !10632, line: 2896, column: 3)
!11283 = !DILocation(line: 2897, column: 23, scope: !11281)
!11284 = !DILocation(line: 2897, column: 36, scope: !11281)
!11285 = !DILocation(line: 2897, column: 8, scope: !11282)
!11286 = distinct !{!11286, !11277, !11287}
!11287 = !DILocation(line: 2902, column: 3, scope: !11269)
!11288 = !DILocation(line: 2905, column: 1, scope: !11269)
!11289 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !10632, file: !10632, line: 2916, type: !11290, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11293)
!11290 = !DISubroutineType(types: !11291)
!11291 = !{!10635, !11292}
!11292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10652, size: 32)
!11293 = !{!11294, !11295}
!11294 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11289, file: !10632, line: 2916, type: !11292)
!11295 = !DILocalVariable(name: "tickstart", scope: !11289, file: !10632, line: 2918, type: !137)
!11296 = !DILocation(line: 0, scope: !11289)
!11297 = !DILocation(line: 2934, column: 3, scope: !11289)
!11298 = !DILocation(line: 2937, column: 15, scope: !11289)
!11299 = !DILocation(line: 2938, column: 3, scope: !11289)
!11300 = !DILocation(line: 2938, column: 9, scope: !11289)
!11301 = !DILocation(line: 2940, column: 9, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !10632, line: 2940, column: 8)
!11303 = distinct !DILexicalBlock(scope: !11289, file: !10632, line: 2939, column: 3)
!11304 = !DILocation(line: 2940, column: 23, scope: !11302)
!11305 = !DILocation(line: 2940, column: 37, scope: !11302)
!11306 = !DILocation(line: 2940, column: 8, scope: !11303)
!11307 = distinct !{!11307, !11299, !11308}
!11308 = !DILocation(line: 2945, column: 3, scope: !11289)
!11309 = !DILocation(line: 2953, column: 3, scope: !11289)
!11310 = !DILocation(line: 2970, column: 3, scope: !11289)
!11311 = !DILocation(line: 2973, column: 15, scope: !11289)
!11312 = !DILocation(line: 2974, column: 3, scope: !11289)
!11313 = !DILocation(line: 2974, column: 9, scope: !11289)
!11314 = !DILocation(line: 2974, column: 37, scope: !11289)
!11315 = !DILocation(line: 2976, column: 9, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !10632, line: 2976, column: 8)
!11317 = distinct !DILexicalBlock(scope: !11289, file: !10632, line: 2975, column: 3)
!11318 = !DILocation(line: 2976, column: 23, scope: !11316)
!11319 = !DILocation(line: 2976, column: 37, scope: !11316)
!11320 = !DILocation(line: 2976, column: 8, scope: !11317)
!11321 = distinct !{!11321, !11312, !11322}
!11322 = !DILocation(line: 2981, column: 3, scope: !11289)
!11323 = !DILocation(line: 2984, column: 1, scope: !11289)
!11324 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !10632, file: !10632, line: 2990, type: !11270, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11325)
!11325 = !{!11326}
!11326 = !DILocalVariable(name: "tickstart", scope: !11324, file: !10632, line: 2992, type: !137)
!11327 = !DILocation(line: 2995, column: 3, scope: !11324)
!11328 = !DILocation(line: 2998, column: 15, scope: !11324)
!11329 = !DILocation(line: 0, scope: !11324)
!11330 = !DILocation(line: 2999, column: 3, scope: !11324)
!11331 = !DILocation(line: 2999, column: 9, scope: !11324)
!11332 = !DILocation(line: 3001, column: 9, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !10632, line: 3001, column: 8)
!11334 = distinct !DILexicalBlock(scope: !11324, file: !10632, line: 3000, column: 3)
!11335 = !DILocation(line: 3001, column: 23, scope: !11333)
!11336 = !DILocation(line: 3001, column: 36, scope: !11333)
!11337 = !DILocation(line: 3001, column: 8, scope: !11334)
!11338 = distinct !{!11338, !11330, !11339}
!11339 = !DILocation(line: 3006, column: 3, scope: !11324)
!11340 = !DILocation(line: 3009, column: 1, scope: !11324)
!11341 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10632, file: !10632, line: 3051, type: !135, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11342)
!11342 = !{!11343, !11344, !11345, !11346, !11347}
!11343 = !DILocalVariable(name: "pllm", scope: !11341, file: !10632, line: 3053, type: !137)
!11344 = !DILocalVariable(name: "pllvco", scope: !11341, file: !10632, line: 3054, type: !137)
!11345 = !DILocalVariable(name: "pllp", scope: !11341, file: !10632, line: 3055, type: !137)
!11346 = !DILocalVariable(name: "pllr", scope: !11341, file: !10632, line: 3056, type: !137)
!11347 = !DILocalVariable(name: "sysclockfreq", scope: !11341, file: !10632, line: 3057, type: !137)
!11348 = !DILocation(line: 0, scope: !11341)
!11349 = !DILocation(line: 3060, column: 16, scope: !11341)
!11350 = !DILocation(line: 3060, column: 3, scope: !11341)
!11351 = !DILocation(line: 3076, column: 19, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11353, file: !10632, line: 3073, column: 5)
!11353 = distinct !DILexicalBlock(scope: !11341, file: !10632, line: 3061, column: 3)
!11354 = !DILocation(line: 3076, column: 27, scope: !11352)
!11355 = !DILocation(line: 3077, column: 10, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11352, file: !10632, line: 3077, column: 10)
!11357 = !DILocation(line: 0, scope: !11356)
!11358 = !DILocation(line: 3087, column: 23, scope: !11352)
!11359 = !DILocation(line: 3087, column: 82, scope: !11352)
!11360 = !DILocation(line: 3089, column: 28, scope: !11352)
!11361 = !DILocation(line: 3090, column: 7, scope: !11352)
!11362 = !DILocation(line: 3096, column: 19, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11353, file: !10632, line: 3093, column: 5)
!11364 = !DILocation(line: 3096, column: 27, scope: !11363)
!11365 = !DILocation(line: 3097, column: 10, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11363, file: !10632, line: 3097, column: 10)
!11367 = !DILocation(line: 0, scope: !11366)
!11368 = !DILocation(line: 3107, column: 21, scope: !11363)
!11369 = !DILocation(line: 3107, column: 49, scope: !11363)
!11370 = !DILocation(line: 3109, column: 28, scope: !11363)
!11371 = !DILocation(line: 3110, column: 7, scope: !11363)
!11372 = !DILocation(line: 0, scope: !11353)
!11373 = !DILocation(line: 3118, column: 3, scope: !11341)
!11374 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10632, file: !10632, line: 3143, type: !11270, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11375)
!11375 = !{!11376}
!11376 = !DILocalVariable(name: "tickstart", scope: !11374, file: !10632, line: 3145, type: !137)
!11377 = !DILocation(line: 3148, column: 15, scope: !11374)
!11378 = !DILocation(line: 0, scope: !11374)
!11379 = !DILocation(line: 3151, column: 3, scope: !11374)
!11380 = !DILocation(line: 3154, column: 3, scope: !11374)
!11381 = !DILocation(line: 3154, column: 10, scope: !11374)
!11382 = !DILocation(line: 3154, column: 43, scope: !11374)
!11383 = !DILocation(line: 3156, column: 10, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !10632, line: 3156, column: 9)
!11385 = distinct !DILexicalBlock(scope: !11374, file: !10632, line: 3155, column: 3)
!11386 = !DILocation(line: 3156, column: 24, scope: !11384)
!11387 = !DILocation(line: 3156, column: 37, scope: !11384)
!11388 = !DILocation(line: 3156, column: 9, scope: !11385)
!11389 = distinct !{!11389, !11380, !11390}
!11390 = !DILocation(line: 3160, column: 3, scope: !11374)
!11391 = !DILocation(line: 3163, column: 3, scope: !11374)
!11392 = !DILocation(line: 3166, column: 15, scope: !11374)
!11393 = !DILocation(line: 3169, column: 3, scope: !11374)
!11394 = !DILocation(line: 3172, column: 3, scope: !11374)
!11395 = !DILocation(line: 3172, column: 10, scope: !11374)
!11396 = !DILocation(line: 3172, column: 44, scope: !11374)
!11397 = !DILocation(line: 3174, column: 24, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !10632, line: 3174, column: 9)
!11399 = distinct !DILexicalBlock(scope: !11374, file: !10632, line: 3173, column: 3)
!11400 = !DILocation(line: 3174, column: 37, scope: !11398)
!11401 = !DILocation(line: 3174, column: 9, scope: !11399)
!11402 = distinct !{!11402, !11394, !11403}
!11403 = !DILocation(line: 3178, column: 3, scope: !11374)
!11404 = !DILocation(line: 3184, column: 3, scope: !11374)
!11405 = !DILocation(line: 3187, column: 3, scope: !11374)
!11406 = !DILocation(line: 3187, column: 10, scope: !11374)
!11407 = !DILocation(line: 3187, column: 43, scope: !11374)
!11408 = !DILocation(line: 3189, column: 24, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11410, file: !10632, line: 3189, column: 9)
!11410 = distinct !DILexicalBlock(scope: !11374, file: !10632, line: 3188, column: 3)
!11411 = !DILocation(line: 3189, column: 37, scope: !11409)
!11412 = !DILocation(line: 3189, column: 9, scope: !11410)
!11413 = distinct !{!11413, !11405, !11414}
!11414 = !DILocation(line: 3193, column: 3, scope: !11374)
!11415 = !DILocation(line: 3199, column: 3, scope: !11374)
!11416 = !DILocation(line: 3202, column: 3, scope: !11374)
!11417 = !DILocation(line: 3202, column: 10, scope: !11374)
!11418 = !DILocation(line: 3202, column: 43, scope: !11374)
!11419 = !DILocation(line: 3204, column: 24, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11421, file: !10632, line: 3204, column: 9)
!11421 = distinct !DILexicalBlock(scope: !11374, file: !10632, line: 3203, column: 3)
!11422 = !DILocation(line: 3204, column: 37, scope: !11420)
!11423 = !DILocation(line: 3204, column: 9, scope: !11421)
!11424 = distinct !{!11424, !11416, !11425}
!11425 = !DILocation(line: 3208, column: 3, scope: !11374)
!11426 = !DILocation(line: 3215, column: 3, scope: !11374)
!11427 = !DILocation(line: 3218, column: 3, scope: !11374)
!11428 = !DILocation(line: 3218, column: 10, scope: !11374)
!11429 = !DILocation(line: 3218, column: 46, scope: !11374)
!11430 = !DILocation(line: 3220, column: 24, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11432, file: !10632, line: 3220, column: 9)
!11432 = distinct !DILexicalBlock(scope: !11374, file: !10632, line: 3219, column: 3)
!11433 = !DILocation(line: 3220, column: 37, scope: !11431)
!11434 = !DILocation(line: 3220, column: 9, scope: !11432)
!11435 = distinct !{!11435, !11427, !11436}
!11436 = !DILocation(line: 3224, column: 3, scope: !11374)
!11437 = !DILocation(line: 3232, column: 3, scope: !11374)
!11438 = !DILocation(line: 3235, column: 3, scope: !11374)
!11439 = !DILocation(line: 3235, column: 10, scope: !11374)
!11440 = !DILocation(line: 3235, column: 46, scope: !11374)
!11441 = !DILocation(line: 3237, column: 10, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !10632, line: 3237, column: 9)
!11443 = distinct !DILexicalBlock(scope: !11374, file: !10632, line: 3236, column: 3)
!11444 = !DILocation(line: 3237, column: 24, scope: !11442)
!11445 = !DILocation(line: 3237, column: 37, scope: !11442)
!11446 = !DILocation(line: 3237, column: 9, scope: !11443)
!11447 = distinct !{!11447, !11438, !11448}
!11448 = !DILocation(line: 3241, column: 3, scope: !11374)
!11449 = !DILocation(line: 3247, column: 16, scope: !11374)
!11450 = !DILocation(line: 3257, column: 19, scope: !11374)
!11451 = !DILocation(line: 3270, column: 19, scope: !11374)
!11452 = !DILocation(line: 3274, column: 3, scope: !11374)
!11453 = !DILocation(line: 3277, column: 3, scope: !11374)
!11454 = !DILocation(line: 3281, column: 3, scope: !11374)
!11455 = !DILocation(line: 3285, column: 3, scope: !11374)
!11456 = !DILocation(line: 3288, column: 3, scope: !11374)
!11457 = !DILocation(line: 3292, column: 3, scope: !11374)
!11458 = !DILocation(line: 3296, column: 3, scope: !11374)
!11459 = !DILocation(line: 3299, column: 3, scope: !11374)
!11460 = !DILocation(line: 3302, column: 19, scope: !11374)
!11461 = !DILocation(line: 3305, column: 19, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11374, file: !10632, line: 3305, column: 6)
!11463 = !DILocation(line: 3305, column: 6, scope: !11462)
!11464 = !DILocation(line: 3305, column: 31, scope: !11462)
!11465 = !DILocation(line: 0, scope: !11462)
!11466 = !DILocation(line: 3313, column: 1, scope: !11374)
!11467 = !DISubprogram(name: "HAL_InitTick", scope: !11007, file: !11007, line: 223, type: !11468, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11468 = !DISubroutineType(types: !11469)
!11469 = !{!10635, !137}
!11470 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10632, file: !10632, line: 3333, type: !11471, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11495)
!11471 = !DISubroutineType(types: !11472)
!11472 = !{!10635, !11473}
!11473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11474, size: 32)
!11474 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11475, line: 70, baseType: !11476)
!11475 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11475, line: 49, size: 416, elements: !11477)
!11477 = !{!11478, !11479, !11480, !11481, !11482, !11483, !11484}
!11478 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11476, file: !11475, line: 51, baseType: !137, size: 32)
!11479 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11476, file: !11475, line: 54, baseType: !137, size: 32, offset: 32)
!11480 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11476, file: !11475, line: 57, baseType: !137, size: 32, offset: 64)
!11481 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11476, file: !11475, line: 60, baseType: !137, size: 32, offset: 96)
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11476, file: !11475, line: 63, baseType: !137, size: 32, offset: 128)
!11483 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11476, file: !11475, line: 66, baseType: !137, size: 32, offset: 160)
!11484 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11476, file: !11475, line: 69, baseType: !11485, size: 224, offset: 192)
!11485 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10638, line: 73, baseType: !11486)
!11486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10638, line: 45, size: 224, elements: !11487)
!11487 = !{!11488, !11489, !11490, !11491, !11492, !11493, !11494}
!11488 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11486, file: !10638, line: 47, baseType: !137, size: 32)
!11489 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11486, file: !10638, line: 50, baseType: !137, size: 32, offset: 32)
!11490 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11486, file: !10638, line: 53, baseType: !137, size: 32, offset: 64)
!11491 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11486, file: !10638, line: 56, baseType: !137, size: 32, offset: 96)
!11492 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11486, file: !10638, line: 60, baseType: !137, size: 32, offset: 128)
!11493 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11486, file: !10638, line: 63, baseType: !137, size: 32, offset: 160)
!11494 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11486, file: !10638, line: 68, baseType: !137, size: 32, offset: 192)
!11495 = !{!11496, !11497, !11498, !11499, !11503}
!11496 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11470, file: !10632, line: 3333, type: !11473)
!11497 = !DILocalVariable(name: "tickstart", scope: !11470, file: !10632, line: 3335, type: !137)
!11498 = !DILocalVariable(name: "pll_config", scope: !11470, file: !10632, line: 3335, type: !137)
!11499 = !DILocalVariable(name: "pwrclkchanged", scope: !11500, file: !10632, line: 3517, type: !11502)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !10632, line: 3516, column: 3)
!11501 = distinct !DILexicalBlock(scope: !11470, file: !10632, line: 3515, column: 6)
!11502 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !712, line: 188, baseType: !2725)
!11503 = !DILocalVariable(name: "tmpreg", scope: !11504, file: !10632, line: 3526, type: !176)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !10632, line: 3526, column: 7)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !10632, line: 3525, column: 5)
!11506 = distinct !DILexicalBlock(scope: !11500, file: !10632, line: 3524, column: 8)
!11507 = !DILocation(line: 0, scope: !11470)
!11508 = !DILocation(line: 3338, column: 24, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11470, file: !10632, line: 3338, column: 6)
!11510 = !DILocation(line: 3338, column: 6, scope: !11470)
!11511 = !DILocation(line: 3346, column: 27, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11470, file: !10632, line: 3346, column: 6)
!11513 = !DILocation(line: 3346, column: 43, scope: !11512)
!11514 = !DILocation(line: 3346, column: 69, scope: !11512)
!11515 = !DILocation(line: 3346, column: 6, scope: !11470)
!11516 = !DILocation(line: 3352, column: 9, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11518, file: !10632, line: 3352, column: 8)
!11518 = distinct !DILexicalBlock(scope: !11512, file: !10632, line: 3347, column: 3)
!11519 = !DILocation(line: 3352, column: 39, scope: !11517)
!11520 = !DILocation(line: 3352, column: 128, scope: !11517)
!11521 = !DILocation(line: 3353, column: 9, scope: !11517)
!11522 = !DILocation(line: 3353, column: 39, scope: !11517)
!11523 = !DILocation(line: 3353, column: 60, scope: !11517)
!11524 = !DILocation(line: 3353, column: 70, scope: !11517)
!11525 = !DILocation(line: 3353, column: 78, scope: !11517)
!11526 = !DILocation(line: 3353, column: 100, scope: !11517)
!11527 = !DILocation(line: 3353, column: 128, scope: !11517)
!11528 = !DILocation(line: 3354, column: 9, scope: !11517)
!11529 = !DILocation(line: 3354, column: 39, scope: !11517)
!11530 = !DILocation(line: 3354, column: 61, scope: !11517)
!11531 = !DILocation(line: 3354, column: 71, scope: !11517)
!11532 = !DILocation(line: 3354, column: 79, scope: !11517)
!11533 = !DILocation(line: 3354, column: 101, scope: !11517)
!11534 = !DILocation(line: 3352, column: 8, scope: !11518)
!11535 = !DILocation(line: 3360, column: 11, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !10632, line: 3360, column: 10)
!11537 = distinct !DILexicalBlock(scope: !11517, file: !10632, line: 3359, column: 5)
!11538 = !DILocation(line: 3360, column: 57, scope: !11536)
!11539 = !DILocation(line: 3360, column: 80, scope: !11536)
!11540 = !DILocation(line: 3360, column: 89, scope: !11536)
!11541 = !DILocation(line: 3360, column: 10, scope: !11537)
!11542 = !DILocation(line: 3368, column: 7, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !10632, line: 3368, column: 7)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !10632, line: 3368, column: 7)
!11545 = distinct !DILexicalBlock(scope: !11517, file: !10632, line: 3366, column: 5)
!11546 = !DILocation(line: 3368, column: 7, scope: !11544)
!11547 = !DILocation(line: 3368, column: 7, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11543, file: !10632, line: 3368, column: 7)
!11549 = !DILocation(line: 3368, column: 7, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !10632, line: 3368, column: 7)
!11551 = distinct !DILexicalBlock(scope: !11543, file: !10632, line: 3368, column: 7)
!11552 = !DILocation(line: 3368, column: 7, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11551, file: !10632, line: 3368, column: 7)
!11554 = !DILocation(line: 0, scope: !11543)
!11555 = !DILocation(line: 3371, column: 30, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11545, file: !10632, line: 3371, column: 10)
!11557 = !DILocation(line: 3371, column: 40, scope: !11556)
!11558 = !DILocation(line: 0, scope: !11556)
!11559 = !DILocation(line: 3371, column: 10, scope: !11545)
!11560 = !DILocation(line: 3377, column: 15, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11556, file: !10632, line: 3372, column: 7)
!11562 = !DILocation(line: 3377, column: 51, scope: !11561)
!11563 = !DILocation(line: 3377, column: 9, scope: !11561)
!11564 = !DILocation(line: 3379, column: 15, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11566, file: !10632, line: 3379, column: 14)
!11566 = distinct !DILexicalBlock(scope: !11561, file: !10632, line: 3378, column: 9)
!11567 = !DILocation(line: 3379, column: 29, scope: !11565)
!11568 = !DILocation(line: 3379, column: 43, scope: !11565)
!11569 = !DILocation(line: 3379, column: 14, scope: !11566)
!11570 = distinct !{!11570, !11563, !11571}
!11571 = !DILocation(line: 3383, column: 9, scope: !11561)
!11572 = !DILocation(line: 3391, column: 15, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11556, file: !10632, line: 3386, column: 7)
!11574 = !DILocation(line: 3391, column: 9, scope: !11573)
!11575 = !DILocation(line: 3393, column: 15, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11577, file: !10632, line: 3393, column: 14)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !10632, line: 3392, column: 9)
!11578 = !DILocation(line: 3393, column: 29, scope: !11576)
!11579 = !DILocation(line: 3393, column: 43, scope: !11576)
!11580 = !DILocation(line: 3393, column: 14, scope: !11577)
!11581 = distinct !{!11581, !11574, !11582}
!11582 = !DILocation(line: 3397, column: 9, scope: !11573)
!11583 = !DILocation(line: 3402, column: 27, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11470, file: !10632, line: 3402, column: 6)
!11585 = !DILocation(line: 3402, column: 43, scope: !11584)
!11586 = !DILocation(line: 3402, column: 69, scope: !11584)
!11587 = !DILocation(line: 3402, column: 6, scope: !11470)
!11588 = !DILocation(line: 3410, column: 9, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11590, file: !10632, line: 3410, column: 8)
!11590 = distinct !DILexicalBlock(scope: !11584, file: !10632, line: 3403, column: 3)
!11591 = !DILocation(line: 3410, column: 39, scope: !11589)
!11592 = !DILocation(line: 3410, column: 128, scope: !11589)
!11593 = !DILocation(line: 3411, column: 9, scope: !11589)
!11594 = !DILocation(line: 3411, column: 39, scope: !11589)
!11595 = !DILocation(line: 3411, column: 60, scope: !11589)
!11596 = !DILocation(line: 3411, column: 70, scope: !11589)
!11597 = !DILocation(line: 3411, column: 78, scope: !11589)
!11598 = !DILocation(line: 3411, column: 100, scope: !11589)
!11599 = !DILocation(line: 3411, column: 128, scope: !11589)
!11600 = !DILocation(line: 3412, column: 9, scope: !11589)
!11601 = !DILocation(line: 3412, column: 39, scope: !11589)
!11602 = !DILocation(line: 3412, column: 61, scope: !11589)
!11603 = !DILocation(line: 3412, column: 71, scope: !11589)
!11604 = !DILocation(line: 3412, column: 79, scope: !11589)
!11605 = !DILocation(line: 3412, column: 101, scope: !11589)
!11606 = !DILocation(line: 3410, column: 8, scope: !11590)
!11607 = !DILocation(line: 3419, column: 11, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11609, file: !10632, line: 3419, column: 10)
!11609 = distinct !DILexicalBlock(scope: !11589, file: !10632, line: 3417, column: 5)
!11610 = !DILocation(line: 3419, column: 57, scope: !11608)
!11611 = !DILocation(line: 3419, column: 80, scope: !11608)
!11612 = !DILocation(line: 3419, column: 89, scope: !11608)
!11613 = !DILocation(line: 3419, column: 10, scope: !11609)
!11614 = !DILocation(line: 3433, column: 30, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !10632, line: 3433, column: 10)
!11616 = distinct !DILexicalBlock(scope: !11589, file: !10632, line: 3431, column: 5)
!11617 = !DILocation(line: 3433, column: 39, scope: !11615)
!11618 = !DILocation(line: 3433, column: 10, scope: !11616)
!11619 = !DILocation(line: 3436, column: 9, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11615, file: !10632, line: 3434, column: 7)
!11621 = !DILocation(line: 3439, column: 21, scope: !11620)
!11622 = !DILocation(line: 3442, column: 9, scope: !11620)
!11623 = !DILocation(line: 3442, column: 15, scope: !11620)
!11624 = !DILocation(line: 3442, column: 51, scope: !11620)
!11625 = !DILocation(line: 3444, column: 15, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !10632, line: 3444, column: 14)
!11627 = distinct !DILexicalBlock(scope: !11620, file: !10632, line: 3443, column: 9)
!11628 = !DILocation(line: 3444, column: 29, scope: !11626)
!11629 = !DILocation(line: 3444, column: 43, scope: !11626)
!11630 = !DILocation(line: 3444, column: 14, scope: !11627)
!11631 = distinct !{!11631, !11622, !11632}
!11632 = !DILocation(line: 3448, column: 9, scope: !11620)
!11633 = !DILocation(line: 3456, column: 9, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11615, file: !10632, line: 3454, column: 7)
!11635 = !DILocation(line: 3459, column: 21, scope: !11634)
!11636 = !DILocation(line: 3462, column: 9, scope: !11634)
!11637 = !DILocation(line: 3462, column: 15, scope: !11634)
!11638 = !DILocation(line: 3464, column: 15, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !10632, line: 3464, column: 14)
!11640 = distinct !DILexicalBlock(scope: !11634, file: !10632, line: 3463, column: 9)
!11641 = !DILocation(line: 3464, column: 29, scope: !11639)
!11642 = !DILocation(line: 3464, column: 43, scope: !11639)
!11643 = !DILocation(line: 3464, column: 14, scope: !11640)
!11644 = distinct !{!11644, !11636, !11645}
!11645 = !DILocation(line: 3468, column: 9, scope: !11634)
!11646 = !DILocation(line: 0, scope: !11589)
!11647 = !DILocation(line: 3473, column: 27, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11470, file: !10632, line: 3473, column: 6)
!11649 = !DILocation(line: 3473, column: 43, scope: !11648)
!11650 = !DILocation(line: 3473, column: 69, scope: !11648)
!11651 = !DILocation(line: 3473, column: 6, scope: !11470)
!11652 = !DILocation(line: 3479, column: 28, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11654, file: !10632, line: 3479, column: 8)
!11654 = distinct !DILexicalBlock(scope: !11648, file: !10632, line: 3474, column: 3)
!11655 = !DILocation(line: 3479, column: 37, scope: !11653)
!11656 = !DILocation(line: 3479, column: 8, scope: !11654)
!11657 = !DILocation(line: 3482, column: 7, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11653, file: !10632, line: 3480, column: 5)
!11659 = !DILocation(line: 3485, column: 19, scope: !11658)
!11660 = !DILocation(line: 3488, column: 7, scope: !11658)
!11661 = !DILocation(line: 3488, column: 13, scope: !11658)
!11662 = !DILocation(line: 3488, column: 49, scope: !11658)
!11663 = !DILocation(line: 3490, column: 13, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11665, file: !10632, line: 3490, column: 12)
!11665 = distinct !DILexicalBlock(scope: !11658, file: !10632, line: 3489, column: 7)
!11666 = !DILocation(line: 3490, column: 27, scope: !11664)
!11667 = !DILocation(line: 3490, column: 41, scope: !11664)
!11668 = !DILocation(line: 3490, column: 12, scope: !11665)
!11669 = distinct !{!11669, !11660, !11670}
!11670 = !DILocation(line: 3494, column: 7, scope: !11658)
!11671 = !DILocation(line: 3499, column: 7, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11653, file: !10632, line: 3497, column: 5)
!11673 = !DILocation(line: 3502, column: 19, scope: !11672)
!11674 = !DILocation(line: 3505, column: 7, scope: !11672)
!11675 = !DILocation(line: 3505, column: 13, scope: !11672)
!11676 = !DILocation(line: 3507, column: 13, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !10632, line: 3507, column: 12)
!11678 = distinct !DILexicalBlock(scope: !11672, file: !10632, line: 3506, column: 7)
!11679 = !DILocation(line: 3507, column: 27, scope: !11677)
!11680 = !DILocation(line: 3507, column: 41, scope: !11677)
!11681 = !DILocation(line: 3507, column: 12, scope: !11678)
!11682 = distinct !{!11682, !11674, !11683}
!11683 = !DILocation(line: 3511, column: 7, scope: !11672)
!11684 = !DILocation(line: 3515, column: 27, scope: !11501)
!11685 = !DILocation(line: 3515, column: 43, scope: !11501)
!11686 = !DILocation(line: 3515, column: 69, scope: !11501)
!11687 = !DILocation(line: 3515, column: 6, scope: !11470)
!11688 = !DILocation(line: 0, scope: !11500)
!11689 = !DILocation(line: 3524, column: 8, scope: !11506)
!11690 = !DILocation(line: 3524, column: 8, scope: !11500)
!11691 = !DILocation(line: 3526, column: 7, scope: !11504)
!11692 = !DILocation(line: 3526, column: 7, scope: !11505)
!11693 = !DILocation(line: 3528, column: 5, scope: !11505)
!11694 = !DILocation(line: 3530, column: 8, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11500, file: !10632, line: 3530, column: 8)
!11696 = !DILocation(line: 3530, column: 8, scope: !11500)
!11697 = !DILocation(line: 3533, column: 7, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11695, file: !10632, line: 3531, column: 5)
!11699 = !DILocation(line: 3536, column: 19, scope: !11698)
!11700 = !DILocation(line: 3538, column: 7, scope: !11698)
!11701 = !DILocation(line: 3538, column: 13, scope: !11698)
!11702 = !DILocation(line: 3540, column: 13, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !10632, line: 3540, column: 12)
!11704 = distinct !DILexicalBlock(scope: !11698, file: !10632, line: 3539, column: 7)
!11705 = !DILocation(line: 3540, column: 27, scope: !11703)
!11706 = !DILocation(line: 3540, column: 40, scope: !11703)
!11707 = !DILocation(line: 3540, column: 12, scope: !11704)
!11708 = distinct !{!11708, !11700, !11709}
!11709 = !DILocation(line: 3544, column: 7, scope: !11698)
!11710 = !DILocation(line: 3548, column: 5, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !10632, line: 3548, column: 5)
!11712 = distinct !DILexicalBlock(scope: !11500, file: !10632, line: 3548, column: 5)
!11713 = !DILocation(line: 3548, column: 5, scope: !11712)
!11714 = !DILocation(line: 3548, column: 5, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11711, file: !10632, line: 3548, column: 5)
!11716 = !DILocation(line: 3548, column: 5, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !10632, line: 3548, column: 5)
!11718 = distinct !DILexicalBlock(scope: !11711, file: !10632, line: 3548, column: 5)
!11719 = !DILocation(line: 3548, column: 5, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11718, file: !10632, line: 3548, column: 5)
!11721 = !DILocation(line: 0, scope: !11711)
!11722 = !DILocation(line: 3550, column: 28, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11500, file: !10632, line: 3550, column: 8)
!11724 = !DILocation(line: 3550, column: 38, scope: !11723)
!11725 = !DILocation(line: 0, scope: !11723)
!11726 = !DILocation(line: 3550, column: 8, scope: !11500)
!11727 = !DILocation(line: 3556, column: 13, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11723, file: !10632, line: 3551, column: 5)
!11729 = !DILocation(line: 3556, column: 49, scope: !11728)
!11730 = !DILocation(line: 3556, column: 7, scope: !11728)
!11731 = !DILocation(line: 3558, column: 13, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !10632, line: 3558, column: 12)
!11733 = distinct !DILexicalBlock(scope: !11728, file: !10632, line: 3557, column: 7)
!11734 = !DILocation(line: 3558, column: 27, scope: !11732)
!11735 = !DILocation(line: 3558, column: 41, scope: !11732)
!11736 = !DILocation(line: 3558, column: 12, scope: !11733)
!11737 = distinct !{!11737, !11730, !11738}
!11738 = !DILocation(line: 3562, column: 7, scope: !11728)
!11739 = !DILocation(line: 3570, column: 13, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11723, file: !10632, line: 3565, column: 5)
!11741 = !DILocation(line: 3570, column: 7, scope: !11740)
!11742 = !DILocation(line: 3572, column: 13, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !10632, line: 3572, column: 12)
!11744 = distinct !DILexicalBlock(scope: !11740, file: !10632, line: 3571, column: 7)
!11745 = !DILocation(line: 3572, column: 27, scope: !11743)
!11746 = !DILocation(line: 3572, column: 41, scope: !11743)
!11747 = !DILocation(line: 3572, column: 12, scope: !11744)
!11748 = distinct !{!11748, !11741, !11749}
!11749 = !DILocation(line: 3576, column: 7, scope: !11740)
!11750 = !DILocation(line: 3580, column: 8, scope: !11500)
!11751 = !DILocation(line: 3582, column: 7, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !10632, line: 3581, column: 5)
!11753 = distinct !DILexicalBlock(scope: !11500, file: !10632, line: 3580, column: 8)
!11754 = !DILocation(line: 3583, column: 5, scope: !11752)
!11755 = !DILocation(line: 3588, column: 31, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11470, file: !10632, line: 3588, column: 7)
!11757 = !DILocation(line: 3588, column: 41, scope: !11756)
!11758 = !DILocation(line: 3588, column: 7, scope: !11470)
!11759 = !DILocation(line: 3591, column: 8, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !10632, line: 3591, column: 8)
!11761 = distinct !DILexicalBlock(scope: !11756, file: !10632, line: 3589, column: 3)
!11762 = !DILocation(line: 3591, column: 38, scope: !11760)
!11763 = !DILocation(line: 3591, column: 8, scope: !11761)
!11764 = !DILocation(line: 3593, column: 44, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !10632, line: 3593, column: 10)
!11766 = distinct !DILexicalBlock(scope: !11760, file: !10632, line: 3592, column: 5)
!11767 = !DILocation(line: 0, scope: !11765)
!11768 = !DILocation(line: 3593, column: 10, scope: !11766)
!11769 = !DILocation(line: 3610, column: 15, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11765, file: !10632, line: 3594, column: 7)
!11771 = !DILocation(line: 3610, column: 9, scope: !11770)
!11772 = !DILocation(line: 3612, column: 15, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !10632, line: 3612, column: 14)
!11774 = distinct !DILexicalBlock(scope: !11770, file: !10632, line: 3611, column: 9)
!11775 = !DILocation(line: 3612, column: 29, scope: !11773)
!11776 = !DILocation(line: 3612, column: 43, scope: !11773)
!11777 = !DILocation(line: 3612, column: 14, scope: !11774)
!11778 = distinct !{!11778, !11771, !11779}
!11779 = !DILocation(line: 3616, column: 9, scope: !11770)
!11780 = !DILocation(line: 3619, column: 9, scope: !11770)
!11781 = !DILocation(line: 3626, column: 9, scope: !11770)
!11782 = !DILocation(line: 3629, column: 21, scope: !11770)
!11783 = !DILocation(line: 3632, column: 9, scope: !11770)
!11784 = !DILocation(line: 3632, column: 15, scope: !11770)
!11785 = !DILocation(line: 3632, column: 51, scope: !11770)
!11786 = !DILocation(line: 3634, column: 15, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !10632, line: 3634, column: 14)
!11788 = distinct !DILexicalBlock(scope: !11770, file: !10632, line: 3633, column: 9)
!11789 = !DILocation(line: 3634, column: 29, scope: !11787)
!11790 = !DILocation(line: 3634, column: 43, scope: !11787)
!11791 = !DILocation(line: 3634, column: 14, scope: !11788)
!11792 = distinct !{!11792, !11783, !11793}
!11793 = !DILocation(line: 3638, column: 9, scope: !11770)
!11794 = !DILocation(line: 3649, column: 15, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11765, file: !10632, line: 3641, column: 7)
!11796 = !DILocation(line: 3649, column: 9, scope: !11795)
!11797 = !DILocation(line: 3651, column: 15, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11799, file: !10632, line: 3651, column: 14)
!11799 = distinct !DILexicalBlock(scope: !11795, file: !10632, line: 3650, column: 9)
!11800 = !DILocation(line: 3651, column: 29, scope: !11798)
!11801 = !DILocation(line: 3651, column: 43, scope: !11798)
!11802 = !DILocation(line: 3651, column: 14, scope: !11799)
!11803 = distinct !{!11803, !11796, !11804}
!11804 = !DILocation(line: 3655, column: 9, scope: !11795)
!11805 = !DILocation(line: 3661, column: 44, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11807, file: !10632, line: 3661, column: 10)
!11807 = distinct !DILexicalBlock(scope: !11760, file: !10632, line: 3659, column: 5)
!11808 = !DILocation(line: 3661, column: 10, scope: !11807)
!11809 = !DILocation(line: 3668, column: 27, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11806, file: !10632, line: 3666, column: 7)
!11811 = !DILocation(line: 3671, column: 14, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11810, file: !10632, line: 3670, column: 13)
!11813 = !DILocation(line: 3671, column: 81, scope: !11812)
!11814 = !DILocation(line: 3671, column: 55, scope: !11812)
!11815 = !DILocation(line: 3671, column: 92, scope: !11812)
!11816 = !DILocation(line: 3672, column: 14, scope: !11812)
!11817 = !DILocation(line: 3672, column: 80, scope: !11812)
!11818 = !DILocation(line: 3672, column: 53, scope: !11812)
!11819 = !DILocation(line: 3672, column: 111, scope: !11812)
!11820 = !DILocation(line: 3673, column: 14, scope: !11812)
!11821 = !DILocation(line: 3673, column: 80, scope: !11812)
!11822 = !DILocation(line: 3673, column: 86, scope: !11812)
!11823 = !DILocation(line: 3673, column: 53, scope: !11812)
!11824 = !DILocation(line: 3673, column: 111, scope: !11812)
!11825 = !DILocation(line: 3674, column: 14, scope: !11812)
!11826 = !DILocation(line: 3674, column: 82, scope: !11812)
!11827 = !DILocation(line: 3674, column: 101, scope: !11812)
!11828 = !DILocation(line: 3674, column: 53, scope: !11812)
!11829 = !DILocation(line: 3674, column: 126, scope: !11812)
!11830 = !DILocation(line: 3675, column: 14, scope: !11812)
!11831 = !DILocation(line: 3675, column: 80, scope: !11812)
!11832 = !DILocation(line: 3675, column: 85, scope: !11812)
!11833 = !DILocation(line: 3675, column: 53, scope: !11812)
!11834 = !DILocation(line: 3675, column: 111, scope: !11812)
!11835 = !DILocation(line: 3676, column: 14, scope: !11812)
!11836 = !DILocation(line: 3676, column: 80, scope: !11812)
!11837 = !DILocation(line: 3676, column: 85, scope: !11812)
!11838 = !DILocation(line: 3676, column: 53, scope: !11812)
!11839 = !DILocation(line: 3670, column: 13, scope: !11810)
!11840 = !DILocation(line: 3691, column: 3, scope: !11470)
!11841 = !DILocation(line: 3692, column: 1, scope: !11470)
!11842 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10632, file: !10632, line: 3703, type: !11843, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11845)
!11843 = !DISubroutineType(types: !11844)
!11844 = !{null, !11473}
!11845 = !{!11846}
!11846 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11842, file: !10632, line: 3703, type: !11473)
!11847 = !DILocation(line: 0, scope: !11842)
!11848 = !DILocation(line: 3706, column: 22, scope: !11842)
!11849 = !DILocation(line: 3706, column: 37, scope: !11842)
!11850 = !DILocation(line: 3709, column: 12, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11842, file: !10632, line: 3709, column: 6)
!11852 = !DILocation(line: 3709, column: 15, scope: !11851)
!11853 = !DILocation(line: 3709, column: 31, scope: !11851)
!11854 = !DILocation(line: 3709, column: 6, scope: !11842)
!11855 = !DILocation(line: 3711, column: 24, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11851, file: !10632, line: 3710, column: 3)
!11857 = !DILocation(line: 3711, column: 33, scope: !11856)
!11858 = !DILocation(line: 3712, column: 3, scope: !11856)
!11859 = !DILocation(line: 3713, column: 17, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11851, file: !10632, line: 3713, column: 11)
!11861 = !DILocation(line: 3713, column: 20, scope: !11860)
!11862 = !DILocation(line: 3713, column: 35, scope: !11860)
!11863 = !DILocation(line: 0, scope: !11860)
!11864 = !DILocation(line: 3713, column: 11, scope: !11851)
!11865 = !DILocation(line: 3715, column: 33, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11860, file: !10632, line: 3714, column: 3)
!11867 = !DILocation(line: 3716, column: 3, scope: !11866)
!11868 = !DILocation(line: 3719, column: 33, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11860, file: !10632, line: 3718, column: 3)
!11870 = !DILocation(line: 3723, column: 12, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11842, file: !10632, line: 3723, column: 6)
!11872 = !DILocation(line: 3723, column: 15, scope: !11871)
!11873 = !DILocation(line: 3729, column: 24, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11871, file: !10632, line: 3728, column: 3)
!11875 = !DILocation(line: 3729, column: 33, scope: !11874)
!11876 = !DILocation(line: 3732, column: 61, scope: !11842)
!11877 = !DILocation(line: 3732, column: 81, scope: !11842)
!11878 = !DILocation(line: 3732, column: 22, scope: !11842)
!11879 = !DILocation(line: 3732, column: 42, scope: !11842)
!11880 = !DILocation(line: 3735, column: 12, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11842, file: !10632, line: 3735, column: 6)
!11882 = !DILocation(line: 3735, column: 17, scope: !11881)
!11883 = !DILocation(line: 3735, column: 35, scope: !11881)
!11884 = !DILocation(line: 3735, column: 6, scope: !11842)
!11885 = !DILocation(line: 3737, column: 24, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11881, file: !10632, line: 3736, column: 3)
!11887 = !DILocation(line: 3737, column: 33, scope: !11886)
!11888 = !DILocation(line: 3738, column: 3, scope: !11886)
!11889 = !DILocation(line: 3739, column: 17, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11881, file: !10632, line: 3739, column: 11)
!11891 = !DILocation(line: 3739, column: 22, scope: !11890)
!11892 = !DILocation(line: 3739, column: 39, scope: !11890)
!11893 = !DILocation(line: 0, scope: !11890)
!11894 = !DILocation(line: 3739, column: 11, scope: !11881)
!11895 = !DILocation(line: 3741, column: 33, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11890, file: !10632, line: 3740, column: 3)
!11897 = !DILocation(line: 3742, column: 3, scope: !11896)
!11898 = !DILocation(line: 3745, column: 33, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11890, file: !10632, line: 3744, column: 3)
!11900 = !DILocation(line: 3749, column: 12, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11842, file: !10632, line: 3749, column: 6)
!11902 = !DILocation(line: 3749, column: 16, scope: !11901)
!11903 = !DILocation(line: 3755, column: 24, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11901, file: !10632, line: 3754, column: 3)
!11905 = !DILocation(line: 3755, column: 33, scope: !11904)
!11906 = !DILocation(line: 3759, column: 12, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11842, file: !10632, line: 3759, column: 6)
!11908 = !DILocation(line: 3759, column: 15, scope: !11907)
!11909 = !DILocation(line: 3759, column: 30, scope: !11907)
!11910 = !DILocation(line: 3759, column: 6, scope: !11842)
!11911 = !DILocation(line: 3765, column: 28, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11907, file: !10632, line: 3764, column: 3)
!11913 = !DILocation(line: 3765, column: 37, scope: !11912)
!11914 = !DILocation(line: 3767, column: 54, scope: !11842)
!11915 = !DILocation(line: 3767, column: 62, scope: !11842)
!11916 = !DILocation(line: 3767, column: 26, scope: !11842)
!11917 = !DILocation(line: 3767, column: 36, scope: !11842)
!11918 = !DILocation(line: 3768, column: 49, scope: !11842)
!11919 = !DILocation(line: 3768, column: 57, scope: !11842)
!11920 = !DILocation(line: 3768, column: 26, scope: !11842)
!11921 = !DILocation(line: 3768, column: 31, scope: !11842)
!11922 = !DILocation(line: 3769, column: 50, scope: !11842)
!11923 = !DILocation(line: 3769, column: 78, scope: !11842)
!11924 = !DILocation(line: 3769, column: 26, scope: !11842)
!11925 = !DILocation(line: 3769, column: 31, scope: !11842)
!11926 = !DILocation(line: 3770, column: 52, scope: !11842)
!11927 = !DILocation(line: 3770, column: 102, scope: !11842)
!11928 = !DILocation(line: 3770, column: 109, scope: !11842)
!11929 = !DILocation(line: 3770, column: 26, scope: !11842)
!11930 = !DILocation(line: 3770, column: 31, scope: !11842)
!11931 = !DILocation(line: 3771, column: 50, scope: !11842)
!11932 = !DILocation(line: 3771, column: 78, scope: !11842)
!11933 = !DILocation(line: 3771, column: 26, scope: !11842)
!11934 = !DILocation(line: 3771, column: 31, scope: !11842)
!11935 = !DILocation(line: 3772, column: 50, scope: !11842)
!11936 = !DILocation(line: 3772, column: 78, scope: !11842)
!11937 = !DILocation(line: 3772, column: 26, scope: !11842)
!11938 = !DILocation(line: 3772, column: 31, scope: !11842)
!11939 = !DILocation(line: 3773, column: 1, scope: !11842)
!11940 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11941, file: !11941, line: 257, type: !6456, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !11942)
!11941 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11942 = !{!11943}
!11943 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11940, file: !11941, line: 257, type: !137)
!11944 = !DILocation(line: 0, scope: !11940)
!11945 = !DILocation(line: 260, column: 3, scope: !11940)
!11946 = !DILocation(line: 261, column: 1, scope: !11940)
!11947 = distinct !DISubprogram(name: "LL_InitTick", scope: !11948, file: !11948, line: 260, type: !9062, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !11949)
!11948 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11949 = !{!11950, !11951}
!11950 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11947, file: !11948, line: 260, type: !137)
!11951 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11947, file: !11948, line: 260, type: !137)
!11952 = !DILocation(line: 0, scope: !11947)
!11953 = !DILocation(line: 263, column: 46, scope: !11947)
!11954 = !DILocation(line: 263, column: 55, scope: !11947)
!11955 = !DILocation(line: 263, column: 18, scope: !11947)
!11956 = !DILocation(line: 264, column: 18, scope: !11947)
!11957 = !DILocation(line: 265, column: 18, scope: !11947)
!11958 = !DILocation(line: 267, column: 1, scope: !11947)
!11959 = distinct !DISubprogram(name: "LL_mDelay", scope: !11941, file: !11941, line: 273, type: !6456, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !11960)
!11960 = !{!11961, !11962}
!11961 = !DILocalVariable(name: "Delay", arg: 1, scope: !11959, file: !11941, line: 273, type: !137)
!11962 = !DILocalVariable(name: "tmp", scope: !11959, file: !11941, line: 275, type: !176)
!11963 = !DILocation(line: 0, scope: !11959)
!11964 = !DILocation(line: 275, column: 3, scope: !11959)
!11965 = !DILocation(line: 275, column: 18, scope: !11959)
!11966 = !DILocation(line: 275, column: 33, scope: !11959)
!11967 = !DILocation(line: 277, column: 10, scope: !11959)
!11968 = !DILocation(line: 280, column: 12, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11959, file: !11941, line: 280, column: 6)
!11970 = !DILocation(line: 285, column: 3, scope: !11959)
!11971 = !DILocation(line: 287, column: 18, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11973, file: !11941, line: 287, column: 8)
!11973 = distinct !DILexicalBlock(scope: !11959, file: !11941, line: 286, column: 3)
!11974 = !DILocation(line: 292, column: 1, scope: !11959)
!11975 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11941, file: !11941, line: 323, type: !6456, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !11976)
!11976 = !{!11977}
!11977 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11975, file: !11941, line: 323, type: !137)
!11978 = !DILocation(line: 0, scope: !11975)
!11979 = !DILocation(line: 326, column: 19, scope: !11975)
!11980 = !DILocation(line: 327, column: 1, scope: !11975)
!11981 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11941, file: !11941, line: 338, type: !11982, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !11985)
!11982 = !DISubroutineType(types: !11983)
!11983 = !{!11984, !137}
!11984 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !712, line: 201, baseType: !711)
!11985 = !{!11986, !11987, !11988, !11989, !11990}
!11986 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11981, file: !11941, line: 338, type: !137)
!11987 = !DILocalVariable(name: "timeout", scope: !11981, file: !11941, line: 340, type: !137)
!11988 = !DILocalVariable(name: "getlatency", scope: !11981, file: !11941, line: 341, type: !137)
!11989 = !DILocalVariable(name: "latency", scope: !11981, file: !11941, line: 342, type: !137)
!11990 = !DILocalVariable(name: "status", scope: !11981, file: !11941, line: 343, type: !11984)
!11991 = !DILocation(line: 0, scope: !11981)
!11992 = !DILocation(line: 347, column: 21, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11981, file: !11941, line: 347, column: 6)
!11994 = !DILocation(line: 347, column: 6, scope: !11981)
!11995 = !DILocation(line: 353, column: 8, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !11941, line: 353, column: 8)
!11997 = distinct !DILexicalBlock(scope: !11993, file: !11941, line: 352, column: 3)
!11998 = !DILocation(line: 353, column: 40, scope: !11996)
!11999 = !DILocation(line: 353, column: 8, scope: !11997)
!12000 = !DILocation(line: 356, column: 26, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !11941, line: 356, column: 10)
!12002 = distinct !DILexicalBlock(scope: !11996, file: !11941, line: 354, column: 5)
!12003 = !DILocation(line: 356, column: 55, scope: !12001)
!12004 = !DILocation(line: 362, column: 55, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12002, file: !11941, line: 362, column: 10)
!12006 = !DILocation(line: 368, column: 55, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12002, file: !11941, line: 368, column: 10)
!12008 = !DILocation(line: 374, column: 26, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12002, file: !11941, line: 374, column: 10)
!12010 = !DILocation(line: 374, column: 55, scope: !12009)
!12011 = !DILocation(line: 380, column: 28, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12013, file: !11941, line: 380, column: 12)
!12013 = distinct !DILexicalBlock(scope: !12009, file: !11941, line: 379, column: 7)
!12014 = !DILocation(line: 380, column: 57, scope: !12012)
!12015 = !DILocation(line: 387, column: 8, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11997, file: !11941, line: 387, column: 8)
!12017 = !DILocation(line: 387, column: 40, scope: !12016)
!12018 = !DILocation(line: 387, column: 8, scope: !11997)
!12019 = !DILocation(line: 390, column: 26, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !11941, line: 390, column: 10)
!12021 = distinct !DILexicalBlock(scope: !12016, file: !11941, line: 388, column: 5)
!12022 = !DILocation(line: 390, column: 55, scope: !12020)
!12023 = !DILocation(line: 396, column: 26, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12021, file: !11941, line: 396, column: 10)
!12025 = !DILocation(line: 396, column: 55, scope: !12024)
!12026 = !DILocation(line: 402, column: 26, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12021, file: !11941, line: 402, column: 10)
!12028 = !DILocation(line: 402, column: 55, scope: !12027)
!12029 = !DILocation(line: 407, column: 26, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12021, file: !11941, line: 407, column: 10)
!12031 = !DILocation(line: 407, column: 55, scope: !12030)
!12032 = !DILocation(line: 413, column: 28, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !11941, line: 413, column: 12)
!12034 = distinct !DILexicalBlock(scope: !12030, file: !11941, line: 412, column: 7)
!12035 = !DILocation(line: 413, column: 57, scope: !12033)
!12036 = !DILocation(line: 0, scope: !11997)
!12037 = !DILocation(line: 420, column: 8, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !11997, file: !11941, line: 420, column: 8)
!12039 = !DILocation(line: 420, column: 40, scope: !12038)
!12040 = !DILocation(line: 420, column: 8, scope: !11997)
!12041 = !DILocation(line: 423, column: 26, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !11941, line: 423, column: 10)
!12043 = distinct !DILexicalBlock(scope: !12038, file: !11941, line: 421, column: 5)
!12044 = !DILocation(line: 423, column: 55, scope: !12042)
!12045 = !DILocation(line: 429, column: 26, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12043, file: !11941, line: 429, column: 10)
!12047 = !DILocation(line: 429, column: 55, scope: !12046)
!12048 = !DILocation(line: 435, column: 28, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12050, file: !11941, line: 435, column: 12)
!12050 = distinct !DILexicalBlock(scope: !12046, file: !11941, line: 434, column: 7)
!12051 = !DILocation(line: 435, column: 57, scope: !12049)
!12052 = !DILocation(line: 444, column: 5, scope: !11997)
!12053 = !DILocation(line: 448, column: 5, scope: !11997)
!12054 = !DILocation(line: 451, column: 18, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !11997, file: !11941, line: 449, column: 5)
!12056 = !DILocation(line: 452, column: 12, scope: !12055)
!12057 = !DILocation(line: 453, column: 26, scope: !11997)
!12058 = !DILocation(line: 453, column: 38, scope: !11997)
!12059 = !DILocation(line: 453, column: 5, scope: !12055)
!12060 = distinct !{!12060, !12053, !12061}
!12061 = !DILocation(line: 453, column: 54, scope: !11997)
!12062 = !DILocation(line: 0, scope: !11993)
!12063 = !DILocation(line: 464, column: 3, scope: !11981)
!12064 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12065, file: !12065, line: 519, type: !135, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12065 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12066 = !DILocation(line: 521, column: 21, scope: !12064)
!12067 = !DILocation(line: 521, column: 3, scope: !12064)
!12068 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6214, file: !6214, line: 1543, type: !6456, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12069)
!12069 = !{!12070}
!12070 = !DILocalVariable(name: "Latency", arg: 1, scope: !12068, file: !6214, line: 1543, type: !137)
!12071 = !DILocation(line: 0, scope: !12068)
!12072 = !DILocation(line: 1545, column: 3, scope: !12068)
!12073 = !DILocation(line: 1546, column: 1, scope: !12068)
!12074 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6214, file: !6214, line: 1569, type: !135, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12075 = !DILocation(line: 1571, column: 21, scope: !12074)
!12076 = !DILocation(line: 1571, column: 3, scope: !12074)
!12077 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11941, file: !11941, line: 483, type: !12078, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12094)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!11984, !12080, !12087}
!12080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12081, size: 32)
!12081 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11948, line: 114, baseType: !12082)
!12082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11948, line: 94, size: 96, elements: !12083)
!12083 = !{!12084, !12085, !12086}
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12082, file: !11948, line: 96, baseType: !137, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12082, file: !11948, line: 102, baseType: !137, size: 32, offset: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12082, file: !11948, line: 109, baseType: !137, size: 32, offset: 64)
!12087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12088, size: 32)
!12088 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11948, line: 139, baseType: !12089)
!12089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11948, line: 119, size: 96, elements: !12090)
!12090 = !{!12091, !12092, !12093}
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12089, file: !11948, line: 121, baseType: !137, size: 32)
!12092 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12089, file: !11948, line: 127, baseType: !137, size: 32, offset: 32)
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12089, file: !11948, line: 133, baseType: !137, size: 32, offset: 64)
!12094 = !{!12095, !12096, !12097, !12098}
!12095 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12077, file: !11941, line: 483, type: !12080)
!12096 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12077, file: !11941, line: 484, type: !12087)
!12097 = !DILocalVariable(name: "status", scope: !12077, file: !11941, line: 486, type: !11984)
!12098 = !DILocalVariable(name: "pllfreq", scope: !12077, file: !11941, line: 487, type: !137)
!12099 = !DILocation(line: 0, scope: !12077)
!12100 = !DILocation(line: 490, column: 6, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12077, file: !11941, line: 490, column: 6)
!12102 = !DILocation(line: 490, column: 25, scope: !12101)
!12103 = !DILocation(line: 490, column: 6, scope: !12077)
!12104 = !DILocation(line: 493, column: 15, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12101, file: !11941, line: 491, column: 3)
!12106 = !DILocation(line: 496, column: 8, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12105, file: !11941, line: 496, column: 8)
!12108 = !DILocation(line: 496, column: 29, scope: !12107)
!12109 = !DILocation(line: 496, column: 8, scope: !12105)
!12110 = !DILocation(line: 498, column: 7, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12107, file: !11941, line: 497, column: 5)
!12112 = !DILocation(line: 499, column: 7, scope: !12111)
!12113 = !DILocation(line: 499, column: 14, scope: !12111)
!12114 = !DILocation(line: 499, column: 35, scope: !12111)
!12115 = distinct !{!12115, !12112, !12116}
!12116 = !DILocation(line: 502, column: 7, scope: !12111)
!12117 = !DILocation(line: 506, column: 76, scope: !12105)
!12118 = !DILocation(line: 506, column: 103, scope: !12105)
!12119 = !DILocation(line: 507, column: 54, scope: !12105)
!12120 = !DILocation(line: 506, column: 5, scope: !12105)
!12121 = !DILocation(line: 510, column: 14, scope: !12105)
!12122 = !DILocation(line: 511, column: 3, scope: !12105)
!12123 = !DILocation(line: 0, scope: !12101)
!12124 = !DILocation(line: 518, column: 3, scope: !12077)
!12125 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11941, file: !11941, line: 642, type: !12126, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12128)
!12126 = !DISubroutineType(types: !12127)
!12127 = !{!11984}
!12128 = !{!12129}
!12129 = !DILocalVariable(name: "status", scope: !12125, file: !11941, line: 644, type: !11984)
!12130 = !DILocation(line: 0, scope: !12125)
!12131 = !DILocation(line: 647, column: 6, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12125, file: !11941, line: 647, column: 6)
!12133 = !DILocation(line: 647, column: 27, scope: !12132)
!12134 = !DILocation(line: 655, column: 6, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12125, file: !11941, line: 655, column: 6)
!12136 = !DILocation(line: 655, column: 30, scope: !12135)
!12137 = !DILocation(line: 663, column: 6, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12125, file: !11941, line: 663, column: 6)
!12139 = !DILocation(line: 663, column: 30, scope: !12138)
!12140 = !DILocation(line: 663, column: 6, scope: !12125)
!12141 = !DILocation(line: 669, column: 3, scope: !12125)
!12142 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11941, file: !11941, line: 611, type: !12143, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12145)
!12143 = !DISubroutineType(types: !12144)
!12144 = !{!137, !137, !12080}
!12145 = !{!12146, !12147, !12148}
!12146 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12142, file: !11941, line: 611, type: !137)
!12147 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12142, file: !11941, line: 611, type: !12080)
!12148 = !DILocalVariable(name: "pllfreq", scope: !12142, file: !11941, line: 613, type: !137)
!12149 = !DILocation(line: 0, scope: !12142)
!12150 = !DILocation(line: 622, column: 56, scope: !12142)
!12151 = !DILocation(line: 622, column: 61, scope: !12142)
!12152 = !DILocation(line: 622, column: 32, scope: !12142)
!12153 = !DILocation(line: 626, column: 45, scope: !12142)
!12154 = !DILocation(line: 626, column: 50, scope: !12142)
!12155 = !DILocation(line: 626, column: 21, scope: !12142)
!12156 = !DILocation(line: 630, column: 47, scope: !12142)
!12157 = !DILocation(line: 630, column: 82, scope: !12142)
!12158 = !DILocation(line: 630, column: 21, scope: !12142)
!12159 = !DILocation(line: 633, column: 3, scope: !12142)
!12160 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8401, file: !8401, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12161 = !DILocation(line: 3009, column: 11, scope: !12160)
!12162 = !DILocation(line: 3009, column: 44, scope: !12160)
!12163 = !DILocation(line: 3009, column: 3, scope: !12160)
!12164 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8401, file: !8401, line: 2987, type: !2885, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12165 = !DILocation(line: 2989, column: 3, scope: !12164)
!12166 = !DILocation(line: 2990, column: 1, scope: !12164)
!12167 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8401, file: !8401, line: 4304, type: !8535, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12168)
!12168 = !{!12169, !12170, !12171, !12172}
!12169 = !DILocalVariable(name: "Source", arg: 1, scope: !12167, file: !8401, line: 4304, type: !137)
!12170 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12167, file: !8401, line: 4304, type: !137)
!12171 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12167, file: !8401, line: 4304, type: !137)
!12172 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12167, file: !8401, line: 4304, type: !137)
!12173 = !DILocation(line: 0, scope: !12167)
!12174 = !DILocation(line: 4306, column: 3, scope: !12167)
!12175 = !DILocation(line: 4308, column: 3, scope: !12167)
!12176 = !DILocation(line: 4310, column: 3, scope: !12167)
!12177 = !DILocation(line: 4312, column: 1, scope: !12167)
!12178 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11941, file: !11941, line: 681, type: !12179, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12181)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{!11984, !137, !12087}
!12181 = !{!12182, !12183, !12184, !12185}
!12182 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12178, file: !11941, line: 681, type: !137)
!12183 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12178, file: !11941, line: 681, type: !12087)
!12184 = !DILocalVariable(name: "status", scope: !12178, file: !11941, line: 683, type: !11984)
!12185 = !DILocalVariable(name: "hclk_frequency", scope: !12178, file: !11941, line: 684, type: !137)
!12186 = !DILocation(line: 0, scope: !12178)
!12187 = !DILocation(line: 691, column: 20, scope: !12178)
!12188 = !DILocation(line: 694, column: 6, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12178, file: !11941, line: 694, column: 6)
!12190 = !DILocation(line: 694, column: 22, scope: !12189)
!12191 = !DILocation(line: 694, column: 6, scope: !12178)
!12192 = !DILocation(line: 697, column: 14, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12189, file: !11941, line: 695, column: 3)
!12194 = !DILocation(line: 701, column: 13, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12178, file: !11941, line: 701, column: 6)
!12196 = !DILocation(line: 701, column: 6, scope: !12178)
!12197 = !DILocation(line: 704, column: 5, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12195, file: !11941, line: 702, column: 3)
!12199 = !DILocation(line: 705, column: 5, scope: !12198)
!12200 = !DILocation(line: 705, column: 12, scope: !12198)
!12201 = !DILocation(line: 705, column: 33, scope: !12198)
!12202 = distinct !{!12202, !12199, !12203}
!12203 = !DILocation(line: 708, column: 5, scope: !12198)
!12204 = !DILocation(line: 711, column: 49, scope: !12198)
!12205 = !DILocation(line: 711, column: 5, scope: !12198)
!12206 = !DILocation(line: 712, column: 5, scope: !12198)
!12207 = !DILocation(line: 713, column: 5, scope: !12198)
!12208 = !DILocation(line: 713, column: 12, scope: !12198)
!12209 = !DILocation(line: 713, column: 37, scope: !12198)
!12210 = distinct !{!12210, !12207, !12211}
!12211 = !DILocation(line: 716, column: 5, scope: !12198)
!12212 = !DILocation(line: 719, column: 50, scope: !12198)
!12213 = !DILocation(line: 719, column: 5, scope: !12198)
!12214 = !DILocation(line: 720, column: 50, scope: !12198)
!12215 = !DILocation(line: 720, column: 5, scope: !12198)
!12216 = !DILocation(line: 721, column: 3, scope: !12198)
!12217 = !DILocation(line: 724, column: 6, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12178, file: !11941, line: 724, column: 6)
!12219 = !DILocation(line: 724, column: 22, scope: !12218)
!12220 = !DILocation(line: 724, column: 6, scope: !12178)
!12221 = !DILocation(line: 727, column: 14, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12218, file: !11941, line: 725, column: 3)
!12223 = !DILocation(line: 728, column: 3, scope: !12222)
!12224 = !DILocation(line: 731, column: 13, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12178, file: !11941, line: 731, column: 6)
!12226 = !DILocation(line: 731, column: 6, scope: !12178)
!12227 = !DILocation(line: 733, column: 5, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12225, file: !11941, line: 732, column: 3)
!12229 = !DILocation(line: 734, column: 3, scope: !12228)
!12230 = !DILocation(line: 736, column: 3, scope: !12178)
!12231 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8401, file: !8401, line: 4184, type: !2885, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12232 = !DILocation(line: 4186, column: 3, scope: !12231)
!12233 = !DILocation(line: 4187, column: 1, scope: !12231)
!12234 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8401, file: !8401, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12235 = !DILocation(line: 4207, column: 11, scope: !12234)
!12236 = !DILocation(line: 4207, column: 44, scope: !12234)
!12237 = !DILocation(line: 4207, column: 3, scope: !12234)
!12238 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8401, file: !8401, line: 3224, type: !6456, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12239)
!12239 = !{!12240}
!12240 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12238, file: !8401, line: 3224, type: !137)
!12241 = !DILocation(line: 0, scope: !12238)
!12242 = !DILocation(line: 3226, column: 3, scope: !12238)
!12243 = !DILocation(line: 3227, column: 1, scope: !12238)
!12244 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8401, file: !8401, line: 3188, type: !6456, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12245)
!12245 = !{!12246}
!12246 = !DILocalVariable(name: "Source", arg: 1, scope: !12244, file: !8401, line: 3188, type: !137)
!12247 = !DILocation(line: 0, scope: !12244)
!12248 = !DILocation(line: 3190, column: 3, scope: !12244)
!12249 = !DILocation(line: 3191, column: 1, scope: !12244)
!12250 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8401, file: !8401, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12251 = !DILocation(line: 3206, column: 21, scope: !12250)
!12252 = !DILocation(line: 3206, column: 3, scope: !12250)
!12253 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8401, file: !8401, line: 3240, type: !6456, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12254)
!12254 = !{!12255}
!12255 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12253, file: !8401, line: 3240, type: !137)
!12256 = !DILocation(line: 0, scope: !12253)
!12257 = !DILocation(line: 3242, column: 3, scope: !12253)
!12258 = !DILocation(line: 3243, column: 1, scope: !12253)
!12259 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8401, file: !8401, line: 3256, type: !6456, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12260)
!12260 = !{!12261}
!12261 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12259, file: !8401, line: 3256, type: !137)
!12262 = !DILocation(line: 0, scope: !12259)
!12263 = !DILocation(line: 3258, column: 3, scope: !12259)
!12264 = !DILocation(line: 3259, column: 1, scope: !12259)
!12265 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8401, file: !8401, line: 5969, type: !135, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12266 = !DILocation(line: 5971, column: 11, scope: !12265)
!12267 = !DILocation(line: 5971, column: 47, scope: !12265)
!12268 = !DILocation(line: 5971, column: 3, scope: !12265)
!12269 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8401, file: !8401, line: 5153, type: !135, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12270 = !DILocation(line: 5155, column: 11, scope: !12269)
!12271 = !DILocation(line: 5155, column: 47, scope: !12269)
!12272 = !DILocation(line: 5155, column: 3, scope: !12269)
!12273 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11941, file: !11941, line: 540, type: !12274, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !12276)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!11984, !137, !137, !12080, !12087}
!12276 = !{!12277, !12278, !12279, !12280, !12281, !12282}
!12277 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12273, file: !11941, line: 540, type: !137)
!12278 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12273, file: !11941, line: 540, type: !137)
!12279 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12273, file: !11941, line: 541, type: !12080)
!12280 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12273, file: !11941, line: 541, type: !12087)
!12281 = !DILocalVariable(name: "status", scope: !12273, file: !11941, line: 543, type: !11984)
!12282 = !DILocalVariable(name: "pllfreq", scope: !12273, file: !11941, line: 544, type: !137)
!12283 = !DILocation(line: 0, scope: !12273)
!12284 = !DILocation(line: 551, column: 6, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12273, file: !11941, line: 551, column: 6)
!12286 = !DILocation(line: 551, column: 25, scope: !12285)
!12287 = !DILocation(line: 551, column: 6, scope: !12273)
!12288 = !DILocation(line: 554, column: 15, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12285, file: !11941, line: 552, column: 3)
!12290 = !DILocation(line: 557, column: 8, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12289, file: !11941, line: 557, column: 8)
!12292 = !DILocation(line: 557, column: 29, scope: !12291)
!12293 = !DILocation(line: 557, column: 8, scope: !12289)
!12294 = !DILocation(line: 560, column: 20, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !11941, line: 560, column: 10)
!12296 = distinct !DILexicalBlock(scope: !12291, file: !11941, line: 558, column: 5)
!12297 = !DILocation(line: 560, column: 10, scope: !12296)
!12298 = !DILocation(line: 562, column: 9, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12295, file: !11941, line: 561, column: 7)
!12300 = !DILocation(line: 563, column: 7, scope: !12299)
!12301 = !DILocation(line: 566, column: 9, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12295, file: !11941, line: 565, column: 7)
!12303 = !DILocation(line: 570, column: 7, scope: !12296)
!12304 = !DILocation(line: 571, column: 7, scope: !12296)
!12305 = !DILocation(line: 571, column: 14, scope: !12296)
!12306 = !DILocation(line: 571, column: 35, scope: !12296)
!12307 = distinct !{!12307, !12304, !12308}
!12308 = !DILocation(line: 574, column: 7, scope: !12296)
!12309 = !DILocation(line: 578, column: 76, scope: !12289)
!12310 = !DILocation(line: 578, column: 103, scope: !12289)
!12311 = !DILocation(line: 579, column: 54, scope: !12289)
!12312 = !DILocation(line: 578, column: 5, scope: !12289)
!12313 = !DILocation(line: 582, column: 14, scope: !12289)
!12314 = !DILocation(line: 583, column: 3, scope: !12289)
!12315 = !DILocation(line: 0, scope: !12285)
!12316 = !DILocation(line: 590, column: 3, scope: !12273)
!12317 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8401, file: !8401, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12318 = !DILocation(line: 2971, column: 11, scope: !12317)
!12319 = !DILocation(line: 2971, column: 44, scope: !12317)
!12320 = !DILocation(line: 2971, column: 3, scope: !12317)
!12321 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8401, file: !8401, line: 2929, type: !2885, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12322 = !DILocation(line: 2931, column: 3, scope: !12321)
!12323 = !DILocation(line: 2932, column: 1, scope: !12321)
!12324 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8401, file: !8401, line: 2939, type: !2885, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12325 = !DILocation(line: 2941, column: 3, scope: !12324)
!12326 = !DILocation(line: 2942, column: 1, scope: !12324)
!12327 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8401, file: !8401, line: 2949, type: !2885, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2778, retainedNodes: !162)
!12328 = !DILocation(line: 2951, column: 3, scope: !12327)
!12329 = !DILocation(line: 2952, column: 1, scope: !12327)
!12330 = distinct !DISubprogram(name: "z_device_state_init", scope: !12331, file: !12331, line: 23, type: !2885, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12332)
!12331 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12332 = !{!12333}
!12333 = !DILocalVariable(name: "dev", scope: !12330, file: !12331, line: 25, type: !12334)
!12334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12335, size: 32)
!12335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12336)
!12336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !12337)
!12337 = !{!12338, !12339, !12340, !12341, !12347, !12348}
!12338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12336, file: !196, line: 380, baseType: !199, size: 32)
!12339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12336, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!12340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12336, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!12341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12336, file: !196, line: 386, baseType: !12342, size: 32, offset: 96)
!12342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12343, size: 32)
!12343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !12344)
!12344 = !{!12345, !12346}
!12345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12343, file: !196, line: 359, baseType: !208, size: 8)
!12346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12343, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12347 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12336, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!12348 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12336, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!12349 = !DILocation(line: 0, scope: !12330)
!12350 = !DILocation(line: 31, column: 1, scope: !12330)
!12351 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12331, file: !12331, line: 33, type: !12352, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12354)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!12334, !199}
!12354 = !{!12355, !12356}
!12355 = !DILocalVariable(name: "name", arg: 1, scope: !12351, file: !12331, line: 33, type: !199)
!12356 = !DILocalVariable(name: "dev", scope: !12351, file: !12331, line: 35, type: !12334)
!12357 = !DILocation(line: 0, scope: !12351)
!12358 = !DILocation(line: 40, column: 12, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12351, file: !12331, line: 40, column: 6)
!12360 = !DILocation(line: 40, column: 21, scope: !12359)
!12361 = !DILocation(line: 40, column: 25, scope: !12359)
!12362 = !DILocation(line: 40, column: 33, scope: !12359)
!12363 = !DILocation(line: 40, column: 6, scope: !12351)
!12364 = !DILocation(line: 55, column: 2, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12351, file: !12331, line: 55, column: 2)
!12366 = !DILocation(line: 50, column: 7, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !12331, line: 50, column: 7)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !12331, line: 49, column: 57)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !12331, line: 49, column: 2)
!12370 = distinct !DILexicalBlock(scope: !12351, file: !12331, line: 49, column: 2)
!12371 = !DILocation(line: 50, column: 30, scope: !12367)
!12372 = !DILocation(line: 50, column: 39, scope: !12367)
!12373 = !DILocation(line: 50, column: 44, scope: !12367)
!12374 = !DILocation(line: 50, column: 7, scope: !12368)
!12375 = !DILocation(line: 49, column: 53, scope: !12369)
!12376 = !DILocation(line: 49, column: 33, scope: !12369)
!12377 = !DILocation(line: 49, column: 2, scope: !12370)
!12378 = distinct !{!12378, !12377, !12379}
!12379 = !DILocation(line: 53, column: 2, scope: !12370)
!12380 = !DILocation(line: 56, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12382, file: !12331, line: 56, column: 7)
!12382 = distinct !DILexicalBlock(scope: !12383, file: !12331, line: 55, column: 57)
!12383 = distinct !DILexicalBlock(scope: !12365, file: !12331, line: 55, column: 2)
!12384 = !DILocation(line: 56, column: 30, scope: !12381)
!12385 = !DILocation(line: 56, column: 52, scope: !12381)
!12386 = !DILocation(line: 56, column: 34, scope: !12381)
!12387 = !DILocation(line: 56, column: 58, scope: !12381)
!12388 = !DILocation(line: 56, column: 7, scope: !12382)
!12389 = !DILocation(line: 55, column: 53, scope: !12383)
!12390 = !DILocation(line: 55, column: 33, scope: !12383)
!12391 = distinct !{!12391, !12364, !12392}
!12392 = !DILocation(line: 59, column: 2, scope: !12365)
!12393 = !DILocation(line: 62, column: 1, scope: !12351)
!12394 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12331, file: !12331, line: 93, type: !12395, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12397)
!12395 = !DISubroutineType(types: !12396)
!12396 = !{!211, !12334}
!12397 = !{!12398}
!12398 = !DILocalVariable(name: "dev", arg: 1, scope: !12394, file: !12331, line: 93, type: !12334)
!12399 = !DILocation(line: 0, scope: !12394)
!12400 = !DILocation(line: 99, column: 10, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12394, file: !12331, line: 99, column: 6)
!12402 = !DILocation(line: 99, column: 6, scope: !12394)
!12403 = !DILocation(line: 103, column: 14, scope: !12394)
!12404 = !DILocation(line: 103, column: 21, scope: !12394)
!12405 = !DILocation(line: 103, column: 33, scope: !12394)
!12406 = !DILocation(line: 103, column: 49, scope: !12394)
!12407 = !DILocation(line: 103, column: 58, scope: !12394)
!12408 = !DILocation(line: 104, column: 1, scope: !12394)
!12409 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12331, file: !12331, line: 87, type: !12410, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12413)
!12410 = !DISubroutineType(types: !12411)
!12411 = !{!120, !12412}
!12412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12334, size: 32)
!12413 = !{!12414}
!12414 = !DILocalVariable(name: "devices", arg: 1, scope: !12409, file: !12331, line: 87, type: !12412)
!12415 = !DILocation(line: 0, scope: !12409)
!12416 = !DILocation(line: 89, column: 11, scope: !12409)
!12417 = !DILocation(line: 90, column: 2, scope: !12409)
!12418 = distinct !DISubprogram(name: "device_required_foreach", scope: !12331, file: !12331, line: 125, type: !12419, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12425)
!12419 = !DISubroutineType(types: !12420)
!12420 = !{!103, !12334, !12421, !102}
!12421 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !196, line: 471, baseType: !12422)
!12422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12423, size: 32)
!12423 = !DISubroutineType(types: !12424)
!12424 = !{!103, !12334, !102}
!12425 = !{!12426, !12427, !12428, !12429, !12430}
!12426 = !DILocalVariable(name: "dev", arg: 1, scope: !12418, file: !12331, line: 125, type: !12334)
!12427 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12418, file: !12331, line: 126, type: !12421)
!12428 = !DILocalVariable(name: "context", arg: 3, scope: !12418, file: !12331, line: 127, type: !102)
!12429 = !DILocalVariable(name: "handle_count", scope: !12418, file: !12331, line: 129, type: !120)
!12430 = !DILocalVariable(name: "handles", scope: !12418, file: !12331, line: 130, type: !214)
!12431 = !DILocation(line: 0, scope: !12418)
!12432 = !DILocation(line: 129, column: 2, scope: !12418)
!12433 = !DILocation(line: 129, column: 9, scope: !12418)
!12434 = !DILocation(line: 130, column: 35, scope: !12418)
!12435 = !DILocation(line: 132, column: 33, scope: !12418)
!12436 = !DILocation(line: 132, column: 9, scope: !12418)
!12437 = !DILocation(line: 133, column: 1, scope: !12418)
!12438 = !DILocation(line: 132, column: 2, scope: !12418)
!12439 = distinct !DISubprogram(name: "device_required_handles_get", scope: !196, file: !196, line: 493, type: !12440, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12442)
!12440 = !DISubroutineType(types: !12441)
!12441 = !{!214, !12334, !2360}
!12442 = !{!12443, !12444, !12445, !12446}
!12443 = !DILocalVariable(name: "dev", arg: 1, scope: !12439, file: !196, line: 493, type: !12334)
!12444 = !DILocalVariable(name: "count", arg: 2, scope: !12439, file: !196, line: 493, type: !2360)
!12445 = !DILocalVariable(name: "rv", scope: !12439, file: !196, line: 495, type: !214)
!12446 = !DILocalVariable(name: "i", scope: !12447, file: !196, line: 498, type: !120)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !196, line: 497, column: 18)
!12448 = distinct !DILexicalBlock(scope: !12439, file: !196, line: 497, column: 6)
!12449 = !DILocation(line: 0, scope: !12439)
!12450 = !DILocation(line: 495, column: 35, scope: !12439)
!12451 = !DILocation(line: 497, column: 9, scope: !12448)
!12452 = !DILocation(line: 497, column: 6, scope: !12439)
!12453 = !DILocation(line: 0, scope: !12447)
!12454 = !DILocation(line: 500, column: 11, scope: !12447)
!12455 = !DILocation(line: 500, column: 40, scope: !12447)
!12456 = !DILocation(line: 502, column: 4, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12447, file: !196, line: 501, column: 40)
!12458 = distinct !{!12458, !12459, !12460}
!12459 = !DILocation(line: 500, column: 3, scope: !12447)
!12460 = !DILocation(line: 503, column: 3, scope: !12447)
!12461 = !DILocation(line: 504, column: 10, scope: !12447)
!12462 = !DILocation(line: 505, column: 2, scope: !12447)
!12463 = !DILocation(line: 507, column: 2, scope: !12439)
!12464 = distinct !DISubprogram(name: "device_visitor", scope: !12331, file: !12331, line: 106, type: !12465, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12467)
!12465 = !DISubroutineType(types: !12466)
!12466 = !{!103, !214, !120, !12421, !102}
!12467 = !{!12468, !12469, !12470, !12471, !12472, !12474, !12477, !12478}
!12468 = !DILocalVariable(name: "handles", arg: 1, scope: !12464, file: !12331, line: 106, type: !214)
!12469 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12464, file: !12331, line: 107, type: !120)
!12470 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12464, file: !12331, line: 108, type: !12421)
!12471 = !DILocalVariable(name: "context", arg: 4, scope: !12464, file: !12331, line: 109, type: !102)
!12472 = !DILocalVariable(name: "i", scope: !12473, file: !12331, line: 112, type: !120)
!12473 = distinct !DILexicalBlock(scope: !12464, file: !12331, line: 112, column: 2)
!12474 = !DILocalVariable(name: "dh", scope: !12475, file: !12331, line: 113, type: !216)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !12331, line: 112, column: 44)
!12476 = distinct !DILexicalBlock(scope: !12473, file: !12331, line: 112, column: 2)
!12477 = !DILocalVariable(name: "rdev", scope: !12475, file: !12331, line: 114, type: !12334)
!12478 = !DILocalVariable(name: "rc", scope: !12475, file: !12331, line: 115, type: !103)
!12479 = !DILocation(line: 0, scope: !12464)
!12480 = !DILocation(line: 0, scope: !12473)
!12481 = !DILocation(line: 112, column: 23, scope: !12476)
!12482 = !DILocation(line: 112, column: 2, scope: !12473)
!12483 = distinct !{!12483, !12482, !12484}
!12484 = !DILocation(line: 120, column: 2, scope: !12473)
!12485 = !DILocation(line: 113, column: 24, scope: !12475)
!12486 = !DILocation(line: 0, scope: !12475)
!12487 = !DILocation(line: 114, column: 31, scope: !12475)
!12488 = !DILocation(line: 115, column: 12, scope: !12475)
!12489 = !DILocation(line: 117, column: 10, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12475, file: !12331, line: 117, column: 7)
!12491 = !DILocation(line: 112, column: 39, scope: !12476)
!12492 = !DILocation(line: 123, column: 1, scope: !12464)
!12493 = distinct !DISubprogram(name: "device_from_handle", scope: !196, file: !196, line: 439, type: !12494, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12496)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{!12334, !216}
!12496 = !{!12497, !12498, !12499}
!12497 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12493, file: !196, line: 439, type: !216)
!12498 = !DILocalVariable(name: "dev", scope: !12493, file: !196, line: 443, type: !12334)
!12499 = !DILocalVariable(name: "numdev", scope: !12493, file: !196, line: 444, type: !120)
!12500 = !DILocation(line: 0, scope: !12493)
!12501 = !DILocation(line: 446, column: 7, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12493, file: !196, line: 446, column: 6)
!12503 = !DILocation(line: 446, column: 18, scope: !12502)
!12504 = !DILocation(line: 446, column: 23, scope: !12502)
!12505 = !DILocation(line: 450, column: 2, scope: !12493)
!12506 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12331, file: !12331, line: 135, type: !12419, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12507)
!12507 = !{!12508, !12509, !12510, !12511, !12512}
!12508 = !DILocalVariable(name: "dev", arg: 1, scope: !12506, file: !12331, line: 135, type: !12334)
!12509 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12506, file: !12331, line: 136, type: !12421)
!12510 = !DILocalVariable(name: "context", arg: 3, scope: !12506, file: !12331, line: 137, type: !102)
!12511 = !DILocalVariable(name: "handle_count", scope: !12506, file: !12331, line: 139, type: !120)
!12512 = !DILocalVariable(name: "handles", scope: !12506, file: !12331, line: 140, type: !214)
!12513 = !DILocation(line: 0, scope: !12506)
!12514 = !DILocation(line: 139, column: 2, scope: !12506)
!12515 = !DILocation(line: 139, column: 9, scope: !12506)
!12516 = !DILocation(line: 140, column: 35, scope: !12506)
!12517 = !DILocation(line: 142, column: 33, scope: !12506)
!12518 = !DILocation(line: 142, column: 9, scope: !12506)
!12519 = !DILocation(line: 143, column: 1, scope: !12506)
!12520 = !DILocation(line: 142, column: 2, scope: !12506)
!12521 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !196, file: !196, line: 573, type: !12440, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !12522)
!12522 = !{!12523, !12524, !12525, !12526, !12527}
!12523 = !DILocalVariable(name: "dev", arg: 1, scope: !12521, file: !196, line: 573, type: !12334)
!12524 = !DILocalVariable(name: "count", arg: 2, scope: !12521, file: !196, line: 573, type: !2360)
!12525 = !DILocalVariable(name: "rv", scope: !12521, file: !196, line: 575, type: !214)
!12526 = !DILocalVariable(name: "region", scope: !12521, file: !196, line: 576, type: !120)
!12527 = !DILocalVariable(name: "i", scope: !12521, file: !196, line: 577, type: !120)
!12528 = !DILocation(line: 0, scope: !12521)
!12529 = !DILocation(line: 575, column: 35, scope: !12521)
!12530 = !DILocation(line: 579, column: 9, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12521, file: !196, line: 579, column: 6)
!12532 = !DILocation(line: 579, column: 6, scope: !12521)
!12533 = !DILocation(line: 582, column: 8, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !196, line: 582, column: 8)
!12535 = distinct !DILexicalBlock(scope: !12536, file: !196, line: 581, column: 23)
!12536 = distinct !DILexicalBlock(scope: !12531, file: !196, line: 579, column: 18)
!12537 = !DILocation(line: 582, column: 12, scope: !12534)
!12538 = !DILocation(line: 585, column: 6, scope: !12535)
!12539 = !DILocation(line: 0, scope: !12536)
!12540 = !DILocation(line: 581, column: 17, scope: !12536)
!12541 = !DILocation(line: 581, column: 3, scope: !12536)
!12542 = !DILocation(line: 588, column: 10, scope: !12536)
!12543 = !DILocation(line: 588, column: 16, scope: !12536)
!12544 = !DILocation(line: 589, column: 4, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12536, file: !196, line: 588, column: 39)
!12546 = !DILocation(line: 588, column: 3, scope: !12536)
!12547 = distinct !{!12547, !12546, !12548}
!12548 = !DILocation(line: 590, column: 3, scope: !12536)
!12549 = !DILocation(line: 591, column: 10, scope: !12536)
!12550 = !DILocation(line: 592, column: 2, scope: !12536)
!12551 = !DILocation(line: 575, column: 25, scope: !12521)
!12552 = !DILocation(line: 594, column: 2, scope: !12521)
!12553 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1755, file: !1755, line: 49, type: !12554, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1752, retainedNodes: !162)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{!2353}
!12556 = !DILocation(line: 51, column: 10, scope: !12553)
!12557 = !DILocation(line: 51, column: 20, scope: !12553)
!12558 = !DILocation(line: 51, column: 2, scope: !12553)
!12559 = distinct !DISubprogram(name: "coredump", scope: !2852, file: !2852, line: 209, type: !12560, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12706)
!12560 = !DISubroutineType(types: !12561)
!12561 = !{null, !32, !12562, !12606}
!12562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12563, size: 32)
!12563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12564)
!12564 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2485, line: 141, baseType: !12565)
!12565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2485, line: 97, size: 256, elements: !12566)
!12566 = !{!12567}
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12565, file: !2485, line: 107, baseType: !12568, size: 256)
!12568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2485, line: 98, size: 256, elements: !12569)
!12569 = !{!12570, !12575, !12580, !12585, !12590, !12595, !12600, !12605}
!12570 = !DIDerivedType(tag: DW_TAG_member, scope: !12568, file: !2485, line: 99, baseType: !12571, size: 32)
!12571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12568, file: !2485, line: 99, size: 32, elements: !12572)
!12572 = !{!12573, !12574}
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12571, file: !2485, line: 99, baseType: !137, size: 32)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12571, file: !2485, line: 99, baseType: !137, size: 32)
!12575 = !DIDerivedType(tag: DW_TAG_member, scope: !12568, file: !2485, line: 100, baseType: !12576, size: 32, offset: 32)
!12576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12568, file: !2485, line: 100, size: 32, elements: !12577)
!12577 = !{!12578, !12579}
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12576, file: !2485, line: 100, baseType: !137, size: 32)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12576, file: !2485, line: 100, baseType: !137, size: 32)
!12580 = !DIDerivedType(tag: DW_TAG_member, scope: !12568, file: !2485, line: 101, baseType: !12581, size: 32, offset: 64)
!12581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12568, file: !2485, line: 101, size: 32, elements: !12582)
!12582 = !{!12583, !12584}
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12581, file: !2485, line: 101, baseType: !137, size: 32)
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12581, file: !2485, line: 101, baseType: !137, size: 32)
!12585 = !DIDerivedType(tag: DW_TAG_member, scope: !12568, file: !2485, line: 102, baseType: !12586, size: 32, offset: 96)
!12586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12568, file: !2485, line: 102, size: 32, elements: !12587)
!12587 = !{!12588, !12589}
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12586, file: !2485, line: 102, baseType: !137, size: 32)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12586, file: !2485, line: 102, baseType: !137, size: 32)
!12590 = !DIDerivedType(tag: DW_TAG_member, scope: !12568, file: !2485, line: 103, baseType: !12591, size: 32, offset: 128)
!12591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12568, file: !2485, line: 103, size: 32, elements: !12592)
!12592 = !{!12593, !12594}
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12591, file: !2485, line: 103, baseType: !137, size: 32)
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12591, file: !2485, line: 103, baseType: !137, size: 32)
!12595 = !DIDerivedType(tag: DW_TAG_member, scope: !12568, file: !2485, line: 104, baseType: !12596, size: 32, offset: 160)
!12596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12568, file: !2485, line: 104, size: 32, elements: !12597)
!12597 = !{!12598, !12599}
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12596, file: !2485, line: 104, baseType: !137, size: 32)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12596, file: !2485, line: 104, baseType: !137, size: 32)
!12600 = !DIDerivedType(tag: DW_TAG_member, scope: !12568, file: !2485, line: 105, baseType: !12601, size: 32, offset: 192)
!12601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12568, file: !2485, line: 105, size: 32, elements: !12602)
!12602 = !{!12603, !12604}
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12601, file: !2485, line: 105, baseType: !137, size: 32)
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12601, file: !2485, line: 105, baseType: !137, size: 32)
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12568, file: !2485, line: 106, baseType: !137, size: 32, offset: 224)
!12606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12607, size: 32)
!12607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !12608)
!12608 = !{!12609, !12667, !12679, !12680, !12681, !12682, !12688, !12701}
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12607, file: !263, line: 247, baseType: !12610, size: 384)
!12610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !12611)
!12611 = !{!12612, !12636, !12643, !12644, !12645, !12654, !12655, !12656}
!12612 = !DIDerivedType(tag: DW_TAG_member, scope: !12610, file: !263, line: 60, baseType: !12613, size: 64)
!12613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12610, file: !263, line: 60, size: 64, elements: !12614)
!12614 = !{!12615, !12630}
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12613, file: !263, line: 61, baseType: !12616, size: 64)
!12616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !12617)
!12617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !12618)
!12618 = !{!12619, !12625}
!12619 = !DIDerivedType(tag: DW_TAG_member, scope: !12617, file: !273, line: 38, baseType: !12620, size: 32)
!12620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12617, file: !273, line: 38, size: 32, elements: !12621)
!12621 = !{!12622, !12624}
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12620, file: !273, line: 39, baseType: !12623, size: 32)
!12623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12617, size: 32)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12620, file: !273, line: 40, baseType: !12623, size: 32)
!12625 = !DIDerivedType(tag: DW_TAG_member, scope: !12617, file: !273, line: 42, baseType: !12626, size: 32, offset: 32)
!12626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12617, file: !273, line: 42, size: 32, elements: !12627)
!12627 = !{!12628, !12629}
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12626, file: !273, line: 43, baseType: !12623, size: 32)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12626, file: !273, line: 44, baseType: !12623, size: 32)
!12630 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12613, file: !263, line: 62, baseType: !12631, size: 64)
!12631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !12632)
!12632 = !{!12633}
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12631, file: !289, line: 50, baseType: !12634, size: 64)
!12634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12635, size: 64, elements: !294)
!12635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12631, size: 32)
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12610, file: !263, line: 68, baseType: !12637, size: 32, offset: 64)
!12637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12638, size: 32)
!12638 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !12639)
!12639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !12640)
!12640 = !{!12641}
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12639, file: !299, line: 232, baseType: !12642, size: 64)
!12642 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !12617)
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12610, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!12644 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12610, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!12645 = !DIDerivedType(tag: DW_TAG_member, scope: !12610, file: !263, line: 90, baseType: !12646, size: 16, offset: 112)
!12646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12610, file: !263, line: 90, size: 16, elements: !12647)
!12647 = !{!12648, !12653}
!12648 = !DIDerivedType(tag: DW_TAG_member, scope: !12646, file: !263, line: 91, baseType: !12649, size: 16)
!12649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12646, file: !263, line: 91, size: 16, elements: !12650)
!12650 = !{!12651, !12652}
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12649, file: !263, line: 96, baseType: !313, size: 8)
!12652 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12649, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!12653 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12646, file: !263, line: 100, baseType: !151, size: 16)
!12654 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12610, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!12655 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12610, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!12656 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12610, file: !263, line: 131, baseType: !12657, size: 192, offset: 192)
!12657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !12658)
!12658 = !{!12659, !12660, !12666}
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12657, file: !299, line: 245, baseType: !12616, size: 64)
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12657, file: !299, line: 246, baseType: !12661, size: 32, offset: 64)
!12661 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !12662)
!12662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12663, size: 32)
!12663 = !DISubroutineType(types: !12664)
!12664 = !{null, !12665}
!12665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12657, size: 32)
!12666 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12657, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!12667 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12607, file: !263, line: 250, baseType: !12668, size: 288, offset: 384)
!12668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !12669)
!12669 = !{!12670, !12671, !12672, !12673, !12674, !12675, !12676, !12677, !12678}
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12668, file: !334, line: 26, baseType: !137, size: 32)
!12671 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12668, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!12672 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12668, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!12673 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12668, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!12674 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12668, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!12675 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12668, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!12676 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12668, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12668, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!12678 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12668, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!12679 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12607, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!12680 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12607, file: !263, line: 256, baseType: !12638, size: 64, offset: 704)
!12681 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12607, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!12682 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12607, file: !263, line: 300, baseType: !12683, size: 96, offset: 800)
!12683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !12684)
!12684 = !{!12685, !12686, !12687}
!12685 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12683, file: !263, line: 153, baseType: !22, size: 32)
!12686 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12683, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!12687 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12683, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!12688 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12607, file: !263, line: 325, baseType: !12689, size: 32, offset: 896)
!12689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12690, size: 32)
!12690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !12691)
!12691 = !{!12692, !12698, !12699}
!12692 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12690, file: !357, line: 5074, baseType: !12693, size: 96)
!12693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !12694)
!12694 = !{!12695, !12696, !12697}
!12695 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12693, file: !113, line: 57, baseType: !116, size: 32)
!12696 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12693, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!12697 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12693, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!12698 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12690, file: !357, line: 5075, baseType: !12638, size: 64, offset: 96)
!12699 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12690, file: !357, line: 5076, baseType: !12700, offset: 160)
!12700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!12701 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12607, file: !263, line: 343, baseType: !12702, size: 64, offset: 928)
!12702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !12703)
!12703 = !{!12704, !12705}
!12704 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12702, file: !334, line: 63, baseType: !137, size: 32)
!12705 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12702, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!12706 = !{!12707, !12708, !12709}
!12707 = !DILocalVariable(name: "reason", arg: 1, scope: !12559, file: !2852, line: 209, type: !32)
!12708 = !DILocalVariable(name: "esf", arg: 2, scope: !12559, file: !2852, line: 209, type: !12562)
!12709 = !DILocalVariable(name: "thread", arg: 3, scope: !12559, file: !2852, line: 210, type: !12606)
!12710 = !DILocation(line: 0, scope: !12559)
!12711 = !DILocation(line: 212, column: 1, scope: !12559)
!12712 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2852, file: !2852, line: 214, type: !12713, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12715)
!12713 = !DISubroutineType(types: !12714)
!12714 = !{null, !22, !22}
!12715 = !{!12716, !12717}
!12716 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12712, file: !2852, line: 214, type: !22)
!12717 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12712, file: !2852, line: 214, type: !22)
!12718 = !DILocation(line: 0, scope: !12712)
!12719 = !DILocation(line: 216, column: 1, scope: !12712)
!12720 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2852, file: !2852, line: 218, type: !12721, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12723)
!12721 = !DISubroutineType(types: !12722)
!12722 = !{null, !1796, !120}
!12723 = !{!12724, !12725}
!12724 = !DILocalVariable(name: "buf", arg: 1, scope: !12720, file: !2852, line: 218, type: !1796)
!12725 = !DILocalVariable(name: "buflen", arg: 2, scope: !12720, file: !2852, line: 218, type: !120)
!12726 = !DILocation(line: 0, scope: !12720)
!12727 = !DILocation(line: 220, column: 1, scope: !12720)
!12728 = distinct !DISubprogram(name: "coredump_query", scope: !2852, file: !2852, line: 222, type: !12729, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12731)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{!103, !2851, !102}
!12731 = !{!12732, !12733}
!12732 = !DILocalVariable(name: "query_id", arg: 1, scope: !12728, file: !2852, line: 222, type: !2851)
!12733 = !DILocalVariable(name: "arg", arg: 2, scope: !12728, file: !2852, line: 222, type: !102)
!12734 = !DILocation(line: 0, scope: !12728)
!12735 = !DILocation(line: 224, column: 2, scope: !12728)
!12736 = distinct !DISubprogram(name: "coredump_cmd", scope: !2852, file: !2852, line: 227, type: !12737, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12739)
!12737 = !DISubroutineType(types: !12738)
!12738 = !{!103, !2858, !102}
!12739 = !{!12740, !12741}
!12740 = !DILocalVariable(name: "query_id", arg: 1, scope: !12736, file: !2852, line: 227, type: !2858)
!12741 = !DILocalVariable(name: "arg", arg: 2, scope: !12736, file: !2852, line: 227, type: !102)
!12742 = !DILocation(line: 0, scope: !12736)
!12743 = !DILocation(line: 229, column: 2, scope: !12736)
!12744 = distinct !DISubprogram(name: "arch_system_halt", scope: !12745, file: !12745, line: 23, type: !6204, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12746)
!12745 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12746 = !{!12747}
!12747 = !DILocalVariable(name: "reason", arg: 1, scope: !12744, file: !12745, line: 23, type: !32)
!12748 = !DILocation(line: 0, scope: !12744)
!12749 = !DILocation(line: 55, column: 2, scope: !12750, inlinedAt: !12754)
!12750 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12751)
!12751 = !{!12752, !12753}
!12752 = !DILocalVariable(name: "key", scope: !12750, file: !6193, line: 44, type: !32)
!12753 = !DILocalVariable(name: "tmp", scope: !12750, file: !6193, line: 53, type: !32)
!12754 = distinct !DILocation(line: 31, column: 8, scope: !12744)
!12755 = !{i64 2279870}
!12756 = !DILocation(line: 0, scope: !12750, inlinedAt: !12754)
!12757 = !DILocation(line: 32, column: 2, scope: !12744)
!12758 = !DILocation(line: 32, column: 2, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !12745, line: 32, column: 2)
!12760 = distinct !DILexicalBlock(scope: !12744, file: !12745, line: 32, column: 2)
!12761 = distinct !{!12761, !12762, !12763}
!12762 = !DILocation(line: 32, column: 2, scope: !12760)
!12763 = !DILocation(line: 34, column: 2, scope: !12760)
!12764 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12745, file: !12745, line: 39, type: !12765, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12767)
!12765 = !DISubroutineType(types: !12766)
!12766 = !{null, !32, !12562}
!12767 = !{!12768, !12769}
!12768 = !DILocalVariable(name: "reason", arg: 1, scope: !12764, file: !12745, line: 39, type: !32)
!12769 = !DILocalVariable(name: "esf", arg: 2, scope: !12764, file: !12745, line: 40, type: !12562)
!12770 = !DILocation(line: 0, scope: !12764)
!12771 = !DILocation(line: 46, column: 2, scope: !12764)
!12772 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12745, file: !12745, line: 81, type: !6204, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12773)
!12773 = !{!12774}
!12774 = !DILocalVariable(name: "reason", arg: 1, scope: !12772, file: !12745, line: 81, type: !32)
!12775 = !DILocation(line: 0, scope: !12772)
!12776 = !DILocation(line: 83, column: 2, scope: !12772)
!12777 = distinct !DISubprogram(name: "z_fatal_error", scope: !12745, file: !12745, line: 96, type: !12765, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12778)
!12778 = !{!12779, !12780, !12781, !12782}
!12779 = !DILocalVariable(name: "reason", arg: 1, scope: !12777, file: !12745, line: 96, type: !32)
!12780 = !DILocalVariable(name: "esf", arg: 2, scope: !12777, file: !12745, line: 96, type: !12562)
!12781 = !DILocalVariable(name: "key", scope: !12777, file: !12745, line: 102, type: !32)
!12782 = !DILocalVariable(name: "thread", scope: !12777, file: !12745, line: 103, type: !12606)
!12783 = !DILocation(line: 0, scope: !12777)
!12784 = !DILocation(line: 55, column: 2, scope: !12750, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 102, column: 21, scope: !12777)
!12786 = !DILocation(line: 0, scope: !12750, inlinedAt: !12785)
!12787 = !DILocation(line: 119, column: 11, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12777, file: !12745, line: 119, column: 6)
!12789 = !DILocation(line: 119, column: 20, scope: !12788)
!12790 = !DILocation(line: 131, column: 2, scope: !12777)
!12791 = !DILocation(line: 151, column: 7, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !12745, line: 146, column: 32)
!12793 = distinct !DILexicalBlock(scope: !12777, file: !12745, line: 146, column: 6)
!12794 = !DILocation(line: 151, column: 21, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12792, file: !12745, line: 151, column: 7)
!12796 = !DILocation(line: 104, column: 4, scope: !12777)
!12797 = !DILocalVariable(name: "key", arg: 1, scope: !12798, file: !6193, line: 84, type: !32)
!12798 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12799)
!12799 = !{!12797}
!12800 = !DILocation(line: 0, scope: !12798, inlinedAt: !12801)
!12801 = distinct !DILocation(line: 186, column: 2, scope: !12777)
!12802 = !DILocation(line: 95, column: 2, scope: !12798, inlinedAt: !12801)
!12803 = !{i64 2280687}
!12804 = !DILocation(line: 189, column: 3, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !12745, line: 188, column: 41)
!12806 = distinct !DILexicalBlock(scope: !12777, file: !12745, line: 188, column: 6)
!12807 = !DILocation(line: 191, column: 1, scope: !12777)
!12808 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !12809, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !162)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{!12811}
!12811 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !12606)
!12812 = !DILocation(line: 535, column: 9, scope: !12808)
!12813 = !DILocation(line: 535, column: 2, scope: !12808)
!12814 = distinct !DISubprogram(name: "k_thread_abort", scope: !3335, file: !3335, line: 188, type: !12815, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !12817)
!12815 = !DISubroutineType(types: !12816)
!12816 = !{null, !12811}
!12817 = !{!12818}
!12818 = !DILocalVariable(name: "thread", arg: 1, scope: !12814, file: !3335, line: 188, type: !12811)
!12819 = !DILocation(line: 0, scope: !12814)
!12820 = !DILocation(line: 197, column: 2, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12814, file: !3335, line: 197, column: 2)
!12822 = !{i64 2155061441}
!12823 = !DILocation(line: 198, column: 2, scope: !12814)
!12824 = !DILocation(line: 199, column: 1, scope: !12814)
!12825 = distinct !DISubprogram(name: "z_current_get", scope: !3335, file: !3335, line: 173, type: !12809, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2848, retainedNodes: !162)
!12826 = !DILocation(line: 180, column: 2, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12825, file: !3335, line: 180, column: 2)
!12828 = !{i64 2155061373}
!12829 = !DILocation(line: 181, column: 9, scope: !12825)
!12830 = !DILocation(line: 181, column: 2, scope: !12825)
!12831 = distinct !DISubprogram(name: "z_early_memset", scope: !1763, file: !1763, line: 108, type: !12832, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12834)
!12832 = !DISubroutineType(types: !12833)
!12833 = !{null, !102, !103, !120}
!12834 = !{!12835, !12836, !12837}
!12835 = !DILocalVariable(name: "dst", arg: 1, scope: !12831, file: !1763, line: 108, type: !102)
!12836 = !DILocalVariable(name: "c", arg: 2, scope: !12831, file: !1763, line: 108, type: !103)
!12837 = !DILocalVariable(name: "n", arg: 3, scope: !12831, file: !1763, line: 108, type: !120)
!12838 = !DILocation(line: 0, scope: !12831)
!12839 = !DILocation(line: 110, column: 9, scope: !12831)
!12840 = !DILocation(line: 111, column: 1, scope: !12831)
!12841 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1763, file: !1763, line: 121, type: !12842, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12844)
!12842 = !DISubroutineType(types: !12843)
!12843 = !{null, !102, !13, !120}
!12844 = !{!12845, !12846, !12847}
!12845 = !DILocalVariable(name: "dst", arg: 1, scope: !12841, file: !1763, line: 121, type: !102)
!12846 = !DILocalVariable(name: "src", arg: 2, scope: !12841, file: !1763, line: 121, type: !13)
!12847 = !DILocalVariable(name: "n", arg: 3, scope: !12841, file: !1763, line: 121, type: !120)
!12848 = !DILocation(line: 0, scope: !12841)
!12849 = !DILocation(line: 123, column: 9, scope: !12841)
!12850 = !DILocation(line: 124, column: 1, scope: !12841)
!12851 = distinct !DISubprogram(name: "z_bss_zero", scope: !1763, file: !1763, line: 132, type: !2885, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !162)
!12852 = !DILocation(line: 143, column: 2, scope: !12851)
!12853 = !DILocation(line: 168, column: 1, scope: !12851)
!12854 = distinct !DISubprogram(name: "z_init_cpu", scope: !1763, file: !1763, line: 372, type: !8009, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12855)
!12855 = !{!12856}
!12856 = !DILocalVariable(name: "id", arg: 1, scope: !12854, file: !1763, line: 372, type: !103)
!12857 = !DILocation(line: 0, scope: !12854)
!12858 = !DILocation(line: 374, column: 2, scope: !12854)
!12859 = !DILocation(line: 375, column: 34, scope: !12854)
!12860 = !DILocation(line: 375, column: 19, scope: !12854)
!12861 = !DILocation(line: 375, column: 31, scope: !12854)
!12862 = !DILocation(line: 376, column: 24, scope: !12854)
!12863 = !DILocation(line: 376, column: 19, scope: !12854)
!12864 = !DILocation(line: 376, column: 22, scope: !12854)
!12865 = !DILocation(line: 378, column: 26, scope: !12854)
!12866 = !DILocation(line: 378, column: 4, scope: !12854)
!12867 = !DILocation(line: 378, column: 50, scope: !12854)
!12868 = !DILocation(line: 377, column: 19, scope: !12854)
!12869 = !DILocation(line: 377, column: 29, scope: !12854)
!12870 = !DILocation(line: 384, column: 1, scope: !12854)
!12871 = distinct !DISubprogram(name: "init_idle_thread", scope: !1763, file: !1763, line: 343, type: !8009, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12872)
!12872 = !{!12873, !12874, !12875, !12878}
!12873 = !DILocalVariable(name: "i", arg: 1, scope: !12871, file: !1763, line: 343, type: !103)
!12874 = !DILocalVariable(name: "thread", scope: !12871, file: !1763, line: 345, type: !1856)
!12875 = !DILocalVariable(name: "stack", scope: !12871, file: !1763, line: 346, type: !12876)
!12876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12877, size: 32)
!12877 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3214, line: 44, baseType: !1970)
!12878 = !DILocalVariable(name: "tname", scope: !12871, file: !1763, line: 358, type: !1040)
!12879 = !DILocation(line: 0, scope: !12871)
!12880 = !DILocation(line: 345, column: 29, scope: !12871)
!12881 = !DILocation(line: 346, column: 28, scope: !12871)
!12882 = !DILocation(line: 362, column: 37, scope: !12871)
!12883 = !DILocation(line: 362, column: 36, scope: !12871)
!12884 = !DILocation(line: 361, column: 2, scope: !12871)
!12885 = !DILocation(line: 365, column: 2, scope: !12871)
!12886 = !DILocation(line: 370, column: 1, scope: !12871)
!12887 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1971, file: !1971, line: 331, type: !12888, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12890)
!12888 = !DISubroutineType(types: !12889)
!12889 = !{!1040, !12876}
!12890 = !{!12891}
!12891 = !DILocalVariable(name: "sym", arg: 1, scope: !12887, file: !1971, line: 331, type: !12876)
!12892 = !DILocation(line: 0, scope: !12887)
!12893 = !DILocation(line: 333, column: 21, scope: !12887)
!12894 = !DILocation(line: 333, column: 2, scope: !12887)
!12895 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12896, file: !12896, line: 155, type: !12897, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12899)
!12896 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12897 = !DISubroutineType(types: !12898)
!12898 = !{null, !1856}
!12899 = !{!12900}
!12900 = !DILocalVariable(name: "thread", arg: 1, scope: !12895, file: !12896, line: 155, type: !1856)
!12901 = !DILocation(line: 0, scope: !12895)
!12902 = !DILocation(line: 157, column: 15, scope: !12895)
!12903 = !DILocation(line: 157, column: 28, scope: !12895)
!12904 = !DILocation(line: 158, column: 1, scope: !12895)
!12905 = distinct !DISubprogram(name: "z_cstart", scope: !1763, file: !1763, line: 501, type: !2885, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12906)
!12906 = !{!12907}
!12907 = !DILocalVariable(name: "dummy_thread", scope: !12905, file: !1763, line: 518, type: !1857)
!12908 = !DILocation(line: 507, column: 2, scope: !12905)
!12909 = !DILocation(line: 43, column: 14, scope: !12910, inlinedAt: !12914)
!12910 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12911, file: !12911, line: 40, type: !2885, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12912)
!12911 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12912 = !{!12913}
!12913 = !DILocalVariable(name: "msp", scope: !12910, file: !12911, line: 42, type: !137)
!12914 = distinct !DILocation(line: 44, column: 2, scope: !12915, inlinedAt: !12917)
!12915 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12916, file: !12916, line: 42, type: !2885, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !162)
!12916 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12917 = distinct !DILocation(line: 510, column: 2, scope: !12905)
!12918 = !DILocation(line: 43, column: 3, scope: !12910, inlinedAt: !12914)
!12919 = !DILocation(line: 43, column: 60, scope: !12910, inlinedAt: !12914)
!12920 = !DILocation(line: 0, scope: !12910, inlinedAt: !12914)
!12921 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12922, file: !6367, line: 1153, type: !137)
!12922 = distinct !DISubprogram(name: "__set_MSP", scope: !6367, file: !6367, line: 1153, type: !6456, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12923)
!12923 = !{!12921}
!12924 = !DILocation(line: 0, scope: !12922, inlinedAt: !12925)
!12925 = distinct !DILocation(line: 46, column: 2, scope: !12910, inlinedAt: !12914)
!12926 = !DILocation(line: 1155, column: 3, scope: !12922, inlinedAt: !12925)
!12927 = !{i64 3745809}
!12928 = !DILocation(line: 62, column: 11, scope: !12910, inlinedAt: !12914)
!12929 = !DILocation(line: 102, column: 2, scope: !12930, inlinedAt: !12931)
!12930 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7159, file: !7159, line: 97, type: !2885, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !162)
!12931 = distinct !DILocation(line: 45, column: 2, scope: !12915, inlinedAt: !12917)
!12932 = !DILocation(line: 108, column: 2, scope: !12930, inlinedAt: !12931)
!12933 = !DILocation(line: 112, column: 2, scope: !12930, inlinedAt: !12931)
!12934 = !DILocation(line: 113, column: 2, scope: !12930, inlinedAt: !12931)
!12935 = !DILocation(line: 114, column: 2, scope: !12930, inlinedAt: !12931)
!12936 = !DILocation(line: 116, column: 2, scope: !12930, inlinedAt: !12931)
!12937 = !DILocation(line: 123, column: 13, scope: !12930, inlinedAt: !12931)
!12938 = !DILocation(line: 46, column: 2, scope: !12915, inlinedAt: !12917)
!12939 = !DILocation(line: 47, column: 2, scope: !12915, inlinedAt: !12917)
!12940 = !DILocation(line: 174, column: 12, scope: !12941, inlinedAt: !12942)
!12941 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7159, file: !7159, line: 169, type: !2885, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !162)
!12942 = distinct !DILocation(line: 48, column: 2, scope: !12915, inlinedAt: !12917)
!12943 = !DILocation(line: 179, column: 12, scope: !12941, inlinedAt: !12942)
!12944 = !DILocation(line: 50, column: 2, scope: !12915, inlinedAt: !12917)
!12945 = !DILocation(line: 57, column: 2, scope: !12915, inlinedAt: !12917)
!12946 = !DILocation(line: 518, column: 2, scope: !12905)
!12947 = !DILocation(line: 518, column: 18, scope: !12905)
!12948 = !DILocation(line: 520, column: 2, scope: !12905)
!12949 = !DILocation(line: 523, column: 2, scope: !12905)
!12950 = !DILocation(line: 526, column: 2, scope: !12905)
!12951 = !DILocation(line: 527, column: 2, scope: !12905)
!12952 = !DILocation(line: 543, column: 24, scope: !12905)
!12953 = !DILocation(line: 543, column: 2, scope: !12905)
!12954 = !DILocation(line: 0, scope: !1990)
!12955 = !DILocation(line: 246, column: 15, scope: !2008)
!12956 = !DILocation(line: 246, column: 36, scope: !2007)
!12957 = !DILocation(line: 246, column: 2, scope: !2008)
!12958 = !DILocation(line: 247, column: 37, scope: !2006)
!12959 = !DILocation(line: 0, scope: !2006)
!12960 = !DILocation(line: 248, column: 19, scope: !2006)
!12961 = !DILocation(line: 248, column: 12, scope: !2006)
!12962 = !DILocation(line: 250, column: 11, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !2006, file: !1763, line: 250, column: 7)
!12964 = !DILocation(line: 250, column: 7, scope: !2006)
!12965 = !DILocation(line: 254, column: 11, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12967, file: !1763, line: 254, column: 8)
!12967 = distinct !DILexicalBlock(scope: !12963, file: !1763, line: 250, column: 20)
!12968 = !DILocation(line: 254, column: 8, scope: !12967)
!12969 = !DILocation(line: 255, column: 9, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12966, file: !1763, line: 254, column: 17)
!12971 = !DILocation(line: 258, column: 9, scope: !12970)
!12972 = !DILocation(line: 261, column: 28, scope: !12970)
!12973 = !DILocation(line: 261, column: 10, scope: !12970)
!12974 = !DILocation(line: 261, column: 17, scope: !12970)
!12975 = !DILocation(line: 261, column: 26, scope: !12970)
!12976 = !DILocation(line: 262, column: 4, scope: !12970)
!12977 = !DILocation(line: 263, column: 9, scope: !12967)
!12978 = !DILocation(line: 263, column: 16, scope: !12967)
!12979 = !DILocation(line: 263, column: 28, scope: !12967)
!12980 = !DILocation(line: 264, column: 3, scope: !12967)
!12981 = !DILocation(line: 246, column: 60, scope: !2007)
!12982 = distinct !{!12982, !12957, !12983}
!12983 = !DILocation(line: 265, column: 2, scope: !2008)
!12984 = !DILocation(line: 266, column: 1, scope: !1990)
!12985 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6401, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !12986)
!12986 = !{!12987, !12988}
!12987 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12985, file: !402, line: 1814, type: !667)
!12988 = !DILocalVariable(name: "priority", arg: 2, scope: !12985, file: !402, line: 1814, type: !137)
!12989 = !DILocation(line: 0, scope: !12985)
!12990 = !DILocation(line: 1822, column: 48, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !402, line: 1821, column: 3)
!12992 = distinct !DILexicalBlock(scope: !12985, file: !402, line: 1816, column: 7)
!12993 = !DILocation(line: 1822, column: 32, scope: !12991)
!12994 = !DILocation(line: 1822, column: 40, scope: !12991)
!12995 = !DILocation(line: 1822, column: 5, scope: !12991)
!12996 = !DILocation(line: 1822, column: 46, scope: !12991)
!12997 = !DILocation(line: 1824, column: 1, scope: !12985)
!12998 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12916, file: !12916, line: 32, type: !2885, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12999 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13000, file: !13000, line: 215, type: !12897, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !13001)
!13000 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13001 = !{!13002}
!13002 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12999, file: !13000, line: 215, type: !1856)
!13003 = !DILocation(line: 0, scope: !12999)
!13004 = !DILocation(line: 217, column: 21, scope: !12999)
!13005 = !DILocation(line: 217, column: 34, scope: !12999)
!13006 = !DILocation(line: 221, column: 21, scope: !12999)
!13007 = !DILocation(line: 221, column: 34, scope: !12999)
!13008 = !DILocation(line: 223, column: 27, scope: !12999)
!13009 = !DILocation(line: 223, column: 33, scope: !12999)
!13010 = !DILocation(line: 224, column: 27, scope: !12999)
!13011 = !DILocation(line: 224, column: 32, scope: !12999)
!13012 = !DILocation(line: 232, column: 16, scope: !12999)
!13013 = !DILocation(line: 232, column: 30, scope: !12999)
!13014 = !DILocation(line: 239, column: 24, scope: !12999)
!13015 = !DILocation(line: 240, column: 1, scope: !12999)
!13016 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1763, file: !1763, line: 399, type: !13017, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !13019)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{!1040}
!13019 = !{!13020}
!13020 = !DILocalVariable(name: "stack_ptr", scope: !13016, file: !1763, line: 401, type: !1040)
!13021 = !DILocation(line: 404, column: 2, scope: !13016)
!13022 = !DILocation(line: 416, column: 24, scope: !13016)
!13023 = !DILocation(line: 418, column: 14, scope: !13016)
!13024 = !DILocation(line: 0, scope: !13016)
!13025 = !DILocation(line: 423, column: 2, scope: !13016)
!13026 = !DILocation(line: 424, column: 2, scope: !13016)
!13027 = !DILocation(line: 426, column: 2, scope: !13016)
!13028 = !DILocation(line: 428, column: 2, scope: !13016)
!13029 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1763, file: !1763, line: 432, type: !13030, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !13032)
!13030 = !DISubroutineType(types: !13031)
!13031 = !{null, !1040}
!13032 = !{!13033}
!13033 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13029, file: !1763, line: 432, type: !1040)
!13034 = !DILocation(line: 0, scope: !13029)
!13035 = !DILocation(line: 435, column: 2, scope: !13029)
!13036 = !DILocation(line: 445, column: 2, scope: !13029)
!13037 = distinct !DISubprogram(name: "bg_thread_main", scope: !1763, file: !1763, line: 277, type: !3216, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !13038)
!13038 = !{!13039, !13040, !13041}
!13039 = !DILocalVariable(name: "unused1", arg: 1, scope: !13037, file: !1763, line: 277, type: !102)
!13040 = !DILocalVariable(name: "unused2", arg: 2, scope: !13037, file: !1763, line: 277, type: !102)
!13041 = !DILocalVariable(name: "unused3", arg: 3, scope: !13037, file: !1763, line: 277, type: !102)
!13042 = !DILocation(line: 0, scope: !13037)
!13043 = !DILocation(line: 291, column: 20, scope: !13037)
!13044 = !DILocation(line: 293, column: 2, scope: !13037)
!13045 = !DILocation(line: 297, column: 2, scope: !13037)
!13046 = !DILocation(line: 305, column: 2, scope: !13037)
!13047 = !DILocation(line: 307, column: 2, scope: !13037)
!13048 = !DILocation(line: 330, column: 8, scope: !13037)
!13049 = !DILocation(line: 333, column: 34, scope: !13037)
!13050 = !DILocation(line: 339, column: 1, scope: !13037)
!13051 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2019, file: !2019, line: 45, type: !13052, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13060)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{null, !13054, !102}
!13054 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !357, line: 103, baseType: !13055)
!13055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13056, size: 32)
!13056 = !DISubroutineType(types: !13057)
!13057 = !{null, !13058, !102}
!13058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13059, size: 32)
!13059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2024)
!13060 = !{!13061, !13062}
!13061 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13051, file: !2019, line: 45, type: !13054)
!13062 = !DILocalVariable(name: "user_data", arg: 2, scope: !13051, file: !2019, line: 45, type: !102)
!13063 = !DILocation(line: 0, scope: !13051)
!13064 = !DILocation(line: 71, column: 1, scope: !13051)
!13065 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2019, file: !2019, line: 73, type: !13052, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13066)
!13066 = !{!13067, !13068}
!13067 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13065, file: !2019, line: 73, type: !13054)
!13068 = !DILocalVariable(name: "user_data", arg: 2, scope: !13065, file: !2019, line: 73, type: !102)
!13069 = !DILocation(line: 0, scope: !13065)
!13070 = !DILocation(line: 95, column: 1, scope: !13065)
!13071 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2019, file: !2019, line: 97, type: !7160, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !162)
!13072 = !DILocation(line: 1031, column: 3, scope: !13073, inlinedAt: !13076)
!13073 = distinct !DISubprogram(name: "__get_IPSR", scope: !6367, file: !6367, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13074)
!13074 = !{!13075}
!13075 = !DILocalVariable(name: "result", scope: !13073, file: !6367, line: 1029, type: !137)
!13076 = distinct !DILocation(line: 48, column: 10, scope: !13077, inlinedAt: !13078)
!13077 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7159, file: !7159, line: 46, type: !7160, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !162)
!13078 = distinct !DILocation(line: 99, column: 9, scope: !13071)
!13079 = !{i64 3751460}
!13080 = !DILocation(line: 0, scope: !13073, inlinedAt: !13076)
!13081 = !DILocation(line: 48, column: 9, scope: !13077, inlinedAt: !13078)
!13082 = !DILocation(line: 99, column: 2, scope: !13071)
!13083 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2019, file: !2019, line: 106, type: !2885, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !162)
!13084 = !DILocation(line: 108, column: 2, scope: !13083)
!13085 = !DILocation(line: 108, column: 17, scope: !13083)
!13086 = !DILocation(line: 108, column: 30, scope: !13083)
!13087 = !DILocation(line: 109, column: 1, scope: !13083)
!13088 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2019, file: !2019, line: 116, type: !2885, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !162)
!13089 = !DILocation(line: 118, column: 2, scope: !13088)
!13090 = !DILocation(line: 118, column: 17, scope: !13088)
!13091 = !DILocation(line: 118, column: 30, scope: !13088)
!13092 = !DILocation(line: 119, column: 1, scope: !13088)
!13093 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2019, file: !2019, line: 126, type: !7160, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !162)
!13094 = !DILocation(line: 128, column: 10, scope: !13093)
!13095 = !DILocation(line: 128, column: 25, scope: !13093)
!13096 = !DILocation(line: 128, column: 38, scope: !13093)
!13097 = !DILocation(line: 128, column: 53, scope: !13093)
!13098 = !DILocation(line: 128, column: 2, scope: !13093)
!13099 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2019, file: !2019, line: 187, type: !13100, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13102)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{!103, !2023, !199}
!13102 = !{!13103, !13104}
!13103 = !DILocalVariable(name: "thread", arg: 1, scope: !13099, file: !2019, line: 187, type: !2023)
!13104 = !DILocalVariable(name: "value", arg: 2, scope: !13099, file: !2019, line: 187, type: !199)
!13105 = !DILocation(line: 0, scope: !13099)
!13106 = !DILocation(line: 206, column: 2, scope: !13099)
!13107 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2019, file: !2019, line: 238, type: !13108, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13110)
!13108 = !DISubroutineType(types: !13109)
!13109 = !{!199, !2023}
!13110 = !{!13111}
!13111 = !DILocalVariable(name: "thread", arg: 1, scope: !13107, file: !2019, line: 238, type: !2023)
!13112 = !DILocation(line: 0, scope: !13107)
!13113 = !DILocation(line: 244, column: 2, scope: !13107)
!13114 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2019, file: !2019, line: 248, type: !13115, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13117)
!13115 = !DISubroutineType(types: !13116)
!13116 = !{!103, !2022, !1040, !120}
!13117 = !{!13118, !13119, !13120}
!13118 = !DILocalVariable(name: "thread", arg: 1, scope: !13114, file: !2019, line: 248, type: !2022)
!13119 = !DILocalVariable(name: "buf", arg: 2, scope: !13114, file: !2019, line: 248, type: !1040)
!13120 = !DILocalVariable(name: "size", arg: 3, scope: !13114, file: !2019, line: 248, type: !120)
!13121 = !DILocation(line: 0, scope: !13114)
!13122 = !DILocation(line: 257, column: 2, scope: !13114)
!13123 = !DILocation(line: 0, scope: !2018)
!13124 = !DILocation(line: 281, column: 11, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !2018, file: !2019, line: 281, column: 6)
!13126 = !DILocation(line: 281, column: 20, scope: !13125)
!13127 = !DILocation(line: 275, column: 45, scope: !2018)
!13128 = !DILocation(line: 285, column: 10, scope: !2018)
!13129 = !DILocation(line: 0, scope: !2139)
!13130 = !DILocation(line: 293, column: 39, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !2139, file: !2019, line: 293, column: 2)
!13132 = !DILocation(line: 293, column: 2, scope: !2139)
!13133 = !DILocation(line: 273, column: 14, scope: !2018)
!13134 = !DILocation(line: 309, column: 2, scope: !2018)
!13135 = !DILocation(line: 309, column: 11, scope: !2018)
!13136 = !DILocation(line: 311, column: 2, scope: !2018)
!13137 = !DILocation(line: 293, column: 26, scope: !13131)
!13138 = !DILocation(line: 294, column: 9, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13131, file: !2019, line: 293, column: 54)
!13140 = !DILocation(line: 295, column: 21, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13139, file: !2019, line: 295, column: 7)
!13142 = !DILocation(line: 295, column: 28, scope: !13141)
!13143 = !DILocation(line: 295, column: 7, scope: !13139)
!13144 = !DILocation(line: 299, column: 25, scope: !13139)
!13145 = !DILocation(line: 299, column: 41, scope: !13139)
!13146 = !DILocation(line: 300, column: 7, scope: !13139)
!13147 = !DILocation(line: 300, column: 26, scope: !13139)
!13148 = !DILocation(line: 299, column: 10, scope: !13139)
!13149 = !DILocation(line: 299, column: 7, scope: !13139)
!13150 = !DILocation(line: 302, column: 16, scope: !13139)
!13151 = !DILocation(line: 304, column: 20, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13139, file: !2019, line: 304, column: 7)
!13153 = !DILocation(line: 304, column: 7, scope: !13139)
!13154 = !DILocation(line: 305, column: 26, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13152, file: !2019, line: 304, column: 26)
!13156 = !DILocation(line: 305, column: 42, scope: !13155)
!13157 = !DILocation(line: 305, column: 11, scope: !13155)
!13158 = !DILocation(line: 305, column: 8, scope: !13155)
!13159 = !DILocation(line: 306, column: 3, scope: !13155)
!13160 = !DILocation(line: 293, column: 50, scope: !13131)
!13161 = !DILocation(line: 312, column: 1, scope: !2018)
!13162 = distinct !DISubprogram(name: "copy_bytes", scope: !2019, file: !2019, line: 261, type: !13163, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13165)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{!120, !1040, !120, !199, !120}
!13165 = !{!13166, !13167, !13168, !13169, !13170}
!13166 = !DILocalVariable(name: "dest", arg: 1, scope: !13162, file: !2019, line: 261, type: !1040)
!13167 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13162, file: !2019, line: 261, type: !120)
!13168 = !DILocalVariable(name: "src", arg: 3, scope: !13162, file: !2019, line: 261, type: !199)
!13169 = !DILocalVariable(name: "src_size", arg: 4, scope: !13162, file: !2019, line: 261, type: !120)
!13170 = !DILocalVariable(name: "bytes_to_copy", scope: !13162, file: !2019, line: 263, type: !120)
!13171 = !DILocation(line: 0, scope: !13162)
!13172 = !DILocation(line: 265, column: 18, scope: !13162)
!13173 = !DILocation(line: 266, column: 2, scope: !13162)
!13174 = !DILocation(line: 268, column: 2, scope: !13162)
!13175 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2019, file: !2019, line: 383, type: !13176, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13178)
!13176 = !DISubroutineType(types: !13177)
!13177 = !{null, !2023}
!13178 = !{!13179}
!13179 = !DILocalVariable(name: "thread", arg: 1, scope: !13175, file: !2019, line: 383, type: !2023)
!13180 = !DILocation(line: 0, scope: !13175)
!13181 = !DILocation(line: 387, column: 2, scope: !13175)
!13182 = !DILocation(line: 388, column: 1, scope: !13175)
!13183 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2019, file: !2019, line: 528, type: !13184, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13191)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{!1040, !2023, !13186, !120, !3213, !102, !102, !102, !103, !137, !199}
!13186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13187, size: 32)
!13187 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3214, line: 44, baseType: !13188)
!13188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1971, line: 47, size: 8, elements: !13189)
!13189 = !{!13190}
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13188, file: !1971, line: 48, baseType: !109, size: 8)
!13191 = !{!13192, !13193, !13194, !13195, !13196, !13197, !13198, !13199, !13200, !13201, !13202}
!13192 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13183, file: !2019, line: 528, type: !2023)
!13193 = !DILocalVariable(name: "stack", arg: 2, scope: !13183, file: !2019, line: 529, type: !13186)
!13194 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13183, file: !2019, line: 529, type: !120)
!13195 = !DILocalVariable(name: "entry", arg: 4, scope: !13183, file: !2019, line: 530, type: !3213)
!13196 = !DILocalVariable(name: "p1", arg: 5, scope: !13183, file: !2019, line: 531, type: !102)
!13197 = !DILocalVariable(name: "p2", arg: 6, scope: !13183, file: !2019, line: 531, type: !102)
!13198 = !DILocalVariable(name: "p3", arg: 7, scope: !13183, file: !2019, line: 531, type: !102)
!13199 = !DILocalVariable(name: "prio", arg: 8, scope: !13183, file: !2019, line: 532, type: !103)
!13200 = !DILocalVariable(name: "options", arg: 9, scope: !13183, file: !2019, line: 532, type: !137)
!13201 = !DILocalVariable(name: "name", arg: 10, scope: !13183, file: !2019, line: 532, type: !199)
!13202 = !DILocalVariable(name: "stack_ptr", scope: !13183, file: !2019, line: 534, type: !1040)
!13203 = !DILocation(line: 0, scope: !13183)
!13204 = !DILocation(line: 550, column: 28, scope: !13183)
!13205 = !DILocation(line: 550, column: 2, scope: !13183)
!13206 = !DILocation(line: 553, column: 34, scope: !13183)
!13207 = !DILocation(line: 553, column: 2, scope: !13183)
!13208 = !DILocation(line: 554, column: 14, scope: !13183)
!13209 = !DILocation(line: 564, column: 2, scope: !13183)
!13210 = !DILocation(line: 567, column: 14, scope: !13183)
!13211 = !DILocation(line: 567, column: 24, scope: !13183)
!13212 = !DILocation(line: 612, column: 7, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13183, file: !2019, line: 612, column: 6)
!13214 = !DILocation(line: 612, column: 6, scope: !13183)
!13215 = !DILocation(line: 627, column: 40, scope: !13183)
!13216 = !DILocation(line: 637, column: 2, scope: !13183)
!13217 = !DILocation(line: 613, column: 15, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13213, file: !2019, line: 612, column: 17)
!13219 = !DILocation(line: 613, column: 29, scope: !13218)
!13220 = !DILocation(line: 638, column: 1, scope: !13183)
!13221 = distinct !DISubprogram(name: "z_waitq_init", scope: !13222, file: !13222, line: 47, type: !13223, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13225)
!13222 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13223 = !DISubroutineType(types: !13224)
!13224 = !{null, !2054}
!13225 = !{!13226}
!13226 = !DILocalVariable(name: "w", arg: 1, scope: !13221, file: !13222, line: 47, type: !2054)
!13227 = !DILocation(line: 0, scope: !13221)
!13228 = !DILocation(line: 49, column: 21, scope: !13221)
!13229 = !DILocation(line: 49, column: 2, scope: !13221)
!13230 = !DILocation(line: 50, column: 1, scope: !13221)
!13231 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2019, file: !2019, line: 791, type: !13232, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13235)
!13232 = !DISubroutineType(types: !13233)
!13233 = !{null, !13234, !103, !137, !32}
!13234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!13235 = !{!13236, !13237, !13238, !13239}
!13236 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13231, file: !2019, line: 791, type: !13234)
!13237 = !DILocalVariable(name: "priority", arg: 2, scope: !13231, file: !2019, line: 791, type: !103)
!13238 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13231, file: !2019, line: 792, type: !137)
!13239 = !DILocalVariable(name: "options", arg: 4, scope: !13231, file: !2019, line: 792, type: !32)
!13240 = !DILocation(line: 0, scope: !13231)
!13241 = !DILocation(line: 795, column: 15, scope: !13231)
!13242 = !DILocation(line: 795, column: 25, scope: !13231)
!13243 = !DILocation(line: 796, column: 30, scope: !13231)
!13244 = !DILocation(line: 796, column: 15, scope: !13231)
!13245 = !DILocation(line: 796, column: 28, scope: !13231)
!13246 = !DILocation(line: 797, column: 30, scope: !13231)
!13247 = !DILocation(line: 797, column: 15, scope: !13231)
!13248 = !DILocation(line: 797, column: 28, scope: !13231)
!13249 = !DILocation(line: 799, column: 22, scope: !13231)
!13250 = !DILocation(line: 799, column: 15, scope: !13231)
!13251 = !DILocation(line: 799, column: 20, scope: !13231)
!13252 = !DILocation(line: 801, column: 15, scope: !13231)
!13253 = !DILocation(line: 801, column: 28, scope: !13231)
!13254 = !DILocation(line: 814, column: 2, scope: !13231)
!13255 = !DILocation(line: 815, column: 1, scope: !13231)
!13256 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2019, file: !2019, line: 449, type: !13257, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13259)
!13257 = !DISubroutineType(types: !13258)
!13258 = !{!1040, !2023, !13186, !120}
!13259 = !{!13260, !13261, !13262, !13263, !13264, !13265, !13266, !13267}
!13260 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13256, file: !2019, line: 449, type: !2023)
!13261 = !DILocalVariable(name: "stack", arg: 2, scope: !13256, file: !2019, line: 450, type: !13186)
!13262 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13256, file: !2019, line: 450, type: !120)
!13263 = !DILocalVariable(name: "stack_obj_size", scope: !13256, file: !2019, line: 452, type: !120)
!13264 = !DILocalVariable(name: "stack_buf_size", scope: !13256, file: !2019, line: 452, type: !120)
!13265 = !DILocalVariable(name: "stack_ptr", scope: !13256, file: !2019, line: 453, type: !1040)
!13266 = !DILocalVariable(name: "stack_buf_start", scope: !13256, file: !2019, line: 453, type: !1040)
!13267 = !DILocalVariable(name: "delta", scope: !13256, file: !2019, line: 454, type: !120)
!13268 = !DILocation(line: 0, scope: !13256)
!13269 = !DILocation(line: 465, column: 20, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13256, file: !2019, line: 463, column: 2)
!13271 = !DILocation(line: 466, column: 21, scope: !13270)
!13272 = !DILocation(line: 473, column: 28, scope: !13256)
!13273 = !DILocation(line: 514, column: 33, scope: !13256)
!13274 = !DILocation(line: 514, column: 25, scope: !13256)
!13275 = !DILocation(line: 514, column: 31, scope: !13256)
!13276 = !DILocation(line: 515, column: 25, scope: !13256)
!13277 = !DILocation(line: 515, column: 30, scope: !13256)
!13278 = !DILocation(line: 516, column: 25, scope: !13256)
!13279 = !DILocation(line: 516, column: 31, scope: !13256)
!13280 = !DILocation(line: 520, column: 2, scope: !13256)
!13281 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1971, file: !1971, line: 331, type: !13282, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13284)
!13282 = !DISubroutineType(types: !13283)
!13283 = !{!1040, !13186}
!13284 = !{!13285}
!13285 = !DILocalVariable(name: "sym", arg: 1, scope: !13281, file: !1971, line: 331, type: !13186)
!13286 = !DILocation(line: 0, scope: !13281)
!13287 = !DILocation(line: 333, column: 21, scope: !13281)
!13288 = !DILocation(line: 333, column: 2, scope: !13281)
!13289 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13290, file: !13290, line: 40, type: !13291, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13293)
!13290 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13291 = !DISubroutineType(types: !13292)
!13292 = !{null, !13234}
!13293 = !{!13294}
!13294 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13289, file: !13290, line: 40, type: !13234)
!13295 = !DILocation(line: 0, scope: !13289)
!13296 = !DILocation(line: 42, column: 31, scope: !13289)
!13297 = !DILocation(line: 42, column: 2, scope: !13289)
!13298 = !DILocation(line: 43, column: 1, scope: !13289)
!13299 = distinct !DISubprogram(name: "z_init_timeout", scope: !13290, file: !13290, line: 25, type: !2080, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13300)
!13300 = !{!13301}
!13301 = !DILocalVariable(name: "to", arg: 1, scope: !13299, file: !13290, line: 25, type: !2082)
!13302 = !DILocation(line: 0, scope: !13299)
!13303 = !DILocation(line: 27, column: 22, scope: !13299)
!13304 = !DILocation(line: 27, column: 2, scope: !13299)
!13305 = !DILocation(line: 28, column: 1, scope: !13299)
!13306 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !13307, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13309)
!13307 = !DISubroutineType(types: !13308)
!13308 = !{null, !2126}
!13309 = !{!13310}
!13310 = !DILocalVariable(name: "node", arg: 1, scope: !13306, file: !273, line: 211, type: !2126)
!13311 = !DILocation(line: 0, scope: !13306)
!13312 = !DILocation(line: 213, column: 8, scope: !13306)
!13313 = !DILocation(line: 213, column: 13, scope: !13306)
!13314 = !DILocation(line: 214, column: 8, scope: !13306)
!13315 = !DILocation(line: 214, column: 13, scope: !13306)
!13316 = !DILocation(line: 215, column: 1, scope: !13306)
!13317 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !13318, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13321)
!13318 = !DISubroutineType(types: !13319)
!13319 = !{null, !13320}
!13320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!13321 = !{!13322}
!13322 = !DILocalVariable(name: "list", arg: 1, scope: !13317, file: !273, line: 197, type: !13320)
!13323 = !DILocation(line: 0, scope: !13317)
!13324 = !DILocation(line: 199, column: 8, scope: !13317)
!13325 = !DILocation(line: 199, column: 13, scope: !13317)
!13326 = !DILocation(line: 200, column: 8, scope: !13317)
!13327 = !DILocation(line: 200, column: 13, scope: !13317)
!13328 = !DILocation(line: 201, column: 1, scope: !13317)
!13329 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2019, file: !2019, line: 641, type: !13330, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13336)
!13330 = !DISubroutineType(types: !13331)
!13331 = !{!2022, !2023, !13186, !120, !3213, !102, !102, !102, !103, !137, !13332}
!13332 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1498, line: 67, baseType: !13333)
!13333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1498, line: 65, size: 64, elements: !13334)
!13334 = !{!13335}
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13333, file: !1498, line: 66, baseType: !1497, size: 64)
!13336 = !{!13337, !13338, !13339, !13340, !13341, !13342, !13343, !13344, !13345, !13346}
!13337 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13329, file: !2019, line: 641, type: !2023)
!13338 = !DILocalVariable(name: "stack", arg: 2, scope: !13329, file: !2019, line: 642, type: !13186)
!13339 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13329, file: !2019, line: 643, type: !120)
!13340 = !DILocalVariable(name: "entry", arg: 4, scope: !13329, file: !2019, line: 643, type: !3213)
!13341 = !DILocalVariable(name: "p1", arg: 5, scope: !13329, file: !2019, line: 644, type: !102)
!13342 = !DILocalVariable(name: "p2", arg: 6, scope: !13329, file: !2019, line: 644, type: !102)
!13343 = !DILocalVariable(name: "p3", arg: 7, scope: !13329, file: !2019, line: 644, type: !102)
!13344 = !DILocalVariable(name: "prio", arg: 8, scope: !13329, file: !2019, line: 645, type: !103)
!13345 = !DILocalVariable(name: "options", arg: 9, scope: !13329, file: !2019, line: 645, type: !137)
!13346 = !DILocalVariable(name: "delay", arg: 10, scope: !13329, file: !2019, line: 645, type: !13332)
!13347 = !DILocation(line: 0, scope: !13329)
!13348 = !DILocation(line: 649, column: 2, scope: !13329)
!13349 = !DILocation(line: 652, column: 7, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13329, file: !2019, line: 652, column: 6)
!13351 = !DILocation(line: 652, column: 6, scope: !13329)
!13352 = !DILocation(line: 653, column: 3, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13350, file: !2019, line: 652, column: 39)
!13354 = !DILocation(line: 654, column: 2, scope: !13353)
!13355 = !DILocation(line: 656, column: 2, scope: !13329)
!13356 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2019, file: !2019, line: 401, type: !13357, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13359)
!13357 = !DISubroutineType(types: !13358)
!13358 = !{null, !2023, !13332}
!13359 = !{!13360, !13361}
!13360 = !DILocalVariable(name: "thread", arg: 1, scope: !13356, file: !2019, line: 401, type: !2023)
!13361 = !DILocalVariable(name: "delay", arg: 2, scope: !13356, file: !2019, line: 401, type: !13332)
!13362 = !DILocation(line: 0, scope: !13356)
!13363 = !DILocation(line: 404, column: 6, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13356, file: !2019, line: 404, column: 6)
!13365 = !DILocation(line: 404, column: 6, scope: !13356)
!13366 = !DILocation(line: 405, column: 3, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13364, file: !2019, line: 404, column: 38)
!13368 = !DILocation(line: 406, column: 2, scope: !13367)
!13369 = !DILocation(line: 407, column: 3, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13364, file: !2019, line: 406, column: 9)
!13371 = !DILocation(line: 413, column: 1, scope: !13356)
!13372 = distinct !DISubprogram(name: "k_thread_start", scope: !3335, file: !3335, line: 205, type: !13373, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13375)
!13373 = !DISubroutineType(types: !13374)
!13374 = !{null, !2022}
!13375 = !{!13376}
!13376 = !DILocalVariable(name: "thread", arg: 1, scope: !13372, file: !3335, line: 205, type: !2022)
!13377 = !DILocation(line: 0, scope: !13372)
!13378 = !DILocation(line: 214, column: 2, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13372, file: !3335, line: 214, column: 2)
!13380 = !{i64 2155086665}
!13381 = !DILocation(line: 215, column: 2, scope: !13372)
!13382 = !DILocation(line: 216, column: 1, scope: !13372)
!13383 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13290, file: !13290, line: 47, type: !13357, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13384)
!13384 = !{!13385, !13386}
!13385 = !DILocalVariable(name: "thread", arg: 1, scope: !13383, file: !13290, line: 47, type: !2023)
!13386 = !DILocalVariable(name: "ticks", arg: 2, scope: !13383, file: !13290, line: 47, type: !13332)
!13387 = !DILocation(line: 0, scope: !13383)
!13388 = !DILocation(line: 49, column: 30, scope: !13383)
!13389 = !DILocation(line: 49, column: 2, scope: !13383)
!13390 = !DILocation(line: 50, column: 1, scope: !13383)
!13391 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2019, file: !2019, line: 748, type: !2885, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13392)
!13392 = !{!13393, !13411}
!13393 = !DILocalVariable(name: "thread_data", scope: !13394, file: !2019, line: 750, type: !13395)
!13394 = distinct !DILexicalBlock(scope: !13391, file: !2019, line: 750, column: 2)
!13395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13396, size: 32)
!13396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !357, line: 620, size: 384, elements: !13397)
!13397 = !{!13398, !13399, !13400, !13401, !13402, !13403, !13404, !13405, !13406, !13407, !13408, !13410}
!13398 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13396, file: !357, line: 621, baseType: !2023, size: 32)
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13396, file: !357, line: 622, baseType: !13186, size: 32, offset: 32)
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13396, file: !357, line: 623, baseType: !32, size: 32, offset: 64)
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13396, file: !357, line: 624, baseType: !3213, size: 32, offset: 96)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13396, file: !357, line: 625, baseType: !102, size: 32, offset: 128)
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13396, file: !357, line: 626, baseType: !102, size: 32, offset: 160)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13396, file: !357, line: 627, baseType: !102, size: 32, offset: 192)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13396, file: !357, line: 628, baseType: !103, size: 32, offset: 224)
!13406 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13396, file: !357, line: 629, baseType: !137, size: 32, offset: 256)
!13407 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13396, file: !357, line: 630, baseType: !641, size: 32, offset: 288)
!13408 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13396, file: !357, line: 631, baseType: !13409, size: 32, offset: 320)
!13409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13396, file: !357, line: 632, baseType: !199, size: 32, offset: 352)
!13411 = !DILocalVariable(name: "thread_data", scope: !13412, file: !2019, line: 781, type: !13395)
!13412 = distinct !DILexicalBlock(scope: !13391, file: !2019, line: 781, column: 2)
!13413 = !DILocation(line: 0, scope: !13394)
!13414 = !DILocation(line: 750, column: 2, scope: !13394)
!13415 = !DILocation(line: 780, column: 2, scope: !13391)
!13416 = !DILocation(line: 0, scope: !13412)
!13417 = !DILocation(line: 781, column: 2, scope: !13412)
!13418 = !DILocation(line: 752, column: 17, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !2019, line: 750, column: 38)
!13420 = distinct !DILexicalBlock(scope: !13394, file: !2019, line: 750, column: 2)
!13421 = !DILocation(line: 753, column: 17, scope: !13419)
!13422 = !DILocation(line: 754, column: 17, scope: !13419)
!13423 = !DILocation(line: 755, column: 17, scope: !13419)
!13424 = !DILocation(line: 756, column: 17, scope: !13419)
!13425 = !DILocation(line: 757, column: 17, scope: !13419)
!13426 = !DILocation(line: 758, column: 17, scope: !13419)
!13427 = !DILocation(line: 759, column: 17, scope: !13419)
!13428 = !DILocation(line: 760, column: 17, scope: !13419)
!13429 = !DILocation(line: 751, column: 3, scope: !13419)
!13430 = !DILocation(line: 763, column: 16, scope: !13419)
!13431 = !DILocation(line: 763, column: 29, scope: !13419)
!13432 = !DILocation(line: 763, column: 39, scope: !13419)
!13433 = !DILocation(line: 750, column: 2, scope: !13420)
!13434 = !DILocation(line: 750, column: 2, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13420, file: !2019, line: 750, column: 2)
!13436 = distinct !{!13436, !13414, !13437}
!13437 = !DILocation(line: 764, column: 2, scope: !13394)
!13438 = !DILocation(line: 787, column: 2, scope: !13391)
!13439 = !DILocation(line: 788, column: 1, scope: !13391)
!13440 = !DILocation(line: 782, column: 20, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !2019, line: 782, column: 7)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !2019, line: 781, column: 38)
!13443 = distinct !DILexicalBlock(scope: !13412, file: !2019, line: 781, column: 2)
!13444 = !DILocation(line: 782, column: 31, scope: !13441)
!13445 = !DILocation(line: 782, column: 7, scope: !13442)
!13446 = !DILocation(line: 783, column: 37, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13441, file: !2019, line: 782, column: 51)
!13448 = !DILocation(line: 784, column: 10, scope: !13447)
!13449 = !DILocation(line: 783, column: 4, scope: !13447)
!13450 = !DILocation(line: 785, column: 3, scope: !13447)
!13451 = !DILocation(line: 781, column: 2, scope: !13443)
!13452 = !DILocation(line: 781, column: 2, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13443, file: !2019, line: 781, column: 2)
!13454 = distinct !{!13454, !13417, !13455}
!13455 = !DILocation(line: 786, column: 2, scope: !13412)
!13456 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13457, file: !13457, line: 403, type: !13458, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13460)
!13457 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13458 = !DISubroutineType(types: !13459)
!13459 = !{!163, !163}
!13460 = !{!13461}
!13461 = !DILocalVariable(name: "t", arg: 1, scope: !13456, file: !13457, line: 403, type: !163)
!13462 = !DILocation(line: 0, scope: !13456)
!13463 = !DILocalVariable(name: "t", arg: 1, scope: !13464, file: !13457, line: 102, type: !163)
!13464 = distinct !DISubprogram(name: "z_tmcvt", scope: !13457, file: !13457, line: 102, type: !13465, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13467)
!13465 = !DISubroutineType(types: !13466)
!13466 = !{!163, !163, !137, !137, !211, !211, !211, !211}
!13467 = !{!13463, !13468, !13469, !13470, !13471, !13472, !13473, !13474, !13475, !13476, !13477}
!13468 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13464, file: !13457, line: 102, type: !137)
!13469 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13464, file: !13457, line: 103, type: !137)
!13470 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13464, file: !13457, line: 103, type: !211)
!13471 = !DILocalVariable(name: "result32", arg: 5, scope: !13464, file: !13457, line: 104, type: !211)
!13472 = !DILocalVariable(name: "round_up", arg: 6, scope: !13464, file: !13457, line: 104, type: !211)
!13473 = !DILocalVariable(name: "round_off", arg: 7, scope: !13464, file: !13457, line: 105, type: !211)
!13474 = !DILocalVariable(name: "mul_ratio", scope: !13464, file: !13457, line: 107, type: !211)
!13475 = !DILocalVariable(name: "div_ratio", scope: !13464, file: !13457, line: 109, type: !211)
!13476 = !DILocalVariable(name: "off", scope: !13464, file: !13457, line: 116, type: !163)
!13477 = !DILocalVariable(name: "rdivisor", scope: !13478, file: !13457, line: 119, type: !137)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !13457, line: 118, column: 18)
!13479 = distinct !DILexicalBlock(scope: !13464, file: !13457, line: 118, column: 6)
!13480 = !DILocation(line: 0, scope: !13464, inlinedAt: !13481)
!13481 = distinct !DILocation(line: 406, column: 9, scope: !13456)
!13482 = !DILocation(line: 145, column: 13, scope: !13483, inlinedAt: !13481)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !13457, line: 144, column: 10)
!13484 = distinct !DILexicalBlock(scope: !13485, file: !13457, line: 142, column: 7)
!13485 = distinct !DILexicalBlock(scope: !13486, file: !13457, line: 141, column: 24)
!13486 = distinct !DILexicalBlock(scope: !13487, file: !13457, line: 141, column: 13)
!13487 = distinct !DILexicalBlock(scope: !13464, file: !13457, line: 134, column: 6)
!13488 = !DILocation(line: 406, column: 2, scope: !13456)
!13489 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2019, file: !2019, line: 817, type: !3211, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13490)
!13490 = !{!13491, !13492, !13493, !13494}
!13491 = !DILocalVariable(name: "entry", arg: 1, scope: !13489, file: !2019, line: 817, type: !3213)
!13492 = !DILocalVariable(name: "p1", arg: 2, scope: !13489, file: !2019, line: 818, type: !102)
!13493 = !DILocalVariable(name: "p2", arg: 3, scope: !13489, file: !2019, line: 818, type: !102)
!13494 = !DILocalVariable(name: "p3", arg: 4, scope: !13489, file: !2019, line: 818, type: !102)
!13495 = !DILocation(line: 0, scope: !13489)
!13496 = !DILocation(line: 822, column: 2, scope: !13489)
!13497 = !DILocation(line: 822, column: 17, scope: !13489)
!13498 = !DILocation(line: 822, column: 30, scope: !13489)
!13499 = !DILocation(line: 823, column: 2, scope: !13489)
!13500 = !DILocation(line: 845, column: 2, scope: !13489)
!13501 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2019, file: !2019, line: 888, type: !13502, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13504)
!13502 = !DISubroutineType(types: !13503)
!13503 = !{!103, !2023}
!13504 = !{!13505}
!13505 = !DILocalVariable(name: "thread", arg: 1, scope: !13501, file: !2019, line: 888, type: !2023)
!13506 = !DILocation(line: 0, scope: !13501)
!13507 = !DILocation(line: 893, column: 2, scope: !13501)
!13508 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2019, file: !2019, line: 897, type: !13509, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13511)
!13509 = !DISubroutineType(types: !13510)
!13510 = !{!103, !2023, !32}
!13511 = !{!13512, !13513}
!13512 = !DILocalVariable(name: "thread", arg: 1, scope: !13508, file: !2019, line: 897, type: !2023)
!13513 = !DILocalVariable(name: "options", arg: 2, scope: !13508, file: !2019, line: 897, type: !32)
!13514 = !DILocation(line: 0, scope: !13508)
!13515 = !DILocation(line: 902, column: 2, scope: !13508)
!13516 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2019, file: !2019, line: 1072, type: !13517, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13522)
!13517 = !DISubroutineType(types: !13518)
!13518 = !{!103, !2022, !13519}
!13519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13520, size: 32)
!13520 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !263, line: 234, baseType: !13521)
!13521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !263, line: 192, elements: !162)
!13522 = !{!13523, !13524}
!13523 = !DILocalVariable(name: "thread", arg: 1, scope: !13516, file: !2019, line: 1072, type: !2022)
!13524 = !DILocalVariable(name: "stats", arg: 2, scope: !13516, file: !2019, line: 1073, type: !13519)
!13525 = !DILocation(line: 0, scope: !13516)
!13526 = !DILocation(line: 1075, column: 14, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13516, file: !2019, line: 1075, column: 6)
!13528 = !DILocation(line: 1075, column: 23, scope: !13527)
!13529 = !DILocation(line: 1086, column: 1, scope: !13516)
!13530 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2019, file: !2019, line: 1088, type: !13531, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13533)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!103, !13519}
!13533 = !{!13534}
!13534 = !DILocalVariable(name: "stats", arg: 1, scope: !13530, file: !2019, line: 1088, type: !13519)
!13535 = !DILocation(line: 0, scope: !13530)
!13536 = !DILocation(line: 1094, column: 12, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13530, file: !2019, line: 1094, column: 6)
!13538 = !DILocation(line: 1120, column: 1, scope: !13530)
!13539 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13540, file: !13540, line: 20, type: !2885, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !162)
!13540 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13541 = !DILocation(line: 30, column: 2, scope: !13539)
!13542 = !DILocation(line: 31, column: 1, scope: !13539)
!13543 = distinct !DISubprogram(name: "idle", scope: !13540, file: !13540, line: 33, type: !3216, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !13544)
!13544 = !{!13545, !13546, !13547}
!13545 = !DILocalVariable(name: "unused1", arg: 1, scope: !13543, file: !13540, line: 33, type: !102)
!13546 = !DILocalVariable(name: "unused2", arg: 2, scope: !13543, file: !13540, line: 33, type: !102)
!13547 = !DILocalVariable(name: "unused3", arg: 3, scope: !13543, file: !13540, line: 33, type: !102)
!13548 = !DILocation(line: 0, scope: !13543)
!13549 = !DILocation(line: 41, column: 2, scope: !13543)
!13550 = !DILocation(line: 55, column: 2, scope: !13551, inlinedAt: !13555)
!13551 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !13552)
!13552 = !{!13553, !13554}
!13553 = !DILocalVariable(name: "key", scope: !13551, file: !6193, line: 44, type: !32)
!13554 = !DILocalVariable(name: "tmp", scope: !13551, file: !6193, line: 53, type: !32)
!13555 = distinct !DILocation(line: 62, column: 10, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13543, file: !13540, line: 41, column: 15)
!13557 = !{i64 2278212}
!13558 = !DILocation(line: 0, scope: !13551, inlinedAt: !13555)
!13559 = !DILocation(line: 86, column: 3, scope: !13556)
!13560 = distinct !{!13560, !13549, !13561}
!13561 = !DILocation(line: 105, column: 2, scope: !13543)
!13562 = distinct !DISubprogram(name: "k_cpu_idle", scope: !357, file: !357, line: 5627, type: !2885, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !162)
!13563 = !DILocation(line: 5629, column: 2, scope: !13562)
!13564 = !DILocation(line: 5630, column: 1, scope: !13562)
!13565 = !DISubprogram(name: "arch_cpu_idle", scope: !3214, file: !3214, line: 167, type: !2885, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!13566 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2251, file: !2251, line: 93, type: !13567, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13569)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!641, !2146, !2146}
!13569 = !{!13570, !13571, !13572, !13573}
!13570 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13566, file: !2251, line: 93, type: !2146)
!13571 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13566, file: !2251, line: 94, type: !2146)
!13572 = !DILocalVariable(name: "b1", scope: !13566, file: !2251, line: 97, type: !641)
!13573 = !DILocalVariable(name: "b2", scope: !13566, file: !2251, line: 98, type: !641)
!13574 = !DILocation(line: 0, scope: !13566)
!13575 = !DILocation(line: 97, column: 30, scope: !13566)
!13576 = !DILocation(line: 98, column: 30, scope: !13566)
!13577 = !DILocation(line: 100, column: 9, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13566, file: !2251, line: 100, column: 6)
!13579 = !DILocation(line: 100, column: 6, scope: !13566)
!13580 = !DILocation(line: 125, column: 1, scope: !13566)
!13581 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2251, file: !2251, line: 428, type: !13582, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13584)
!13582 = !DISubroutineType(types: !13583)
!13583 = !{null, !2146}
!13584 = !{!13585}
!13585 = !DILocalVariable(name: "curr", arg: 1, scope: !13581, file: !2251, line: 428, type: !2146)
!13586 = !DILocation(line: 0, scope: !13581)
!13587 = !DILocation(line: 434, column: 6, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13581, file: !2251, line: 434, column: 6)
!13589 = !DILocation(line: 434, column: 23, scope: !13588)
!13590 = !DILocation(line: 434, column: 6, scope: !13581)
!13591 = !DILocation(line: 435, column: 50, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13588, file: !2251, line: 434, column: 29)
!13593 = !DILocation(line: 435, column: 48, scope: !13592)
!13594 = !DILocation(line: 435, column: 29, scope: !13592)
!13595 = !DILocation(line: 436, column: 24, scope: !13592)
!13596 = !DILocation(line: 436, column: 3, scope: !13592)
!13597 = !DILocation(line: 437, column: 2, scope: !13592)
!13598 = !DILocation(line: 438, column: 1, scope: !13581)
!13599 = distinct !DISubprogram(name: "slice_time", scope: !2251, file: !2251, line: 407, type: !13600, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13602)
!13600 = !DISubroutineType(types: !13601)
!13601 = !{!103, !2146}
!13602 = !{!13603, !13604}
!13603 = !DILocalVariable(name: "curr", arg: 1, scope: !13599, file: !2251, line: 407, type: !2146)
!13604 = !DILocalVariable(name: "ret", scope: !13599, file: !2251, line: 409, type: !103)
!13605 = !DILocation(line: 0, scope: !13599)
!13606 = !DILocation(line: 409, column: 12, scope: !13599)
!13607 = !DILocation(line: 416, column: 2, scope: !13599)
!13608 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2251, file: !2251, line: 440, type: !13609, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13611)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{null, !641, !103}
!13611 = !{!13612, !13613, !13614, !13620}
!13612 = !DILocalVariable(name: "slice", arg: 1, scope: !13608, file: !2251, line: 440, type: !641)
!13613 = !DILocalVariable(name: "prio", arg: 2, scope: !13608, file: !2251, line: 440, type: !103)
!13614 = !DILocalVariable(name: "__i", scope: !13615, file: !2251, line: 442, type: !13616)
!13615 = distinct !DILexicalBlock(scope: !13608, file: !2251, line: 442, column: 2)
!13616 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !13617)
!13617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !13618)
!13618 = !{!13619}
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13617, file: !368, line: 33, baseType: !103, size: 32)
!13620 = !DILocalVariable(name: "__key", scope: !13615, file: !2251, line: 442, type: !13616)
!13621 = !DILocation(line: 0, scope: !13608)
!13622 = !DILocation(line: 0, scope: !13615)
!13623 = !DILocalVariable(name: "l", arg: 1, scope: !13624, file: !368, line: 136, type: !13627)
!13624 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !13625, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13628)
!13625 = !DISubroutineType(types: !13626)
!13626 = !{!13616, !13627}
!13627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!13628 = !{!13623, !13629}
!13629 = !DILocalVariable(name: "k", scope: !13624, file: !368, line: 139, type: !13616)
!13630 = !DILocation(line: 0, scope: !13624, inlinedAt: !13631)
!13631 = distinct !DILocation(line: 442, column: 2, scope: !13615)
!13632 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !13637)
!13633 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13634)
!13634 = !{!13635, !13636}
!13635 = !DILocalVariable(name: "key", scope: !13633, file: !6193, line: 44, type: !32)
!13636 = !DILocalVariable(name: "tmp", scope: !13633, file: !6193, line: 53, type: !32)
!13637 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !13631)
!13638 = !{i64 2322183}
!13639 = !DILocation(line: 0, scope: !13633, inlinedAt: !13637)
!13640 = !DILocation(line: 443, column: 29, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13642, file: !2251, line: 442, column: 26)
!13642 = distinct !DILexicalBlock(scope: !13615, file: !2251, line: 442, column: 2)
!13643 = !DILocation(line: 444, column: 17, scope: !13641)
!13644 = !DILocation(line: 445, column: 51, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13641, file: !2251, line: 445, column: 7)
!13646 = !DILocation(line: 445, column: 7, scope: !13641)
!13647 = !DILocation(line: 0, scope: !13641)
!13648 = !DILocation(line: 451, column: 18, scope: !13641)
!13649 = !DILocation(line: 452, column: 3, scope: !13641)
!13650 = !DILocalVariable(name: "key", arg: 2, scope: !13651, file: !368, line: 190, type: !13616)
!13651 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !13652, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13654)
!13652 = !DISubroutineType(types: !13653)
!13653 = !{null, !13627, !13616}
!13654 = !{!13655, !13650}
!13655 = !DILocalVariable(name: "l", arg: 1, scope: !13651, file: !368, line: 189, type: !13627)
!13656 = !DILocation(line: 0, scope: !13651, inlinedAt: !13657)
!13657 = distinct !DILocation(line: 442, column: 2, scope: !13642)
!13658 = !DILocalVariable(name: "key", arg: 1, scope: !13659, file: !6193, line: 84, type: !32)
!13659 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13660)
!13660 = !{!13658}
!13661 = !DILocation(line: 0, scope: !13659, inlinedAt: !13662)
!13662 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !13657)
!13663 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !13662)
!13664 = !{i64 2323000}
!13665 = !DILocation(line: 454, column: 1, scope: !13608)
!13666 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13457, file: !13457, line: 389, type: !7372, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13667)
!13667 = !{!13668}
!13668 = !DILocalVariable(name: "t", arg: 1, scope: !13666, file: !13457, line: 389, type: !137)
!13669 = !DILocation(line: 0, scope: !13666)
!13670 = !DILocalVariable(name: "t", arg: 1, scope: !13671, file: !13457, line: 102, type: !163)
!13671 = distinct !DISubprogram(name: "z_tmcvt", scope: !13457, file: !13457, line: 102, type: !13465, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13672)
!13672 = !{!13670, !13673, !13674, !13675, !13676, !13677, !13678, !13679, !13680, !13681, !13682}
!13673 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13671, file: !13457, line: 102, type: !137)
!13674 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13671, file: !13457, line: 103, type: !137)
!13675 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13671, file: !13457, line: 103, type: !211)
!13676 = !DILocalVariable(name: "result32", arg: 5, scope: !13671, file: !13457, line: 104, type: !211)
!13677 = !DILocalVariable(name: "round_up", arg: 6, scope: !13671, file: !13457, line: 104, type: !211)
!13678 = !DILocalVariable(name: "round_off", arg: 7, scope: !13671, file: !13457, line: 105, type: !211)
!13679 = !DILocalVariable(name: "mul_ratio", scope: !13671, file: !13457, line: 107, type: !211)
!13680 = !DILocalVariable(name: "div_ratio", scope: !13671, file: !13457, line: 109, type: !211)
!13681 = !DILocalVariable(name: "off", scope: !13671, file: !13457, line: 116, type: !163)
!13682 = !DILocalVariable(name: "rdivisor", scope: !13683, file: !13457, line: 119, type: !137)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !13457, line: 118, column: 18)
!13684 = distinct !DILexicalBlock(scope: !13671, file: !13457, line: 118, column: 6)
!13685 = !DILocation(line: 0, scope: !13671, inlinedAt: !13686)
!13686 = distinct !DILocation(line: 392, column: 9, scope: !13666)
!13687 = !DILocation(line: 143, column: 25, scope: !13688, inlinedAt: !13686)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !13457, line: 142, column: 17)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !13457, line: 142, column: 7)
!13690 = distinct !DILexicalBlock(scope: !13691, file: !13457, line: 141, column: 24)
!13691 = distinct !DILexicalBlock(scope: !13692, file: !13457, line: 141, column: 13)
!13692 = distinct !DILexicalBlock(scope: !13671, file: !13457, line: 134, column: 6)
!13693 = !DILocation(line: 392, column: 2, scope: !13666)
!13694 = distinct !DISubprogram(name: "z_time_slice", scope: !2251, file: !2251, line: 502, type: !8009, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13695)
!13695 = !{!13696, !13697}
!13696 = !DILocalVariable(name: "ticks", arg: 1, scope: !13694, file: !2251, line: 502, type: !103)
!13697 = !DILocalVariable(name: "key", scope: !13694, file: !2251, line: 511, type: !13616)
!13698 = !DILocation(line: 0, scope: !13694)
!13699 = !DILocation(line: 0, scope: !13624, inlinedAt: !13700)
!13700 = distinct !DILocation(line: 511, column: 25, scope: !13694)
!13701 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !13702)
!13702 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !13700)
!13703 = !DILocation(line: 0, scope: !13633, inlinedAt: !13702)
!13704 = !DILocation(line: 514, column: 6, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13694, file: !2251, line: 514, column: 6)
!13706 = !DILocation(line: 514, column: 25, scope: !13705)
!13707 = !DILocation(line: 514, column: 22, scope: !13705)
!13708 = !DILocation(line: 514, column: 6, scope: !13694)
!13709 = !DILocation(line: 515, column: 3, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13705, file: !2251, line: 514, column: 35)
!13711 = !DILocation(line: 0, scope: !13651, inlinedAt: !13712)
!13712 = distinct !DILocation(line: 516, column: 3, scope: !13710)
!13713 = !DILocation(line: 0, scope: !13659, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !13712)
!13715 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !13714)
!13716 = !DILocation(line: 517, column: 3, scope: !13710)
!13717 = !DILocation(line: 519, column: 18, scope: !13694)
!13718 = !DILocation(line: 522, column: 6, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13694, file: !2251, line: 522, column: 6)
!13720 = !DILocation(line: 522, column: 27, scope: !13719)
!13721 = !DILocation(line: 522, column: 30, scope: !13719)
!13722 = !DILocation(line: 522, column: 6, scope: !13694)
!13723 = !DILocation(line: 523, column: 30, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13725, file: !2251, line: 523, column: 7)
!13725 = distinct !DILexicalBlock(scope: !13719, file: !2251, line: 522, column: 51)
!13726 = !DILocation(line: 523, column: 13, scope: !13724)
!13727 = !DILocation(line: 523, column: 7, scope: !13725)
!13728 = !DILocation(line: 530, column: 10, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13724, file: !2251, line: 523, column: 43)
!13730 = !DILocation(line: 531, column: 3, scope: !13729)
!13731 = !DILocation(line: 532, column: 30, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13724, file: !2251, line: 531, column: 10)
!13733 = !DILocation(line: 535, column: 29, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13719, file: !2251, line: 534, column: 9)
!13735 = !DILocation(line: 0, scope: !13651, inlinedAt: !13736)
!13736 = distinct !DILocation(line: 537, column: 2, scope: !13694)
!13737 = !DILocation(line: 0, scope: !13659, inlinedAt: !13738)
!13738 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !13736)
!13739 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !13738)
!13740 = !DILocation(line: 538, column: 1, scope: !13694)
!13741 = distinct !DISubprogram(name: "sliceable", scope: !2251, file: !2251, line: 468, type: !13742, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13744)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{!211, !2146}
!13744 = !{!13745, !13746}
!13745 = !DILocalVariable(name: "thread", arg: 1, scope: !13741, file: !2251, line: 468, type: !2146)
!13746 = !DILocalVariable(name: "ret", scope: !13741, file: !2251, line: 470, type: !211)
!13747 = !DILocation(line: 0, scope: !13741)
!13748 = !DILocation(line: 470, column: 13, scope: !13741)
!13749 = !DILocation(line: 471, column: 3, scope: !13741)
!13750 = !DILocation(line: 471, column: 7, scope: !13741)
!13751 = !DILocation(line: 472, column: 3, scope: !13741)
!13752 = !DILocation(line: 472, column: 37, scope: !13741)
!13753 = !DILocation(line: 472, column: 24, scope: !13741)
!13754 = !DILocation(line: 472, column: 43, scope: !13741)
!13755 = !DILocation(line: 472, column: 7, scope: !13741)
!13756 = !DILocation(line: 473, column: 3, scope: !13741)
!13757 = !DILocation(line: 473, column: 7, scope: !13741)
!13758 = !DILocation(line: 473, column: 6, scope: !13741)
!13759 = !DILocation(line: 479, column: 2, scope: !13741)
!13760 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2251, file: !2251, line: 482, type: !13761, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13763)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{!13616, !13616}
!13763 = !{!13764, !13765}
!13764 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13760, file: !2251, line: 482, type: !13616)
!13765 = !DILocalVariable(name: "curr", scope: !13760, file: !2251, line: 484, type: !2146)
!13766 = !DILocation(line: 0, scope: !13760)
!13767 = !DILocation(line: 484, column: 26, scope: !13760)
!13768 = !DILocation(line: 493, column: 7, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13760, file: !2251, line: 493, column: 6)
!13770 = !DILocation(line: 493, column: 6, scope: !13760)
!13771 = !DILocation(line: 494, column: 3, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13769, file: !2251, line: 493, column: 49)
!13773 = !DILocation(line: 495, column: 2, scope: !13772)
!13774 = !DILocation(line: 496, column: 2, scope: !13760)
!13775 = !DILocation(line: 499, column: 1, scope: !13760)
!13776 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12896, file: !12896, line: 106, type: !13742, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13777)
!13777 = !{!13778, !13779}
!13778 = !DILocalVariable(name: "thread", arg: 1, scope: !13776, file: !12896, line: 106, type: !2146)
!13779 = !DILocalVariable(name: "state", scope: !13776, file: !12896, line: 108, type: !208)
!13780 = !DILocation(line: 0, scope: !13776)
!13781 = !DILocation(line: 108, column: 31, scope: !13776)
!13782 = !DILocation(line: 110, column: 16, scope: !13776)
!13783 = !DILocation(line: 111, column: 41, scope: !13776)
!13784 = !DILocation(line: 110, column: 2, scope: !13776)
!13785 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2251, file: !2251, line: 393, type: !13582, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13786)
!13786 = !{!13787}
!13787 = !DILocalVariable(name: "thread", arg: 1, scope: !13785, file: !2251, line: 393, type: !2146)
!13788 = !DILocation(line: 0, scope: !13785)
!13789 = !DILocation(line: 395, column: 6, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13785, file: !2251, line: 395, column: 6)
!13791 = !DILocation(line: 395, column: 6, scope: !13785)
!13792 = !DILocalVariable(name: "thread", arg: 1, scope: !13793, file: !2251, line: 264, type: !2146)
!13793 = distinct !DISubprogram(name: "dequeue_thread", scope: !2251, file: !2251, line: 264, type: !13582, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13794)
!13794 = !{!13792}
!13795 = !DILocation(line: 0, scope: !13793, inlinedAt: !13796)
!13796 = distinct !DILocation(line: 396, column: 3, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13790, file: !2251, line: 395, column: 34)
!13798 = !DILocation(line: 266, column: 15, scope: !13793, inlinedAt: !13796)
!13799 = !DILocation(line: 266, column: 28, scope: !13793, inlinedAt: !13796)
!13800 = !DILocalVariable(name: "thread", arg: 1, scope: !13801, file: !2251, line: 232, type: !2146)
!13801 = distinct !DISubprogram(name: "runq_remove", scope: !2251, file: !2251, line: 232, type: !13582, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13802)
!13802 = !{!13800}
!13803 = !DILocation(line: 0, scope: !13801, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 268, column: 3, scope: !13805, inlinedAt: !13796)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !2251, line: 267, column: 35)
!13806 = distinct !DILexicalBlock(scope: !13793, file: !2251, line: 267, column: 6)
!13807 = !DILocation(line: 234, column: 2, scope: !13801, inlinedAt: !13804)
!13808 = !DILocation(line: 397, column: 2, scope: !13797)
!13809 = !DILocalVariable(name: "thread", arg: 1, scope: !13810, file: !2251, line: 250, type: !2146)
!13810 = distinct !DISubprogram(name: "queue_thread", scope: !2251, file: !2251, line: 250, type: !13582, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13811)
!13811 = !{!13809}
!13812 = !DILocation(line: 0, scope: !13810, inlinedAt: !13813)
!13813 = distinct !DILocation(line: 398, column: 2, scope: !13785)
!13814 = !DILocation(line: 252, column: 15, scope: !13810, inlinedAt: !13813)
!13815 = !DILocation(line: 252, column: 28, scope: !13810, inlinedAt: !13813)
!13816 = !DILocalVariable(name: "thread", arg: 1, scope: !13817, file: !2251, line: 227, type: !2146)
!13817 = distinct !DISubprogram(name: "runq_add", scope: !2251, file: !2251, line: 227, type: !13582, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13818)
!13818 = !{!13816}
!13819 = !DILocation(line: 0, scope: !13817, inlinedAt: !13820)
!13820 = distinct !DILocation(line: 254, column: 3, scope: !13821, inlinedAt: !13813)
!13821 = distinct !DILexicalBlock(scope: !13822, file: !2251, line: 253, column: 35)
!13822 = distinct !DILexicalBlock(scope: !13810, file: !2251, line: 253, column: 6)
!13823 = !DILocalVariable(name: "pq", arg: 1, scope: !13824, file: !2251, line: 181, type: !13827)
!13824 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2251, file: !2251, line: 181, type: !13825, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13828)
!13825 = !DISubroutineType(types: !13826)
!13826 = !{null, !13827, !2146}
!13827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!13828 = !{!13823, !13829, !13830}
!13829 = !DILocalVariable(name: "thread", arg: 2, scope: !13824, file: !2251, line: 182, type: !2146)
!13830 = !DILocalVariable(name: "t", scope: !13824, file: !2251, line: 184, type: !2146)
!13831 = !DILocation(line: 0, scope: !13824, inlinedAt: !13832)
!13832 = distinct !DILocation(line: 229, column: 2, scope: !13817, inlinedAt: !13820)
!13833 = !DILocation(line: 188, column: 2, scope: !13834, inlinedAt: !13832)
!13834 = distinct !DILexicalBlock(scope: !13824, file: !2251, line: 188, column: 2)
!13835 = !DILocation(line: 188, column: 2, scope: !13836, inlinedAt: !13832)
!13836 = distinct !DILexicalBlock(scope: !13834, file: !2251, line: 188, column: 2)
!13837 = !DILocation(line: 0, scope: !13834, inlinedAt: !13832)
!13838 = !DILocation(line: 189, column: 7, scope: !13839, inlinedAt: !13832)
!13839 = distinct !DILexicalBlock(scope: !13840, file: !2251, line: 189, column: 7)
!13840 = distinct !DILexicalBlock(scope: !13836, file: !2251, line: 188, column: 56)
!13841 = !DILocation(line: 189, column: 35, scope: !13839, inlinedAt: !13832)
!13842 = !DILocation(line: 189, column: 7, scope: !13840, inlinedAt: !13832)
!13843 = !DILocation(line: 191, column: 21, scope: !13844, inlinedAt: !13832)
!13844 = distinct !DILexicalBlock(scope: !13839, file: !2251, line: 189, column: 40)
!13845 = !DILocation(line: 190, column: 4, scope: !13844, inlinedAt: !13832)
!13846 = !DILocation(line: 192, column: 4, scope: !13844, inlinedAt: !13832)
!13847 = distinct !{!13847, !13833, !13848}
!13848 = !DILocation(line: 194, column: 2, scope: !13834, inlinedAt: !13832)
!13849 = !DILocation(line: 196, column: 37, scope: !13824, inlinedAt: !13832)
!13850 = !DILocation(line: 196, column: 2, scope: !13824, inlinedAt: !13832)
!13851 = !DILocation(line: 197, column: 1, scope: !13824, inlinedAt: !13832)
!13852 = !DILocation(line: 399, column: 25, scope: !13785)
!13853 = !DILocation(line: 399, column: 22, scope: !13785)
!13854 = !DILocation(line: 399, column: 2, scope: !13785)
!13855 = !DILocation(line: 400, column: 1, scope: !13785)
!13856 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12896, file: !12896, line: 136, type: !13742, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13857)
!13857 = !{!13858}
!13858 = !DILocalVariable(name: "thread", arg: 1, scope: !13856, file: !12896, line: 136, type: !2146)
!13859 = !DILocation(line: 0, scope: !13856)
!13860 = !DILocation(line: 138, column: 9, scope: !13856)
!13861 = !DILocation(line: 138, column: 2, scope: !13856)
!13862 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2251, file: !2251, line: 1137, type: !13825, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13863)
!13863 = !{!13864, !13865}
!13864 = !DILocalVariable(name: "pq", arg: 1, scope: !13862, file: !2251, line: 1137, type: !13827)
!13865 = !DILocalVariable(name: "thread", arg: 2, scope: !13862, file: !2251, line: 1137, type: !2146)
!13866 = !DILocation(line: 0, scope: !13862)
!13867 = !DILocation(line: 1141, column: 33, scope: !13862)
!13868 = !DILocation(line: 1141, column: 2, scope: !13862)
!13869 = !DILocation(line: 1142, column: 1, scope: !13862)
!13870 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !13871, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13873)
!13871 = !DISubroutineType(types: !13872)
!13872 = !{!2247, !13827}
!13873 = !{!13874}
!13874 = !DILocalVariable(name: "list", arg: 1, scope: !13870, file: !273, line: 294, type: !13827)
!13875 = !DILocation(line: 0, scope: !13870)
!13876 = !DILocation(line: 296, column: 9, scope: !13870)
!13877 = !DILocation(line: 296, column: 49, scope: !13870)
!13878 = !DILocation(line: 296, column: 2, scope: !13870)
!13879 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !13880, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13882)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{null, !2247, !2247}
!13882 = !{!13883, !13884, !13885}
!13883 = !DILocalVariable(name: "successor", arg: 1, scope: !13879, file: !273, line: 443, type: !2247)
!13884 = !DILocalVariable(name: "node", arg: 2, scope: !13879, file: !273, line: 443, type: !2247)
!13885 = !DILocalVariable(name: "prev", scope: !13879, file: !273, line: 445, type: !13886)
!13886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!13887 = !DILocation(line: 0, scope: !13879)
!13888 = !DILocation(line: 445, column: 39, scope: !13879)
!13889 = !DILocation(line: 447, column: 8, scope: !13879)
!13890 = !DILocation(line: 447, column: 13, scope: !13879)
!13891 = !DILocation(line: 448, column: 8, scope: !13879)
!13892 = !DILocation(line: 448, column: 13, scope: !13879)
!13893 = !DILocation(line: 449, column: 8, scope: !13879)
!13894 = !DILocation(line: 449, column: 13, scope: !13879)
!13895 = !DILocation(line: 450, column: 18, scope: !13879)
!13896 = !DILocation(line: 451, column: 1, scope: !13879)
!13897 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !13898, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13900)
!13898 = !DISubroutineType(types: !13899)
!13899 = !{!2247, !13827, !2247}
!13900 = !{!13901, !13902}
!13901 = !DILocalVariable(name: "list", arg: 1, scope: !13897, file: !273, line: 341, type: !13827)
!13902 = !DILocalVariable(name: "node", arg: 2, scope: !13897, file: !273, line: 342, type: !2247)
!13903 = !DILocation(line: 0, scope: !13897)
!13904 = !DILocation(line: 344, column: 15, scope: !13897)
!13905 = !DILocation(line: 344, column: 9, scope: !13897)
!13906 = !DILocation(line: 344, column: 26, scope: !13897)
!13907 = !DILocation(line: 344, column: 2, scope: !13897)
!13908 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !13909, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13911)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{null, !13827, !2247}
!13911 = !{!13912, !13913, !13914}
!13912 = !DILocalVariable(name: "list", arg: 1, scope: !13908, file: !273, line: 404, type: !13827)
!13913 = !DILocalVariable(name: "node", arg: 2, scope: !13908, file: !273, line: 404, type: !2247)
!13914 = !DILocalVariable(name: "tail", scope: !13908, file: !273, line: 406, type: !13886)
!13915 = !DILocation(line: 0, scope: !13908)
!13916 = !DILocation(line: 406, column: 34, scope: !13908)
!13917 = !DILocation(line: 408, column: 8, scope: !13908)
!13918 = !DILocation(line: 408, column: 13, scope: !13908)
!13919 = !DILocation(line: 409, column: 8, scope: !13908)
!13920 = !DILocation(line: 409, column: 13, scope: !13908)
!13921 = !DILocation(line: 411, column: 8, scope: !13908)
!13922 = !DILocation(line: 411, column: 13, scope: !13908)
!13923 = !DILocation(line: 412, column: 13, scope: !13908)
!13924 = !DILocation(line: 413, column: 1, scope: !13908)
!13925 = distinct !DISubprogram(name: "update_cache", scope: !2251, file: !2251, line: 559, type: !8009, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13926)
!13926 = !{!13927, !13928}
!13927 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13925, file: !2251, line: 559, type: !103)
!13928 = !DILocalVariable(name: "thread", scope: !13925, file: !2251, line: 562, type: !2146)
!13929 = !DILocation(line: 0, scope: !13925)
!13930 = !DILocation(line: 239, column: 9, scope: !13931, inlinedAt: !13934)
!13931 = distinct !DISubprogram(name: "runq_best", scope: !2251, file: !2251, line: 237, type: !13932, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!13932 = !DISubroutineType(types: !13933)
!13933 = !{!2146}
!13934 = distinct !DILocation(line: 314, column: 28, scope: !13935, inlinedAt: !13938)
!13935 = distinct !DISubprogram(name: "next_up", scope: !2251, file: !2251, line: 312, type: !13932, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13936)
!13936 = !{!13937}
!13937 = !DILocalVariable(name: "thread", scope: !13935, file: !2251, line: 314, type: !2146)
!13938 = distinct !DILocation(line: 562, column: 28, scope: !13925)
!13939 = !DILocation(line: 0, scope: !13935, inlinedAt: !13938)
!13940 = !DILocation(line: 340, column: 17, scope: !13935, inlinedAt: !13938)
!13941 = !DILocation(line: 340, column: 9, scope: !13935, inlinedAt: !13938)
!13942 = !DILocalVariable(name: "thread", arg: 1, scope: !13943, file: !2251, line: 127, type: !2146)
!13943 = distinct !DISubprogram(name: "should_preempt", scope: !2251, file: !2251, line: 127, type: !13944, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13946)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{!211, !2146, !103}
!13946 = !{!13942, !13947}
!13947 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13943, file: !2251, line: 128, type: !103)
!13948 = !DILocation(line: 0, scope: !13943, inlinedAt: !13949)
!13949 = distinct !DILocation(line: 564, column: 6, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13925, file: !2251, line: 564, column: 6)
!13951 = !DILocation(line: 133, column: 17, scope: !13952, inlinedAt: !13949)
!13952 = distinct !DILexicalBlock(scope: !13943, file: !2251, line: 133, column: 6)
!13953 = !DILocation(line: 0, scope: !13950)
!13954 = !DILocation(line: 133, column: 6, scope: !13943, inlinedAt: !13949)
!13955 = !DILocation(line: 140, column: 6, scope: !13956, inlinedAt: !13949)
!13956 = distinct !DILexicalBlock(scope: !13943, file: !2251, line: 140, column: 6)
!13957 = !DILocation(line: 140, column: 6, scope: !13943, inlinedAt: !13949)
!13958 = !DILocation(line: 150, column: 9, scope: !13959, inlinedAt: !13949)
!13959 = distinct !DILexicalBlock(scope: !13943, file: !2251, line: 149, column: 6)
!13960 = !DILocation(line: 149, column: 6, scope: !13943, inlinedAt: !13949)
!13961 = !DILocation(line: 157, column: 6, scope: !13962, inlinedAt: !13949)
!13962 = distinct !DILexicalBlock(scope: !13943, file: !2251, line: 157, column: 6)
!13963 = !DILocation(line: 564, column: 6, scope: !13925)
!13964 = !DILocation(line: 566, column: 14, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !2251, line: 566, column: 7)
!13966 = distinct !DILexicalBlock(scope: !13950, file: !2251, line: 564, column: 42)
!13967 = !DILocation(line: 566, column: 7, scope: !13966)
!13968 = !DILocation(line: 567, column: 4, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13965, file: !2251, line: 566, column: 27)
!13970 = !DILocation(line: 568, column: 3, scope: !13969)
!13971 = !DILocation(line: 585, column: 1, scope: !13925)
!13972 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2251, file: !2251, line: 1144, type: !13973, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13975)
!13973 = !DISubroutineType(types: !13974)
!13974 = !{!2146, !13827}
!13975 = !{!13976, !13977, !13978}
!13976 = !DILocalVariable(name: "pq", arg: 1, scope: !13972, file: !2251, line: 1144, type: !13827)
!13977 = !DILocalVariable(name: "thread", scope: !13972, file: !2251, line: 1146, type: !2146)
!13978 = !DILocalVariable(name: "n", scope: !13972, file: !2251, line: 1147, type: !2247)
!13979 = !DILocation(line: 0, scope: !13972)
!13980 = !DILocation(line: 1147, column: 19, scope: !13972)
!13981 = !DILocation(line: 1152, column: 2, scope: !13972)
!13982 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12896, file: !12896, line: 115, type: !13742, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13983)
!13983 = !{!13984}
!13984 = !DILocalVariable(name: "thread", arg: 1, scope: !13982, file: !12896, line: 115, type: !2146)
!13985 = !DILocation(line: 0, scope: !13982)
!13986 = !DILocation(line: 117, column: 46, scope: !13982)
!13987 = !DILocation(line: 117, column: 10, scope: !13982)
!13988 = !DILocation(line: 117, column: 9, scope: !13982)
!13989 = !DILocation(line: 117, column: 2, scope: !13982)
!13990 = distinct !DISubprogram(name: "is_preempt", scope: !2251, file: !2251, line: 62, type: !13600, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !13991)
!13991 = !{!13992}
!13992 = !DILocalVariable(name: "thread", arg: 1, scope: !13990, file: !2251, line: 62, type: !2146)
!13993 = !DILocation(line: 0, scope: !13990)
!13994 = !DILocation(line: 65, column: 22, scope: !13990)
!13995 = !DILocation(line: 65, column: 30, scope: !13990)
!13996 = !DILocation(line: 65, column: 2, scope: !13990)
!13997 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13290, file: !13290, line: 35, type: !13998, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14002)
!13998 = !DISubroutineType(types: !13999)
!13999 = !{!211, !14000}
!14000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14001, size: 32)
!14001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2197)
!14002 = !{!14003}
!14003 = !DILocalVariable(name: "to", arg: 1, scope: !13997, file: !13290, line: 35, type: !14000)
!14004 = !DILocation(line: 0, scope: !13997)
!14005 = !DILocation(line: 37, column: 35, scope: !13997)
!14006 = !DILocation(line: 37, column: 10, scope: !13997)
!14007 = !DILocation(line: 37, column: 9, scope: !13997)
!14008 = !DILocation(line: 37, column: 2, scope: !13997)
!14009 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !14010, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14014)
!14010 = !DISubroutineType(types: !14011)
!14011 = !{!211, !14012}
!14012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14013, size: 32)
!14013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2156)
!14014 = !{!14015}
!14015 = !DILocalVariable(name: "node", arg: 1, scope: !14009, file: !273, line: 225, type: !14012)
!14016 = !DILocation(line: 0, scope: !14009)
!14017 = !DILocation(line: 227, column: 15, scope: !14009)
!14018 = !DILocation(line: 227, column: 20, scope: !14009)
!14019 = !DILocation(line: 227, column: 2, scope: !14009)
!14020 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !13898, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14021)
!14021 = !{!14022, !14023}
!14022 = !DILocalVariable(name: "list", arg: 1, scope: !14020, file: !273, line: 325, type: !13827)
!14023 = !DILocalVariable(name: "node", arg: 2, scope: !14020, file: !273, line: 326, type: !2247)
!14024 = !DILocation(line: 0, scope: !14020)
!14025 = !DILocation(line: 328, column: 24, scope: !14020)
!14026 = !DILocation(line: 328, column: 15, scope: !14020)
!14027 = !DILocation(line: 328, column: 9, scope: !14020)
!14028 = !DILocation(line: 328, column: 45, scope: !14020)
!14029 = !DILocation(line: 328, column: 2, scope: !14020)
!14030 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !14031, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14033)
!14031 = !DISubroutineType(types: !14032)
!14032 = !{!211, !13827}
!14033 = !{!14034}
!14034 = !DILocalVariable(name: "list", arg: 1, scope: !14030, file: !273, line: 266, type: !13827)
!14035 = !DILocation(line: 0, scope: !14030)
!14036 = !DILocation(line: 268, column: 15, scope: !14030)
!14037 = !DILocation(line: 268, column: 20, scope: !14030)
!14038 = !DILocation(line: 268, column: 2, scope: !14030)
!14039 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !14040, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14042)
!14040 = !DISubroutineType(types: !14041)
!14041 = !{null, !2247}
!14042 = !{!14043, !14044, !14045}
!14043 = !DILocalVariable(name: "node", arg: 1, scope: !14039, file: !273, line: 496, type: !2247)
!14044 = !DILocalVariable(name: "prev", scope: !14039, file: !273, line: 498, type: !13886)
!14045 = !DILocalVariable(name: "next", scope: !14039, file: !273, line: 499, type: !13886)
!14046 = !DILocation(line: 0, scope: !14039)
!14047 = !DILocation(line: 498, column: 34, scope: !14039)
!14048 = !DILocation(line: 499, column: 34, scope: !14039)
!14049 = !DILocation(line: 501, column: 8, scope: !14039)
!14050 = !DILocation(line: 501, column: 13, scope: !14039)
!14051 = !DILocation(line: 502, column: 8, scope: !14039)
!14052 = !DILocation(line: 502, column: 13, scope: !14039)
!14053 = !DILocation(line: 503, column: 2, scope: !14039)
!14054 = !DILocation(line: 504, column: 1, scope: !14039)
!14055 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !14040, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14056)
!14056 = !{!14057}
!14057 = !DILocalVariable(name: "node", arg: 1, scope: !14055, file: !273, line: 211, type: !2247)
!14058 = !DILocation(line: 0, scope: !14055)
!14059 = !DILocation(line: 213, column: 8, scope: !14055)
!14060 = !DILocation(line: 213, column: 13, scope: !14055)
!14061 = !DILocation(line: 214, column: 8, scope: !14055)
!14062 = !DILocation(line: 214, column: 13, scope: !14055)
!14063 = !DILocation(line: 215, column: 1, scope: !14055)
!14064 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12896, file: !12896, line: 131, type: !14065, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14067)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{!211, !2146, !137}
!14067 = !{!14068, !14069}
!14068 = !DILocalVariable(name: "thread", arg: 1, scope: !14064, file: !12896, line: 131, type: !2146)
!14069 = !DILocalVariable(name: "state", arg: 2, scope: !14064, file: !12896, line: 131, type: !137)
!14070 = !DILocation(line: 0, scope: !14064)
!14071 = !DILocation(line: 133, column: 23, scope: !14064)
!14072 = !DILocation(line: 133, column: 45, scope: !14064)
!14073 = !DILocation(line: 133, column: 2, scope: !14064)
!14074 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12896, file: !12896, line: 211, type: !14075, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14077)
!14075 = !DISubroutineType(types: !14076)
!14076 = !{!211, !103, !103}
!14077 = !{!14078, !14079}
!14078 = !DILocalVariable(name: "prio", arg: 1, scope: !14074, file: !12896, line: 211, type: !103)
!14079 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14074, file: !12896, line: 211, type: !103)
!14080 = !DILocation(line: 0, scope: !14074)
!14081 = !DILocation(line: 213, column: 9, scope: !14074)
!14082 = !DILocation(line: 213, column: 2, scope: !14074)
!14083 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12896, file: !12896, line: 83, type: !13742, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14084)
!14084 = !{!14085}
!14085 = !DILocalVariable(name: "thread", arg: 1, scope: !14083, file: !12896, line: 83, type: !2146)
!14086 = !DILocation(line: 0, scope: !14083)
!14087 = !DILocation(line: 89, column: 16, scope: !14083)
!14088 = !DILocation(line: 89, column: 2, scope: !14083)
!14089 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12896, file: !12896, line: 206, type: !14075, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14090)
!14090 = !{!14091, !14092}
!14091 = !DILocalVariable(name: "prio1", arg: 1, scope: !14089, file: !12896, line: 206, type: !103)
!14092 = !DILocalVariable(name: "prio2", arg: 2, scope: !14089, file: !12896, line: 206, type: !103)
!14093 = !DILocation(line: 0, scope: !14089)
!14094 = !DILocation(line: 208, column: 15, scope: !14089)
!14095 = !DILocation(line: 208, column: 2, scope: !14089)
!14096 = distinct !DISubprogram(name: "z_ready_thread", scope: !2251, file: !2251, line: 635, type: !13582, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14097)
!14097 = !{!14098, !14099, !14101}
!14098 = !DILocalVariable(name: "thread", arg: 1, scope: !14096, file: !2251, line: 635, type: !2146)
!14099 = !DILocalVariable(name: "__i", scope: !14100, file: !2251, line: 637, type: !13616)
!14100 = distinct !DILexicalBlock(scope: !14096, file: !2251, line: 637, column: 2)
!14101 = !DILocalVariable(name: "__key", scope: !14100, file: !2251, line: 637, type: !13616)
!14102 = !DILocation(line: 0, scope: !14096)
!14103 = !DILocation(line: 0, scope: !14100)
!14104 = !DILocation(line: 0, scope: !13624, inlinedAt: !14105)
!14105 = distinct !DILocation(line: 637, column: 2, scope: !14100)
!14106 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14107)
!14107 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14105)
!14108 = !DILocation(line: 0, scope: !13633, inlinedAt: !14107)
!14109 = !DILocation(line: 639, column: 4, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14111, file: !2251, line: 638, column: 41)
!14111 = distinct !DILexicalBlock(scope: !14112, file: !2251, line: 638, column: 7)
!14112 = distinct !DILexicalBlock(scope: !14113, file: !2251, line: 637, column: 26)
!14113 = distinct !DILexicalBlock(scope: !14100, file: !2251, line: 637, column: 2)
!14114 = !DILocation(line: 0, scope: !13651, inlinedAt: !14115)
!14115 = distinct !DILocation(line: 637, column: 2, scope: !14113)
!14116 = !DILocation(line: 0, scope: !13659, inlinedAt: !14117)
!14117 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14115)
!14118 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14117)
!14119 = !DILocation(line: 642, column: 1, scope: !14096)
!14120 = distinct !DISubprogram(name: "ready_thread", scope: !2251, file: !2251, line: 617, type: !13582, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14121)
!14121 = !{!14122}
!14122 = !DILocalVariable(name: "thread", arg: 1, scope: !14120, file: !2251, line: 617, type: !2146)
!14123 = !DILocation(line: 0, scope: !14120)
!14124 = !DILocation(line: 626, column: 7, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14120, file: !2251, line: 626, column: 6)
!14126 = !DILocation(line: 626, column: 34, scope: !14125)
!14127 = !DILocation(line: 626, column: 37, scope: !14125)
!14128 = !DILocation(line: 626, column: 6, scope: !14120)
!14129 = !DILocation(line: 0, scope: !13810, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 629, column: 3, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14125, file: !2251, line: 626, column: 64)
!14132 = !DILocation(line: 252, column: 15, scope: !13810, inlinedAt: !14130)
!14133 = !DILocation(line: 252, column: 28, scope: !13810, inlinedAt: !14130)
!14134 = !DILocation(line: 0, scope: !13817, inlinedAt: !14135)
!14135 = distinct !DILocation(line: 254, column: 3, scope: !13821, inlinedAt: !14130)
!14136 = !DILocation(line: 0, scope: !13824, inlinedAt: !14137)
!14137 = distinct !DILocation(line: 229, column: 2, scope: !13817, inlinedAt: !14135)
!14138 = !DILocation(line: 188, column: 2, scope: !13834, inlinedAt: !14137)
!14139 = !DILocation(line: 188, column: 2, scope: !13836, inlinedAt: !14137)
!14140 = !DILocation(line: 0, scope: !13834, inlinedAt: !14137)
!14141 = !DILocation(line: 189, column: 7, scope: !13839, inlinedAt: !14137)
!14142 = !DILocation(line: 189, column: 35, scope: !13839, inlinedAt: !14137)
!14143 = !DILocation(line: 189, column: 7, scope: !13840, inlinedAt: !14137)
!14144 = !DILocation(line: 191, column: 21, scope: !13844, inlinedAt: !14137)
!14145 = !DILocation(line: 190, column: 4, scope: !13844, inlinedAt: !14137)
!14146 = !DILocation(line: 192, column: 4, scope: !13844, inlinedAt: !14137)
!14147 = distinct !{!14147, !14138, !14148}
!14148 = !DILocation(line: 194, column: 2, scope: !13834, inlinedAt: !14137)
!14149 = !DILocation(line: 196, column: 37, scope: !13824, inlinedAt: !14137)
!14150 = !DILocation(line: 196, column: 2, scope: !13824, inlinedAt: !14137)
!14151 = !DILocation(line: 197, column: 1, scope: !13824, inlinedAt: !14137)
!14152 = !DILocation(line: 630, column: 3, scope: !14131)
!14153 = !DILocation(line: 632, column: 2, scope: !14131)
!14154 = !DILocation(line: 633, column: 1, scope: !14120)
!14155 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12896, file: !12896, line: 120, type: !13742, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14156)
!14156 = !{!14157}
!14157 = !DILocalVariable(name: "thread", arg: 1, scope: !14155, file: !12896, line: 120, type: !2146)
!14158 = !DILocation(line: 0, scope: !14155)
!14159 = !DILocation(line: 122, column: 12, scope: !14155)
!14160 = !DILocation(line: 122, column: 62, scope: !14155)
!14161 = !DILocation(line: 123, column: 4, scope: !14155)
!14162 = !DILocation(line: 122, column: 2, scope: !14155)
!14163 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2251, file: !2251, line: 644, type: !13582, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14164)
!14164 = !{!14165, !14166, !14168}
!14165 = !DILocalVariable(name: "thread", arg: 1, scope: !14163, file: !2251, line: 644, type: !2146)
!14166 = !DILocalVariable(name: "__i", scope: !14167, file: !2251, line: 646, type: !13616)
!14167 = distinct !DILexicalBlock(scope: !14163, file: !2251, line: 646, column: 2)
!14168 = !DILocalVariable(name: "__key", scope: !14167, file: !2251, line: 646, type: !13616)
!14169 = !DILocation(line: 0, scope: !14163)
!14170 = !DILocation(line: 0, scope: !14167)
!14171 = !DILocation(line: 0, scope: !13624, inlinedAt: !14172)
!14172 = distinct !DILocation(line: 646, column: 2, scope: !14167)
!14173 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14172)
!14175 = !DILocation(line: 0, scope: !13633, inlinedAt: !14174)
!14176 = !DILocation(line: 647, column: 3, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !2251, line: 646, column: 26)
!14178 = distinct !DILexicalBlock(scope: !14167, file: !2251, line: 646, column: 2)
!14179 = !DILocation(line: 0, scope: !13651, inlinedAt: !14180)
!14180 = distinct !DILocation(line: 646, column: 2, scope: !14178)
!14181 = !DILocation(line: 0, scope: !13659, inlinedAt: !14182)
!14182 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14180)
!14183 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14182)
!14184 = !DILocation(line: 649, column: 1, scope: !14163)
!14185 = distinct !DISubprogram(name: "z_sched_start", scope: !2251, file: !2251, line: 651, type: !13582, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14186)
!14186 = !{!14187, !14188}
!14187 = !DILocalVariable(name: "thread", arg: 1, scope: !14185, file: !2251, line: 651, type: !2146)
!14188 = !DILocalVariable(name: "key", scope: !14185, file: !2251, line: 653, type: !13616)
!14189 = !DILocation(line: 0, scope: !14185)
!14190 = !DILocation(line: 0, scope: !13624, inlinedAt: !14191)
!14191 = distinct !DILocation(line: 653, column: 25, scope: !14185)
!14192 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14193)
!14193 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14191)
!14194 = !DILocation(line: 0, scope: !13633, inlinedAt: !14193)
!14195 = !DILocation(line: 655, column: 6, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14185, file: !2251, line: 655, column: 6)
!14197 = !DILocation(line: 655, column: 6, scope: !14185)
!14198 = !DILocation(line: 0, scope: !13651, inlinedAt: !14199)
!14199 = distinct !DILocation(line: 656, column: 3, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14196, file: !2251, line: 655, column: 36)
!14201 = !DILocation(line: 0, scope: !13659, inlinedAt: !14202)
!14202 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14199)
!14203 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14202)
!14204 = !DILocation(line: 657, column: 3, scope: !14200)
!14205 = !DILocation(line: 660, column: 2, scope: !14185)
!14206 = !DILocation(line: 661, column: 2, scope: !14185)
!14207 = !DILocation(line: 662, column: 2, scope: !14185)
!14208 = !DILocation(line: 663, column: 1, scope: !14185)
!14209 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12896, file: !12896, line: 126, type: !13742, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14210)
!14210 = !{!14211}
!14211 = !DILocalVariable(name: "thread", arg: 1, scope: !14209, file: !12896, line: 126, type: !2146)
!14212 = !DILocation(line: 0, scope: !14209)
!14213 = !DILocation(line: 128, column: 23, scope: !14209)
!14214 = !DILocation(line: 128, column: 36, scope: !14209)
!14215 = !DILocation(line: 128, column: 56, scope: !14209)
!14216 = !DILocation(line: 128, column: 2, scope: !14209)
!14217 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12896, file: !12896, line: 155, type: !13582, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14218)
!14218 = !{!14219}
!14219 = !DILocalVariable(name: "thread", arg: 1, scope: !14217, file: !12896, line: 155, type: !2146)
!14220 = !DILocation(line: 0, scope: !14217)
!14221 = !DILocation(line: 157, column: 15, scope: !14217)
!14222 = !DILocation(line: 157, column: 28, scope: !14217)
!14223 = !DILocation(line: 158, column: 1, scope: !14217)
!14224 = distinct !DISubprogram(name: "z_reschedule", scope: !2251, file: !2251, line: 967, type: !13652, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14225)
!14225 = !{!14226, !14227}
!14226 = !DILocalVariable(name: "lock", arg: 1, scope: !14224, file: !2251, line: 967, type: !13627)
!14227 = !DILocalVariable(name: "key", arg: 2, scope: !14224, file: !2251, line: 967, type: !13616)
!14228 = !DILocation(line: 0, scope: !14224)
!14229 = !DILocation(line: 969, column: 6, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14224, file: !2251, line: 969, column: 6)
!14231 = !DILocation(line: 969, column: 23, scope: !14230)
!14232 = !DILocation(line: 969, column: 26, scope: !14230)
!14233 = !DILocation(line: 969, column: 6, scope: !14224)
!14234 = !DILocalVariable(name: "key", arg: 2, scope: !14235, file: !13000, line: 193, type: !13616)
!14235 = distinct !DISubprogram(name: "z_swap", scope: !13000, file: !13000, line: 193, type: !14236, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14238)
!14236 = !DISubroutineType(types: !14237)
!14237 = !{!103, !13627, !13616}
!14238 = !{!14239, !14234}
!14239 = !DILocalVariable(name: "lock", arg: 1, scope: !14235, file: !13000, line: 193, type: !13627)
!14240 = !DILocation(line: 0, scope: !14235, inlinedAt: !14241)
!14241 = distinct !DILocation(line: 970, column: 3, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14230, file: !2251, line: 969, column: 39)
!14243 = !DILocation(line: 196, column: 9, scope: !14235, inlinedAt: !14241)
!14244 = !DILocation(line: 971, column: 2, scope: !14242)
!14245 = !DILocation(line: 0, scope: !13651, inlinedAt: !14246)
!14246 = distinct !DILocation(line: 972, column: 3, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14230, file: !2251, line: 971, column: 9)
!14248 = !DILocation(line: 0, scope: !13659, inlinedAt: !14249)
!14249 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14246)
!14250 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14249)
!14251 = !DILocation(line: 975, column: 1, scope: !14224)
!14252 = distinct !DISubprogram(name: "resched", scope: !2251, file: !2251, line: 940, type: !14253, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14255)
!14253 = !DISubroutineType(types: !14254)
!14254 = !{!211, !137}
!14255 = !{!14256}
!14256 = !DILocalVariable(name: "key", arg: 1, scope: !14252, file: !2251, line: 940, type: !137)
!14257 = !DILocation(line: 0, scope: !14252)
!14258 = !DILocalVariable(name: "key", arg: 1, scope: !14259, file: !6193, line: 112, type: !32)
!14259 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6193, file: !6193, line: 112, type: !14260, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14262)
!14260 = !DISubroutineType(types: !14261)
!14261 = !{!211, !32}
!14262 = !{!14258}
!14263 = !DILocation(line: 0, scope: !14259, inlinedAt: !14264)
!14264 = distinct !DILocation(line: 946, column: 9, scope: !14252)
!14265 = !DILocation(line: 115, column: 13, scope: !14259, inlinedAt: !14264)
!14266 = !DILocation(line: 946, column: 32, scope: !14252)
!14267 = !DILocation(line: 1031, column: 3, scope: !14268, inlinedAt: !14271)
!14268 = distinct !DISubprogram(name: "__get_IPSR", scope: !6367, file: !6367, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14269)
!14269 = !{!14270}
!14270 = !DILocalVariable(name: "result", scope: !14268, file: !6367, line: 1029, type: !137)
!14271 = distinct !DILocation(line: 48, column: 10, scope: !14272, inlinedAt: !14273)
!14272 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7159, file: !7159, line: 46, type: !7160, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!14273 = distinct !DILocation(line: 946, column: 36, scope: !14252)
!14274 = !{i64 3768617}
!14275 = !DILocation(line: 0, scope: !14268, inlinedAt: !14271)
!14276 = !DILocation(line: 48, column: 9, scope: !14272, inlinedAt: !14273)
!14277 = !DILocation(line: 946, column: 2, scope: !14252)
!14278 = distinct !DISubprogram(name: "need_swap", scope: !2251, file: !2251, line: 953, type: !7160, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14279)
!14279 = !{!14280}
!14280 = !DILocalVariable(name: "new_thread", scope: !14278, file: !2251, line: 959, type: !2146)
!14281 = !DILocation(line: 962, column: 31, scope: !14278)
!14282 = !DILocation(line: 0, scope: !14278)
!14283 = !DILocation(line: 963, column: 23, scope: !14278)
!14284 = !DILocation(line: 963, column: 20, scope: !14278)
!14285 = !DILocation(line: 963, column: 2, scope: !14278)
!14286 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13000, file: !13000, line: 181, type: !6377, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14287)
!14287 = !{!14288, !14289}
!14288 = !DILocalVariable(name: "key", arg: 1, scope: !14286, file: !13000, line: 181, type: !32)
!14289 = !DILocalVariable(name: "ret", scope: !14286, file: !13000, line: 183, type: !103)
!14290 = !DILocation(line: 0, scope: !14286)
!14291 = !DILocation(line: 185, column: 8, scope: !14286)
!14292 = !DILocation(line: 186, column: 2, scope: !14286)
!14293 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2251, file: !2251, line: 665, type: !13582, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14294)
!14294 = !{!14295, !14296, !14298}
!14295 = !DILocalVariable(name: "thread", arg: 1, scope: !14293, file: !2251, line: 665, type: !2146)
!14296 = !DILocalVariable(name: "__i", scope: !14297, file: !2251, line: 671, type: !13616)
!14297 = distinct !DILexicalBlock(scope: !14293, file: !2251, line: 671, column: 2)
!14298 = !DILocalVariable(name: "__key", scope: !14297, file: !2251, line: 671, type: !13616)
!14299 = !DILocation(line: 0, scope: !14293)
!14300 = !DILocation(line: 669, column: 8, scope: !14293)
!14301 = !DILocation(line: 0, scope: !14297)
!14302 = !DILocation(line: 0, scope: !13624, inlinedAt: !14303)
!14303 = distinct !DILocation(line: 671, column: 2, scope: !14297)
!14304 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14305)
!14305 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14303)
!14306 = !DILocation(line: 0, scope: !13633, inlinedAt: !14305)
!14307 = !DILocation(line: 672, column: 7, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14309, file: !2251, line: 672, column: 7)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !2251, line: 671, column: 26)
!14310 = distinct !DILexicalBlock(scope: !14297, file: !2251, line: 671, column: 2)
!14311 = !DILocation(line: 672, column: 7, scope: !14309)
!14312 = !DILocation(line: 0, scope: !13793, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 673, column: 4, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14308, file: !2251, line: 672, column: 35)
!14315 = !DILocation(line: 266, column: 15, scope: !13793, inlinedAt: !14313)
!14316 = !DILocation(line: 266, column: 28, scope: !13793, inlinedAt: !14313)
!14317 = !DILocation(line: 0, scope: !13801, inlinedAt: !14318)
!14318 = distinct !DILocation(line: 268, column: 3, scope: !13805, inlinedAt: !14313)
!14319 = !DILocation(line: 234, column: 2, scope: !13801, inlinedAt: !14318)
!14320 = !DILocation(line: 674, column: 3, scope: !14314)
!14321 = !DILocation(line: 675, column: 3, scope: !14309)
!14322 = !DILocation(line: 676, column: 26, scope: !14309)
!14323 = !DILocation(line: 676, column: 23, scope: !14309)
!14324 = !DILocation(line: 676, column: 3, scope: !14309)
!14325 = !DILocation(line: 0, scope: !13651, inlinedAt: !14326)
!14326 = distinct !DILocation(line: 671, column: 2, scope: !14310)
!14327 = !DILocation(line: 0, scope: !13659, inlinedAt: !14328)
!14328 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14326)
!14329 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14328)
!14330 = !DILocation(line: 679, column: 16, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14293, file: !2251, line: 679, column: 6)
!14332 = !DILocation(line: 679, column: 13, scope: !14331)
!14333 = !DILocation(line: 679, column: 6, scope: !14293)
!14334 = !DILocation(line: 680, column: 3, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14331, file: !2251, line: 679, column: 26)
!14336 = !DILocation(line: 681, column: 2, scope: !14335)
!14337 = !DILocation(line: 684, column: 1, scope: !14293)
!14338 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13290, file: !13290, line: 52, type: !13600, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14339)
!14339 = !{!14340}
!14340 = !DILocalVariable(name: "thread", arg: 1, scope: !14338, file: !13290, line: 52, type: !2146)
!14341 = !DILocation(line: 0, scope: !14338)
!14342 = !DILocation(line: 54, column: 39, scope: !14338)
!14343 = !DILocation(line: 54, column: 9, scope: !14338)
!14344 = !DILocation(line: 54, column: 2, scope: !14338)
!14345 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12896, file: !12896, line: 141, type: !13582, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14346)
!14346 = !{!14347}
!14347 = !DILocalVariable(name: "thread", arg: 1, scope: !14345, file: !12896, line: 141, type: !2146)
!14348 = !DILocation(line: 0, scope: !14345)
!14349 = !DILocation(line: 143, column: 15, scope: !14345)
!14350 = !DILocation(line: 143, column: 28, scope: !14345)
!14351 = !DILocation(line: 146, column: 1, scope: !14345)
!14352 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12896, file: !12896, line: 73, type: !2885, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!14353 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14354)
!14354 = distinct !DILocation(line: 75, column: 30, scope: !14352)
!14355 = !DILocation(line: 0, scope: !13633, inlinedAt: !14354)
!14356 = !DILocation(line: 75, column: 9, scope: !14352)
!14357 = !DILocation(line: 76, column: 1, scope: !14352)
!14358 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2251, file: !2251, line: 977, type: !6456, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14359)
!14359 = !{!14360}
!14360 = !DILocalVariable(name: "key", arg: 1, scope: !14358, file: !2251, line: 977, type: !137)
!14361 = !DILocation(line: 0, scope: !14358)
!14362 = !DILocation(line: 979, column: 6, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14358, file: !2251, line: 979, column: 6)
!14364 = !DILocation(line: 979, column: 6, scope: !14358)
!14365 = !DILocation(line: 980, column: 3, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14363, file: !2251, line: 979, column: 20)
!14367 = !DILocation(line: 981, column: 2, scope: !14366)
!14368 = !DILocation(line: 0, scope: !13659, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 982, column: 3, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14363, file: !2251, line: 981, column: 9)
!14371 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14369)
!14372 = !DILocation(line: 985, column: 1, scope: !14358)
!14373 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2251, file: !2251, line: 695, type: !13582, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14374)
!14374 = !{!14375, !14376}
!14375 = !DILocalVariable(name: "thread", arg: 1, scope: !14373, file: !2251, line: 695, type: !2146)
!14376 = !DILocalVariable(name: "key", scope: !14373, file: !2251, line: 699, type: !13616)
!14377 = !DILocation(line: 0, scope: !14373)
!14378 = !DILocation(line: 0, scope: !13624, inlinedAt: !14379)
!14379 = distinct !DILocation(line: 699, column: 25, scope: !14373)
!14380 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14381)
!14381 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14379)
!14382 = !DILocation(line: 0, scope: !13633, inlinedAt: !14381)
!14383 = !DILocation(line: 702, column: 7, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14373, file: !2251, line: 702, column: 6)
!14385 = !DILocation(line: 702, column: 6, scope: !14373)
!14386 = !DILocation(line: 0, scope: !13651, inlinedAt: !14387)
!14387 = distinct !DILocation(line: 703, column: 3, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14384, file: !2251, line: 702, column: 38)
!14389 = !DILocation(line: 0, scope: !13659, inlinedAt: !14390)
!14390 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14387)
!14391 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14390)
!14392 = !DILocation(line: 704, column: 3, scope: !14388)
!14393 = !DILocation(line: 707, column: 2, scope: !14373)
!14394 = !DILocation(line: 708, column: 2, scope: !14373)
!14395 = !DILocation(line: 710, column: 2, scope: !14373)
!14396 = !DILocation(line: 713, column: 1, scope: !14373)
!14397 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12896, file: !12896, line: 96, type: !13742, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14398)
!14398 = !{!14399}
!14399 = !DILocalVariable(name: "thread", arg: 1, scope: !14397, file: !12896, line: 96, type: !2146)
!14400 = !DILocation(line: 0, scope: !14397)
!14401 = !DILocation(line: 98, column: 23, scope: !14397)
!14402 = !DILocation(line: 98, column: 36, scope: !14397)
!14403 = !DILocation(line: 98, column: 57, scope: !14397)
!14404 = !DILocation(line: 98, column: 2, scope: !14397)
!14405 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12896, file: !12896, line: 148, type: !13582, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14406)
!14406 = !{!14407}
!14407 = !DILocalVariable(name: "thread", arg: 1, scope: !14405, file: !12896, line: 148, type: !2146)
!14408 = !DILocation(line: 0, scope: !14405)
!14409 = !DILocation(line: 150, column: 15, scope: !14405)
!14410 = !DILocation(line: 150, column: 28, scope: !14405)
!14411 = !DILocation(line: 153, column: 1, scope: !14405)
!14412 = distinct !DISubprogram(name: "z_pend_thread", scope: !2251, file: !2251, line: 770, type: !14413, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14419)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{null, !2146, !2177, !14415}
!14415 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1498, line: 67, baseType: !14416)
!14416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1498, line: 65, size: 64, elements: !14417)
!14417 = !{!14418}
!14418 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14416, file: !1498, line: 66, baseType: !1497, size: 64)
!14419 = !{!14420, !14421, !14422, !14423, !14425}
!14420 = !DILocalVariable(name: "thread", arg: 1, scope: !14412, file: !2251, line: 770, type: !2146)
!14421 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14412, file: !2251, line: 770, type: !2177)
!14422 = !DILocalVariable(name: "timeout", arg: 3, scope: !14412, file: !2251, line: 771, type: !14415)
!14423 = !DILocalVariable(name: "__i", scope: !14424, file: !2251, line: 774, type: !13616)
!14424 = distinct !DILexicalBlock(scope: !14412, file: !2251, line: 774, column: 2)
!14425 = !DILocalVariable(name: "__key", scope: !14424, file: !2251, line: 774, type: !13616)
!14426 = !DILocation(line: 0, scope: !14412)
!14427 = !DILocation(line: 0, scope: !14424)
!14428 = !DILocation(line: 0, scope: !13624, inlinedAt: !14429)
!14429 = distinct !DILocation(line: 774, column: 2, scope: !14424)
!14430 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14431)
!14431 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14429)
!14432 = !DILocation(line: 0, scope: !13633, inlinedAt: !14431)
!14433 = !DILocation(line: 775, column: 3, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !2251, line: 774, column: 26)
!14435 = distinct !DILexicalBlock(scope: !14424, file: !2251, line: 774, column: 2)
!14436 = !DILocation(line: 0, scope: !13651, inlinedAt: !14437)
!14437 = distinct !DILocation(line: 774, column: 2, scope: !14435)
!14438 = !DILocation(line: 0, scope: !13659, inlinedAt: !14439)
!14439 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14437)
!14440 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14439)
!14441 = !DILocation(line: 777, column: 1, scope: !14412)
!14442 = distinct !DISubprogram(name: "pend_locked", scope: !2251, file: !2251, line: 760, type: !14413, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14443)
!14443 = !{!14444, !14445, !14446}
!14444 = !DILocalVariable(name: "thread", arg: 1, scope: !14442, file: !2251, line: 760, type: !2146)
!14445 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14442, file: !2251, line: 760, type: !2177)
!14446 = !DILocalVariable(name: "timeout", arg: 3, scope: !14442, file: !2251, line: 761, type: !14415)
!14447 = !DILocation(line: 0, scope: !14442)
!14448 = !DILocation(line: 766, column: 2, scope: !14442)
!14449 = !DILocation(line: 767, column: 2, scope: !14442)
!14450 = !DILocation(line: 768, column: 1, scope: !14442)
!14451 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2251, file: !2251, line: 740, type: !14452, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14454)
!14452 = !DISubroutineType(types: !14453)
!14453 = !{null, !2146, !2177}
!14454 = !{!14455, !14456}
!14455 = !DILocalVariable(name: "thread", arg: 1, scope: !14451, file: !2251, line: 740, type: !2146)
!14456 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14451, file: !2251, line: 740, type: !2177)
!14457 = !DILocation(line: 0, scope: !14451)
!14458 = !DILocation(line: 742, column: 2, scope: !14451)
!14459 = !DILocation(line: 743, column: 2, scope: !14451)
!14460 = !DILocation(line: 747, column: 13, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14451, file: !2251, line: 747, column: 6)
!14462 = !DILocation(line: 747, column: 6, scope: !14451)
!14463 = !DILocation(line: 748, column: 16, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14461, file: !2251, line: 747, column: 22)
!14465 = !DILocation(line: 748, column: 26, scope: !14464)
!14466 = !DILocation(line: 749, column: 28, scope: !14464)
!14467 = !DILocation(line: 0, scope: !13824, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 749, column: 3, scope: !14464)
!14469 = !DILocation(line: 188, column: 2, scope: !13834, inlinedAt: !14468)
!14470 = !DILocation(line: 188, column: 2, scope: !13836, inlinedAt: !14468)
!14471 = !DILocation(line: 0, scope: !13834, inlinedAt: !14468)
!14472 = !DILocation(line: 189, column: 7, scope: !13839, inlinedAt: !14468)
!14473 = !DILocation(line: 189, column: 35, scope: !13839, inlinedAt: !14468)
!14474 = !DILocation(line: 189, column: 7, scope: !13840, inlinedAt: !14468)
!14475 = !DILocation(line: 191, column: 21, scope: !13844, inlinedAt: !14468)
!14476 = !DILocation(line: 190, column: 4, scope: !13844, inlinedAt: !14468)
!14477 = !DILocation(line: 192, column: 4, scope: !13844, inlinedAt: !14468)
!14478 = distinct !{!14478, !14469, !14479}
!14479 = !DILocation(line: 194, column: 2, scope: !13834, inlinedAt: !14468)
!14480 = !DILocation(line: 196, column: 37, scope: !13824, inlinedAt: !14468)
!14481 = !DILocation(line: 196, column: 2, scope: !13824, inlinedAt: !14468)
!14482 = !DILocation(line: 197, column: 1, scope: !13824, inlinedAt: !14468)
!14483 = !DILocation(line: 751, column: 1, scope: !14451)
!14484 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2251, file: !2251, line: 753, type: !14485, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14487)
!14485 = !DISubroutineType(types: !14486)
!14486 = !{null, !2146, !14415}
!14487 = !{!14488, !14489}
!14488 = !DILocalVariable(name: "thread", arg: 1, scope: !14484, file: !2251, line: 753, type: !2146)
!14489 = !DILocalVariable(name: "timeout", arg: 2, scope: !14484, file: !2251, line: 753, type: !14415)
!14490 = !DILocation(line: 0, scope: !14484)
!14491 = !DILocation(line: 755, column: 7, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14484, file: !2251, line: 755, column: 6)
!14493 = !DILocation(line: 755, column: 6, scope: !14484)
!14494 = !DILocation(line: 756, column: 3, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14492, file: !2251, line: 755, column: 41)
!14496 = !DILocation(line: 757, column: 2, scope: !14495)
!14497 = !DILocation(line: 758, column: 1, scope: !14484)
!14498 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13290, file: !13290, line: 47, type: !14485, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14499)
!14499 = !{!14500, !14501}
!14500 = !DILocalVariable(name: "thread", arg: 1, scope: !14498, file: !13290, line: 47, type: !2146)
!14501 = !DILocalVariable(name: "ticks", arg: 2, scope: !14498, file: !13290, line: 47, type: !14415)
!14502 = !DILocation(line: 0, scope: !14498)
!14503 = !DILocation(line: 49, column: 30, scope: !14498)
!14504 = !DILocation(line: 49, column: 2, scope: !14498)
!14505 = !DILocation(line: 50, column: 1, scope: !14498)
!14506 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2251, file: !2251, line: 795, type: !2203, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14507)
!14507 = !{!14508, !14509, !14510, !14512, !14513}
!14508 = !DILocalVariable(name: "timeout", arg: 1, scope: !14506, file: !2251, line: 795, type: !2205)
!14509 = !DILocalVariable(name: "thread", scope: !14506, file: !2251, line: 797, type: !2146)
!14510 = !DILocalVariable(name: "__i", scope: !14511, file: !2251, line: 800, type: !13616)
!14511 = distinct !DILexicalBlock(scope: !14506, file: !2251, line: 800, column: 2)
!14512 = !DILocalVariable(name: "__key", scope: !14511, file: !2251, line: 800, type: !13616)
!14513 = !DILocalVariable(name: "killed", scope: !14514, file: !2251, line: 801, type: !211)
!14514 = distinct !DILexicalBlock(scope: !14515, file: !2251, line: 800, column: 26)
!14515 = distinct !DILexicalBlock(scope: !14511, file: !2251, line: 800, column: 2)
!14516 = !DILocation(line: 0, scope: !14506)
!14517 = !DILocation(line: 797, column: 28, scope: !14506)
!14518 = !DILocation(line: 0, scope: !14511)
!14519 = !DILocation(line: 0, scope: !13624, inlinedAt: !14520)
!14520 = distinct !DILocation(line: 800, column: 2, scope: !14511)
!14521 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14520)
!14523 = !DILocation(line: 0, scope: !13633, inlinedAt: !14522)
!14524 = !DILocation(line: 801, column: 27, scope: !14514)
!14525 = !DILocation(line: 801, column: 32, scope: !14514)
!14526 = !DILocation(line: 801, column: 61, scope: !14514)
!14527 = !DILocation(line: 0, scope: !14514)
!14528 = !DILocation(line: 804, column: 7, scope: !14514)
!14529 = !DILocation(line: 805, column: 21, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14531, file: !2251, line: 805, column: 8)
!14531 = distinct !DILexicalBlock(scope: !14532, file: !2251, line: 804, column: 16)
!14532 = distinct !DILexicalBlock(scope: !14514, file: !2251, line: 804, column: 7)
!14533 = !DILocation(line: 805, column: 31, scope: !14530)
!14534 = !DILocation(line: 805, column: 8, scope: !14531)
!14535 = !DILocation(line: 806, column: 5, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14530, file: !2251, line: 805, column: 40)
!14537 = !DILocation(line: 807, column: 4, scope: !14536)
!14538 = !DILocation(line: 808, column: 4, scope: !14531)
!14539 = !DILocation(line: 809, column: 4, scope: !14531)
!14540 = !DILocation(line: 810, column: 4, scope: !14531)
!14541 = !DILocation(line: 811, column: 3, scope: !14531)
!14542 = !DILocation(line: 0, scope: !13651, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 800, column: 2, scope: !14515)
!14544 = !DILocation(line: 0, scope: !13659, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14543)
!14546 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14545)
!14547 = !DILocation(line: 813, column: 1, scope: !14506)
!14548 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2251, file: !2251, line: 779, type: !13582, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14549)
!14549 = !{!14550}
!14550 = !DILocalVariable(name: "thread", arg: 1, scope: !14548, file: !2251, line: 779, type: !2146)
!14551 = !DILocation(line: 0, scope: !14548)
!14552 = !DILocation(line: 781, column: 2, scope: !14548)
!14553 = !DILocation(line: 782, column: 2, scope: !14548)
!14554 = !DILocation(line: 783, column: 15, scope: !14548)
!14555 = !DILocation(line: 783, column: 25, scope: !14548)
!14556 = !DILocation(line: 784, column: 1, scope: !14548)
!14557 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12896, file: !12896, line: 165, type: !13582, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14558)
!14558 = !{!14559}
!14559 = !DILocalVariable(name: "thread", arg: 1, scope: !14557, file: !12896, line: 165, type: !2146)
!14560 = !DILocation(line: 0, scope: !14557)
!14561 = !DILocation(line: 167, column: 15, scope: !14557)
!14562 = !DILocation(line: 167, column: 28, scope: !14557)
!14563 = !DILocation(line: 168, column: 1, scope: !14557)
!14564 = distinct !DISubprogram(name: "unready_thread", scope: !2251, file: !2251, line: 731, type: !13582, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14565)
!14565 = !{!14566}
!14566 = !DILocalVariable(name: "thread", arg: 1, scope: !14564, file: !2251, line: 731, type: !2146)
!14567 = !DILocation(line: 0, scope: !14564)
!14568 = !DILocation(line: 733, column: 6, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14564, file: !2251, line: 733, column: 6)
!14570 = !DILocation(line: 733, column: 6, scope: !14564)
!14571 = !DILocation(line: 0, scope: !13793, inlinedAt: !14572)
!14572 = distinct !DILocation(line: 734, column: 3, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14569, file: !2251, line: 733, column: 34)
!14574 = !DILocation(line: 266, column: 15, scope: !13793, inlinedAt: !14572)
!14575 = !DILocation(line: 266, column: 28, scope: !13793, inlinedAt: !14572)
!14576 = !DILocation(line: 0, scope: !13801, inlinedAt: !14577)
!14577 = distinct !DILocation(line: 268, column: 3, scope: !13805, inlinedAt: !14572)
!14578 = !DILocation(line: 234, column: 2, scope: !13801, inlinedAt: !14577)
!14579 = !DILocation(line: 735, column: 2, scope: !14573)
!14580 = !DILocation(line: 736, column: 25, scope: !14564)
!14581 = !DILocation(line: 736, column: 22, scope: !14564)
!14582 = !DILocation(line: 736, column: 2, scope: !14564)
!14583 = !DILocation(line: 737, column: 1, scope: !14564)
!14584 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12896, file: !12896, line: 160, type: !13582, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14585)
!14585 = !{!14586}
!14586 = !DILocalVariable(name: "thread", arg: 1, scope: !14584, file: !12896, line: 160, type: !2146)
!14587 = !DILocation(line: 0, scope: !14584)
!14588 = !DILocation(line: 162, column: 15, scope: !14584)
!14589 = !DILocation(line: 162, column: 28, scope: !14584)
!14590 = !DILocation(line: 163, column: 1, scope: !14584)
!14591 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2251, file: !2251, line: 786, type: !13582, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14592)
!14592 = !{!14593, !14594, !14596}
!14593 = !DILocalVariable(name: "thread", arg: 1, scope: !14591, file: !2251, line: 786, type: !2146)
!14594 = !DILocalVariable(name: "__i", scope: !14595, file: !2251, line: 788, type: !13616)
!14595 = distinct !DILexicalBlock(scope: !14591, file: !2251, line: 788, column: 2)
!14596 = !DILocalVariable(name: "__key", scope: !14595, file: !2251, line: 788, type: !13616)
!14597 = !DILocation(line: 0, scope: !14591)
!14598 = !DILocation(line: 0, scope: !14595)
!14599 = !DILocation(line: 0, scope: !13624, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 788, column: 2, scope: !14595)
!14601 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14602)
!14602 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14600)
!14603 = !DILocation(line: 0, scope: !13633, inlinedAt: !14602)
!14604 = !DILocation(line: 789, column: 3, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14606, file: !2251, line: 788, column: 26)
!14606 = distinct !DILexicalBlock(scope: !14595, file: !2251, line: 788, column: 2)
!14607 = !DILocation(line: 0, scope: !13651, inlinedAt: !14608)
!14608 = distinct !DILocation(line: 788, column: 2, scope: !14606)
!14609 = !DILocation(line: 0, scope: !13659, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14608)
!14611 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14610)
!14612 = !DILocation(line: 791, column: 1, scope: !14591)
!14613 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2251, file: !2251, line: 816, type: !14614, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14616)
!14614 = !DISubroutineType(types: !14615)
!14615 = !{!103, !137, !2177, !14415}
!14616 = !{!14617, !14618, !14619, !14620, !14621, !14623}
!14617 = !DILocalVariable(name: "key", arg: 1, scope: !14613, file: !2251, line: 816, type: !137)
!14618 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14613, file: !2251, line: 816, type: !2177)
!14619 = !DILocalVariable(name: "timeout", arg: 3, scope: !14613, file: !2251, line: 816, type: !14415)
!14620 = !DILocalVariable(name: "ret", scope: !14613, file: !2251, line: 828, type: !103)
!14621 = !DILocalVariable(name: "__i", scope: !14622, file: !2251, line: 829, type: !13616)
!14622 = distinct !DILexicalBlock(scope: !14613, file: !2251, line: 829, column: 2)
!14623 = !DILocalVariable(name: "__key", scope: !14622, file: !2251, line: 829, type: !13616)
!14624 = !DILocation(line: 0, scope: !14613)
!14625 = !DILocation(line: 823, column: 14, scope: !14613)
!14626 = !DILocation(line: 823, column: 2, scope: !14613)
!14627 = !DILocation(line: 826, column: 20, scope: !14613)
!14628 = !DILocation(line: 826, column: 18, scope: !14613)
!14629 = !DILocation(line: 828, column: 12, scope: !14613)
!14630 = !DILocation(line: 0, scope: !14622)
!14631 = !DILocation(line: 0, scope: !13624, inlinedAt: !14632)
!14632 = distinct !DILocation(line: 829, column: 2, scope: !14622)
!14633 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14634)
!14634 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14632)
!14635 = !DILocation(line: 0, scope: !13633, inlinedAt: !14634)
!14636 = !DILocation(line: 830, column: 7, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14638, file: !2251, line: 830, column: 7)
!14638 = distinct !DILexicalBlock(scope: !14639, file: !2251, line: 829, column: 26)
!14639 = distinct !DILexicalBlock(scope: !14622, file: !2251, line: 829, column: 2)
!14640 = !DILocation(line: 830, column: 26, scope: !14637)
!14641 = !DILocation(line: 830, column: 23, scope: !14637)
!14642 = !DILocation(line: 830, column: 7, scope: !14638)
!14643 = !DILocation(line: 831, column: 20, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14637, file: !2251, line: 830, column: 36)
!14645 = !DILocation(line: 832, column: 3, scope: !14644)
!14646 = !DILocation(line: 0, scope: !13651, inlinedAt: !14647)
!14647 = distinct !DILocation(line: 829, column: 2, scope: !14639)
!14648 = !DILocation(line: 0, scope: !13659, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14647)
!14650 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14649)
!14651 = !DILocation(line: 834, column: 2, scope: !14613)
!14652 = distinct !DISubprogram(name: "z_pend_curr", scope: !2251, file: !2251, line: 840, type: !14653, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14655)
!14653 = !DISubroutineType(types: !14654)
!14654 = !{!103, !13627, !13616, !2177, !14415}
!14655 = !{!14656, !14657, !14658, !14659}
!14656 = !DILocalVariable(name: "lock", arg: 1, scope: !14652, file: !2251, line: 840, type: !13627)
!14657 = !DILocalVariable(name: "key", arg: 2, scope: !14652, file: !2251, line: 840, type: !13616)
!14658 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14652, file: !2251, line: 841, type: !2177)
!14659 = !DILocalVariable(name: "timeout", arg: 4, scope: !14652, file: !2251, line: 841, type: !14415)
!14660 = !DILocation(line: 0, scope: !14652)
!14661 = !DILocation(line: 844, column: 20, scope: !14652)
!14662 = !DILocation(line: 844, column: 18, scope: !14652)
!14663 = !DILocation(line: 0, scope: !13624, inlinedAt: !14664)
!14664 = distinct !DILocation(line: 856, column: 9, scope: !14652)
!14665 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14664)
!14667 = !DILocation(line: 0, scope: !13633, inlinedAt: !14666)
!14668 = !DILocation(line: 857, column: 14, scope: !14652)
!14669 = !DILocation(line: 857, column: 2, scope: !14652)
!14670 = !DILocation(line: 0, scope: !14235, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 859, column: 9, scope: !14652)
!14672 = !DILocation(line: 196, column: 9, scope: !14235, inlinedAt: !14671)
!14673 = !DILocation(line: 859, column: 2, scope: !14652)
!14674 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2251, file: !2251, line: 862, type: !14675, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14677)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{!2146, !2177}
!14677 = !{!14678, !14679, !14680, !14682}
!14678 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14674, file: !2251, line: 862, type: !2177)
!14679 = !DILocalVariable(name: "thread", scope: !14674, file: !2251, line: 864, type: !2146)
!14680 = !DILocalVariable(name: "__i", scope: !14681, file: !2251, line: 866, type: !13616)
!14681 = distinct !DILexicalBlock(scope: !14674, file: !2251, line: 866, column: 2)
!14682 = !DILocalVariable(name: "__key", scope: !14681, file: !2251, line: 866, type: !13616)
!14683 = !DILocation(line: 0, scope: !14674)
!14684 = !DILocation(line: 0, scope: !14681)
!14685 = !DILocation(line: 0, scope: !13624, inlinedAt: !14686)
!14686 = distinct !DILocation(line: 866, column: 2, scope: !14681)
!14687 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14686)
!14689 = !DILocation(line: 0, scope: !13633, inlinedAt: !14688)
!14690 = !DILocation(line: 867, column: 12, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14692, file: !2251, line: 866, column: 26)
!14692 = distinct !DILexicalBlock(scope: !14681, file: !2251, line: 866, column: 2)
!14693 = !DILocation(line: 869, column: 14, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14691, file: !2251, line: 869, column: 7)
!14695 = !DILocation(line: 869, column: 7, scope: !14691)
!14696 = !DILocation(line: 870, column: 4, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14694, file: !2251, line: 869, column: 23)
!14698 = !DILocation(line: 871, column: 3, scope: !14697)
!14699 = !DILocation(line: 0, scope: !13651, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 866, column: 2, scope: !14692)
!14701 = !DILocation(line: 0, scope: !13659, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14700)
!14703 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14702)
!14704 = !DILocation(line: 874, column: 2, scope: !14674)
!14705 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2251, file: !2251, line: 877, type: !14675, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14706)
!14706 = !{!14707, !14708, !14709, !14711}
!14707 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14705, file: !2251, line: 877, type: !2177)
!14708 = !DILocalVariable(name: "thread", scope: !14705, file: !2251, line: 879, type: !2146)
!14709 = !DILocalVariable(name: "__i", scope: !14710, file: !2251, line: 881, type: !13616)
!14710 = distinct !DILexicalBlock(scope: !14705, file: !2251, line: 881, column: 2)
!14711 = !DILocalVariable(name: "__key", scope: !14710, file: !2251, line: 881, type: !13616)
!14712 = !DILocation(line: 0, scope: !14705)
!14713 = !DILocation(line: 0, scope: !14710)
!14714 = !DILocation(line: 0, scope: !13624, inlinedAt: !14715)
!14715 = distinct !DILocation(line: 881, column: 2, scope: !14710)
!14716 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14717)
!14717 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14715)
!14718 = !DILocation(line: 0, scope: !13633, inlinedAt: !14717)
!14719 = !DILocation(line: 882, column: 12, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !2251, line: 881, column: 26)
!14721 = distinct !DILexicalBlock(scope: !14710, file: !2251, line: 881, column: 2)
!14722 = !DILocation(line: 884, column: 14, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14720, file: !2251, line: 884, column: 7)
!14724 = !DILocation(line: 884, column: 7, scope: !14720)
!14725 = !DILocation(line: 885, column: 4, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14723, file: !2251, line: 884, column: 23)
!14727 = !DILocation(line: 886, column: 10, scope: !14726)
!14728 = !DILocation(line: 887, column: 3, scope: !14726)
!14729 = !DILocation(line: 0, scope: !13651, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 881, column: 2, scope: !14721)
!14731 = !DILocation(line: 0, scope: !13659, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14730)
!14733 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14732)
!14734 = !DILocation(line: 890, column: 2, scope: !14705)
!14735 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2251, file: !2251, line: 893, type: !13582, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14736)
!14736 = !{!14737}
!14737 = !DILocalVariable(name: "thread", arg: 1, scope: !14735, file: !2251, line: 893, type: !2146)
!14738 = !DILocation(line: 0, scope: !14735)
!14739 = !DILocation(line: 0, scope: !14591, inlinedAt: !14740)
!14740 = distinct !DILocation(line: 895, column: 2, scope: !14735)
!14741 = !DILocation(line: 0, scope: !14595, inlinedAt: !14740)
!14742 = !DILocation(line: 0, scope: !13624, inlinedAt: !14743)
!14743 = distinct !DILocation(line: 788, column: 2, scope: !14595, inlinedAt: !14740)
!14744 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14745)
!14745 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14743)
!14746 = !DILocation(line: 0, scope: !13633, inlinedAt: !14745)
!14747 = !DILocation(line: 789, column: 3, scope: !14605, inlinedAt: !14740)
!14748 = !DILocation(line: 0, scope: !13651, inlinedAt: !14749)
!14749 = distinct !DILocation(line: 788, column: 2, scope: !14606, inlinedAt: !14740)
!14750 = !DILocation(line: 0, scope: !13659, inlinedAt: !14751)
!14751 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14749)
!14752 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14751)
!14753 = !DILocation(line: 896, column: 8, scope: !14735)
!14754 = !DILocation(line: 897, column: 1, scope: !14735)
!14755 = distinct !DISubprogram(name: "z_set_prio", scope: !2251, file: !2251, line: 902, type: !13944, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14756)
!14756 = !{!14757, !14758, !14759, !14760, !14762}
!14757 = !DILocalVariable(name: "thread", arg: 1, scope: !14755, file: !2251, line: 902, type: !2146)
!14758 = !DILocalVariable(name: "prio", arg: 2, scope: !14755, file: !2251, line: 902, type: !103)
!14759 = !DILocalVariable(name: "need_sched", scope: !14755, file: !2251, line: 904, type: !211)
!14760 = !DILocalVariable(name: "__i", scope: !14761, file: !2251, line: 906, type: !13616)
!14761 = distinct !DILexicalBlock(scope: !14755, file: !2251, line: 906, column: 2)
!14762 = !DILocalVariable(name: "__key", scope: !14761, file: !2251, line: 906, type: !13616)
!14763 = !DILocation(line: 0, scope: !14755)
!14764 = !DILocation(line: 0, scope: !14761)
!14765 = !DILocation(line: 0, scope: !13624, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 906, column: 2, scope: !14761)
!14767 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14766)
!14769 = !DILocation(line: 0, scope: !13633, inlinedAt: !14768)
!14770 = !DILocation(line: 907, column: 16, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14772, file: !2251, line: 906, column: 26)
!14772 = distinct !DILexicalBlock(scope: !14761, file: !2251, line: 906, column: 2)
!14773 = !DILocation(line: 909, column: 7, scope: !14771)
!14774 = !DILocation(line: 0, scope: !13793, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 912, column: 5, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14777, file: !2251, line: 911, column: 63)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !2251, line: 911, column: 8)
!14778 = distinct !DILexicalBlock(scope: !14779, file: !2251, line: 909, column: 19)
!14779 = distinct !DILexicalBlock(scope: !14771, file: !2251, line: 909, column: 7)
!14780 = !DILocation(line: 266, column: 28, scope: !13793, inlinedAt: !14775)
!14781 = !DILocation(line: 0, scope: !13801, inlinedAt: !14782)
!14782 = distinct !DILocation(line: 268, column: 3, scope: !13805, inlinedAt: !14775)
!14783 = !DILocation(line: 234, column: 2, scope: !13801, inlinedAt: !14782)
!14784 = !DILocation(line: 913, column: 23, scope: !14776)
!14785 = !DILocation(line: 0, scope: !13810, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 914, column: 5, scope: !14776)
!14787 = !DILocation(line: 252, column: 28, scope: !13810, inlinedAt: !14786)
!14788 = !DILocation(line: 0, scope: !13817, inlinedAt: !14789)
!14789 = distinct !DILocation(line: 254, column: 3, scope: !13821, inlinedAt: !14786)
!14790 = !DILocation(line: 0, scope: !13824, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 229, column: 2, scope: !13817, inlinedAt: !14789)
!14792 = !DILocation(line: 188, column: 2, scope: !13834, inlinedAt: !14791)
!14793 = !DILocation(line: 188, column: 2, scope: !13836, inlinedAt: !14791)
!14794 = !DILocation(line: 0, scope: !13834, inlinedAt: !14791)
!14795 = !DILocation(line: 189, column: 7, scope: !13839, inlinedAt: !14791)
!14796 = !DILocation(line: 189, column: 35, scope: !13839, inlinedAt: !14791)
!14797 = !DILocation(line: 189, column: 7, scope: !13840, inlinedAt: !14791)
!14798 = !DILocation(line: 190, column: 4, scope: !13844, inlinedAt: !14791)
!14799 = !DILocation(line: 192, column: 4, scope: !13844, inlinedAt: !14791)
!14800 = distinct !{!14800, !14792, !14801}
!14801 = !DILocation(line: 194, column: 2, scope: !13834, inlinedAt: !14791)
!14802 = !DILocation(line: 196, column: 2, scope: !13824, inlinedAt: !14791)
!14803 = !DILocation(line: 197, column: 1, scope: !13824, inlinedAt: !14791)
!14804 = !DILocation(line: 918, column: 4, scope: !14778)
!14805 = !DILocation(line: 919, column: 3, scope: !14778)
!14806 = !DILocation(line: 920, column: 22, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14779, file: !2251, line: 919, column: 10)
!14808 = !DILocation(line: 0, scope: !13651, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 906, column: 2, scope: !14772)
!14810 = !DILocation(line: 0, scope: !13659, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14809)
!14812 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14811)
!14813 = !DILocation(line: 926, column: 2, scope: !14755)
!14814 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2251, file: !2251, line: 929, type: !14815, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14817)
!14815 = !DISubroutineType(types: !14816)
!14816 = !{null, !2146, !103}
!14817 = !{!14818, !14819, !14820}
!14818 = !DILocalVariable(name: "thread", arg: 1, scope: !14814, file: !2251, line: 929, type: !2146)
!14819 = !DILocalVariable(name: "prio", arg: 2, scope: !14814, file: !2251, line: 929, type: !103)
!14820 = !DILocalVariable(name: "need_sched", scope: !14814, file: !2251, line: 931, type: !211)
!14821 = !DILocation(line: 0, scope: !14814)
!14822 = !DILocation(line: 931, column: 20, scope: !14814)
!14823 = !DILocation(line: 935, column: 17, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14814, file: !2251, line: 935, column: 6)
!14825 = !DILocation(line: 935, column: 20, scope: !14824)
!14826 = !DILocation(line: 935, column: 35, scope: !14824)
!14827 = !DILocation(line: 935, column: 48, scope: !14824)
!14828 = !DILocation(line: 935, column: 6, scope: !14814)
!14829 = !DILocation(line: 936, column: 3, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14824, file: !2251, line: 935, column: 55)
!14831 = !DILocation(line: 937, column: 2, scope: !14830)
!14832 = !DILocation(line: 938, column: 1, scope: !14814)
!14833 = distinct !DISubprogram(name: "k_sched_lock", scope: !2251, file: !2251, line: 987, type: !2885, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14834)
!14834 = !{!14835, !14837}
!14835 = !DILocalVariable(name: "__i", scope: !14836, file: !2251, line: 989, type: !13616)
!14836 = distinct !DILexicalBlock(scope: !14833, file: !2251, line: 989, column: 2)
!14837 = !DILocalVariable(name: "__key", scope: !14836, file: !2251, line: 989, type: !13616)
!14838 = !DILocation(line: 0, scope: !14836)
!14839 = !DILocation(line: 0, scope: !13624, inlinedAt: !14840)
!14840 = distinct !DILocation(line: 989, column: 2, scope: !14836)
!14841 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14842)
!14842 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14840)
!14843 = !DILocation(line: 0, scope: !13633, inlinedAt: !14842)
!14844 = !DILocation(line: 992, column: 3, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !2251, line: 989, column: 26)
!14846 = distinct !DILexicalBlock(scope: !14836, file: !2251, line: 989, column: 2)
!14847 = !DILocation(line: 0, scope: !13651, inlinedAt: !14848)
!14848 = distinct !DILocation(line: 989, column: 2, scope: !14846)
!14849 = !DILocation(line: 0, scope: !13659, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14848)
!14851 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14850)
!14852 = !DILocation(line: 994, column: 1, scope: !14833)
!14853 = distinct !DISubprogram(name: "z_sched_lock", scope: !12896, file: !12896, line: 251, type: !2885, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!14854 = !DILocation(line: 256, column: 4, scope: !14853)
!14855 = !DILocation(line: 256, column: 19, scope: !14853)
!14856 = !DILocation(line: 256, column: 2, scope: !14853)
!14857 = !DILocation(line: 258, column: 2, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14853, file: !12896, line: 258, column: 2)
!14859 = !{i64 2155185841}
!14860 = !DILocation(line: 259, column: 1, scope: !14853)
!14861 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2251, file: !2251, line: 996, type: !2885, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14862)
!14862 = !{!14863, !14865}
!14863 = !DILocalVariable(name: "__i", scope: !14864, file: !2251, line: 998, type: !13616)
!14864 = distinct !DILexicalBlock(scope: !14861, file: !2251, line: 998, column: 2)
!14865 = !DILocalVariable(name: "__key", scope: !14864, file: !2251, line: 998, type: !13616)
!14866 = !DILocation(line: 0, scope: !14864)
!14867 = !DILocation(line: 0, scope: !13624, inlinedAt: !14868)
!14868 = distinct !DILocation(line: 998, column: 2, scope: !14864)
!14869 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !14868)
!14871 = !DILocation(line: 0, scope: !13633, inlinedAt: !14870)
!14872 = !DILocation(line: 1002, column: 5, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14874, file: !2251, line: 998, column: 26)
!14874 = distinct !DILexicalBlock(scope: !14864, file: !2251, line: 998, column: 2)
!14875 = !DILocation(line: 1002, column: 20, scope: !14873)
!14876 = !DILocation(line: 1002, column: 3, scope: !14873)
!14877 = !DILocation(line: 1003, column: 3, scope: !14873)
!14878 = !DILocation(line: 0, scope: !13651, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 998, column: 2, scope: !14874)
!14880 = !DILocation(line: 0, scope: !13659, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !14879)
!14882 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !14881)
!14883 = !DILocation(line: 1011, column: 2, scope: !14861)
!14884 = !DILocation(line: 1012, column: 1, scope: !14861)
!14885 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2251, file: !2251, line: 1014, type: !13932, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!14886 = !DILocation(line: 1028, column: 25, scope: !14885)
!14887 = !DILocation(line: 1028, column: 2, scope: !14885)
!14888 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2251, file: !2251, line: 1155, type: !14889, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14891)
!14889 = !DISubroutineType(types: !14890)
!14890 = !{!211, !2175, !2175}
!14891 = !{!14892, !14893, !14894, !14895, !14896}
!14892 = !DILocalVariable(name: "a", arg: 1, scope: !14888, file: !2251, line: 1155, type: !2175)
!14893 = !DILocalVariable(name: "b", arg: 2, scope: !14888, file: !2251, line: 1155, type: !2175)
!14894 = !DILocalVariable(name: "thread_a", scope: !14888, file: !2251, line: 1157, type: !2146)
!14895 = !DILocalVariable(name: "thread_b", scope: !14888, file: !2251, line: 1157, type: !2146)
!14896 = !DILocalVariable(name: "cmp", scope: !14888, file: !2251, line: 1158, type: !641)
!14897 = !DILocation(line: 0, scope: !14888)
!14898 = !DILocation(line: 1160, column: 13, scope: !14888)
!14899 = !DILocation(line: 1161, column: 13, scope: !14888)
!14900 = !DILocation(line: 1163, column: 8, scope: !14888)
!14901 = !DILocation(line: 1165, column: 10, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14888, file: !2251, line: 1165, column: 6)
!14903 = !DILocation(line: 1165, column: 6, scope: !14888)
!14904 = !DILocation(line: 1167, column: 17, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14902, file: !2251, line: 1167, column: 13)
!14906 = !DILocation(line: 1167, column: 13, scope: !14902)
!14907 = !DILocation(line: 1170, column: 25, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14905, file: !2251, line: 1169, column: 9)
!14909 = !DILocation(line: 1170, column: 52, scope: !14908)
!14910 = !DILocation(line: 1170, column: 35, scope: !14908)
!14911 = !DILocation(line: 1170, column: 3, scope: !14908)
!14912 = !DILocation(line: 0, scope: !14902)
!14913 = !DILocation(line: 1173, column: 1, scope: !14888)
!14914 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2251, file: !2251, line: 1175, type: !14915, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14930)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{null, !14917, !2146}
!14917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14918, size: 32)
!14918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14919, line: 37, size: 128, elements: !14920)
!14919 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14920 = !{!14921, !14929}
!14921 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14918, file: !14919, line: 38, baseType: !14922, size: 96)
!14922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !289, line: 83, size: 96, elements: !14923)
!14923 = !{!14924, !14925, !14928}
!14924 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14922, file: !289, line: 84, baseType: !2175, size: 32)
!14925 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14922, file: !289, line: 85, baseType: !14926, size: 32, offset: 32)
!14926 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !289, line: 81, baseType: !14927)
!14927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14889, size: 32)
!14928 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14922, file: !289, line: 86, baseType: !103, size: 32, offset: 64)
!14929 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14918, file: !14919, line: 39, baseType: !103, size: 32, offset: 96)
!14930 = !{!14931, !14932, !14933, !14934, !14943}
!14931 = !DILocalVariable(name: "pq", arg: 1, scope: !14914, file: !2251, line: 1175, type: !14917)
!14932 = !DILocalVariable(name: "thread", arg: 2, scope: !14914, file: !2251, line: 1175, type: !2146)
!14933 = !DILocalVariable(name: "t", scope: !14914, file: !2251, line: 1177, type: !2146)
!14934 = !DILocalVariable(name: "__f", scope: !14935, file: !2251, line: 1190, type: !14938)
!14935 = distinct !DILexicalBlock(scope: !14936, file: !2251, line: 1190, column: 3)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !2251, line: 1189, column: 27)
!14937 = distinct !DILexicalBlock(scope: !14914, file: !2251, line: 1189, column: 6)
!14938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !289, line: 155, size: 96, elements: !14939)
!14939 = !{!14940, !14941, !14942}
!14940 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14938, file: !289, line: 156, baseType: !2246, size: 32)
!14941 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14938, file: !289, line: 157, baseType: !1796, size: 32, offset: 32)
!14942 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14938, file: !289, line: 158, baseType: !641, size: 32, offset: 64)
!14943 = !DILocalVariable(name: "n", scope: !14944, file: !2251, line: 1190, type: !2175)
!14944 = distinct !DILexicalBlock(scope: !14945, file: !2251, line: 1190, column: 3)
!14945 = distinct !DILexicalBlock(scope: !14935, file: !2251, line: 1190, column: 3)
!14946 = !DILocation(line: 0, scope: !14914)
!14947 = !DILocation(line: 1181, column: 31, scope: !14914)
!14948 = !DILocation(line: 1181, column: 45, scope: !14914)
!14949 = !DILocation(line: 1181, column: 15, scope: !14914)
!14950 = !DILocation(line: 1181, column: 25, scope: !14914)
!14951 = !DILocation(line: 1189, column: 11, scope: !14937)
!14952 = !DILocation(line: 1189, column: 7, scope: !14937)
!14953 = !DILocation(line: 1189, column: 6, scope: !14914)
!14954 = !DILocation(line: 1190, column: 3, scope: !14935)
!14955 = !DILocation(line: 1190, column: 3, scope: !14944)
!14956 = !DILocation(line: 0, scope: !14944)
!14957 = !DILocation(line: 1190, column: 3, scope: !14945)
!14958 = !DILocation(line: 1193, column: 2, scope: !14936)
!14959 = !DILocation(line: 1191, column: 42, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14945, file: !2251, line: 1190, column: 54)
!14961 = !DILocation(line: 1191, column: 12, scope: !14960)
!14962 = !DILocation(line: 1191, column: 22, scope: !14960)
!14963 = distinct !{!14963, !14954, !14964}
!14964 = !DILocation(line: 1192, column: 3, scope: !14935)
!14965 = !DILocation(line: 1195, column: 17, scope: !14914)
!14966 = !DILocation(line: 1195, column: 37, scope: !14914)
!14967 = !DILocation(line: 1195, column: 2, scope: !14914)
!14968 = !DILocation(line: 1196, column: 1, scope: !14914)
!14969 = !DISubprogram(name: "z_rb_foreach_next", scope: !289, file: !289, line: 176, type: !14970, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14970 = !DISubroutineType(types: !14971)
!14971 = !{!2175, !14972, !14973}
!14972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14922, size: 32)
!14973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14938, size: 32)
!14974 = !DISubprogram(name: "rb_insert", scope: !289, file: !289, line: 105, type: !14975, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{null, !14972, !2175}
!14977 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2251, file: !2251, line: 1198, type: !14915, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14978)
!14978 = !{!14979, !14980}
!14979 = !DILocalVariable(name: "pq", arg: 1, scope: !14977, file: !2251, line: 1198, type: !14917)
!14980 = !DILocalVariable(name: "thread", arg: 2, scope: !14977, file: !2251, line: 1198, type: !2146)
!14981 = !DILocation(line: 0, scope: !14977)
!14982 = !DILocation(line: 1202, column: 17, scope: !14977)
!14983 = !DILocation(line: 1202, column: 37, scope: !14977)
!14984 = !DILocation(line: 1202, column: 2, scope: !14977)
!14985 = !DILocation(line: 1204, column: 16, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14977, file: !2251, line: 1204, column: 6)
!14987 = !DILocation(line: 1204, column: 7, scope: !14986)
!14988 = !DILocation(line: 1204, column: 6, scope: !14977)
!14989 = !DILocation(line: 1205, column: 7, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14986, file: !2251, line: 1204, column: 22)
!14991 = !DILocation(line: 1205, column: 22, scope: !14990)
!14992 = !DILocation(line: 1206, column: 2, scope: !14990)
!14993 = !DILocation(line: 1207, column: 1, scope: !14977)
!14994 = !DISubprogram(name: "rb_remove", scope: !289, file: !289, line: 110, type: !14975, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14995 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2251, file: !2251, line: 1209, type: !14996, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14998)
!14996 = !DISubroutineType(types: !14997)
!14997 = !{!2146, !14917}
!14998 = !{!14999, !15000, !15001}
!14999 = !DILocalVariable(name: "pq", arg: 1, scope: !14995, file: !2251, line: 1209, type: !14917)
!15000 = !DILocalVariable(name: "thread", scope: !14995, file: !2251, line: 1211, type: !2146)
!15001 = !DILocalVariable(name: "n", scope: !14995, file: !2251, line: 1212, type: !2175)
!15002 = !DILocation(line: 0, scope: !14995)
!15003 = !DILocation(line: 1212, column: 37, scope: !14995)
!15004 = !DILocation(line: 1212, column: 21, scope: !14995)
!15005 = !DILocation(line: 1217, column: 2, scope: !14995)
!15006 = distinct !DISubprogram(name: "rb_get_min", scope: !289, file: !289, line: 115, type: !15007, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15009)
!15007 = !DISubroutineType(types: !15008)
!15008 = !{!2175, !14972}
!15009 = !{!15010}
!15010 = !DILocalVariable(name: "tree", arg: 1, scope: !15006, file: !289, line: 115, type: !14972)
!15011 = !DILocation(line: 0, scope: !15006)
!15012 = !DILocation(line: 117, column: 9, scope: !15006)
!15013 = !DILocation(line: 117, column: 2, scope: !15006)
!15014 = !DISubprogram(name: "z_rb_get_minmax", scope: !289, file: !289, line: 100, type: !15015, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!15015 = !DISubroutineType(types: !15016)
!15016 = !{!2175, !14972, !208}
!15017 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2251, file: !2251, line: 1246, type: !15018, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15028)
!15018 = !DISubroutineType(types: !15019)
!15019 = !{!2146, !15020}
!15020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15021, size: 32)
!15021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14919, line: 53, size: 2080, elements: !15022)
!15022 = !{!15023, !15027}
!15023 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15021, file: !14919, line: 54, baseType: !15024, size: 2048)
!15024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2182, size: 2048, elements: !15025)
!15025 = !{!15026}
!15026 = !DISubrange(count: 32)
!15027 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15021, file: !14919, line: 55, baseType: !32, size: 32, offset: 2048)
!15028 = !{!15029, !15030, !15031, !15032}
!15029 = !DILocalVariable(name: "pq", arg: 1, scope: !15017, file: !2251, line: 1246, type: !15020)
!15030 = !DILocalVariable(name: "thread", scope: !15017, file: !2251, line: 1252, type: !2146)
!15031 = !DILocalVariable(name: "l", scope: !15017, file: !2251, line: 1253, type: !13827)
!15032 = !DILocalVariable(name: "n", scope: !15017, file: !2251, line: 1254, type: !2247)
!15033 = !DILocation(line: 0, scope: !15017)
!15034 = !DILocation(line: 1248, column: 11, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15017, file: !2251, line: 1248, column: 6)
!15036 = !DILocation(line: 1248, column: 7, scope: !15035)
!15037 = !DILocation(line: 1248, column: 6, scope: !15017)
!15038 = !DILocation(line: 1253, column: 31, scope: !15017)
!15039 = !DILocation(line: 1253, column: 20, scope: !15017)
!15040 = !DILocation(line: 1254, column: 19, scope: !15017)
!15041 = !DILocation(line: 1260, column: 1, scope: !15017)
!15042 = distinct !DISubprogram(name: "z_unpend_all", scope: !2251, file: !2251, line: 1262, type: !15043, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15045)
!15043 = !DISubroutineType(types: !15044)
!15044 = !{!103, !2177}
!15045 = !{!15046, !15047, !15048}
!15046 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15042, file: !2251, line: 1262, type: !2177)
!15047 = !DILocalVariable(name: "need_sched", scope: !15042, file: !2251, line: 1264, type: !103)
!15048 = !DILocalVariable(name: "thread", scope: !15042, file: !2251, line: 1265, type: !2146)
!15049 = !DILocation(line: 0, scope: !15042)
!15050 = !DILocation(line: 1267, column: 19, scope: !15042)
!15051 = !DILocation(line: 1267, column: 41, scope: !15042)
!15052 = !DILocation(line: 1267, column: 2, scope: !15042)
!15053 = !DILocation(line: 1268, column: 3, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !15042, file: !2251, line: 1267, column: 50)
!15055 = !DILocation(line: 1269, column: 3, scope: !15054)
!15056 = distinct !{!15056, !15052, !15057}
!15057 = !DILocation(line: 1271, column: 2, scope: !15042)
!15058 = !DILocation(line: 1273, column: 2, scope: !15042)
!15059 = distinct !DISubprogram(name: "z_waitq_head", scope: !13222, file: !13222, line: 52, type: !14675, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15060)
!15060 = !{!15061}
!15061 = !DILocalVariable(name: "w", arg: 1, scope: !15059, file: !13222, line: 52, type: !2177)
!15062 = !DILocation(line: 0, scope: !15059)
!15063 = !DILocation(line: 54, column: 52, scope: !15059)
!15064 = !DILocation(line: 54, column: 28, scope: !15059)
!15065 = !DILocation(line: 54, column: 9, scope: !15059)
!15066 = !DILocation(line: 54, column: 2, scope: !15059)
!15067 = distinct !DISubprogram(name: "init_ready_q", scope: !2251, file: !2251, line: 1276, type: !15068, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15075)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{null, !15070}
!15070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15071, size: 32)
!15071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !15072)
!15072 = !{!15073, !15074}
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15071, file: !299, line: 86, baseType: !2146, size: 32)
!15074 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15071, file: !299, line: 90, baseType: !2182, size: 64, offset: 32)
!15075 = !{!15076}
!15076 = !DILocalVariable(name: "rq", arg: 1, scope: !15067, file: !2251, line: 1276, type: !15070)
!15077 = !DILocation(line: 0, scope: !15067)
!15078 = !DILocation(line: 1289, column: 22, scope: !15067)
!15079 = !DILocation(line: 1289, column: 2, scope: !15067)
!15080 = !DILocation(line: 1291, column: 1, scope: !15067)
!15081 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !15082, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15084)
!15082 = !DISubroutineType(types: !15083)
!15083 = !{null, !13827}
!15084 = !{!15085}
!15085 = !DILocalVariable(name: "list", arg: 1, scope: !15081, file: !273, line: 197, type: !13827)
!15086 = !DILocation(line: 0, scope: !15081)
!15087 = !DILocation(line: 199, column: 8, scope: !15081)
!15088 = !DILocation(line: 199, column: 13, scope: !15081)
!15089 = !DILocation(line: 200, column: 8, scope: !15081)
!15090 = !DILocation(line: 200, column: 13, scope: !15081)
!15091 = !DILocation(line: 201, column: 1, scope: !15081)
!15092 = distinct !DISubprogram(name: "z_sched_init", scope: !2251, file: !2251, line: 1293, type: !2885, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!15093 = !DILocation(line: 1302, column: 2, scope: !15092)
!15094 = !DILocation(line: 1306, column: 2, scope: !15092)
!15095 = !DILocation(line: 1309, column: 1, scope: !15092)
!15096 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2251, file: !2251, line: 1311, type: !15097, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15100)
!15097 = !DISubroutineType(types: !15098)
!15098 = !{!103, !15099}
!15099 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2146)
!15100 = !{!15101}
!15101 = !DILocalVariable(name: "thread", arg: 1, scope: !15096, file: !2251, line: 1311, type: !15099)
!15102 = !DILocation(line: 0, scope: !15096)
!15103 = !DILocation(line: 1313, column: 22, scope: !15096)
!15104 = !DILocation(line: 1313, column: 9, scope: !15096)
!15105 = !DILocation(line: 1313, column: 2, scope: !15096)
!15106 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2251, file: !2251, line: 1325, type: !15107, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15109)
!15107 = !DISubroutineType(types: !15108)
!15108 = !{null, !15099, !103}
!15109 = !{!15110, !15111, !15112}
!15110 = !DILocalVariable(name: "thread", arg: 1, scope: !15106, file: !2251, line: 1325, type: !15099)
!15111 = !DILocalVariable(name: "prio", arg: 2, scope: !15106, file: !2251, line: 1325, type: !103)
!15112 = !DILocalVariable(name: "th", scope: !15106, file: !2251, line: 1334, type: !2146)
!15113 = !DILocation(line: 0, scope: !15106)
!15114 = !DILocation(line: 1336, column: 2, scope: !15106)
!15115 = !DILocation(line: 1337, column: 1, scope: !15106)
!15116 = distinct !DISubprogram(name: "k_can_yield", scope: !2251, file: !2251, line: 1384, type: !7160, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!15117 = !DILocation(line: 1386, column: 11, scope: !15116)
!15118 = !DILocation(line: 1386, column: 29, scope: !15116)
!15119 = !DILocation(line: 1386, column: 32, scope: !15116)
!15120 = !DILocation(line: 1386, column: 46, scope: !15116)
!15121 = !DILocation(line: 1387, column: 28, scope: !15116)
!15122 = !DILocation(line: 1387, column: 4, scope: !15116)
!15123 = !DILocation(line: 1386, column: 2, scope: !15116)
!15124 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !357, file: !357, line: 989, type: !7160, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!15125 = !DILocation(line: 993, column: 10, scope: !15124)
!15126 = !DILocation(line: 993, column: 2, scope: !15124)
!15127 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2251, file: !2251, line: 1390, type: !2885, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15128)
!15128 = !{!15129}
!15129 = !DILocalVariable(name: "key", scope: !15127, file: !2251, line: 1396, type: !13616)
!15130 = !DILocation(line: 0, scope: !13624, inlinedAt: !15131)
!15131 = distinct !DILocation(line: 1396, column: 25, scope: !15127)
!15132 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !15133)
!15133 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !15131)
!15134 = !DILocation(line: 0, scope: !13633, inlinedAt: !15133)
!15135 = !DILocation(line: 0, scope: !15127)
!15136 = !DILocation(line: 1400, column: 18, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !15138, file: !2251, line: 1399, column: 36)
!15138 = distinct !DILexicalBlock(scope: !15127, file: !2251, line: 1398, column: 6)
!15139 = !DILocation(line: 0, scope: !13793, inlinedAt: !15140)
!15140 = distinct !DILocation(line: 1400, column: 3, scope: !15137)
!15141 = !DILocation(line: 266, column: 15, scope: !13793, inlinedAt: !15140)
!15142 = !DILocation(line: 266, column: 28, scope: !13793, inlinedAt: !15140)
!15143 = !DILocation(line: 0, scope: !13801, inlinedAt: !15144)
!15144 = distinct !DILocation(line: 268, column: 3, scope: !13805, inlinedAt: !15140)
!15145 = !DILocation(line: 234, column: 2, scope: !13801, inlinedAt: !15144)
!15146 = !DILocation(line: 1402, column: 15, scope: !15127)
!15147 = !DILocation(line: 0, scope: !13810, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 1402, column: 2, scope: !15127)
!15149 = !DILocation(line: 252, column: 15, scope: !13810, inlinedAt: !15148)
!15150 = !DILocation(line: 252, column: 28, scope: !13810, inlinedAt: !15148)
!15151 = !DILocation(line: 0, scope: !13817, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 254, column: 3, scope: !13821, inlinedAt: !15148)
!15153 = !DILocation(line: 0, scope: !13824, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 229, column: 2, scope: !13817, inlinedAt: !15152)
!15155 = !DILocation(line: 188, column: 2, scope: !13834, inlinedAt: !15154)
!15156 = !DILocation(line: 188, column: 2, scope: !13836, inlinedAt: !15154)
!15157 = !DILocation(line: 0, scope: !13834, inlinedAt: !15154)
!15158 = !DILocation(line: 189, column: 7, scope: !13839, inlinedAt: !15154)
!15159 = !DILocation(line: 189, column: 35, scope: !13839, inlinedAt: !15154)
!15160 = !DILocation(line: 189, column: 7, scope: !13840, inlinedAt: !15154)
!15161 = !DILocation(line: 191, column: 21, scope: !13844, inlinedAt: !15154)
!15162 = !DILocation(line: 190, column: 4, scope: !13844, inlinedAt: !15154)
!15163 = !DILocation(line: 192, column: 4, scope: !13844, inlinedAt: !15154)
!15164 = distinct !{!15164, !15155, !15165}
!15165 = !DILocation(line: 194, column: 2, scope: !13834, inlinedAt: !15154)
!15166 = !DILocation(line: 196, column: 37, scope: !13824, inlinedAt: !15154)
!15167 = !DILocation(line: 196, column: 2, scope: !13824, inlinedAt: !15154)
!15168 = !DILocation(line: 197, column: 1, scope: !13824, inlinedAt: !15154)
!15169 = !DILocation(line: 1403, column: 2, scope: !15127)
!15170 = !DILocation(line: 0, scope: !14235, inlinedAt: !15171)
!15171 = distinct !DILocation(line: 1404, column: 2, scope: !15127)
!15172 = !DILocation(line: 196, column: 9, scope: !14235, inlinedAt: !15171)
!15173 = !DILocation(line: 1405, column: 1, scope: !15127)
!15174 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2251, file: !2251, line: 1459, type: !15175, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15177)
!15175 = !DISubroutineType(types: !15176)
!15176 = !{!641, !14415}
!15177 = !{!15178, !15179, !15180}
!15178 = !DILocalVariable(name: "timeout", arg: 1, scope: !15174, file: !2251, line: 1459, type: !14415)
!15179 = !DILocalVariable(name: "ticks", scope: !15174, file: !2251, line: 1461, type: !1497)
!15180 = !DILocalVariable(name: "ret", scope: !15174, file: !2251, line: 1480, type: !641)
!15181 = !DILocation(line: 0, scope: !15174)
!15182 = !DILocation(line: 1468, column: 6, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15174, file: !2251, line: 1468, column: 6)
!15184 = !DILocation(line: 1468, column: 6, scope: !15174)
!15185 = !DILocation(line: 1469, column: 20, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15183, file: !2251, line: 1468, column: 40)
!15187 = !DILocation(line: 1469, column: 3, scope: !15186)
!15188 = !DILocation(line: 1473, column: 3, scope: !15186)
!15189 = !DILocation(line: 1478, column: 10, scope: !15174)
!15190 = !DILocation(line: 1480, column: 16, scope: !15174)
!15191 = !DILocation(line: 1485, column: 1, scope: !15174)
!15192 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3335, file: !3335, line: 310, type: !15193, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15195)
!15193 = !DISubroutineType(types: !15194)
!15194 = !{null, !15099}
!15195 = !{!15196}
!15196 = !DILocalVariable(name: "thread", arg: 1, scope: !15192, file: !3335, line: 310, type: !15099)
!15197 = !DILocation(line: 0, scope: !15192)
!15198 = !DILocation(line: 319, column: 2, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15192, file: !3335, line: 319, column: 2)
!15200 = !{i64 2155104230}
!15201 = !DILocation(line: 320, column: 2, scope: !15192)
!15202 = !DILocation(line: 321, column: 1, scope: !15192)
!15203 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2251, file: !2251, line: 1415, type: !15204, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15206)
!15204 = !DISubroutineType(types: !15205)
!15205 = !{!641, !1497}
!15206 = !{!15207, !15208, !15209, !15210}
!15207 = !DILocalVariable(name: "ticks", arg: 1, scope: !15203, file: !2251, line: 1415, type: !1497)
!15208 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15203, file: !2251, line: 1418, type: !137)
!15209 = !DILocalVariable(name: "timeout", scope: !15203, file: !2251, line: 1430, type: !14415)
!15210 = !DILocalVariable(name: "key", scope: !15203, file: !2251, line: 1437, type: !13616)
!15211 = !DILocation(line: 0, scope: !15203)
!15212 = !DILocation(line: 1425, column: 12, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15203, file: !2251, line: 1425, column: 6)
!15214 = !DILocation(line: 1425, column: 6, scope: !15203)
!15215 = !DILocation(line: 1426, column: 3, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15213, file: !2251, line: 1425, column: 18)
!15217 = !DILocation(line: 1427, column: 3, scope: !15216)
!15218 = !DILocation(line: 1431, column: 24, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15203, file: !2251, line: 1431, column: 6)
!15220 = !DILocation(line: 1431, column: 6, scope: !15203)
!15221 = !DILocation(line: 1432, column: 35, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15219, file: !2251, line: 1431, column: 30)
!15223 = !DILocation(line: 1432, column: 27, scope: !15222)
!15224 = !DILocation(line: 1433, column: 2, scope: !15222)
!15225 = !DILocation(line: 1434, column: 27, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15219, file: !2251, line: 1433, column: 9)
!15227 = !DILocation(line: 0, scope: !15219)
!15228 = !DILocation(line: 0, scope: !13624, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 1437, column: 25, scope: !15203)
!15230 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !15229)
!15232 = !DILocation(line: 0, scope: !13633, inlinedAt: !15231)
!15233 = !DILocation(line: 1440, column: 20, scope: !15203)
!15234 = !DILocation(line: 1440, column: 18, scope: !15203)
!15235 = !DILocation(line: 1442, column: 2, scope: !15203)
!15236 = !DILocation(line: 1443, column: 23, scope: !15203)
!15237 = !DILocation(line: 1443, column: 2, scope: !15203)
!15238 = !DILocation(line: 1444, column: 29, scope: !15203)
!15239 = !DILocation(line: 1444, column: 2, scope: !15203)
!15240 = !DILocation(line: 0, scope: !14235, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 1446, column: 8, scope: !15203)
!15242 = !DILocation(line: 196, column: 9, scope: !14235, inlinedAt: !15241)
!15243 = !DILocation(line: 1450, column: 10, scope: !15203)
!15244 = !DILocation(line: 1450, column: 45, scope: !15203)
!15245 = !DILocation(line: 1450, column: 43, scope: !15203)
!15246 = !DILocation(line: 1451, column: 6, scope: !15203)
!15247 = !DILocation(line: 1457, column: 1, scope: !15203)
!15248 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13457, file: !13457, line: 1103, type: !13458, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15249)
!15249 = !{!15250}
!15250 = !DILocalVariable(name: "t", arg: 1, scope: !15248, file: !13457, line: 1103, type: !163)
!15251 = !DILocation(line: 0, scope: !15248)
!15252 = !DILocation(line: 0, scope: !13671, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 1106, column: 9, scope: !15248)
!15254 = !DILocation(line: 139, column: 13, scope: !15255, inlinedAt: !15253)
!15255 = distinct !DILexicalBlock(scope: !15256, file: !13457, line: 138, column: 10)
!15256 = distinct !DILexicalBlock(scope: !15257, file: !13457, line: 136, column: 7)
!15257 = distinct !DILexicalBlock(scope: !13692, file: !13457, line: 134, column: 17)
!15258 = !DILocation(line: 1106, column: 2, scope: !15248)
!15259 = distinct !DISubprogram(name: "k_yield", scope: !3335, file: !3335, line: 140, type: !2885, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!15260 = !DILocation(line: 148, column: 2, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15259, file: !3335, line: 148, column: 2)
!15262 = !{i64 2155103550}
!15263 = !DILocation(line: 149, column: 2, scope: !15259)
!15264 = !DILocation(line: 150, column: 1, scope: !15259)
!15265 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2251, file: !2251, line: 1495, type: !15266, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15268)
!15266 = !DISubroutineType(types: !15267)
!15267 = !{!641, !103}
!15268 = !{!15269, !15270}
!15269 = !DILocalVariable(name: "us", arg: 1, scope: !15265, file: !2251, line: 1495, type: !103)
!15270 = !DILocalVariable(name: "ticks", scope: !15265, file: !2251, line: 1497, type: !641)
!15271 = !DILocation(line: 0, scope: !15265)
!15272 = !DILocation(line: 1501, column: 31, scope: !15265)
!15273 = !DILocation(line: 1501, column: 10, scope: !15265)
!15274 = !DILocation(line: 1502, column: 23, scope: !15265)
!15275 = !DILocation(line: 1502, column: 10, scope: !15265)
!15276 = !DILocation(line: 1506, column: 31, scope: !15265)
!15277 = !DILocation(line: 1506, column: 9, scope: !15265)
!15278 = !DILocation(line: 1506, column: 2, scope: !15265)
!15279 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13457, file: !13457, line: 571, type: !13458, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15280)
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "t", arg: 1, scope: !15279, file: !13457, line: 571, type: !163)
!15282 = !DILocation(line: 0, scope: !15279)
!15283 = !DILocation(line: 0, scope: !13671, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 574, column: 9, scope: !15279)
!15285 = !DILocation(line: 135, column: 5, scope: !15257, inlinedAt: !15284)
!15286 = !DILocation(line: 139, column: 13, scope: !15255, inlinedAt: !15284)
!15287 = !DILocation(line: 574, column: 2, scope: !15279)
!15288 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13457, file: !13457, line: 1187, type: !13458, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15289)
!15289 = !{!15290}
!15290 = !DILocalVariable(name: "t", arg: 1, scope: !15288, file: !13457, line: 1187, type: !163)
!15291 = !DILocation(line: 0, scope: !15288)
!15292 = !DILocation(line: 0, scope: !13671, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 1190, column: 9, scope: !15288)
!15294 = !DILocation(line: 145, column: 13, scope: !15295, inlinedAt: !15293)
!15295 = distinct !DILexicalBlock(scope: !13689, file: !13457, line: 144, column: 10)
!15296 = !DILocation(line: 1190, column: 2, scope: !15288)
!15297 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2251, file: !2251, line: 1517, type: !15193, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15298)
!15298 = !{!15299}
!15299 = !DILocalVariable(name: "thread", arg: 1, scope: !15297, file: !2251, line: 1517, type: !15099)
!15300 = !DILocation(line: 0, scope: !15297)
!15301 = !DILocation(line: 1521, column: 6, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15297, file: !2251, line: 1521, column: 6)
!15303 = !DILocation(line: 1521, column: 6, scope: !15297)
!15304 = !DILocation(line: 1525, column: 6, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15297, file: !2251, line: 1525, column: 6)
!15306 = !DILocation(line: 1525, column: 37, scope: !15305)
!15307 = !DILocation(line: 1525, column: 6, scope: !15297)
!15308 = !DILocation(line: 1527, column: 20, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15310, file: !2251, line: 1527, column: 7)
!15310 = distinct !DILexicalBlock(scope: !15305, file: !2251, line: 1525, column: 42)
!15311 = !DILocation(line: 1527, column: 33, scope: !15309)
!15312 = !DILocation(line: 1527, column: 7, scope: !15310)
!15313 = !DILocation(line: 1532, column: 2, scope: !15297)
!15314 = !DILocation(line: 1533, column: 2, scope: !15297)
!15315 = !DILocation(line: 1031, column: 3, scope: !14268, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 48, column: 10, scope: !14272, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 1537, column: 7, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15297, file: !2251, line: 1537, column: 6)
!15319 = !DILocation(line: 0, scope: !14268, inlinedAt: !15316)
!15320 = !DILocation(line: 48, column: 9, scope: !14272, inlinedAt: !15317)
!15321 = !DILocation(line: 1537, column: 6, scope: !15297)
!15322 = !DILocation(line: 1538, column: 3, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15318, file: !2251, line: 1537, column: 25)
!15324 = !DILocation(line: 1539, column: 2, scope: !15323)
!15325 = !DILocation(line: 1540, column: 1, scope: !15297)
!15326 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12896, file: !12896, line: 101, type: !13742, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15327)
!15327 = !{!15328}
!15328 = !DILocalVariable(name: "thread", arg: 1, scope: !15326, file: !12896, line: 101, type: !2146)
!15329 = !DILocation(line: 0, scope: !15326)
!15330 = !DILocation(line: 103, column: 23, scope: !15326)
!15331 = !DILocation(line: 103, column: 36, scope: !15326)
!15332 = !DILocation(line: 103, column: 55, scope: !15326)
!15333 = !DILocation(line: 103, column: 2, scope: !15326)
!15334 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2251, file: !2251, line: 1567, type: !15335, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15337)
!15335 = !DISubroutineType(types: !15336)
!15336 = !{!15099}
!15337 = !{!15338}
!15338 = !DILocalVariable(name: "ret", scope: !15334, file: !2251, line: 1577, type: !15099)
!15339 = !DILocation(line: 1577, column: 30, scope: !15334)
!15340 = !DILocation(line: 0, scope: !15334)
!15341 = !DILocation(line: 1582, column: 2, scope: !15334)
!15342 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2251, file: !2251, line: 1593, type: !7434, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !162)
!15343 = !DILocation(line: 1031, column: 3, scope: !14268, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 48, column: 10, scope: !14272, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 1595, column: 10, scope: !15342)
!15346 = !DILocation(line: 0, scope: !14268, inlinedAt: !15344)
!15347 = !DILocation(line: 48, column: 9, scope: !14272, inlinedAt: !15345)
!15348 = !DILocation(line: 1595, column: 27, scope: !15342)
!15349 = !DILocation(line: 1595, column: 41, scope: !15342)
!15350 = !DILocation(line: 1595, column: 30, scope: !15342)
!15351 = !DILocation(line: 1595, column: 2, scope: !15342)
!15352 = distinct !DISubprogram(name: "z_thread_abort", scope: !2251, file: !2251, line: 1725, type: !13582, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15353)
!15353 = !{!15354, !15355}
!15354 = !DILocalVariable(name: "thread", arg: 1, scope: !15352, file: !2251, line: 1725, type: !2146)
!15355 = !DILocalVariable(name: "key", scope: !15352, file: !2251, line: 1727, type: !13616)
!15356 = !DILocation(line: 0, scope: !15352)
!15357 = !DILocation(line: 0, scope: !13624, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 1727, column: 25, scope: !15352)
!15359 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !15358)
!15361 = !DILocation(line: 0, scope: !13633, inlinedAt: !15360)
!15362 = !DILocation(line: 1729, column: 20, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15352, file: !2251, line: 1729, column: 6)
!15364 = !DILocation(line: 1729, column: 33, scope: !15363)
!15365 = !DILocation(line: 1729, column: 48, scope: !15363)
!15366 = !DILocation(line: 1729, column: 6, scope: !15352)
!15367 = !DILocation(line: 0, scope: !13651, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 1730, column: 3, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15363, file: !2251, line: 1729, column: 54)
!15370 = !DILocation(line: 0, scope: !13659, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !15368)
!15372 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !15371)
!15373 = !DILocation(line: 1732, column: 3, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15369, file: !2251, line: 1732, column: 3)
!15375 = !{i64 2155840960, i64 2155840976, i64 2155841002, i64 2155841030, i64 2155841050}
!15376 = !DILocation(line: 1733, column: 3, scope: !15369)
!15377 = !DILocation(line: 1736, column: 20, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15352, file: !2251, line: 1736, column: 6)
!15379 = !DILocation(line: 1736, column: 33, scope: !15378)
!15380 = !DILocation(line: 1736, column: 49, scope: !15378)
!15381 = !DILocation(line: 1736, column: 6, scope: !15352)
!15382 = !DILocation(line: 0, scope: !13651, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 1737, column: 3, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15378, file: !2251, line: 1736, column: 56)
!15385 = !DILocation(line: 0, scope: !13659, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !15383)
!15387 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !15386)
!15388 = !DILocation(line: 1738, column: 3, scope: !15384)
!15389 = !DILocation(line: 1775, column: 2, scope: !15352)
!15390 = !DILocation(line: 1776, column: 16, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15352, file: !2251, line: 1776, column: 6)
!15392 = !DILocation(line: 1776, column: 13, scope: !15391)
!15393 = !DILocation(line: 1776, column: 25, scope: !15391)
!15394 = !DILocation(line: 1031, column: 3, scope: !14268, inlinedAt: !15395)
!15395 = distinct !DILocation(line: 48, column: 10, scope: !14272, inlinedAt: !15396)
!15396 = distinct !DILocation(line: 1776, column: 29, scope: !15391)
!15397 = !DILocation(line: 0, scope: !14268, inlinedAt: !15395)
!15398 = !DILocation(line: 48, column: 9, scope: !14272, inlinedAt: !15396)
!15399 = !DILocation(line: 1776, column: 6, scope: !15352)
!15400 = !DILocation(line: 0, scope: !14235, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 1777, column: 3, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15391, file: !2251, line: 1776, column: 47)
!15403 = !DILocation(line: 196, column: 9, scope: !14235, inlinedAt: !15401)
!15404 = !DILocation(line: 1779, column: 2, scope: !15402)
!15405 = !DILocation(line: 0, scope: !13651, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 1780, column: 2, scope: !15352)
!15407 = !DILocation(line: 0, scope: !13659, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !15406)
!15409 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !15408)
!15410 = !DILocation(line: 1781, column: 1, scope: !15352)
!15411 = distinct !DISubprogram(name: "end_thread", scope: !2251, file: !2251, line: 1690, type: !13582, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15412)
!15412 = !{!15413}
!15413 = !DILocalVariable(name: "thread", arg: 1, scope: !15411, file: !2251, line: 1690, type: !2146)
!15414 = !DILocation(line: 0, scope: !15411)
!15415 = !DILocation(line: 1695, column: 20, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15411, file: !2251, line: 1695, column: 6)
!15417 = !DILocation(line: 1695, column: 33, scope: !15416)
!15418 = !DILocation(line: 1695, column: 49, scope: !15416)
!15419 = !DILocation(line: 1695, column: 6, scope: !15411)
!15420 = !DILocation(line: 1697, column: 29, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15416, file: !2251, line: 1695, column: 56)
!15422 = !DILocation(line: 1698, column: 7, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15421, file: !2251, line: 1698, column: 7)
!15424 = !DILocation(line: 1698, column: 7, scope: !15421)
!15425 = !DILocation(line: 0, scope: !13793, inlinedAt: !15426)
!15426 = distinct !DILocation(line: 1699, column: 4, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15423, file: !2251, line: 1698, column: 35)
!15428 = !DILocation(line: 266, column: 28, scope: !13793, inlinedAt: !15426)
!15429 = !DILocation(line: 0, scope: !13801, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 268, column: 3, scope: !13805, inlinedAt: !15426)
!15431 = !DILocation(line: 234, column: 2, scope: !13801, inlinedAt: !15430)
!15432 = !DILocation(line: 1700, column: 3, scope: !15427)
!15433 = !DILocation(line: 1701, column: 20, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15421, file: !2251, line: 1701, column: 7)
!15435 = !DILocation(line: 1701, column: 30, scope: !15434)
!15436 = !DILocation(line: 1701, column: 7, scope: !15421)
!15437 = !DILocation(line: 1702, column: 4, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15434, file: !2251, line: 1701, column: 39)
!15439 = !DILocation(line: 1703, column: 3, scope: !15438)
!15440 = !DILocation(line: 1704, column: 9, scope: !15421)
!15441 = !DILocation(line: 1705, column: 23, scope: !15421)
!15442 = !DILocation(line: 1705, column: 3, scope: !15421)
!15443 = !DILocation(line: 1706, column: 3, scope: !15421)
!15444 = !DILocation(line: 1722, column: 2, scope: !15421)
!15445 = !DILocation(line: 1723, column: 1, scope: !15411)
!15446 = distinct !DISubprogram(name: "unpend_all", scope: !2251, file: !2251, line: 1674, type: !15447, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15449)
!15447 = !DISubroutineType(types: !15448)
!15448 = !{null, !2177}
!15449 = !{!15450, !15451}
!15450 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15446, file: !2251, line: 1674, type: !2177)
!15451 = !DILocalVariable(name: "thread", scope: !15446, file: !2251, line: 1676, type: !2146)
!15452 = !DILocation(line: 0, scope: !15446)
!15453 = !DILocation(line: 1678, column: 19, scope: !15446)
!15454 = !DILocation(line: 1678, column: 41, scope: !15446)
!15455 = !DILocation(line: 1678, column: 2, scope: !15446)
!15456 = !DILocation(line: 1679, column: 3, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15446, file: !2251, line: 1678, column: 50)
!15458 = !DILocation(line: 1680, column: 9, scope: !15457)
!15459 = !DILocalVariable(name: "thread", arg: 1, scope: !15460, file: !12916, line: 65, type: !2146)
!15460 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12916, file: !12916, line: 65, type: !15461, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15463)
!15461 = !DISubroutineType(types: !15462)
!15462 = !{null, !2146, !32}
!15463 = !{!15459, !15464}
!15464 = !DILocalVariable(name: "value", arg: 2, scope: !15460, file: !12916, line: 65, type: !32)
!15465 = !DILocation(line: 0, scope: !15460, inlinedAt: !15466)
!15466 = distinct !DILocation(line: 1681, column: 3, scope: !15457)
!15467 = !DILocation(line: 67, column: 15, scope: !15460, inlinedAt: !15466)
!15468 = !DILocation(line: 67, column: 33, scope: !15460, inlinedAt: !15466)
!15469 = !DILocation(line: 1682, column: 3, scope: !15457)
!15470 = distinct !{!15470, !15455, !15471}
!15471 = !DILocation(line: 1683, column: 2, scope: !15446)
!15472 = !DILocation(line: 1684, column: 1, scope: !15446)
!15473 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2251, file: !2251, line: 1794, type: !15474, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15476)
!15474 = !DISubroutineType(types: !15475)
!15475 = !{!103, !2146, !14415}
!15476 = !{!15477, !15478, !15479, !15480}
!15477 = !DILocalVariable(name: "thread", arg: 1, scope: !15473, file: !2251, line: 1794, type: !2146)
!15478 = !DILocalVariable(name: "timeout", arg: 2, scope: !15473, file: !2251, line: 1794, type: !14415)
!15479 = !DILocalVariable(name: "key", scope: !15473, file: !2251, line: 1796, type: !13616)
!15480 = !DILocalVariable(name: "ret", scope: !15473, file: !2251, line: 1797, type: !103)
!15481 = !DILocation(line: 0, scope: !15473)
!15482 = !DILocation(line: 0, scope: !13624, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 1796, column: 25, scope: !15473)
!15484 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !15483)
!15486 = !DILocation(line: 0, scope: !13633, inlinedAt: !15485)
!15487 = !DILocation(line: 1801, column: 20, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15473, file: !2251, line: 1801, column: 6)
!15489 = !DILocation(line: 1801, column: 33, scope: !15488)
!15490 = !DILocation(line: 1801, column: 49, scope: !15488)
!15491 = !DILocation(line: 1801, column: 6, scope: !15473)
!15492 = !DILocation(line: 1803, column: 13, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15488, file: !2251, line: 1803, column: 13)
!15494 = !DILocation(line: 1803, column: 13, scope: !15488)
!15495 = !DILocation(line: 1805, column: 24, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15493, file: !2251, line: 1805, column: 13)
!15497 = !DILocation(line: 1805, column: 21, scope: !15496)
!15498 = !DILocation(line: 1805, column: 34, scope: !15496)
!15499 = !DILocation(line: 1806, column: 20, scope: !15496)
!15500 = !DILocation(line: 1806, column: 44, scope: !15496)
!15501 = !DILocation(line: 1806, column: 30, scope: !15496)
!15502 = !DILocation(line: 1805, column: 13, scope: !15493)
!15503 = !DILocation(line: 1810, column: 42, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15496, file: !2251, line: 1808, column: 9)
!15505 = !DILocation(line: 1810, column: 3, scope: !15504)
!15506 = !DILocation(line: 1811, column: 22, scope: !15504)
!15507 = !DILocation(line: 1811, column: 3, scope: !15504)
!15508 = !DILocation(line: 0, scope: !14235, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 1814, column: 9, scope: !15504)
!15510 = !DILocation(line: 196, column: 9, scope: !14235, inlinedAt: !15509)
!15511 = !DILocation(line: 1817, column: 3, scope: !15504)
!15512 = !DILocation(line: 0, scope: !15488)
!15513 = !DILocation(line: 0, scope: !13651, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 1822, column: 2, scope: !15473)
!15515 = !DILocation(line: 0, scope: !13659, inlinedAt: !15516)
!15516 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !15514)
!15517 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !15516)
!15518 = !DILocation(line: 1823, column: 2, scope: !15473)
!15519 = !DILocation(line: 1824, column: 1, scope: !15473)
!15520 = distinct !DISubprogram(name: "z_sched_wake", scope: !2251, file: !2251, line: 1882, type: !15521, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15523)
!15521 = !DISubroutineType(types: !15522)
!15522 = !{!211, !2177, !103, !102}
!15523 = !{!15524, !15525, !15526, !15527, !15528, !15529, !15531}
!15524 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15520, file: !2251, line: 1882, type: !2177)
!15525 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15520, file: !2251, line: 1882, type: !103)
!15526 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15520, file: !2251, line: 1882, type: !102)
!15527 = !DILocalVariable(name: "thread", scope: !15520, file: !2251, line: 1884, type: !2146)
!15528 = !DILocalVariable(name: "ret", scope: !15520, file: !2251, line: 1885, type: !211)
!15529 = !DILocalVariable(name: "__i", scope: !15530, file: !2251, line: 1887, type: !13616)
!15530 = distinct !DILexicalBlock(scope: !15520, file: !2251, line: 1887, column: 2)
!15531 = !DILocalVariable(name: "__key", scope: !15530, file: !2251, line: 1887, type: !13616)
!15532 = !DILocation(line: 0, scope: !15520)
!15533 = !DILocation(line: 0, scope: !15530)
!15534 = !DILocation(line: 0, scope: !13624, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 1887, column: 2, scope: !15530)
!15536 = !DILocation(line: 55, column: 2, scope: !13633, inlinedAt: !15537)
!15537 = distinct !DILocation(line: 145, column: 10, scope: !13624, inlinedAt: !15535)
!15538 = !DILocation(line: 0, scope: !13633, inlinedAt: !15537)
!15539 = !DILocation(line: 1888, column: 12, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15541, file: !2251, line: 1887, column: 26)
!15541 = distinct !DILexicalBlock(scope: !15530, file: !2251, line: 1887, column: 2)
!15542 = !DILocation(line: 1890, column: 14, scope: !15543)
!15543 = distinct !DILexicalBlock(scope: !15540, file: !2251, line: 1890, column: 7)
!15544 = !DILocation(line: 1890, column: 7, scope: !15540)
!15545 = !DILocalVariable(name: "thread", arg: 1, scope: !15546, file: !15547, line: 134, type: !2146)
!15546 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15547, file: !15547, line: 134, type: !15548, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15550)
!15547 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15548 = !DISubroutineType(types: !15549)
!15549 = !{null, !2146, !32, !102}
!15550 = !{!15545, !15551, !15552}
!15551 = !DILocalVariable(name: "value", arg: 2, scope: !15546, file: !15547, line: 135, type: !32)
!15552 = !DILocalVariable(name: "data", arg: 3, scope: !15546, file: !15547, line: 136, type: !102)
!15553 = !DILocation(line: 0, scope: !15546, inlinedAt: !15554)
!15554 = distinct !DILocation(line: 1891, column: 4, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15543, file: !2251, line: 1890, column: 23)
!15556 = !DILocation(line: 0, scope: !15460, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 138, column: 2, scope: !15546, inlinedAt: !15554)
!15558 = !DILocation(line: 67, column: 15, scope: !15460, inlinedAt: !15557)
!15559 = !DILocation(line: 67, column: 33, scope: !15460, inlinedAt: !15557)
!15560 = !DILocation(line: 139, column: 15, scope: !15546, inlinedAt: !15554)
!15561 = !DILocation(line: 139, column: 25, scope: !15546, inlinedAt: !15554)
!15562 = !DILocation(line: 1894, column: 4, scope: !15555)
!15563 = !DILocation(line: 1895, column: 10, scope: !15555)
!15564 = !DILocation(line: 1896, column: 4, scope: !15555)
!15565 = !DILocation(line: 1898, column: 3, scope: !15555)
!15566 = !DILocation(line: 0, scope: !13651, inlinedAt: !15567)
!15567 = distinct !DILocation(line: 1887, column: 2, scope: !15541)
!15568 = !DILocation(line: 0, scope: !13659, inlinedAt: !15569)
!15569 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !15567)
!15570 = !DILocation(line: 95, column: 2, scope: !13659, inlinedAt: !15569)
!15571 = !DILocation(line: 1901, column: 2, scope: !15520)
!15572 = distinct !DISubprogram(name: "z_sched_wait", scope: !2251, file: !2251, line: 1904, type: !15573, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15576)
!15573 = !DISubroutineType(types: !15574)
!15574 = !{!103, !13627, !13616, !2177, !14415, !15575}
!15575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15576 = !{!15577, !15578, !15579, !15580, !15581, !15582}
!15577 = !DILocalVariable(name: "lock", arg: 1, scope: !15572, file: !2251, line: 1904, type: !13627)
!15578 = !DILocalVariable(name: "key", arg: 2, scope: !15572, file: !2251, line: 1904, type: !13616)
!15579 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15572, file: !2251, line: 1905, type: !2177)
!15580 = !DILocalVariable(name: "timeout", arg: 4, scope: !15572, file: !2251, line: 1905, type: !14415)
!15581 = !DILocalVariable(name: "data", arg: 5, scope: !15572, file: !2251, line: 1905, type: !15575)
!15582 = !DILocalVariable(name: "ret", scope: !15572, file: !2251, line: 1907, type: !103)
!15583 = !DILocation(line: 0, scope: !15572)
!15584 = !DILocation(line: 1907, column: 12, scope: !15572)
!15585 = !DILocation(line: 1909, column: 11, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15572, file: !2251, line: 1909, column: 6)
!15587 = !DILocation(line: 1909, column: 6, scope: !15572)
!15588 = !DILocation(line: 1910, column: 11, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15586, file: !2251, line: 1909, column: 20)
!15590 = !DILocation(line: 1910, column: 26, scope: !15589)
!15591 = !DILocation(line: 1910, column: 9, scope: !15589)
!15592 = !DILocation(line: 1911, column: 2, scope: !15589)
!15593 = !DILocation(line: 1912, column: 2, scope: !15572)
!15594 = distinct !DISubprogram(name: "z_data_copy", scope: !15595, file: !15595, line: 22, type: !2885, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2868, retainedNodes: !162)
!15595 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15596 = !DILocation(line: 24, column: 2, scope: !15594)
!15597 = !DILocation(line: 27, column: 2, scope: !15594)
!15598 = !DILocation(line: 71, column: 1, scope: !15594)
!15599 = distinct !DISubprogram(name: "z_add_timeout", scope: !2288, file: !2288, line: 88, type: !15600, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15606)
!15600 = !DISubroutineType(types: !15601)
!15601 = !{null, !2261, !2280, !15602}
!15602 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1498, line: 67, baseType: !15603)
!15603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1498, line: 65, size: 64, elements: !15604)
!15604 = !{!15605}
!15605 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15603, file: !1498, line: 66, baseType: !1497, size: 64)
!15606 = !{!15607, !15608, !15609, !15610, !15616, !15617, !15620, !15623}
!15607 = !DILocalVariable(name: "to", arg: 1, scope: !15599, file: !2288, line: 88, type: !2261)
!15608 = !DILocalVariable(name: "fn", arg: 2, scope: !15599, file: !2288, line: 88, type: !2280)
!15609 = !DILocalVariable(name: "timeout", arg: 3, scope: !15599, file: !2288, line: 89, type: !15602)
!15610 = !DILocalVariable(name: "__i", scope: !15611, file: !2288, line: 102, type: !15612)
!15611 = distinct !DILexicalBlock(scope: !15599, file: !2288, line: 102, column: 2)
!15612 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !15613)
!15613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !15614)
!15614 = !{!15615}
!15615 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15613, file: !368, line: 33, baseType: !103, size: 32)
!15616 = !DILocalVariable(name: "__key", scope: !15611, file: !2288, line: 102, type: !15612)
!15617 = !DILocalVariable(name: "t", scope: !15618, file: !2288, line: 103, type: !2261)
!15618 = distinct !DILexicalBlock(scope: !15619, file: !2288, line: 102, column: 24)
!15619 = distinct !DILexicalBlock(scope: !15611, file: !2288, line: 102, column: 2)
!15620 = !DILocalVariable(name: "ticks", scope: !15621, file: !2288, line: 107, type: !1497)
!15621 = distinct !DILexicalBlock(scope: !15622, file: !2288, line: 106, column: 39)
!15622 = distinct !DILexicalBlock(scope: !15618, file: !2288, line: 105, column: 7)
!15623 = !DILocalVariable(name: "next_time", scope: !15624, file: !2288, line: 137, type: !641)
!15624 = distinct !DILexicalBlock(scope: !15625, file: !2288, line: 127, column: 22)
!15625 = distinct !DILexicalBlock(scope: !15618, file: !2288, line: 127, column: 7)
!15626 = !DILocation(line: 0, scope: !15599)
!15627 = !DILocation(line: 91, column: 6, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15599, file: !2288, line: 91, column: 6)
!15629 = !DILocation(line: 91, column: 6, scope: !15599)
!15630 = !DILocation(line: 100, column: 6, scope: !15599)
!15631 = !DILocation(line: 100, column: 9, scope: !15599)
!15632 = !DILocation(line: 0, scope: !15611)
!15633 = !DILocalVariable(name: "l", arg: 1, scope: !15634, file: !368, line: 136, type: !15637)
!15634 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !15635, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15638)
!15635 = !DISubroutineType(types: !15636)
!15636 = !{!15612, !15637}
!15637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!15638 = !{!15633, !15639}
!15639 = !DILocalVariable(name: "k", scope: !15634, file: !368, line: 139, type: !15612)
!15640 = !DILocation(line: 0, scope: !15634, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 102, column: 2, scope: !15611)
!15642 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !15647)
!15643 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6193, file: !6193, line: 42, type: !6194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15644)
!15644 = !{!15645, !15646}
!15645 = !DILocalVariable(name: "key", scope: !15643, file: !6193, line: 44, type: !32)
!15646 = !DILocalVariable(name: "tmp", scope: !15643, file: !6193, line: 53, type: !32)
!15647 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !15641)
!15648 = !{i64 2283725}
!15649 = !DILocation(line: 0, scope: !15643, inlinedAt: !15647)
!15650 = !DILocation(line: 106, column: 33, scope: !15622)
!15651 = !DILocation(line: 105, column: 7, scope: !15618)
!15652 = !DILocation(line: 107, column: 50, scope: !15621)
!15653 = !DILocation(line: 107, column: 48, scope: !15621)
!15654 = !DILocation(line: 0, scope: !15621)
!15655 = !DILocation(line: 109, column: 17, scope: !15621)
!15656 = !DILocation(line: 110, column: 3, scope: !15621)
!15657 = !DILocation(line: 111, column: 31, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15622, file: !2288, line: 110, column: 10)
!15659 = !DILocation(line: 111, column: 37, scope: !15658)
!15660 = !DILocation(line: 111, column: 35, scope: !15658)
!15661 = !DILocation(line: 0, scope: !15622)
!15662 = !DILocation(line: 109, column: 8, scope: !15621)
!15663 = !DILocation(line: 109, column: 15, scope: !15621)
!15664 = !DILocation(line: 114, column: 12, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15618, file: !2288, line: 114, column: 3)
!15666 = !DILocation(line: 0, scope: !15618)
!15667 = !DILocation(line: 114, column: 3, scope: !15665)
!15668 = !DILocation(line: 115, column: 24, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15670, file: !2288, line: 115, column: 8)
!15670 = distinct !DILexicalBlock(scope: !15671, file: !2288, line: 114, column: 45)
!15671 = distinct !DILexicalBlock(scope: !15665, file: !2288, line: 114, column: 3)
!15672 = !DILocation(line: 115, column: 11, scope: !15669)
!15673 = !DILocation(line: 115, column: 18, scope: !15669)
!15674 = !DILocation(line: 115, column: 8, scope: !15670)
!15675 = !DILocation(line: 116, column: 15, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15669, file: !2288, line: 115, column: 32)
!15677 = !DILocation(line: 117, column: 26, scope: !15676)
!15678 = !DILocation(line: 117, column: 37, scope: !15676)
!15679 = !DILocation(line: 117, column: 5, scope: !15676)
!15680 = !DILocation(line: 123, column: 7, scope: !15618)
!15681 = !DILocation(line: 120, column: 15, scope: !15670)
!15682 = !DILocation(line: 114, column: 36, scope: !15671)
!15683 = distinct !{!15683, !15667, !15684}
!15684 = !DILocation(line: 121, column: 3, scope: !15665)
!15685 = !DILocation(line: 124, column: 41, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15687, file: !2288, line: 123, column: 18)
!15687 = distinct !DILexicalBlock(scope: !15618, file: !2288, line: 123, column: 7)
!15688 = !DILocation(line: 124, column: 4, scope: !15686)
!15689 = !DILocation(line: 125, column: 3, scope: !15686)
!15690 = !DILocation(line: 127, column: 13, scope: !15625)
!15691 = !DILocation(line: 127, column: 10, scope: !15625)
!15692 = !DILocation(line: 127, column: 7, scope: !15618)
!15693 = !DILocation(line: 137, column: 24, scope: !15624)
!15694 = !DILocation(line: 0, scope: !15624)
!15695 = !DILocation(line: 139, column: 18, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15624, file: !2288, line: 139, column: 8)
!15697 = !DILocation(line: 139, column: 23, scope: !15696)
!15698 = !DILocation(line: 141, column: 5, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15696, file: !2288, line: 140, column: 48)
!15700 = !DILocation(line: 142, column: 4, scope: !15699)
!15701 = !DILocalVariable(name: "key", arg: 2, scope: !15702, file: !368, line: 190, type: !15612)
!15702 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !15703, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15705)
!15703 = !DISubroutineType(types: !15704)
!15704 = !{null, !15637, !15612}
!15705 = !{!15706, !15701}
!15706 = !DILocalVariable(name: "l", arg: 1, scope: !15702, file: !368, line: 189, type: !15637)
!15707 = !DILocation(line: 0, scope: !15702, inlinedAt: !15708)
!15708 = distinct !DILocation(line: 102, column: 2, scope: !15619)
!15709 = !DILocalVariable(name: "key", arg: 1, scope: !15710, file: !6193, line: 84, type: !32)
!15710 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6193, file: !6193, line: 84, type: !6204, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15711)
!15711 = !{!15709}
!15712 = !DILocation(line: 0, scope: !15710, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !15708)
!15714 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !15713)
!15715 = !{i64 2284542}
!15716 = !DILocation(line: 148, column: 1, scope: !15599)
!15717 = distinct !DISubprogram(name: "elapsed", scope: !2288, file: !2288, line: 62, type: !15718, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !162)
!15718 = !DISubroutineType(types: !15719)
!15719 = !{!641}
!15720 = !DILocation(line: 64, column: 9, scope: !15717)
!15721 = !DILocation(line: 64, column: 28, scope: !15717)
!15722 = !DILocation(line: 64, column: 35, scope: !15717)
!15723 = !DILocation(line: 64, column: 2, scope: !15717)
!15724 = distinct !DISubprogram(name: "first", scope: !2288, file: !2288, line: 39, type: !15725, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15727)
!15725 = !DISubroutineType(types: !15726)
!15726 = !{!2261}
!15727 = !{!15728}
!15728 = !DILocalVariable(name: "t", scope: !15724, file: !2288, line: 41, type: !15729)
!15729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!15730 = !DILocation(line: 41, column: 19, scope: !15724)
!15731 = !DILocation(line: 0, scope: !15724)
!15732 = !DILocation(line: 43, column: 9, scope: !15724)
!15733 = !DILocation(line: 43, column: 2, scope: !15724)
!15734 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !15735, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15737)
!15735 = !DISubroutineType(types: !15736)
!15736 = !{null, !15729, !15729}
!15737 = !{!15738, !15739, !15740}
!15738 = !DILocalVariable(name: "successor", arg: 1, scope: !15734, file: !273, line: 443, type: !15729)
!15739 = !DILocalVariable(name: "node", arg: 2, scope: !15734, file: !273, line: 443, type: !15729)
!15740 = !DILocalVariable(name: "prev", scope: !15734, file: !273, line: 445, type: !15741)
!15741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15729)
!15742 = !DILocation(line: 0, scope: !15734)
!15743 = !DILocation(line: 445, column: 39, scope: !15734)
!15744 = !DILocation(line: 447, column: 8, scope: !15734)
!15745 = !DILocation(line: 447, column: 13, scope: !15734)
!15746 = !DILocation(line: 448, column: 8, scope: !15734)
!15747 = !DILocation(line: 448, column: 13, scope: !15734)
!15748 = !DILocation(line: 449, column: 8, scope: !15734)
!15749 = !DILocation(line: 449, column: 13, scope: !15734)
!15750 = !DILocation(line: 450, column: 18, scope: !15734)
!15751 = !DILocation(line: 451, column: 1, scope: !15734)
!15752 = distinct !DISubprogram(name: "next", scope: !2288, file: !2288, line: 46, type: !15753, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15755)
!15753 = !DISubroutineType(types: !15754)
!15754 = !{!2261, !2261}
!15755 = !{!15756, !15757}
!15756 = !DILocalVariable(name: "t", arg: 1, scope: !15752, file: !2288, line: 46, type: !2261)
!15757 = !DILocalVariable(name: "n", scope: !15752, file: !2288, line: 48, type: !15729)
!15758 = !DILocation(line: 0, scope: !15752)
!15759 = !DILocation(line: 48, column: 58, scope: !15752)
!15760 = !DILocation(line: 48, column: 19, scope: !15752)
!15761 = !DILocation(line: 50, column: 9, scope: !15752)
!15762 = !DILocation(line: 50, column: 2, scope: !15752)
!15763 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !15764, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15767)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{null, !15766, !15729}
!15766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!15767 = !{!15768, !15769, !15770}
!15768 = !DILocalVariable(name: "list", arg: 1, scope: !15763, file: !273, line: 404, type: !15766)
!15769 = !DILocalVariable(name: "node", arg: 2, scope: !15763, file: !273, line: 404, type: !15729)
!15770 = !DILocalVariable(name: "tail", scope: !15763, file: !273, line: 406, type: !15741)
!15771 = !DILocation(line: 0, scope: !15763)
!15772 = !DILocation(line: 406, column: 34, scope: !15763)
!15773 = !DILocation(line: 408, column: 8, scope: !15763)
!15774 = !DILocation(line: 408, column: 13, scope: !15763)
!15775 = !DILocation(line: 409, column: 8, scope: !15763)
!15776 = !DILocation(line: 409, column: 13, scope: !15763)
!15777 = !DILocation(line: 411, column: 8, scope: !15763)
!15778 = !DILocation(line: 411, column: 13, scope: !15763)
!15779 = !DILocation(line: 412, column: 13, scope: !15763)
!15780 = !DILocation(line: 413, column: 1, scope: !15763)
!15781 = distinct !DISubprogram(name: "next_timeout", scope: !2288, file: !2288, line: 67, type: !15718, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15782)
!15782 = !{!15783, !15784, !15785}
!15783 = !DILocalVariable(name: "to", scope: !15781, file: !2288, line: 69, type: !2261)
!15784 = !DILocalVariable(name: "ticks_elapsed", scope: !15781, file: !2288, line: 70, type: !641)
!15785 = !DILocalVariable(name: "ret", scope: !15781, file: !2288, line: 71, type: !641)
!15786 = !DILocation(line: 69, column: 24, scope: !15781)
!15787 = !DILocation(line: 0, scope: !15781)
!15788 = !DILocation(line: 70, column: 26, scope: !15781)
!15789 = !DILocation(line: 73, column: 10, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15781, file: !2288, line: 73, column: 6)
!15791 = !DILocation(line: 73, column: 19, scope: !15790)
!15792 = !DILocation(line: 74, column: 21, scope: !15790)
!15793 = !DILocation(line: 74, column: 30, scope: !15790)
!15794 = !DILocation(line: 74, column: 28, scope: !15790)
!15795 = !DILocation(line: 74, column: 45, scope: !15790)
!15796 = !DILocation(line: 73, column: 6, scope: !15781)
!15797 = !DILocation(line: 77, column: 9, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15790, file: !2288, line: 76, column: 9)
!15799 = !DILocation(line: 0, scope: !15790)
!15800 = !DILocation(line: 81, column: 20, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15781, file: !2288, line: 81, column: 6)
!15802 = !DILocation(line: 81, column: 6, scope: !15801)
!15803 = !DILocation(line: 81, column: 32, scope: !15801)
!15804 = !DILocation(line: 85, column: 2, scope: !15781)
!15805 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !15806, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15808)
!15806 = !DISubroutineType(types: !15807)
!15807 = !{!15729, !15766, !15729}
!15808 = !{!15809, !15810}
!15809 = !DILocalVariable(name: "list", arg: 1, scope: !15805, file: !273, line: 341, type: !15766)
!15810 = !DILocalVariable(name: "node", arg: 2, scope: !15805, file: !273, line: 342, type: !15729)
!15811 = !DILocation(line: 0, scope: !15805)
!15812 = !DILocation(line: 344, column: 15, scope: !15805)
!15813 = !DILocation(line: 344, column: 9, scope: !15805)
!15814 = !DILocation(line: 344, column: 26, scope: !15805)
!15815 = !DILocation(line: 344, column: 2, scope: !15805)
!15816 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !15806, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15817)
!15817 = !{!15818, !15819}
!15818 = !DILocalVariable(name: "list", arg: 1, scope: !15816, file: !273, line: 325, type: !15766)
!15819 = !DILocalVariable(name: "node", arg: 2, scope: !15816, file: !273, line: 326, type: !15729)
!15820 = !DILocation(line: 0, scope: !15816)
!15821 = !DILocation(line: 328, column: 24, scope: !15816)
!15822 = !DILocation(line: 328, column: 15, scope: !15816)
!15823 = !DILocation(line: 328, column: 9, scope: !15816)
!15824 = !DILocation(line: 328, column: 45, scope: !15816)
!15825 = !DILocation(line: 328, column: 2, scope: !15816)
!15826 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !15827, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15829)
!15827 = !DISubroutineType(types: !15828)
!15828 = !{!15729, !15766}
!15829 = !{!15830}
!15830 = !DILocalVariable(name: "list", arg: 1, scope: !15826, file: !273, line: 294, type: !15766)
!15831 = !DILocation(line: 0, scope: !15826)
!15832 = !DILocation(line: 296, column: 9, scope: !15826)
!15833 = !DILocation(line: 296, column: 2, scope: !15826)
!15834 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !15835, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15837)
!15835 = !DISubroutineType(types: !15836)
!15836 = !{!211, !15766}
!15837 = !{!15838}
!15838 = !DILocalVariable(name: "list", arg: 1, scope: !15834, file: !273, line: 266, type: !15766)
!15839 = !DILocation(line: 0, scope: !15834)
!15840 = !DILocation(line: 268, column: 15, scope: !15834)
!15841 = !DILocation(line: 268, column: 20, scope: !15834)
!15842 = !DILocation(line: 268, column: 2, scope: !15834)
!15843 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2288, file: !2288, line: 150, type: !15844, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15846)
!15844 = !DISubroutineType(types: !15845)
!15845 = !{!103, !2261}
!15846 = !{!15847, !15848, !15849, !15851}
!15847 = !DILocalVariable(name: "to", arg: 1, scope: !15843, file: !2288, line: 150, type: !2261)
!15848 = !DILocalVariable(name: "ret", scope: !15843, file: !2288, line: 152, type: !103)
!15849 = !DILocalVariable(name: "__i", scope: !15850, file: !2288, line: 154, type: !15612)
!15850 = distinct !DILexicalBlock(scope: !15843, file: !2288, line: 154, column: 2)
!15851 = !DILocalVariable(name: "__key", scope: !15850, file: !2288, line: 154, type: !15612)
!15852 = !DILocation(line: 0, scope: !15843)
!15853 = !DILocation(line: 0, scope: !15850)
!15854 = !DILocation(line: 0, scope: !15634, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 154, column: 2, scope: !15850)
!15856 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !15857)
!15857 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !15855)
!15858 = !DILocation(line: 0, scope: !15643, inlinedAt: !15857)
!15859 = !DILocation(line: 155, column: 7, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15861, file: !2288, line: 155, column: 7)
!15861 = distinct !DILexicalBlock(scope: !15862, file: !2288, line: 154, column: 24)
!15862 = distinct !DILexicalBlock(scope: !15850, file: !2288, line: 154, column: 2)
!15863 = !DILocation(line: 155, column: 7, scope: !15861)
!15864 = !DILocation(line: 156, column: 4, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15860, file: !2288, line: 155, column: 39)
!15866 = !DILocation(line: 158, column: 3, scope: !15865)
!15867 = !DILocation(line: 0, scope: !15702, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 154, column: 2, scope: !15862)
!15869 = !DILocation(line: 0, scope: !15710, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !15868)
!15871 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !15870)
!15872 = !DILocation(line: 161, column: 2, scope: !15843)
!15873 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !15874, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15878)
!15874 = !DISubroutineType(types: !15875)
!15875 = !{!211, !15876}
!15876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15877, size: 32)
!15877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2265)
!15878 = !{!15879}
!15879 = !DILocalVariable(name: "node", arg: 1, scope: !15873, file: !273, line: 225, type: !15876)
!15880 = !DILocation(line: 0, scope: !15873)
!15881 = !DILocation(line: 227, column: 15, scope: !15873)
!15882 = !DILocation(line: 227, column: 20, scope: !15873)
!15883 = !DILocation(line: 227, column: 2, scope: !15873)
!15884 = distinct !DISubprogram(name: "remove_timeout", scope: !2288, file: !2288, line: 53, type: !2282, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15885)
!15885 = !{!15886}
!15886 = !DILocalVariable(name: "t", arg: 1, scope: !15884, file: !2288, line: 53, type: !2261)
!15887 = !DILocation(line: 0, scope: !15884)
!15888 = !DILocation(line: 55, column: 6, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15884, file: !2288, line: 55, column: 6)
!15890 = !DILocation(line: 55, column: 14, scope: !15889)
!15891 = !DILocation(line: 55, column: 6, scope: !15884)
!15892 = !DILocation(line: 56, column: 25, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15889, file: !2288, line: 55, column: 23)
!15894 = !DILocation(line: 56, column: 12, scope: !15893)
!15895 = !DILocation(line: 56, column: 19, scope: !15893)
!15896 = !DILocation(line: 57, column: 2, scope: !15893)
!15897 = !DILocation(line: 59, column: 23, scope: !15884)
!15898 = !DILocation(line: 59, column: 2, scope: !15884)
!15899 = !DILocation(line: 60, column: 1, scope: !15884)
!15900 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !15901, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15903)
!15901 = !DISubroutineType(types: !15902)
!15902 = !{null, !15729}
!15903 = !{!15904, !15905, !15906}
!15904 = !DILocalVariable(name: "node", arg: 1, scope: !15900, file: !273, line: 496, type: !15729)
!15905 = !DILocalVariable(name: "prev", scope: !15900, file: !273, line: 498, type: !15741)
!15906 = !DILocalVariable(name: "next", scope: !15900, file: !273, line: 499, type: !15741)
!15907 = !DILocation(line: 0, scope: !15900)
!15908 = !DILocation(line: 498, column: 34, scope: !15900)
!15909 = !DILocation(line: 499, column: 34, scope: !15900)
!15910 = !DILocation(line: 501, column: 8, scope: !15900)
!15911 = !DILocation(line: 501, column: 13, scope: !15900)
!15912 = !DILocation(line: 502, column: 8, scope: !15900)
!15913 = !DILocation(line: 502, column: 13, scope: !15900)
!15914 = !DILocation(line: 503, column: 2, scope: !15900)
!15915 = !DILocation(line: 504, column: 1, scope: !15900)
!15916 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !15901, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15917)
!15917 = !{!15918}
!15918 = !DILocalVariable(name: "node", arg: 1, scope: !15916, file: !273, line: 211, type: !15729)
!15919 = !DILocation(line: 0, scope: !15916)
!15920 = !DILocation(line: 213, column: 8, scope: !15916)
!15921 = !DILocation(line: 213, column: 13, scope: !15916)
!15922 = !DILocation(line: 214, column: 8, scope: !15916)
!15923 = !DILocation(line: 214, column: 13, scope: !15916)
!15924 = !DILocation(line: 215, column: 1, scope: !15916)
!15925 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2288, file: !2288, line: 183, type: !15926, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15930)
!15926 = !DISubroutineType(types: !15927)
!15927 = !{!1497, !15928}
!15928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15929, size: 32)
!15929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2262)
!15930 = !{!15931, !15932, !15933, !15935}
!15931 = !DILocalVariable(name: "timeout", arg: 1, scope: !15925, file: !2288, line: 183, type: !15928)
!15932 = !DILocalVariable(name: "ticks", scope: !15925, file: !2288, line: 185, type: !1497)
!15933 = !DILocalVariable(name: "__i", scope: !15934, file: !2288, line: 187, type: !15612)
!15934 = distinct !DILexicalBlock(scope: !15925, file: !2288, line: 187, column: 2)
!15935 = !DILocalVariable(name: "__key", scope: !15934, file: !2288, line: 187, type: !15612)
!15936 = !DILocation(line: 0, scope: !15925)
!15937 = !DILocation(line: 0, scope: !15934)
!15938 = !DILocation(line: 0, scope: !15634, inlinedAt: !15939)
!15939 = distinct !DILocation(line: 187, column: 2, scope: !15934)
!15940 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !15939)
!15942 = !DILocation(line: 0, scope: !15643, inlinedAt: !15941)
!15943 = !DILocation(line: 188, column: 11, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15945, file: !2288, line: 187, column: 24)
!15945 = distinct !DILexicalBlock(scope: !15934, file: !2288, line: 187, column: 2)
!15946 = !DILocation(line: 0, scope: !15702, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 187, column: 2, scope: !15945)
!15948 = !DILocation(line: 0, scope: !15710, inlinedAt: !15949)
!15949 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !15947)
!15950 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !15949)
!15951 = !DILocation(line: 191, column: 2, scope: !15925)
!15952 = distinct !DISubprogram(name: "timeout_rem", scope: !2288, file: !2288, line: 165, type: !15926, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15953)
!15953 = !{!15954, !15955, !15956}
!15954 = !DILocalVariable(name: "timeout", arg: 1, scope: !15952, file: !2288, line: 165, type: !15928)
!15955 = !DILocalVariable(name: "ticks", scope: !15952, file: !2288, line: 167, type: !1497)
!15956 = !DILocalVariable(name: "t", scope: !15957, file: !2288, line: 173, type: !2261)
!15957 = distinct !DILexicalBlock(scope: !15952, file: !2288, line: 173, column: 2)
!15958 = !DILocation(line: 0, scope: !15952)
!15959 = !DILocation(line: 169, column: 6, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15952, file: !2288, line: 169, column: 6)
!15961 = !DILocation(line: 169, column: 6, scope: !15952)
!15962 = !DILocation(line: 173, column: 28, scope: !15957)
!15963 = !DILocation(line: 0, scope: !15957)
!15964 = !DILocation(line: 173, column: 39, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15957, file: !2288, line: 173, column: 2)
!15966 = !DILocation(line: 173, column: 2, scope: !15957)
!15967 = !DILocation(line: 174, column: 15, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15965, file: !2288, line: 173, column: 61)
!15969 = !DILocation(line: 174, column: 9, scope: !15968)
!15970 = !DILocation(line: 175, column: 15, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15968, file: !2288, line: 175, column: 7)
!15972 = !DILocation(line: 175, column: 7, scope: !15968)
!15973 = !DILocation(line: 173, column: 52, scope: !15965)
!15974 = distinct !{!15974, !15966, !15975}
!15975 = !DILocation(line: 178, column: 2, scope: !15957)
!15976 = !DILocation(line: 180, column: 17, scope: !15952)
!15977 = !DILocation(line: 180, column: 15, scope: !15952)
!15978 = !DILocation(line: 180, column: 2, scope: !15952)
!15979 = !DILocation(line: 181, column: 1, scope: !15952)
!15980 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13290, file: !13290, line: 35, type: !15981, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15983)
!15981 = !DISubroutineType(types: !15982)
!15982 = !{!211, !15928}
!15983 = !{!15984}
!15984 = !DILocalVariable(name: "to", arg: 1, scope: !15980, file: !13290, line: 35, type: !15928)
!15985 = !DILocation(line: 0, scope: !15980)
!15986 = !DILocation(line: 37, column: 35, scope: !15980)
!15987 = !DILocation(line: 37, column: 10, scope: !15980)
!15988 = !DILocation(line: 37, column: 9, scope: !15980)
!15989 = !DILocation(line: 37, column: 2, scope: !15980)
!15990 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2288, file: !2288, line: 194, type: !15926, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !15991)
!15991 = !{!15992, !15993, !15994, !15996}
!15992 = !DILocalVariable(name: "timeout", arg: 1, scope: !15990, file: !2288, line: 194, type: !15928)
!15993 = !DILocalVariable(name: "ticks", scope: !15990, file: !2288, line: 196, type: !1497)
!15994 = !DILocalVariable(name: "__i", scope: !15995, file: !2288, line: 198, type: !15612)
!15995 = distinct !DILexicalBlock(scope: !15990, file: !2288, line: 198, column: 2)
!15996 = !DILocalVariable(name: "__key", scope: !15995, file: !2288, line: 198, type: !15612)
!15997 = !DILocation(line: 0, scope: !15990)
!15998 = !DILocation(line: 0, scope: !15995)
!15999 = !DILocation(line: 0, scope: !15634, inlinedAt: !16000)
!16000 = distinct !DILocation(line: 198, column: 2, scope: !15995)
!16001 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !16000)
!16003 = !DILocation(line: 0, scope: !15643, inlinedAt: !16002)
!16004 = !DILocation(line: 199, column: 11, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16006, file: !2288, line: 198, column: 24)
!16006 = distinct !DILexicalBlock(scope: !15995, file: !2288, line: 198, column: 2)
!16007 = !DILocation(line: 199, column: 23, scope: !16005)
!16008 = !DILocation(line: 0, scope: !15702, inlinedAt: !16009)
!16009 = distinct !DILocation(line: 198, column: 2, scope: !16006)
!16010 = !DILocation(line: 0, scope: !15710, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !16009)
!16012 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !16011)
!16013 = !DILocation(line: 199, column: 21, scope: !16005)
!16014 = !DILocation(line: 202, column: 2, scope: !15990)
!16015 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2288, file: !2288, line: 205, type: !15718, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !16016)
!16016 = !{!16017, !16018, !16020}
!16017 = !DILocalVariable(name: "ret", scope: !16015, file: !2288, line: 207, type: !641)
!16018 = !DILocalVariable(name: "__i", scope: !16019, file: !2288, line: 209, type: !15612)
!16019 = distinct !DILexicalBlock(scope: !16015, file: !2288, line: 209, column: 2)
!16020 = !DILocalVariable(name: "__key", scope: !16019, file: !2288, line: 209, type: !15612)
!16021 = !DILocation(line: 0, scope: !16015)
!16022 = !DILocation(line: 0, scope: !16019)
!16023 = !DILocation(line: 0, scope: !15634, inlinedAt: !16024)
!16024 = distinct !DILocation(line: 209, column: 2, scope: !16019)
!16025 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !16026)
!16026 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !16024)
!16027 = !DILocation(line: 0, scope: !15643, inlinedAt: !16026)
!16028 = !DILocation(line: 210, column: 9, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !16030, file: !2288, line: 209, column: 24)
!16030 = distinct !DILexicalBlock(scope: !16019, file: !2288, line: 209, column: 2)
!16031 = !DILocation(line: 0, scope: !15702, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 209, column: 2, scope: !16030)
!16033 = !DILocation(line: 0, scope: !15710, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !16032)
!16035 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !16034)
!16036 = !DILocation(line: 212, column: 2, scope: !16015)
!16037 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2288, file: !2288, line: 215, type: !10318, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !16038)
!16038 = !{!16039, !16040, !16041, !16043, !16044, !16047, !16048}
!16039 = !DILocalVariable(name: "ticks", arg: 1, scope: !16037, file: !2288, line: 215, type: !641)
!16040 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16037, file: !2288, line: 215, type: !211)
!16041 = !DILocalVariable(name: "__i", scope: !16042, file: !2288, line: 217, type: !15612)
!16042 = distinct !DILexicalBlock(scope: !16037, file: !2288, line: 217, column: 2)
!16043 = !DILocalVariable(name: "__key", scope: !16042, file: !2288, line: 217, type: !15612)
!16044 = !DILocalVariable(name: "next_to", scope: !16045, file: !2288, line: 218, type: !103)
!16045 = distinct !DILexicalBlock(scope: !16046, file: !2288, line: 217, column: 24)
!16046 = distinct !DILexicalBlock(scope: !16042, file: !2288, line: 217, column: 2)
!16047 = !DILocalVariable(name: "sooner", scope: !16045, file: !2288, line: 219, type: !211)
!16048 = !DILocalVariable(name: "imminent", scope: !16045, file: !2288, line: 221, type: !211)
!16049 = !DILocation(line: 0, scope: !16037)
!16050 = !DILocation(line: 0, scope: !16042)
!16051 = !DILocation(line: 0, scope: !15634, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 217, column: 2, scope: !16042)
!16053 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !16052)
!16055 = !DILocation(line: 0, scope: !15643, inlinedAt: !16054)
!16056 = !DILocation(line: 218, column: 17, scope: !16045)
!16057 = !DILocation(line: 0, scope: !16045)
!16058 = !DILocation(line: 221, column: 27, scope: !16045)
!16059 = !DILocation(line: 233, column: 17, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16045, file: !2288, line: 233, column: 7)
!16061 = !DILocation(line: 234, column: 26, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16060, file: !2288, line: 233, column: 56)
!16063 = !DILocation(line: 234, column: 4, scope: !16062)
!16064 = !DILocation(line: 235, column: 3, scope: !16062)
!16065 = !DILocation(line: 0, scope: !15702, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 217, column: 2, scope: !16046)
!16067 = !DILocation(line: 0, scope: !15710, inlinedAt: !16068)
!16068 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !16066)
!16069 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !16068)
!16070 = !DILocation(line: 237, column: 1, scope: !16037)
!16071 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2288, file: !2288, line: 239, type: !16072, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !16074)
!16072 = !DISubroutineType(types: !16073)
!16073 = !{null, !641}
!16074 = !{!16075, !16076, !16077, !16079}
!16075 = !DILocalVariable(name: "ticks", arg: 1, scope: !16071, file: !2288, line: 239, type: !641)
!16076 = !DILocalVariable(name: "key", scope: !16071, file: !2288, line: 245, type: !15612)
!16077 = !DILocalVariable(name: "t", scope: !16078, file: !2288, line: 262, type: !2261)
!16078 = distinct !DILexicalBlock(scope: !16071, file: !2288, line: 261, column: 67)
!16079 = !DILocalVariable(name: "dt", scope: !16078, file: !2288, line: 263, type: !103)
!16080 = !DILocation(line: 0, scope: !16071)
!16081 = !DILocation(line: 242, column: 2, scope: !16071)
!16082 = !DILocation(line: 0, scope: !15634, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 245, column: 25, scope: !16071)
!16084 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !16085)
!16085 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !16083)
!16086 = !DILocation(line: 0, scope: !15643, inlinedAt: !16085)
!16087 = !DILocation(line: 261, column: 9, scope: !16071)
!16088 = !DILocation(line: 261, column: 17, scope: !16071)
!16089 = !DILocation(line: 261, column: 25, scope: !16071)
!16090 = !DILocation(line: 261, column: 37, scope: !16071)
!16091 = !DILocation(line: 261, column: 47, scope: !16071)
!16092 = !DILocation(line: 261, column: 44, scope: !16071)
!16093 = !DILocation(line: 261, column: 2, scope: !16071)
!16094 = !DILocation(line: 0, scope: !16078)
!16095 = !DILocation(line: 263, column: 12, scope: !16078)
!16096 = !DILocation(line: 265, column: 16, scope: !16078)
!16097 = !DILocation(line: 265, column: 13, scope: !16078)
!16098 = !DILocation(line: 266, column: 13, scope: !16078)
!16099 = !DILocation(line: 267, column: 3, scope: !16078)
!16100 = !DILocation(line: 0, scope: !15702, inlinedAt: !16101)
!16101 = distinct !DILocation(line: 269, column: 3, scope: !16078)
!16102 = !DILocation(line: 0, scope: !15710, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !16101)
!16104 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !16103)
!16105 = !DILocation(line: 270, column: 6, scope: !16078)
!16106 = !DILocation(line: 270, column: 3, scope: !16078)
!16107 = !DILocation(line: 0, scope: !15634, inlinedAt: !16108)
!16108 = distinct !DILocation(line: 271, column: 9, scope: !16078)
!16109 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !16110)
!16110 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !16108)
!16111 = !DILocation(line: 0, scope: !15643, inlinedAt: !16110)
!16112 = !DILocation(line: 272, column: 22, scope: !16078)
!16113 = distinct !{!16113, !16093, !16114}
!16114 = !DILocation(line: 273, column: 2, scope: !16071)
!16115 = !DILocation(line: 276, column: 19, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16117, file: !2288, line: 275, column: 23)
!16117 = distinct !DILexicalBlock(scope: !16071, file: !2288, line: 275, column: 6)
!16118 = !DILocation(line: 277, column: 2, scope: !16116)
!16119 = !DILocation(line: 279, column: 15, scope: !16071)
!16120 = !DILocation(line: 279, column: 12, scope: !16071)
!16121 = !DILocation(line: 280, column: 21, scope: !16071)
!16122 = !DILocation(line: 282, column: 24, scope: !16071)
!16123 = !DILocation(line: 282, column: 2, scope: !16071)
!16124 = !DILocation(line: 0, scope: !15702, inlinedAt: !16125)
!16125 = distinct !DILocation(line: 284, column: 2, scope: !16071)
!16126 = !DILocation(line: 0, scope: !15710, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !16125)
!16128 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !16127)
!16129 = !DILocation(line: 285, column: 1, scope: !16071)
!16130 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2288, file: !2288, line: 287, type: !16131, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !16133)
!16131 = !DISubroutineType(types: !16132)
!16132 = !{!330}
!16133 = !{!16134, !16135, !16137}
!16134 = !DILocalVariable(name: "t", scope: !16130, file: !2288, line: 289, type: !163)
!16135 = !DILocalVariable(name: "__i", scope: !16136, file: !2288, line: 291, type: !15612)
!16136 = distinct !DILexicalBlock(scope: !16130, file: !2288, line: 291, column: 2)
!16137 = !DILocalVariable(name: "__key", scope: !16136, file: !2288, line: 291, type: !15612)
!16138 = !DILocation(line: 0, scope: !16130)
!16139 = !DILocation(line: 0, scope: !16136)
!16140 = !DILocation(line: 0, scope: !15634, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 291, column: 2, scope: !16136)
!16142 = !DILocation(line: 55, column: 2, scope: !15643, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 145, column: 10, scope: !15634, inlinedAt: !16141)
!16144 = !DILocation(line: 0, scope: !15643, inlinedAt: !16143)
!16145 = !DILocation(line: 292, column: 7, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16147, file: !2288, line: 291, column: 24)
!16147 = distinct !DILexicalBlock(scope: !16136, file: !2288, line: 291, column: 2)
!16148 = !DILocation(line: 292, column: 19, scope: !16146)
!16149 = !DILocation(line: 0, scope: !15702, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 291, column: 2, scope: !16147)
!16151 = !DILocation(line: 0, scope: !15710, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 215, column: 2, scope: !15702, inlinedAt: !16150)
!16153 = !DILocation(line: 95, column: 2, scope: !15710, inlinedAt: !16152)
!16154 = !DILocation(line: 292, column: 17, scope: !16146)
!16155 = !DILocation(line: 294, column: 2, scope: !16130)
!16156 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2288, file: !2288, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !162)
!16157 = !DILocation(line: 300, column: 19, scope: !16156)
!16158 = !DILocation(line: 300, column: 9, scope: !16156)
!16159 = !DILocation(line: 300, column: 2, scope: !16156)
!16160 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2288, file: !2288, line: 306, type: !16131, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !162)
!16161 = !DILocation(line: 308, column: 9, scope: !16160)
!16162 = !DILocation(line: 308, column: 2, scope: !16160)
!16163 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2288, file: !2288, line: 319, type: !6456, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !16164)
!16164 = !{!16165, !16166, !16167, !16168}
!16165 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16163, file: !2288, line: 319, type: !137)
!16166 = !DILocalVariable(name: "start_cycles", scope: !16163, file: !2288, line: 328, type: !137)
!16167 = !DILocalVariable(name: "cycles_to_wait", scope: !16163, file: !2288, line: 331, type: !137)
!16168 = !DILocalVariable(name: "current_cycles", scope: !16169, file: !2288, line: 338, type: !137)
!16169 = distinct !DILexicalBlock(scope: !16170, file: !2288, line: 337, column: 11)
!16170 = distinct !DILexicalBlock(scope: !16171, file: !2288, line: 337, column: 2)
!16171 = distinct !DILexicalBlock(scope: !16163, file: !2288, line: 337, column: 2)
!16172 = !DILocation(line: 0, scope: !16163)
!16173 = !DILocation(line: 322, column: 19, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16163, file: !2288, line: 322, column: 6)
!16175 = !DILocation(line: 322, column: 6, scope: !16163)
!16176 = !DILocation(line: 328, column: 26, scope: !16163)
!16177 = !DILocation(line: 333, column: 43, scope: !16163)
!16178 = !DILocation(line: 337, column: 2, scope: !16163)
!16179 = !DILocation(line: 338, column: 29, scope: !16169)
!16180 = !DILocation(line: 0, scope: !16169)
!16181 = !DILocation(line: 341, column: 23, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16169, file: !2288, line: 341, column: 7)
!16183 = !DILocation(line: 341, column: 39, scope: !16182)
!16184 = !DILocation(line: 349, column: 1, scope: !16163)
!16185 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !357, file: !357, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !162)
!16186 = !DILocation(line: 1677, column: 9, scope: !16185)
!16187 = !DILocation(line: 1677, column: 2, scope: !16185)
!16188 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16189, file: !16189, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !162)
!16189 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16190 = !DILocation(line: 26, column: 9, scope: !16188)
!16191 = !DILocation(line: 26, column: 2, scope: !16188)
!16192 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2288, file: !2288, line: 364, type: !16193, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !16195)
!16193 = !DISubroutineType(types: !16194)
!16194 = !{!163, !15602}
!16195 = !{!16196, !16197}
!16196 = !DILocalVariable(name: "timeout", arg: 1, scope: !16192, file: !2288, line: 364, type: !15602)
!16197 = !DILocalVariable(name: "dt", scope: !16192, file: !2288, line: 366, type: !1497)
!16198 = !DILocation(line: 0, scope: !16192)
!16199 = !DILocation(line: 368, column: 6, scope: !16192)
!16200 = !DILocation(line: 371, column: 10, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16202, file: !2288, line: 370, column: 47)
!16202 = distinct !DILexicalBlock(scope: !16203, file: !2288, line: 370, column: 13)
!16203 = distinct !DILexicalBlock(scope: !16192, file: !2288, line: 368, column: 6)
!16204 = !DILocation(line: 371, column: 3, scope: !16201)
!16205 = !DILocation(line: 376, column: 58, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16207, file: !2288, line: 376, column: 7)
!16207 = distinct !DILexicalBlock(scope: !16202, file: !2288, line: 372, column: 9)
!16208 = !DILocation(line: 376, column: 7, scope: !16207)
!16209 = !DILocation(line: 376, column: 43, scope: !16206)
!16210 = !DILocation(line: 377, column: 4, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16206, file: !2288, line: 376, column: 64)
!16212 = !DILocation(line: 379, column: 10, scope: !16207)
!16213 = !DILocation(line: 379, column: 33, scope: !16207)
!16214 = !DILocation(line: 379, column: 31, scope: !16207)
!16215 = !DILocation(line: 379, column: 3, scope: !16207)
!16216 = !DILocation(line: 0, scope: !16203)
!16217 = !DILocation(line: 381, column: 1, scope: !16192)
!16218 = distinct !DISubprogram(name: "boot_banner", scope: !16219, file: !16219, line: 26, type: !2885, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !162)
!16219 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16220 = !DILocation(line: 34, column: 2, scope: !16218)
!16221 = !DILocation(line: 36, column: 1, scope: !16218)
